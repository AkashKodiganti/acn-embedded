ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ssl.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MakeWordFromHash,"ax",%progbits
  18              		.align	1
  19              		.code	16
  20              		.thumb_func
  21              		.type	MakeWordFromHash, %function
  22              	MakeWordFromHash:
  23              	.LFB60:
  24              		.file 1 "..\\acn-sdk-c\\src\\wolfSSL\\src\\ssl.c"
   1:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* ssl.c
   2:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  *
   3:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * Copyright (C) 2006-2016 wolfSSL Inc.
   4:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  *
   5:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * This file is part of wolfSSL.
   6:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  *
   7:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * wolfSSL is free software; you can redistribute it and/or modify
   8:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * it under the terms of the GNU General Public License as published by
   9:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * (at your option) any later version.
  11:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  *
  12:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * wolfSSL is distributed in the hope that it will be useful,
  13:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * GNU General Public License for more details.
  16:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  *
  17:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * You should have received a copy of the GNU General Public License
  18:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * along with this program; if not, write to the Free Software
  19:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA
  20:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  */
  21:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  22:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  23:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CONFIG_H
  24:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <config.h>
  25:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
  26:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  27:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #include <wolfssl/wolfcrypt/settings.h>
  28:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  29:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFCRYPT_ONLY
  30:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  31:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ERRNO_H
  32:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <errno.h>
  33:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 2


  34:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  35:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #include <wolfssl/internal.h>
  36:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #include <wolfssl/error-ssl.h>
  37:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #include <wolfssl/wolfcrypt/coding.h>
  38:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef NO_INLINE
  39:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/misc.h>
  40:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
  41:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfcrypt/src/misc.c>
  42:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
  43:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  44:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  45:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_ALLOW_NO_SUITES
  46:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #if defined(NO_DH) && !defined(HAVE_ECC) && !defined(WOLFSSL_STATIC_RSA) \
  47:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                   && !defined(WOLFSSL_STATIC_DH) && !defined(WOLFSSL_STATIC_PSK)
  48:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #error "No cipher suites defined because DH disabled, ECC disabled, and no static suites de
  49:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
  50:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
  51:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  52:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) || \
  53:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               defined(WOLFSSL_KEY_GEN)
  54:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/evp.h>
  55:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* openssl headers end, wolfssl internal headers next */
  56:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/wc_encrypt.h>
  57:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
  58:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  59:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef OPENSSL_EXTRA
  60:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* openssl headers begin */
  61:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/hmac.h>
  62:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/crypto.h>
  63:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/des.h>
  64:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/bn.h>
  65:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/dh.h>
  66:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/rsa.h>
  67:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/pem.h>
  68:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/ec.h>
  69:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/ec25519.h>
  70:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/ed25519.h>
  71:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/ecdsa.h>
  72:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/openssl/ecdh.h>
  73:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* openssl headers end, wolfssl internal headers next */
  74:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/hmac.h>
  75:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/random.h>
  76:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/des3.h>
  77:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/md4.h>
  78:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/md5.h>
  79:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/arc4.h>
  80:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/idea.h>
  81:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/curve25519.h>
  82:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #include <wolfssl/wolfcrypt/ed25519.h>
  83:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_STUNNEL
  84:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #include <wolfssl/openssl/ocsp.h>
  85:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* WITH_STUNNEL */
  86:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SHA512
  87:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #include <wolfssl/wolfcrypt/sha512.h>
  88:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
  89:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
  90:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 3


  91:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_FILESYSTEM
  92:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #if !defined(USE_WINDOWS_API) && !defined(NO_WOLFSSL_DIR) \
  93:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             && !defined(EBSNET)
  94:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #include <dirent.h>
  95:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #include <sys/stat.h>
  96:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
  97:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef EBSNET
  98:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #include "vfapi.h"
  99:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #include "vfile.h"
 100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
 101:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_FILESYSTEM */
 102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 103:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef TRUE
 104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define TRUE  1
 105:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 106:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef FALSE
 107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define FALSE 0
 108:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 109:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 110:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_HAVE_MIN
 111:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #define WOLFSSL_HAVE_MIN
 112:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static INLINE word32 min(word32 a, word32 b)
 114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return a > b ? b : a;
 116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 117:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 118:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSSL_HAVE_MIN */
 119:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 120:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_DTLS) && !defined(WOLFSSL_HAVE_MAX)
 121:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #define WOLFSSL_HAVE_MAX
 122:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static INLINE word32 max(word32 a, word32 b)
 124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 125:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return a > b ? a : b;
 126:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 127:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 128:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_DTLS && !WOLFSSL_HAVE_MAX */
 129:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 130:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 131:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
 132:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** char* mystrnstr(const char* s1, const char* s2, unsigned int n)
 133:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned int s2_len = (unsigned int)XSTRLEN(s2);
 135:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (s2_len == 0)
 137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return (char*)s1;
 138:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (n >= s2_len && s1[0]) {
 140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (s1[0] == s2[0])
 141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (XMEMCMP(s1, s2, s2_len) == 0)
 142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return (char*)s1;
 143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         s1++;
 144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         n--;
 145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 4


 148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 149:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 151:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 152:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* prevent multiple mutex initializations */
 153:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static volatile int initRefCount = 0;
 154:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static wolfSSL_Mutex count_mutex;   /* init ref count mutex */
 155:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 156:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 157:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_CTX* wolfSSL_CTX_new(WOLFSSL_METHOD* method)
 158:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CTX* ctx = NULL;
 160:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("WOLFSSL_CTX_new");
 162:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (initRefCount == 0) {
 164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* user no longer forced to call Init themselves */
 165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int ret = wolfSSL_Init();
 166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != SSL_SUCCESS) {
 167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("wolfSSL_Init failed");
 168:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_LEAVE("WOLFSSL_CTX_new", 0);
 169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
 170:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 171:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 172:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (method == NULL)
 174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ctx;
 175:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx = (WOLFSSL_CTX*) XMALLOC(sizeof(WOLFSSL_CTX), 0, DYNAMIC_TYPE_CTX);
 177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx) {
 178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (InitSSL_Ctx(ctx, method) < 0) {
 179:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Init CTX failed");
 180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_CTX_free(ctx);
 181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx = NULL;
 182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
 185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Alloc CTX failed, method freed");
 186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(method, NULL, DYNAMIC_TYPE_METHOD);
 187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 188:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("WOLFSSL_CTX_new", 0);
 190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ctx;
 191:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 192:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 193:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 194:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_CTX_free(WOLFSSL_CTX* ctx)
 195:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_CTX_free");
 197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
 198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeSSL_Ctx(ctx);
 199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_CTX_free", 0);
 200:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 201:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 202:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 203:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL* wolfSSL_new(WOLFSSL_CTX* ctx)
 204:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 5


 205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL* ssl = NULL;
 206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = 0;
 207:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 208:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ret;
 209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_new");
 210:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl;
 213:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl = (WOLFSSL*) XMALLOC(sizeof(WOLFSSL), ctx->heap,DYNAMIC_TYPE_SSL);
 215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if ( (ret = InitSSL(ssl, ctx)) < 0) {
 217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeSSL(ssl);
 218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl = 0;
 219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 220:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_new", ret);
 222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl;
 223:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 224:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 225:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 226:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_free(WOLFSSL* ssl)
 227:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_free");
 229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeSSL(ssl);
 231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_free", 0);
 232:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 233:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 234:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_POLY1305
 235:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* set if to use old poly 1 for yes 0 to use new poly */
 236:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_use_old_poly(WOLFSSL* ssl, int value)
 237:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 238:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_use_old_poly");
 239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("Warning SSL connection auto detects old/new and this function"
 240:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             "is depriciated");
 241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.oldPoly = (word16)value;
 242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_use_old_poly", 0);
 243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
 244:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 245:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 246:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 247:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_fd(WOLFSSL* ssl, int fd)
 248:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_set_fd");
 250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->rfd = fd;      /* not used directly to allow IO callbacks */
 251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->wfd = fd;
 252:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->IOCB_ReadCtx  = &ssl->rfd;
 254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->IOCB_WriteCtx = &ssl->wfd;
 255:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_DTLS
 257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.dtls) {
 258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->IOCB_ReadCtx = &ssl->buffers.dtlsCtx;
 259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->IOCB_WriteCtx = &ssl->buffers.dtlsCtx;
 260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.dtlsCtx.fd = fd;
 261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 6


 262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
 263:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_set_fd", SSL_SUCCESS);
 265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 267:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 268:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 269:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /**
 270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****   * Get the name of cipher at priority level passed in.
 271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****   */
 272:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** char* wolfSSL_get_cipher_list(int priority)
 273:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* const* ciphers = GetCipherNames();
 275:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (priority >= GetCipherNamesSize() || priority < 0) {
 277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 279:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (char*)ciphers[priority];
 281:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 282:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 283:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 284:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_ciphers(char* buf, int len)
 285:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* const* ciphers = GetCipherNames();
 287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  totalInc = 0;
 288:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  step     = 0;
 289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char delim    = ':';
 290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  size     = GetCipherNamesSize();
 291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  i;
 292:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (buf == NULL || len <= 0)
 294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 295:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* Add each member to the buffer delimited by a : */
 297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < size; i++) {
 298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         step = (int)(XSTRLEN(ciphers[i]) + 1);  /* delimiter */
 299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         totalInc += step;
 300:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 301:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Check to make sure buf is large enough and will not overflow */
 302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (totalInc < len) {
 303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCPY(buf, ciphers[i], XSTRLEN(ciphers[i]));
 304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             buf += XSTRLEN(ciphers[i]);
 305:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (i < size - 1)
 307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 *buf++ = delim;
 308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
 309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 *buf++ = '\0';
 310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
 312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BUFFER_E;
 313:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 315:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 316:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 317:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 318:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_fd(const WOLFSSL* ssl)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 7


 319:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_fd");
 321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_get_fd", ssl->rfd);
 322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->rfd;
 323:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 324:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 325:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 326:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_using_nonblock(WOLFSSL* ssl)
 327:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_get_using_nonblock");
 329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_get_using_nonblock", ssl->options.usingNonblock);
 330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->options.usingNonblock;
 331:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 332:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 333:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 334:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls(WOLFSSL* ssl)
 335:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->options.dtls;
 337:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 338:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 339:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 340:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
 341:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_set_using_nonblock(WOLFSSL* ssl, int nonblock)
 342:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_set_using_nonblock");
 344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.usingNonblock = (nonblock != 0);
 345:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 346:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 347:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 348:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls_set_peer(WOLFSSL* ssl, void* peer, unsigned int peerSz)
 349:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 350:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
 351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void* sa = (void*)XMALLOC(peerSz, ssl->heap, DYNAMIC_TYPE_SOCKADDR);
 352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sa != NULL) {
 353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.dtlsCtx.peer.sa != NULL)
 354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(ssl->buffers.dtlsCtx.peer.sa,ssl->heap,DYNAMIC_TYPE_SOCKADDR);
 355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(sa, peer, peerSz);
 356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->buffers.dtlsCtx.peer.sa = sa;
 357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->buffers.dtlsCtx.peer.sz = peerSz;
 358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
 359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
 361:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
 362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
 363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)peer;
 364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)peerSz;
 365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_NOT_IMPLEMENTED;
 366:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 367:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 368:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 369:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls_get_peer(WOLFSSL* ssl, void* peer, unsigned int* peerSz)
 370:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 371:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
 372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (peer != NULL && peerSz != NULL
 373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             && *peerSz >= ssl->buffers.dtlsCtx.peer.sz) {
 374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *peerSz = ssl->buffers.dtlsCtx.peer.sz;
 375:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(peer, ssl->buffers.dtlsCtx.peer.sa, *peerSz);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 8


 376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
 377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
 379:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
 380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
 381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)peer;
 382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)peerSz;
 383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_NOT_IMPLEMENTED;
 384:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 385:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 386:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_LEANPSK */
 387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 388:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 389:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return underlying connect or accept, SSL_SUCCESS on ok */
 390:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_negotiate(WOLFSSL* ssl)
 391:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int err = SSL_FATAL_ERROR;
 393:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_negotiate");
 395:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_SERVER
 396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side == WOLFSSL_SERVER_END)
 397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         err = wolfSSL_accept(ssl);
 398:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 399:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 400:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
 401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side == WOLFSSL_CLIENT_END)
 402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         err = wolfSSL_connect(ssl);
 403:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 404:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_negotiate", err);
 406:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return err;
 408:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 409:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 410:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 411:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
 412:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* object size based on build */
 413:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetObjectSize(void)
 414:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 415:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SHOW_SIZES
 416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof suites           = %lu\n", sizeof(Suites));
 417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof ciphers(2)       = %lu\n", sizeof(Ciphers));
 418:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RC4
 419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof arc4         = %lu\n", sizeof(Arc4));
 420:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof aes          = %lu\n", sizeof(Aes));
 422:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
 423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof des3         = %lu\n", sizeof(Des3));
 424:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 425:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RABBIT
 426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof rabbit       = %lu\n", sizeof(Rabbit));
 427:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 428:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CHACHA
 429:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof chacha       = %lu\n", sizeof(ChaCha));
 430:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof cipher specs     = %lu\n", sizeof(CipherSpecs));
 432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof keys             = %lu\n", sizeof(Keys));
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 9


 433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof Hashes(2)        = %lu\n", sizeof(Hashes));
 434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
 435:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof MD5          = %lu\n", sizeof(Md5));
 436:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 437:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
 438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof SHA          = %lu\n", sizeof(Sha));
 439:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 440:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA256
 441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof SHA256       = %lu\n", sizeof(Sha256));
 442:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 443:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA384
 444:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof SHA384       = %lu\n", sizeof(Sha384));
 445:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 446:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA384
 447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("    sizeof SHA512       = %lu\n", sizeof(Sha512));
 448:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof Buffers          = %lu\n", sizeof(Buffers));
 450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof Options          = %lu\n", sizeof(Options));
 451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof Arrays           = %lu\n", sizeof(Arrays));
 452:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
 453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof RsaKey           = %lu\n", sizeof(RsaKey));
 454:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 455:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ECC
 456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof ecc_key          = %lu\n", sizeof(ecc_key));
 457:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof WOLFSSL_CIPHER    = %lu\n", sizeof(WOLFSSL_CIPHER));
 459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof WOLFSSL_SESSION   = %lu\n", sizeof(WOLFSSL_SESSION));
 460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof WOLFSSL           = %lu\n", sizeof(WOLFSSL));
 461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     printf("sizeof WOLFSSL_CTX       = %lu\n", sizeof(WOLFSSL_CTX));
 462:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 463:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return sizeof(WOLFSSL);
 465:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 466:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 467:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 468:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 469:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DH
 470:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* server Diffie-Hellman parameters, SSL_SUCCESS on ok */
 471:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetTmpDH(WOLFSSL* ssl, const unsigned char* p, int pSz,
 472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     const unsigned char* g, int gSz)
 473:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word16 havePSK = 0;
 475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word16 haveRSA = 1;
 476:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetTmpDH");
 478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || p == NULL || g == NULL) return BAD_FUNC_ARG;
 479:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pSz < ssl->options.minDhKeySz)
 481:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return DH_KEY_SIZE_E;
 482:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side != WOLFSSL_SERVER_END)
 484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SIDE_ERROR;
 485:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 486:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->buffers.serverDH_P.buffer && ssl->buffers.weOwnDH)
 487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(ssl->buffers.serverDH_P.buffer, ssl->ctx->heap, DYNAMIC_TYPE_DH);
 488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->buffers.serverDH_G.buffer && ssl->buffers.weOwnDH)
 489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(ssl->buffers.serverDH_G.buffer, ssl->ctx->heap, DYNAMIC_TYPE_DH);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 10


 490:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.weOwnDH = 1;  /* SSL owns now */
 492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.serverDH_P.buffer = (byte*)XMALLOC(pSz, ssl->ctx->heap,
 493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                     DYNAMIC_TYPE_DH);
 494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->buffers.serverDH_P.buffer == NULL)
 495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
 496:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.serverDH_G.buffer = (byte*)XMALLOC(gSz, ssl->ctx->heap,
 498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                     DYNAMIC_TYPE_DH);
 499:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->buffers.serverDH_G.buffer == NULL) {
 500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(ssl->buffers.serverDH_P.buffer, ssl->ctx->heap, DYNAMIC_TYPE_DH);
 501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
 502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 503:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.serverDH_P.length = pSz;
 505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.serverDH_G.length = gSz;
 506:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 507:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(ssl->buffers.serverDH_P.buffer, p, pSz);
 508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(ssl->buffers.serverDH_G.buffer, g, gSz);
 509:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 510:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.haveDH = 1;
 511:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_PSK
 512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         havePSK = ssl->options.havePSK;
 513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
 514:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef NO_RSA
 515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         haveRSA = 0;
 516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
 517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     InitSuites(ssl->suites, ssl->version, haveRSA, havePSK, ssl->options.haveDH,
 518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 519:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                ssl->options.haveECC, ssl->options.haveStaticECC,
 520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                ssl->options.side);
 521:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_SetTmpDH", 0);
 523:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 526:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* server ctx Diffie-Hellman parameters, SSL_SUCCESS on ok */
 527:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetTmpDH(WOLFSSL_CTX* ctx, const unsigned char* p, int pSz,
 528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                          const unsigned char* g, int gSz)
 529:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_SetTmpDH");
 531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || p == NULL || g == NULL) return BAD_FUNC_ARG;
 532:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pSz < ctx->minDhKeySz)
 534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return DH_KEY_SIZE_E;
 535:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(ctx->serverDH_P.buffer, ctx->heap, DYNAMIC_TYPE_DH);
 537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(ctx->serverDH_G.buffer, ctx->heap, DYNAMIC_TYPE_DH);
 538:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->serverDH_P.buffer = (byte*)XMALLOC(pSz, ctx->heap,DYNAMIC_TYPE_DH);
 540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx->serverDH_P.buffer == NULL)
 541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return MEMORY_E;
 542:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->serverDH_G.buffer = (byte*)XMALLOC(gSz, ctx->heap,DYNAMIC_TYPE_DH);
 544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx->serverDH_G.buffer == NULL) {
 545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(ctx->serverDH_P.buffer, ctx->heap, DYNAMIC_TYPE_DH);
 546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 11


 547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 548:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->serverDH_P.length = pSz;
 550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->serverDH_G.length = gSz;
 551:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(ctx->serverDH_P.buffer, p, pSz);
 553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(ctx->serverDH_G.buffer, g, gSz);
 554:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->haveDH = 1;
 556:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_CTX_SetTmpDH", 0);
 558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 559:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 560:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 561:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 562:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetMinDhKey_Sz(WOLFSSL_CTX* ctx, word16 keySz)
 563:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || keySz > 16000 || keySz % 8 != 0)
 565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 566:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->minDhKeySz = keySz / 8;
 568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 569:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 570:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 571:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 572:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetMinDhKey_Sz(WOLFSSL* ssl, word16 keySz)
 573:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || keySz > 16000 || keySz % 8 != 0)
 575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 576:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.minDhKeySz = keySz / 8;
 578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 579:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 580:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 581:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 582:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetDhKey_Sz(WOLFSSL* ssl)
 583:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (ssl->options.dhKeySz * 8);
 588:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 589:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 590:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_DH */
 591:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 593:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_write(WOLFSSL* ssl, const void* data, int sz)
 594:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 595:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
 596:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_write()");
 598:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || data == NULL || sz < 0)
 600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 601:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 602:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ERRNO_H
 603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     errno = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 12


 604:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 605:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = SendData(ssl, data, sz);
 607:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_write()", ret);
 609:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0)
 611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
 614:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 615:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 616:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int wolfSSL_read_internal(WOLFSSL* ssl, void* data, int sz, int peek)
 618:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
 620:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 621:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_read_internal()");
 622:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || data == NULL || sz < 0)
 624:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 625:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 626:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ERRNO_H
 627:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         errno = 0;
 628:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 629:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
 630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.dtls)
 631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->dtls_expected_rx = max(sz + 100, MAX_MTU);
 632:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 633:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_MAX_FRAGMENT
 635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = ReceiveData(ssl, (byte*)data,
 636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                       min(sz, min(ssl->max_fragment, OUTPUT_RECORD_SIZE)),peek);
 637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
 638:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = ReceiveData(ssl, (byte*)data, min(sz, OUTPUT_RECORD_SIZE), peek);
 639:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 640:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_read_internal()", ret);
 642:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0)
 644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 645:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
 647:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 648:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 649:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 650:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_peek(WOLFSSL* ssl, void* data, int sz)
 651:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_peek()");
 653:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_read_internal(ssl, data, sz, TRUE);
 655:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 656:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 657:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 658:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_read(WOLFSSL* ssl, void* data, int sz)
 659:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_read()");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 13


 661:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_read_internal(ssl, data, sz, FALSE);
 663:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 664:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 665:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 666:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CAVIUM
 667:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 668:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* let's use cavium, SSL_SUCCESS on ok */
 669:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseCavium(WOLFSSL* ssl, int devId)
 670:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 673:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 674:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->devId = devId;
 675:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 677:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 678:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 679:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 680:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* let's use cavium, SSL_SUCCESS on ok */
 681:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseCavium(WOLFSSL_CTX* ctx, int devId)
 682:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 685:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 686:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->devId = devId;
 687:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 689:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 690:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 691:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 692:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_CAVIUM */
 693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 694:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SNI
 695:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 696:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseSNI(WOLFSSL* ssl, byte type, const void* data, word16 size)
 697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 699:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 700:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseSNI(&ssl->extensions, type, data, size);
 702:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 703:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 704:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseSNI(WOLFSSL_CTX* ctx, byte type, const void* data,
 706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                     word16 size)
 707:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 710:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseSNI(&ctx->extensions, type, data, size);
 712:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 713:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 714:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_SERVER
 715:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 716:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_SNI_SetOptions(WOLFSSL* ssl, byte type, byte options)
 717:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 14


 718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl && ssl->extensions)
 719:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         TLSX_SNI_SetOptions(ssl->extensions, type, options);
 720:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 721:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 722:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 723:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_CTX_SNI_SetOptions(WOLFSSL_CTX* ctx, byte type, byte options)
 724:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx && ctx->extensions)
 726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         TLSX_SNI_SetOptions(ctx->extensions, type, options);
 727:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 728:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 729:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 730:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** byte wolfSSL_SNI_Status(WOLFSSL* ssl, byte type)
 731:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_SNI_Status(ssl ? ssl->extensions : NULL, type);
 733:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 734:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 735:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 736:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** word16 wolfSSL_SNI_GetRequest(WOLFSSL* ssl, byte type, void** data)
 737:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (data)
 739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *data = NULL;
 740:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 741:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl && ssl->extensions)
 742:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return TLSX_SNI_GetRequest(ssl->extensions, type, data);
 743:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
 745:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 746:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 747:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 748:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SNI_GetFromBuffer(const byte* clientHello, word32 helloSz,
 749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               byte type, byte* sni, word32* inOutSz)
 750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 751:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (clientHello && helloSz > 0 && sni && inOutSz && *inOutSz > 0)
 752:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return TLSX_SNI_GetFromBuffer(clientHello, helloSz, type, sni, inOutSz);
 753:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 754:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BAD_FUNC_ARG;
 755:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 757:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_SERVER */
 758:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 759:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_SNI */
 760:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 761:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 762:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_MAX_FRAGMENT
 763:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
 764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 765:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseMaxFragment(WOLFSSL* ssl, byte mfl)
 766:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 769:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseMaxFragment(&ssl->extensions, mfl);
 771:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 772:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 773:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 774:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseMaxFragment(WOLFSSL_CTX* ctx, byte mfl)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 15


 775:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 778:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseMaxFragment(&ctx->extensions, mfl);
 780:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 781:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 782:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_CLIENT */
 783:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_MAX_FRAGMENT */
 784:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 785:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_TRUNCATED_HMAC
 786:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
 787:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 788:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseTruncatedHMAC(WOLFSSL* ssl)
 789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 792:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseTruncatedHMAC(&ssl->extensions);
 794:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 795:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 796:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 797:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseTruncatedHMAC(WOLFSSL_CTX* ctx)
 798:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 800:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 801:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 802:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseTruncatedHMAC(&ctx->extensions);
 803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 804:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 805:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_CLIENT */
 806:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_TRUNCATED_HMAC */
 807:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 808:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CERTIFICATE_STATUS_REQUEST
 809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 810:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseOCSPStapling(WOLFSSL* ssl, byte status_type, byte options)
 811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || ssl->options.side != WOLFSSL_CLIENT_END)
 813:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 814:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseCertificateStatusRequest(&ssl->extensions, status_type,
 816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                        options);
 817:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 818:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 819:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseOCSPStapling(WOLFSSL_CTX* ctx, byte status_type,
 821:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                    byte options)
 822:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || ctx->method->side != WOLFSSL_CLIENT_END)
 824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 825:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseCertificateStatusRequest(&ctx->extensions, status_type,
 827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                        options);
 828:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 830:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_CERTIFICATE_STATUS_REQUEST */
 831:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 16


 832:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CERTIFICATE_STATUS_REQUEST_V2
 833:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseOCSPStaplingV2(WOLFSSL* ssl, byte status_type, byte options)
 835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || ssl->options.side != WOLFSSL_CLIENT_END)
 837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 838:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseCertificateStatusRequestV2(&ssl->extensions, status_type,
 840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                        options);
 841:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 842:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 843:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 844:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseOCSPStaplingV2(WOLFSSL_CTX* ctx,
 845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                  byte status_type, byte options)
 846:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || ctx->method->side != WOLFSSL_CLIENT_END)
 848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 849:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 850:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseCertificateStatusRequestV2(&ctx->extensions, status_type,
 851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                        options);
 852:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 854:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_CERTIFICATE_STATUS_REQUEST_V2 */
 855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 856:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Elliptic Curves */
 857:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SUPPORTED_CURVES
 858:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
 859:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 860:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseSupportedCurve(WOLFSSL* ssl, word16 name)
 861:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 862:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 864:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     switch (name) {
 866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP160R1:
 867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP192R1:
 868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP224R1:
 869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP256R1:
 870:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP384R1:
 871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP521R1:
 872:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 873:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 874:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:
 875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
 876:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 877:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 878:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseSupportedCurve(&ssl->extensions, name);
 879:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 880:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 881:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 882:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseSupportedCurve(WOLFSSL_CTX* ctx, word16 name)
 883:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 886:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     switch (name) {
 888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP160R1:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 17


 889:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP192R1:
 890:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP224R1:
 891:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP256R1:
 892:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP384R1:
 893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_ECC_SECP521R1:
 894:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 895:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:
 897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
 898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseSupportedCurve(&ctx->extensions, name);
 901:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 902:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 903:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_CLIENT */
 904:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_SUPPORTED_CURVES */
 905:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 906:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* QSH quantum safe handshake */
 907:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_QSH
 908:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* returns 1 if QSH has been used 0 otherwise */
 909:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_isQSH(WOLFSSL* ssl)
 910:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* if no ssl struct than QSH was not used */
 912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 914:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->isQSH;
 916:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 917:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 918:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 919:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseSupportedQSH(WOLFSSL* ssl, word16 name)
 920:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 923:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     switch (name) {
 925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_NTRU
 926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_NTRU_EESS439:
 927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_NTRU_EESS593:
 928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_NTRU_EESS743:
 929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
 931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:
 932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
 933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->user_set_QSHSchemes = 1;
 936:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseQSHScheme(&ssl->extensions, name, NULL, 0);
 938:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 939:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 940:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
 941:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* user control over sending client public key in hello
 942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        when flag = 1 will send keys if flag is 0 or function is not called
 943:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        then will not send keys in the hello extension
 944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return 0 on success
 945:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****      */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 18


 946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_UseClientQSHKeys(WOLFSSL* ssl, unsigned char flag)
 947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL)
 949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
 950:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->sendQSHKeys = flag;
 952:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_CLIENT */
 956:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_QSH */
 957:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 958:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 959:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Application-Layer Protocol Negotiation */
 960:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ALPN
 961:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 962:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseALPN(WOLFSSL* ssl, char *protocol_name_list,
 963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     word32 protocol_name_listSz, byte options)
 964:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char    *list, *ptr, *token[10];
 966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word16  len;
 967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int     idx = 0;
 968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int     ret = SSL_FAILURE;
 969:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 970:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_UseALPN");
 971:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || protocol_name_list == NULL)
 973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 974:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 975:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (protocol_name_listSz > (WOLFSSL_MAX_ALPN_NUMBER *
 976:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 WOLFSSL_MAX_ALPN_PROTO_NAME_LEN +
 977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 WOLFSSL_MAX_ALPN_NUMBER)) {
 978:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Invalid arguments, protocol name list too long");
 979:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 981:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!(options & WOLFSSL_ALPN_CONTINUE_ON_MISMATCH) &&
 983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         !(options & WOLFSSL_ALPN_FAILED_ON_MISMATCH)) {
 984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Invalid arguments, options not supported");
 985:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
 986:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 987:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 988:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 989:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     list = (char *)XMALLOC(protocol_name_listSz+1, NULL,
 990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            DYNAMIC_TYPE_TMP_BUFFER);
 991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (list == NULL) {
 992:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Memory failure");
 993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_ERROR;
 994:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 995:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 996:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMSET(list, 0, protocol_name_listSz+1);
 997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XSTRNCPY(list, protocol_name_list, protocol_name_listSz);
 998:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* read all protocol name from the list */
1000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     token[idx] = XSTRTOK(list, ",", &ptr);
1001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (token[idx] != NULL)
1002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         token[++idx] = XSTRTOK(NULL, ",", &ptr);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 19


1003:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* add protocol name list in the TLS extension in reverse order */
1005:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while ((idx--) > 0) {
1006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         len = (word16)XSTRLEN(token[idx]);
1007:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1008:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = TLSX_UseALPN(&ssl->extensions, token[idx], len, options);
1009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != SSL_SUCCESS) {
1010:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("TLSX_UseALPN failure");
1011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
1012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1014:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1015:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(list, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1016:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1018:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1019:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1020:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_ALPN_GetProtocol(WOLFSSL* ssl, char **protocol_name, word16 *size)
1021:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1022:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_ALPN_GetRequest(ssl ? ssl->extensions : NULL,
1023:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                (void **)protocol_name, size);
1024:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1025:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1026:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_ALPN_GetPeerProtocol(WOLFSSL* ssl, char **list, word16 *listSz)
1027:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (list == NULL || listSz == NULL)
1029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1030:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->alpn_client_list == NULL)
1032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BUFFER_ERROR;
1033:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1034:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *listSz = (word16)XSTRLEN(ssl->alpn_client_list);
1035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (*listSz == 0)
1036:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BUFFER_ERROR;
1037:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *list = (char *)XMALLOC((*listSz)+1, NULL, DYNAMIC_TYPE_TLSX);
1039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (*list == NULL)
1040:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_ERROR;
1041:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XSTRNCPY(*list, ssl->alpn_client_list, (*listSz)+1);
1043:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (*list)[*listSz] = 0;
1044:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1045:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1046:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1047:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_ALPN */
1049:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1050:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Secure Renegotiation */
1051:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SECURE_RENEGOTIATION
1052:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1053:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* user is forcing ability to use secure renegotiation, we discourage it */
1054:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseSecureRenegotiation(WOLFSSL* ssl)
1055:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = BAD_FUNC_ARG;
1057:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = TLSX_UseSecureRenegotiation(&ssl->extensions);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 20


1060:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1061:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == SSL_SUCCESS) {
1062:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         TLSX* extension = TLSX_Find(ssl->extensions, TLSX_RENEGOTIATION_INFO);
1063:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1064:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (extension)
1065:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->secure_renegotiation = (SecureRenegotiation*)extension->data;
1066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1067:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1068:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1069:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1070:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1071:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1072:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* do a secure renegotiation handshake, user forced, we discourage */
1073:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_Rehandshake(WOLFSSL* ssl)
1074:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
1076:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1077:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1079:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1080:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->secure_renegotiation == NULL) {
1081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Secure Renegotiation not forced on by user");
1082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SECURE_RENEGOTIATION_E;
1083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1084:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->secure_renegotiation->enabled == 0) {
1086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Secure Renegotiation not enabled at extension level");
1087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SECURE_RENEGOTIATION_E;
1088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1089:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.handShakeState != HANDSHAKE_DONE) {
1091:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Can't renegotiate until previous handshake complete");
1092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SECURE_RENEGOTIATION_E;
1093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1094:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1095:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_FORCE_SCR_SAME_SUITE
1096:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* force same suite */
1097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->suites) {
1098:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->suites->suiteSz = SUITE_LEN;
1099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->suites->suites[0] = ssl->options.cipherSuite0;
1100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->suites->suites[1] = ssl->options.cipherSuite;
1101:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1103:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* reset handshake states */
1105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.serverState = NULL_STATE;
1106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.clientState = NULL_STATE;
1107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.connectState  = CONNECT_BEGIN;
1108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.acceptState   = ACCEPT_BEGIN;
1109:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.handShakeState = NULL_STATE;
1110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.processReply  = 0;  /* TODO, move states in internal.h */
1111:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMSET(&ssl->msgsReceived, 0, sizeof(ssl->msgsReceived));
1113:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->secure_renegotiation->cache_status = SCR_CACHE_NEEDED;
1115:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1116:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_OLD_TLS
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 21


1117:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
1118:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wc_InitMd5(&ssl->hsHashes->hashMd5);
1119:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1120:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
1121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wc_InitSha(&ssl->hsHashes->hashSha);
1122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret !=0)
1123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
1124:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1125:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_OLD_TLS */
1126:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA256
1127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wc_InitSha256(&ssl->hsHashes->hashSha256);
1128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret !=0)
1129:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
1130:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1131:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA384
1132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wc_InitSha384(&ssl->hsHashes->hashSha384);
1133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret !=0)
1134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
1135:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1136:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA512
1137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wc_InitSha512(&ssl->hsHashes->hashSha512);
1138:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret !=0)
1139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
1140:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1141:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_negotiate(ssl);
1143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1144:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1145:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_SECURE_RENEGOTIATION */
1147:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Session Ticket */
1149:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_WOLFSSL_SERVER) && defined(HAVE_SESSION_TICKET)
1150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* SSL_SUCCESS on ok */
1151:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_set_TicketEncCb(WOLFSSL_CTX* ctx, SessionTicketEncCb cb)
1152:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
1154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1155:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->ticketEncCb = cb;
1157:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1159:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1160:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1161:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* set hint interval, SSL_SUCCESS on ok */
1162:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_set_TicketHint(WOLFSSL_CTX* ctx, int hint)
1163:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
1165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1166:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->ticketHint = hint;
1168:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1171:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1172:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* set user context, SSL_SUCCESS on ok */
1173:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_set_TicketEncCtx(WOLFSSL_CTX* ctx, void* userCtx)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 22


1174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
1176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1177:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->ticketEncCtx = userCtx;
1179:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1181:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1182:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1183:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !defined(NO_WOLFSSL_CLIENT) && defined(HAVE_SESSION_TICKET) */
1184:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1185:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Session Ticket */
1186:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_WOLFSSL_CLIENT) && defined(HAVE_SESSION_TICKET)
1187:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_UseSessionTicket(WOLFSSL* ssl)
1188:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1191:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseSessionTicket(&ssl->extensions, NULL);
1193:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1194:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1195:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_UseSessionTicket(WOLFSSL_CTX* ctx)
1196:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
1198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1199:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return TLSX_UseSessionTicket(&ctx->extensions, NULL);
1201:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1202:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1203:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_API int wolfSSL_get_SessionTicket(WOLFSSL* ssl,
1204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           byte* buf, word32* bufSz)
1205:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || buf == NULL || bufSz == NULL || *bufSz == 0)
1207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1208:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->session.ticketLen <= *bufSz) {
1210:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(buf, ssl->session.ticket, ssl->session.ticketLen);
1211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *bufSz = ssl->session.ticketLen;
1212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
1214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *bufSz = 0;
1215:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1217:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1218:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1219:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_API int wolfSSL_set_SessionTicket(WOLFSSL* ssl, byte* buf, word32 bufSz)
1220:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || (buf == NULL && bufSz > 0))
1222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1223:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (bufSz > 0)
1225:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(ssl->session.ticket, buf, bufSz);
1226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->session.ticketLen = (word16)bufSz;
1227:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1229:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1230:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 23


1231:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1232:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_API int wolfSSL_set_SessionTicket_cb(WOLFSSL* ssl,
1233:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                             CallbackSessionTicket cb, void* ctx)
1234:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1237:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1238:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->session_ticket_cb = cb;
1239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->session_ticket_ctx = ctx;
1240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1242:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1243:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1244:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1245:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
1246:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1247:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_send(WOLFSSL* ssl, const void* data, int sz, int flags)
1248:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
1250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int oldFlags;
1251:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_send()");
1253:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || data == NULL || sz < 0)
1255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1256:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     oldFlags = ssl->wflags;
1258:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->wflags = flags;
1260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_write(ssl, data, sz);
1261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->wflags = oldFlags;
1262:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1263:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_send()", ret);
1264:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1267:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1268:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1269:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_recv(WOLFSSL* ssl, void* data, int sz, int flags)
1270:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
1272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int oldFlags;
1273:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_recv()");
1275:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || data == NULL || sz < 0)
1277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1278:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1279:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     oldFlags = ssl->rflags;
1280:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->rflags = flags;
1282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_read(ssl, data, sz);
1283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->rflags = oldFlags;
1284:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_recv()", ret);
1286:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 24


1288:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1289:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1290:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1291:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1292:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* SSL_SUCCESS on ok */
1293:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_shutdown(WOLFSSL* ssl)
1294:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  ret = SSL_FATAL_ERROR;
1296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte tmp;
1297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_shutdown()");
1298:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
1301:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.quietShutdown) {
1303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("quiet shutdown, no close notify sent");
1304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
1305:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1306:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* try to send close notify, not an error if can't */
1308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!ssl->options.isClosed && !ssl->options.connReset &&
1309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   !ssl->options.sentNotify) {
1310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->error = SendAlert(ssl, alert_warning, close_notify);
1311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->error < 0) {
1312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ERROR(ssl->error);
1313:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
1314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.sentNotify = 1;  /* don't send close_notify twice */
1316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.closeNotify)
1317:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_SUCCESS;
1318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
1319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_SHUTDOWN_NOT_DONE;
1320:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("SSL_shutdown()", ret);
1322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
1323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1324:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* call wolfSSL_shutdown again for bidirectional shutdown */
1326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.sentNotify && !ssl->options.closeNotify) {
1327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wolfSSL_read(ssl, &tmp, 0);
1328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret < 0) {
1329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ERROR(ssl->error);
1330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_FATAL_ERROR;
1331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (ssl->options.closeNotify) {
1332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->error = SSL_ERROR_SYSCALL;   /* simulate OpenSSL behavior */
1333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_SUCCESS;
1334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1336:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_shutdown()", ret);
1338:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1340:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1341:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1342:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1343:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_error(WOLFSSL* ssl, int ret)
1344:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 25


1345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_error");
1346:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret > 0)
1348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_NONE;
1349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1351:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_get_error", ssl->error);
1353:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* make sure converted types are handled in SetErrorString() too */
1355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->error == WANT_READ)
1356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_WANT_READ;         /* convert to OpenSSL type */
1357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ssl->error == WANT_WRITE)
1358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_WANT_WRITE;        /* convert to OpenSSL type */
1359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ssl->error == ZERO_RETURN)
1360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_ZERO_RETURN;       /* convert to OpenSSL type */
1361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->error;
1362:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1363:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1364:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1365:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* retrive alert history, SSL_SUCCESS on ok */
1366:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_alert_history(WOLFSSL* ssl, WOLFSSL_ALERT_HISTORY *h)
1367:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl && h) {
1369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *h = ssl->alert_history;
1370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1372:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1373:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1374:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1375:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return TRUE if current error is want read */
1376:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_want_read(WOLFSSL* ssl)
1377:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_want_read");
1379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->error == WANT_READ)
1380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
1381:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
1383:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1384:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1385:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1386:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return TRUE if current error is want write */
1387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_want_write(WOLFSSL* ssl)
1388:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_want_write");
1390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->error == WANT_WRITE)
1391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
1392:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
1394:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1395:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1396:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1397:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** char* wolfSSL_ERR_error_string(unsigned long errNumber, char* data)
1398:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static const char* msg = "Please supply a buffer for error string";
1400:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("ERR_error_string");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 26


1402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (data) {
1403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SetErrorString((int)errNumber, data);
1404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return data;
1405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1406:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (char*)msg;
1408:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1409:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1410:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1411:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_ERR_error_string_n(unsigned long e, char* buf, unsigned long len)
1412:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_ERR_error_string_n");
1414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (len >= WOLFSSL_MAX_ERROR_SZ)
1415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_ERR_error_string(e, buf);
1416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
1417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char tmp[WOLFSSL_MAX_ERROR_SZ];
1418:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Error buffer too short, truncating");
1420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (len) {
1421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_ERR_error_string(e, tmp);
1422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buf, tmp, len-1);
1423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             buf[len-1] = '\0';
1424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1426:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1427:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1428:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1429:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* don't free temporary arrays at end of handshake */
1430:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_KeepArrays(WOLFSSL* ssl)
1431:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.saveArrays = 1;
1434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1435:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1436:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1437:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* user doesn't need temporary arrays anymore, Free */
1438:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_FreeArrays(WOLFSSL* ssl)
1439:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl && ssl->options.handShakeState == HANDSHAKE_DONE) {
1441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.saveArrays = 0;
1442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeArrays(ssl, 1);
1443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1445:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1446:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1447:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const byte* wolfSSL_GetMacSecret(WOLFSSL* ssl, int verify)
1448:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
1451:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ( (ssl->options.side == WOLFSSL_CLIENT_END && !verify) ||
1453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****          (ssl->options.side == WOLFSSL_SERVER_END &&  verify) )
1454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.client_write_MAC_secret;
1455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
1456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.server_write_MAC_secret;
1457:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1458:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 27


1459:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1460:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef ATOMIC_USER
1461:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1462:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void  wolfSSL_CTX_SetMacEncryptCb(WOLFSSL_CTX* ctx, CallbackMacEncrypt cb)
1463:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
1465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->MacEncryptCb = cb;
1466:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1467:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1468:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1469:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void  wolfSSL_SetMacEncryptCtx(WOLFSSL* ssl, void *ctx)
1470:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->MacEncryptCtx = ctx;
1473:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1474:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1475:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1476:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void* wolfSSL_GetMacEncryptCtx(WOLFSSL* ssl)
1477:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1479:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->MacEncryptCtx;
1480:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1481:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
1482:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1483:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1484:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1485:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void  wolfSSL_CTX_SetDecryptVerifyCb(WOLFSSL_CTX* ctx, CallbackDecryptVerify cb)
1486:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
1488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->DecryptVerifyCb = cb;
1489:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1490:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1491:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1492:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void  wolfSSL_SetDecryptVerifyCtx(WOLFSSL* ssl, void *ctx)
1493:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->DecryptVerifyCtx = ctx;
1496:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1497:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1498:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1499:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void* wolfSSL_GetDecryptVerifyCtx(WOLFSSL* ssl)
1500:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->DecryptVerifyCtx;
1503:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
1505:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1506:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1507:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1508:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const byte* wolfSSL_GetClientWriteKey(WOLFSSL* ssl)
1509:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1510:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1511:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.client_write_key;
1512:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
1514:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1515:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 28


1516:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1517:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const byte* wolfSSL_GetClientWriteIV(WOLFSSL* ssl)
1518:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1519:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.client_write_IV;
1521:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
1523:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1526:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const byte* wolfSSL_GetServerWriteKey(WOLFSSL* ssl)
1527:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.server_write_key;
1530:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
1532:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1533:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1534:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1535:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const byte* wolfSSL_GetServerWriteIV(WOLFSSL* ssl)
1536:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1538:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.server_write_IV;
1539:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
1541:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1542:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1543:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1544:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetKeySize(WOLFSSL* ssl)
1545:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->specs.key_size;
1548:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BAD_FUNC_ARG;
1550:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1551:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1552:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1553:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetIVSize(WOLFSSL* ssl)
1554:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1556:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->specs.iv_size;
1557:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BAD_FUNC_ARG;
1559:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1560:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1561:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1562:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetBulkCipher(WOLFSSL* ssl)
1563:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->specs.bulk_cipher_algorithm;
1566:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BAD_FUNC_ARG;
1568:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1569:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1570:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1571:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetCipherType(WOLFSSL* ssl)
1572:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 29


1573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1575:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->specs.cipher_type == block)
1577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return WOLFSSL_BLOCK_TYPE;
1578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->specs.cipher_type == stream)
1579:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return WOLFSSL_STREAM_TYPE;
1580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->specs.cipher_type == aead)
1581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return WOLFSSL_AEAD_TYPE;
1582:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return -1;
1584:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1585:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1587:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetCipherBlockSize(WOLFSSL* ssl)
1588:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1589:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1591:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1592:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->specs.block_size;
1593:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1594:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1595:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1596:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetAeadMacSize(WOLFSSL* ssl)
1597:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1600:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->specs.aead_mac_size;
1602:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1603:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1604:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1605:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_IsTLSv1_1(WOLFSSL* ssl)
1606:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
1608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1609:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.tls1_1)
1611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
1612:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
1614:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1615:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1616:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetSide(WOLFSSL* ssl)
1618:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
1620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->options.side;
1621:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BAD_FUNC_ARG;
1623:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1625:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1626:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetHmacSize(WOLFSSL* ssl)
1627:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* AEAD ciphers don't have HMAC keys */
1629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 30


1630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return (ssl->specs.cipher_type != aead) ? ssl->specs.hash_size : 0;
1631:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BAD_FUNC_ARG;
1633:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1635:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* ATOMIC_USER */
1636:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CERTS
1638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1639:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int AllocDer(DerBuffer** pDer, word32 length, int type, void* heap)
1640:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = BAD_FUNC_ARG;
1642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pDer) {
1643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int dynType = 0;
1644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DerBuffer* der;
1645:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Determine dynamic type */
1647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (type) {
1648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CA_TYPE:   dynType = DYNAMIC_TYPE_CA;   break;
1649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CERT_TYPE: dynType = DYNAMIC_TYPE_CERT; break;
1650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CRL_TYPE:  dynType = DYNAMIC_TYPE_CRL;  break;
1651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DSA_TYPE:  dynType = DYNAMIC_TYPE_DSA;  break;
1652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ECC_TYPE:  dynType = DYNAMIC_TYPE_ECC;  break;
1653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case RSA_TYPE:  dynType = DYNAMIC_TYPE_RSA;  break;
1654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:        dynType = DYNAMIC_TYPE_KEY;  break;
1655:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1656:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1657:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Setup new buffer */
1658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *pDer = (DerBuffer*)XMALLOC(sizeof(DerBuffer) + length, heap, dynType);
1659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (*pDer == NULL) {
1660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_ERROR;
1661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1662:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der = *pDer;
1664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->type = type;
1665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->dynType = dynType; /* Cache this for FreeDer */
1666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->heap = heap;
1667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->buffer = (byte*)der + sizeof(DerBuffer);
1668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = length;
1669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = 0; /* Success */
1670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1672:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1673:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1674:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void FreeDer(DerBuffer** pDer)
1675:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pDer && *pDer)
1677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
1678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DerBuffer* der = (DerBuffer*)*pDer;
1679:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* ForceZero private keys */
1681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (der->type == PRIVATEKEY_TYPE) {
1682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ForceZero(der->buffer, der->length);
1683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->buffer = NULL;
1685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = 0;
1686:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(der, der->heap, der->dynType);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 31


1687:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *pDer = NULL;
1689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1690:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1691:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1692:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_CERT_MANAGER* wolfSSL_CertManagerNew(void)
1693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CERT_MANAGER* cm = NULL;
1695:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1696:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerNew");
1697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm = (WOLFSSL_CERT_MANAGER*) XMALLOC(sizeof(WOLFSSL_CERT_MANAGER), 0,
1699:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                          DYNAMIC_TYPE_CERT_MANAGER);
1700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm) {
1701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMSET(cm, 0, sizeof(WOLFSSL_CERT_MANAGER));
1702:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (InitMutex(&cm->caLock) != 0) {
1704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad mutex init");
1705:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_CertManagerFree(cm);
1706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
1707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1708:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_TRUST_PEER_CERT
1710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (InitMutex(&cm->tpLock) != 0) {
1711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad mutex init");
1712:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_CertManagerFree(cm);
1713:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
1714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1715:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
1716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1717:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return cm;
1719:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1720:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1721:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1722:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_CertManagerFree(WOLFSSL_CERT_MANAGER* cm)
1723:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1724:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerFree");
1725:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm) {
1727:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef HAVE_CRL
1728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cm->crl)
1729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeCRL(cm->crl, 1);
1730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
1731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef HAVE_OCSP
1732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cm->ocsp)
1733:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeOCSP(cm->ocsp, 1);
1734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #if defined(HAVE_CERTIFICATE_STATUS_REQUEST) \
1735:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****          || defined(HAVE_CERTIFICATE_STATUS_REQUEST_V2)
1736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cm->ocsp_stapling)
1737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeOCSP(cm->ocsp_stapling, 1);
1738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
1739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
1740:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeSignerTable(cm->caTable, CA_TABLE_SIZE, NULL);
1741:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeMutex(&cm->caLock);
1742:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1743:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_TRUST_PEER_CERT
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 32


1744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeTrustedPeerTable(cm->tpTable, TP_TABLE_SIZE, NULL);
1745:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeMutex(&cm->tpLock);
1746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
1747:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(cm, NULL, DYNAMIC_TYPE_CERT_MANAGER);
1749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1751:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1752:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1753:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1754:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Unload the CA signer list */
1755:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerUnloadCAs(WOLFSSL_CERT_MANAGER* cm)
1756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerUnloadCAs");
1758:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
1760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1761:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0)
1763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
1764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeSignerTable(cm->caTable, CA_TABLE_SIZE, NULL);
1766:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
1768:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1769:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1771:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1772:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1773:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1774:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
1775:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerUnload_trust_peers(WOLFSSL_CERT_MANAGER* cm)
1776:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerUnload_trust_peers");
1778:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
1780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1781:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->tpLock) != 0)
1783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
1784:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeTrustedPeerTable(cm->tpTable, TP_TABLE_SIZE, NULL);
1786:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->tpLock);
1788:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
1791:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1792:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
1793:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1794:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1795:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Return bytes written to buff or < 0 for error */
1796:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertPemToDer(const unsigned char* pem, int pemSz,
1797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         unsigned char* buff, int buffSz, int type)
1798:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
1800:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 33


1801:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*     der = NULL;
1802:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
1803:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo* info = NULL;
1804:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
1805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo  info[1];
1806:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1807:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertPemToDer");
1809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pem == NULL || buff == NULL || buffSz <= 0) {
1811:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
1812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1813:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1814:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (type != CERT_TYPE && type != CA_TYPE && type != CERTREQ_TYPE) {
1816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad cert type");
1817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1818:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1819:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
1821:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info = (EncryptedInfo*)XMALLOC(sizeof(EncryptedInfo), NULL,
1822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    DYNAMIC_TYPE_TMP_BUFFER);
1823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (info == NULL)
1824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
1825:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1826:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->set      = 0;
1828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->ctx      = NULL;
1829:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->consumed = 0;
1830:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = PemToDer(pem, pemSz, type, &der, NULL, info, &eccKey);
1832:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1833:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
1834:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(info, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1836:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0) {
1838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Pem To Der");
1839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
1841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (der->length <= (word32)buffSz) {
1842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buff, der->buffer, der->length);
1843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = der->length;
1844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
1846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad der length");
1847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = BAD_FUNC_ARG;
1848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1850:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDer(&der);
1852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1854:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1856:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)
1857:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 34


1858:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const char *EVP_AES_128_CBC = "AES-128-CBC";
1859:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const char *EVP_AES_192_CBC = "AES-192-CBC";
1860:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const char *EVP_AES_256_CBC = "AES-256-CBC";
1861:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA)
1862:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static const char *EVP_AES_128_CTR = "AES-128-CTR";
1863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static const char *EVP_AES_192_CTR = "AES-192-CTR";
1864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static const char *EVP_AES_256_CTR = "AES-256-CTR";
1865:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1866:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const int  EVP_AES_SIZE = 11;
1867:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1868:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const char *EVP_DES_CBC = "DES-CBC";
1869:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const int  EVP_DES_SIZE = 7;
1870:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1871:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const char *EVP_DES_EDE3_CBC = "DES-EDE3-CBC";
1872:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const int  EVP_DES_EDE3_SIZE = 12;
1873:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1874:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_IDEA
1875:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const char *EVP_IDEA_CBC = "IDEA-CBC";
1876:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static const int  EVP_IDEA_SIZE = 8;
1877:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1878:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1879:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* our KeyPemToDer password callback, password in userData */
1880:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int OurPasswordCb(char* passwd, int sz, int rw, void* userdata)
1881:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)rw;
1883:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (userdata == NULL)
1885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
1886:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XSTRNCPY(passwd, (char*)userdata, sz);
1888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return min((word32)sz, (word32)XSTRLEN((char*)userdata));
1889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1890:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1891:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA || HAVE_WEBSERVER */
1892:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1893:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1894:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Return bytes written to buff or < 0 for error */
1895:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_KeyPemToDer(const unsigned char* pem, int pemSz,
1896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         unsigned char* buff, int buffSz, const char* pass)
1897:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
1899:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            ret;
1900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*     der = NULL;
1901:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
1902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo* info = NULL;
1903:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
1904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo  info[1];
1905:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1906:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_KeyPemToDer");
1908:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pem == NULL || buff == NULL || buffSz <= 0) {
1910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
1911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
1912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1913:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1914:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 35


1915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info = (EncryptedInfo*)XMALLOC(sizeof(EncryptedInfo), NULL,
1916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    DYNAMIC_TYPE_TMP_BUFFER);
1917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (info == NULL)
1918:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
1919:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1920:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->set      = 0;
1922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->ctx      = NULL;
1923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->consumed = 0;
1924:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1925:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)
1926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pass) {
1927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->ctx = wolfSSL_CTX_new(wolfSSLv23_client_method());
1928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (info->ctx == NULL) {
1929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
1930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(info, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
1932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
1933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_CTX_set_default_passwd_cb(info->ctx, OurPasswordCb);
1936:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_CTX_set_default_passwd_cb_userdata(info->ctx, (void*)pass);
1937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1938:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
1939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)pass;
1940:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1941:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = PemToDer(pem, pemSz, PRIVATEKEY_TYPE, &der, NULL, info, &eccKey);
1943:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (info->ctx)
1945:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_CTX_free(info->ctx);
1946:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1947:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
1948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(info, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1949:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1950:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0) {
1952:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Pem To Der");
1953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
1955:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (der->length <= (word32)buffSz) {
1956:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buff, der->buffer, der->length);
1957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = der->length;
1958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
1960:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad der length");
1961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = BAD_FUNC_ARG;
1962:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
1963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
1964:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDer(&der);
1966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
1967:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1968:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1969:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_CERTS */
1970:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1971:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 36


1972:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1973:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_FILESYSTEM) && !defined(NO_STDIO_FILESYSTEM)
1974:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1975:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_ERR_print_errors_fp(FILE* fp, int err)
1976:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char data[WOLFSSL_MAX_ERROR_SZ + 1];
1978:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1979:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_ERR_print_errors_fp");
1980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SetErrorString(err, data);
1981:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     fprintf(fp, "%s", data);
1982:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1983:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1984:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
1985:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1986:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1987:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_pending(WOLFSSL* ssl)
1988:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1989:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_pending");
1990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->buffers.clearOutputBuffer.length;
1991:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
1992:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1993:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
1994:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
1995:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* turn on handshake group messages for context */
1996:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_set_group_messages(WOLFSSL_CTX* ctx)
1997:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
1998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
1999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return BAD_FUNC_ARG;
2000:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->groupMessages = 1;
2002:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2003:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
2004:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2005:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2006:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2007:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2008:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
2009:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* connect enough to get peer cert chain */
2010:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_connect_cert(WOLFSSL* ssl)
2011:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  ret;
2013:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
2015:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
2016:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.certOnly = 1;
2018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_connect(ssl);
2019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.certOnly   = 0;
2020:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2021:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
2022:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2023:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2024:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2025:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2026:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
2027:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* turn on handshake group messages for ssl object */
2028:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_group_messages(WOLFSSL* ssl)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 37


2029:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
2031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return BAD_FUNC_ARG;
2032:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2033:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.groupMessages = 1;
2034:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
2036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2037:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2038:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2039:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* make minVersion the internal equivalent SSL version */
2040:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int SetMinVersionHelper(byte* minVersion, int version)
2041:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     switch (version) {
2043:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
2044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_SSLV3:
2045:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             *minVersion = SSLv3_MINOR;
2046:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2047:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2049:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_TLS
2050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_OLD_TLS
2051:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_TLSV1:
2052:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             *minVersion = TLSv1_MINOR;
2053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2054:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_TLSV1_1:
2056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             *minVersion = TLSv1_1_MINOR;
2057:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
2059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_TLSV1_2:
2060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             *minVersion = TLSv1_2_MINOR;
2061:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2062:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2063:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2064:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:
2065:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad function argument");
2066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
2067:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2068:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
2070:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2071:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2072:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2073:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Set minimum downgrade version allowed, SSL_SUCCESS on ok */
2074:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetMinVersion(WOLFSSL_CTX* ctx, int version)
2075:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_SetMinVersion");
2077:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL) {
2079:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad function argument");
2080:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
2081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2082:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SetMinVersionHelper(&ctx->minDowngrade, version);
2084:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2085:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 38


2086:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2087:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Set minimum downgrade version allowed, SSL_SUCCESS on ok */
2088:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetMinVersion(WOLFSSL* ssl, int version)
2089:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetMinVersion");
2091:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL) {
2093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad function argument");
2094:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
2095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2096:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SetMinVersionHelper(&ssl->options.minDowngrade, version);
2098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2099:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2100:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2101:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetVersion(WOLFSSL* ssl, int version)
2102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word16 haveRSA = 1;
2104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word16 havePSK = 0;
2105:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetVersion");
2107:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL) {
2109:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad function argument");
2110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
2111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2112:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     switch (version) {
2114:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
2115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_SSLV3:
2116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->version = MakeSSLv3();
2117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2118:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2119:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2120:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_TLS
2121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_OLD_TLS
2122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_TLSV1:
2123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->version = MakeTLSv1();
2124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2125:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2126:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_TLSV1_1:
2127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->version = MakeTLSv1_1();
2128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2129:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
2130:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case WOLFSSL_TLSV1_2:
2131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->version = MakeTLSv1_2();
2132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2133:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2134:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:
2136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad function argument");
2137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
2138:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2139:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef NO_RSA
2141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         haveRSA = 0;
2142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 39


2143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_PSK
2144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         havePSK = ssl->options.havePSK;
2145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
2146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     InitSuites(ssl->suites, ssl->version, haveRSA, havePSK, ssl->options.haveDH,
2148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
2149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveECC, ssl->options.haveStaticECC,
2150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.side);
2151:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
2153:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2154:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !leanpsk */
2155:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2156:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2157:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_CERTS) || !defined(NO_SESSION_CACHE)
2158:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2159:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Make a work from the front of random hash */
2160:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE word32 MakeWordFromHash(const byte* hashID)
2161:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
  25              		.loc 1 2161 0
  26              		.cfi_startproc
  27              	.LVL0:
  28              		.loc 1 2161 0
  29 0000 021C     		mov	r2, r0
2162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (hashID[0] << 24) | (hashID[1] << 16) | (hashID[2] <<  8) |
  30              		.loc 1 2162 0
  31 0002 0378     		ldrb	r3, [r0]
2163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             hashID[3];
2164:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
  32              		.loc 1 2164 0
  33              		@ sp needed
2162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (hashID[0] << 24) | (hashID[1] << 16) | (hashID[2] <<  8) |
  34              		.loc 1 2162 0
  35 0004 1806     		lsl	r0, r3, #24
  36              	.LVL1:
  37 0006 5378     		ldrb	r3, [r2, #1]
  38 0008 1B04     		lsl	r3, r3, #16
  39 000a 0343     		orr	r3, r0
  40 000c D078     		ldrb	r0, [r2, #3]
  41 000e 1843     		orr	r0, r3
  42 0010 9378     		ldrb	r3, [r2, #2]
  43 0012 1B02     		lsl	r3, r3, #8
  44 0014 1843     		orr	r0, r3
  45              		.loc 1 2164 0
  46 0016 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE60:
  49              		.size	MakeWordFromHash, .-MakeWordFromHash
  50              		.section	.text.mystrnstr,"ax",%progbits
  51              		.align	1
  52              		.global	mystrnstr
  53              		.code	16
  54              		.thumb_func
  55              		.type	mystrnstr, %function
  56              	mystrnstr:
  57              	.LFB13:
 133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned int s2_len = (unsigned int)XSTRLEN(s2);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 40


  58              		.loc 1 133 0
  59              		.cfi_startproc
  60              	.LVL2:
  61 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
  62              		.cfi_def_cfa_offset 32
  63              		.cfi_offset 0, -32
  64              		.cfi_offset 1, -28
  65              		.cfi_offset 2, -24
  66              		.cfi_offset 4, -20
  67              		.cfi_offset 5, -16
  68              		.cfi_offset 6, -12
  69              		.cfi_offset 7, -8
  70              		.cfi_offset 14, -4
 133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned int s2_len = (unsigned int)XSTRLEN(s2);
  71              		.loc 1 133 0
  72 0002 051C     		mov	r5, r0
 134:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  73              		.loc 1 134 0
  74 0004 081C     		mov	r0, r1
  75              	.LVL3:
 133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned int s2_len = (unsigned int)XSTRLEN(s2);
  76              		.loc 1 133 0
  77 0006 0E1C     		mov	r6, r1
  78 0008 0192     		str	r2, [sp, #4]
 134:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  79              		.loc 1 134 0
  80 000a FFF7FEFF 		bl	strlen
  81              	.LVL4:
  82 000e 2C1C     		mov	r4, r5
  83 0010 071C     		mov	r7, r0
  84              	.LVL5:
 137:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
  85              		.loc 1 137 0
  86 0012 281C     		mov	r0, r5
  87              	.LVL6:
 136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return (char*)s1;
  88              		.loc 1 136 0
  89 0014 002F     		cmp	r7, #0
  90 0016 16D0     		beq	.L3
  91              	.LVL7:
  92              	.L4:
  93 0018 019B     		ldr	r3, [sp, #4]
  94 001a 1B1B     		sub	r3, r3, r4
  95 001c EB18     		add	r3, r5, r3
 139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (s1[0] == s2[0])
  96              		.loc 1 139 0
  97 001e BB42     		cmp	r3, r7
  98 0020 10D3     		bcc	.L9
 139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (s1[0] == s2[0])
  99              		.loc 1 139 0 is_stmt 0 discriminator 1
 100 0022 2078     		ldrb	r0, [r4]
 101 0024 0028     		cmp	r0, #0
 102 0026 0ED0     		beq	.L3
 140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (XMEMCMP(s1, s2, s2_len) == 0)
 103              		.loc 1 140 0 is_stmt 1
 104 0028 3378     		ldrb	r3, [r6]
 105 002a 8342     		cmp	r3, r0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 41


 106 002c 06D1     		bne	.L5
 141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return (char*)s1;
 107              		.loc 1 141 0
 108 002e 201C     		mov	r0, r4
 109 0030 311C     		mov	r1, r6
 110 0032 3A1C     		mov	r2, r7
 111 0034 FFF7FEFF 		bl	memcmp
 112              	.LVL8:
 113 0038 0028     		cmp	r0, #0
 114 003a 01D0     		beq	.L8
 115              	.L5:
 143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         n--;
 116              		.loc 1 143 0
 117 003c 0134     		add	r4, r4, #1
 118              	.LVL9:
 119 003e EBE7     		b	.L4
 120              	.L8:
 121 0040 201C     		mov	r0, r4
 122 0042 00E0     		b	.L3
 123              	.L9:
 147:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 124              		.loc 1 147 0
 125 0044 0020     		mov	r0, #0
 126              	.LVL10:
 127              	.L3:
 148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 128              		.loc 1 148 0
 129              		@ sp needed
 130              	.LVL11:
 131              	.LVL12:
 132              	.LVL13:
 133 0046 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 134              		.cfi_endproc
 135              	.LFE13:
 136              		.size	mystrnstr, .-mystrnstr
 137              		.section	.text.wolfSSL_CTX_free,"ax",%progbits
 138              		.align	1
 139              		.global	wolfSSL_CTX_free
 140              		.code	16
 141              		.thumb_func
 142              		.type	wolfSSL_CTX_free, %function
 143              	wolfSSL_CTX_free:
 144              	.LFB15:
 195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_CTX_free");
 145              		.loc 1 195 0
 146              		.cfi_startproc
 147              	.LVL14:
 148 0000 08B5     		push	{r3, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeSSL_Ctx(ctx);
 152              		.loc 1 197 0
 153 0002 0028     		cmp	r0, #0
 154 0004 01D0     		beq	.L12
 198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_CTX_free", 0);
 155              		.loc 1 198 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 42


 156 0006 FFF7FEFF 		bl	FreeSSL_Ctx
 157              	.LVL15:
 158              	.L12:
 200:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 159              		.loc 1 200 0
 160              		@ sp needed
 161 000a 08BD     		pop	{r3, pc}
 162              		.cfi_endproc
 163              	.LFE15:
 164              		.size	wolfSSL_CTX_free, .-wolfSSL_CTX_free
 165              		.section	.text.wolfSSL_new,"ax",%progbits
 166              		.align	1
 167              		.global	wolfSSL_new
 168              		.code	16
 169              		.thumb_func
 170              		.type	wolfSSL_new, %function
 171              	wolfSSL_new:
 172              	.LFB16:
 204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL* ssl = NULL;
 173              		.loc 1 204 0
 174              		.cfi_startproc
 175              	.LVL16:
 176 0000 38B5     		push	{r3, r4, r5, lr}
 177              		.cfi_def_cfa_offset 16
 178              		.cfi_offset 3, -16
 179              		.cfi_offset 4, -12
 180              		.cfi_offset 5, -8
 181              		.cfi_offset 14, -4
 211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl;
 182              		.loc 1 211 0
 183 0002 0028     		cmp	r0, #0
 184 0004 0FD0     		beq	.L25
 185 0006 051C     		mov	r5, r0
 214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 186              		.loc 1 214 0
 187 0008 8720     		mov	r0, #135
 188              	.LVL17:
 189 000a 8000     		lsl	r0, r0, #2
 190 000c FFF7FEFF 		bl	wolfSSL_Malloc
 191              	.LVL18:
 192 0010 041E     		sub	r4, r0, #0
 193              	.LVL19:
 215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if ( (ret = InitSSL(ssl, ctx)) < 0) {
 194              		.loc 1 215 0
 195 0012 08D0     		beq	.L25
 216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeSSL(ssl);
 196              		.loc 1 216 0
 197 0014 291C     		mov	r1, r5
 198 0016 FFF7FEFF 		bl	InitSSL
 199              	.LVL20:
 200 001a 031C     		mov	r3, r0
 201              	.LVL21:
 202 001c 201C     		mov	r0, r4
 203              	.LVL22:
 204 001e 002B     		cmp	r3, #0
 205 0020 02DA     		bge	.L19
 217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 43


 206              		.loc 1 217 0
 207 0022 FFF7FEFF 		bl	FreeSSL
 208              	.LVL23:
 209              	.L25:
 218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 210              		.loc 1 218 0
 211 0026 0020     		mov	r0, #0
 212              	.LVL24:
 213              	.L19:
 223:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 214              		.loc 1 223 0
 215              		@ sp needed
 216 0028 38BD     		pop	{r3, r4, r5, pc}
 217              		.cfi_endproc
 218              	.LFE16:
 219              		.size	wolfSSL_new, .-wolfSSL_new
 220              		.section	.text.wolfSSL_free,"ax",%progbits
 221              		.align	1
 222              		.global	wolfSSL_free
 223              		.code	16
 224              		.thumb_func
 225              		.type	wolfSSL_free, %function
 226              	wolfSSL_free:
 227              	.LFB17:
 227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_free");
 228              		.loc 1 227 0
 229              		.cfi_startproc
 230              	.LVL25:
 231 0000 08B5     		push	{r3, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeSSL(ssl);
 235              		.loc 1 229 0
 236 0002 0028     		cmp	r0, #0
 237 0004 01D0     		beq	.L26
 230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("SSL_free", 0);
 238              		.loc 1 230 0
 239 0006 FFF7FEFF 		bl	FreeSSL
 240              	.LVL26:
 241              	.L26:
 232:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 242              		.loc 1 232 0
 243              		@ sp needed
 244 000a 08BD     		pop	{r3, pc}
 245              		.cfi_endproc
 246              	.LFE17:
 247              		.size	wolfSSL_free, .-wolfSSL_free
 248              		.section	.text.wolfSSL_set_fd,"ax",%progbits
 249              		.align	1
 250              		.global	wolfSSL_set_fd
 251              		.code	16
 252              		.thumb_func
 253              		.type	wolfSSL_set_fd, %function
 254              	wolfSSL_set_fd:
 255              	.LFB18:
 248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_set_fd");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 44


 256              		.loc 1 248 0
 257              		.cfi_startproc
 258              	.LVL27:
 250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->wfd = fd;
 259              		.loc 1 250 0
 260 0000 031C     		mov	r3, r0
 261 0002 FC33     		add	r3, r3, #252
 262 0004 5962     		str	r1, [r3, #36]
 251:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 263              		.loc 1 251 0
 264 0006 9962     		str	r1, [r3, #40]
 253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->IOCB_WriteCtx = &ssl->wfd;
 265              		.loc 1 253 0
 266 0008 2433     		add	r3, r3, #36
 267 000a 0361     		str	r3, [r0, #16]
 254:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 268              		.loc 1 254 0
 269 000c 0433     		add	r3, r3, #4
 270 000e 4361     		str	r3, [r0, #20]
 266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 271              		.loc 1 266 0
 272              		@ sp needed
 273 0010 0120     		mov	r0, #1
 274              	.LVL28:
 275 0012 7047     		bx	lr
 276              		.cfi_endproc
 277              	.LFE18:
 278              		.size	wolfSSL_set_fd, .-wolfSSL_set_fd
 279              		.section	.text.wolfSSL_get_cipher_list,"ax",%progbits
 280              		.align	1
 281              		.global	wolfSSL_get_cipher_list
 282              		.code	16
 283              		.thumb_func
 284              		.type	wolfSSL_get_cipher_list, %function
 285              	wolfSSL_get_cipher_list:
 286              	.LFB19:
 273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* const* ciphers = GetCipherNames();
 287              		.loc 1 273 0
 288              		.cfi_startproc
 289              	.LVL29:
 290 0000 38B5     		push	{r3, r4, r5, lr}
 291              		.cfi_def_cfa_offset 16
 292              		.cfi_offset 3, -16
 293              		.cfi_offset 4, -12
 294              		.cfi_offset 5, -8
 295              		.cfi_offset 14, -4
 273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* const* ciphers = GetCipherNames();
 296              		.loc 1 273 0
 297 0002 041C     		mov	r4, r0
 274:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 298              		.loc 1 274 0
 299 0004 FFF7FEFF 		bl	GetCipherNames
 300              	.LVL30:
 301 0008 051C     		mov	r5, r0
 302              	.LVL31:
 276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 303              		.loc 1 276 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 45


 304 000a FFF7FEFF 		bl	GetCipherNamesSize
 305              	.LVL32:
 277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 306              		.loc 1 277 0
 307 000e 0023     		mov	r3, #0
 276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 308              		.loc 1 276 0
 309 0010 8442     		cmp	r4, r0
 310 0012 03DA     		bge	.L33
 276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 311              		.loc 1 276 0 is_stmt 0 discriminator 1
 312 0014 9C42     		cmp	r4, r3
 313 0016 01DB     		blt	.L33
 280:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 314              		.loc 1 280 0 is_stmt 1
 315 0018 A400     		lsl	r4, r4, #2
 316              	.LVL33:
 317 001a 6359     		ldr	r3, [r4, r5]
 318              	.L33:
 281:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 319              		.loc 1 281 0
 320 001c 181C     		mov	r0, r3
 321              		@ sp needed
 322              	.LVL34:
 323 001e 38BD     		pop	{r3, r4, r5, pc}
 324              		.cfi_endproc
 325              	.LFE19:
 326              		.size	wolfSSL_get_cipher_list, .-wolfSSL_get_cipher_list
 327              		.section	.text.wolfSSL_get_ciphers,"ax",%progbits
 328              		.align	1
 329              		.global	wolfSSL_get_ciphers
 330              		.code	16
 331              		.thumb_func
 332              		.type	wolfSSL_get_ciphers, %function
 333              	wolfSSL_get_ciphers:
 334              	.LFB20:
 285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* const* ciphers = GetCipherNames();
 335              		.loc 1 285 0
 336              		.cfi_startproc
 337              	.LVL35:
 338 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 339              		.cfi_def_cfa_offset 20
 340              		.cfi_offset 4, -20
 341              		.cfi_offset 5, -16
 342              		.cfi_offset 6, -12
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 85B0     		sub	sp, sp, #20
 346              		.cfi_def_cfa_offset 40
 285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* const* ciphers = GetCipherNames();
 347              		.loc 1 285 0
 348 0004 0391     		str	r1, [sp, #12]
 349 0006 041C     		mov	r4, r0
 286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  totalInc = 0;
 350              		.loc 1 286 0
 351 0008 FFF7FEFF 		bl	GetCipherNames
 352              	.LVL36:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 46


 353 000c 051C     		mov	r5, r0
 354              	.LVL37:
 290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  i;
 355              		.loc 1 290 0
 356 000e FFF7FEFF 		bl	GetCipherNamesSize
 357              	.LVL38:
 358 0012 0190     		str	r0, [sp, #4]
 359              	.LVL39:
 293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 360              		.loc 1 293 0
 361 0014 002C     		cmp	r4, #0
 362 0016 28D0     		beq	.L43
 293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 363              		.loc 1 293 0 is_stmt 0 discriminator 1
 364 0018 039B     		ldr	r3, [sp, #12]
 365 001a 002B     		cmp	r3, #0
 366 001c 25DD     		ble	.L43
 293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 367              		.loc 1 293 0
 368 001e 0026     		mov	r6, #0
 369 0020 371C     		mov	r7, r6
 370              	.LVL40:
 371              	.L38:
 297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         step = (int)(XSTRLEN(ciphers[i]) + 1);  /* delimiter */
 372              		.loc 1 297 0 is_stmt 1 discriminator 1
 373 0022 019B     		ldr	r3, [sp, #4]
 374 0024 9E42     		cmp	r6, r3
 375 0026 1EDA     		bge	.L47
 298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         totalInc += step;
 376              		.loc 1 298 0
 377 0028 2B68     		ldr	r3, [r5]
 378 002a 181C     		mov	r0, r3
 379 002c 0293     		str	r3, [sp, #8]
 380 002e FFF7FEFF 		bl	strlen
 381              	.LVL41:
 382 0032 431C     		add	r3, r0, #1
 299:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 383              		.loc 1 299 0
 384 0034 FF18     		add	r7, r7, r3
 385              	.LVL42:
 302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCPY(buf, ciphers[i], XSTRLEN(ciphers[i]));
 386              		.loc 1 302 0
 387 0036 039B     		ldr	r3, [sp, #12]
 298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         totalInc += step;
 388              		.loc 1 298 0
 389 0038 021C     		mov	r2, r0
 390              	.LVL43:
 302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCPY(buf, ciphers[i], XSTRLEN(ciphers[i]));
 391              		.loc 1 302 0
 392 003a 9F42     		cmp	r7, r3
 393 003c 17DA     		bge	.L44
 303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             buf += XSTRLEN(ciphers[i]);
 394              		.loc 1 303 0
 395 003e 201C     		mov	r0, r4
 396              	.LVL44:
 397 0040 0299     		ldr	r1, [sp, #8]
 398 0042 FFF7FEFF 		bl	strncpy
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 47


 399              	.LVL45:
 304:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 400              		.loc 1 304 0
 401 0046 2868     		ldr	r0, [r5]
 402 0048 FFF7FEFF 		bl	strlen
 403              	.LVL46:
 306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 *buf++ = delim;
 404              		.loc 1 306 0
 405 004c 019B     		ldr	r3, [sp, #4]
 304:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 406              		.loc 1 304 0
 407 004e 2018     		add	r0, r4, r0
 408              	.LVL47:
 306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 *buf++ = delim;
 409              		.loc 1 306 0
 410 0050 013B     		sub	r3, r3, #1
 411 0052 441C     		add	r4, r0, #1
 412 0054 9E42     		cmp	r6, r3
 413 0056 01DA     		bge	.L39
 414              	.LVL48:
 307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
 415              		.loc 1 307 0
 416 0058 3A23     		mov	r3, #58
 417 005a 00E0     		b	.L45
 418              	.LVL49:
 419              	.L39:
 309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 420              		.loc 1 309 0
 421 005c 0023     		mov	r3, #0
 422              	.LVL50:
 423              	.L45:
 424 005e 0370     		strb	r3, [r0]
 297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         step = (int)(XSTRLEN(ciphers[i]) + 1);  /* delimiter */
 425              		.loc 1 297 0
 426 0060 0136     		add	r6, r6, #1
 427              	.LVL51:
 428 0062 0435     		add	r5, r5, #4
 429 0064 DDE7     		b	.L38
 430              	.LVL52:
 431              	.L47:
 314:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 432              		.loc 1 314 0
 433 0066 0120     		mov	r0, #1
 434 0068 03E0     		b	.L37
 435              	.LVL53:
 436              	.L43:
 294:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 437              		.loc 1 294 0
 438 006a AD20     		mov	r0, #173
 439              	.LVL54:
 440 006c 00E0     		b	.L46
 441              	.LVL55:
 442              	.L44:
 312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 443              		.loc 1 312 0
 444 006e 8420     		mov	r0, #132
 445              	.LVL56:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 48


 446              	.L46:
 447 0070 4042     		neg	r0, r0
 448              	.L37:
 315:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 449              		.loc 1 315 0
 450 0072 05B0     		add	sp, sp, #20
 451              		@ sp needed
 452              	.LVL57:
 453 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 454              		.cfi_endproc
 455              	.LFE20:
 456              		.size	wolfSSL_get_ciphers, .-wolfSSL_get_ciphers
 457              		.section	.text.wolfSSL_get_fd,"ax",%progbits
 458              		.align	1
 459              		.global	wolfSSL_get_fd
 460              		.code	16
 461              		.thumb_func
 462              		.type	wolfSSL_get_fd, %function
 463              	wolfSSL_get_fd:
 464              	.LFB21:
 319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_fd");
 465              		.loc 1 319 0
 466              		.cfi_startproc
 467              	.LVL58:
 322:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 468              		.loc 1 322 0
 469 0000 FC30     		add	r0, r0, #252
 470              	.LVL59:
 471 0002 406A     		ldr	r0, [r0, #36]
 472              	.LVL60:
 323:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 473              		.loc 1 323 0
 474              		@ sp needed
 475 0004 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE21:
 478              		.size	wolfSSL_get_fd, .-wolfSSL_get_fd
 479              		.section	.text.wolfSSL_get_using_nonblock,"ax",%progbits
 480              		.align	1
 481              		.global	wolfSSL_get_using_nonblock
 482              		.code	16
 483              		.thumb_func
 484              		.type	wolfSSL_get_using_nonblock, %function
 485              	wolfSSL_get_using_nonblock:
 486              	.LFB22:
 327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_get_using_nonblock");
 487              		.loc 1 327 0
 488              		.cfi_startproc
 489              	.LVL61:
 330:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 490              		.loc 1 330 0
 491 0000 8423     		mov	r3, #132
 492 0002 9B00     		lsl	r3, r3, #2
 493 0004 C05C     		ldrb	r0, [r0, r3]
 494              	.LVL62:
 331:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 495              		.loc 1 331 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 49


 496              		@ sp needed
 330:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 497              		.loc 1 330 0
 498 0006 C006     		lsl	r0, r0, #27
 499 0008 C00F     		lsr	r0, r0, #31
 331:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 500              		.loc 1 331 0
 501 000a 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE22:
 504              		.size	wolfSSL_get_using_nonblock, .-wolfSSL_get_using_nonblock
 505              		.section	.text.wolfSSL_dtls,"ax",%progbits
 506              		.align	1
 507              		.global	wolfSSL_dtls
 508              		.code	16
 509              		.thumb_func
 510              		.type	wolfSSL_dtls, %function
 511              	wolfSSL_dtls:
 512              	.LFB23:
 335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->options.dtls;
 513              		.loc 1 335 0
 514              		.cfi_startproc
 515              	.LVL63:
 336:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 516              		.loc 1 336 0
 517 0000 024B     		ldr	r3, .L51
 337:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 518              		.loc 1 337 0
 519              		@ sp needed
 336:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 520              		.loc 1 336 0
 521 0002 C05C     		ldrb	r0, [r0, r3]
 522              	.LVL64:
 523 0004 4006     		lsl	r0, r0, #25
 524 0006 C00F     		lsr	r0, r0, #31
 337:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 525              		.loc 1 337 0
 526 0008 7047     		bx	lr
 527              	.L52:
 528 000a C046     		.align	2
 529              	.L51:
 530 000c 0D020000 		.word	525
 531              		.cfi_endproc
 532              	.LFE23:
 533              		.size	wolfSSL_dtls, .-wolfSSL_dtls
 534              		.section	.text.wolfSSL_set_using_nonblock,"ax",%progbits
 535              		.align	1
 536              		.global	wolfSSL_set_using_nonblock
 537              		.code	16
 538              		.thumb_func
 539              		.type	wolfSSL_set_using_nonblock, %function
 540              	wolfSSL_set_using_nonblock:
 541              	.LFB24:
 342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_set_using_nonblock");
 542              		.loc 1 342 0
 543              		.cfi_startproc
 544              	.LVL65:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 50


 344:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 545              		.loc 1 344 0
 546 0000 4B1E     		sub	r3, r1, #1
 547 0002 9941     		sbc	r1, r1, r3
 548              	.LVL66:
 549 0004 8323     		mov	r3, #131
 550 0006 1022     		mov	r2, #16
 551 0008 9B00     		lsl	r3, r3, #2
 552 000a C018     		add	r0, r0, r3
 553              	.LVL67:
 554 000c 0B01     		lsl	r3, r1, #4
 555 000e 0179     		ldrb	r1, [r0, #4]
 345:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 556              		.loc 1 345 0
 557              		@ sp needed
 344:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 558              		.loc 1 344 0
 559 0010 9143     		bic	r1, r2
 560 0012 1943     		orr	r1, r3
 561 0014 0171     		strb	r1, [r0, #4]
 345:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 562              		.loc 1 345 0
 563 0016 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE24:
 566              		.size	wolfSSL_set_using_nonblock, .-wolfSSL_set_using_nonblock
 567              		.section	.text.wolfSSL_dtls_set_peer,"ax",%progbits
 568              		.align	1
 569              		.global	wolfSSL_dtls_set_peer
 570              		.code	16
 571              		.thumb_func
 572              		.type	wolfSSL_dtls_set_peer, %function
 573              	wolfSSL_dtls_set_peer:
 574              	.LFB25:
 349:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
 575              		.loc 1 349 0
 576              		.cfi_startproc
 577              	.LVL68:
 367:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 578              		.loc 1 367 0
 579 0000 0320     		mov	r0, #3
 580              	.LVL69:
 581              		@ sp needed
 582 0002 4042     		neg	r0, r0
 583 0004 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE25:
 586              		.size	wolfSSL_dtls_set_peer, .-wolfSSL_dtls_set_peer
 587              		.section	.text.wolfSSL_dtls_get_peer,"ax",%progbits
 588              		.align	1
 589              		.global	wolfSSL_dtls_get_peer
 590              		.code	16
 591              		.thumb_func
 592              		.type	wolfSSL_dtls_get_peer, %function
 593              	wolfSSL_dtls_get_peer:
 594              	.LFB26:
 370:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 51


 595              		.loc 1 370 0
 596              		.cfi_startproc
 597              	.LVL70:
 385:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_LEANPSK */
 598              		.loc 1 385 0
 599 0000 0320     		mov	r0, #3
 600              	.LVL71:
 601              		@ sp needed
 602 0002 4042     		neg	r0, r0
 603 0004 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE26:
 606              		.size	wolfSSL_dtls_get_peer, .-wolfSSL_dtls_get_peer
 607              		.section	.text.wolfSSL_GetObjectSize,"ax",%progbits
 608              		.align	1
 609              		.global	wolfSSL_GetObjectSize
 610              		.code	16
 611              		.thumb_func
 612              		.type	wolfSSL_GetObjectSize, %function
 613              	wolfSSL_GetObjectSize:
 614              	.LFB28:
 414:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SHOW_SIZES
 615              		.loc 1 414 0
 616              		.cfi_startproc
 465:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 617              		.loc 1 465 0
 618 0000 8720     		mov	r0, #135
 619              		@ sp needed
 620 0002 8000     		lsl	r0, r0, #2
 621 0004 7047     		bx	lr
 622              		.cfi_endproc
 623              	.LFE28:
 624              		.size	wolfSSL_GetObjectSize, .-wolfSSL_GetObjectSize
 625              		.section	.text.wolfSSL_write,"ax",%progbits
 626              		.align	1
 627              		.global	wolfSSL_write
 628              		.code	16
 629              		.thumb_func
 630              		.type	wolfSSL_write, %function
 631              	wolfSSL_write:
 632              	.LFB29:
 594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
 633              		.loc 1 594 0
 634              		.cfi_startproc
 635              	.LVL72:
 636 0000 08B5     		push	{r3, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 3, -8
 639              		.cfi_offset 14, -4
 599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 640              		.loc 1 599 0
 641 0002 0028     		cmp	r0, #0
 642 0004 09D0     		beq	.L61
 599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 643              		.loc 1 599 0 is_stmt 0 discriminator 1
 644 0006 0029     		cmp	r1, #0
 645 0008 07D0     		beq	.L61
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 52


 599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 646              		.loc 1 599 0 discriminator 2
 647 000a 002A     		cmp	r2, #0
 648 000c 05DB     		blt	.L61
 606:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 649              		.loc 1 606 0 is_stmt 1
 650 000e FFF7FEFF 		bl	SendData
 651              	.LVL73:
 610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 652              		.loc 1 610 0
 653 0012 0028     		cmp	r0, #0
 654 0014 03DA     		bge	.L58
 611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 655              		.loc 1 611 0
 656 0016 0120     		mov	r0, #1
 657              	.LVL74:
 658 0018 00E0     		b	.L63
 659              	.LVL75:
 660              	.L61:
 600:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 661              		.loc 1 600 0
 662 001a AD20     		mov	r0, #173
 663              	.LVL76:
 664              	.L63:
 611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 665              		.loc 1 611 0
 666 001c 4042     		neg	r0, r0
 667              	.L58:
 614:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 668              		.loc 1 614 0
 669              		@ sp needed
 670 001e 08BD     		pop	{r3, pc}
 671              		.cfi_endproc
 672              	.LFE29:
 673              		.size	wolfSSL_write, .-wolfSSL_write
 674              		.section	.text.wolfSSL_peek,"ax",%progbits
 675              		.align	1
 676              		.global	wolfSSL_peek
 677              		.code	16
 678              		.thumb_func
 679              		.type	wolfSSL_peek, %function
 680              	wolfSSL_peek:
 681              	.LFB31:
 651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_peek()");
 682              		.loc 1 651 0
 683              		.cfi_startproc
 684              	.LVL77:
 685 0000 08B5     		push	{r3, lr}
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 3, -8
 688              		.cfi_offset 14, -4
 689              	.LBB15:
 690              	.LBB16:
 623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 691              		.loc 1 623 0
 692 0002 0028     		cmp	r0, #0
 693 0004 0FD0     		beq	.L69
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 53


 694 0006 0029     		cmp	r1, #0
 695 0008 0DD0     		beq	.L69
 696 000a 002A     		cmp	r2, #0
 697 000c 0BDB     		blt	.L69
 698              	.LVL78:
 699              	.LBB17:
 700              	.LBB18:
 115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 701              		.loc 1 115 0
 702 000e 8023     		mov	r3, #128
 703 0010 DB01     		lsl	r3, r3, #7
 704 0012 9A42     		cmp	r2, r3
 705 0014 00D9     		bls	.L66
 706 0016 1A1C     		mov	r2, r3
 707              	.LVL79:
 708              	.L66:
 709              	.LBE18:
 710              	.LBE17:
 638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 711              		.loc 1 638 0
 712 0018 0123     		mov	r3, #1
 713 001a FFF7FEFF 		bl	ReceiveData
 714              	.LVL80:
 643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 715              		.loc 1 643 0
 716 001e 0028     		cmp	r0, #0
 717 0020 03DA     		bge	.L65
 644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 718              		.loc 1 644 0
 719 0022 0120     		mov	r0, #1
 720              	.LVL81:
 721 0024 00E0     		b	.L71
 722              	.LVL82:
 723              	.L69:
 624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 724              		.loc 1 624 0
 725 0026 AD20     		mov	r0, #173
 726              	.LVL83:
 727              	.L71:
 644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 728              		.loc 1 644 0
 729 0028 4042     		neg	r0, r0
 730              	.L65:
 731              	.LBE16:
 732              	.LBE15:
 655:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 733              		.loc 1 655 0
 734              		@ sp needed
 735 002a 08BD     		pop	{r3, pc}
 736              		.cfi_endproc
 737              	.LFE31:
 738              		.size	wolfSSL_peek, .-wolfSSL_peek
 739              		.section	.text.wolfSSL_read,"ax",%progbits
 740              		.align	1
 741              		.global	wolfSSL_read
 742              		.code	16
 743              		.thumb_func
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 54


 744              		.type	wolfSSL_read, %function
 745              	wolfSSL_read:
 746              	.LFB32:
 659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_read()");
 747              		.loc 1 659 0
 748              		.cfi_startproc
 749              	.LVL84:
 750 0000 08B5     		push	{r3, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 3, -8
 753              		.cfi_offset 14, -4
 754              	.LBB23:
 755              	.LBB24:
 623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 756              		.loc 1 623 0
 757 0002 0028     		cmp	r0, #0
 758 0004 0FD0     		beq	.L77
 759 0006 0029     		cmp	r1, #0
 760 0008 0DD0     		beq	.L77
 761 000a 002A     		cmp	r2, #0
 762 000c 0BDB     		blt	.L77
 763              	.LVL85:
 764              	.LBB25:
 765              	.LBB26:
 115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 766              		.loc 1 115 0
 767 000e 8023     		mov	r3, #128
 768 0010 DB01     		lsl	r3, r3, #7
 769 0012 9A42     		cmp	r2, r3
 770 0014 00D9     		bls	.L74
 771 0016 1A1C     		mov	r2, r3
 772              	.LVL86:
 773              	.L74:
 774              	.LBE26:
 775              	.LBE25:
 638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 776              		.loc 1 638 0
 777 0018 0023     		mov	r3, #0
 778 001a FFF7FEFF 		bl	ReceiveData
 779              	.LVL87:
 643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 780              		.loc 1 643 0
 781 001e 0028     		cmp	r0, #0
 782 0020 03DA     		bge	.L73
 644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 783              		.loc 1 644 0
 784 0022 0120     		mov	r0, #1
 785              	.LVL88:
 786 0024 00E0     		b	.L79
 787              	.LVL89:
 788              	.L77:
 624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 789              		.loc 1 624 0
 790 0026 AD20     		mov	r0, #173
 791              	.LVL90:
 792              	.L79:
 644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 55


 793              		.loc 1 644 0
 794 0028 4042     		neg	r0, r0
 795              	.L73:
 796              	.LBE24:
 797              	.LBE23:
 663:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 798              		.loc 1 663 0
 799              		@ sp needed
 800 002a 08BD     		pop	{r3, pc}
 801              		.cfi_endproc
 802              	.LFE32:
 803              		.size	wolfSSL_read, .-wolfSSL_read
 804              		.section	.text.wolfSSL_send,"ax",%progbits
 805              		.align	1
 806              		.global	wolfSSL_send
 807              		.code	16
 808              		.thumb_func
 809              		.type	wolfSSL_send, %function
 810              	wolfSSL_send:
 811              	.LFB33:
1248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
 812              		.loc 1 1248 0
 813              		.cfi_startproc
 814              	.LVL91:
 815 0000 38B5     		push	{r3, r4, r5, lr}
 816              		.cfi_def_cfa_offset 16
 817              		.cfi_offset 3, -16
 818              		.cfi_offset 4, -12
 819              		.cfi_offset 5, -8
 820              		.cfi_offset 14, -4
1254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 821              		.loc 1 1254 0
 822 0002 0028     		cmp	r0, #0
 823 0004 0BD0     		beq	.L84
1254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 824              		.loc 1 1254 0 is_stmt 0 discriminator 1
 825 0006 0029     		cmp	r1, #0
 826 0008 09D0     		beq	.L84
1254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 827              		.loc 1 1254 0 discriminator 2
 828 000a 002A     		cmp	r2, #0
 829 000c 07DB     		blt	.L84
1257:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 830              		.loc 1 1257 0 is_stmt 1
 831 000e 041C     		mov	r4, r0
 832 0010 FC34     		add	r4, r4, #252
 833 0012 256B     		ldr	r5, [r4, #48]
 834              	.LVL92:
1259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_write(ssl, data, sz);
 835              		.loc 1 1259 0
 836 0014 2363     		str	r3, [r4, #48]
1260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->wflags = oldFlags;
 837              		.loc 1 1260 0
 838 0016 FFF7FEFF 		bl	wolfSSL_write
 839              	.LVL93:
1261:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 840              		.loc 1 1261 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 56


 841 001a 2563     		str	r5, [r4, #48]
1265:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 842              		.loc 1 1265 0
 843 001c 01E0     		b	.L81
 844              	.LVL94:
 845              	.L84:
1255:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 846              		.loc 1 1255 0
 847 001e AD20     		mov	r0, #173
 848              	.LVL95:
 849 0020 4042     		neg	r0, r0
 850              	.LVL96:
 851              	.L81:
1266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 852              		.loc 1 1266 0
 853              		@ sp needed
 854 0022 38BD     		pop	{r3, r4, r5, pc}
 855              		.cfi_endproc
 856              	.LFE33:
 857              		.size	wolfSSL_send, .-wolfSSL_send
 858              		.section	.text.wolfSSL_recv,"ax",%progbits
 859              		.align	1
 860              		.global	wolfSSL_recv
 861              		.code	16
 862              		.thumb_func
 863              		.type	wolfSSL_recv, %function
 864              	wolfSSL_recv:
 865              	.LFB34:
1270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
 866              		.loc 1 1270 0
 867              		.cfi_startproc
 868              	.LVL97:
 869 0000 38B5     		push	{r3, r4, r5, lr}
 870              		.cfi_def_cfa_offset 16
 871              		.cfi_offset 3, -16
 872              		.cfi_offset 4, -12
 873              		.cfi_offset 5, -8
 874              		.cfi_offset 14, -4
1276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 875              		.loc 1 1276 0
 876 0002 0028     		cmp	r0, #0
 877 0004 0BD0     		beq	.L89
1276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 878              		.loc 1 1276 0 is_stmt 0 discriminator 1
 879 0006 0029     		cmp	r1, #0
 880 0008 09D0     		beq	.L89
1276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 881              		.loc 1 1276 0 discriminator 2
 882 000a 002A     		cmp	r2, #0
 883 000c 07DB     		blt	.L89
1279:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 884              		.loc 1 1279 0 is_stmt 1
 885 000e 041C     		mov	r4, r0
 886 0010 FC34     		add	r4, r4, #252
 887 0012 E56A     		ldr	r5, [r4, #44]
 888              	.LVL98:
1281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_read(ssl, data, sz);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 57


 889              		.loc 1 1281 0
 890 0014 E362     		str	r3, [r4, #44]
1282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->rflags = oldFlags;
 891              		.loc 1 1282 0
 892 0016 FFF7FEFF 		bl	wolfSSL_read
 893              	.LVL99:
1283:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 894              		.loc 1 1283 0
 895 001a E562     		str	r5, [r4, #44]
1287:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 896              		.loc 1 1287 0
 897 001c 01E0     		b	.L86
 898              	.LVL100:
 899              	.L89:
1277:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 900              		.loc 1 1277 0
 901 001e AD20     		mov	r0, #173
 902              	.LVL101:
 903 0020 4042     		neg	r0, r0
 904              	.LVL102:
 905              	.L86:
1288:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 906              		.loc 1 1288 0
 907              		@ sp needed
 908 0022 38BD     		pop	{r3, r4, r5, pc}
 909              		.cfi_endproc
 910              	.LFE34:
 911              		.size	wolfSSL_recv, .-wolfSSL_recv
 912              		.section	.text.wolfSSL_shutdown,"ax",%progbits
 913              		.align	1
 914              		.global	wolfSSL_shutdown
 915              		.code	16
 916              		.thumb_func
 917              		.type	wolfSSL_shutdown, %function
 918              	wolfSSL_shutdown:
 919              	.LFB35:
1294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  ret = SSL_FATAL_ERROR;
 920              		.loc 1 1294 0
 921              		.cfi_startproc
 922              	.LVL103:
 923 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 924              		.cfi_def_cfa_offset 24
 925              		.cfi_offset 0, -24
 926              		.cfi_offset 1, -20
 927              		.cfi_offset 4, -16
 928              		.cfi_offset 5, -12
 929              		.cfi_offset 6, -8
 930              		.cfi_offset 14, -4
1299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 931              		.loc 1 1299 0
 932 0002 0028     		cmp	r0, #0
 933 0004 02D1     		bne	.L91
 934              	.LVL104:
 935              	.L95:
1300:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 936              		.loc 1 1300 0
 937 0006 0120     		mov	r0, #1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 58


 938 0008 4042     		neg	r0, r0
 939 000a 34E0     		b	.L92
 940              	.LVL105:
 941              	.L91:
1302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("quiet shutdown, no close notify sent");
 942              		.loc 1 1302 0
 943 000c 8423     		mov	r3, #132
 944 000e 0225     		mov	r5, #2
 945 0010 9B00     		lsl	r3, r3, #2
 946 0012 C35C     		ldrb	r3, [r0, r3]
 947 0014 2B40     		and	r3, r5
 948 0016 2DD1     		bne	.L99
1308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   !ssl->options.sentNotify) {
 949              		.loc 1 1308 0
 950 0018 8322     		mov	r2, #131
 951 001a 9200     		lsl	r2, r2, #2
 952 001c 8158     		ldr	r1, [r0, r2]
 953 001e B022     		mov	r2, #176
 954 0020 D202     		lsl	r2, r2, #11
 955 0022 041C     		mov	r4, r0
 956 0024 0A40     		and	r2, r1
 957 0026 12D1     		bne	.L94
1310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->error < 0) {
 958              		.loc 1 1310 0
 959 0028 0121     		mov	r1, #1
 960 002a FFF7FEFF 		bl	SendAlert
 961              	.LVL106:
 962 002e 231C     		mov	r3, r4
 963 0030 FC33     		add	r3, r3, #252
 964 0032 1862     		str	r0, [r3, #32]
1311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ERROR(ssl->error);
 965              		.loc 1 1311 0
 966 0034 0028     		cmp	r0, #0
 967 0036 E6DB     		blt	.L95
1315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.closeNotify)
 968              		.loc 1 1315 0
 969 0038 8323     		mov	r3, #131
 970 003a 0422     		mov	r2, #4
 971 003c 9B00     		lsl	r3, r3, #2
 972 003e E418     		add	r4, r4, r3
 973              	.LVL107:
 974 0040 A378     		ldrb	r3, [r4, #2]
1319:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 975              		.loc 1 1319 0
 976 0042 281C     		mov	r0, r5
1315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.closeNotify)
 977              		.loc 1 1315 0
 978 0044 1343     		orr	r3, r2
 979 0046 A370     		strb	r3, [r4, #2]
1316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_SUCCESS;
 980              		.loc 1 1316 0
 981 0048 2B42     		tst	r3, r5
 982 004a 14D0     		beq	.L92
 983 004c 12E0     		b	.L99
 984              	.LVL108:
 985              	.L94:
1326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wolfSSL_read(ssl, &tmp, 0);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 59


 986              		.loc 1 1326 0
 987 004e 0622     		mov	r2, #6
 988 0050 094E     		ldr	r6, .L100
 989 0052 815D     		ldrb	r1, [r0, r6]
 990 0054 0A40     		and	r2, r1
 991 0056 042A     		cmp	r2, #4
 992 0058 D5D1     		bne	.L95
1327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret < 0) {
 993              		.loc 1 1327 0
 994 005a 6A46     		mov	r2, sp
 995 005c D11D     		add	r1, r2, #7
 996 005e 1A1C     		mov	r2, r3
 997 0060 FFF7FEFF 		bl	wolfSSL_read
 998              	.LVL109:
1328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ERROR(ssl->error);
 999              		.loc 1 1328 0
 1000 0064 0028     		cmp	r0, #0
 1001 0066 CEDB     		blt	.L95
1331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->error = SSL_ERROR_SYSCALL;   /* simulate OpenSSL behavior */
 1002              		.loc 1 1331 0
 1003 0068 A35D     		ldrb	r3, [r4, r6]
 1004 006a 2B42     		tst	r3, r5
 1005 006c 03D0     		beq	.L92
1332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_SUCCESS;
 1006              		.loc 1 1332 0
 1007 006e 0523     		mov	r3, #5
 1008 0070 FC34     		add	r4, r4, #252
 1009              	.LVL110:
 1010 0072 2362     		str	r3, [r4, #32]
 1011              	.LVL111:
 1012              	.L99:
1333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 1013              		.loc 1 1333 0
 1014 0074 0120     		mov	r0, #1
 1015              	.LVL112:
 1016              	.L92:
1340:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1017              		.loc 1 1340 0
 1018              		@ sp needed
 1019 0076 76BD     		pop	{r1, r2, r4, r5, r6, pc}
 1020              	.L101:
 1021              		.align	2
 1022              	.L100:
 1023 0078 0E020000 		.word	526
 1024              		.cfi_endproc
 1025              	.LFE35:
 1026              		.size	wolfSSL_shutdown, .-wolfSSL_shutdown
 1027              		.section	.text.wolfSSL_get_error,"ax",%progbits
 1028              		.align	1
 1029              		.global	wolfSSL_get_error
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	wolfSSL_get_error, %function
 1033              	wolfSSL_get_error:
 1034              	.LFB36:
1344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_error");
 1035              		.loc 1 1344 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 60


 1036              		.cfi_startproc
 1037              	.LVL113:
1348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 1038              		.loc 1 1348 0
 1039 0000 0023     		mov	r3, #0
1347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_NONE;
 1040              		.loc 1 1347 0
 1041 0002 9942     		cmp	r1, r3
 1042 0004 14DC     		bgt	.L103
1349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 1043              		.loc 1 1349 0
 1044 0006 9842     		cmp	r0, r3
 1045 0008 0CD0     		beq	.L105
1355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_WANT_READ;         /* convert to OpenSSL type */
 1046              		.loc 1 1355 0
 1047 000a FC30     		add	r0, r0, #252
 1048              	.LVL114:
 1049 000c 036A     		ldr	r3, [r0, #32]
 1050 000e 094A     		ldr	r2, .L109
 1051 0010 9342     		cmp	r3, r2
 1052 0012 0AD0     		beq	.L106
1357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_WANT_WRITE;        /* convert to OpenSSL type */
 1053              		.loc 1 1357 0
 1054 0014 084A     		ldr	r2, .L109+4
 1055 0016 9342     		cmp	r3, r2
 1056 0018 09D0     		beq	.L107
1359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_ERROR_ZERO_RETURN;       /* convert to OpenSSL type */
 1057              		.loc 1 1359 0
 1058 001a 084A     		ldr	r2, .L109+8
 1059 001c 9342     		cmp	r3, r2
 1060 001e 07D1     		bne	.L103
1360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->error;
 1061              		.loc 1 1360 0
 1062 0020 0623     		mov	r3, #6
 1063 0022 05E0     		b	.L103
 1064              	.LVL115:
 1065              	.L105:
1350:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1066              		.loc 1 1350 0
 1067 0024 AD23     		mov	r3, #173
 1068 0026 5B42     		neg	r3, r3
 1069 0028 02E0     		b	.L103
 1070              	.LVL116:
 1071              	.L106:
1356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ssl->error == WANT_WRITE)
 1072              		.loc 1 1356 0
 1073 002a 0223     		mov	r3, #2
 1074 002c 00E0     		b	.L103
 1075              	.L107:
1358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ssl->error == ZERO_RETURN)
 1076              		.loc 1 1358 0
 1077 002e 0323     		mov	r3, #3
 1078              	.LVL117:
 1079              	.L103:
1362:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1080              		.loc 1 1362 0
 1081 0030 181C     		mov	r0, r3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 61


 1082              		@ sp needed
 1083 0032 7047     		bx	lr
 1084              	.L110:
 1085              		.align	2
 1086              	.L109:
 1087 0034 BDFEFFFF 		.word	-323
 1088 0038 B9FEFFFF 		.word	-327
 1089 003c A9FEFFFF 		.word	-343
 1090              		.cfi_endproc
 1091              	.LFE36:
 1092              		.size	wolfSSL_get_error, .-wolfSSL_get_error
 1093              		.section	.text.wolfSSL_get_alert_history,"ax",%progbits
 1094              		.align	1
 1095              		.global	wolfSSL_get_alert_history
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	wolfSSL_get_alert_history, %function
 1099              	wolfSSL_get_alert_history:
 1100              	.LFB37:
1367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl && h) {
 1101              		.loc 1 1367 0
 1102              		.cfi_startproc
 1103              	.LVL118:
 1104 0000 10B5     		push	{r4, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 14, -4
1368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *h = ssl->alert_history;
 1108              		.loc 1 1368 0
 1109 0002 0028     		cmp	r0, #0
 1110 0004 08D0     		beq	.L112
1368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *h = ssl->alert_history;
 1111              		.loc 1 1368 0 is_stmt 0 discriminator 1
 1112 0006 0029     		cmp	r1, #0
 1113 0008 06D0     		beq	.L112
1369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 1114              		.loc 1 1369 0 is_stmt 1
 1115 000a 0B1C     		mov	r3, r1
 1116 000c 0D30     		add	r0, r0, #13
 1117              	.LVL119:
 1118 000e FF30     		add	r0, r0, #255
 1119              	.LVL120:
 1120 0010 16C8     		ldmia	r0!, {r1, r2, r4}
 1121 0012 16C3     		stmia	r3!, {r1, r2, r4}
 1122              	.LVL121:
 1123 0014 0268     		ldr	r2, [r0]
 1124 0016 1A60     		str	r2, [r3]
 1125              	.LVL122:
 1126              	.L112:
1372:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1127              		.loc 1 1372 0
 1128 0018 0120     		mov	r0, #1
 1129              		@ sp needed
 1130 001a 10BD     		pop	{r4, pc}
 1131              		.cfi_endproc
 1132              	.LFE37:
 1133              		.size	wolfSSL_get_alert_history, .-wolfSSL_get_alert_history
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 62


 1134              		.section	.text.wolfSSL_want_read,"ax",%progbits
 1135              		.align	1
 1136              		.global	wolfSSL_want_read
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	wolfSSL_want_read, %function
 1140              	wolfSSL_want_read:
 1141              	.LFB38:
1377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_want_read");
 1142              		.loc 1 1377 0
 1143              		.cfi_startproc
 1144              	.LVL123:
1379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
 1145              		.loc 1 1379 0
 1146 0000 FC30     		add	r0, r0, #252
 1147              	.LVL124:
 1148 0002 006A     		ldr	r0, [r0, #32]
 1149              	.LVL125:
1383:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1150              		.loc 1 1383 0
 1151              		@ sp needed
1379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
 1152              		.loc 1 1379 0
 1153 0004 4430     		add	r0, r0, #68
 1154 0006 FF30     		add	r0, r0, #255
 1155 0008 4342     		neg	r3, r0
 1156 000a 5841     		adc	r0, r0, r3
1383:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1157              		.loc 1 1383 0
 1158 000c 7047     		bx	lr
 1159              		.cfi_endproc
 1160              	.LFE38:
 1161              		.size	wolfSSL_want_read, .-wolfSSL_want_read
 1162              		.section	.text.wolfSSL_want_write,"ax",%progbits
 1163              		.align	1
 1164              		.global	wolfSSL_want_write
 1165              		.code	16
 1166              		.thumb_func
 1167              		.type	wolfSSL_want_write, %function
 1168              	wolfSSL_want_write:
 1169              	.LFB39:
1388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_want_write");
 1170              		.loc 1 1388 0
 1171              		.cfi_startproc
 1172              	.LVL126:
1390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
 1173              		.loc 1 1390 0
 1174 0000 FC30     		add	r0, r0, #252
 1175              	.LVL127:
 1176 0002 006A     		ldr	r0, [r0, #32]
 1177              	.LVL128:
1394:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1178              		.loc 1 1394 0
 1179              		@ sp needed
1390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
 1180              		.loc 1 1390 0
 1181 0004 4830     		add	r0, r0, #72
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 63


 1182 0006 FF30     		add	r0, r0, #255
 1183 0008 4342     		neg	r3, r0
 1184 000a 5841     		adc	r0, r0, r3
1394:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1185              		.loc 1 1394 0
 1186 000c 7047     		bx	lr
 1187              		.cfi_endproc
 1188              	.LFE39:
 1189              		.size	wolfSSL_want_write, .-wolfSSL_want_write
 1190              		.section	.text.wolfSSL_ERR_error_string,"ax",%progbits
 1191              		.align	1
 1192              		.global	wolfSSL_ERR_error_string
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	wolfSSL_ERR_error_string, %function
 1196              	wolfSSL_ERR_error_string:
 1197              	.LFB40:
1398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static const char* msg = "Please supply a buffer for error string";
 1198              		.loc 1 1398 0
 1199              		.cfi_startproc
 1200              	.LVL129:
 1201 0000 10B5     		push	{r4, lr}
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 4, -8
 1204              		.cfi_offset 14, -4
1407:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1205              		.loc 1 1407 0
 1206 0002 044C     		ldr	r4, .L125
1402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SetErrorString((int)errNumber, data);
 1207              		.loc 1 1402 0
 1208 0004 0029     		cmp	r1, #0
 1209 0006 02D0     		beq	.L122
 1210 0008 0C1C     		mov	r4, r1
1403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return data;
 1211              		.loc 1 1403 0
 1212 000a FFF7FEFF 		bl	SetErrorString
 1213              	.LVL130:
 1214              	.L122:
1408:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1215              		.loc 1 1408 0
 1216 000e 201C     		mov	r0, r4
 1217              		@ sp needed
 1218 0010 10BD     		pop	{r4, pc}
 1219              	.L126:
 1220 0012 C046     		.align	2
 1221              	.L125:
 1222 0014 00000000 		.word	.LC4
 1223              		.cfi_endproc
 1224              	.LFE40:
 1225              		.size	wolfSSL_ERR_error_string, .-wolfSSL_ERR_error_string
 1226              		.section	.text.wolfSSL_ERR_error_string_n,"ax",%progbits
 1227              		.align	1
 1228              		.global	wolfSSL_ERR_error_string_n
 1229              		.code	16
 1230              		.thumb_func
 1231              		.type	wolfSSL_ERR_error_string_n, %function
 1232              	wolfSSL_ERR_error_string_n:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 64


 1233              	.LFB41:
1412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_ERR_error_string_n");
 1234              		.loc 1 1412 0
 1235              		.cfi_startproc
 1236              	.LVL131:
 1237 0000 30B5     		push	{r4, r5, lr}
 1238              		.cfi_def_cfa_offset 12
 1239              		.cfi_offset 4, -12
 1240              		.cfi_offset 5, -8
 1241              		.cfi_offset 14, -4
 1242 0002 0D1C     		mov	r5, r1
 1243 0004 95B0     		sub	sp, sp, #84
 1244              		.cfi_def_cfa_offset 96
1412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_ERR_error_string_n");
 1245              		.loc 1 1412 0
 1246 0006 141E     		sub	r4, r2, #0
1414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_ERR_error_string(e, buf);
 1247              		.loc 1 1414 0
 1248 0008 4F2C     		cmp	r4, #79
 1249 000a 02D9     		bls	.L128
1415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
 1250              		.loc 1 1415 0
 1251 000c FFF7FEFF 		bl	wolfSSL_ERR_error_string
 1252              	.LVL132:
 1253 0010 0CE0     		b	.L127
 1254              	.LVL133:
 1255              	.L128:
 1256              	.LBB27:
1420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_ERR_error_string(e, tmp);
 1257              		.loc 1 1420 0
 1258 0012 002A     		cmp	r2, #0
 1259 0014 0AD0     		beq	.L127
1421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buf, tmp, len-1);
 1260              		.loc 1 1421 0
 1261 0016 6946     		mov	r1, sp
 1262              	.LVL134:
1422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             buf[len-1] = '\0';
 1263              		.loc 1 1422 0
 1264 0018 013C     		sub	r4, r4, #1
1421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buf, tmp, len-1);
 1265              		.loc 1 1421 0
 1266 001a FFF7FEFF 		bl	wolfSSL_ERR_error_string
 1267              	.LVL135:
1422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             buf[len-1] = '\0';
 1268              		.loc 1 1422 0
 1269 001e 281C     		mov	r0, r5
 1270 0020 6946     		mov	r1, sp
 1271 0022 221C     		mov	r2, r4
 1272 0024 FFF7FEFF 		bl	memcpy
 1273              	.LVL136:
1423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 1274              		.loc 1 1423 0
 1275 0028 0023     		mov	r3, #0
 1276 002a 2B55     		strb	r3, [r5, r4]
 1277              	.LVL137:
 1278              	.L127:
 1279              	.LBE27:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 65


1426:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1280              		.loc 1 1426 0
 1281 002c 15B0     		add	sp, sp, #84
 1282              		@ sp needed
 1283              	.LVL138:
 1284 002e 30BD     		pop	{r4, r5, pc}
 1285              		.cfi_endproc
 1286              	.LFE41:
 1287              		.size	wolfSSL_ERR_error_string_n, .-wolfSSL_ERR_error_string_n
 1288              		.section	.text.wolfSSL_KeepArrays,"ax",%progbits
 1289              		.align	1
 1290              		.global	wolfSSL_KeepArrays
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	wolfSSL_KeepArrays, %function
 1294              	wolfSSL_KeepArrays:
 1295              	.LFB42:
1431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 1296              		.loc 1 1431 0
 1297              		.cfi_startproc
 1298              	.LVL139:
1432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.saveArrays = 1;
 1299              		.loc 1 1432 0
 1300 0000 0028     		cmp	r0, #0
 1301 0002 06D0     		beq	.L134
1433:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1302              		.loc 1 1433 0
 1303 0004 8323     		mov	r3, #131
 1304 0006 2022     		mov	r2, #32
 1305 0008 9B00     		lsl	r3, r3, #2
 1306 000a C018     		add	r0, r0, r3
 1307              	.LVL140:
 1308 000c 0379     		ldrb	r3, [r0, #4]
 1309 000e 1343     		orr	r3, r2
 1310 0010 0371     		strb	r3, [r0, #4]
 1311              	.LVL141:
 1312              	.L134:
1434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1313              		.loc 1 1434 0
 1314              		@ sp needed
 1315 0012 7047     		bx	lr
 1316              		.cfi_endproc
 1317              	.LFE42:
 1318              		.size	wolfSSL_KeepArrays, .-wolfSSL_KeepArrays
 1319              		.section	.text.wolfSSL_FreeArrays,"ax",%progbits
 1320              		.align	1
 1321              		.global	wolfSSL_FreeArrays
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	wolfSSL_FreeArrays, %function
 1325              	wolfSSL_FreeArrays:
 1326              	.LFB43:
1439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl && ssl->options.handShakeState == HANDSHAKE_DONE) {
 1327              		.loc 1 1439 0
 1328              		.cfi_startproc
 1329              	.LVL142:
 1330 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 66


 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 3, -8
 1333              		.cfi_offset 14, -4
1440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.saveArrays = 0;
 1334              		.loc 1 1440 0
 1335 0002 0028     		cmp	r0, #0
 1336 0004 0DD0     		beq	.L139
1440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.saveArrays = 0;
 1337              		.loc 1 1440 0 is_stmt 0 discriminator 1
 1338 0006 074B     		ldr	r3, .L144
 1339 0008 C35C     		ldrb	r3, [r0, r3]
 1340 000a 0A2B     		cmp	r3, #10
 1341 000c 09D1     		bne	.L139
1441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeArrays(ssl, 1);
 1342              		.loc 1 1441 0 is_stmt 1
 1343 000e 8323     		mov	r3, #131
 1344 0010 2021     		mov	r1, #32
 1345 0012 9B00     		lsl	r3, r3, #2
 1346 0014 C218     		add	r2, r0, r3
 1347 0016 1379     		ldrb	r3, [r2, #4]
 1348 0018 8B43     		bic	r3, r1
 1349 001a 1371     		strb	r3, [r2, #4]
1442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 1350              		.loc 1 1442 0
 1351 001c 1F39     		sub	r1, r1, #31
 1352 001e FFF7FEFF 		bl	FreeArrays
 1353              	.LVL143:
 1354              	.L139:
1444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1355              		.loc 1 1444 0
 1356              		@ sp needed
 1357 0022 08BD     		pop	{r3, pc}
 1358              	.L145:
 1359              		.align	2
 1360              	.L144:
 1361 0024 16020000 		.word	534
 1362              		.cfi_endproc
 1363              	.LFE43:
 1364              		.size	wolfSSL_FreeArrays, .-wolfSSL_FreeArrays
 1365              		.section	.text.wolfSSL_GetMacSecret,"ax",%progbits
 1366              		.align	1
 1367              		.global	wolfSSL_GetMacSecret
 1368              		.code	16
 1369              		.thumb_func
 1370              		.type	wolfSSL_GetMacSecret, %function
 1371              	wolfSSL_GetMacSecret:
 1372              	.LFB44:
1448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 1373              		.loc 1 1448 0
 1374              		.cfi_startproc
 1375              	.LVL144:
1448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 1376              		.loc 1 1448 0
 1377 0000 031E     		sub	r3, r0, #0
1449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
 1378              		.loc 1 1449 0
 1379 0002 0ED0     		beq	.L147
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 67


1452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****          (ssl->options.side == WOLFSSL_SERVER_END &&  verify) )
 1380              		.loc 1 1452 0
 1381 0004 8322     		mov	r2, #131
 1382 0006 9200     		lsl	r2, r2, #2
 1383 0008 9A5C     		ldrb	r2, [r3, r2]
 1384 000a D206     		lsl	r2, r2, #27
 1385 000c 02D5     		bpl	.L148
1452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****          (ssl->options.side == WOLFSSL_SERVER_END &&  verify) )
 1386              		.loc 1 1452 0 is_stmt 0 discriminator 1
 1387 000e 0029     		cmp	r1, #0
 1388 0010 04D1     		bne	.L150
 1389 0012 01E0     		b	.L149
 1390              	.L148:
1453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->keys.client_write_MAC_secret;
 1391              		.loc 1 1453 0 is_stmt 1
 1392 0014 0029     		cmp	r1, #0
 1393 0016 01D0     		beq	.L150
 1394              	.L149:
1454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
 1395              		.loc 1 1454 0
 1396 0018 5933     		add	r3, r3, #89
 1397 001a 00E0     		b	.L158
 1398              	.L150:
1456:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1399              		.loc 1 1456 0
 1400 001c 7933     		add	r3, r3, #121
 1401              	.L158:
 1402 001e FF33     		add	r3, r3, #255
 1403 0020 181C     		mov	r0, r3
 1404              	.LVL145:
 1405              	.L147:
1457:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1406              		.loc 1 1457 0
 1407              		@ sp needed
 1408 0022 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE44:
 1411              		.size	wolfSSL_GetMacSecret, .-wolfSSL_GetMacSecret
 1412              		.section	.text.AllocDer,"ax",%progbits
 1413              		.align	1
 1414              		.global	AllocDer
 1415              		.code	16
 1416              		.thumb_func
 1417              		.type	AllocDer, %function
 1418              	AllocDer:
 1419              	.LFB45:
1640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = BAD_FUNC_ARG;
 1420              		.loc 1 1640 0
 1421              		.cfi_startproc
 1422              	.LVL146:
 1423 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1424              		.cfi_def_cfa_offset 32
 1425              		.cfi_offset 0, -32
 1426              		.cfi_offset 1, -28
 1427              		.cfi_offset 2, -24
 1428              		.cfi_offset 4, -20
 1429              		.cfi_offset 5, -16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 68


 1430              		.cfi_offset 6, -12
 1431              		.cfi_offset 7, -8
 1432              		.cfi_offset 14, -4
1642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int dynType = 0;
 1433              		.loc 1 1642 0
 1434 0002 0028     		cmp	r0, #0
 1435 0004 19D0     		beq	.L162
 1436              	.LVL147:
 1437 0006 0327     		mov	r7, #3
 1438 0008 0A2A     		cmp	r2, #10
 1439 000a 01D8     		bhi	.L161
 1440 000c 0D4C     		ldr	r4, .L165
 1441 000e A756     		ldrsb	r7, [r4, r2]
 1442              	.L161:
 1443 0010 061C     		mov	r6, r0
 1444              	.LVL148:
 1445              	.LBB28:
1658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (*pDer == NULL) {
 1446              		.loc 1 1658 0
 1447 0012 081C     		mov	r0, r1
 1448              	.LVL149:
 1449 0014 1430     		add	r0, r0, #20
 1450 0016 0193     		str	r3, [sp, #4]
 1451 0018 141C     		mov	r4, r2
 1452 001a 0D1C     		mov	r5, r1
 1453 001c FFF7FEFF 		bl	wolfSSL_Malloc
 1454              	.LVL150:
 1455 0020 3060     		str	r0, [r6]
1659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_ERROR;
 1456              		.loc 1 1659 0
 1457 0022 0028     		cmp	r0, #0
 1458 0024 0CD0     		beq	.L164
 1459              	.LVL151:
1666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->buffer = (byte*)der + sizeof(DerBuffer);
 1460              		.loc 1 1666 0
 1461 0026 019B     		ldr	r3, [sp, #4]
1664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->dynType = dynType; /* Cache this for FreeDer */
 1462              		.loc 1 1664 0
 1463 0028 C460     		str	r4, [r0, #12]
1666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->buffer = (byte*)der + sizeof(DerBuffer);
 1464              		.loc 1 1666 0
 1465 002a 4360     		str	r3, [r0, #4]
1667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = length;
 1466              		.loc 1 1667 0
 1467 002c 031C     		mov	r3, r0
 1468 002e 1433     		add	r3, r3, #20
1665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->heap = heap;
 1469              		.loc 1 1665 0
 1470 0030 0761     		str	r7, [r0, #16]
1667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = length;
 1471              		.loc 1 1667 0
 1472 0032 0360     		str	r3, [r0]
1668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = 0; /* Success */
 1473              		.loc 1 1668 0
 1474 0034 8560     		str	r5, [r0, #8]
 1475              	.LVL152:
1669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 69


 1476              		.loc 1 1669 0
 1477 0036 0020     		mov	r0, #0
 1478              	.LVL153:
 1479 0038 03E0     		b	.L160
 1480              	.LVL154:
 1481              	.L162:
 1482              	.LBE28:
1641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pDer) {
 1483              		.loc 1 1641 0
 1484 003a AD20     		mov	r0, #173
 1485              	.LVL155:
 1486 003c 4042     		neg	r0, r0
 1487 003e 00E0     		b	.L160
 1488              	.LVL156:
 1489              	.L164:
 1490              	.LBB29:
1660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 1491              		.loc 1 1660 0
 1492 0040 0148     		ldr	r0, .L165+4
 1493              	.LVL157:
 1494              	.L160:
 1495              	.LBE29:
1672:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1496              		.loc 1 1672 0
 1497              		@ sp needed
 1498 0042 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1499              	.L166:
 1500              		.align	2
 1501              	.L165:
 1502 0044 00000000 		.word	.LANCHOR0
 1503 0048 D1FEFFFF 		.word	-303
 1504              		.cfi_endproc
 1505              	.LFE45:
 1506              		.size	AllocDer, .-AllocDer
 1507              		.section	.text.FreeDer,"ax",%progbits
 1508              		.align	1
 1509              		.global	FreeDer
 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	FreeDer, %function
 1513              	FreeDer:
 1514              	.LFB46:
1675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pDer && *pDer)
 1515              		.loc 1 1675 0
 1516              		.cfi_startproc
 1517              	.LVL158:
 1518 0000 38B5     		push	{r3, r4, r5, lr}
 1519              		.cfi_def_cfa_offset 16
 1520              		.cfi_offset 3, -16
 1521              		.cfi_offset 4, -12
 1522              		.cfi_offset 5, -8
 1523              		.cfi_offset 14, -4
1676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 1524              		.loc 1 1676 0
 1525 0002 0028     		cmp	r0, #0
 1526 0004 17D0     		beq	.L167
1676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 70


 1527              		.loc 1 1676 0 is_stmt 0 discriminator 1
 1528 0006 0368     		ldr	r3, [r0]
 1529 0008 002B     		cmp	r3, #0
 1530 000a 14D0     		beq	.L167
 1531              	.LVL159:
 1532              	.LBB34:
1681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ForceZero(der->buffer, der->length);
 1533              		.loc 1 1681 0 is_stmt 1
 1534 000c DA68     		ldr	r2, [r3, #12]
 1535 000e 012A     		cmp	r2, #1
 1536 0010 08D0     		beq	.L169
 1537              	.L172:
1684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = 0;
 1538              		.loc 1 1684 0
 1539 0012 0025     		mov	r5, #0
 1540 0014 041C     		mov	r4, r0
 1541 0016 1D60     		str	r5, [r3]
1685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(der, der->heap, der->dynType);
 1542              		.loc 1 1685 0
 1543 0018 9D60     		str	r5, [r3, #8]
 1544              	.LVL160:
 1545              	.LBB35:
1686:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1546              		.loc 1 1686 0
 1547 001a 181C     		mov	r0, r3
 1548              	.LVL161:
 1549 001c FFF7FEFF 		bl	wolfSSL_Free
 1550              	.LVL162:
 1551              	.LBE35:
1688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 1552              		.loc 1 1688 0
 1553 0020 2560     		str	r5, [r4]
 1554 0022 08E0     		b	.L167
 1555              	.LVL163:
 1556              	.L169:
1682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 1557              		.loc 1 1682 0
 1558 0024 1A68     		ldr	r2, [r3]
 1559              	.LVL164:
 1560 0026 9968     		ldr	r1, [r3, #8]
 1561 0028 5118     		add	r1, r2, r1
 1562              	.LVL165:
 1563              	.L170:
 1564              	.LBB36:
 1565              	.LBB37:
 1566              		.file 2 "..\\acn-sdk-c\\src\\wolfSSL/wolfcrypt/src/misc.c"
   1:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** /* misc.c
   2:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
   3:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * Copyright (C) 2006-2016 wolfSSL Inc.
   4:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
   5:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * This file is part of wolfSSL.
   6:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
   7:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * wolfSSL is free software; you can redistribute it and/or modify
   8:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * it under the terms of the GNU General Public License as published by
   9:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * (at your option) any later version.
  11:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 71


  12:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * wolfSSL is distributed in the hope that it will be useful,
  13:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * GNU General Public License for more details.
  16:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
  17:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * You should have received a copy of the GNU General Public License
  18:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * along with this program; if not, write to the Free Software
  19:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA
  20:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  */
  21:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  22:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  23:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef HAVE_CONFIG_H
  24:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #include <config.h>
  25:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  26:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  27:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #include <wolfssl/wolfcrypt/settings.h>
  28:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  29:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifndef WOLF_CRYPT_MISC_C
  30:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #define WOLF_CRYPT_MISC_C
  31:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  32:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #include <wolfssl/wolfcrypt/misc.h>
  33:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  34:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** /* inlining these functions is a huge speed increase and a small size decrease, 
  35:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    because the functions are smaller than function call setup/cleanup, e.g.,
  36:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    md5 benchmark is twice as fast with inline.  If you don't want it, then
  37:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    define NO_INLINE and compile this file into wolfssl, otherwise it's used as
  38:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    a source header
  39:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  */
  40:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  41:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef NO_INLINE
  42:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #define STATIC
  43:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else
  44:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #define STATIC static
  45:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  46:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  47:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  48:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef INTEL_INTRINSICS
  49:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  50:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #include <stdlib.h>      /* get intrinsic definitions */
  51:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  52:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* for non visual studio probably need no long version, 32 bit only
  53:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****      * i.e., _rotl and _rotr */
  54:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #pragma intrinsic(_lrotl, _lrotr)
  55:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  56:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotlFixed(word32 x, word32 y)
  57:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  58:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return y ? _lrotl(x, y) : x;
  59:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
  60:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  61:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotrFixed(word32 x, word32 y)
  62:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  63:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return y ? _lrotr(x, y) : x;
  64:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
  65:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  66:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else /* generic */
  67:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  68:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotlFixed(word32 x, word32 y)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 72


  69:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  70:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return (x << y) | (x >> (sizeof(y) * 8 - y));
  71:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }   
  72:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  73:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  74:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotrFixed(word32 x, word32 y)
  75:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  76:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return (x >> y) | (x << (sizeof(y) * 8 - y));
  77:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
  78:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  79:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  80:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  81:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  82:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word32 ByteReverseWord32(word32 value)
  83:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
  84:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef PPC_INTRINSICS
  85:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* PPC: load reverse indexed instruction */
  86:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (word32)__lwbrx(&value,0);
  87:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #elif defined(KEIL_INTRINSICS)
  88:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (word32)__rev(value);
  89:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #elif defined(FAST_ROTATE)
  90:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* 5 instructions with rotate instruction, 9 without */
  91:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (rotrFixed(value, 8U) & 0xff00ff00) |
  92:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****            (rotlFixed(value, 8U) & 0x00ff00ff);
  93:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else
  94:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* 6 instructions with rotate instruction, 8 without */
  95:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  96:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return rotlFixed(value, 16U);
  97:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  98:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
  99:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 100:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 101:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void ByteReverseWords(word32* out, const word32* in,
 102:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                                     word32 byteCount)
 103:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 104:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     word32 count = byteCount/(word32)sizeof(word32), i;
 105:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 106:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     for (i = 0; i < count; i++)
 107:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         out[i] = ByteReverseWord32(in[i]);
 108:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 109:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 110:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 111:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 112:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef WORD64_AVAILABLE
 113:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 114:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 115:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word64 rotlFixed64(word64 x, word64 y)
 116:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 117:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (x << y) | (x >> (sizeof(y) * 8 - y));
 118:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }  
 119:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 120:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 121:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word64 rotrFixed64(word64 x, word64 y)
 122:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 123:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (x >> y) | (x << (sizeof(y) * 8 - y));
 124:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 125:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 73


 126:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 127:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word64 ByteReverseWord64(word64 value)
 128:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 129:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef WOLFCRYPT_SLOW_WORD64
 130:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	return (word64)(ByteReverseWord32((word32)value)) << 32 | 
 131:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                     ByteReverseWord32((word32)(value>>32));
 132:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else
 133:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	value = ((value & W64LIT(0xFF00FF00FF00FF00)) >> 8) |
 134:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****             ((value & W64LIT(0x00FF00FF00FF00FF)) << 8);
 135:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	value = ((value & W64LIT(0xFFFF0000FFFF0000)) >> 16) |
 136:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****             ((value & W64LIT(0x0000FFFF0000FFFF)) << 16);
 137:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	return rotlFixed64(value, 32U);
 138:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
 139:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 140:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 141:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 142:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void ByteReverseWords64(word64* out, const word64* in,
 143:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                                       word32 byteCount)
 144:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 145:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     word32 count = byteCount/(word32)sizeof(word64), i;
 146:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 147:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     for (i = 0; i < count; i++)
 148:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         out[i] = ByteReverseWord64(in[i]);
 149:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 150:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 151:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 152:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif /* WORD64_AVAILABLE */
 153:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 154:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 155:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void XorWords(wolfssl_word* r, const wolfssl_word* a, word32 n)
 156:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 157:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     word32 i;
 158:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 159:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     for (i = 0; i < n; i++) r[i] ^= a[i];
 160:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 161:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 162:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 163:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void xorbuf(void* buf, const void* mask, word32 count)
 164:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 165:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     if (((wolfssl_word)buf | (wolfssl_word)mask | count) % WOLFSSL_WORD_SIZE == 0)
 166:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         XorWords( (wolfssl_word*)buf,
 167:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                   (const wolfssl_word*)mask, count / WOLFSSL_WORD_SIZE);
 168:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     else {
 169:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         word32 i;
 170:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         byte*       b = (byte*)buf;
 171:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         const byte* m = (const byte*)mask;
 172:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 173:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         for (i = 0; i < count; i++) b[i] ^= m[i];
 174:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
 175:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 176:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 177:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 178:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** /* Make sure compiler doesn't skip */
 179:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void ForceZero(const void* mem, word32 len)
 180:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 181:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     volatile byte* z = (volatile byte*)mem;
 182:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 74


 183:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     while (len--) *z++ = 0;
 1567              		.loc 2 183 0
 1568 002a 8A42     		cmp	r2, r1
 1569 002c F1D0     		beq	.L172
 1570              	.LVL166:
 1571 002e 0024     		mov	r4, #0
 1572 0030 1470     		strb	r4, [r2]
 1573 0032 0132     		add	r2, r2, #1
 1574              	.LVL167:
 1575 0034 F9E7     		b	.L170
 1576              	.LVL168:
 1577              	.L167:
 1578              	.LBE37:
 1579              	.LBE36:
 1580              	.LBE34:
1690:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1581              		.loc 1 1690 0
 1582              		@ sp needed
 1583 0036 38BD     		pop	{r3, r4, r5, pc}
 1584              		.cfi_endproc
 1585              	.LFE46:
 1586              		.size	FreeDer, .-FreeDer
 1587              		.section	.text.wolfSSL_CertManagerFree,"ax",%progbits
 1588              		.align	1
 1589              		.global	wolfSSL_CertManagerFree
 1590              		.code	16
 1591              		.thumb_func
 1592              		.type	wolfSSL_CertManagerFree, %function
 1593              	wolfSSL_CertManagerFree:
 1594              	.LFB48:
1723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerFree");
 1595              		.loc 1 1723 0
 1596              		.cfi_startproc
 1597              	.LVL169:
 1598 0000 10B5     		push	{r4, lr}
 1599              		.cfi_def_cfa_offset 8
 1600              		.cfi_offset 4, -8
 1601              		.cfi_offset 14, -4
1726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef HAVE_CRL
 1602              		.loc 1 1726 0
 1603 0002 0028     		cmp	r0, #0
 1604 0004 0BD0     		beq	.L179
 1605 0006 041C     		mov	r4, r0
1740:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeMutex(&cm->caLock);
 1606              		.loc 1 1740 0
 1607 0008 0B21     		mov	r1, #11
 1608 000a 0022     		mov	r2, #0
 1609 000c FFF7FEFF 		bl	FreeSignerTable
 1610              	.LVL170:
1741:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1611              		.loc 1 1741 0
 1612 0010 201C     		mov	r0, r4
 1613 0012 5030     		add	r0, r0, #80
 1614 0014 FFF7FEFF 		bl	FreeMutex
 1615              	.LVL171:
 1616              	.LBB38:
1748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 75


 1617              		.loc 1 1748 0
 1618 0018 201C     		mov	r0, r4
 1619 001a FFF7FEFF 		bl	wolfSSL_Free
 1620              	.LVL172:
 1621              	.L179:
 1622              	.LBE38:
1751:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1623              		.loc 1 1751 0
 1624              		@ sp needed
 1625 001e 10BD     		pop	{r4, pc}
 1626              		.cfi_endproc
 1627              	.LFE48:
 1628              		.size	wolfSSL_CertManagerFree, .-wolfSSL_CertManagerFree
 1629              		.section	.text.wolfSSL_CertManagerNew,"ax",%progbits
 1630              		.align	1
 1631              		.global	wolfSSL_CertManagerNew
 1632              		.code	16
 1633              		.thumb_func
 1634              		.type	wolfSSL_CertManagerNew, %function
 1635              	wolfSSL_CertManagerNew:
 1636              	.LFB47:
1693:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CERT_MANAGER* cm = NULL;
 1637              		.loc 1 1693 0
 1638              		.cfi_startproc
 1639              	.LVL173:
 1640 0000 10B5     		push	{r4, lr}
 1641              		.cfi_def_cfa_offset 8
 1642              		.cfi_offset 4, -8
 1643              		.cfi_offset 14, -4
1698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                          DYNAMIC_TYPE_CERT_MANAGER);
 1644              		.loc 1 1698 0
 1645 0002 5C20     		mov	r0, #92
 1646 0004 FFF7FEFF 		bl	wolfSSL_Malloc
 1647              	.LVL174:
 1648 0008 041E     		sub	r4, r0, #0
 1649              	.LVL175:
1700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMSET(cm, 0, sizeof(WOLFSSL_CERT_MANAGER));
 1650              		.loc 1 1700 0
 1651 000a 0ED0     		beq	.L185
1701:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1652              		.loc 1 1701 0
 1653 000c 0021     		mov	r1, #0
 1654 000e 5C22     		mov	r2, #92
 1655 0010 FFF7FEFF 		bl	memset
 1656              	.LVL176:
1703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad mutex init");
 1657              		.loc 1 1703 0
 1658 0014 201C     		mov	r0, r4
 1659 0016 5030     		add	r0, r0, #80
 1660 0018 FFF7FEFF 		bl	InitMutex
 1661              	.LVL177:
 1662 001c 031C     		mov	r3, r0
 1663 001e 201C     		mov	r0, r4
 1664 0020 002B     		cmp	r3, #0
 1665 0022 02D0     		beq	.L185
1705:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
 1666              		.loc 1 1705 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 76


 1667 0024 FFF7FEFF 		bl	wolfSSL_CertManagerFree
 1668              	.LVL178:
1706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 1669              		.loc 1 1706 0
 1670 0028 0020     		mov	r0, #0
 1671              	.L185:
1719:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1672              		.loc 1 1719 0
 1673              		@ sp needed
 1674              	.LVL179:
 1675 002a 10BD     		pop	{r4, pc}
 1676              		.cfi_endproc
 1677              	.LFE47:
 1678              		.size	wolfSSL_CertManagerNew, .-wolfSSL_CertManagerNew
 1679              		.section	.text.wolfSSL_CertManagerUnloadCAs,"ax",%progbits
 1680              		.align	1
 1681              		.global	wolfSSL_CertManagerUnloadCAs
 1682              		.code	16
 1683              		.thumb_func
 1684              		.type	wolfSSL_CertManagerUnloadCAs, %function
 1685              	wolfSSL_CertManagerUnloadCAs:
 1686              	.LFB49:
1756:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerUnloadCAs");
 1687              		.loc 1 1756 0
 1688              		.cfi_startproc
 1689              	.LVL180:
 1690 0000 38B5     		push	{r3, r4, r5, lr}
 1691              		.cfi_def_cfa_offset 16
 1692              		.cfi_offset 3, -16
 1693              		.cfi_offset 4, -12
 1694              		.cfi_offset 5, -8
 1695              		.cfi_offset 14, -4
1759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 1696              		.loc 1 1759 0
 1697 0002 0028     		cmp	r0, #0
 1698 0004 10D0     		beq	.L191
1762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
 1699              		.loc 1 1762 0
 1700 0006 051C     		mov	r5, r0
 1701 0008 5035     		add	r5, r5, #80
 1702 000a 041C     		mov	r4, r0
 1703 000c 281C     		mov	r0, r5
 1704              	.LVL181:
 1705 000e FFF7FEFF 		bl	LockMutex
 1706              	.LVL182:
 1707 0012 021E     		sub	r2, r0, #0
 1708 0014 0AD1     		bne	.L192
1765:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1709              		.loc 1 1765 0
 1710 0016 201C     		mov	r0, r4
 1711 0018 0B21     		mov	r1, #11
 1712 001a FFF7FEFF 		bl	FreeSignerTable
 1713              	.LVL183:
1767:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1714              		.loc 1 1767 0
 1715 001e 281C     		mov	r0, r5
 1716 0020 FFF7FEFF 		bl	UnLockMutex
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 77


 1717              	.LVL184:
1770:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1718              		.loc 1 1770 0
 1719 0024 0120     		mov	r0, #1
 1720 0026 03E0     		b	.L190
 1721              	.LVL185:
 1722              	.L191:
1760:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1723              		.loc 1 1760 0
 1724 0028 AD20     		mov	r0, #173
 1725              	.LVL186:
 1726 002a 00E0     		b	.L193
 1727              	.LVL187:
 1728              	.L192:
1763:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1729              		.loc 1 1763 0
 1730 002c 6A20     		mov	r0, #106
 1731              	.LVL188:
 1732              	.L193:
 1733 002e 4042     		neg	r0, r0
 1734              	.L190:
1771:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1735              		.loc 1 1771 0
 1736              		@ sp needed
 1737 0030 38BD     		pop	{r3, r4, r5, pc}
 1738              		.cfi_endproc
 1739              	.LFE49:
 1740              		.size	wolfSSL_CertManagerUnloadCAs, .-wolfSSL_CertManagerUnloadCAs
 1741              		.section	.text.wolfSSL_pending,"ax",%progbits
 1742              		.align	1
 1743              		.global	wolfSSL_pending
 1744              		.code	16
 1745              		.thumb_func
 1746              		.type	wolfSSL_pending, %function
 1747              	wolfSSL_pending:
 1748              	.LFB52:
1988:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_pending");
 1749              		.loc 1 1988 0
 1750              		.cfi_startproc
 1751              	.LVL189:
1990:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1752              		.loc 1 1990 0
 1753 0000 0430     		add	r0, r0, #4
 1754              	.LVL190:
 1755 0002 C06F     		ldr	r0, [r0, #124]
 1756              	.LVL191:
1991:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1757              		.loc 1 1991 0
 1758              		@ sp needed
 1759 0004 7047     		bx	lr
 1760              		.cfi_endproc
 1761              	.LFE52:
 1762              		.size	wolfSSL_pending, .-wolfSSL_pending
 1763              		.section	.text.wolfSSL_CTX_set_group_messages,"ax",%progbits
 1764              		.align	1
 1765              		.global	wolfSSL_CTX_set_group_messages
 1766              		.code	16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 78


 1767              		.thumb_func
 1768              		.type	wolfSSL_CTX_set_group_messages, %function
 1769              	wolfSSL_CTX_set_group_messages:
 1770              	.LFB53:
1997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
 1771              		.loc 1 1997 0
 1772              		.cfi_startproc
 1773              	.LVL192:
1998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return BAD_FUNC_ARG;
 1774              		.loc 1 1998 0
 1775 0000 0028     		cmp	r0, #0
 1776 0002 04D0     		beq	.L197
2001:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1777              		.loc 1 2001 0
 1778 0004 031C     		mov	r3, r0
 1779 0006 0120     		mov	r0, #1
 1780              	.LVL193:
 1781 0008 3333     		add	r3, r3, #51
 1782              	.LVL194:
 1783 000a 1870     		strb	r0, [r3]
2003:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1784              		.loc 1 2003 0
 1785 000c 01E0     		b	.L196
 1786              	.LVL195:
 1787              	.L197:
1999:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1788              		.loc 1 1999 0
 1789 000e AD20     		mov	r0, #173
 1790              	.LVL196:
 1791 0010 4042     		neg	r0, r0
 1792              	.L196:
2004:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 1793              		.loc 1 2004 0
 1794              		@ sp needed
 1795 0012 7047     		bx	lr
 1796              		.cfi_endproc
 1797              	.LFE53:
 1798              		.size	wolfSSL_CTX_set_group_messages, .-wolfSSL_CTX_set_group_messages
 1799              		.section	.text.wolfSSL_set_group_messages,"ax",%progbits
 1800              		.align	1
 1801              		.global	wolfSSL_set_group_messages
 1802              		.code	16
 1803              		.thumb_func
 1804              		.type	wolfSSL_set_group_messages, %function
 1805              	wolfSSL_set_group_messages:
 1806              	.LFB55:
2029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 1807              		.loc 1 2029 0
 1808              		.cfi_startproc
 1809              	.LVL197:
2030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return BAD_FUNC_ARG;
 1810              		.loc 1 2030 0
 1811 0000 0028     		cmp	r0, #0
 1812 0002 08D0     		beq	.L200
2033:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1813              		.loc 1 2033 0
 1814 0004 8323     		mov	r3, #131
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 79


 1815 0006 0822     		mov	r2, #8
 1816 0008 9B00     		lsl	r3, r3, #2
 1817 000a C018     		add	r0, r0, r3
 1818              	.LVL198:
 1819 000c 0379     		ldrb	r3, [r0, #4]
 1820 000e 1343     		orr	r3, r2
 1821 0010 0371     		strb	r3, [r0, #4]
2035:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1822              		.loc 1 2035 0
 1823 0012 0120     		mov	r0, #1
 1824              	.LVL199:
 1825 0014 01E0     		b	.L199
 1826              	.LVL200:
 1827              	.L200:
2031:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1828              		.loc 1 2031 0
 1829 0016 AD20     		mov	r0, #173
 1830              	.LVL201:
 1831 0018 4042     		neg	r0, r0
 1832              	.L199:
2036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1833              		.loc 1 2036 0
 1834              		@ sp needed
 1835 001a 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE55:
 1838              		.size	wolfSSL_set_group_messages, .-wolfSSL_set_group_messages
 1839              		.section	.text.wolfSSL_CTX_SetMinVersion,"ax",%progbits
 1840              		.align	1
 1841              		.global	wolfSSL_CTX_SetMinVersion
 1842              		.code	16
 1843              		.thumb_func
 1844              		.type	wolfSSL_CTX_SetMinVersion, %function
 1845              	wolfSSL_CTX_SetMinVersion:
 1846              	.LFB57:
2075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_SetMinVersion");
 1847              		.loc 1 2075 0
 1848              		.cfi_startproc
 1849              	.LVL202:
2078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad function argument");
 1850              		.loc 1 2078 0
 1851 0000 0028     		cmp	r0, #0
 1852 0002 05D0     		beq	.L206
 1853              	.LVL203:
 1854              	.LBB41:
 1855              	.LBB42:
2042:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
 1856              		.loc 1 2042 0
 1857 0004 0329     		cmp	r1, #3
 1858 0006 03D1     		bne	.L206
2060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 1859              		.loc 1 2060 0
 1860 0008 3430     		add	r0, r0, #52
 1861              	.LVL204:
 1862 000a 0170     		strb	r1, [r0]
2069:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1863              		.loc 1 2069 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 80


 1864 000c 0120     		mov	r0, #1
 1865              	.LVL205:
 1866 000e 01E0     		b	.L202
 1867              	.LVL206:
 1868              	.L206:
2066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 1869              		.loc 1 2066 0
 1870 0010 AD20     		mov	r0, #173
 1871              	.LVL207:
 1872 0012 4042     		neg	r0, r0
 1873              	.L202:
 1874              	.LBE42:
 1875              	.LBE41:
2084:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1876              		.loc 1 2084 0
 1877              		@ sp needed
 1878 0014 7047     		bx	lr
 1879              		.cfi_endproc
 1880              	.LFE57:
 1881              		.size	wolfSSL_CTX_SetMinVersion, .-wolfSSL_CTX_SetMinVersion
 1882              		.section	.text.wolfSSL_SetMinVersion,"ax",%progbits
 1883              		.align	1
 1884              		.global	wolfSSL_SetMinVersion
 1885              		.code	16
 1886              		.thumb_func
 1887              		.type	wolfSSL_SetMinVersion, %function
 1888              	wolfSSL_SetMinVersion:
 1889              	.LFB58:
2089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetMinVersion");
 1890              		.loc 1 2089 0
 1891              		.cfi_startproc
 1892              	.LVL208:
2092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad function argument");
 1893              		.loc 1 2092 0
 1894 0000 0028     		cmp	r0, #0
 1895 0002 06D0     		beq	.L212
 1896              	.LVL209:
 1897              	.LBB45:
 1898              	.LBB46:
2042:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
 1899              		.loc 1 2042 0
 1900 0004 0329     		cmp	r1, #3
 1901 0006 04D1     		bne	.L212
2060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 1902              		.loc 1 2060 0
 1903 0008 8623     		mov	r3, #134
 1904 000a 9B00     		lsl	r3, r3, #2
 1905 000c C154     		strb	r1, [r0, r3]
2069:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 1906              		.loc 1 2069 0
 1907 000e 0120     		mov	r0, #1
 1908              	.LVL210:
 1909 0010 01E0     		b	.L208
 1910              	.LVL211:
 1911              	.L212:
2066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 1912              		.loc 1 2066 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 81


 1913 0012 AD20     		mov	r0, #173
 1914              	.LVL212:
 1915 0014 4042     		neg	r0, r0
 1916              	.L208:
 1917              	.LBE46:
 1918              	.LBE45:
2098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1919              		.loc 1 2098 0
 1920              		@ sp needed
 1921 0016 7047     		bx	lr
 1922              		.cfi_endproc
 1923              	.LFE58:
 1924              		.size	wolfSSL_SetMinVersion, .-wolfSSL_SetMinVersion
 1925              		.section	.text.wolfSSL_SetVersion,"ax",%progbits
 1926              		.align	1
 1927              		.global	wolfSSL_SetVersion
 1928              		.code	16
 1929              		.thumb_func
 1930              		.type	wolfSSL_SetVersion, %function
 1931              	wolfSSL_SetVersion:
 1932              	.LFB59:
2102:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word16 haveRSA = 1;
 1933              		.loc 1 2102 0
 1934              		.cfi_startproc
 1935              	.LVL213:
 1936 0000 10B5     		push	{r4, lr}
 1937              		.cfi_def_cfa_offset 8
 1938              		.cfi_offset 4, -8
 1939              		.cfi_offset 14, -4
 1940 0002 86B0     		sub	sp, sp, #24
 1941              		.cfi_def_cfa_offset 32
2108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad function argument");
 1942              		.loc 1 2108 0
 1943 0004 0028     		cmp	r0, #0
 1944 0006 27D0     		beq	.L218
2113:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
 1945              		.loc 1 2113 0
 1946 0008 0329     		cmp	r1, #3
 1947 000a 25D1     		bne	.L218
 1948 000c 041C     		mov	r4, r0
2131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 1949              		.loc 1 2131 0
 1950 000e FFF7FEFF 		bl	MakeTLSv1_2
 1951              	.LVL214:
 1952 0012 A123     		mov	r3, #161
 1953 0014 5B00     		lsl	r3, r3, #1
 1954 0016 E052     		strh	r0, [r4, r3]
 1955              	.LVL215:
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 1956              		.loc 1 2147 0
 1957 0018 114B     		ldr	r3, .L219
 1958 001a E35C     		ldrb	r3, [r4, r3]
 1959 001c 5A06     		lsl	r2, r3, #25
 1960 001e D20F     		lsr	r2, r2, #31
 1961 0020 0092     		str	r2, [sp]
 1962 0022 DA09     		lsr	r2, r3, #7
 1963 0024 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 82


2149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.side);
 1964              		.loc 1 2149 0
 1965 0026 9B06     		lsl	r3, r3, #26
2148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveECC, ssl->options.haveStaticECC,
 1966              		.loc 1 2148 0
 1967 0028 0E4A     		ldr	r2, .L219+4
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 1968              		.loc 1 2147 0
 1969 002a DB0F     		lsr	r3, r3, #31
2148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveECC, ssl->options.haveStaticECC,
 1970              		.loc 1 2148 0
 1971 002c A25C     		ldrb	r2, [r4, r2]
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 1972              		.loc 1 2147 0
 1973 002e 0393     		str	r3, [sp, #12]
2150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1974              		.loc 1 2150 0
 1975 0030 8323     		mov	r3, #131
2148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveECC, ssl->options.haveStaticECC,
 1976              		.loc 1 2148 0
 1977 0032 9107     		lsl	r1, r2, #30
2149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.side);
 1978              		.loc 1 2149 0
 1979 0034 5207     		lsl	r2, r2, #29
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 1980              		.loc 1 2147 0
 1981 0036 D20F     		lsr	r2, r2, #31
 1982 0038 0492     		str	r2, [sp, #16]
 1983 003a 0022     		mov	r2, #0
 1984 003c C90F     		lsr	r1, r1, #31
 1985 003e 0291     		str	r1, [sp, #8]
2150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1986              		.loc 1 2150 0
 1987 0040 9B00     		lsl	r3, r3, #2
 1988 0042 E35C     		ldrb	r3, [r4, r3]
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 1989              		.loc 1 2147 0
 1990 0044 81B2     		uxth	r1, r0
2150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 1991              		.loc 1 2150 0
 1992 0046 DB06     		lsl	r3, r3, #27
2147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveNTRU, ssl->options.haveECDSAsig,
 1993              		.loc 1 2147 0
 1994 0048 DB0F     		lsr	r3, r3, #31
 1995 004a 0593     		str	r3, [sp, #20]
 1996 004c 6068     		ldr	r0, [r4, #4]
 1997 004e 131C     		mov	r3, r2
 1998 0050 FFF7FEFF 		bl	InitSuites
 1999              	.LVL216:
2152:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2000              		.loc 1 2152 0
 2001 0054 0120     		mov	r0, #1
 2002 0056 01E0     		b	.L214
 2003              	.LVL217:
 2004              	.L218:
2137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 2005              		.loc 1 2137 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 83


 2006 0058 AD20     		mov	r0, #173
 2007              	.LVL218:
 2008 005a 4042     		neg	r0, r0
 2009              	.LVL219:
 2010              	.L214:
2153:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !leanpsk */
 2011              		.loc 1 2153 0
 2012 005c 06B0     		add	sp, sp, #24
 2013              		@ sp needed
 2014 005e 10BD     		pop	{r4, pc}
 2015              	.L220:
 2016              		.align	2
 2017              	.L219:
 2018 0060 0E020000 		.word	526
 2019 0064 0F020000 		.word	527
 2020              		.cfi_endproc
 2021              	.LFE59:
 2022              		.size	wolfSSL_SetVersion, .-wolfSSL_SetVersion
 2023              		.global	__aeabi_uidivmod
 2024              		.section	.text.AlreadySigner,"ax",%progbits
 2025              		.align	1
 2026              		.global	AlreadySigner
 2027              		.code	16
 2028              		.thumb_func
 2029              		.type	AlreadySigner, %function
 2030              	AlreadySigner:
 2031              	.LFB62:
2165:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2166:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_CERTS || !NO_SESSION_CACHE */
2167:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2168:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2169:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CERTS
2170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2171:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* hash is the SHA digest of name, just use first 32 bits as hash */
2172:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE word32 HashSigner(const byte* hash)
2173:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return MakeWordFromHash(hash) % CA_TABLE_SIZE;
2175:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2176:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2177:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2178:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* does CA already exist on signer list */
2179:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int AlreadySigner(WOLFSSL_CERT_MANAGER* cm, byte* hash)
2180:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 2032              		.loc 1 2180 0
 2033              		.cfi_startproc
 2034              	.LVL220:
 2035 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2036              		.cfi_def_cfa_offset 32
 2037              		.cfi_offset 0, -32
 2038              		.cfi_offset 1, -28
 2039              		.cfi_offset 2, -24
 2040              		.cfi_offset 4, -20
 2041              		.cfi_offset 5, -16
 2042              		.cfi_offset 6, -12
 2043              		.cfi_offset 7, -8
 2044              		.cfi_offset 14, -4
 2045              		.loc 1 2180 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 84


 2046 0002 061C     		mov	r6, r0
 2047              	.LBB50:
 2048              	.LBB51:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2049              		.loc 1 2174 0
 2050 0004 081C     		mov	r0, r1
 2051              	.LVL221:
 2052              	.LBE51:
 2053              	.LBE50:
2181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* signers;
2182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int     ret = 0;
2183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32  row = HashSigner(hash);
2184:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0)
 2054              		.loc 1 2185 0
 2055 0006 351C     		mov	r5, r6
2180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* signers;
 2056              		.loc 1 2180 0
 2057 0008 0F1C     		mov	r7, r1
 2058              	.LBB55:
 2059              	.LBB52:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2060              		.loc 1 2174 0
 2061 000a FFF7FEFF 		bl	MakeWordFromHash
 2062              	.LVL222:
 2063              	.LBE52:
 2064              	.LBE55:
 2065              		.loc 1 2185 0
 2066 000e 5035     		add	r5, r5, #80
 2067              	.LBB56:
 2068              	.LBB53:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2069              		.loc 1 2174 0
 2070 0010 0190     		str	r0, [sp, #4]
 2071              	.LBE53:
 2072              	.LBE56:
 2073              		.loc 1 2185 0
 2074 0012 281C     		mov	r0, r5
 2075 0014 FFF7FEFF 		bl	LockMutex
 2076              	.LVL223:
2186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return  ret;
 2077              		.loc 1 2186 0
 2078 0018 0024     		mov	r4, #0
2185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return  ret;
 2079              		.loc 1 2185 0
 2080 001a A042     		cmp	r0, r4
 2081 001c 15D1     		bne	.L222
 2082              	.LBB57:
 2083              	.LBB54:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2084              		.loc 1 2174 0
 2085 001e 0198     		ldr	r0, [sp, #4]
 2086 0020 0B21     		mov	r1, #11
 2087 0022 FFF7FEFF 		bl	__aeabi_uidivmod
 2088              	.LVL224:
 2089              	.LBE54:
 2090              	.LBE57:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 85


2187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     signers = cm->caTable[row];
 2091              		.loc 1 2187 0
 2092 0026 8900     		lsl	r1, r1, #2
 2093 0028 8C59     		ldr	r4, [r1, r6]
 2094              	.LVL225:
 2095              	.L223:
2188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (signers) {
 2096              		.loc 1 2188 0
 2097 002a 002C     		cmp	r4, #0
 2098 002c 0AD0     		beq	.L224
 2099              	.LVL226:
 2100              	.LBB58:
2189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte* subjectHash;
2190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             subjectHash = signers->subjectKeyIdHash;
2192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
2193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             subjectHash = signers->subjectNameHash;
2194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(hash, subjectHash, SIGNER_DIGEST_SIZE) == 0) {
 2101              		.loc 1 2195 0
 2102 002e 211C     		mov	r1, r4
 2103 0030 381C     		mov	r0, r7
 2104 0032 2031     		add	r1, r1, #32
 2105              	.LVL227:
 2106 0034 1422     		mov	r2, #20
 2107 0036 FFF7FEFF 		bl	memcmp
 2108              	.LVL228:
 2109 003a 0028     		cmp	r0, #0
 2110 003c 01D0     		beq	.L227
2196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = 1;
2197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signers = signers->next;
 2111              		.loc 1 2199 0
 2112 003e 646B     		ldr	r4, [r4, #52]
 2113              	.LVL229:
 2114 0040 F3E7     		b	.L223
 2115              	.LVL230:
 2116              	.L227:
2196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = 1;
 2117              		.loc 1 2196 0
 2118 0042 0124     		mov	r4, #1
 2119              	.LVL231:
 2120              	.L224:
 2121              	.LBE58:
2200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
 2122              		.loc 1 2201 0
 2123 0044 281C     		mov	r0, r5
 2124 0046 FFF7FEFF 		bl	UnLockMutex
 2125              	.LVL232:
 2126              	.L222:
2202:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2203:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
2204:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2127              		.loc 1 2204 0
 2128 004a 201C     		mov	r0, r4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 86


 2129              		@ sp needed
 2130              	.LVL233:
 2131              	.LVL234:
 2132 004c FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2133              		.cfi_endproc
 2134              	.LFE62:
 2135              		.size	AlreadySigner, .-AlreadySigner
 2136              		.section	.text.GetCA,"ax",%progbits
 2137              		.align	1
 2138              		.global	GetCA
 2139              		.code	16
 2140              		.thumb_func
 2141              		.type	GetCA, %function
 2142              	GetCA:
 2143              	.LFB63:
2205:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2206:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2207:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
2208:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* hash is the SHA digest of name, just use first 32 bits as hash */
2209:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE word32 TrustedPeerHashSigner(const byte* hash)
2210:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return MakeWordFromHash(hash) % TP_TABLE_SIZE;
2212:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2213:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2214:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* does trusted peer already exist on signer list */
2215:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int AlreadyTrustedPeer(WOLFSSL_CERT_MANAGER* cm, byte* hash)
2216:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     TrustedPeerCert* tp;
2218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int     ret = 0;
2219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32  row = TrustedPeerHashSigner(hash);
2220:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->tpLock) != 0)
2222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return  ret;
2223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tp = cm->tpTable[row];
2224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (tp) {
2225:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte* subjectHash;
2226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             subjectHash = tp->subjectKeyIdHash;
2228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
2229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             subjectHash = tp->subjectNameHash;
2230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(hash, subjectHash, SIGNER_DIGEST_SIZE) == 0) {
2232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = 1;
2233:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2234:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         tp = tp->next;
2236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->tpLock);
2238:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
2240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2241:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2242:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2243:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return Trusted Peer if found, otherwise NULL
2244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     type is what to match on
2245:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  */
2246:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** TrustedPeerCert* GetTrustedPeer(void* vp, byte* hash, int type)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 87


2247:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CERT_MANAGER* cm = (WOLFSSL_CERT_MANAGER*)vp;
2249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     TrustedPeerCert* ret = NULL;
2250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     TrustedPeerCert* tp  = NULL;
2251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32  row;
2252:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL || hash == NULL)
2254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
2255:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     row = TrustedPeerHashSigner(hash);
2257:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->tpLock) != 0)
2259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
2260:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tp = cm->tpTable[row];
2262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (tp) {
2263:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte* subjectHash;
2264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (type) {
2265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifndef NO_SKID
2266:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case WC_MATCH_SKID:
2267:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 subjectHash = tp->subjectKeyIdHash;
2268:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
2269:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
2270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case WC_MATCH_NAME:
2271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 subjectHash = tp->subjectNameHash;
2272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
2273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
2274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Unknown search type");
2275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 UnLockMutex(&cm->tpLock);
2276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return NULL;
2277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(hash, subjectHash, SIGNER_DIGEST_SIZE) == 0) {
2279:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = tp;
2280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         tp = tp->next;
2283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2284:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->tpLock);
2285:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
2287:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2288:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2289:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2290:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int MatchTrustedPeer(TrustedPeerCert* tp, DecodedCert* cert)
2291:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2292:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (tp == NULL || cert == NULL)
2293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
2294:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* subject key id or subject hash has been compared when searching
2296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        tpTable for the cert from function GetTrustedPeer */
2297:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* compare signatures */
2299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (tp->sigLen == cert->sigLength) {
2300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(tp->sig, cert->signature, cert->sigLength)) {
2301:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FAILURE;
2302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 88


2304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
2305:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
2306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2307:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
2309:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2310:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
2311:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2312:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2313:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return CA if found, otherwise NULL */
2314:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** Signer* GetCA(void* vp, byte* hash)
2315:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 2144              		.loc 1 2315 0
 2145              		.cfi_startproc
 2146              	.LVL235:
 2147 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2148              		.cfi_def_cfa_offset 24
 2149              		.cfi_offset 3, -24
 2150              		.cfi_offset 4, -20
 2151              		.cfi_offset 5, -16
 2152              		.cfi_offset 6, -12
 2153              		.cfi_offset 7, -8
 2154              		.cfi_offset 14, -4
 2155              		.loc 1 2315 0
 2156 0002 041C     		mov	r4, r0
 2157              	.LVL236:
 2158              	.LBB62:
 2159              	.LBB63:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2160              		.loc 1 2174 0
 2161 0004 081C     		mov	r0, r1
 2162              	.LVL237:
 2163              	.LBE63:
 2164              	.LBE62:
 2165              		.loc 1 2315 0
 2166 0006 0E1C     		mov	r6, r1
 2167              	.LBB65:
 2168              	.LBB64:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2169              		.loc 1 2174 0
 2170 0008 FFF7FEFF 		bl	MakeWordFromHash
 2171              	.LVL238:
 2172 000c 0B21     		mov	r1, #11
 2173 000e FFF7FEFF 		bl	__aeabi_uidivmod
 2174              	.LVL239:
 2175 0012 0F1C     		mov	r7, r1
 2176              	.LBE64:
 2177              	.LBE65:
2316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CERT_MANAGER* cm = (WOLFSSL_CERT_MANAGER*)vp;
2317:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* ret = NULL;
2318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* signers;
2319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32  row = HashSigner(hash);
2320:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
 2178              		.loc 1 2321 0
 2179 0014 002C     		cmp	r4, #0
 2180 0016 01D1     		bne	.L229
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 89


 2181              	.L231:
2322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
 2182              		.loc 1 2322 0
 2183 0018 0020     		mov	r0, #0
 2184 001a 18E0     		b	.L230
 2185              	.L229:
2323:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2324:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0)
 2186              		.loc 1 2324 0
 2187 001c 251C     		mov	r5, r4
 2188 001e 5035     		add	r5, r5, #80
 2189 0020 281C     		mov	r0, r5
 2190 0022 FFF7FEFF 		bl	LockMutex
 2191              	.LVL240:
 2192 0026 0028     		cmp	r0, #0
 2193 0028 F6D1     		bne	.L231
2325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
2326:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     signers = cm->caTable[row];
 2194              		.loc 1 2327 0
 2195 002a BF00     		lsl	r7, r7, #2
 2196 002c 3C59     		ldr	r4, [r7, r4]
 2197              	.LVL241:
 2198              	.L232:
2328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (signers) {
 2199              		.loc 1 2328 0
 2200 002e 002C     		cmp	r4, #0
 2201 0030 09D0     		beq	.L233
 2202              	.LVL242:
 2203              	.LBB66:
2329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte* subjectHash;
2330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             subjectHash = signers->subjectKeyIdHash;
2332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
2333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             subjectHash = signers->subjectNameHash;
2334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(hash, subjectHash, SIGNER_DIGEST_SIZE) == 0) {
 2204              		.loc 1 2335 0
 2205 0032 211C     		mov	r1, r4
 2206 0034 301C     		mov	r0, r6
 2207 0036 2031     		add	r1, r1, #32
 2208              	.LVL243:
 2209 0038 1422     		mov	r2, #20
 2210 003a FFF7FEFF 		bl	memcmp
 2211              	.LVL244:
 2212 003e 0028     		cmp	r0, #0
 2213 0040 01D0     		beq	.L233
2336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = signers;
2337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signers = signers->next;
 2214              		.loc 1 2339 0
 2215 0042 646B     		ldr	r4, [r4, #52]
 2216              	.LVL245:
 2217 0044 F3E7     		b	.L232
 2218              	.L233:
 2219              	.LVL246:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 90


 2220              	.LBE66:
2340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
 2221              		.loc 1 2341 0
 2222 0046 281C     		mov	r0, r5
 2223 0048 FFF7FEFF 		bl	UnLockMutex
 2224              	.LVL247:
2342:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
 2225              		.loc 1 2343 0
 2226 004c 201C     		mov	r0, r4
 2227              	.LVL248:
 2228              	.L230:
2344:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2229              		.loc 1 2344 0
 2230              		@ sp needed
 2231              	.LVL249:
 2232 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2233              		.cfi_endproc
 2234              	.LFE63:
 2235              		.size	GetCA, .-GetCA
 2236              		.section	.text.AddCA,"ax",%progbits
 2237              		.align	1
 2238              		.global	AddCA
 2239              		.code	16
 2240              		.thumb_func
 2241              		.type	AddCA, %function
 2242              	AddCA:
 2243              	.LFB64:
2345:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2346:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2347:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SKID
2348:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return CA if found, otherwise NULL. Walk through hash table. */
2349:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** Signer* GetCAByName(void* vp, byte* hash)
2350:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CERT_MANAGER* cm = (WOLFSSL_CERT_MANAGER*)vp;
2352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* ret = NULL;
2353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* signers;
2354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32  row;
2355:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
2357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
2358:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0)
2360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
2361:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (row = 0; row < CA_TABLE_SIZE && ret == NULL; row++) {
2363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signers = cm->caTable[row];
2364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while (signers && ret == NULL) {
2365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (XMEMCMP(hash, signers->subjectNameHash,
2366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         SIGNER_DIGEST_SIZE) == 0) {
2367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = signers;
2368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signers = signers->next;
2370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 91


2373:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
2375:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2376:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2377:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2378:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2379:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
2380:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* add a trusted peer cert to linked list */
2381:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int AddTrustedPeer(WOLFSSL_CERT_MANAGER* cm, DerBuffer** pDer, int verify)
2382:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret, row;
2384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     TrustedPeerCert* peerCert;
2385:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert* cert = NULL;
2386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*   der = *pDer;
2387:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* subjectHash = NULL;
2388:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("Adding a Trusted Peer Cert");
2390:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
2392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  DYNAMIC_TYPE_TMP_BUFFER);
2393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cert == NULL)
2394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
2395:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     InitDecodedCert(cert, der->buffer, der->length, cm->heap);
2397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ((ret = ParseCert(cert, TRUSTED_PEER_TYPE, verify, cm)) != 0) {
2398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
2400:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("    Parsed new trusted peer cert");
2402:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     peerCert = (TrustedPeerCert*)XMALLOC(sizeof(TrustedPeerCert), NULL,
2404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                              DYNAMIC_TYPE_CERT);
2405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (peerCert == NULL) {
2406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeDecodedCert(cert);
2407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
2409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMSET(peerCert, 0, sizeof(TrustedPeerCert));
2411:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2412:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SKID
2413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cert->extAuthKeyIdSet) {
2414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         subjectHash = cert->extSubjKeyId;
2415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
2417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         subjectHash = cert->subjectHash;
2418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2419:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     subjectHash = cert->subjectHash;
2421:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2422:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef IGNORE_NAME_CONSTRAINTS
2424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (peerCert->permittedNames)
2425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeNameSubtrees(peerCert->permittedNames, cm->heap);
2426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (peerCert->excludedNames)
2427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeNameSubtrees(peerCert->excludedNames, cm->heap);
2428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
2429:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 92


2430:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (AlreadyTrustedPeer(cm, subjectHash)) {
2431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("    Already have this CA, not adding again");
2432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ret;
2433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2434:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
2435:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* add trusted peer signature */
2436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         peerCert->sigLen = cert->sigLength;
2437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         peerCert->sig = XMALLOC(cert->sigLength, cm->heap,
2438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         DYNAMIC_TYPE_SIGNATURE);
2439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (peerCert->sig == NULL) {
2440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDecodedCert(cert);
2441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeTrustedPeer(peerCert, cm->heap);
2443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
2444:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(peerCert->sig, cert->signature, cert->sigLength);
2446:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* add trusted peer name */
2448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         peerCert->nameLen = cert->subjectCNLen;
2449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         peerCert->name    = cert->subjectCN;
2450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
2451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             peerCert->permittedNames = cert->permittedNames;
2452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             peerCert->excludedNames  = cert->excludedNames;
2453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2454:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* add SKID when available and hash of name */
2456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2457:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(peerCert->subjectKeyIdHash, cert->extSubjKeyId,
2458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     SIGNER_DIGEST_SIZE);
2459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(peerCert->subjectNameHash, cert->subjectHash,
2461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     SIGNER_DIGEST_SIZE);
2462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             peerCert->next    = NULL; /* If Key Usage not set, all uses valid. */
2463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->subjectCN = 0;
2464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
2465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->permittedNames = NULL;
2466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->excludedNames = NULL;
2467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2468:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cert->extAuthKeyIdSet) {
2471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 row = TrustedPeerHashSigner(peerCert->subjectKeyIdHash);
2472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
2474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 row = TrustedPeerHashSigner(peerCert->subjectNameHash);
2475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2476:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
2477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             row = TrustedPeerHashSigner(peerCert->subjectNameHash);
2478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2479:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (LockMutex(&cm->tpLock) == 0) {
2481:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 peerCert->next = cm->tpTable[row];
2482:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 cm->tpTable[row] = peerCert;   /* takes ownership */
2483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 UnLockMutex(&cm->tpLock);
2484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2485:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
2486:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("    Trusted Peer Cert Mutex Lock failed");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 93


2487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeDecodedCert(cert);
2488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeTrustedPeer(peerCert, cm->heap);
2490:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return BAD_MUTEX_E;
2491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2493:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("    Freeing parsed trusted peer cert");
2495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDecodedCert(cert);
2496:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("    Freeing der trusted peer cert");
2498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDer(&der);
2499:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("        OK Freeing der trusted peer cert");
2500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("AddTrustedPeer", ret);
2501:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
2503:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2504:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
2505:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2506:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2507:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* owns der, internal now uses too */
2508:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* type flag ids from user or from chain received during verify
2509:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    don't allow chain ones to be added w/o isCA extension */
2510:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int AddCA(WOLFSSL_CERT_MANAGER* cm, DerBuffer** pDer, int type, int verify)
2511:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 2244              		.loc 1 2511 0
 2245              		.cfi_startproc
 2246              	.LVL250:
 2247 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2248              		.cfi_def_cfa_offset 20
 2249              		.cfi_offset 4, -20
 2250              		.cfi_offset 5, -16
 2251              		.cfi_offset 6, -12
 2252              		.cfi_offset 7, -8
 2253              		.cfi_offset 14, -4
 2254 0002 494C     		ldr	r4, .L263
 2255 0004 051C     		mov	r5, r0
 2256 0006 A544     		add	sp, sp, r4
 2257              		.cfi_def_cfa_offset 824
 2258              		.loc 1 2511 0
 2259 0008 1C1C     		mov	r4, r3
2512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int         ret;
2513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer*     signer = 0;
2514:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32      row;
2515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*       subjectHash;
2516:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert* cert = NULL;
2518:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2519:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert  cert[1];
2520:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2521:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*   der = *pDer;
 2260              		.loc 1 2521 0
 2261 000a 0F68     		ldr	r7, [r1]
 2262              	.LVL251:
2511:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int         ret;
 2263              		.loc 1 2511 0
 2264 000c 0291     		str	r1, [sp, #8]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 94


 2265 000e 0092     		str	r2, [sp]
2522:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2523:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("Adding a CA");
2524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2526:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
2527:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  DYNAMIC_TYPE_TMP_BUFFER);
2528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cert == NULL)
2529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
2530:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2531:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     InitDecodedCert(cert, der->buffer, der->length, cm->heap);
 2266              		.loc 1 2532 0
 2267 0010 04A8     		add	r0, sp, #16
 2268              	.LVL252:
 2269 0012 3968     		ldr	r1, [r7]
 2270              	.LVL253:
 2271 0014 BA68     		ldr	r2, [r7, #8]
 2272              	.LVL254:
 2273 0016 EB6A     		ldr	r3, [r5, #44]
 2274              	.LVL255:
 2275 0018 FFF7FEFF 		bl	InitDecodedCert
 2276              	.LVL256:
2533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = ParseCert(cert, CA_TYPE, verify, cm);
 2277              		.loc 1 2533 0
 2278 001c 04A8     		add	r0, sp, #16
 2279 001e 0421     		mov	r1, #4
 2280 0020 221C     		mov	r2, r4
 2281 0022 2B1C     		mov	r3, r5
 2282 0024 FFF7FEFF 		bl	ParseCert
 2283              	.LVL257:
 2284 0028 061E     		sub	r6, r0, #0
 2285              	.LVL258:
2534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("    Parsed new CA");
2535:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2536:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SKID
2537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     subjectHash = cert->extSubjKeyId;
2538:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     subjectHash = cert->subjectHash;
2540:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2541:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2542:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == 0 && cert->isCA == 0 && type != WOLFSSL_USER_CA) {
 2286              		.loc 1 2542 0
 2287 002a 63D1     		bne	.L239
 2288              		.loc 1 2542 0 is_stmt 0 discriminator 1
 2289 002c 3F4B     		ldr	r3, .L263+4
 2290 002e 04AA     		add	r2, sp, #16
 2291 0030 D35C     		ldrb	r3, [r2, r3]
 2292 0032 002B     		cmp	r3, #0
 2293 0034 03D1     		bne	.L240
 2294              		.loc 1 2542 0 discriminator 2
 2295 0036 009B     		ldr	r3, [sp]
 2296 0038 012B     		cmp	r3, #1
 2297 003a 11D1     		bne	.L249
 2298 003c 09E0     		b	.L241
 2299              	.L240:
2543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("    Can't add as CA if not actually one");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 95


2544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = NOT_CA_ERROR;
2545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2546:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef ALLOW_INVALID_CERTSIGN
2547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ret == 0 && cert->isCA == 1 && type != WOLFSSL_USER_CA &&
 2300              		.loc 1 2547 0 is_stmt 1 discriminator 1
 2301 003e 012B     		cmp	r3, #1
 2302 0040 07D1     		bne	.L241
 2303              		.loc 1 2547 0 is_stmt 0 discriminator 2
 2304 0042 009B     		ldr	r3, [sp]
 2305 0044 012B     		cmp	r3, #1
 2306 0046 04D0     		beq	.L241
2548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              (cert->extKeyUsage & KEYUSE_KEY_CERT_SIGN) == 0) {
 2307              		.loc 1 2548 0 is_stmt 1 discriminator 3
 2308 0048 394B     		ldr	r3, .L263+8
 2309 004a 04AA     		add	r2, sp, #16
 2310 004c D35A     		ldrh	r3, [r2, r3]
2547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              (cert->extKeyUsage & KEYUSE_KEY_CERT_SIGN) == 0) {
 2311              		.loc 1 2547 0 discriminator 3
 2312 004e 5B07     		lsl	r3, r3, #29
 2313 0050 06D5     		bpl	.L249
 2314              	.L241:
2549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Intermediate CA certs are required to have the keyCertSign
2550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         * extension set. User loaded root certs are not. */
2551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("    Doesn't have key usage certificate signing");
2552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = NOT_CA_ERROR;
2553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2554:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ret == 0 && AlreadySigner(cm, subjectHash)) {
 2315              		.loc 1 2555 0 discriminator 1
 2316 0052 281C     		mov	r0, r5
 2317              	.LVL259:
 2318 0054 11A9     		add	r1, sp, #68
 2319              	.LVL260:
 2320 0056 FFF7FEFF 		bl	AlreadySigner
 2321              	.LVL261:
 2322 005a 0028     		cmp	r0, #0
 2323 005c 02D0     		beq	.L242
 2324 005e 49E0     		b	.L239
 2325              	.LVL262:
 2326              	.L249:
2544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 2327              		.loc 1 2544 0
 2328 0060 344E     		ldr	r6, .L263+12
 2329 0062 47E0     		b	.L239
 2330              	.LVL263:
 2331              	.L242:
2556:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("    Already have this CA, not adding again");
2557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ret;
2558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ret == 0) {
2560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* take over signer parts */
2561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signer = MakeSigner(cm->heap);
 2332              		.loc 1 2561 0
 2333 0064 E86A     		ldr	r0, [r5, #44]
 2334 0066 FFF7FEFF 		bl	MakeSigner
 2335              	.LVL264:
 2336 006a 041E     		sub	r4, r0, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 96


 2337              	.LVL265:
2562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!signer)
 2338              		.loc 1 2562 0
 2339 006c 56D0     		beq	.L262
2563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = MEMORY_ERROR;
2564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
2565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->keyOID         = cert->keyOID;
2566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->publicKey      = cert->publicKey;
2567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->pubKeySize     = cert->pubKeySize;
2568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->nameLen        = cert->subjectCNLen;
2569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->name           = cert->subjectCN;
2570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
2571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->permittedNames = cert->permittedNames;
2572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->excludedNames  = cert->excludedNames;
2573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(signer->subjectKeyIdHash, cert->extSubjKeyId,
2576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     SIGNER_DIGEST_SIZE);
2577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(signer->subjectNameHash, cert->subjectHash,
 2340              		.loc 1 2578 0
 2341 006e 201C     		mov	r0, r4
2565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->publicKey      = cert->publicKey;
 2342              		.loc 1 2565 0
 2343 0070 0B9B     		ldr	r3, [sp, #44]
 2344              		.loc 1 2578 0
 2345 0072 1422     		mov	r2, #20
2565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->publicKey      = cert->publicKey;
 2346              		.loc 1 2565 0
 2347 0074 6360     		str	r3, [r4, #4]
2566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->pubKeySize     = cert->pubKeySize;
 2348              		.loc 1 2566 0
 2349 0076 049B     		ldr	r3, [sp, #16]
 2350              		.loc 1 2578 0
 2351 0078 2030     		add	r0, r0, #32
 2352              	.LVL266:
2566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->pubKeySize     = cert->pubKeySize;
 2353              		.loc 1 2566 0
 2354 007a E360     		str	r3, [r4, #12]
2567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->nameLen        = cert->subjectCNLen;
 2355              		.loc 1 2567 0
 2356 007c 059B     		ldr	r3, [sp, #20]
 2357              		.loc 1 2578 0
 2358 007e 11A9     		add	r1, sp, #68
 2359              	.LVL267:
2567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->nameLen        = cert->subjectCNLen;
 2360              		.loc 1 2567 0
 2361 0080 2360     		str	r3, [r4]
2568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->name           = cert->subjectCN;
 2362              		.loc 1 2568 0
 2363 0082 1D9B     		ldr	r3, [sp, #116]
 2364 0084 2361     		str	r3, [r4, #16]
2569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
 2365              		.loc 1 2569 0
 2366 0086 1C9B     		ldr	r3, [sp, #112]
 2367 0088 6361     		str	r3, [r4, #20]
2571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->excludedNames  = cert->excludedNames;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 97


 2368              		.loc 1 2571 0
 2369 008a 0F9B     		ldr	r3, [sp, #60]
 2370 008c A361     		str	r3, [r4, #24]
2572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
 2371              		.loc 1 2572 0
 2372 008e 109B     		ldr	r3, [sp, #64]
 2373 0090 E361     		str	r3, [r4, #28]
 2374 0092 0193     		str	r3, [sp, #4]
 2375              		.loc 1 2578 0
 2376 0094 FFF7FEFF 		bl	memcpy
 2377              	.LVL268:
2579:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     SIGNER_DIGEST_SIZE);
2580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->keyUsage = cert->extKeyUsageSet ? cert->extKeyUsage
 2378              		.loc 1 2580 0
 2379 0098 274B     		ldr	r3, .L263+16
 2380 009a 04AA     		add	r2, sp, #16
 2381 009c D35C     		ldrb	r3, [r2, r3]
 2382 009e 002B     		cmp	r3, #0
 2383 00a0 33D0     		beq	.L250
 2384              		.loc 1 2580 0 is_stmt 0 discriminator 1
 2385 00a2 234B     		ldr	r3, .L263+8
 2386 00a4 D35A     		ldrh	r3, [r2, r3]
 2387              	.L243:
 2388              		.loc 1 2580 0 discriminator 4
 2389 00a6 2381     		strh	r3, [r4, #8]
2581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                     : 0xFFFF;
2582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             signer->next    = NULL; /* If Key Usage not set, all uses valid. */
2583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->publicKey = 0;    /* in case lock fails don't free here.   */
2584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->subjectCN = 0;
2585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
2586:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->permittedNames = NULL;
2587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->excludedNames = NULL;
2588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2589:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
2591:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             row = HashSigner(signer->subjectKeyIdHash);
2592:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
2593:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             row = HashSigner(signer->subjectNameHash);
 2390              		.loc 1 2593 0 is_stmt 1 discriminator 4
 2391 00a8 201C     		mov	r0, r4
2582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->publicKey = 0;    /* in case lock fails don't free here.   */
 2392              		.loc 1 2582 0 discriminator 4
 2393 00aa 0023     		mov	r3, #0
 2394              		.loc 1 2593 0 discriminator 4
 2395 00ac 2030     		add	r0, r0, #32
2582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->publicKey = 0;    /* in case lock fails don't free here.   */
 2396              		.loc 1 2582 0 discriminator 4
 2397 00ae 6363     		str	r3, [r4, #52]
2583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->subjectCN = 0;
 2398              		.loc 1 2583 0 discriminator 4
 2399 00b0 0493     		str	r3, [sp, #16]
2584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
 2400              		.loc 1 2584 0 discriminator 4
 2401 00b2 1C93     		str	r3, [sp, #112]
2586:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cert->excludedNames = NULL;
 2402              		.loc 1 2586 0 discriminator 4
 2403 00b4 0F93     		str	r3, [sp, #60]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 98


2587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
 2404              		.loc 1 2587 0 discriminator 4
 2405 00b6 1093     		str	r3, [sp, #64]
 2406              	.LVL269:
 2407              	.LBB69:
 2408              	.LBB70:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2409              		.loc 1 2174 0 discriminator 4
 2410 00b8 FFF7FEFF 		bl	MakeWordFromHash
 2411              	.LVL270:
 2412              	.LBE70:
 2413              	.LBE69:
2594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
2595:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (LockMutex(&cm->caLock) == 0) {
 2414              		.loc 1 2596 0 discriminator 4
 2415 00bc 2B1C     		mov	r3, r5
 2416 00be 5033     		add	r3, r3, #80
 2417              	.LBB73:
 2418              	.LBB71:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2419              		.loc 1 2174 0 discriminator 4
 2420 00c0 0390     		str	r0, [sp, #12]
 2421              	.LBE71:
 2422              	.LBE73:
 2423              		.loc 1 2596 0 discriminator 4
 2424 00c2 181C     		mov	r0, r3
 2425 00c4 0193     		str	r3, [sp, #4]
 2426 00c6 FFF7FEFF 		bl	LockMutex
 2427              	.LVL271:
 2428 00ca 0028     		cmp	r0, #0
 2429 00cc 1FD1     		bne	.L244
 2430              	.LBB74:
 2431              	.LBB72:
2174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2432              		.loc 1 2174 0
 2433 00ce 0398     		ldr	r0, [sp, #12]
 2434 00d0 0B21     		mov	r1, #11
 2435 00d2 FFF7FEFF 		bl	__aeabi_uidivmod
 2436              	.LVL272:
 2437 00d6 8900     		lsl	r1, r1, #2
 2438 00d8 6918     		add	r1, r5, r1
 2439              	.LBE72:
 2440              	.LBE74:
2597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 signer->next = cm->caTable[row];
 2441              		.loc 1 2597 0
 2442 00da 0B68     		ldr	r3, [r1]
2598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 cm->caTable[row] = signer;   /* takes ownership */
2599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 UnLockMutex(&cm->caLock);
 2443              		.loc 1 2599 0
 2444 00dc 0198     		ldr	r0, [sp, #4]
2597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 signer->next = cm->caTable[row];
 2445              		.loc 1 2597 0
 2446 00de 6363     		str	r3, [r4, #52]
2598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 cm->caTable[row] = signer;   /* takes ownership */
 2447              		.loc 1 2598 0
 2448 00e0 0C60     		str	r4, [r1]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 99


 2449              		.loc 1 2599 0
 2450 00e2 FFF7FEFF 		bl	UnLockMutex
 2451              	.LVL273:
2600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (cm->caCacheCallback)
 2452              		.loc 1 2600 0
 2453 00e6 2B6C     		ldr	r3, [r5, #64]
 2454 00e8 002B     		cmp	r3, #0
 2455 00ea 03D0     		beq	.L239
2601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     cm->caCacheCallback(der->buffer, (int)der->length, type);
 2456              		.loc 1 2601 0
 2457 00ec 3868     		ldr	r0, [r7]
 2458 00ee B968     		ldr	r1, [r7, #8]
 2459 00f0 009A     		ldr	r2, [sp]
 2460 00f2 9847     		blx	r3
 2461              	.LVL274:
 2462              	.L239:
2602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
2604:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("    CA Mutex Lock failed");
2605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = BAD_MUTEX_E;
2606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeSigner(signer, cm->heap);
2607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2610:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("    Freeing Parsed CA");
2612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDecodedCert(cert);
 2463              		.loc 1 2612 0
 2464 00f4 04A8     		add	r0, sp, #16
 2465 00f6 FFF7FEFF 		bl	FreeDecodedCert
 2466              	.LVL275:
2613:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2615:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("    Freeing der CA");
2617:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDer(pDer);
 2467              		.loc 1 2617 0
 2468 00fa 0298     		ldr	r0, [sp, #8]
 2469 00fc FFF7FEFF 		bl	FreeDer
 2470              	.LVL276:
2618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("        OK Freeing der CA");
2619:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("AddCA", ret);
2621:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret == 0 ? SSL_SUCCESS : ret;
 2471              		.loc 1 2622 0
 2472 0100 0120     		mov	r0, #1
 2473 0102 002E     		cmp	r6, #0
 2474 0104 0CD0     		beq	.L257
 2475 0106 301C     		mov	r0, r6
 2476 0108 0AE0     		b	.L257
 2477              	.LVL277:
 2478              	.L250:
2580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                     : 0xFFFF;
 2479              		.loc 1 2580 0
 2480 010a 0C4B     		ldr	r3, .L263+20
 2481 010c CBE7     		b	.L243
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 100


 2482              	.LVL278:
 2483              	.L244:
2605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeSigner(signer, cm->heap);
 2484              		.loc 1 2605 0
 2485 010e 6A26     		mov	r6, #106
2606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
 2486              		.loc 1 2606 0
 2487 0110 201C     		mov	r0, r4
 2488 0112 E96A     		ldr	r1, [r5, #44]
 2489 0114 FFF7FEFF 		bl	FreeSigner
 2490              	.LVL279:
2605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeSigner(signer, cm->heap);
 2491              		.loc 1 2605 0
 2492 0118 7642     		neg	r6, r6
 2493 011a EBE7     		b	.L239
 2494              	.LVL280:
 2495              	.L262:
2563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
 2496              		.loc 1 2563 0
 2497 011c 084E     		ldr	r6, .L263+24
 2498              	.LVL281:
 2499 011e E9E7     		b	.L239
 2500              	.LVL282:
 2501              	.L257:
2623:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2502              		.loc 1 2623 0
 2503 0120 C923     		mov	r3, #201
 2504 0122 9B00     		lsl	r3, r3, #2
 2505 0124 9D44     		add	sp, sp, r3
 2506              		@ sp needed
 2507              	.LVL283:
 2508              	.LVL284:
 2509              	.LVL285:
 2510 0126 F0BD     		pop	{r4, r5, r6, r7, pc}
 2511              	.L264:
 2512              		.align	2
 2513              	.L263:
 2514 0128 DCFCFFFF 		.word	-804
 2515 012c EF020000 		.word	751
 2516 0130 F2020000 		.word	754
 2517 0134 9BFEFFFF 		.word	-357
 2518 0138 F1020000 		.word	753
 2519 013c FFFF0000 		.word	65535
 2520 0140 D1FEFFFF 		.word	-303
 2521              		.cfi_endproc
 2522              	.LFE64:
 2523              		.size	AddCA, .-AddCA
 2524              		.section	.text.wolfSSL_Init,"ax",%progbits
 2525              		.align	1
 2526              		.global	wolfSSL_Init
 2527              		.code	16
 2528              		.thumb_func
 2529              		.type	wolfSSL_Init, %function
 2530              	wolfSSL_Init:
 2531              	.LFB65:
2624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2625:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_CERTS */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 101


2626:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2627:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2628:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SESSION_CACHE
2629:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* basic config gives a cache with 33 sessions, adequate for clients and
2631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        embedded servers
2632:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2633:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        MEDIUM_SESSION_CACHE allows 1055 sessions, adequate for servers that
2634:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        aren't under heavy load, basically allows 200 new sessions per minute
2635:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        BIG_SESSION_CACHE yields 20,027 sessions
2637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2638:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        HUGE_SESSION_CACHE yields 65,791 sessions, for servers under heavy load,
2639:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        allows over 13,000 new sessions per minute or over 200 new sessions per
2640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        second
2641:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        SMALL_SESSION_CACHE only stores 6 sessions, good for embedded clients
2643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        or systems where the default of nearly 3kB is too much RAM, this define
2644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        uses less than 500 bytes RAM
2645:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        default SESSION_CACHE stores 33 sessions (no XXX_SESSION_CACHE defined)
2647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     */
2648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HUGE_SESSION_CACHE
2649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSIONS_PER_ROW 11
2650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSION_ROWS 5981
2651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #elif defined(BIG_SESSION_CACHE)
2652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSIONS_PER_ROW 7
2653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSION_ROWS 2861
2654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #elif defined(MEDIUM_SESSION_CACHE)
2655:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSIONS_PER_ROW 5
2656:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSION_ROWS 211
2657:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #elif defined(SMALL_SESSION_CACHE)
2658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSIONS_PER_ROW 2
2659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSION_ROWS 3
2660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
2661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSIONS_PER_ROW 3
2662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define SESSION_ROWS 11
2663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
2664:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     typedef struct SessionRow {
2666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int nextIdx;                           /* where to place next one   */
2667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int totalCount;                        /* sessions ever on this row */
2668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_SESSION Sessions[SESSIONS_PER_ROW];
2669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     } SessionRow;
2670:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static SessionRow SessionCache[SESSION_ROWS];
2672:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2673:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #if defined(WOLFSSL_SESSION_STATS) && defined(WOLFSSL_PEAK_SESSIONS)
2674:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static word32 PeakSessions;
2675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
2676:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static wolfSSL_Mutex session_mutex;   /* SessionCache mutex */
2678:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_CLIENT_CACHE
2680:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef struct ClientSession {
2682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word16 serverRow;            /* SessionCache Row id */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 102


2683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word16 serverIdx;            /* SessionCache Idx (column) */
2684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } ClientSession;
2685:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2686:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef struct ClientRow {
2687:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int nextIdx;                /* where to place next one   */
2688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int totalCount;             /* sessions ever on this row */
2689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ClientSession Clients[SESSIONS_PER_ROW];
2690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } ClientRow;
2691:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static ClientRow ClientCache[SESSION_ROWS];  /* Client Cache */
2693:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                      /* uses session mutex */
2694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif  /* NO_CLIENT_CACHE */
2695:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2696:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SESSION_CACHE */
2697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2698:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_Init(void)
2699:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 2532              		.loc 1 2699 0
 2533              		.cfi_startproc
 2534 0000 38B5     		push	{r3, r4, r5, lr}
 2535              		.cfi_def_cfa_offset 16
 2536              		.cfi_offset 3, -16
 2537              		.cfi_offset 4, -12
 2538              		.cfi_offset 5, -8
 2539              		.cfi_offset 14, -4
2700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_Init");
2701:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2702:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (initRefCount == 0) {
 2540              		.loc 1 2702 0
 2541 0002 104C     		ldr	r4, .L277
 2542 0004 2368     		ldr	r3, [r4]
 2543 0006 002B     		cmp	r3, #0
 2544 0008 06D0     		beq	.L266
 2545              	.L270:
2703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Initialize crypto for use with TLS connection */
2704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (wolfCrypt_Init() != 0) {
2705:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad wolfCrypt Init");
2706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return WC_INIT_E;
2707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2708:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SESSION_CACHE
2709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (InitMutex(&session_mutex) != 0) {
2710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad Init Mutex session");
2711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_MUTEX_E;
2712:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2713:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (InitMutex(&count_mutex) != 0) {
2715:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad Init Mutex count");
2716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_MUTEX_E;
2717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
2718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2719:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2720:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&count_mutex) != 0) {
 2546              		.loc 1 2720 0
 2547 000a 251D     		add	r5, r4, #4
 2548 000c 281C     		mov	r0, r5
 2549 000e FFF7FEFF 		bl	LockMutex
 2550              	.LVL286:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 103


 2551 0012 0028     		cmp	r0, #0
 2552 0014 0BD0     		beq	.L275
 2553 0016 08E0     		b	.L267
 2554              	.L266:
2704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad wolfCrypt Init");
 2555              		.loc 1 2704 0
 2556 0018 FFF7FEFF 		bl	wolfCrypt_Init
 2557              	.LVL287:
 2558 001c 0028     		cmp	r0, #0
 2559 001e 0ED1     		bne	.L271
2714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad Init Mutex count");
 2560              		.loc 1 2714 0
 2561 0020 201D     		add	r0, r4, #4
 2562 0022 FFF7FEFF 		bl	InitMutex
 2563              	.LVL288:
 2564 0026 0028     		cmp	r0, #0
 2565 0028 EFD0     		beq	.L270
 2566              	.L267:
2716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 2567              		.loc 1 2716 0
 2568 002a 6A20     		mov	r0, #106
 2569 002c 08E0     		b	.L276
 2570              	.L275:
2721:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Lock Mutex count");
2722:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
2723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2724:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     initRefCount++;
 2571              		.loc 1 2725 0
 2572 002e 2368     		ldr	r3, [r4]
2726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&count_mutex);
 2573              		.loc 1 2726 0
 2574 0030 281C     		mov	r0, r5
2725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&count_mutex);
 2575              		.loc 1 2725 0
 2576 0032 0133     		add	r3, r3, #1
 2577 0034 2360     		str	r3, [r4]
 2578              		.loc 1 2726 0
 2579 0036 FFF7FEFF 		bl	UnLockMutex
 2580              	.LVL289:
2727:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 2581              		.loc 1 2728 0
 2582 003a 0120     		mov	r0, #1
 2583 003c 01E0     		b	.L269
 2584              	.L271:
2706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 2585              		.loc 1 2706 0
 2586 003e E420     		mov	r0, #228
 2587              	.L276:
 2588 0040 4042     		neg	r0, r0
 2589              	.L269:
2729:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 2590              		.loc 1 2729 0
 2591              		@ sp needed
 2592 0042 38BD     		pop	{r3, r4, r5, pc}
 2593              	.L278:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 104


 2594              		.align	2
 2595              	.L277:
 2596 0044 00000000 		.word	.LANCHOR1
 2597              		.cfi_endproc
 2598              	.LFE65:
 2599              		.size	wolfSSL_Init, .-wolfSSL_Init
 2600              		.section	.text.wolfSSL_CTX_new,"ax",%progbits
 2601              		.align	1
 2602              		.global	wolfSSL_CTX_new
 2603              		.code	16
 2604              		.thumb_func
 2605              		.type	wolfSSL_CTX_new, %function
 2606              	wolfSSL_CTX_new:
 2607              	.LFB14:
 158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CTX* ctx = NULL;
 2608              		.loc 1 158 0
 2609              		.cfi_startproc
 2610              	.LVL290:
 2611 0000 38B5     		push	{r3, r4, r5, lr}
 2612              		.cfi_def_cfa_offset 16
 2613              		.cfi_offset 3, -16
 2614              		.cfi_offset 4, -12
 2615              		.cfi_offset 5, -8
 2616              		.cfi_offset 14, -4
 163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* user no longer forced to call Init themselves */
 2617              		.loc 1 163 0
 2618 0002 114B     		ldr	r3, .L295
 158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CTX* ctx = NULL;
 2619              		.loc 1 158 0
 2620 0004 051C     		mov	r5, r0
 163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* user no longer forced to call Init themselves */
 2621              		.loc 1 163 0
 2622 0006 1B68     		ldr	r3, [r3]
 2623 0008 002B     		cmp	r3, #0
 2624 000a 02D0     		beq	.L280
 2625              	.LVL291:
 2626              	.L283:
 173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ctx;
 2627              		.loc 1 173 0
 2628 000c 002D     		cmp	r5, #0
 2629 000e 05D1     		bne	.L293
 2630 0010 12E0     		b	.L294
 2631              	.LVL292:
 2632              	.L280:
 2633              	.LBB75:
 165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != SSL_SUCCESS) {
 2634              		.loc 1 165 0
 2635 0012 FFF7FEFF 		bl	wolfSSL_Init
 2636              	.LVL293:
 166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("wolfSSL_Init failed");
 2637              		.loc 1 166 0
 2638 0016 0128     		cmp	r0, #1
 2639 0018 F8D0     		beq	.L283
 2640 001a 0DE0     		b	.L294
 2641              	.LVL294:
 2642              	.L293:
 2643              	.LBE75:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 105


 176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx) {
 2644              		.loc 1 176 0
 2645 001c 4820     		mov	r0, #72
 2646 001e FFF7FEFF 		bl	wolfSSL_Malloc
 2647              	.LVL295:
 2648 0022 041E     		sub	r4, r0, #0
 2649              	.LVL296:
 177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (InitSSL_Ctx(ctx, method) < 0) {
 2650              		.loc 1 177 0
 2651 0024 0AD0     		beq	.L285
 178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Init CTX failed");
 2652              		.loc 1 178 0
 2653 0026 291C     		mov	r1, r5
 2654 0028 FFF7FEFF 		bl	InitSSL_Ctx
 2655              	.LVL297:
 2656 002c 031C     		mov	r3, r0
 2657 002e 201C     		mov	r0, r4
 2658 0030 002B     		cmp	r3, #0
 2659 0032 07DA     		bge	.L284
 180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx = NULL;
 2660              		.loc 1 180 0
 2661 0034 FFF7FEFF 		bl	wolfSSL_CTX_free
 2662              	.LVL298:
 2663              	.L294:
 181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 2664              		.loc 1 181 0
 2665 0038 0020     		mov	r0, #0
 2666 003a 03E0     		b	.L284
 2667              	.LVL299:
 2668              	.L285:
 2669              	.LBB76:
 186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 2670              		.loc 1 186 0 discriminator 1
 2671 003c 281C     		mov	r0, r5
 2672              	.LVL300:
 2673 003e FFF7FEFF 		bl	wolfSSL_Free
 2674              	.LVL301:
 2675 0042 201C     		mov	r0, r4
 2676              	.LVL302:
 2677              	.L284:
 2678              	.LBE76:
 191:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 2679              		.loc 1 191 0
 2680              		@ sp needed
 2681              	.LVL303:
 2682 0044 38BD     		pop	{r3, r4, r5, pc}
 2683              	.L296:
 2684 0046 C046     		.align	2
 2685              	.L295:
 2686 0048 00000000 		.word	.LANCHOR1
 2687              		.cfi_endproc
 2688              	.LFE14:
 2689              		.size	wolfSSL_CTX_new, .-wolfSSL_CTX_new
 2690              		.section	.text.PemToDer,"ax",%progbits
 2691              		.align	1
 2692              		.global	PemToDer
 2693              		.code	16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 106


 2694              		.thumb_func
 2695              		.type	PemToDer, %function
 2696              	PemToDer:
 2697              	.LFB66:
2730:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2731:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2732:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)
2733:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2734:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* SSL_SUCCESS if ok, <= 0 else */
2735:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int wolfssl_decrypt_buffer_key(DerBuffer* der, byte* password,
2736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       int passwordSz, EncryptedInfo* info)
2737:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_BAD_FILE;
2739:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2740:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2741:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* key      = NULL;
2742:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2743:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte  key[AES_256_KEY_SIZE];
2744:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2745:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfssl_decrypt_buffer_key");
2747:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (der == NULL || password == NULL || info == NULL) {
2749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("bad arguments");
2750:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2751:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2752:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2753:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* use file's salt for key derivation, hex decode first */
2754:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (Base16_Decode(info->iv, info->ivSz, info->iv, &info->ivSz) != 0) {
2755:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("base16 decode failed");
2756:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2758:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2759:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
2760:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2761:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     key = (byte*)XMALLOC(AES_256_KEY_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (key == NULL) {
2764:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("memory failure");
2765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2767:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_SMALL_STACK */
2768:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ((ret = wolfSSL_EVP_BytesToKey(info->name, "MD5", info->iv,
2770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               password, passwordSz, 1, key, NULL)) <= 0) {
2771:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("bytes to key failure");
2772:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2773:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2774:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2777:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void) passwordSz;
2779:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_MD5 */
2780:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2781:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
2782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (XSTRNCMP(info->name, EVP_DES_CBC, EVP_DES_SIZE) == 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 107


2783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_Des_CbcDecryptWithKey(der->buffer, der->buffer, der->length,
2784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        key, info->iv);
2785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (XSTRNCMP(info->name, EVP_DES_EDE3_CBC, EVP_DES_EDE3_SIZE) == 0)
2786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_Des3_CbcDecryptWithKey(der->buffer, der->buffer, der->length,
2787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                         key, info->iv);
2788:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_DES3 */
2789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_AES) && defined(HAVE_AES_CBC)
2790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (XSTRNCMP(info->name, EVP_AES_128_CBC, EVP_AES_SIZE) == 0)
2791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_AesCbcDecryptWithKey(der->buffer, der->buffer, der->length,
2792:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       key, AES_128_KEY_SIZE, info->iv);
2793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (XSTRNCMP(info->name, EVP_AES_192_CBC, EVP_AES_SIZE) == 0)
2794:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_AesCbcDecryptWithKey(der->buffer, der->buffer, der->length,
2795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       key, AES_192_KEY_SIZE, info->iv);
2796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (XSTRNCMP(info->name, EVP_AES_256_CBC, EVP_AES_SIZE) == 0)
2797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_AesCbcDecryptWithKey(der->buffer, der->buffer, der->length,
2798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       key, AES_256_KEY_SIZE, info->iv);
2799:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_AES && HAVE_AES_CBC */
2800:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2801:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2802:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2804:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == MP_OKAY)
2806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
2807:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ret == SSL_BAD_FILE)
2808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
2809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FATAL_ERROR;
2811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2812:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER) */
2813:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2814:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2815:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_KEY_GEN) && defined(OPENSSL_EXTRA)
2816:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int wolfssl_encrypt_buffer_key(byte* der, word32 derSz, byte* password,
2817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       int passwordSz, EncryptedInfo* info)
2818:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
2819:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_BAD_FILE;
2820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2821:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* key      = NULL;
2823:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte  key[AES_256_KEY_SIZE];
2825:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2826:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfssl_encrypt_buffer_key");
2828:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2829:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (der == NULL || password == NULL || info == NULL || info->ivSz == 0) {
2830:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("bad arguments");
2831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2833:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
2835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2836:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     key = (byte*)XMALLOC(AES_256_KEY_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (key == NULL) {
2839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("memory failure");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 108


2840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2842:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_SMALL_STACK */
2843:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ((ret = wolfSSL_EVP_BytesToKey(info->name, "MD5", info->iv,
2845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               password, passwordSz, 1, key, NULL)) <= 0) {
2846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("bytes to key failure");
2847:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2849:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2850:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
2851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2852:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
2853:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void) passwordSz;
2854:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_MD5 */
2855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2856:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
2857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (XSTRNCMP(info->name, EVP_DES_CBC, EVP_DES_SIZE) == 0)
2858:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_Des_CbcEncryptWithKey(der, der, derSz, key, info->iv);
2859:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (XSTRNCMP(info->name, EVP_DES_EDE3_CBC, EVP_DES_EDE3_SIZE) == 0)
2860:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_Des3_CbcEncryptWithKey(der, der, derSz, key, info->iv);
2861:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_DES3 */
2862:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_AES
2863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (XSTRNCMP(info->name, EVP_AES_128_CBC, EVP_AES_SIZE) == 0)
2864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_AesCbcEncryptWithKey(der, der, derSz,
2865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       key, AES_128_KEY_SIZE, info->iv);
2866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (XSTRNCMP(info->name, EVP_AES_192_CBC, EVP_AES_SIZE) == 0)
2867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_AesCbcEncryptWithKey(der, der, derSz,
2868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       key, AES_192_KEY_SIZE, info->iv);
2869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (XSTRNCMP(info->name, EVP_AES_256_CBC, EVP_AES_SIZE) == 0)
2870:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wc_AesCbcEncryptWithKey(der, der, derSz,
2871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       key, AES_256_KEY_SIZE, info->iv);
2872:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_AES */
2873:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2874:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
2875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2876:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
2877:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2878:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == MP_OKAY)
2879:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
2880:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ret == SSL_BAD_FILE)
2881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
2882:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FATAL_ERROR;
2884:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
2885:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* defined(WOLFSSL_KEY_GEN) */
2886:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2887:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2888:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CERTS
2889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2890:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Remove PEM header/footer, convert to ASN1, store any encrypted data
2891:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    info->consumed tracks of PEM bytes consumed in case multiple parts */
2892:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int PemToDer(const unsigned char* buff, long longSz, int type,
2893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****               DerBuffer** pDer, void* heap, EncryptedInfo* info, int* eccKey)
2894:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 2698              		.loc 1 2894 0
 2699              		.cfi_startproc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 109


 2700              	.LVL304:
 2701 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2702              		.cfi_def_cfa_offset 20
 2703              		.cfi_offset 4, -20
 2704              		.cfi_offset 5, -16
 2705              		.cfi_offset 6, -12
 2706              		.cfi_offset 7, -8
 2707              		.cfi_offset 14, -4
 2708 0002 8FB0     		sub	sp, sp, #60
 2709              		.cfi_def_cfa_offset 80
 2710              	.LVL305:
 2711              		.loc 1 2894 0
 2712 0004 0793     		str	r3, [sp, #28]
 2713 0006 0190     		str	r0, [sp, #4]
 2714              	.LVL306:
 2715 0008 0291     		str	r1, [sp, #8]
 2716              	.LVL307:
 2717 000a 0392     		str	r2, [sp, #12]
 2718 000c 159F     		ldr	r7, [sp, #84]
 2719 000e 734B     		ldr	r3, .L355
 2720              	.LVL308:
2895:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* header      = NULL;
2896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* footer      = NULL;
2897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char*       headerEnd;
2898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char*       footerEnd;
2899:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char*       consumedEnd;
2900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char*       bufferEnd   = (char*)(buff + longSz);
2901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long        neededSz;
2902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int         ret         = 0;
2903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int         sz          = (int)longSz;
2904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int         encrypted_key = 0;
2905:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*  der;
2906:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("PemToDer");
2908:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     switch (type) {
 2721              		.loc 1 2909 0
 2722 0010 0E2A     		cmp	r2, #14
 2723 0012 41D8     		bhi	.L298
 2724 0014 101C     		mov	r0, r2
 2725              	.LVL309:
 2726 0016 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 2727              	.L300:
 2728 001a 08       		.byte	(.L299-.L300)/2
 2729 001b 3F       		.byte	(.L298-.L300)/2
 2730 001c 10       		.byte	(.L301-.L300)/2
 2731 001d 0C       		.byte	(.L302-.L300)/2
 2732 001e 08       		.byte	(.L299-.L300)/2
 2733 001f 3F       		.byte	(.L298-.L300)/2
 2734 0020 3F       		.byte	(.L298-.L300)/2
 2735 0021 14       		.byte	(.L303-.L300)/2
 2736 0022 18       		.byte	(.L304-.L300)/2
 2737 0023 1C       		.byte	(.L305-.L300)/2
 2738 0024 3F       		.byte	(.L298-.L300)/2
 2739 0025 3B       		.byte	(.L307-.L300)/2
 2740 0026 3F       		.byte	(.L298-.L300)/2
 2741 0027 3F       		.byte	(.L298-.L300)/2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 110


 2742 0028 08       		.byte	(.L299-.L300)/2
 2743 0029 00       		.p2align 1
 2744              	.L299:
2910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CA_TYPE:       /* same as below */
2911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case TRUSTED_PEER_TYPE:
2912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CERT_TYPE:      header=BEGIN_CERT;     footer=END_CERT;     break;
 2745              		.loc 1 2912 0
 2746 002a 6D4A     		ldr	r2, .L355+4
 2747              	.LVL310:
 2748 002c 1668     		ldr	r6, [r2]
 2749              	.LVL311:
 2750 002e 6D4A     		ldr	r2, .L355+8
 2751 0030 12E0     		b	.L347
 2752              	.LVL312:
 2753              	.L302:
2913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CRL_TYPE:       header=BEGIN_X509_CRL; footer=END_X509_CRL; break;
 2754              		.loc 1 2913 0
 2755 0032 6D4A     		ldr	r2, .L355+12
 2756 0034 1668     		ldr	r6, [r2]
 2757              	.LVL313:
 2758 0036 6D4A     		ldr	r2, .L355+16
 2759 0038 0EE0     		b	.L347
 2760              	.LVL314:
 2761              	.L301:
2914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case DH_PARAM_TYPE:  header=BEGIN_DH_PARAM; footer=END_DH_PARAM; break;
 2762              		.loc 1 2914 0
 2763 003a 6D4A     		ldr	r2, .L355+20
 2764 003c 1668     		ldr	r6, [r2]
 2765              	.LVL315:
 2766 003e 6D4A     		ldr	r2, .L355+24
 2767 0040 0AE0     		b	.L347
 2768              	.LVL316:
 2769              	.L303:
2915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CERTREQ_TYPE:   header=BEGIN_CERT_REQ; footer=END_CERT_REQ; break;
 2770              		.loc 1 2915 0
 2771 0042 6D4A     		ldr	r2, .L355+28
 2772 0044 1668     		ldr	r6, [r2]
 2773              	.LVL317:
 2774 0046 6D4A     		ldr	r2, .L355+32
 2775 0048 06E0     		b	.L347
 2776              	.LVL318:
 2777              	.L304:
2916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case DSA_TYPE:       header=BEGIN_DSA_PRIV; footer=END_DSA_PRIV; break;
 2778              		.loc 1 2916 0
 2779 004a 6D4A     		ldr	r2, .L355+36
 2780 004c 1668     		ldr	r6, [r2]
 2781              	.LVL319:
 2782 004e 6D4A     		ldr	r2, .L355+40
 2783 0050 02E0     		b	.L347
 2784              	.LVL320:
 2785              	.L305:
2917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ECC_TYPE:       header=BEGIN_EC_PRIV;  footer=END_EC_PRIV;  break;
 2786              		.loc 1 2917 0
 2787 0052 6D4A     		ldr	r2, .L355+44
 2788 0054 1668     		ldr	r6, [r2]
 2789              	.LVL321:
 2790 0056 6D4A     		ldr	r2, .L355+48
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 111


 2791              	.LVL322:
 2792              	.L347:
2918:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case RSA_TYPE:       header=BEGIN_RSA_PRIV; footer=END_RSA_PRIV; break;
2919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case PUBLICKEY_TYPE: header=BEGIN_PUB_KEY;  footer=END_PUB_KEY;  break;
2920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:             header=BEGIN_RSA_PRIV; footer=END_RSA_PRIV; break;
2921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2922:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* find header */
2924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (;;) {
2925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         headerEnd = XSTRNSTR((char*)buff, header, sz);
2926:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (headerEnd || type != PRIVATEKEY_TYPE) {
2928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_RSA_PRIV) {
 2793              		.loc 1 2929 0
 2794 0058 1B68     		ldr	r3, [r3]
2917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ECC_TYPE:       header=BEGIN_EC_PRIV;  footer=END_EC_PRIV;  break;
 2795              		.loc 1 2917 0
 2796 005a 1568     		ldr	r5, [r2]
 2797              	.LVL323:
 2798              		.loc 1 2929 0
 2799 005c 0893     		str	r3, [sp, #32]
2930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_PRIV_KEY;       footer = END_PRIV_KEY;
2931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_PRIV_KEY) {
 2800              		.loc 1 2931 0
 2801 005e 6C4B     		ldr	r3, .L355+52
 2802 0060 1B68     		ldr	r3, [r3]
 2803 0062 0493     		str	r3, [sp, #16]
2932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_ENC_PRIV_KEY;   footer = END_ENC_PRIV_KEY;
2933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_ENC_PRIV_KEY) {
 2804              		.loc 1 2933 0
 2805 0064 6B4B     		ldr	r3, .L355+56
 2806 0066 1B68     		ldr	r3, [r3]
 2807 0068 0693     		str	r3, [sp, #24]
2934:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_EC_PRIV;        footer = END_EC_PRIV;
2935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_EC_PRIV) {
 2808              		.loc 1 2935 0
 2809 006a 674B     		ldr	r3, .L355+44
 2810 006c 1B68     		ldr	r3, [r3]
 2811 006e 0593     		str	r3, [sp, #20]
2936:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_DSA_PRIV;       footer = END_DSA_PRIV;
 2812              		.loc 1 2936 0
 2813 0070 634B     		ldr	r3, .L355+36
 2814 0072 1B68     		ldr	r3, [r3]
 2815 0074 0A93     		str	r3, [sp, #40]
 2816 0076 634B     		ldr	r3, .L355+40
 2817 0078 1B68     		ldr	r3, [r3]
 2818 007a 0B93     		str	r3, [sp, #44]
2934:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_EC_PRIV;        footer = END_EC_PRIV;
 2819              		.loc 1 2934 0
 2820 007c 634B     		ldr	r3, .L355+48
 2821 007e 1B68     		ldr	r3, [r3]
 2822 0080 0C93     		str	r3, [sp, #48]
2932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_ENC_PRIV_KEY;   footer = END_ENC_PRIV_KEY;
 2823              		.loc 1 2932 0
 2824 0082 654B     		ldr	r3, .L355+60
 2825 0084 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 112


 2826 0086 0D93     		str	r3, [sp, #52]
2930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_PRIV_KEY) {
 2827              		.loc 1 2930 0
 2828 0088 644B     		ldr	r3, .L355+64
 2829 008a 1B68     		ldr	r3, [r3]
 2830 008c 0993     		str	r3, [sp, #36]
 2831 008e 0EE0     		b	.L309
 2832              	.LVL324:
 2833              	.L307:
2919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:             header=BEGIN_RSA_PRIV; footer=END_RSA_PRIV; break;
 2834              		.loc 1 2919 0
 2835 0090 634A     		ldr	r2, .L355+68
 2836 0092 1668     		ldr	r6, [r2]
 2837              	.LVL325:
 2838 0094 634A     		ldr	r2, .L355+72
 2839 0096 DFE7     		b	.L347
 2840              	.LVL326:
 2841              	.L298:
2920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 2842              		.loc 1 2920 0
 2843 0098 1E68     		ldr	r6, [r3]
 2844              	.LVL327:
 2845 009a 634A     		ldr	r2, .L355+76
 2846              	.LVL328:
 2847 009c DCE7     		b	.L347
 2848              	.LVL329:
 2849              	.L351:
2927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 2850              		.loc 1 2927 0 discriminator 1
 2851 009e 039B     		ldr	r3, [sp, #12]
 2852 00a0 012B     		cmp	r3, #1
 2853 00a2 1ED1     		bne	.L325
2929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_PRIV_KEY;       footer = END_PRIV_KEY;
 2854              		.loc 1 2929 0
 2855 00a4 089B     		ldr	r3, [sp, #32]
 2856 00a6 9E42     		cmp	r6, r3
 2857 00a8 09D1     		bne	.L350
2930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_PRIV_KEY) {
 2858              		.loc 1 2930 0
 2859 00aa 099D     		ldr	r5, [sp, #36]
 2860              	.LVL330:
2931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_ENC_PRIV_KEY;   footer = END_ENC_PRIV_KEY;
 2861              		.loc 1 2931 0
 2862 00ac 049E     		ldr	r6, [sp, #16]
 2863              	.LVL331:
 2864              	.L309:
2925:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 2865              		.loc 1 2925 0
 2866 00ae 0198     		ldr	r0, [sp, #4]
 2867 00b0 311C     		mov	r1, r6
 2868 00b2 029A     		ldr	r2, [sp, #8]
 2869 00b4 FFF7FEFF 		bl	mystrnstr
 2870              	.LVL332:
 2871 00b8 041E     		sub	r4, r0, #0
 2872              	.LVL333:
2927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
 2873              		.loc 1 2927 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 113


 2874 00ba F0D0     		beq	.L351
 2875 00bc 13E0     		b	.L310
 2876              	.L350:
2931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_ENC_PRIV_KEY;   footer = END_ENC_PRIV_KEY;
 2877              		.loc 1 2931 0
 2878 00be 049B     		ldr	r3, [sp, #16]
 2879 00c0 9E42     		cmp	r6, r3
 2880 00c2 02D1     		bne	.L352
2932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_ENC_PRIV_KEY) {
 2881              		.loc 1 2932 0
 2882 00c4 0D9D     		ldr	r5, [sp, #52]
 2883              	.LVL334:
2933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_EC_PRIV;        footer = END_EC_PRIV;
 2884              		.loc 1 2933 0
 2885 00c6 069E     		ldr	r6, [sp, #24]
 2886              	.LVL335:
 2887 00c8 F1E7     		b	.L309
 2888              	.LVL336:
 2889              	.L352:
 2890 00ca 069B     		ldr	r3, [sp, #24]
 2891 00cc 9E42     		cmp	r6, r3
 2892 00ce 02D1     		bne	.L353
2934:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else if (header == BEGIN_EC_PRIV) {
 2893              		.loc 1 2934 0
 2894 00d0 0C9D     		ldr	r5, [sp, #48]
 2895              	.LVL337:
2935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    header =  BEGIN_DSA_PRIV;       footer = END_DSA_PRIV;
 2896              		.loc 1 2935 0
 2897 00d2 059E     		ldr	r6, [sp, #20]
 2898              	.LVL338:
 2899 00d4 EBE7     		b	.L309
 2900              	.LVL339:
 2901              	.L353:
 2902 00d6 059B     		ldr	r3, [sp, #20]
 2903 00d8 9E42     		cmp	r6, r3
 2904 00da 02D1     		bne	.L325
 2905              		.loc 1 2936 0
 2906 00dc 0B9D     		ldr	r5, [sp, #44]
 2907              	.LVL340:
 2908 00de 0A9E     		ldr	r6, [sp, #40]
 2909              	.LVL341:
 2910 00e0 E5E7     		b	.L309
 2911              	.LVL342:
 2912              	.L325:
2937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else
2938:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
2939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2940:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2941:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!headerEnd) {
2942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Couldn't find PEM header");
2943:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_NO_PEM_HEADER;
 2913              		.loc 1 2943 0
 2914 00e2 524D     		ldr	r5, .L355+80
 2915              	.LVL343:
 2916 00e4 76E0     		b	.L341
 2917              	.LVL344:
 2918              	.L310:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 114


2944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2945:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     headerEnd += XSTRLEN(header);
 2919              		.loc 1 2946 0
 2920 00e6 301C     		mov	r0, r6
 2921              	.LVL345:
 2922 00e8 FFF7FEFF 		bl	strlen
 2923              	.LVL346:
 2924 00ec 2418     		add	r4, r4, r0
 2925              	.LVL347:
2947:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* eat end of line */
2949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (headerEnd[0] == '\n')
 2926              		.loc 1 2949 0
 2927 00ee 2378     		ldrb	r3, [r4]
 2928 00f0 0A2B     		cmp	r3, #10
 2929 00f2 01D1     		bne	.L346
2950:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         headerEnd++;
 2930              		.loc 1 2950 0
 2931 00f4 631C     		add	r3, r4, #1
 2932 00f6 03E0     		b	.L348
 2933              	.L346:
2951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (headerEnd[1] == '\n')
 2934              		.loc 1 2951 0
 2935 00f8 6378     		ldrb	r3, [r4, #1]
 2936 00fa 0A2B     		cmp	r3, #10
 2937 00fc 05D1     		bne	.L314
2952:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         headerEnd += 2;
 2938              		.loc 1 2952 0
 2939 00fe A31C     		add	r3, r4, #2
 2940              	.L348:
 2941 0100 0493     		str	r3, [sp, #16]
 2942              	.LVL348:
2953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
2954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (info)
2955:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             info->consumed = (long)(headerEnd+2 - (char*)buff);
2956:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
2957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2958:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (type == PRIVATEKEY_TYPE) {
 2943              		.loc 1 2959 0
 2944 0102 039B     		ldr	r3, [sp, #12]
 2945              	.LVL349:
 2946 0104 012B     		cmp	r3, #1
 2947 0106 12D1     		bne	.L316
 2948 0108 08E0     		b	.L354
 2949              	.LVL350:
 2950              	.L314:
2954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             info->consumed = (long)(headerEnd+2 - (char*)buff);
 2951              		.loc 1 2954 0
 2952 010a 002F     		cmp	r7, #0
 2953 010c 03D0     		beq	.L349
2955:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
 2954              		.loc 1 2955 0
 2955 010e 019B     		ldr	r3, [sp, #4]
 2956 0110 0234     		add	r4, r4, #2
 2957              	.LVL351:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 115


 2958 0112 E41A     		sub	r4, r4, r3
 2959              	.LVL352:
 2960 0114 7C67     		str	r4, [r7, #116]
 2961              	.LVL353:
 2962              	.L349:
2956:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 2963              		.loc 1 2956 0
 2964 0116 0425     		mov	r5, #4
 2965 0118 6D42     		neg	r5, r5
 2966 011a 5BE0     		b	.L341
 2967              	.LVL354:
 2968              	.L354:
2960:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (eccKey)
 2969              		.loc 1 2960 0
 2970 011c 169B     		ldr	r3, [sp, #88]
 2971 011e 002B     		cmp	r3, #0
 2972 0120 05D0     		beq	.L316
2961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             *eccKey = header == BEGIN_EC_PRIV;
 2973              		.loc 1 2961 0
 2974 0122 059B     		ldr	r3, [sp, #20]
 2975 0124 F31A     		sub	r3, r6, r3
 2976 0126 5A42     		neg	r2, r3
 2977 0128 5341     		adc	r3, r3, r2
 2978 012a 169A     		ldr	r2, [sp, #88]
 2979 012c 1360     		str	r3, [r2]
 2980              	.L316:
2962:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
2963:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2964:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)
2965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
2966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* remove encrypted header if there */
2967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char encHeader[] = "Proc-Type";
2968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char* line = XSTRNSTR(headerEnd, encHeader, PEM_LINE_LEN);
2969:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (line) {
2970:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             char* newline;
2971:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             char* finish;
2972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             char* start  = XSTRNSTR(line, "DES", PEM_LINE_LEN);
2973:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!start)
2975:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 start = XSTRNSTR(line, "AES", PEM_LINE_LEN);
2976:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!start) return SSL_BAD_FILE;
2978:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!info)  return SSL_BAD_FILE;
2979:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             finish = XSTRNSTR(start, ",", PEM_LINE_LEN);
2981:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (start && finish && (start < finish)) {
2983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 newline = XSTRNSTR(finish, "\r", PEM_LINE_LEN);
2984:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2985:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (XMEMCPY(info->name, start, finish - start) == NULL)
2986:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
2987:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 info->name[finish - start] = 0;
2988:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (XMEMCPY(info->iv, finish + 1, sizeof(info->iv)) == NULL)
2989:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
2990:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
2991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (!newline) newline = XSTRNSTR(finish, "\n", PEM_LINE_LEN);
2992:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (newline && (newline > finish)) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 116


2993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     info->ivSz = (word32)(newline - (finish + 1));
2994:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     info->set = 1;
2995:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
2996:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
2997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_BAD_FILE;
2998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
2999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
3000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_BAD_FILE;
3001:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* eat blank line */
3003:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             while (*newline == '\r' || *newline == '\n')
3004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 newline++;
3005:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             headerEnd = newline;
3006:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             encrypted_key = 1;
3008:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3010:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA || HAVE_WEBSERVER */
3011:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* find footer */
3013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     footerEnd = XSTRNSTR((char*)buff, footer, sz);
 2981              		.loc 1 3013 0
 2982 012e 0198     		ldr	r0, [sp, #4]
 2983 0130 291C     		mov	r1, r5
 2984 0132 029A     		ldr	r2, [sp, #8]
 2985 0134 FFF7FEFF 		bl	mystrnstr
 2986              	.LVL355:
 2987 0138 041E     		sub	r4, r0, #0
 2988              	.LVL356:
3014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!footerEnd) {
 2989              		.loc 1 3014 0
 2990 013a 04D1     		bne	.L317
3015:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (info)
 2991              		.loc 1 3015 0
 2992 013c 002F     		cmp	r7, #0
 2993 013e EAD0     		beq	.L349
3016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             info->consumed = longSz; /* No more certs if no footer */
 2994              		.loc 1 3016 0
 2995 0140 029B     		ldr	r3, [sp, #8]
 2996 0142 7B67     		str	r3, [r7, #116]
 2997 0144 E7E7     		b	.L349
 2998              	.L317:
3017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
3018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3019:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     consumedEnd = footerEnd + XSTRLEN(footer);
 2999              		.loc 1 3020 0
 3000 0146 281C     		mov	r0, r5
 3001              	.LVL357:
 3002 0148 FFF7FEFF 		bl	strlen
 3003              	.LVL358:
2900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long        neededSz;
 3004              		.loc 1 2900 0
 3005 014c 019B     		ldr	r3, [sp, #4]
 3006 014e 029A     		ldr	r2, [sp, #8]
 3007              		.loc 1 3020 0
 3008 0150 2018     		add	r0, r4, r0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 117


 3009              	.LVL359:
2900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long        neededSz;
 3010              		.loc 1 2900 0
 3011 0152 9B18     		add	r3, r3, r2
3021:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3022:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (consumedEnd < bufferEnd) {  /* handle no end of line on last line */
 3012              		.loc 1 3022 0
 3013 0154 9842     		cmp	r0, r3
 3014 0156 10D2     		bcs	.L319
3023:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* eat end of line */
3024:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (consumedEnd[0] == '\n')
 3015              		.loc 1 3024 0
 3016 0158 0378     		ldrb	r3, [r0]
 3017 015a 0A2B     		cmp	r3, #10
 3018 015c 01D1     		bne	.L320
3025:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             consumedEnd++;
 3019              		.loc 1 3025 0
 3020 015e 0130     		add	r0, r0, #1
 3021              	.LVL360:
 3022 0160 0BE0     		b	.L319
 3023              	.L320:
3026:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (consumedEnd[1] == '\n')
 3024              		.loc 1 3026 0
 3025 0162 4378     		ldrb	r3, [r0, #1]
 3026 0164 0A2B     		cmp	r3, #10
 3027 0166 01D1     		bne	.L321
3027:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             consumedEnd += 2;
 3028              		.loc 1 3027 0
 3029 0168 0230     		add	r0, r0, #2
 3030              	.LVL361:
 3031 016a 06E0     		b	.L319
 3032              	.L321:
3028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
3029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (info)
 3033              		.loc 1 3029 0
 3034 016c 002F     		cmp	r7, #0
 3035 016e D2D0     		beq	.L349
3030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 info->consumed = (long)(consumedEnd+2 - (char*)buff);
 3036              		.loc 1 3030 0
 3037 0170 019B     		ldr	r3, [sp, #4]
 3038 0172 0230     		add	r0, r0, #2
 3039              	.LVL362:
 3040 0174 C01A     		sub	r0, r0, r3
 3041              	.LVL363:
 3042 0176 7867     		str	r0, [r7, #116]
 3043 0178 CDE7     		b	.L349
 3044              	.LVL364:
 3045              	.L319:
3031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_BAD_FILE;
3032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3033:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3034:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (info)
 3046              		.loc 1 3035 0
 3047 017a 002F     		cmp	r7, #0
 3048 017c 02D0     		beq	.L322
3036:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->consumed = (long)(consumedEnd - (char*)buff);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 118


 3049              		.loc 1 3036 0
 3050 017e 019B     		ldr	r3, [sp, #4]
 3051 0180 C01A     		sub	r0, r0, r3
 3052              	.LVL365:
 3053 0182 7867     		str	r0, [r7, #116]
 3054              	.L322:
3037:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* set up der buffer */
3039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     neededSz = (long)(footerEnd - headerEnd);
 3055              		.loc 1 3039 0
 3056 0184 049B     		ldr	r3, [sp, #16]
 3057 0186 E41A     		sub	r4, r4, r3
 3058              	.LVL366:
3040:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (neededSz > sz || neededSz < 0)
 3059              		.loc 1 3040 0
 3060 0188 029B     		ldr	r3, [sp, #8]
 3061 018a 9C42     		cmp	r4, r3
 3062 018c C3DC     		bgt	.L349
 3063              		.loc 1 3040 0 is_stmt 0 discriminator 1
 3064 018e 002C     		cmp	r4, #0
 3065 0190 C1DB     		blt	.L349
3041:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
3042:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3043:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = AllocDer(pDer, (word32)neededSz, type, heap);
 3066              		.loc 1 3043 0 is_stmt 1
 3067 0192 0798     		ldr	r0, [sp, #28]
 3068 0194 211C     		mov	r1, r4
 3069 0196 039A     		ldr	r2, [sp, #12]
 3070 0198 149B     		ldr	r3, [sp, #80]
 3071 019a FFF7FEFF 		bl	AllocDer
 3072              	.LVL367:
 3073 019e 051E     		sub	r5, r0, #0
 3074              	.LVL368:
3044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0) {
 3075              		.loc 1 3044 0
 3076 01a0 18DB     		blt	.L341
3045:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
3046:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3047:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     der = *pDer;
 3077              		.loc 1 3047 0
 3078 01a2 079B     		ldr	r3, [sp, #28]
3048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3049:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (Base64_Decode((byte*)headerEnd, (word32)neededSz,
 3079              		.loc 1 3049 0
 3080 01a4 0498     		ldr	r0, [sp, #16]
 3081              	.LVL369:
3047:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3082              		.loc 1 3047 0
 3083 01a6 1F68     		ldr	r7, [r3]
 3084              	.LVL370:
 3085              		.loc 1 3049 0
 3086 01a8 211C     		mov	r1, r4
 3087 01aa 3B1C     		mov	r3, r7
 3088 01ac 3A68     		ldr	r2, [r7]
 3089 01ae 0833     		add	r3, r3, #8
 3090 01b0 FFF7FEFF 		bl	Base64_Decode
 3091              	.LVL371:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 119


 3092 01b4 0028     		cmp	r0, #0
 3093 01b6 AEDB     		blt	.L349
3050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                       der->buffer, &der->length) < 0)
3051:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
3052:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (header == BEGIN_PRIV_KEY && !encrypted_key) {
 3094              		.loc 1 3053 0
 3095 01b8 154B     		ldr	r3, .L355+52
3054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* pkcs8 key, convert and adjust length */
3055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if ((ret = ToTraditional(der->buffer, der->length)) < 0)
3056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
3057:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = ret;
3059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
3060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3061:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3062:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if (defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)) && !defined(NO_PWDBASED)
3063:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (encrypted_key || header == BEGIN_ENC_PRIV_KEY) {
3064:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int   passwordSz;
3065:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char* password = NULL;
3067:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3068:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char  password[80];
3069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3070:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!info || !info->ctx || !info->ctx->passwd_cb)
3072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_BAD_FILE;  /* no callback error */
3073:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3074:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         password = (char*)XMALLOC(80, heap, DYNAMIC_TYPE_TMP_BUFFER);
3076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (password == NULL)
3077:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
3078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3079:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         passwordSz = info->ctx->passwd_cb(password, sizeof(password), 0,
3080:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           info->ctx->userdata);
3081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* convert and adjust length */
3082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (header == BEGIN_ENC_PRIV_KEY) {
3083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = ToTraditionalEnc(der->buffer, der->length,
3084:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    password, passwordSz);
3085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(password, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret < 0) {
3089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return ret;
3090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3091:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             der->length = ret;
3093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3094:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* decrypt the key */
3095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
3096:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfssl_decrypt_buffer_key(der, (byte*)password,
3097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                              passwordSz, info);
3098:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(password, heap, DYNAMIC_TYPE_TMP_BUFFER);
3100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3101:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret != SSL_SUCCESS) {
3102:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 120


3103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3106:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif  /* OPENSSL_EXTRA || HAVE_WEBSERVER || NO_PWDBASED */
3107:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
 3096              		.loc 1 3108 0
 3097 01ba 0025     		mov	r5, #0
 3098              	.LVL372:
3053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* pkcs8 key, convert and adjust length */
 3099              		.loc 1 3053 0
 3100 01bc 1B68     		ldr	r3, [r3]
 3101 01be 9E42     		cmp	r6, r3
 3102 01c0 08D1     		bne	.L341
3055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
 3103              		.loc 1 3055 0
 3104 01c2 3868     		ldr	r0, [r7]
 3105 01c4 B968     		ldr	r1, [r7, #8]
 3106 01c6 FFF7FEFF 		bl	ToTraditional
 3107              	.LVL373:
 3108 01ca A842     		cmp	r0, r5
 3109 01cc 01DB     		blt	.L332
3058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
 3110              		.loc 1 3058 0
 3111 01ce B860     		str	r0, [r7, #8]
3059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 3112              		.loc 1 3059 0
 3113 01d0 00E0     		b	.L341
 3114              	.L332:
 3115 01d2 051C     		mov	r5, r0
 3116              	.LVL374:
 3117              	.L341:
3109:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 3118              		.loc 1 3109 0
 3119 01d4 281C     		mov	r0, r5
 3120 01d6 0FB0     		add	sp, sp, #60
 3121              		@ sp needed
 3122              	.LVL375:
 3123 01d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 3124              	.L356:
 3125 01da C046     		.align	2
 3126              	.L355:
 3127 01dc 00000000 		.word	BEGIN_RSA_PRIV
 3128 01e0 00000000 		.word	BEGIN_CERT
 3129 01e4 00000000 		.word	END_CERT
 3130 01e8 00000000 		.word	BEGIN_X509_CRL
 3131 01ec 00000000 		.word	END_X509_CRL
 3132 01f0 00000000 		.word	BEGIN_DH_PARAM
 3133 01f4 00000000 		.word	END_DH_PARAM
 3134 01f8 00000000 		.word	BEGIN_CERT_REQ
 3135 01fc 00000000 		.word	END_CERT_REQ
 3136 0200 00000000 		.word	BEGIN_DSA_PRIV
 3137 0204 00000000 		.word	END_DSA_PRIV
 3138 0208 00000000 		.word	BEGIN_EC_PRIV
 3139 020c 00000000 		.word	END_EC_PRIV
 3140 0210 00000000 		.word	BEGIN_PRIV_KEY
 3141 0214 00000000 		.word	BEGIN_ENC_PRIV_KEY
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 121


 3142 0218 00000000 		.word	END_ENC_PRIV_KEY
 3143 021c 00000000 		.word	END_PRIV_KEY
 3144 0220 00000000 		.word	BEGIN_PUB_KEY
 3145 0224 00000000 		.word	END_PUB_KEY
 3146 0228 00000000 		.word	END_RSA_PRIV
 3147 022c 8CFEFFFF 		.word	-372
 3148              		.cfi_endproc
 3149              	.LFE66:
 3150              		.size	PemToDer, .-PemToDer
 3151              		.section	.text.wolfSSL_CertPemToDer,"ax",%progbits
 3152              		.align	1
 3153              		.global	wolfSSL_CertPemToDer
 3154              		.code	16
 3155              		.thumb_func
 3156              		.type	wolfSSL_CertPemToDer, %function
 3157              	wolfSSL_CertPemToDer:
 3158              	.LFB50:
1798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
 3159              		.loc 1 1798 0
 3160              		.cfi_startproc
 3161              	.LVL376:
 3162 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3163              		.cfi_def_cfa_offset 20
 3164              		.cfi_offset 4, -20
 3165              		.cfi_offset 5, -16
 3166              		.cfi_offset 6, -12
 3167              		.cfi_offset 7, -8
 3168              		.cfi_offset 14, -4
1799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            ret;
 3169              		.loc 1 1799 0
 3170 0002 0025     		mov	r5, #0
1798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
 3171              		.loc 1 1798 0
 3172 0004 A7B0     		sub	sp, sp, #156
 3173              		.cfi_def_cfa_offset 176
1798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
 3174              		.loc 1 1798 0
 3175 0006 2C9C     		ldr	r4, [sp, #176]
1799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            ret;
 3176              		.loc 1 1799 0
 3177 0008 0495     		str	r5, [sp, #16]
1801:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
 3178              		.loc 1 1801 0
 3179 000a 0595     		str	r5, [sp, #20]
1810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
 3180              		.loc 1 1810 0
 3181 000c A842     		cmp	r0, r5
 3182 000e 2CD0     		beq	.L364
1810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
 3183              		.loc 1 1810 0 is_stmt 0 discriminator 1
 3184 0010 AA42     		cmp	r2, r5
 3185 0012 2AD0     		beq	.L364
1810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
 3186              		.loc 1 1810 0 discriminator 2
 3187 0014 AB42     		cmp	r3, r5
 3188 0016 28DD     		ble	.L364
1815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad cert type");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 122


 3189              		.loc 1 1815 0 is_stmt 1
 3190 0018 261C     		mov	r6, r4
 3191 001a 0435     		add	r5, r5, #4
 3192 001c AE43     		bic	r6, r5
 3193 001e 01D0     		beq	.L359
1815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad cert type");
 3194              		.loc 1 1815 0 is_stmt 0 discriminator 2
 3195 0020 072C     		cmp	r4, #7
 3196 0022 22D1     		bne	.L364
 3197              	.L359:
 3198 0024 1E1C     		mov	r6, r3
1827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->ctx      = NULL;
 3199              		.loc 1 1827 0 is_stmt 1
 3200 0026 0023     		mov	r3, #0
 3201              	.LVL377:
 3202 0028 24AF     		add	r7, sp, #144
 3203 002a 3B70     		strb	r3, [r7]
1828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->consumed = 0;
 3204              		.loc 1 1828 0
 3205 002c 2593     		str	r3, [sp, #148]
1829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3206              		.loc 1 1829 0
 3207 002e 2393     		str	r3, [sp, #140]
1831:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3208              		.loc 1 1831 0
 3209 0030 0093     		str	r3, [sp]
 3210 0032 151C     		mov	r5, r2
 3211 0034 04AB     		add	r3, sp, #16
1827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->ctx      = NULL;
 3212              		.loc 1 1827 0
 3213 0036 06AA     		add	r2, sp, #24
 3214              	.LVL378:
1831:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3215              		.loc 1 1831 0
 3216 0038 0192     		str	r2, [sp, #4]
 3217 003a 0293     		str	r3, [sp, #8]
 3218 003c 221C     		mov	r2, r4
 3219 003e 05AB     		add	r3, sp, #20
 3220 0040 FFF7FEFF 		bl	PemToDer
 3221              	.LVL379:
 3222 0044 041E     		sub	r4, r0, #0
 3223              	.LVL380:
1837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Pem To Der");
 3224              		.loc 1 1837 0
 3225 0046 0BDB     		blt	.L360
1841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buff, der->buffer, der->length);
 3226              		.loc 1 1841 0
 3227 0048 059C     		ldr	r4, [sp, #20]
 3228 004a A268     		ldr	r2, [r4, #8]
 3229 004c B242     		cmp	r2, r6
 3230 004e 05D8     		bhi	.L365
1842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = der->length;
 3231              		.loc 1 1842 0
 3232 0050 2168     		ldr	r1, [r4]
 3233 0052 281C     		mov	r0, r5
 3234              	.LVL381:
 3235 0054 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 123


 3236              	.LVL382:
1843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 3237              		.loc 1 1843 0
 3238 0058 A468     		ldr	r4, [r4, #8]
 3239              	.LVL383:
 3240 005a 01E0     		b	.L360
 3241              	.LVL384:
 3242              	.L365:
1847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 3243              		.loc 1 1847 0
 3244 005c AD24     		mov	r4, #173
 3245 005e 6442     		neg	r4, r4
 3246              	.LVL385:
 3247              	.L360:
1851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
 3248              		.loc 1 1851 0
 3249 0060 05A8     		add	r0, sp, #20
 3250 0062 FFF7FEFF 		bl	FreeDer
 3251              	.LVL386:
1852:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 3252              		.loc 1 1852 0
 3253 0066 201C     		mov	r0, r4
 3254 0068 01E0     		b	.L358
 3255              	.LVL387:
 3256              	.L364:
1812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 3257              		.loc 1 1812 0
 3258 006a AD20     		mov	r0, #173
 3259              	.LVL388:
 3260 006c 4042     		neg	r0, r0
 3261              	.LVL389:
 3262              	.L358:
1853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3263              		.loc 1 1853 0
 3264 006e 27B0     		add	sp, sp, #156
 3265              		@ sp needed
 3266 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 3267              		.cfi_endproc
 3268              	.LFE50:
 3269              		.size	wolfSSL_CertPemToDer, .-wolfSSL_CertPemToDer
 3270              		.section	.text.wolfSSL_KeyPemToDer,"ax",%progbits
 3271              		.align	1
 3272              		.global	wolfSSL_KeyPemToDer
 3273              		.code	16
 3274              		.thumb_func
 3275              		.type	wolfSSL_KeyPemToDer, %function
 3276              	wolfSSL_KeyPemToDer:
 3277              	.LFB51:
1897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
 3278              		.loc 1 1897 0
 3279              		.cfi_startproc
 3280              	.LVL390:
 3281 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3282              		.cfi_def_cfa_offset 20
 3283              		.cfi_offset 4, -20
 3284              		.cfi_offset 5, -16
 3285              		.cfi_offset 6, -12
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 124


 3286              		.cfi_offset 7, -8
 3287              		.cfi_offset 14, -4
1898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            ret;
 3288              		.loc 1 1898 0
 3289 0002 0024     		mov	r4, #0
1897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            eccKey = 0;
 3290              		.loc 1 1897 0
 3291 0004 A7B0     		sub	sp, sp, #156
 3292              		.cfi_def_cfa_offset 176
1898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int            ret;
 3293              		.loc 1 1898 0
 3294 0006 0494     		str	r4, [sp, #16]
1900:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
 3295              		.loc 1 1900 0
 3296 0008 0594     		str	r4, [sp, #20]
1909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
 3297              		.loc 1 1909 0
 3298 000a A042     		cmp	r0, r4
 3299 000c 2BD0     		beq	.L375
1909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
 3300              		.loc 1 1909 0 is_stmt 0 discriminator 1
 3301 000e A242     		cmp	r2, r4
 3302 0010 29D0     		beq	.L375
1909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
 3303              		.loc 1 1909 0 discriminator 2
 3304 0012 A342     		cmp	r3, r4
 3305 0014 27DD     		ble	.L375
 3306 0016 1E1C     		mov	r6, r3
1921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->ctx      = NULL;
 3307              		.loc 1 1921 0 is_stmt 1
 3308 0018 24AB     		add	r3, sp, #144
 3309              	.LVL391:
 3310 001a 1C70     		strb	r4, [r3]
 3311 001c 06AF     		add	r7, sp, #24
1942:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3312              		.loc 1 1942 0
 3313 001e 04AB     		add	r3, sp, #16
 3314 0020 0094     		str	r4, [sp]
 3315 0022 0293     		str	r3, [sp, #8]
 3316 0024 151C     		mov	r5, r2
 3317 0026 0197     		str	r7, [sp, #4]
 3318 0028 0122     		mov	r2, #1
 3319              	.LVL392:
 3320 002a 05AB     		add	r3, sp, #20
1922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->consumed = 0;
 3321              		.loc 1 1922 0
 3322 002c 2594     		str	r4, [sp, #148]
1923:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3323              		.loc 1 1923 0
 3324 002e 2394     		str	r4, [sp, #140]
1942:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3325              		.loc 1 1942 0
 3326 0030 FFF7FEFF 		bl	PemToDer
 3327              	.LVL393:
 3328 0034 041C     		mov	r4, r0
 3329              	.LVL394:
1944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_CTX_free(info->ctx);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 125


 3330              		.loc 1 1944 0
 3331 0036 F86F     		ldr	r0, [r7, #124]
 3332              	.LVL395:
 3333 0038 0028     		cmp	r0, #0
 3334 003a 01D0     		beq	.L371
1945:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3335              		.loc 1 1945 0
 3336 003c FFF7FEFF 		bl	wolfSSL_CTX_free
 3337              	.LVL396:
 3338              	.L371:
1951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Pem To Der");
 3339              		.loc 1 1951 0
 3340 0040 002C     		cmp	r4, #0
 3341 0042 0BDB     		blt	.L372
1955:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buff, der->buffer, der->length);
 3342              		.loc 1 1955 0
 3343 0044 059C     		ldr	r4, [sp, #20]
 3344              	.LVL397:
 3345 0046 A268     		ldr	r2, [r4, #8]
 3346 0048 B242     		cmp	r2, r6
 3347 004a 05D8     		bhi	.L376
1956:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = der->length;
 3348              		.loc 1 1956 0
 3349 004c 2168     		ldr	r1, [r4]
 3350 004e 281C     		mov	r0, r5
 3351 0050 FFF7FEFF 		bl	memcpy
 3352              	.LVL398:
1957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 3353              		.loc 1 1957 0
 3354 0054 A468     		ldr	r4, [r4, #8]
 3355              	.LVL399:
 3356 0056 01E0     		b	.L372
 3357              	.LVL400:
 3358              	.L376:
1961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 3359              		.loc 1 1961 0
 3360 0058 AD24     		mov	r4, #173
 3361 005a 6442     		neg	r4, r4
 3362              	.L372:
 3363              	.LVL401:
1965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
 3364              		.loc 1 1965 0
 3365 005c 05A8     		add	r0, sp, #20
 3366 005e FFF7FEFF 		bl	FreeDer
 3367              	.LVL402:
1966:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 3368              		.loc 1 1966 0
 3369 0062 201C     		mov	r0, r4
 3370 0064 01E0     		b	.L370
 3371              	.LVL403:
 3372              	.L375:
1911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 3373              		.loc 1 1911 0
 3374 0066 AD20     		mov	r0, #173
 3375              	.LVL404:
 3376 0068 4042     		neg	r0, r0
 3377              	.LVL405:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 126


 3378              	.L370:
1967:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3379              		.loc 1 1967 0
 3380 006a 27B0     		add	sp, sp, #156
 3381              		@ sp needed
 3382 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 3383              		.cfi_endproc
 3384              	.LFE51:
 3385              		.size	wolfSSL_KeyPemToDer, .-wolfSSL_KeyPemToDer
 3386              		.section	.text.ProcessBuffer,"ax",%progbits
 3387              		.align	1
 3388              		.code	16
 3389              		.thumb_func
 3390              		.type	ProcessBuffer, %function
 3391              	ProcessBuffer:
 3392              	.LFB67:
3110:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3111:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3112:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* process the buffer buff, length sz, into ctx of format and type
3113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    used tracks bytes consumed, userChain specifies a user cert chain
3114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    to pass during the handshake */
3115:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int ProcessBuffer(WOLFSSL_CTX* ctx, const unsigned char* buff,
3116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                          long sz, int format, int type, WOLFSSL* ssl,
3117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                          long* used, int userChain)
3118:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 3393              		.loc 1 3118 0
 3394              		.cfi_startproc
 3395              	.LVL406:
 3396 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3397              		.cfi_def_cfa_offset 20
 3398              		.cfi_offset 4, -20
 3399              		.cfi_offset 5, -16
 3400              		.cfi_offset 6, -12
 3401              		.cfi_offset 7, -8
 3402              		.cfi_offset 14, -4
 3403 0002 CE4C     		ldr	r4, .L486
 3404 0004 A544     		add	sp, sp, r4
 3405              		.cfi_def_cfa_offset 1240
 3406              		.loc 1 3118 0
 3407 0006 FFAC     		add	r4, sp, #1020
 3408 0008 DC34     		add	r4, r4, #220
 3409 000a 2668     		ldr	r6, [r4]
3119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*    der = NULL;        /* holds DER or RAW (for NTRU) */
 3410              		.loc 1 3119 0
 3411 000c 0024     		mov	r4, #0
3120:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int           ret;
3121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int           eccKey = 0;
3122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int           rsaKey = 0;
3123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void*         heap = ctx ? ctx->heap : NULL;
 3412              		.loc 1 3123 0
 3413 000e 0590     		str	r0, [sp, #20]
3119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer*    der = NULL;        /* holds DER or RAW (for NTRU) */
 3414              		.loc 1 3119 0
 3415 0010 0D94     		str	r4, [sp, #52]
3121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int           rsaKey = 0;
 3416              		.loc 1 3121 0
 3417 0012 0E94     		str	r4, [sp, #56]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 127


 3418              	.LVL407:
 3419              		.loc 1 3123 0
 3420 0014 A042     		cmp	r0, r4
 3421 0016 01D0     		beq	.L381
 3422              		.loc 1 3123 0 is_stmt 0 discriminator 1
 3423 0018 046A     		ldr	r4, [r0, #32]
 3424 001a 0594     		str	r4, [sp, #20]
 3425              	.L381:
 3426              	.LVL408:
3124:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3125:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo* info = NULL;
3126:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
3127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo  info[1];
3128:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3129:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3130:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)rsaKey;
3131:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (used)
 3427              		.loc 1 3132 0 is_stmt 1 discriminator 4
 3428 001c FFAC     		add	r4, sp, #1020
 3429 001e E434     		add	r4, r4, #228
 3430 0020 2468     		ldr	r4, [r4]
 3431 0022 002C     		cmp	r4, #0
 3432 0024 03D0     		beq	.L382
3133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *used = sz;     /* used bytes default to sz, PEM chain may shorten*/
 3433              		.loc 1 3133 0
 3434 0026 FFAC     		add	r4, sp, #1020
 3435 0028 E434     		add	r4, r4, #228
 3436 002a 2468     		ldr	r4, [r4]
 3437 002c 2260     		str	r2, [r4]
 3438              	.L382:
3134:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (format != SSL_FILETYPE_ASN1 && format != SSL_FILETYPE_PEM
3136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                     && format != SSL_FILETYPE_RAW)
 3439              		.loc 1 3136 0
 3440 002e 5C1E     		sub	r4, r3, #1
3135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                     && format != SSL_FILETYPE_RAW)
 3441              		.loc 1 3135 0
 3442 0030 022C     		cmp	r4, #2
 3443 0032 00D9     		bls	.LCB3439
 3444 0034 7DE1     		b	.L428	@long jump
 3445              	.LCB3439:
3137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILETYPE;
3138:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL && ssl == NULL)
 3446              		.loc 1 3139 0
 3447 0036 0028     		cmp	r0, #0
 3448 0038 05D1     		bne	.L384
 3449              		.loc 1 3139 0 is_stmt 0 discriminator 1
 3450 003a FFAC     		add	r4, sp, #1020
 3451 003c E034     		add	r4, r4, #224
 3452 003e 2468     		ldr	r4, [r4]
 3453 0040 002C     		cmp	r4, #0
 3454 0042 00D1     		bne	.LCB3446
 3455 0044 77E1     		b	.L429	@long jump
 3456              	.LCB3446:
 3457              	.L384:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 128


 3458 0046 0692     		str	r2, [sp, #24]
3140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3141:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3142:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info = (EncryptedInfo*)XMALLOC(sizeof(EncryptedInfo), heap,
3144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    DYNAMIC_TYPE_TMP_BUFFER);
3145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (info == NULL)
3146:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
3147:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->set      = 0;
 3459              		.loc 1 3149 0 is_stmt 1
 3460 0048 0022     		mov	r2, #0
 3461              	.LVL409:
 3462 004a 0A91     		str	r1, [sp, #40]
 3463 004c 2EA9     		add	r1, sp, #184
 3464              	.LVL410:
 3465 004e 051C     		mov	r5, r0
 3466 0050 10AF     		add	r7, sp, #64
 3467 0052 0A70     		strb	r2, [r1]
3150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->ctx      = ctx;
 3468              		.loc 1 3150 0
 3469 0054 2F90     		str	r0, [sp, #188]
3151:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     info->consumed = 0;
 3470              		.loc 1 3151 0
 3471 0056 2D92     		str	r2, [sp, #180]
3152:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (format == SSL_FILETYPE_PEM) {
 3472              		.loc 1 3153 0
 3473 0058 012B     		cmp	r3, #1
 3474 005a 00D0     		beq	.LCB3461
 3475 005c EDE0     		b	.L385	@long jump
 3476              	.LCB3461:
3154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = PemToDer(buff, sz, type, &der, heap, info, &eccKey);
 3477              		.loc 1 3154 0
 3478 005e 059B     		ldr	r3, [sp, #20]
 3479              	.LVL411:
 3480 0060 0197     		str	r7, [sp, #4]
 3481 0062 0093     		str	r3, [sp]
 3482 0064 0EAB     		add	r3, sp, #56
 3483 0066 0293     		str	r3, [sp, #8]
 3484 0068 0A98     		ldr	r0, [sp, #40]
 3485              	.LVL412:
 3486 006a 0DAB     		add	r3, sp, #52
 3487 006c 0699     		ldr	r1, [sp, #24]
 3488 006e 321C     		mov	r2, r6
 3489 0070 FFF7FEFF 		bl	PemToDer
 3490              	.LVL413:
3155:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (used)
 3491              		.loc 1 3156 0
 3492 0074 FFAB     		add	r3, sp, #1020
 3493 0076 E433     		add	r3, r3, #228
 3494 0078 1B68     		ldr	r3, [r3]
3154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = PemToDer(buff, sz, type, &der, heap, info, &eccKey);
 3495              		.loc 1 3154 0
 3496 007a 041C     		mov	r4, r0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 129


 3497              	.LVL414:
 3498              		.loc 1 3156 0
 3499 007c 002B     		cmp	r3, #0
 3500 007e 06D0     		beq	.L386
3157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             *used = info->consumed;
 3501              		.loc 1 3157 0
 3502 0080 7B6F     		ldr	r3, [r7, #116]
 3503 0082 0493     		str	r3, [sp, #16]
 3504 0084 FFAB     		add	r3, sp, #1020
 3505 0086 E433     		add	r3, r3, #228
 3506 0088 1B68     		ldr	r3, [r3]
 3507 008a 049A     		ldr	r2, [sp, #16]
 3508 008c 1A60     		str	r2, [r3]
 3509              	.L386:
3158:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret < 0) {
 3510              		.loc 1 3159 0
 3511 008e 002C     		cmp	r4, #0
 3512 0090 00DA     		bge	.LCB3495
 3513 0092 CEE0     		b	.L482	@long jump
 3514              	.LCB3495:
3160:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&der);
3164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
3165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3166:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* we may have a user cert chain, try to consume */
3168:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (userChain && type == CERT_TYPE && info->consumed < sz) {
 3515              		.loc 1 3168 0
 3516 0094 FFAB     		add	r3, sp, #1020
 3517 0096 E833     		add	r3, r3, #232
 3518 0098 1B68     		ldr	r3, [r3]
 3519 009a 002B     		cmp	r3, #0
 3520 009c 00D1     		bne	.LCB3501
 3521 009e DBE0     		b	.L388	@long jump
 3522              	.LCB3501:
 3523              		.loc 1 3168 0 is_stmt 0 discriminator 1
 3524 00a0 002E     		cmp	r6, #0
 3525 00a2 00D0     		beq	.LCB3503
 3526 00a4 15E1     		b	.L389	@long jump
 3527              	.LCB3503:
 3528              		.loc 1 3168 0 discriminator 2
 3529 00a6 2D9C     		ldr	r4, [sp, #180]
 3530 00a8 069B     		ldr	r3, [sp, #24]
 3531 00aa 9C42     		cmp	r4, r3
 3532 00ac 00DB     		blt	.LCB3508
 3533 00ae E8E0     		b	.L423	@long jump
 3534              	.LCB3508:
 3535              	.LVL415:
 3536              	.LBB77:
3169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3170:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             byte   staticBuffer[1];                 /* force heap usage */
3171:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
3172:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             byte   staticBuffer[FILE_BUFFER_SIZE];  /* tmp chain buffer */
3173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 130


3174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             byte*  chainBuffer = staticBuffer;
3175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int    dynamicBuffer = 0;
3176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word32 bufferSz = sizeof(staticBuffer);
3177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             long   consumed = info->consumed;
3178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word32 idx = 0;
3179:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int    gotOne = 0;
3180:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (sz - consumed) > (int)bufferSz) {
 3537              		.loc 1 3181 0 is_stmt 1
 3538 00b0 1A1B     		sub	r2, r3, r4
 3539 00b2 8023     		mov	r3, #128
 3540 00b4 DB00     		lsl	r3, r3, #3
 3541 00b6 9A42     		cmp	r2, r3
 3542 00b8 09DD     		ble	.L430
3182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Growing Tmp Chain Buffer");
3183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 bufferSz = (word32)(sz - consumed);
3184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            /* will shrink to actual size */
3185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 chainBuffer = (byte*)XMALLOC(bufferSz, heap, DYNAMIC_TYPE_FILE);
 3543              		.loc 1 3185 0
 3544 00ba 101C     		mov	r0, r2
 3545              	.LVL416:
3183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            /* will shrink to actual size */
 3546              		.loc 1 3183 0
 3547 00bc 0992     		str	r2, [sp, #36]
 3548              	.LVL417:
 3549              		.loc 1 3185 0
 3550 00be FFF7FEFF 		bl	wolfSSL_Malloc
 3551              	.LVL418:
 3552 00c2 0490     		str	r0, [sp, #16]
 3553              	.LVL419:
3186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (chainBuffer == NULL) {
 3554              		.loc 1 3186 0
 3555 00c4 0028     		cmp	r0, #0
 3556 00c6 09D0     		beq	.L392
3187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #ifdef WOLFSSL_SMALL_STACK
3188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #endif
3190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     FreeDer(&der);
3191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return MEMORY_E;
3192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
3193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 dynamicBuffer = 1;
 3557              		.loc 1 3193 0
 3558 00c8 0123     		mov	r3, #1
 3559 00ca 0893     		str	r3, [sp, #32]
 3560 00cc 03E0     		b	.L391
 3561              	.LVL420:
 3562              	.L430:
3176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             long   consumed = info->consumed;
 3563              		.loc 1 3176 0
 3564 00ce 0993     		str	r3, [sp, #36]
3174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int    dynamicBuffer = 0;
 3565              		.loc 1 3174 0
 3566 00d0 30AB     		add	r3, sp, #192
 3567              	.LVL421:
3175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word32 bufferSz = sizeof(staticBuffer);
 3568              		.loc 1 3175 0
 3569 00d2 0896     		str	r6, [sp, #32]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 131


3174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int    dynamicBuffer = 0;
 3570              		.loc 1 3174 0
 3571 00d4 0493     		str	r3, [sp, #16]
 3572              	.LVL422:
 3573              	.L391:
 3574 00d6 0027     		mov	r7, #0
 3575 00d8 3E1C     		mov	r6, r7
 3576 00da 38E0     		b	.L393
 3577              	.LVL423:
 3578              	.L392:
3190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return MEMORY_E;
 3579              		.loc 1 3190 0
 3580 00dc 0DA8     		add	r0, sp, #52
 3581              	.LVL424:
 3582 00de FFF7FEFF 		bl	FreeDer
 3583              	.LVL425:
3191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
 3584              		.loc 1 3191 0
 3585 00e2 7D24     		mov	r4, #125
 3586              	.LVL426:
 3587 00e4 28E1     		b	.L483
 3588              	.LVL427:
 3589              	.L485:
 3590              	.LBB78:
3194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3195:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Processing Cert Chain");
3197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             while (consumed < sz) {
3198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 DerBuffer* part = NULL;
3199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 info->consumed = 0;
3200:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = PemToDer(buff + consumed, sz - consumed, type, &part,
3202:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                heap, info, &eccKey);
3203:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret == 0) {
3204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     gotOne = 1;
3205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (idx + part->length) > bufferSz) {
 3591              		.loc 1 3205 0
 3592 00e6 0F9B     		ldr	r3, [sp, #60]
 3593 00e8 099A     		ldr	r2, [sp, #36]
 3594 00ea 9868     		ldr	r0, [r3, #8]
 3595              	.LVL428:
 3596 00ec 3318     		add	r3, r6, r0
 3597 00ee 9342     		cmp	r3, r2
 3598 00f0 41D8     		bhi	.L431
3206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_MSG("   Cert Chain bigger than buffer");
3207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         ret = BUFFER_E;
3208:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
3209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     else {
3210:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         c32to24(part->length, &chainBuffer[idx]);
 3599              		.loc 1 3210 0
 3600 00f2 049B     		ldr	r3, [sp, #16]
3204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (idx + part->length) > bufferSz) {
 3601              		.loc 1 3204 0
 3602 00f4 0127     		mov	r7, #1
 3603              		.loc 1 3210 0
 3604 00f6 9919     		add	r1, r3, r6
 3605 00f8 FFF7FEFF 		bl	c32to24
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 132


 3606              	.LVL429:
3211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         idx += CERT_HEADER_SZ;
3212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         XMEMCPY(&chainBuffer[idx], part->buffer, part->length);
 3607              		.loc 1 3212 0
 3608 00fc 0F9B     		ldr	r3, [sp, #60]
 3609 00fe 049A     		ldr	r2, [sp, #16]
3211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         idx += CERT_HEADER_SZ;
 3610              		.loc 1 3211 0
 3611 0100 0336     		add	r6, r6, #3
 3612              	.LVL430:
 3613              		.loc 1 3212 0
 3614 0102 9019     		add	r0, r2, r6
 3615 0104 1968     		ldr	r1, [r3]
 3616 0106 9A68     		ldr	r2, [r3, #8]
 3617 0108 FFF7FEFF 		bl	memcpy
 3618              	.LVL431:
3213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         idx += part->length;
 3619              		.loc 1 3213 0
 3620 010c 0F9B     		ldr	r3, [sp, #60]
3214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         consumed  += info->consumed;
3215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         if (used)
 3621              		.loc 1 3215 0
 3622 010e FFAA     		add	r2, sp, #1020
3213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         idx += part->length;
 3623              		.loc 1 3213 0
 3624 0110 9B68     		ldr	r3, [r3, #8]
 3625              		.loc 1 3215 0
 3626 0112 E432     		add	r2, r2, #228
3213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         idx += part->length;
 3627              		.loc 1 3213 0
 3628 0114 F618     		add	r6, r6, r3
 3629              	.LVL432:
 3630              		.loc 1 3215 0
 3631 0116 1268     		ldr	r2, [r2]
3214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         consumed  += info->consumed;
 3632              		.loc 1 3214 0
 3633 0118 2D9B     		ldr	r3, [sp, #180]
 3634 011a E418     		add	r4, r4, r3
 3635              	.LVL433:
 3636              		.loc 1 3215 0
 3637 011c 002A     		cmp	r2, #0
 3638 011e 09D0     		beq	.L395
3216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             *used += info->consumed;
 3639              		.loc 1 3216 0
 3640 0120 FFAA     		add	r2, sp, #1020
 3641 0122 E432     		add	r2, r2, #228
 3642 0124 1268     		ldr	r2, [r2]
 3643 0126 1268     		ldr	r2, [r2]
 3644 0128 D318     		add	r3, r2, r3
 3645 012a 0B92     		str	r2, [sp, #44]
 3646 012c FFAA     		add	r2, sp, #1020
 3647 012e E432     		add	r2, r2, #228
 3648 0130 1268     		ldr	r2, [r2]
 3649 0132 1360     		str	r3, [r2]
 3650              	.LVL434:
 3651              	.L395:
3217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 133


3218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
3219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeDer(&part);
 3652              		.loc 1 3219 0
 3653 0134 0FA8     		add	r0, sp, #60
 3654 0136 FFF7FEFF 		bl	FreeDer
 3655              	.LVL435:
3220:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret == SSL_NO_PEM_HEADER && gotOne) {
 3656              		.loc 1 3221 0
 3657 013a 814B     		ldr	r3, .L486+4
 3658 013c 079A     		ldr	r2, [sp, #28]
 3659 013e 9A42     		cmp	r2, r3
 3660 0140 1ED0     		beq	.L484
3222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("We got one good PEM so stuff at end ok");
3223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     break;
3224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
3225:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret < 0) {
 3661              		.loc 1 3226 0
 3662 0142 079B     		ldr	r3, [sp, #28]
 3663 0144 002B     		cmp	r3, #0
 3664 0146 1DDB     		blt	.L398
 3665              	.LBE78:
3197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 DerBuffer* part = NULL;
 3666              		.loc 1 3197 0
 3667 0148 069B     		ldr	r3, [sp, #24]
 3668 014a 9C42     		cmp	r4, r3
 3669 014c 25DA     		bge	.L401
 3670              	.LVL436:
 3671              	.L393:
 3672              	.LBB80:
3198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 info->consumed = 0;
 3673              		.loc 1 3198 0
 3674 014e 0022     		mov	r2, #0
3201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                heap, info, &eccKey);
 3675              		.loc 1 3201 0
 3676 0150 0A9B     		ldr	r3, [sp, #40]
3198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 info->consumed = 0;
 3677              		.loc 1 3198 0
 3678 0152 0F92     		str	r2, [sp, #60]
3201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                heap, info, &eccKey);
 3679              		.loc 1 3201 0
 3680 0154 1819     		add	r0, r3, r4
 3681 0156 069B     		ldr	r3, [sp, #24]
3199:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 3682              		.loc 1 3199 0
 3683 0158 2D92     		str	r2, [sp, #180]
3201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                heap, info, &eccKey);
 3684              		.loc 1 3201 0
 3685 015a 191B     		sub	r1, r3, r4
 3686 015c 059B     		ldr	r3, [sp, #20]
 3687 015e 0093     		str	r3, [sp]
 3688 0160 10AB     		add	r3, sp, #64
 3689 0162 0193     		str	r3, [sp, #4]
 3690 0164 0EAB     		add	r3, sp, #56
 3691 0166 0293     		str	r3, [sp, #8]
 3692 0168 0FAB     		add	r3, sp, #60
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 134


 3693 016a FFF7FEFF 		bl	PemToDer
 3694              	.LVL437:
 3695 016e 0790     		str	r0, [sp, #28]
 3696              	.LVL438:
3203:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     gotOne = 1;
 3697              		.loc 1 3203 0
 3698 0170 0028     		cmp	r0, #0
 3699 0172 DFD1     		bne	.L395
 3700 0174 B7E7     		b	.L485
 3701              	.LVL439:
 3702              	.L431:
3207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
 3703              		.loc 1 3207 0
 3704 0176 8423     		mov	r3, #132
 3705 0178 5B42     		neg	r3, r3
3204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (idx + part->length) > bufferSz) {
 3706              		.loc 1 3204 0
 3707 017a 0127     		mov	r7, #1
 3708              	.LVL440:
3207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
 3709              		.loc 1 3207 0
 3710 017c 0793     		str	r3, [sp, #28]
 3711 017e D9E7     		b	.L395
 3712              	.LVL441:
 3713              	.L484:
3221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("We got one good PEM so stuff at end ok");
 3714              		.loc 1 3221 0 discriminator 1
 3715 0180 002F     		cmp	r7, #0
 3716 0182 0AD1     		bne	.L401
 3717              	.L398:
3227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("   Error in Cert in Chain");
3228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (dynamicBuffer)
 3718              		.loc 1 3228 0
 3719 0184 089B     		ldr	r3, [sp, #32]
 3720 0186 002B     		cmp	r3, #0
 3721 0188 02D0     		beq	.L400
 3722              	.LVL442:
 3723              	.LBB79:
3229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         XFREE(chainBuffer, heap, DYNAMIC_TYPE_FILE);
 3724              		.loc 1 3229 0
 3725 018a 0498     		ldr	r0, [sp, #16]
 3726 018c FFF7FEFF 		bl	wolfSSL_Free
 3727              	.LVL443:
 3728              	.L400:
 3729              	.LBE79:
3230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #ifdef WOLFSSL_SMALL_STACK
3231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #endif
3233:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     FreeDer(&der);
 3730              		.loc 1 3233 0
 3731 0190 0DA8     		add	r0, sp, #52
 3732 0192 FFF7FEFF 		bl	FreeDer
 3733              	.LVL444:
3234:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
 3734              		.loc 1 3234 0
 3735 0196 079C     		ldr	r4, [sp, #28]
 3736              	.LVL445:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 135


 3737 0198 0DE1     		b	.L480
 3738              	.LVL446:
 3739              	.L401:
 3740              	.LBE80:
3235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
3236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("   Consumed another Cert in Chain");
3237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3238:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Finished Processing Cert Chain");
3239:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3240:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* only retain actual size used */
3241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = 0;
3242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (idx > 0) {
 3741              		.loc 1 3242 0
 3742 019a 002E     		cmp	r6, #0
 3743 019c 40D0     		beq	.L402
3243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl) {
 3744              		.loc 1 3243 0
 3745 019e FFAB     		add	r3, sp, #1020
 3746 01a0 E033     		add	r3, r3, #224
 3747 01a2 1B68     		ldr	r3, [r3]
 3748 01a4 002B     		cmp	r3, #0
 3749 01a6 23D0     		beq	.L403
3244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (ssl->buffers.weOwnCertChain) {
 3750              		.loc 1 3244 0
 3751 01a8 FFAB     		add	r3, sp, #1020
 3752 01aa E033     		add	r3, r3, #224
 3753 01ac 1B68     		ldr	r3, [r3]
 3754 01ae FFAA     		add	r2, sp, #1020
 3755 01b0 8D33     		add	r3, r3, #141
 3756 01b2 E032     		add	r2, r2, #224
 3757 01b4 1768     		ldr	r7, [r2]
 3758              	.LVL447:
 3759 01b6 1B78     		ldrb	r3, [r3]
 3760 01b8 9837     		add	r7, r7, #152
 3761 01ba 002B     		cmp	r3, #0
 3762 01bc 02D0     		beq	.L404
3245:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         FreeDer(&ssl->buffers.certChain);
 3763              		.loc 1 3245 0
 3764 01be 381C     		mov	r0, r7
 3765 01c0 FFF7FEFF 		bl	FreeDer
 3766              	.LVL448:
 3767              	.L404:
3246:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
3247:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = AllocDer(&ssl->buffers.certChain, idx, type, heap);
 3768              		.loc 1 3247 0
 3769 01c4 381C     		mov	r0, r7
 3770 01c6 311C     		mov	r1, r6
 3771 01c8 0022     		mov	r2, #0
 3772 01ca 059B     		ldr	r3, [sp, #20]
 3773 01cc FFF7FEFF 		bl	AllocDer
 3774              	.LVL449:
 3775 01d0 041E     		sub	r4, r0, #0
 3776              	.LVL450:
3248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (ret == 0) {
 3777              		.loc 1 3248 0
 3778 01d2 00D0     		beq	.LCB3795
 3779 01d4 B6E0     		b	.L405	@long jump
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 136


 3780              	.LCB3795:
3249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         XMEMCPY(ssl->buffers.certChain->buffer, chainBuffer, idx);
 3781              		.loc 1 3249 0
 3782 01d6 3B68     		ldr	r3, [r7]
 3783 01d8 321C     		mov	r2, r6
 3784 01da 1868     		ldr	r0, [r3]
 3785              	.LVL451:
 3786 01dc 0499     		ldr	r1, [sp, #16]
 3787 01de FFF7FEFF 		bl	memcpy
 3788              	.LVL452:
3250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         ssl->buffers.weOwnCertChain = 1;
 3789              		.loc 1 3250 0
 3790 01e2 0122     		mov	r2, #1
 3791 01e4 FFAB     		add	r3, sp, #1020
 3792 01e6 E033     		add	r3, r3, #224
 3793 01e8 1B68     		ldr	r3, [r3]
 3794 01ea 8D33     		add	r3, r3, #141
 3795 01ec 1A70     		strb	r2, [r3]
 3796 01ee 17E0     		b	.L402
 3797              	.LVL453:
 3798              	.L403:
3251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
3252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 } else if (ctx) {
 3799              		.loc 1 3252 0
 3800 01f0 002D     		cmp	r5, #0
 3801 01f2 15D0     		beq	.L402
3253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     FreeDer(&ctx->certChain);
 3802              		.loc 1 3253 0
 3803 01f4 2C1C     		mov	r4, r5
 3804              	.LVL454:
 3805 01f6 1034     		add	r4, r4, #16
 3806 01f8 201C     		mov	r0, r4
 3807 01fa FFF7FEFF 		bl	FreeDer
 3808              	.LVL455:
3254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = AllocDer(&ctx->certChain, idx, type, heap);
 3809              		.loc 1 3254 0
 3810 01fe FFAB     		add	r3, sp, #1020
 3811 0200 E033     		add	r3, r3, #224
 3812 0202 201C     		mov	r0, r4
 3813 0204 1A68     		ldr	r2, [r3]
 3814 0206 311C     		mov	r1, r6
 3815 0208 059B     		ldr	r3, [sp, #20]
 3816 020a FFF7FEFF 		bl	AllocDer
 3817              	.LVL456:
 3818 020e 041E     		sub	r4, r0, #0
 3819              	.LVL457:
3255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (ret == 0) {
 3820              		.loc 1 3255 0
 3821 0210 00D0     		beq	.LCB3836
 3822 0212 97E0     		b	.L405	@long jump
 3823              	.LCB3836:
3256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         XMEMCPY(ctx->certChain->buffer, chainBuffer, idx);
 3824              		.loc 1 3256 0
 3825 0214 2B69     		ldr	r3, [r5, #16]
 3826 0216 0499     		ldr	r1, [sp, #16]
 3827 0218 1868     		ldr	r0, [r3]
 3828              	.LVL458:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 137


 3829 021a 321C     		mov	r2, r6
 3830 021c FFF7FEFF 		bl	memcpy
 3831              	.LVL459:
 3832              	.L402:
3257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
3258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
3259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3260:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (dynamicBuffer)
 3833              		.loc 1 3261 0
 3834 0220 089B     		ldr	r3, [sp, #32]
 3835 0222 002B     		cmp	r3, #0
 3836 0224 2DD0     		beq	.L423
 3837 0226 0024     		mov	r4, #0
 3838              	.LVL460:
 3839              	.L422:
 3840              	.LBB81:
3262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(chainBuffer, heap, DYNAMIC_TYPE_FILE);
 3841              		.loc 1 3262 0
 3842 0228 0498     		ldr	r0, [sp, #16]
 3843 022a FFF7FEFF 		bl	wolfSSL_Free
 3844              	.LVL461:
 3845              	.L421:
 3846              	.LBE81:
3263:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret < 0) {
 3847              		.loc 1 3264 0
 3848 022e 002C     		cmp	r4, #0
 3849 0230 27DA     		bge	.L423
 3850              	.LVL462:
 3851              	.L482:
3265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifdef WOLFSSL_SMALL_STACK
3266:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3267:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
3268:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeDer(&der);
 3852              		.loc 1 3268 0
 3853 0232 0DA8     		add	r0, sp, #52
 3854 0234 FFF7FEFF 		bl	FreeDer
 3855              	.LVL463:
3269:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return ret;
 3856              		.loc 1 3269 0
 3857 0238 BDE0     		b	.L480
 3858              	.LVL464:
 3859              	.L385:
 3860              	.LBE77:
3270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {  /* ASN1 (DER) or RAW (NTRU) */
3274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = AllocDer(&der, (word32)sz, type, heap);
 3861              		.loc 1 3274 0
 3862 023a 0DA8     		add	r0, sp, #52
 3863              	.LVL465:
 3864 023c 0699     		ldr	r1, [sp, #24]
 3865 023e 321C     		mov	r2, r6
 3866 0240 059B     		ldr	r3, [sp, #20]
 3867              	.LVL466:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 138


 3868 0242 FFF7FEFF 		bl	AllocDer
 3869              	.LVL467:
 3870 0246 041E     		sub	r4, r0, #0
3275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret < 0) {
 3871              		.loc 1 3275 0
 3872 0248 00DA     		bge	.LCB3901
 3873 024a B4E0     		b	.L480	@long jump
 3874              	.LCB3901:
3276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3279:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
3280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3281:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(der->buffer, buff, sz);
 3875              		.loc 1 3282 0
 3876 024c 0D9B     		ldr	r3, [sp, #52]
 3877 024e 0A99     		ldr	r1, [sp, #40]
 3878 0250 1868     		ldr	r0, [r3]
 3879              	.LVL468:
 3880 0252 069A     		ldr	r2, [sp, #24]
 3881 0254 FFF7FEFF 		bl	memcpy
 3882              	.LVL469:
 3883              	.L388:
3283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3284:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3285:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)
3286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* for SSL_FILETYPE_PEM, PemToDer manage the decryption if required */
3287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (info->set && (format != SSL_FILETYPE_PEM)) {
3288:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* decrypt */
3289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int   passwordSz;
3290:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char* password = NULL;
3292:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
3293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char  password[80];
3294:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3295:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         password = (char*)XMALLOC(80, heap, DYNAMIC_TYPE_TMP_BUFFER);
3298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (password == NULL)
3299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = MEMORY_E;
3300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
3301:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!ctx || !ctx->passwd_cb) {
3303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = NO_PASSWORD;
3304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3305:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
3306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             passwordSz = ctx->passwd_cb(password, sizeof(password),
3307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                         0, ctx->userdata);
3308:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* decrypt the key */
3310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfssl_decrypt_buffer_key(der, (byte*)password,
3311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                              passwordSz, info);
3312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3313:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(password, heap, DYNAMIC_TYPE_TMP_BUFFER);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 139


3316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3317:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != SSL_SUCCESS) {
3319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&der);
3323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
3324:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3326:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA || HAVE_WEBSERVER */
3327:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3328:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(info, heap, DYNAMIC_TYPE_TMP_BUFFER);
3330:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3331:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* Handle DER owner */
3333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (type == CA_TYPE) {
 3884              		.loc 1 3333 0
 3885 0258 042E     		cmp	r6, #4
 3886 025a 10D1     		bne	.L407
 3887              	.L426:
3334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL) {
 3888              		.loc 1 3334 0
 3889 025c 002D     		cmp	r5, #0
 3890 025e 03D1     		bne	.L408
3335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Need context for CA load");
3336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&der);
 3891              		.loc 1 3336 0
 3892 0260 0DA8     		add	r0, sp, #52
 3893 0262 FFF7FEFF 		bl	FreeDer
 3894              	.LVL470:
 3895 0266 66E0     		b	.L429
 3896              	.L408:
3337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
3338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* verify CA unless user set to no verify */
3340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return AddCA(ctx->cm, &der, WOLFSSL_USER_CA, !ctx->verifyNone);
 3897              		.loc 1 3340 0
 3898 0268 AB1D     		add	r3, r5, #6
 3899 026a DB7F     		ldrb	r3, [r3, #31]
 3900 026c A869     		ldr	r0, [r5, #24]
 3901 026e 5A42     		neg	r2, r3
 3902 0270 5341     		adc	r3, r3, r2
 3903 0272 0DA9     		add	r1, sp, #52
 3904 0274 0122     		mov	r2, #1
 3905 0276 FFF7FEFF 		bl	AddCA
 3906              	.LVL471:
 3907 027a 041C     		mov	r4, r0
 3908              	.LVL472:
 3909 027c 9BE0     		b	.L480
 3910              	.LVL473:
 3911              	.L407:
3341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3342:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
3343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (type == TRUSTED_PEER_TYPE) {
3344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 140


3345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Need context for trusted peer cert load");
3346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&der);
3347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
3348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* add trusted peer cert */
3350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return AddTrustedPeer(ctx->cm, &der, !ctx->verifyNone);
3351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3352:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
3353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (type == CERT_TYPE) {
 3912              		.loc 1 3353 0
 3913 027e 002E     		cmp	r6, #0
 3914 0280 29D1     		bne	.L409
 3915              	.LVL474:
 3916              	.L423:
3354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl) {
 3917              		.loc 1 3354 0
 3918 0282 FFAB     		add	r3, sp, #1020
 3919 0284 E033     		add	r3, r3, #224
 3920 0286 1B68     		ldr	r3, [r3]
 3921 0288 002B     		cmp	r3, #0
 3922 028a 15D0     		beq	.L410
3355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              /* Make sure previous is free'd */
3356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->buffers.weOwnCert) {
 3923              		.loc 1 3356 0
 3924 028c FFAB     		add	r3, sp, #1020
 3925 028e E033     		add	r3, r3, #224
 3926 0290 1C68     		ldr	r4, [r3]
 3927 0292 FFAA     		add	r2, sp, #1020
 3928 0294 8C34     		add	r4, r4, #140
 3929 0296 E032     		add	r2, r2, #224
 3930 0298 1668     		ldr	r6, [r2]
 3931 029a 2378     		ldrb	r3, [r4]
 3932 029c 9036     		add	r6, r6, #144
 3933 029e 002B     		cmp	r3, #0
 3934 02a0 02D0     		beq	.L411
3357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeDer(&ssl->buffers.certificate);
 3935              		.loc 1 3357 0
 3936 02a2 301C     		mov	r0, r6
 3937 02a4 FFF7FEFF 		bl	FreeDer
 3938              	.LVL475:
 3939              	.L411:
3358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(&ssl->buffers.certificate, &der, sizeof(der));
 3940              		.loc 1 3359 0
 3941 02a8 301C     		mov	r0, r6
 3942 02aa 0DA9     		add	r1, sp, #52
 3943 02ac 0422     		mov	r2, #4
 3944 02ae FFF7FEFF 		bl	memcpy
 3945              	.LVL476:
3360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.weOwnCert = 1;
 3946              		.loc 1 3360 0
 3947 02b2 0123     		mov	r3, #1
 3948 02b4 2370     		strb	r3, [r4]
 3949 02b6 4AE0     		b	.L412
 3950              	.L410:
3361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 141


 3951              		.loc 1 3362 0
 3952 02b8 002D     		cmp	r5, #0
 3953 02ba 48D0     		beq	.L412
3363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&ctx->certificate); /* Make sure previous is free'd */
 3954              		.loc 1 3363 0
 3955 02bc 2C1C     		mov	r4, r5
 3956 02be 0C34     		add	r4, r4, #12
 3957 02c0 201C     		mov	r0, r4
 3958 02c2 FFF7FEFF 		bl	FreeDer
 3959              	.LVL477:
3364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(&ctx->certificate, &der, sizeof(der));
 3960              		.loc 1 3364 0
 3961 02c6 201C     		mov	r0, r4
 3962 02c8 0DA9     		add	r1, sp, #52
 3963 02ca 0422     		mov	r2, #4
 3964 02cc FFF7FEFF 		bl	memcpy
 3965              	.LVL478:
 3966 02d0 3DE0     		b	.L412
 3967              	.LVL479:
 3968              	.L389:
3333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL) {
 3969              		.loc 1 3333 0
 3970 02d2 042E     		cmp	r6, #4
 3971 02d4 C2D0     		beq	.L426
 3972              	.LVL480:
 3973              	.L409:
3365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (type == PRIVATEKEY_TYPE) {
 3974              		.loc 1 3367 0
 3975 02d6 012E     		cmp	r6, #1
 3976 02d8 26D1     		bne	.L413
3368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl) {
 3977              		.loc 1 3368 0
 3978 02da FFAB     		add	r3, sp, #1020
 3979 02dc E033     		add	r3, r3, #224
 3980 02de 1B68     		ldr	r3, [r3]
 3981 02e0 002B     		cmp	r3, #0
 3982 02e2 15D0     		beq	.L414
3369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              /* Make sure previous is free'd */
3370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->buffers.weOwnKey) {
 3983              		.loc 1 3370 0
 3984 02e4 FFAB     		add	r3, sp, #1020
 3985 02e6 E033     		add	r3, r3, #224
 3986 02e8 1D68     		ldr	r5, [r3]
 3987              	.LVL481:
 3988 02ea FFAA     		add	r2, sp, #1020
 3989 02ec 8E35     		add	r5, r5, #142
 3990 02ee E032     		add	r2, r2, #224
 3991 02f0 1468     		ldr	r4, [r2]
 3992              	.LVL482:
 3993 02f2 2B78     		ldrb	r3, [r5]
 3994 02f4 9434     		add	r4, r4, #148
 3995 02f6 002B     		cmp	r3, #0
 3996 02f8 02D0     		beq	.L415
3371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeDer(&ssl->buffers.key);
 3997              		.loc 1 3371 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 142


 3998 02fa 201C     		mov	r0, r4
 3999 02fc FFF7FEFF 		bl	FreeDer
 4000              	.LVL483:
 4001              	.L415:
3372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(&ssl->buffers.key, &der, sizeof(der));
 4002              		.loc 1 3373 0
 4003 0300 201C     		mov	r0, r4
 4004 0302 0DA9     		add	r1, sp, #52
 4005 0304 0422     		mov	r2, #4
 4006 0306 FFF7FEFF 		bl	memcpy
 4007              	.LVL484:
3374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.weOwnKey = 1;
 4008              		.loc 1 3374 0
 4009 030a 0123     		mov	r3, #1
 4010 030c 2B70     		strb	r3, [r5]
 4011 030e 51E0     		b	.L416
 4012              	.LVL485:
 4013              	.L414:
3375:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx) {
 4014              		.loc 1 3376 0
 4015 0310 002D     		cmp	r5, #0
 4016 0312 4FD0     		beq	.L416
3377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&ctx->privateKey);
 4017              		.loc 1 3377 0
 4018 0314 1435     		add	r5, r5, #20
 4019              	.LVL486:
 4020 0316 281C     		mov	r0, r5
 4021 0318 FFF7FEFF 		bl	FreeDer
 4022              	.LVL487:
3378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(&ctx->privateKey, &der, sizeof(der));
 4023              		.loc 1 3378 0
 4024 031c 281C     		mov	r0, r5
 4025 031e 0DA9     		add	r1, sp, #52
 4026 0320 0422     		mov	r2, #4
 4027 0322 FFF7FEFF 		bl	memcpy
 4028              	.LVL488:
 4029 0326 45E0     		b	.L416
 4030              	.LVL489:
 4031              	.L413:
3379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
3382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeDer(&der);
 4032              		.loc 1 3382 0
 4033 0328 0DA8     		add	r0, sp, #52
 4034 032a FFF7FEFF 		bl	FreeDer
 4035              	.LVL490:
3383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_CERTTYPE;
 4036              		.loc 1 3383 0
 4037 032e 0824     		mov	r4, #8
 4038              	.LVL491:
 4039 0330 02E0     		b	.L483
 4040              	.LVL492:
 4041              	.L428:
3137:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 143


 4042              		.loc 1 3137 0
 4043 0332 0524     		mov	r4, #5
 4044 0334 00E0     		b	.L483
 4045              	.LVL493:
 4046              	.L429:
3140:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 4047              		.loc 1 3140 0
 4048 0336 AD24     		mov	r4, #173
 4049              	.L483:
 4050 0338 6442     		neg	r4, r4
 4051 033a 3CE0     		b	.L480
 4052              	.L487:
 4053              		.align	2
 4054              	.L486:
 4055 033c 3CFBFFFF 		.word	-1220
 4056 0340 8CFEFFFF 		.word	-372
 4057              	.LVL494:
 4058              	.L405:
 4059              	.LBB82:
3261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(chainBuffer, heap, DYNAMIC_TYPE_FILE);
 4060              		.loc 1 3261 0
 4061 0344 089B     		ldr	r3, [sp, #32]
 4062 0346 002B     		cmp	r3, #0
 4063 0348 00D0     		beq	.LCB4114
 4064 034a 6DE7     		b	.L422	@long jump
 4065              	.LCB4114:
 4066 034c 6FE7     		b	.L421
 4067              	.LVL495:
 4068              	.L412:
 4069              	.LBE82:
 4070              	.LBB83:
3384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3385:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (type == PRIVATEKEY_TYPE && format != SSL_FILETYPE_RAW) {
3387:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_RSA
3388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!eccKey) {
3389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* make sure RSA key can be used */
3390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word32 idx = 0;
3391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             RsaKey* key = NULL;
3393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
3394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             RsaKey  key[1];
3395:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3396:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             key = (RsaKey*)XMALLOC(sizeof(RsaKey), heap,
3399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    DYNAMIC_TYPE_TMP_BUFFER);
3400:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key == NULL)
3401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return MEMORY_E;
3402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3403:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wc_InitRsaKey(key, 0);
3405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret == 0) {
3406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (wc_RsaPrivateKeyDecode(der->buffer, &idx, key, der->length)
3407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     != 0) {
3408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #ifdef HAVE_ECC
3409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     /* could have DER ECC (or pkcs8 ecc), no easy way to tell */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 144


3410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     eccKey = 1;  /* so try it out */
3411:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #endif
3412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (!eccKey)
3413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         ret = SSL_BAD_FILE;
3414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 } else {
3415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     rsaKey = 1;
3416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     (void)rsaKey;  /* for no ecc builds */
3417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
3418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3419:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_FreeRsaKey(key);
3421:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(key, heap, DYNAMIC_TYPE_TMP_BUFFER);
3424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3425:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret != 0)
3427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return ret;
3428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3429:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3430:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_ECC
3431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!rsaKey) {
3432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* make sure ECC key can be used */
3433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             word32  idx = 0;
3434:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ecc_key key;
3435:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_ecc_init(&key);
3437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (wc_EccPrivateKeyDecode(der->buffer, &idx, &key, 
3438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         der->length) != 0) {
3439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_ecc_free(&key);
3440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_BAD_FILE;
3441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_ecc_free(&key);
3443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             eccKey = 1;
3444:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ctx)
3445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->haveStaticECC = 1;
3446:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl)
3447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveStaticECC = 1;
3448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* HAVE_ECC */
3450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (type == CERT_TYPE) {
3452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DecodedCert* cert = NULL;
3454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DecodedCert  cert[1];
3456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3457:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), heap,
3460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      DYNAMIC_TYPE_TMP_BUFFER);
3461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cert == NULL)
3462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
3463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3464:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Checking cert signature type");
3466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitDecodedCert(cert, der->buffer, der->length, heap);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 145


 4071              		.loc 1 3466 0
 4072 034e 0D9B     		ldr	r3, [sp, #52]
 4073 0350 30A8     		add	r0, sp, #192
 4074 0352 1968     		ldr	r1, [r3]
 4075 0354 9A68     		ldr	r2, [r3, #8]
 4076 0356 059B     		ldr	r3, [sp, #20]
 4077 0358 FFF7FEFF 		bl	InitDecodedCert
 4078              	.LVL496:
3467:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3468:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (DecodeToKey(cert, 0) < 0) {
 4079              		.loc 1 3468 0
 4080 035c 30A8     		add	r0, sp, #192
 4081 035e 0021     		mov	r1, #0
 4082 0360 FFF7FEFF 		bl	DecodeToKey
 4083              	.LVL497:
 4084 0364 0028     		cmp	r0, #0
 4085 0366 01DA     		bge	.L481
3469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Decode to key failed");
3470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
3471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(cert, heap, DYNAMIC_TYPE_TMP_BUFFER);
3472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_BAD_FILE;
 4086              		.loc 1 3473 0
 4087 0368 0424     		mov	r4, #4
 4088 036a E5E7     		b	.L483
 4089              	.L481:
 4090 036c 144A     		ldr	r2, .L488
 4091 036e 369B     		ldr	r3, [sp, #216]
 4092 0370 9446     		mov	ip, r2
 4093 0372 0493     		str	r3, [sp, #16]
 4094 0374 6344     		add	r3, r3, ip
 4095 0376 062B     		cmp	r3, #6
 4096 0378 19D8     		bhi	.L418
 4097 037a 0122     		mov	r2, #1
 4098 037c 111C     		mov	r1, r2
 4099 037e 9940     		lsl	r1, r1, r3
 4100 0380 0B1C     		mov	r3, r1
 4101 0382 7121     		mov	r1, #113
 4102 0384 0B42     		tst	r3, r1
 4103 0386 12D0     		beq	.L418
3474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (cert->signatureOID) {
3476:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CTC_SHAwECDSA:
3477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CTC_SHA256wECDSA:
3478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CTC_SHA384wECDSA:
3479:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case CTC_SHA512wECDSA:
3480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("ECDSA cert signature");
3481:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ctx)
 4104              		.loc 1 3481 0
 4105 0388 002D     		cmp	r5, #0
 4106 038a 01D0     		beq	.L420
3482:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ctx->haveECDSAsig = 1;
 4107              		.loc 1 3482 0
 4108 038c 2F35     		add	r5, r5, #47
 4109              	.LVL498:
 4110 038e 2A70     		strb	r2, [r5]
 4111              	.LVL499:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 146


 4112              	.L420:
3483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl)
 4113              		.loc 1 3483 0
 4114 0390 FFAB     		add	r3, sp, #1020
 4115 0392 E033     		add	r3, r3, #224
 4116 0394 1B68     		ldr	r3, [r3]
 4117 0396 002B     		cmp	r3, #0
 4118 0398 09D0     		beq	.L418
3484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->options.haveECDSAsig = 1;
 4119              		.loc 1 3484 0
 4120 039a 8322     		mov	r2, #131
 4121 039c 0221     		mov	r1, #2
 4122 039e FFAB     		add	r3, sp, #1020
 4123 03a0 E033     		add	r3, r3, #224
 4124 03a2 1B68     		ldr	r3, [r3]
 4125 03a4 9200     		lsl	r2, r2, #2
 4126 03a6 9A18     		add	r2, r3, r2
 4127 03a8 D378     		ldrb	r3, [r2, #3]
 4128 03aa 0B43     		orr	r3, r1
 4129 03ac D370     		strb	r3, [r2, #3]
 4130              	.LVL500:
 4131              	.L418:
3485:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
3486:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
3487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Not ECDSA cert signature");
3488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
3489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3490:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_ECC
3492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx) {
3493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->pkCurveOID = cert->pkCurveOID;
3494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef WC_STRICT_SIG
3495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cert->keyOID == ECDSAk) {
3496:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->haveECC = 1;
3497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
3499:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->haveECC = ctx->haveECDSAsig;
3500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl) {
3503:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->pkCurveOID = cert->pkCurveOID;
3504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef WC_STRICT_SIG
3505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cert->keyOID == ECDSAk) {
3506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.haveECC = 1;
3507:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
3509:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.haveECC = ssl->options.haveECDSAsig;
3510:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3511:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3513:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3514:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeDecodedCert(cert);
 4132              		.loc 1 3514 0 discriminator 2
 4133 03ae 30A8     		add	r0, sp, #192
 4134 03b0 FFF7FEFF 		bl	FreeDecodedCert
 4135              	.LVL501:
 4136              	.L416:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 147


 4137              	.LBE83:
3515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(cert, heap, DYNAMIC_TYPE_TMP_BUFFER);
3517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3519:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 4138              		.loc 1 3520 0
 4139 03b4 0124     		mov	r4, #1
 4140              	.L480:
3521:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4141              		.loc 1 3521 0
 4142 03b6 201C     		mov	r0, r4
 4143 03b8 024B     		ldr	r3, .L488+4
 4144 03ba 9D44     		add	sp, sp, r3
 4145              		@ sp needed
 4146 03bc F0BD     		pop	{r4, r5, r6, r7, pc}
 4147              	.L489:
 4148 03be C046     		.align	2
 4149              	.L488:
 4150 03c0 F8FDFFFF 		.word	-520
 4151 03c4 C4040000 		.word	1220
 4152              		.cfi_endproc
 4153              	.LFE67:
 4154              		.size	ProcessBuffer, .-ProcessBuffer
 4155              		.section	.text.wolfSSL_CertManagerEnableCRL,"ax",%progbits
 4156              		.align	1
 4157              		.global	wolfSSL_CertManagerEnableCRL
 4158              		.code	16
 4159              		.thumb_func
 4160              		.type	wolfSSL_CertManagerEnableCRL, %function
 4161              	wolfSSL_CertManagerEnableCRL:
 4162              	.LFB71:
3522:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3523:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* CA PEM file for verification, may have multiple/chain certs to process */
3525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int ProcessChainBuffer(WOLFSSL_CTX* ctx, const unsigned char* buff,
3526:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             long sz, int format, int type, WOLFSSL* ssl)
3527:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long used   = 0;
3529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  ret    = 0;
3530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  gotOne = 0;
3531:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_MSG("Processing CA PEM file");
3533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (used < sz) {
3534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         long consumed = 0;
3535:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = ProcessBuffer(ctx, buff + used, sz - used, format, type, ssl,
3537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             &consumed, 0);
3538:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret < 0)
3540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
3541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if(consumed > 0) { /* Made progress in file */
3542:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ret);
3543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("CA Parse failed, with progress in file.");
3544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Search for other certs in file");
3545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             } else {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 148


3546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("CA Parse failed, no progress in file.");
3547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Do not continue search for other certs in file");
3548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
3549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else {
3551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("   Processed a CA");
3552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             gotOne = 1;
3553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         used += consumed;
3555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3556:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if(gotOne)
3558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
3559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Processed at least one valid CA. Other stuff OK");
3560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
3561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
3563:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3564:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3565:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3566:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE WOLFSSL_METHOD* cm_pick_method(void)
3567:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_WOLFSSL_CLIENT
3569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
3570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return wolfSSLv3_client_method();
3571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
3572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return wolfTLSv1_2_client_method();
3573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #elif !defined(NO_WOLFSSL_SERVER)
3575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
3576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return wolfSSLv3_server_method();
3577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
3578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return wolfTLSv1_2_server_method();
3579:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
3580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
3582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3583:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3584:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3585:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* like load verify locations, 1 for success, < 0 for error */
3587:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerLoadCABuffer(WOLFSSL_CERT_MANAGER* cm,
3588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    const unsigned char* in, long sz, int format)
3589:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_FATAL_ERROR;
3591:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CTX* tmp;
3592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3593:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerLoadCABuffer");
3594:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3595:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL) {
3596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("No CertManager error");
3597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
3598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp = wolfSSL_CTX_new(cm_pick_method());
3600:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (tmp == NULL) {
3602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("CTX new failed");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 149


3603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
3604:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3605:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* for tmp use */
3607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wolfSSL_CertManagerFree(tmp->cm);
3608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp->cm = cm;
3609:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_CTX_load_verify_buffer(tmp, in, sz, format);
3611:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* don't loose our good one */
3613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp->cm = NULL;
3614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wolfSSL_CTX_free(tmp);
3615:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
3617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3618:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3619:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CRL
3620:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3621:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerLoadCRLBuffer(WOLFSSL_CERT_MANAGER* cm,
3622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    const unsigned char* buff, long sz, int type)
3623:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3624:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerLoadCRLBuffer");
3625:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3626:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3627:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm->crl == NULL) {
3629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (wolfSSL_CertManagerEnableCRL(cm, 0) != SSL_SUCCESS) {
3630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Enable CRL failed");
3631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
3632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3633:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return BufferLoadCRL(cm->crl, buff, sz, type);
3636:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_CRL */
3639:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3640:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* turn on CRL if off and compiled in, set options */
3641:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerEnableCRL(WOLFSSL_CERT_MANAGER* cm, int options)
3642:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4163              		.loc 1 3642 0
 4164              		.cfi_startproc
 4165              	.LVL502:
3643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
3644:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3645:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)options;
3646:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerEnableCRL");
3648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3650:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_CRL
3652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cm->crl == NULL) {
3653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->crl = (WOLFSSL_CRL*)XMALLOC(sizeof(WOLFSSL_CRL), cm->heap,
3654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                            DYNAMIC_TYPE_CRL);
3655:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cm->crl == NULL)
3656:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return MEMORY_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 150


3657:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (InitCRL(cm->crl, cm) != 0) {
3659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Init CRL failed");
3660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeCRL(cm->crl, 1);
3661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 cm->crl = NULL;
3662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FAILURE;
3663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cm->crlEnabled = 1;
3666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (options & WOLFSSL_CRL_CHECKALL)
3667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->crlCheckAll = 1;
3668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = NOT_COMPILED_IN;
3670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3671:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
 4166              		.loc 1 3672 0
 4167 0000 4342     		neg	r3, r0
 4168 0002 5841     		adc	r0, r0, r3
 4169              	.LVL503:
3673:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4170              		.loc 1 3673 0
 4171              		@ sp needed
3672:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4172              		.loc 1 3672 0
 4173 0004 AE38     		sub	r0, r0, #174
 4174              		.loc 1 3673 0
 4175 0006 7047     		bx	lr
 4176              		.cfi_endproc
 4177              	.LFE71:
 4178              		.size	wolfSSL_CertManagerEnableCRL, .-wolfSSL_CertManagerEnableCRL
 4179              		.section	.text.wolfSSL_CertManagerDisableCRL,"ax",%progbits
 4180              		.align	1
 4181              		.global	wolfSSL_CertManagerDisableCRL
 4182              		.code	16
 4183              		.thumb_func
 4184              		.type	wolfSSL_CertManagerDisableCRL, %function
 4185              	wolfSSL_CertManagerDisableCRL:
 4186              	.LFB72:
3674:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3675:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3676:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerDisableCRL(WOLFSSL_CERT_MANAGER* cm)
3677:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4187              		.loc 1 3677 0
 4188              		.cfi_startproc
 4189              	.LVL504:
3678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerDisableCRL");
3679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
 4190              		.loc 1 3679 0
 4191 0000 0028     		cmp	r0, #0
 4192 0002 04D0     		beq	.L495
3680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3681:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm->crlEnabled = 0;
 4193              		.loc 1 3682 0
 4194 0004 0023     		mov	r3, #0
 4195 0006 5430     		add	r0, r0, #84
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 151


 4196              	.LVL505:
 4197 0008 0370     		strb	r3, [r0]
3683:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 4198              		.loc 1 3684 0
 4199 000a 0120     		mov	r0, #1
 4200              	.LVL506:
 4201 000c 01E0     		b	.L494
 4202              	.LVL507:
 4203              	.L495:
3680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 4204              		.loc 1 3680 0
 4205 000e AD20     		mov	r0, #173
 4206              	.LVL508:
 4207 0010 4042     		neg	r0, r0
 4208              	.L494:
3685:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4209              		.loc 1 3685 0
 4210              		@ sp needed
 4211 0012 7047     		bx	lr
 4212              		.cfi_endproc
 4213              	.LFE72:
 4214              		.size	wolfSSL_CertManagerDisableCRL, .-wolfSSL_CertManagerDisableCRL
 4215              		.section	.text.wolfSSL_CertManagerVerifyBuffer,"ax",%progbits
 4216              		.align	1
 4217              		.global	wolfSSL_CertManagerVerifyBuffer
 4218              		.code	16
 4219              		.thumb_func
 4220              		.type	wolfSSL_CertManagerVerifyBuffer, %function
 4221              	wolfSSL_CertManagerVerifyBuffer:
 4222              	.LFB73:
3686:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Verify the certificate, SSL_SUCCESS for ok, < 0 for error */
3687:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerVerifyBuffer(WOLFSSL_CERT_MANAGER* cm, const byte* buff,
3688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                     long sz, int format)
3689:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4223              		.loc 1 3689 0
 4224              		.cfi_startproc
 4225              	.LVL509:
 4226 0000 30B5     		push	{r4, r5, lr}
 4227              		.cfi_def_cfa_offset 12
 4228              		.cfi_offset 4, -12
 4229              		.cfi_offset 5, -8
 4230              		.cfi_offset 14, -4
 4231 0002 1E4C     		ldr	r4, .L506
 4232 0004 051C     		mov	r5, r0
 4233 0006 A544     		add	sp, sp, r4
 4234              		.cfi_def_cfa_offset 952
3690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = 0;
3691:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer* der = NULL;
 4235              		.loc 1 3691 0
 4236 0008 0024     		mov	r4, #0
 4237 000a 0494     		str	r4, [sp, #16]
3692:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3693:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert* cert = NULL;
3694:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
3695:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert  cert[1];
3696:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 152


3697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerVerifyBuffer");
3699:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3700:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), cm->heap,
3702:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  DYNAMIC_TYPE_TMP_BUFFER);
3703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cert == NULL)
3704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
3705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3706:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (format == SSL_FILETYPE_PEM) {
 4238              		.loc 1 3707 0
 4239 000c 012B     		cmp	r3, #1
 4240 000e 1BD1     		bne	.L497
 4241              	.LBB84:
3708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int eccKey = 0; /* not used */
3709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         EncryptedInfo* info = NULL;
3711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3712:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         EncryptedInfo  info[1];
3713:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3714:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3715:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info = (EncryptedInfo*)XMALLOC(sizeof(EncryptedInfo), cm->heap,
3717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        DYNAMIC_TYPE_TMP_BUFFER);
3718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (info == NULL) {
3719:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(cert, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
3720:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
3721:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3722:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3723:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3724:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->set      = 0;
 4242              		.loc 1 3724 0
 4243 0010 24A8     		add	r0, sp, #144
 4244              	.LVL510:
 4245 0012 0470     		strb	r4, [r0]
 4246 0014 06AB     		add	r3, sp, #24
 4247              	.LVL511:
3725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->ctx      = NULL;
3726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->consumed = 0;
3727:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = PemToDer(buff, sz, CERT_TYPE, &der, cm->heap, info, &eccKey);
 4248              		.loc 1 3728 0
 4249 0016 E86A     		ldr	r0, [r5, #44]
 4250 0018 0193     		str	r3, [sp, #4]
 4251 001a 05AB     		add	r3, sp, #20
 4252 001c 0090     		str	r0, [sp]
 4253 001e 0293     		str	r3, [sp, #8]
 4254 0020 081C     		mov	r0, r1
 4255 0022 04AB     		add	r3, sp, #16
 4256 0024 111C     		mov	r1, r2
 4257              	.LVL512:
 4258 0026 221C     		mov	r2, r4
 4259              	.LVL513:
3708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int eccKey = 0; /* not used */
 4260              		.loc 1 3708 0
 4261 0028 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 153


3725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->ctx      = NULL;
 4262              		.loc 1 3725 0
 4263 002a 2594     		str	r4, [sp, #148]
3726:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 4264              		.loc 1 3726 0
 4265 002c 2394     		str	r4, [sp, #140]
 4266              		.loc 1 3728 0
 4267 002e FFF7FEFF 		bl	PemToDer
 4268              	.LVL514:
3729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitDecodedCert(cert, der->buffer, der->length, cm->heap);
 4269              		.loc 1 3729 0
 4270 0032 049B     		ldr	r3, [sp, #16]
3728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitDecodedCert(cert, der->buffer, der->length, cm->heap);
 4271              		.loc 1 3728 0
 4272 0034 041C     		mov	r4, r0
 4273              	.LVL515:
 4274              		.loc 1 3729 0
 4275 0036 1968     		ldr	r1, [r3]
 4276 0038 9A68     		ldr	r2, [r3, #8]
 4277 003a 26A8     		add	r0, sp, #152
 4278              	.LVL516:
 4279 003c EB6A     		ldr	r3, [r5, #44]
 4280 003e FFF7FEFF 		bl	InitDecodedCert
 4281              	.LVL517:
 4282              	.LBE84:
3730:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
3732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(info, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
3733:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3735:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitDecodedCert(cert, (byte*)buff, (word32)sz, cm->heap);
3737:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == 0)
 4283              		.loc 1 3738 0
 4284 0042 002C     		cmp	r4, #0
 4285 0044 0BD1     		bne	.L499
 4286 0046 03E0     		b	.L498
 4287              	.LVL518:
 4288              	.L497:
3736:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 4289              		.loc 1 3736 0
 4290 0048 26A8     		add	r0, sp, #152
 4291              	.LVL519:
 4292 004a EB6A     		ldr	r3, [r5, #44]
 4293              	.LVL520:
 4294 004c FFF7FEFF 		bl	InitDecodedCert
 4295              	.LVL521:
 4296              	.L498:
3739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = ParseCertRelative(cert, CERT_TYPE, 1, cm);
 4297              		.loc 1 3739 0
 4298 0050 26A8     		add	r0, sp, #152
 4299 0052 0021     		mov	r1, #0
 4300 0054 0122     		mov	r2, #1
 4301 0056 2B1C     		mov	r3, r5
 4302 0058 FFF7FEFF 		bl	ParseCertRelative
 4303              	.LVL522:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 154


 4304 005c 041C     		mov	r4, r0
 4305              	.LVL523:
 4306              	.L499:
3740:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3741:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CRL
3742:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == 0 && cm->crlEnabled)
3743:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = CheckCertCRL(cm->crl, cert);
3744:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3745:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDecodedCert(cert);
 4307              		.loc 1 3746 0
 4308 005e 26A8     		add	r0, sp, #152
 4309 0060 FFF7FEFF 		bl	FreeDecodedCert
 4310              	.LVL524:
3747:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDer(&der);
 4311              		.loc 1 3747 0
 4312 0064 04A8     		add	r0, sp, #16
 4313 0066 FFF7FEFF 		bl	FreeDer
 4314              	.LVL525:
3748:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(cert, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
3750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3751:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3752:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret == 0 ? SSL_SUCCESS : ret;
 4315              		.loc 1 3752 0
 4316 006a 0120     		mov	r0, #1
 4317 006c 002C     		cmp	r4, #0
 4318 006e 00D0     		beq	.L500
 4319 0070 201C     		mov	r0, r4
 4320              	.L500:
3753:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4321              		.loc 1 3753 0 discriminator 4
 4322 0072 EB23     		mov	r3, #235
 4323 0074 9B00     		lsl	r3, r3, #2
 4324 0076 9D44     		add	sp, sp, r3
 4325              		@ sp needed
 4326              	.LVL526:
 4327              	.LVL527:
 4328 0078 30BD     		pop	{r4, r5, pc}
 4329              	.L507:
 4330 007a C046     		.align	2
 4331              	.L506:
 4332 007c 54FCFFFF 		.word	-940
 4333              		.cfi_endproc
 4334              	.LFE73:
 4335              		.size	wolfSSL_CertManagerVerifyBuffer, .-wolfSSL_CertManagerVerifyBuffer
 4336              		.section	.text.wolfSSL_CertManagerEnableOCSP,"ax",%progbits
 4337              		.align	1
 4338              		.global	wolfSSL_CertManagerEnableOCSP
 4339              		.code	16
 4340              		.thumb_func
 4341              		.type	wolfSSL_CertManagerEnableOCSP, %function
 4342              	wolfSSL_CertManagerEnableOCSP:
 4343              	.LFB74:
3754:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3755:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* turn on OCSP if off and compiled in, set options */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 155


3757:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerEnableOCSP(WOLFSSL_CERT_MANAGER* cm, int options)
3758:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4344              		.loc 1 3758 0
 4345              		.cfi_startproc
 4346              	.LVL528:
3759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
3760:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)options;
3762:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerEnableOCSP");
3764:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3766:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_OCSP
3768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cm->ocsp == NULL) {
3769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocsp = (WOLFSSL_OCSP*)XMALLOC(sizeof(WOLFSSL_OCSP), cm->heap,
3770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                               DYNAMIC_TYPE_OCSP);
3771:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cm->ocsp == NULL)
3772:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return MEMORY_E;
3773:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (InitOCSP(cm->ocsp, cm) != 0) {
3775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Init OCSP failed");
3776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeOCSP(cm->ocsp, 1);
3777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 cm->ocsp = NULL;
3778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FAILURE;
3779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cm->ocspEnabled = 1;
3782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (options & WOLFSSL_OCSP_URL_OVERRIDE)
3783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspUseOverrideURL = 1;
3784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (options & WOLFSSL_OCSP_NO_NONCE)
3785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspSendNonce = 0;
3786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
3787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspSendNonce = 1;
3788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (options & WOLFSSL_OCSP_CHECKALL)
3789:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspCheckAll = 1;
3790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef WOLFSSL_USER_IO
3791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspIOCb = EmbedOcspLookup;
3792:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspRespFreeCb = EmbedOcspRespFree;
3793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif /* WOLFSSL_USER_IO */
3794:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = NOT_COMPILED_IN;
3796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3797:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
 4347              		.loc 1 3798 0
 4348 0000 4342     		neg	r3, r0
 4349 0002 5841     		adc	r0, r0, r3
 4350              	.LVL529:
3799:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4351              		.loc 1 3799 0
 4352              		@ sp needed
3798:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4353              		.loc 1 3798 0
 4354 0004 AE38     		sub	r0, r0, #174
 4355              		.loc 1 3799 0
 4356 0006 7047     		bx	lr
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 156


 4357              		.cfi_endproc
 4358              	.LFE74:
 4359              		.size	wolfSSL_CertManagerEnableOCSP, .-wolfSSL_CertManagerEnableOCSP
 4360              		.section	.text.wolfSSL_CertManagerDisableOCSP,"ax",%progbits
 4361              		.align	1
 4362              		.global	wolfSSL_CertManagerDisableOCSP
 4363              		.code	16
 4364              		.thumb_func
 4365              		.type	wolfSSL_CertManagerDisableOCSP, %function
 4366              	wolfSSL_CertManagerDisableOCSP:
 4367              	.LFB75:
3800:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3801:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3802:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerDisableOCSP(WOLFSSL_CERT_MANAGER* cm)
3803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4368              		.loc 1 3803 0
 4369              		.cfi_startproc
 4370              	.LVL530:
3804:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerDisableOCSP");
3805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
 4371              		.loc 1 3805 0
 4372 0000 0028     		cmp	r0, #0
 4373 0002 04D0     		beq	.L513
3806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3807:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm->ocspEnabled = 0;
 4374              		.loc 1 3808 0
 4375 0004 0023     		mov	r3, #0
 4376 0006 5630     		add	r0, r0, #86
 4377              	.LVL531:
 4378 0008 0370     		strb	r3, [r0]
3809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 4379              		.loc 1 3810 0
 4380 000a 0120     		mov	r0, #1
 4381              	.LVL532:
 4382 000c 01E0     		b	.L512
 4383              	.LVL533:
 4384              	.L513:
3806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
 4385              		.loc 1 3806 0
 4386 000e AD20     		mov	r0, #173
 4387              	.LVL534:
 4388 0010 4042     		neg	r0, r0
 4389              	.L512:
3811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4390              		.loc 1 3811 0
 4391              		@ sp needed
 4392 0012 7047     		bx	lr
 4393              		.cfi_endproc
 4394              	.LFE75:
 4395              		.size	wolfSSL_CertManagerDisableOCSP, .-wolfSSL_CertManagerDisableOCSP
 4396              		.section	.text.wolfSSL_CertManagerEnableOCSPStapling,"ax",%progbits
 4397              		.align	1
 4398              		.global	wolfSSL_CertManagerEnableOCSPStapling
 4399              		.code	16
 4400              		.thumb_func
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 157


 4401              		.type	wolfSSL_CertManagerEnableOCSPStapling, %function
 4402              	wolfSSL_CertManagerEnableOCSPStapling:
 4403              	.LFB76:
3812:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3813:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* turn on OCSP Stapling if off and compiled in, set options */
3814:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerEnableOCSPStapling(WOLFSSL_CERT_MANAGER* cm)
3815:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4404              		.loc 1 3815 0
 4405              		.cfi_startproc
 4406              	.LVL535:
3816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
3817:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3818:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerEnableOCSPStapling");
3819:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3820:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3821:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #if defined(HAVE_CERTIFICATE_STATUS_REQUEST) \
3823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****      || defined(HAVE_CERTIFICATE_STATUS_REQUEST_V2)
3824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cm->ocsp_stapling == NULL) {
3825:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocsp_stapling = (WOLFSSL_OCSP*)XMALLOC(sizeof(WOLFSSL_OCSP),
3826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                    cm->heap, DYNAMIC_TYPE_OCSP);
3827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (cm->ocsp_stapling == NULL)
3828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return MEMORY_E;
3829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3830:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (InitOCSP(cm->ocsp_stapling, cm) != 0) {
3831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Init OCSP failed");
3832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeOCSP(cm->ocsp_stapling, 1);
3833:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 cm->ocsp_stapling = NULL;
3834:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FAILURE;
3835:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
3836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cm->ocspStaplingEnabled = 1;
3838:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef WOLFSSL_USER_IO
3840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspIOCb = EmbedOcspLookup;
3841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cm->ocspRespFreeCb = EmbedOcspRespFree;
3842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif /* WOLFSSL_USER_IO */
3843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
3844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = NOT_COMPILED_IN;
3845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
3846:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
 4407              		.loc 1 3847 0
 4408 0000 4342     		neg	r3, r0
 4409 0002 5841     		adc	r0, r0, r3
 4410              	.LVL536:
3848:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4411              		.loc 1 3848 0
 4412              		@ sp needed
3847:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4413              		.loc 1 3847 0
 4414 0004 AE38     		sub	r0, r0, #174
 4415              		.loc 1 3848 0
 4416 0006 7047     		bx	lr
 4417              		.cfi_endproc
 4418              	.LFE76:
 4419              		.size	wolfSSL_CertManagerEnableOCSPStapling, .-wolfSSL_CertManagerEnableOCSPStapling
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 158


 4420              		.section	.text.wolfSSL_CTX_set_verify,"ax",%progbits
 4421              		.align	1
 4422              		.global	wolfSSL_CTX_set_verify
 4423              		.code	16
 4424              		.thumb_func
 4425              		.type	wolfSSL_CTX_set_verify, %function
 4426              	wolfSSL_CTX_set_verify:
 4427              	.LFB77:
3849:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3850:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3851:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_OCSP
3852:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3854:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* check CRL if enabled, SSL_SUCCESS  */
3855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerCheckOCSP(WOLFSSL_CERT_MANAGER* cm, byte* der, int sz)
3856:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
3858:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3859:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert* cert = NULL;
3860:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
3861:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert  cert[1];
3862:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3863:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerCheckOCSP");
3865:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3868:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm->ocspEnabled == 0)
3870:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
3871:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3872:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3873:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
3874:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  DYNAMIC_TYPE_TMP_BUFFER);
3875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cert == NULL)
3876:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
3877:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3878:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3879:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     InitDecodedCert(cert, der, sz, NULL);
3880:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ((ret = ParseCertRelative(cert, CERT_TYPE, NO_VERIFY, cm)) != 0) {
3882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("ParseCert failed");
3883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if ((ret = CheckCertOCSP(cm->ocsp, cert, NULL)) != 0) {
3885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("CheckCertOCSP failed");
3886:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3887:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDecodedCert(cert);
3889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
3890:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3891:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
3892:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret == 0 ? SSL_SUCCESS : ret;
3894:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3895:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3896:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3897:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerSetOCSPOverrideURL(WOLFSSL_CERT_MANAGER* cm,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 159


3898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           const char* url)
3899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerSetOCSPOverrideURL");
3901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3903:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(cm->ocspOverrideURL, cm->heap, DYNAMIC_TYPE_URL);
3905:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (url != NULL) {
3906:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int urlSz = (int)XSTRLEN(url) + 1;
3907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cm->ocspOverrideURL = (char*)XMALLOC(urlSz, cm->heap, DYNAMIC_TYPE_URL);
3908:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cm->ocspOverrideURL != NULL) {
3909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(cm->ocspOverrideURL, url, urlSz);
3910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
3911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
3912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
3913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
3914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cm->ocspOverrideURL = NULL;
3916:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
3918:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3919:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3920:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3921:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerSetOCSP_Cb(WOLFSSL_CERT_MANAGER* cm,
3922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         CbOCSPIO ioCb, CbOCSPRespFree respFreeCb, void* ioCbCtx)
3923:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerSetOCSP_Cb");
3925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
3926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3927:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm->ocspIOCb = ioCb;
3929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm->ocspRespFreeCb = respFreeCb;
3930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm->ocspIOCtx = ioCbCtx;
3931:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
3933:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3935:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3936:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_EnableOCSP(WOLFSSL* ssl, int options)
3937:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3938:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_EnableOCSP");
3939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
3940:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerEnableOCSP(ssl->ctx->cm, options);
3941:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3943:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3944:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3945:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3946:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_DisableOCSP(WOLFSSL* ssl)
3947:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_DisableOCSP");
3949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
3950:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerDisableOCSP(ssl->ctx->cm);
3951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3952:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3953:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3954:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 160


3955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3956:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetOCSP_OverrideURL(WOLFSSL* ssl, const char* url)
3957:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetOCSP_OverrideURL");
3959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
3960:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerSetOCSPOverrideURL(ssl->ctx->cm, url);
3961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3962:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3963:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3964:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3965:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3966:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetOCSP_Cb(WOLFSSL* ssl,
3967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         CbOCSPIO ioCb, CbOCSPRespFree respFreeCb, void* ioCbCtx)
3968:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3969:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetOCSP_Cb");
3970:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
3971:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerSetOCSP_Cb(ssl->ctx->cm,
3972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                              ioCb, respFreeCb, ioCbCtx);
3973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3975:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3976:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3977:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3978:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_EnableOCSP(WOLFSSL_CTX* ctx, int options)
3979:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_EnableOCSP");
3981:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
3982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerEnableOCSP(ctx->cm, options);
3983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3985:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3986:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3987:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3988:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_DisableOCSP(WOLFSSL_CTX* ctx)
3989:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
3990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_DisableOCSP");
3991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
3992:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerDisableOCSP(ctx->cm);
3993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
3994:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
3995:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
3996:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3997:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
3998:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetOCSP_OverrideURL(WOLFSSL_CTX* ctx, const char* url)
3999:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetOCSP_OverrideURL");
4001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
4002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerSetOCSPOverrideURL(ctx->cm, url);
4003:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4005:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4006:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4007:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4008:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetOCSP_Cb(WOLFSSL_CTX* ctx, CbOCSPIO ioCb,
4009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            CbOCSPRespFree respFreeCb, void* ioCbCtx)
4010:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_SetOCSP_Cb");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 161


4012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
4013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerSetOCSP_Cb(ctx->cm, ioCb,
4014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                              respFreeCb, ioCbCtx);
4015:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4017:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4018:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4019:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(HAVE_CERTIFICATE_STATUS_REQUEST) \
4020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  || defined(HAVE_CERTIFICATE_STATUS_REQUEST_V2)
4021:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_EnableOCSPStapling(WOLFSSL_CTX* ctx)
4022:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4023:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_EnableOCSPStapling");
4024:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
4025:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerEnableOCSPStapling(ctx->cm);
4026:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4027:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4028:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4029:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4030:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4031:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_OCSP */
4032:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4033:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4034:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_FILESYSTEM
4035:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* process a file with name fname into ctx of format and type
4037:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    userChain specifies a user certificate chain to pass during handshake */
4038:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int ProcessFile(WOLFSSL_CTX* ctx, const char* fname, int format, int type,
4039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL* ssl, int userChain, WOLFSSL_CRL* crl)
4040:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4041:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[1]; /* force heap usage */
4043:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
4044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[FILE_BUFFER_SIZE];
4045:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4046:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*  myBuffer = staticBuffer;
4047:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    dynamic = 0;
4048:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret;
4049:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long   sz = 0;
4050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file;
4051:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void*  heapHint = ctx ? ctx->heap : NULL;
4052:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)crl;
4054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)heapHint;
4055:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (fname == NULL) return SSL_BAD_FILE;
4057:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "rb");
4059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) return SSL_BAD_FILE;
4060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFSEEK(file, 0, XSEEK_END);
4061:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz = XFTELL(file);
4062:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XREWIND(file);
4063:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4064:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz > (long)sizeof(staticBuffer)) {
4065:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Getting dynamic buffer");
4066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         myBuffer = (byte*)XMALLOC(sz, heapHint, DYNAMIC_TYPE_FILE);
4067:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (myBuffer == NULL) {
4068:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFCLOSE(file);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 162


4069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_BAD_FILE;
4070:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         dynamic = 1;
4072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4073:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (sz < 0) {
4074:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
4075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
4076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4077:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ( (ret = (int)XFREAD(myBuffer, sz, 1, file)) < 0)
4079:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = SSL_BAD_FILE;
4080:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
4081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if ((type == CA_TYPE || type == TRUSTED_PEER_TYPE)
4082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                   && format == SSL_FILETYPE_PEM)
4083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = ProcessChainBuffer(ctx, myBuffer, sz, format, type, ssl);
4084:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CRL
4085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (type == CRL_TYPE)
4086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = BufferLoadCRL(crl, myBuffer, sz, format);
4087:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
4089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = ProcessBuffer(ctx, myBuffer, sz, format, type, ssl, NULL,
4090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 userChain);
4091:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4092:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
4094:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (dynamic)
4095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(myBuffer, heapHint, DYNAMIC_TYPE_FILE);
4096:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4099:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4100:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4101:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* loads file then loads each file in path, no c_rehash */
4102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_load_verify_locations(WOLFSSL_CTX* ctx, const char* file,
4103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      const char* path)
4104:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
4106:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_load_verify_locations");
4108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)path;
4109:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || (file == NULL && path == NULL) )
4111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
4112:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file)
4114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = ProcessFile(ctx, file, SSL_FILETYPE_PEM, CA_TYPE, NULL, 0, NULL);
4115:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == SSL_SUCCESS && path) {
4117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* try to load each regular file in path */
4118:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef USE_WINDOWS_API
4119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WIN32_FIND_DATAA FindFileData;
4120:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         HANDLE hFind;
4121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
4122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char*  name = NULL;
4123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
4124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char   name[MAX_FILENAME_SZ];
4125:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 163


4126:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
4128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         name = (char*)XMALLOC(MAX_FILENAME_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4129:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (name == NULL)
4130:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
4131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
4132:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMSET(name, 0, MAX_FILENAME_SZ);
4134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XSTRNCPY(name, path, MAX_FILENAME_SZ - 4);
4135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XSTRNCAT(name, "\\*", 3);
4136:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hFind = FindFirstFileA(name, &FindFileData);
4138:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (hFind == INVALID_HANDLE_VALUE) {
4139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("FindFirstFile for path verify locations failed");
4140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
4141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(name, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
4143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_PATH_ERROR;
4144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4145:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4146:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         do {
4147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (FindFileData.dwFileAttributes != FILE_ATTRIBUTE_DIRECTORY) {
4148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XSTRNCPY(name, path, MAX_FILENAME_SZ/2 - 3);
4149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XSTRNCAT(name, "\\", 2);
4150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XSTRNCAT(name, FindFileData.cFileName, MAX_FILENAME_SZ/2);
4151:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = ProcessFile(ctx, name, SSL_FILETYPE_PEM, CA_TYPE,
4153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   NULL, 0, NULL);
4154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
4155:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } while (ret == SSL_SUCCESS && FindNextFileA(hFind, &FindFileData));
4156:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
4158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(name, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
4160:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FindClose(hFind);
4162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #elif !defined(NO_WOLFSSL_DIR)
4163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         struct dirent* entry;
4164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DIR*   dir = opendir(path);
4165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
4166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char*  name = NULL;
4167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
4168:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char   name[MAX_FILENAME_SZ];
4169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
4170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4171:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (dir == NULL) {
4172:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("opendir path verify locations failed");
4173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_PATH_ERROR;
4174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4175:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
4177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         name = (char*)XMALLOC(MAX_FILENAME_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (name == NULL) {
4179:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             closedir(dir);
4180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
4181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 164


4183:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while ( ret == SSL_SUCCESS && (entry = readdir(dir)) != NULL) {
4185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             struct stat s;
4186:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMSET(name, 0, MAX_FILENAME_SZ);
4188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCPY(name, path, MAX_FILENAME_SZ/2 - 2);
4189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCAT(name, "/", 1);
4190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCAT(name, entry->d_name, MAX_FILENAME_SZ/2);
4191:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (stat(name, &s) != 0) {
4193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("stat on name failed");
4194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = BAD_PATH_ERROR;
4195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             } else if (s.st_mode & S_IFREG)
4196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = ProcessFile(ctx, name, SSL_FILETYPE_PEM, CA_TYPE,
4197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   NULL, 0, NULL);
4198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4199:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
4201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(name, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4202:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
4203:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         closedir(dir);
4205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
4206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4207:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4208:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4209:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4210:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4211:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4212:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
4213:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Used to specify a peer cert to match when connecting
4214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx : the ctx structure to load in peer cert
4215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file: the string name of cert file
4216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     type: type of format such as PEM/DER
4217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  */
4218:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_trust_peer_cert(WOLFSSL_CTX* ctx, const char* file, int type)
4219:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4220:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_trust_peer_cert");
4221:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || file == NULL) {
4223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
4224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4225:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ProcessFile(ctx, file, type, TRUSTED_PEER_TYPE, NULL, 0, NULL);
4227:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4228:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
4229:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4230:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4231:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Verify the certificate, SSL_SUCCESS for ok, < 0 for error */
4232:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerVerify(WOLFSSL_CERT_MANAGER* cm, const char* fname,
4233:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              int format)
4234:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret = SSL_FATAL_ERROR;
4236:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[1]; /* force heap usage */
4238:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
4239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[FILE_BUFFER_SIZE];
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 165


4240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*  myBuffer = staticBuffer;
4242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    dynamic = 0;
4243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long   sz = 0;
4244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file = XFOPEN(fname, "rb");
4245:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4246:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerVerify");
4247:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) return SSL_BAD_FILE;
4249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFSEEK(file, 0, XSEEK_END);
4250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz = XFTELL(file);
4251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XREWIND(file);
4252:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz > MAX_WOLFSSL_FILE_SIZE || sz < 0) {
4254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("CertManagerVerify file bad size");
4255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
4256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
4257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4258:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz > (long)sizeof(staticBuffer)) {
4260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Getting dynamic buffer");
4261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         myBuffer = (byte*) XMALLOC(sz, cm->heap, DYNAMIC_TYPE_FILE);
4262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (myBuffer == NULL) {
4263:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFCLOSE(file);
4264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_BAD_FILE;
4265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4266:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         dynamic = 1;
4267:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4268:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4269:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ( (ret = (int)XFREAD(myBuffer, sz, 1, file)) < 0)
4270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = SSL_BAD_FILE;
4271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wolfSSL_CertManagerVerifyBuffer(cm, myBuffer, sz, format);
4273:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
4275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (dynamic)
4276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(myBuffer, cm->heap, DYNAMIC_TYPE_FILE);
4277:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4279:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4280:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4281:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4282:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* like load verify locations, 1 for success, < 0 for error */
4283:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerLoadCA(WOLFSSL_CERT_MANAGER* cm, const char* file,
4284:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              const char* path)
4285:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_FATAL_ERROR;
4287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_CTX* tmp;
4288:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerLoadCA");
4290:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL) {
4292:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("No CertManager error");
4293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
4294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp = wolfSSL_CTX_new(cm_pick_method());
4296:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 166


4297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (tmp == NULL) {
4298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("CTX new failed");
4299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
4300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4301:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* for tmp use */
4303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wolfSSL_CertManagerFree(tmp->cm);
4304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp->cm = cm;
4305:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_CTX_load_verify_locations(tmp, file, path);
4307:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* don't loose our good one */
4309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp->cm = NULL;
4310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wolfSSL_CTX_free(tmp);
4311:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4313:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4314:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4315:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4316:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4317:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4318:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_check_private_key(WOLFSSL_CTX* ctx)
4319:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* TODO: check private against public for RSA match */
4321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ctx;
4322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_CTX_check_private_key");
4323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
4324:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4325:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4326:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4327:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_CRL
4328:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4329:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4330:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* check CRL if enabled, SSL_SUCCESS  */
4331:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerCheckCRL(WOLFSSL_CERT_MANAGER* cm, byte* der, int sz)
4332:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = 0;
4334:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert* cert = NULL;
4336:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
4337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DecodedCert  cert[1];
4338:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4339:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerCheckCRL");
4341:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
4343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4344:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm->crlEnabled == 0)
4346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4347:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4348:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
4350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  DYNAMIC_TYPE_TMP_BUFFER);
4351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cert == NULL)
4352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
4353:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 167


4354:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     InitDecodedCert(cert, der, sz, NULL);
4356:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ((ret = ParseCertRelative(cert, CERT_TYPE, NO_VERIFY, cm)) != 0) {
4358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("ParseCert failed");
4359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if ((ret = CheckCertCRL(cm->crl, cert)) != 0) {
4361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("CheckCertCRL failed");
4362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4363:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDecodedCert(cert);
4365:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4367:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4368:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret == 0 ? SSL_SUCCESS : ret;
4370:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4371:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4372:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4373:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerSetCRL_Cb(WOLFSSL_CERT_MANAGER* cm, CbMissingCRL cb)
4374:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4375:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerSetCRL_Cb");
4376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
4377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4378:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cm->cbMissingCRL = cb;
4380:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
4382:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4383:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4384:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4385:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CertManagerLoadCRL(WOLFSSL_CERT_MANAGER* cm, const char* path,
4386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               int type, int monitor)
4387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CertManagerLoadCRL");
4389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm == NULL)
4390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4391:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cm->crl == NULL) {
4393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (wolfSSL_CertManagerEnableCRL(cm, 0) != SSL_SUCCESS) {
4394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Enable CRL failed");
4395:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
4396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4398:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return LoadCRL(cm->crl, path, type, monitor);
4400:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4401:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4402:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4403:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_EnableCRL(WOLFSSL* ssl, int options)
4404:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_EnableCRL");
4406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
4407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerEnableCRL(ssl->ctx->cm, options);
4408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4410:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 168


4411:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4412:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4413:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_DisableCRL(WOLFSSL* ssl)
4414:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_DisableCRL");
4416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
4417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerDisableCRL(ssl->ctx->cm);
4418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4420:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4421:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4422:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4423:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_LoadCRL(WOLFSSL* ssl, const char* path, int type, int monitor)
4424:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_LoadCRL");
4426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
4427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerLoadCRL(ssl->ctx->cm, path, type, monitor);
4428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4429:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4430:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4431:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4432:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4433:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetCRL_Cb(WOLFSSL* ssl, CbMissingCRL cb)
4434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4435:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetCRL_Cb");
4436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
4437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerSetCRL_Cb(ssl->ctx->cm, cb);
4438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4440:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4441:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4442:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4443:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_EnableCRL(WOLFSSL_CTX* ctx, int options)
4444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_EnableCRL");
4446:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
4447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerEnableCRL(ctx->cm, options);
4448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4450:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4451:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4452:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4453:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_DisableCRL(WOLFSSL_CTX* ctx)
4454:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_DisableCRL");
4456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
4457:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerDisableCRL(ctx->cm);
4458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4460:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4461:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4462:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4463:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_LoadCRL(WOLFSSL_CTX* ctx, const char* path,
4464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         int type, int monitor)
4465:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_LoadCRL");
4467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 169


4468:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerLoadCRL(ctx->cm, path, type, monitor);
4469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4471:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4472:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4473:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4474:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetCRL_Cb(WOLFSSL_CTX* ctx, CbMissingCRL cb)
4475:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4476:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_SetCRL_Cb");
4477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx)
4478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerSetCRL_Cb(ctx->cm, cb);
4479:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
4480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4481:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4482:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4483:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4484:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_CRL */
4485:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4486:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4487:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DER_LOAD
4488:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4489:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Add format parameter to allow DER load of CA files */
4490:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_der_load_verify_locations(WOLFSSL_CTX* ctx, const char* file,
4491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           int format)
4492:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_der_load_verify_locations");
4494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || file == NULL)
4495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
4496:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ProcessFile(ctx, file, format, CA_TYPE, NULL, 0, NULL) == SSL_SUCCESS)
4498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4499:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
4501:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4502:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4503:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_DER_LOAD */
4504:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4505:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4506:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_CERT_GEN
4507:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4508:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* load pem cert from file into der buffer, return der size or error */
4509:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_PemCertToDer(const char* fileName, unsigned char* derBuf, int derSz)
4510:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4511:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo* info = NULL;
4513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[1]; /* force XMALLOC */
4514:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
4515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     EncryptedInfo info[1];
4516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[FILE_BUFFER_SIZE];
4517:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*  fileBuf = staticBuffer;
4519:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    dynamic = 0;
4520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret     = 0;
4521:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ecc     = 0;
4522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long   sz      = 0;
4523:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file    = XFOPEN(fileName, "rb");
4524:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer* converted = NULL;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 170


4525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4526:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_PemCertToDer");
4527:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) {
4529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = SSL_BAD_FILE;
4530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
4532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFSEEK(file, 0, XSEEK_END);
4533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz = XFTELL(file);
4534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XREWIND(file);
4535:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (sz < 0) {
4537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_BAD_FILE;
4538:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (sz > (long)sizeof(staticBuffer)) {
4540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             fileBuf = (byte*)XMALLOC(sz, 0, DYNAMIC_TYPE_FILE);
4541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (fileBuf == NULL)
4542:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = MEMORY_E;
4543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
4544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 dynamic = 1;
4545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         
4547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret == 0) {
4548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ret = (int)XFREAD(fileBuf, sz, 1, file)) < 0) {
4549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = SSL_BAD_FILE;
4550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
4551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
4552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifdef WOLFSSL_SMALL_STACK
4553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 info = (EncryptedInfo*)XMALLOC(sizeof(EncryptedInfo), NULL,
4554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                DYNAMIC_TYPE_TMP_BUFFER);
4555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (info == NULL)
4556:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = MEMORY_E;
4557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
4558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
4559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 {
4560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = PemToDer(fileBuf, sz, CA_TYPE, &converted,
4561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    0, info, &ecc);
4562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #ifdef WOLFSSL_SMALL_STACK
4563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XFREE(info, NULL, DYNAMIC_TYPE_TMP_BUFFER);
4564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #endif
4565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
4566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
4567:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret == 0) {
4569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (converted->length < (word32)derSz) {
4570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XMEMCPY(derBuf, converted->buffer, converted->length);
4571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = converted->length;
4572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
4573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
4574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = BUFFER_E;
4575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
4576:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&converted);
4578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4579:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
4581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (dynamic)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 171


4582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(fileBuf, 0, DYNAMIC_TYPE_FILE);
4583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4584:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4587:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4588:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_CERT_GEN */
4589:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4590:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_CERT_EXT
4591:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_FILESYSTEM
4592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* load pem public key from file into der buffer, return der size or error */
4593:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_PemPubKeyToDer(const char* fileName,
4594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            unsigned char* derBuf, int derSz)
4595:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4596:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
4597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[1]; /* force XMALLOC */
4598:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
4599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[FILE_BUFFER_SIZE];
4600:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*  fileBuf = staticBuffer;
4602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    dynamic = 0;
4603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret     = 0;
4604:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long   sz      = 0;
4605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file    = XFOPEN(fileName, "rb");
4606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer* converted = NULL;
4607:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_PemPubKeyToDer");
4609:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) {
4611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = SSL_BAD_FILE;
4612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
4614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFSEEK(file, 0, XSEEK_END);
4615:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz = XFTELL(file);
4616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XREWIND(file);
4617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (sz < 0) {
4619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_BAD_FILE;
4620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4621:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (sz > (long)sizeof(staticBuffer)) {
4622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             fileBuf = (byte*)XMALLOC(sz, 0, DYNAMIC_TYPE_FILE);
4623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (fileBuf == NULL)
4624:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = MEMORY_E;
4625:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
4626:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 dynamic = 1;
4627:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret == 0) {
4629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ret = (int)XFREAD(fileBuf, sz, 1, file)) < 0)
4630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = SSL_BAD_FILE;
4631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
4632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = PemToDer(fileBuf, sz, PUBLICKEY_TYPE, &converted,
4633:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                0, NULL, NULL);
4634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret == 0) {
4636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (converted->length < (word32)derSz) {
4637:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XMEMCPY(derBuf, converted->buffer, converted->length);
4638:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = converted->length;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 172


4639:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
4640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
4641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = BUFFER_E;
4642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
4643:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&converted);
4645:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4646:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
4648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (dynamic)
4649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(fileBuf, 0, DYNAMIC_TYPE_FILE);
4650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4651:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4653:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4654:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_FILESYSTEM */
4655:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4656:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Return bytes written to buff or < 0 for error */
4657:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_PubKeyPemToDer(const unsigned char* pem, int pemSz,
4658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            unsigned char* buff, int buffSz)
4659:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret;
4661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer* der = NULL;
4662:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_PubKeyPemToDer");
4664:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (pem == NULL || buff == NULL || buffSz <= 0) {
4666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad pem der args");
4667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4669:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = PemToDer(pem, pemSz, PUBLICKEY_TYPE, &der, NULL, NULL, NULL);
4671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0) {
4672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Pem To Der");
4673:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4674:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
4675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (der->length <= (word32)buffSz) {
4676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buff, der->buffer, der->length);
4677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = der->length;
4678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
4680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad der length");
4681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = BAD_FUNC_ARG;
4682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4684:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeDer(&der);
4686:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4687:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4688:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4689:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_CERT_EXT */
4690:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4691:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_use_certificate_file(WOLFSSL_CTX* ctx, const char* file,
4692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      int format)
4693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_use_certificate_file");
4695:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ProcessFile(ctx, file, format, CERT_TYPE, NULL, 0, NULL) == SSL_SUCCESS)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 173


4696:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
4699:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4700:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4701:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4702:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_use_PrivateKey_file(WOLFSSL_CTX* ctx, const char* file,
4703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                     int format)
4704:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4705:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_use_PrivateKey_file");
4706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ProcessFile(ctx, file, format, PRIVATEKEY_TYPE, NULL, 0, NULL)
4707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     == SSL_SUCCESS)
4708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4709:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
4711:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4712:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4713:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4714:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* get cert chaining depth using ssl struct */
4715:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** long wolfSSL_get_verify_depth(WOLFSSL* ssl)
4716:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if(ssl == NULL) {
4718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4719:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4720:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return MAX_CHAIN_DEPTH;
4721:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4722:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4723:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4724:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* get cert chaining depth using ctx struct */
4725:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** long wolfSSL_CTX_get_verify_depth(WOLFSSL_CTX* ctx)
4726:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4727:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if(ctx == NULL) {
4728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return MAX_CHAIN_DEPTH;
4731:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4732:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4733:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4734:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_use_certificate_chain_file(WOLFSSL_CTX* ctx, const char* file)
4735:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    /* process up to MAX_CHAIN_DEPTH plus subject cert */
4737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    WOLFSSL_ENTER("wolfSSL_CTX_use_certificate_chain_file");
4738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    if (ProcessFile(ctx, file, SSL_FILETYPE_PEM,CERT_TYPE,NULL,1, NULL)
4739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    == SSL_SUCCESS)
4740:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return SSL_SUCCESS;
4741:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4742:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    return SSL_FAILURE;
4743:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4744:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4745:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4746:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DH
4747:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4748:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* server Diffie-Hellman parameters */
4749:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int wolfSSL_SetTmpDH_file_wrapper(WOLFSSL_CTX* ctx, WOLFSSL* ssl,
4750:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                         const char* fname, int format)
4751:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4752:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 174


4753:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[1]; /* force heap usage */
4754:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
4755:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte   staticBuffer[FILE_BUFFER_SIZE];
4756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
4757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*  myBuffer = staticBuffer;
4758:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    dynamic = 0;
4759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret;
4760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long   sz = 0;
4761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file;
4762:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || fname == NULL)
4764:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4765:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "rb");
4767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) return SSL_BAD_FILE;
4768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFSEEK(file, 0, XSEEK_END);
4769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz = XFTELL(file);
4770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XREWIND(file);
4771:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4772:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz > (long)sizeof(staticBuffer)) {
4773:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Getting dynamic buffer");
4774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         myBuffer = (byte*) XMALLOC(sz, ctx->heap, DYNAMIC_TYPE_FILE);
4775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (myBuffer == NULL) {
4776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFCLOSE(file);
4777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_BAD_FILE;
4778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
4779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         dynamic = 1;
4780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (sz < 0) {
4782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
4783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
4784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4785:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ( (ret = (int)XFREAD(myBuffer, sz, 1, file)) < 0)
4787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = SSL_BAD_FILE;
4788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
4789:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl)
4790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfSSL_SetTmpDH_buffer(ssl, myBuffer, sz, format);
4791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
4792:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfSSL_CTX_SetTmpDH_buffer(ctx, myBuffer, sz, format);
4793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4794:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
4796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (dynamic)
4797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(myBuffer, ctx->heap, DYNAMIC_TYPE_FILE);
4798:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
4800:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4801:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4802:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* server Diffie-Hellman parameters */
4803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetTmpDH_file(WOLFSSL* ssl, const char* fname, int format)
4804:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
4806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4807:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_SetTmpDH_file_wrapper(ssl->ctx, ssl, fname, format);
4809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 175


4810:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4812:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* server Diffie-Hellman parameters */
4813:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetTmpDH_file(WOLFSSL_CTX* ctx, const char* fname, int format)
4814:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_SetTmpDH_file_wrapper(ctx, NULL, fname, format);
4816:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4817:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4818:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_DH */
4819:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4821:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef OPENSSL_EXTRA
4822:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* put SSL type in extra for now, not very common */
4823:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4824:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_use_certificate_file(WOLFSSL* ssl, const char* file, int format)
4825:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_use_certificate_file");
4827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ProcessFile(ssl->ctx, file, format, CERT_TYPE,
4828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl, 0, NULL) == SSL_SUCCESS)
4829:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4830:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
4832:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4833:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_use_PrivateKey_file(WOLFSSL* ssl, const char* file, int format)
4836:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_use_PrivateKey_file");
4838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ProcessFile(ssl->ctx, file, format, PRIVATEKEY_TYPE,
4839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl, 0, NULL) == SSL_SUCCESS)
4840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4841:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
4843:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4844:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4845:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4846:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_use_certificate_chain_file(WOLFSSL* ssl, const char* file)
4847:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    /* process up to MAX_CHAIN_DEPTH plus subject cert */
4849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    WOLFSSL_ENTER("wolfSSL_use_certificate_chain_file");
4850:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    if (ProcessFile(ssl->ctx, file, SSL_FILETYPE_PEM, CERT_TYPE,
4851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl, 1, NULL) == SSL_SUCCESS)
4852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return SSL_SUCCESS;
4853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4854:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    return SSL_FAILURE;
4855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4856:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4857:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4858:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4859:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ECC
4860:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4861:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Set Temp CTX EC-DHE size in octets, should be 20 - 66 for 160 - 521 bit */
4862:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_SetTmpEC_DHE_Sz(WOLFSSL_CTX* ctx, word16 sz)
4863:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || sz < ECC_MINSIZE || sz > ECC_MAXSIZE)
4865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4866:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 176


4867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->eccTempKeySz = sz;
4868:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
4870:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4871:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4872:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4873:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Set Temp SSL EC-DHE size in octets, should be 20 - 66 for 160 - 521 bit */
4874:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetTmpEC_DHE_Sz(WOLFSSL* ssl, word16 sz)
4875:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4876:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || sz < ECC_MINSIZE || sz > ECC_MAXSIZE)
4877:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
4878:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4879:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->eccTempKeySz = sz;
4880:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
4882:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4883:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4884:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_ECC */
4885:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4886:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4887:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4888:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_use_RSAPrivateKey_file(WOLFSSL_CTX* ctx,const char* file,
4890:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    int format)
4891:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4892:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_CTX_use_RSAPrivateKey_file");
4893:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4894:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_CTX_use_PrivateKey_file(ctx, file, format);
4895:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4896:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4897:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4898:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_use_RSAPrivateKey_file(WOLFSSL* ssl, const char* file, int format)
4899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_use_RSAPrivateKey_file");
4901:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_use_PrivateKey_file(ssl, file, format);
4903:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4904:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4905:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA */
4906:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4907:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_NTRU
4908:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4909:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_use_NTRUPrivateKey_file(WOLFSSL_CTX* ctx, const char* file)
4910:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
4911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_use_NTRUPrivateKey_file");
4912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
4913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
4914:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ProcessFile(ctx, file, SSL_FILETYPE_RAW, PRIVATEKEY_TYPE, NULL, 0, NULL)
4916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                          == SSL_SUCCESS) {
4917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->haveNTRU = 1;
4918:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
4919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4920:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
4922:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
4923:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 177


4924:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_NTRU */
4925:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4926:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4927:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_FILESYSTEM */
4928:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4929:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4930:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_CTX_set_verify(WOLFSSL_CTX* ctx, int mode, VerifyCallback vc)
4931:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4428              		.loc 1 4931 0
 4429              		.cfi_startproc
 4430              	.LVL537:
4932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_set_verify");
4933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode & SSL_VERIFY_PEER) {
 4431              		.loc 1 4933 0
 4432 0000 0123     		mov	r3, #1
4931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_set_verify");
 4433              		.loc 1 4931 0
 4434 0002 10B5     		push	{r4, lr}
 4435              		.cfi_def_cfa_offset 8
 4436              		.cfi_offset 4, -8
 4437              		.cfi_offset 14, -4
 4438              		.loc 1 4933 0
 4439 0004 1942     		tst	r1, r3
 4440 0006 05D0     		beq	.L518
4934:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->verifyPeer = 1;
 4441              		.loc 1 4934 0
 4442 0008 441D     		add	r4, r0, #5
 4443 000a E377     		strb	r3, [r4, #31]
4935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->verifyNone = 0;  /* in case previously set */
 4444              		.loc 1 4935 0
 4445 000c 0024     		mov	r4, #0
 4446 000e 831D     		add	r3, r0, #6
 4447 0010 DC77     		strb	r4, [r3, #31]
 4448 0012 05E0     		b	.L519
 4449              	.L518:
4936:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4937:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4938:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode == SSL_VERIFY_NONE) {
 4450              		.loc 1 4938 0
 4451 0014 0029     		cmp	r1, #0
 4452 0016 03D1     		bne	.L519
4939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->verifyNone = 1;
 4453              		.loc 1 4939 0
 4454 0018 841D     		add	r4, r0, #6
 4455 001a E377     		strb	r3, [r4, #31]
4940:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->verifyPeer = 0;  /* in case previously set */
 4456              		.loc 1 4940 0
 4457 001c 431D     		add	r3, r0, #5
 4458 001e D977     		strb	r1, [r3, #31]
 4459              	.L519:
4941:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4942:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4943:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode & SSL_VERIFY_FAIL_IF_NO_PEER_CERT)
 4460              		.loc 1 4943 0
 4461 0020 8B07     		lsl	r3, r1, #30
 4462 0022 02D5     		bpl	.L520
4944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->failNoCert = 1;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 178


 4463              		.loc 1 4944 0
 4464 0024 0124     		mov	r4, #1
 4465 0026 C31D     		add	r3, r0, #7
 4466 0028 DC77     		strb	r4, [r3, #31]
 4467              	.L520:
4945:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode & SSL_VERIFY_FAIL_EXCEPT_PSK) {
 4468              		.loc 1 4946 0
 4469 002a 0B07     		lsl	r3, r1, #28
 4470 002c 05D5     		bpl	.L521
4947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->failNoCert    = 0; /* fail on all is set to fail on PSK */
 4471              		.loc 1 4947 0
 4472 002e 0021     		mov	r1, #0
 4473              	.LVL538:
 4474 0030 C31D     		add	r3, r0, #7
 4475 0032 D977     		strb	r1, [r3, #31]
4948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->failNoCertxPSK = 1;
 4476              		.loc 1 4948 0
 4477 0034 0131     		add	r1, r1, #1
 4478 0036 0133     		add	r3, r3, #1
 4479 0038 D977     		strb	r1, [r3, #31]
 4480              	.L521:
4949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4950:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->verifyCallback = vc;
 4481              		.loc 1 4951 0
 4482 003a 0264     		str	r2, [r0, #64]
4952:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4483              		.loc 1 4952 0
 4484              		@ sp needed
 4485 003c 10BD     		pop	{r4, pc}
 4486              		.cfi_endproc
 4487              	.LFE77:
 4488              		.size	wolfSSL_CTX_set_verify, .-wolfSSL_CTX_set_verify
 4489              		.section	.text.wolfSSL_set_verify,"ax",%progbits
 4490              		.align	1
 4491              		.global	wolfSSL_set_verify
 4492              		.code	16
 4493              		.thumb_func
 4494              		.type	wolfSSL_set_verify, %function
 4495              	wolfSSL_set_verify:
 4496              	.LFB78:
4953:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4954:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_set_verify(WOLFSSL* ssl, int mode, VerifyCallback vc)
4956:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4497              		.loc 1 4956 0
 4498              		.cfi_startproc
 4499              	.LVL539:
 4500 0000 30B5     		push	{r4, r5, lr}
 4501              		.cfi_def_cfa_offset 12
 4502              		.cfi_offset 4, -12
 4503              		.cfi_offset 5, -8
 4504              		.cfi_offset 14, -4
4957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_set_verify");
4958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode & SSL_VERIFY_PEER) {
 4505              		.loc 1 4958 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 179


 4506 0002 CB07     		lsl	r3, r1, #31
 4507 0004 06D5     		bpl	.L529
4959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.verifyPeer = 1;
 4508              		.loc 1 4959 0
 4509 0006 8324     		mov	r4, #131
4960:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.verifyNone = 0;  /* in case previously set */
 4510              		.loc 1 4960 0
 4511 0008 2025     		mov	r5, #32
4959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.verifyPeer = 1;
 4512              		.loc 1 4959 0
 4513 000a A400     		lsl	r4, r4, #2
 4514 000c 035D     		ldrb	r3, [r0, r4]
 4515              		.loc 1 4960 0
 4516 000e 2B43     		orr	r3, r5
 4517 0010 6D19     		add	r5, r5, r5
 4518 0012 07E0     		b	.L539
 4519              	.L529:
4961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4962:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode == SSL_VERIFY_NONE) {
 4520              		.loc 1 4963 0
 4521 0014 0029     		cmp	r1, #0
 4522 0016 07D1     		bne	.L530
4964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.verifyNone = 1;
 4523              		.loc 1 4964 0
 4524 0018 8324     		mov	r4, #131
4965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.verifyPeer = 0;  /* in case previously set */
 4525              		.loc 1 4965 0
 4526 001a 4025     		mov	r5, #64
4964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.verifyNone = 1;
 4527              		.loc 1 4964 0
 4528 001c A400     		lsl	r4, r4, #2
 4529 001e 035D     		ldrb	r3, [r0, r4]
 4530              		.loc 1 4965 0
 4531 0020 2B43     		orr	r3, r5
 4532 0022 203D     		sub	r5, r5, #32
 4533              	.L539:
 4534 0024 AB43     		bic	r3, r5
 4535 0026 0355     		strb	r3, [r0, r4]
 4536              	.L530:
4966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4967:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode & SSL_VERIFY_FAIL_IF_NO_PEER_CERT)
 4537              		.loc 1 4968 0
 4538 0028 8B07     		lsl	r3, r1, #30
 4539 002a 06D5     		bpl	.L531
4969:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.failNoCert = 1;
 4540              		.loc 1 4969 0
 4541 002c 8324     		mov	r4, #131
 4542 002e 8025     		mov	r5, #128
 4543 0030 A400     		lsl	r4, r4, #2
 4544 0032 035D     		ldrb	r3, [r0, r4]
 4545 0034 6D42     		neg	r5, r5
 4546 0036 2B43     		orr	r3, r5
 4547 0038 0355     		strb	r3, [r0, r4]
 4548              	.L531:
4970:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 180


4971:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode & SSL_VERIFY_FAIL_EXCEPT_PSK) {
 4549              		.loc 1 4971 0
 4550 003a 0B07     		lsl	r3, r1, #28
 4551 003c 0AD5     		bpl	.L532
4972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.failNoCert    = 0; /* fail on all is set to fail on PSK */
 4552              		.loc 1 4972 0
 4553 003e 8321     		mov	r1, #131
 4554              	.LVL540:
 4555 0040 7F23     		mov	r3, #127
 4556 0042 8900     		lsl	r1, r1, #2
 4557 0044 445C     		ldrb	r4, [r0, r1]
 4558 0046 2340     		and	r3, r4
4973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.failNoCertxPSK = 1;
 4559              		.loc 1 4973 0
 4560 0048 0124     		mov	r4, #1
4972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.failNoCert    = 0; /* fail on all is set to fail on PSK */
 4561              		.loc 1 4972 0
 4562 004a 4354     		strb	r3, [r0, r1]
 4563              		.loc 1 4973 0
 4564 004c 4118     		add	r1, r0, r1
 4565 004e 4B78     		ldrb	r3, [r1, #1]
 4566 0050 2343     		orr	r3, r4
 4567 0052 4B70     		strb	r3, [r1, #1]
 4568              	.L532:
4974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
4975:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4976:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->verifyCallback = vc;
 4569              		.loc 1 4976 0
 4570 0054 0262     		str	r2, [r0, #32]
4977:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4571              		.loc 1 4977 0
 4572              		@ sp needed
 4573 0056 30BD     		pop	{r4, r5, pc}
 4574              		.cfi_endproc
 4575              	.LFE78:
 4576              		.size	wolfSSL_set_verify, .-wolfSSL_set_verify
 4577              		.section	.text.wolfSSL_SetCertCbCtx,"ax",%progbits
 4578              		.align	1
 4579              		.global	wolfSSL_SetCertCbCtx
 4580              		.code	16
 4581              		.thumb_func
 4582              		.type	wolfSSL_SetCertCbCtx, %function
 4583              	wolfSSL_SetCertCbCtx:
 4584              	.LFB79:
4978:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4979:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4980:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* store user ctx for verify callback */
4981:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_SetCertCbCtx(WOLFSSL* ssl, void* ctx)
4982:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4585              		.loc 1 4982 0
 4586              		.cfi_startproc
 4587              	.LVL541:
4983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetCertCbCtx");
4984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 4588              		.loc 1 4984 0
 4589 0000 0028     		cmp	r0, #0
 4590 0002 00D0     		beq	.L540
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 181


4985:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->verifyCbCtx = ctx;
 4591              		.loc 1 4985 0
 4592 0004 C161     		str	r1, [r0, #28]
 4593              	.L540:
4986:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4594              		.loc 1 4986 0
 4595              		@ sp needed
 4596 0006 7047     		bx	lr
 4597              		.cfi_endproc
 4598              	.LFE79:
 4599              		.size	wolfSSL_SetCertCbCtx, .-wolfSSL_SetCertCbCtx
 4600              		.section	.text.wolfSSL_CTX_SetCACb,"ax",%progbits
 4601              		.align	1
 4602              		.global	wolfSSL_CTX_SetCACb
 4603              		.code	16
 4604              		.thumb_func
 4605              		.type	wolfSSL_CTX_SetCACb, %function
 4606              	wolfSSL_CTX_SetCACb:
 4607              	.LFB80:
4987:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4988:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4989:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* store context CA Cache addition callback */
4990:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_CTX_SetCACb(WOLFSSL_CTX* ctx, CallbackCACache cb)
4991:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4608              		.loc 1 4991 0
 4609              		.cfi_startproc
 4610              	.LVL542:
4992:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx && ctx->cm)
 4611              		.loc 1 4992 0
 4612 0000 0028     		cmp	r0, #0
 4613 0002 03D0     		beq	.L545
 4614              		.loc 1 4992 0 is_stmt 0 discriminator 1
 4615 0004 8369     		ldr	r3, [r0, #24]
 4616 0006 002B     		cmp	r3, #0
 4617 0008 00D0     		beq	.L545
4993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->cm->caCacheCallback = cb;
 4618              		.loc 1 4993 0 is_stmt 1
 4619 000a 1964     		str	r1, [r3, #64]
 4620              	.L545:
4994:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4621              		.loc 1 4994 0
 4622              		@ sp needed
 4623 000c 7047     		bx	lr
 4624              		.cfi_endproc
 4625              	.LFE80:
 4626              		.size	wolfSSL_CTX_SetCACb, .-wolfSSL_CTX_SetCACb
 4627              		.section	.text.wolfSSL_load_error_strings,"ax",%progbits
 4628              		.align	1
 4629              		.global	wolfSSL_load_error_strings
 4630              		.code	16
 4631              		.thumb_func
 4632              		.type	wolfSSL_load_error_strings, %function
 4633              	wolfSSL_load_error_strings:
 4634              	.LFB81:
4995:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4996:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4997:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(PERSIST_CERT_CACHE)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 182


4998:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
4999:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_FILESYSTEM)
5000:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5001:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist cert cache to file */
5002:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_save_cert_cache(WOLFSSL_CTX* ctx, const char* fname)
5003:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_save_cert_cache");
5005:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || fname == NULL)
5007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5008:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return CM_SaveCertCache(ctx->cm, fname);
5010:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5011:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5012:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5013:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist cert cache from file */
5014:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_restore_cert_cache(WOLFSSL_CTX* ctx, const char* fname)
5015:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_restore_cert_cache");
5017:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || fname == NULL)
5019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5020:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5021:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return CM_RestoreCertCache(ctx->cm, fname);
5022:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5023:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5024:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_FILESYSTEM */
5025:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5026:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist cert cache to memory */
5027:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_memsave_cert_cache(WOLFSSL_CTX* ctx, void* mem,
5028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    int sz, int* used)
5029:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_memsave_cert_cache");
5031:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || mem == NULL || used == NULL || sz <= 0)
5033:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5034:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return CM_MemSaveCertCache(ctx->cm, mem, sz, used);
5036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5037:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5038:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5039:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Restore cert cache from memory */
5040:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_memrestore_cert_cache(WOLFSSL_CTX* ctx, const void* mem, int sz)
5041:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_memrestore_cert_cache");
5043:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL || mem == NULL || sz <= 0)
5045:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5046:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5047:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return CM_MemRestoreCertCache(ctx->cm, mem, sz);
5048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5049:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5050:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5051:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* get how big the the cert cache save buffer needs to be */
5052:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_get_cert_cache_memsize(WOLFSSL_CTX* ctx)
5053:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_get_cert_cache_memsize");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 183


5055:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
5057:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5058:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return CM_GetCertCacheMemSize(ctx->cm);
5060:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5061:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5062:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* PERSISTE_CERT_CACHE */
5063:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_CERTS */
5064:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5065:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5066:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SESSION_CACHE
5067:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5068:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_SESSION* wolfSSL_get_session(WOLFSSL* ssl)
5069:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5070:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_session");
5071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
5072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return GetSession(ssl, 0);
5073:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5074:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
5075:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5076:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5077:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5078:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_session(WOLFSSL* ssl, WOLFSSL_SESSION* session)
5079:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5080:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_set_session");
5081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (session)
5082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SetSession(ssl, session);
5083:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5084:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;
5085:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5086:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5087:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5088:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
5089:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5090:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Associate client session with serverID, find existing or store for saving
5091:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    if newSession flag on, don't reuse existing session
5092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    SSL_SUCCESS on ok */
5093:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetServerID(WOLFSSL* ssl, const byte* id, int len, int newSession)
5094:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_SESSION* session = NULL;
5096:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetServerID");
5098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || id == NULL || len <= 0)
5100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5101:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5102:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (newSession == 0) {
5103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         session = GetSessionClient(ssl, id, len);
5104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (session) {
5105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (SetSession(ssl, session) != SSL_SUCCESS) {
5106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("SetSession failed");
5107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 session = NULL;
5108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
5109:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5111:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 184


5112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (session == NULL) {
5113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Valid ServerID not cached already");
5114:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->session.idLen = (word16)min(SERVER_ID_LEN, (word32)len);
5116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(ssl->session.serverID, id, ssl->session.idLen);
5117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5118:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5120:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5121:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5122:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_CLIENT_CACHE */
5123:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5124:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(PERSIST_SESSION_CACHE)
5125:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5126:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* for persistence, if changes to layout need to increment and modify
5127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    save_session_cache() and restore_session_cache and memory versions too */
5128:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #define WOLFSSL_CACHE_VERSION 2
5129:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5130:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Session Cache Header information */
5131:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** typedef struct {
5132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int version;     /* cache layout version id */
5133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int rows;        /* session rows */
5134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int columns;     /* session columns */
5135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int sessionSz;   /* sizeof WOLFSSL_SESSION */
5136:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** } cache_header_t;
5137:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5138:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* current persistence layout is:
5139:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    1) cache_header_t
5141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    2) SessionCache
5142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    3) ClientCache
5143:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    update WOLFSSL_CACHE_VERSION if change layout for the following
5145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    PERSISTENT_SESSION_CACHE functions
5146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** */
5147:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5149:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* get how big the the session cache save buffer needs to be */
5150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_session_cache_memsize(void)
5151:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int sz  = (int)(sizeof(SessionCache) + sizeof(cache_header_t));
5153:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_CLIENT_CACHE
5155:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz += (int)(sizeof(ClientCache));
5156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
5157:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return sz;
5159:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5160:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5161:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5162:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist session cache to memory */
5163:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_memsave_session_cache(void* mem, int sz)
5164:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int i;
5166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header_t cache_header;
5167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionRow*    row  = (SessionRow*)((byte*)mem + sizeof(cache_header));
5168:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 185


5169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ClientRow*     clRow;
5170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
5171:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5172:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_memsave_session_cache");
5173:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz < wolfSSL_get_session_cache_memsize()) {
5175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Memory buffer too small");
5176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BUFFER_E;
5177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5178:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5179:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.version   = WOLFSSL_CACHE_VERSION;
5180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.rows      = SESSION_ROWS;
5181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.columns   = SESSIONS_PER_ROW;
5182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.sessionSz = (int)sizeof(WOLFSSL_SESSION);
5183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(mem, &cache_header, sizeof(cache_header));
5184:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
5186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache mutex lock failed");
5187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5189:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i)
5191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(row++, SessionCache + i, sizeof(SessionRow));
5192:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5193:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
5194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     clRow = (ClientRow*)row;
5195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i)
5196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(clRow++, ClientCache + i, sizeof(ClientRow));
5197:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
5198:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&session_mutex);
5200:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_memsave_session_cache", SSL_SUCCESS);
5202:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5203:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5204:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5205:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5206:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5207:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Restore the persistent session cache from memory */
5208:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_memrestore_session_cache(const void* mem, int sz)
5209:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5210:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    i;
5211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header_t cache_header;
5212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionRow*    row  = (SessionRow*)((byte*)mem + sizeof(cache_header));
5213:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
5214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ClientRow*     clRow;
5215:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
5216:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_memrestore_session_cache");
5218:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz < wolfSSL_get_session_cache_memsize()) {
5220:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Memory buffer too small");
5221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BUFFER_E;
5222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5223:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(&cache_header, mem, sizeof(cache_header));
5225:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cache_header.version   != WOLFSSL_CACHE_VERSION ||
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 186


5226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cache_header.rows      != SESSION_ROWS ||
5227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cache_header.columns   != SESSIONS_PER_ROW ||
5228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cache_header.sessionSz != (int)sizeof(WOLFSSL_SESSION)) {
5229:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache header match failed");
5231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return CACHE_MATCH_ERROR;
5232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5233:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5234:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
5235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache mutex lock failed");
5236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5238:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i)
5240:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(SessionCache + i, row++, sizeof(SessionRow));
5241:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5242:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
5243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     clRow = (ClientRow*)row;
5244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i)
5245:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(ClientCache + i, clRow++, sizeof(ClientRow));
5246:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
5247:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&session_mutex);
5249:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_memrestore_session_cache", SSL_SUCCESS);
5251:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5253:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5254:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5255:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_FILESYSTEM)
5256:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5257:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist session cache to file */
5258:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* doesn't use memsave because of additional memory use */
5259:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_save_session_cache(const char *fname)
5260:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file;
5262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret;
5263:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    rc = SSL_SUCCESS;
5264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    i;
5265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header_t cache_header;
5266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5267:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_save_session_cache");
5268:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5269:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "w+b");
5270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) {
5271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Couldn't open session cache save file");
5272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
5273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.version   = WOLFSSL_CACHE_VERSION;
5275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.rows      = SESSION_ROWS;
5276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.columns   = SESSIONS_PER_ROW;
5277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header.sessionSz = (int)sizeof(WOLFSSL_SESSION);
5278:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5279:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* cache header */
5280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = (int)XFWRITE(&cache_header, sizeof cache_header, 1, file);
5281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret != 1) {
5282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache header file write failed");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 187


5283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5284:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return FWRITE_ERROR;
5285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5286:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
5288:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache mutex lock failed");
5289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5292:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* session cache */
5294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i) {
5295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = (int)XFWRITE(SessionCache + i, sizeof(SessionRow), 1, file);
5296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != 1) {
5297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Session cache member file write failed");
5298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             rc = FWRITE_ERROR;
5299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
5300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5301:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5302:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5303:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
5304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* client cache */
5305:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i) {
5306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = (int)XFWRITE(ClientCache + i, sizeof(ClientRow), 1, file);
5307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != 1) {
5308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Client cache member file write failed");
5309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             rc = FWRITE_ERROR;
5310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
5311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5313:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_CLIENT_CACHE */
5314:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&session_mutex);
5316:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5317:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
5318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_save_session_cache", rc);
5319:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return rc;
5321:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5322:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5323:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5324:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Restore the persistent session cache from file */
5325:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* doesn't use memstore because of additional memory use */
5326:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_restore_session_cache(const char *fname)
5327:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE  file;
5329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    rc = SSL_SUCCESS;
5330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    ret;
5331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    i;
5332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     cache_header_t cache_header;
5333:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_restore_session_cache");
5335:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "rb");
5337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) {
5338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Couldn't open session cache save file");
5339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 188


5340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* cache header */
5342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = (int)XFREAD(&cache_header, sizeof cache_header, 1, file);
5343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret != 1) {
5344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache header file read failed");
5345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return FREAD_ERROR;
5347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cache_header.version   != WOLFSSL_CACHE_VERSION ||
5349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cache_header.rows      != SESSION_ROWS ||
5350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cache_header.columns   != SESSIONS_PER_ROW ||
5351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cache_header.sessionSz != (int)sizeof(WOLFSSL_SESSION)) {
5352:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache header match failed");
5354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return CACHE_MATCH_ERROR;
5356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5357:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
5359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Session cache mutex lock failed");
5360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5363:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* session cache */
5365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i) {
5366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = (int)XFREAD(SessionCache + i, sizeof(SessionRow), 1, file);
5367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != 1) {
5368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Session cache member file read failed");
5369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMSET(SessionCache, 0, sizeof SessionCache);
5370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             rc = FREAD_ERROR;
5371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
5372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5374:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5375:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
5376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* client cache */
5377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < cache_header.rows; ++i) {
5378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = (int)XFREAD(ClientCache + i, sizeof(ClientRow), 1, file);
5379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != 1) {
5380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Client cache member file read failed");
5381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMSET(ClientCache, 0, sizeof ClientCache);
5382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             rc = FREAD_ERROR;
5383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
5384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5385:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5386:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_CLIENT_CACHE */
5388:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&session_mutex);
5390:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
5392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_restore_session_cache", rc);
5393:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return rc;
5395:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5396:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 189


5397:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_FILESYSTEM */
5398:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* PERSIST_SESSION_CACHE */
5399:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SESSION_CACHE */
5400:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5401:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5402:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_load_error_strings(void)   /* compatibility only */
5403:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {}
 4635              		.loc 1 5403 0
 4636              		.cfi_startproc
 4637              		.loc 1 5403 0
 4638              		@ sp needed
 4639 0000 7047     		bx	lr
 4640              		.cfi_endproc
 4641              	.LFE81:
 4642              		.size	wolfSSL_load_error_strings, .-wolfSSL_load_error_strings
 4643              		.section	.text.wolfSSL_library_init,"ax",%progbits
 4644              		.align	1
 4645              		.global	wolfSSL_library_init
 4646              		.code	16
 4647              		.thumb_func
 4648              		.type	wolfSSL_library_init, %function
 4649              	wolfSSL_library_init:
 4650              	.LFB82:
5404:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5405:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5406:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_library_init(void)
5407:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4651              		.loc 1 5407 0
 4652              		.cfi_startproc
 4653 0000 08B5     		push	{r3, lr}
 4654              		.cfi_def_cfa_offset 8
 4655              		.cfi_offset 3, -8
 4656              		.cfi_offset 14, -4
5408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_library_init");
5409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (wolfSSL_Init() == SSL_SUCCESS)
 4657              		.loc 1 5409 0
 4658 0002 FFF7FEFF 		bl	wolfSSL_Init
 4659              	.LVL543:
 4660 0006 0128     		cmp	r0, #1
 4661 0008 01D0     		beq	.L555
5410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
5411:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
5412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
 4662              		.loc 1 5412 0
 4663 000a 0120     		mov	r0, #1
 4664 000c 4042     		neg	r0, r0
 4665              	.L555:
5413:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4666              		.loc 1 5413 0
 4667              		@ sp needed
 4668 000e 08BD     		pop	{r3, pc}
 4669              		.cfi_endproc
 4670              	.LFE82:
 4671              		.size	wolfSSL_library_init, .-wolfSSL_library_init
 4672              		.section	.text.wolfSSL_CTX_set_cipher_list,"ax",%progbits
 4673              		.align	1
 4674              		.global	wolfSSL_CTX_set_cipher_list
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 190


 4675              		.code	16
 4676              		.thumb_func
 4677              		.type	wolfSSL_CTX_set_cipher_list, %function
 4678              	wolfSSL_CTX_set_cipher_list:
 4679              	.LFB83:
5414:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5415:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5416:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SECRET_CALLBACK
5417:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5418:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_session_secret_cb(WOLFSSL* ssl, SessionSecretCb cb, void* ctx)
5419:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_set_session_secret_cb");
5421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
5422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
5423:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->sessionSecretCb = cb;
5425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->sessionSecretCtx = ctx;
5426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* If using a pre-set key, assume session resumption. */
5427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->session.sessionIDSz = 0;
5428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.resuming = 1;
5429:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5430:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5431:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5432:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5433:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
5434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5435:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5436:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SESSION_CACHE
5437:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5438:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* on by default if built in but allow user to turn off */
5439:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** long wolfSSL_CTX_set_session_cache_mode(WOLFSSL_CTX* ctx, long mode)
5440:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_CTX_set_session_cache_mode");
5442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode == SSL_SESS_CACHE_OFF)
5443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->sessionCacheOff = 1;
5444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mode == SSL_SESS_CACHE_NO_AUTO_CLEAR)
5446:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->sessionCacheFlushOff = 1;
5447:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5449:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5450:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5451:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SESSION_CACHE */
5452:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5453:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5454:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_CERTS)
5455:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(PERSIST_CERT_CACHE)
5456:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5457:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5458:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #define WOLFSSL_CACHE_CERT_VERSION 1
5459:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5460:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** typedef struct {
5461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int version;                 /* cache cert layout version id */
5462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int rows;                    /* hash table rows, CA_TABLE_SIZE */
5463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int columns[CA_TABLE_SIZE];  /* columns per row on list */
5464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int signerSz;                /* sizeof Signer object */
5465:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** } CertCacheHeader;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 191


5466:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5467:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* current cert persistence layout is:
5468:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    1) CertCacheHeader
5470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    2) caTable
5471:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    update WOLFSSL_CERT_CACHE_VERSION if change layout for the following
5473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    PERSIST_CERT_CACHE functions
5474:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** */
5475:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5476:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5477:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Return memory needed to persist this signer, have lock */
5478:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int GetSignerMemory(Signer* signer)
5479:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int sz = sizeof(signer->pubKeySize) + sizeof(signer->keyOID)
5481:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****            + sizeof(signer->nameLen)    + sizeof(signer->subjectNameHash);
5482:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5483:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_SKID)
5484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz += (int)sizeof(signer->subjectKeyIdHash);
5485:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
5486:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* add dynamic bytes needed */
5488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz += signer->pubKeySize;
5489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz += signer->nameLen;
5490:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return sz;
5492:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5493:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5494:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5495:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Return memory needed to persist this row, have lock */
5496:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int GetCertCacheRowMemory(Signer* row)
5497:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int sz = 0;
5499:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (row) {
5501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz += GetSignerMemory(row);
5502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         row = row->next;
5503:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5504:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return sz;
5506:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5507:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5508:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5509:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* get the size of persist cert cache, have lock */
5510:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int GetCertCacheMemSize(WOLFSSL_CERT_MANAGER* cm)
5511:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int sz;
5513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int i;
5514:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz = sizeof(CertCacheHeader);
5516:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < CA_TABLE_SIZE; i++)
5518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz += GetCertCacheRowMemory(cm->caTable[i]);
5519:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return sz;
5521:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5522:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 192


5523:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Store cert cache header columns with number of items per list, have lock */
5525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE void SetCertHeaderColumns(WOLFSSL_CERT_MANAGER* cm, int* columns)
5526:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5527:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int     i;
5528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* row;
5529:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < CA_TABLE_SIZE; i++) {
5531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int count = 0;
5532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         row = cm->caTable[i];
5533:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while (row) {
5535:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ++count;
5536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             row = row->next;
5537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5538:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         columns[i] = count;
5539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5540:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5541:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5542:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5543:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Restore whole cert row from memory, have lock, return bytes consumed,
5544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    < 0 on error, have lock */
5545:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int RestoreCertRow(WOLFSSL_CERT_MANAGER* cm, byte* current,
5546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  int row, int listSz, const byte* end)
5547:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int idx = 0;
5549:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (listSz < 0) {
5551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Row header corrupted, negative value");
5552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return PARSE_ERROR;
5553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5554:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (listSz) {
5556:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Signer* signer;
5557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte*   start = current + idx;  /* for end checks on this signer */
5558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int     minSz = sizeof(signer->pubKeySize) + sizeof(signer->keyOID) +
5559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                       sizeof(signer->nameLen) + sizeof(signer->subjectNameHash);
5560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
5561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 minSz += (int)sizeof(signer->subjectKeyIdHash);
5562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
5563:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (start + minSz > end) {
5565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Would overread restore buffer");
5566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BUFFER_E;
5567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signer = MakeSigner(cm->heap);
5569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (signer == NULL)
5570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
5571:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* pubKeySize */
5573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(&signer->pubKeySize, current + idx, sizeof(signer->pubKeySize));
5574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx += (int)sizeof(signer->pubKeySize);
5575:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* keyOID */
5577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(&signer->keyOID, current + idx, sizeof(signer->keyOID));
5578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx += (int)sizeof(signer->keyOID);
5579:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 193


5580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* pulicKey */
5581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (start + minSz + signer->pubKeySize > end) {
5582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Would overread restore buffer");
5583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeSigner(signer, cm->heap);
5584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BUFFER_E;
5585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5586:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signer->publicKey = (byte*)XMALLOC(signer->pubKeySize, cm->heap,
5587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                            DYNAMIC_TYPE_KEY);
5588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (signer->publicKey == NULL) {
5589:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeSigner(signer, cm->heap);
5590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
5591:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5593:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(signer->publicKey, current + idx, signer->pubKeySize);
5594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx += signer->pubKeySize;
5595:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* nameLen */
5597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(&signer->nameLen, current + idx, sizeof(signer->nameLen));
5598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx += (int)sizeof(signer->nameLen);
5599:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* name */
5601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (start + minSz + signer->pubKeySize + signer->nameLen > end) {
5602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Would overread restore buffer");
5603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeSigner(signer, cm->heap);
5604:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BUFFER_E;
5605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signer->name = (char*)XMALLOC(signer->nameLen, cm->heap,
5607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       DYNAMIC_TYPE_SUBJECT_CN);
5608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (signer->name == NULL) {
5609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeSigner(signer, cm->heap);
5610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
5611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5612:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(signer->name, current + idx, signer->nameLen);
5614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx += signer->nameLen;
5615:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* subjectNameHash */
5617:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(signer->subjectNameHash, current + idx, SIGNER_DIGEST_SIZE);
5618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx += SIGNER_DIGEST_SIZE;
5619:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
5621:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* subjectKeyIdHash */
5622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(signer->subjectKeyIdHash, current + idx,SIGNER_DIGEST_SIZE);
5623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             idx += SIGNER_DIGEST_SIZE;
5624:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
5625:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5626:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         signer->next = cm->caTable[row];
5627:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cm->caTable[row] = signer;
5628:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         --listSz;
5630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5631:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return idx;
5633:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5635:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5636:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Store whole cert row into memory, have lock, return bytes added */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 194


5637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int StoreCertRow(WOLFSSL_CERT_MANAGER* cm, byte* current, int row)
5638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5639:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int     added  = 0;
5640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     Signer* list   = cm->caTable[row];
5641:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     while (list) {
5643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(current + added, &list->pubKeySize, sizeof(list->pubKeySize));
5644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         added += (int)sizeof(list->pubKeySize);
5645:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(current + added, &list->keyOID,     sizeof(list->keyOID));
5647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         added += (int)sizeof(list->keyOID);
5648:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(current + added, list->publicKey, list->pubKeySize);
5650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         added += list->pubKeySize;
5651:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(current + added, &list->nameLen, sizeof(list->nameLen));
5653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         added += (int)sizeof(list->nameLen);
5654:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5655:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(current + added, list->name, list->nameLen);
5656:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         added += list->nameLen;
5657:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(current + added, list->subjectNameHash, SIGNER_DIGEST_SIZE);
5659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         added += SIGNER_DIGEST_SIZE;
5660:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_SKID
5662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(current + added, list->subjectKeyIdHash,SIGNER_DIGEST_SIZE);
5663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             added += SIGNER_DIGEST_SIZE;
5664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
5665:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         list = list->next;
5667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5668:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return added;
5670:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5671:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5672:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5673:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist cert cache to memory, have lock */
5674:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE int DoMemSaveCertCache(WOLFSSL_CERT_MANAGER* cm,
5675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      void* mem, int sz)
5676:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int realSz;
5678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
5679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int i;
5680:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("DoMemSaveCertCache");
5682:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     realSz = GetCertCacheMemSize(cm);
5684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (realSz > sz) {
5685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Mem output buffer too small");
5686:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = BUFFER_E;
5687:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
5689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte*           current;
5690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         CertCacheHeader hdr;
5691:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hdr.version  = WOLFSSL_CACHE_CERT_VERSION;
5693:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hdr.rows     = CA_TABLE_SIZE;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 195


5694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SetCertHeaderColumns(cm, hdr.columns);
5695:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hdr.signerSz = (int)sizeof(Signer);
5696:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5697:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(mem, &hdr, sizeof(CertCacheHeader));
5698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         current = (byte*)mem + sizeof(CertCacheHeader);
5699:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         for (i = 0; i < CA_TABLE_SIZE; ++i)
5701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             current += StoreCertRow(cm, current, i);
5702:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5703:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
5705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5706:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5707:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5708:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if !defined(NO_FILESYSTEM)
5709:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5710:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist cert cache to file */
5711:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int CM_SaveCertCache(WOLFSSL_CERT_MANAGER* cm, const char* fname)
5712:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5713:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE file;
5714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   rc = SSL_SUCCESS;
5715:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   memSz;
5716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* mem;
5717:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("CM_SaveCertCache");
5719:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5720:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "w+b");
5721:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) {
5722:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        WOLFSSL_MSG("Couldn't open cert cache save file");
5723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return SSL_BAD_FILE;
5724:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5725:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0) {
5727:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("LockMutex on caLock failed");
5728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5731:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     memSz = GetCertCacheMemSize(cm);
5733:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     mem   = (byte*)XMALLOC(memSz, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
5734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mem == NULL) {
5735:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Alloc for tmp buffer failed");
5736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         rc = MEMORY_E;
5737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     } else {
5738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         rc = DoMemSaveCertCache(cm, mem, memSz);
5739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (rc == SSL_SUCCESS) {
5740:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int ret = (int)XFWRITE(mem, memSz, 1, file);
5741:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret != 1) {
5742:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Cert cache file write failed");
5743:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 rc = FWRITE_ERROR;
5744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
5745:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(mem, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
5747:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5748:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
5750:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 196


5751:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5752:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return rc;
5753:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5754:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5755:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Restore cert cache from file */
5757:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int CM_RestoreCertCache(WOLFSSL_CERT_MANAGER* cm, const char* fname)
5758:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE file;
5760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   rc = SSL_SUCCESS;
5761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   ret;
5762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   memSz;
5763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* mem;
5764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("CM_RestoreCertCache");
5766:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "rb");
5768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE) {
5769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        WOLFSSL_MSG("Couldn't open cert cache save file");
5770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return SSL_BAD_FILE;
5771:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5772:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5773:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFSEEK(file, 0, XSEEK_END);
5774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     memSz = (int)XFTELL(file);
5775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XREWIND(file);
5776:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (memSz <= 0) {
5778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad file size");
5779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_BAD_FILE;
5781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5782:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     mem = (byte*)XMALLOC(memSz, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
5784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (mem == NULL) {
5785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Alloc for tmp buffer failed");
5786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
5787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return MEMORY_E;
5788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = (int)XFREAD(mem, memSz, 1, file);
5791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret != 1) {
5792:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Cert file read error");
5793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         rc = FREAD_ERROR;
5794:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     } else {
5795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         rc = CM_MemRestoreCertCache(cm, mem, memSz);
5796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (rc != SSL_SUCCESS) {
5797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Mem restore cert cache failed");
5798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5800:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5801:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFREE(mem, cm->heap, DYNAMIC_TYPE_TMP_BUFFER);
5802:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
5803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5804:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return rc;
5805:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5806:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5807:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_FILESYSTEM */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 197


5808:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5810:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Persist cert cache to memory */
5811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int CM_MemSaveCertCache(WOLFSSL_CERT_MANAGER* cm, void* mem, int sz, int* used)
5812:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5813:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
5814:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("CM_MemSaveCertCache");
5816:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0) {
5818:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("LockMutex on caLock failed");
5819:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5820:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5821:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = DoMemSaveCertCache(cm, mem, sz);
5823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret == SSL_SUCCESS)
5824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *used  = GetCertCacheMemSize(cm);
5825:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
5827:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
5829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5830:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5831:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5832:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Restore cert cache from memory */
5833:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int CM_MemRestoreCertCache(WOLFSSL_CERT_MANAGER* cm, const void* mem, int sz)
5834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5835:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
5836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int i;
5837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     CertCacheHeader* hdr = (CertCacheHeader*)mem;
5838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*            current = (byte*)mem + sizeof(CertCacheHeader);
5839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte*            end     = (byte*)mem + sz;  /* don't go over */
5840:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("CM_MemRestoreCertCache");
5842:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (current > end) {
5844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Cert Cache Memory buffer too small");
5845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BUFFER_E;
5846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5847:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (hdr->version  != WOLFSSL_CACHE_CERT_VERSION ||
5849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hdr->rows     != CA_TABLE_SIZE ||
5850:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hdr->signerSz != (int)sizeof(Signer)) {
5851:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Cert Cache Memory header mismatch");
5853:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return CACHE_MATCH_ERROR;
5854:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5856:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0) {
5857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("LockMutex on caLock failed");
5858:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5859:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5860:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5861:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     FreeSignerTable(cm->caTable, CA_TABLE_SIZE, cm->heap);
5862:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < CA_TABLE_SIZE; ++i) {
5864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int added = RestoreCertRow(cm, current, i, hdr->columns[i], end);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 198


5865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (added < 0) {
5866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("RestoreCertRow error");
5867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = added;
5868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
5869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5870:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         current += added;
5871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5872:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5873:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
5874:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
5876:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5877:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5878:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5879:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* get how big the the cert cache save buffer needs to be */
5880:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int CM_GetCertCacheMemSize(WOLFSSL_CERT_MANAGER* cm)
5881:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int sz;
5883:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("CM_GetCertCacheMemSize");
5885:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5886:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&cm->caLock) != 0) {
5887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("LockMutex on caLock failed");
5888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
5889:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5890:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5891:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz = GetCertCacheMemSize(cm);
5892:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&cm->caLock);
5894:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5895:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return sz;
5896:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5897:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5898:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* PERSIST_CERT_CACHE */
5899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_CERTS */
5900:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5901:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5902:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_set_cipher_list(WOLFSSL_CTX* ctx, const char* list)
5903:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4680              		.loc 1 5903 0
 4681              		.cfi_startproc
 4682              	.LVL544:
 4683 0000 70B5     		push	{r4, r5, r6, lr}
 4684              		.cfi_def_cfa_offset 16
 4685              		.cfi_offset 4, -16
 4686              		.cfi_offset 5, -12
 4687              		.cfi_offset 6, -8
 4688              		.cfi_offset 14, -4
5904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_set_cipher_list");
5905:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5906:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* alloc/init on demand only */
5907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx->suites == NULL) {
 4689              		.loc 1 5907 0
 4690 0002 C569     		ldr	r5, [r0, #28]
5903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_CTX_set_cipher_list");
 4691              		.loc 1 5903 0
 4692 0004 041C     		mov	r4, r0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 199


 4693 0006 0E1C     		mov	r6, r1
 4694              		.loc 1 5907 0
 4695 0008 002D     		cmp	r5, #0
 4696 000a 0BD1     		bne	.L560
5908:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->suites = (Suites*)XMALLOC(sizeof(Suites), ctx->heap,
 4697              		.loc 1 5908 0
 4698 000c AA20     		mov	r0, #170
 4699              	.LVL545:
 4700 000e 4000     		lsl	r0, r0, #1
 4701 0010 FFF7FEFF 		bl	wolfSSL_Malloc
 4702              	.LVL546:
 4703 0014 E061     		str	r0, [r4, #28]
5909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        DYNAMIC_TYPE_SUITES);
5910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->suites == NULL) {
5911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Memory alloc for Suites failed");
5912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FAILURE;
 4704              		.loc 1 5912 0
 4705 0016 031E     		sub	r3, r0, #0
5910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Memory alloc for Suites failed");
 4706              		.loc 1 5910 0
 4707 0018 0BD0     		beq	.L561
5913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
5914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMSET(ctx->suites, 0, sizeof(Suites));
 4708              		.loc 1 5914 0
 4709 001a AA22     		mov	r2, #170
 4710 001c 291C     		mov	r1, r5
 4711 001e 5200     		lsl	r2, r2, #1
 4712 0020 FFF7FEFF 		bl	memset
 4713              	.LVL547:
 4714              	.L560:
5915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5916:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (SetCipherList(ctx->suites, list)) ? SSL_SUCCESS : SSL_FAILURE;
 4715              		.loc 1 5917 0
 4716 0024 E069     		ldr	r0, [r4, #28]
 4717 0026 311C     		mov	r1, r6
 4718 0028 FFF7FEFF 		bl	SetCipherList
 4719              	.LVL548:
 4720 002c 031C     		mov	r3, r0
 4721 002e 581E     		sub	r0, r3, #1
 4722 0030 8341     		sbc	r3, r3, r0
 4723              	.L561:
5918:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4724              		.loc 1 5918 0
 4725 0032 181C     		mov	r0, r3
 4726              		@ sp needed
 4727              	.LVL549:
 4728              	.LVL550:
 4729 0034 70BD     		pop	{r4, r5, r6, pc}
 4730              		.cfi_endproc
 4731              	.LFE83:
 4732              		.size	wolfSSL_CTX_set_cipher_list, .-wolfSSL_CTX_set_cipher_list
 4733              		.section	.text.wolfSSL_set_cipher_list,"ax",%progbits
 4734              		.align	1
 4735              		.global	wolfSSL_set_cipher_list
 4736              		.code	16
 4737              		.thumb_func
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 200


 4738              		.type	wolfSSL_set_cipher_list, %function
 4739              	wolfSSL_set_cipher_list:
 4740              	.LFB84:
5919:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5920:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5921:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_cipher_list(WOLFSSL* ssl, const char* list)
5922:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 4741              		.loc 1 5922 0
 4742              		.cfi_startproc
 4743              	.LVL551:
 4744 0000 08B5     		push	{r3, lr}
 4745              		.cfi_def_cfa_offset 8
 4746              		.cfi_offset 3, -8
 4747              		.cfi_offset 14, -4
5923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_set_cipher_list");
5924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return (SetCipherList(ssl->suites, list)) ? SSL_SUCCESS : SSL_FAILURE;
 4748              		.loc 1 5924 0
 4749 0002 4068     		ldr	r0, [r0, #4]
 4750              	.LVL552:
 4751 0004 FFF7FEFF 		bl	SetCipherList
 4752              	.LVL553:
5925:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4753              		.loc 1 5925 0
 4754              		@ sp needed
5924:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 4755              		.loc 1 5924 0
 4756 0008 431E     		sub	r3, r0, #1
 4757 000a 9841     		sbc	r0, r0, r3
 4758              		.loc 1 5925 0
 4759 000c 08BD     		pop	{r3, pc}
 4760              		.cfi_endproc
 4761              	.LFE84:
 4762              		.size	wolfSSL_set_cipher_list, .-wolfSSL_set_cipher_list
 4763              		.section	.text.wolfSSL_connect,"ax",%progbits
 4764              		.align	1
 4765              		.global	wolfSSL_connect
 4766              		.code	16
 4767              		.thumb_func
 4768              		.type	wolfSSL_connect, %function
 4769              	wolfSSL_connect:
 4770              	.LFB85:
5926:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5927:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5928:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef WOLFSSL_LEANPSK
5929:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
5930:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5931:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls_get_current_timeout(WOLFSSL* ssl)
5932:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
5934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->dtls_timeout;
5936:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5937:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5938:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5939:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* user may need to alter init dtls recv timeout, SSL_SUCCESS on ok */
5940:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls_set_timeout_init(WOLFSSL* ssl, int timeout)
5941:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 201


5942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || timeout < 0)
5943:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5944:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5945:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (timeout > ssl->dtls_timeout_max) {
5946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Can't set dtls timeout init greater than dtls timeout max");
5947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5949:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5950:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->dtls_timeout_init = timeout;
5951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->dtls_timeout = timeout;
5952:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5954:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5956:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5957:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* user may need to alter max dtls recv timeout, SSL_SUCCESS on ok */
5958:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls_set_timeout_max(WOLFSSL* ssl, int timeout)
5959:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5960:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL || timeout < 0)
5961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5962:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (timeout < ssl->dtls_timeout_init) {
5964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Can't set dtls timeout max less than dtls timeout init");
5965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
5966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5967:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->dtls_timeout_max = timeout;
5969:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5970:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
5971:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5972:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5973:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5974:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_dtls_got_timeout(WOLFSSL* ssl)
5975:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5976:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int result = SSL_SUCCESS;
5977:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5978:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DtlsMsgListDelete(ssl->dtls_msg_list, ssl->heap);
5979:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->dtls_msg_list = NULL;
5980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (DtlsPoolTimeout(ssl) < 0 || DtlsPoolSend(ssl) < 0) {
5981:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         result = SSL_FATAL_ERROR;
5982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
5983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return result;
5984:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
5985:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5986:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* DTLS */
5987:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* LEANPSK */
5988:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5989:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5990:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_DTLS) && !defined(NO_WOLFSSL_SERVER)
5991:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
5992:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Not an SSL function, return 0 for success, error code otherwise */
5993:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Prereq: ssl's RNG needs to be initialized. */
5994:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_DTLS_SetCookieSecret(WOLFSSL* ssl,
5995:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const byte* secret, word32 secretSz)
5996:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
5997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_DTLS_SetCookieSecret");
5998:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 202


5999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL) {
6000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("need a SSL object");
6001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
6002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6003:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (secret != NULL && secretSz == 0) {
6005:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("can't have a new secret without a size");
6006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
6007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6008:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* If secretSz is 0, use the default size. */
6010:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (secretSz == 0)
6011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         secretSz = COOKIE_SECRET_SZ;
6012:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (secretSz != ssl->buffers.dtlsCookieSecret.length) {
6014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte* newSecret;
6015:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.dtlsCookieSecret.buffer != NULL) {
6017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ForceZero(ssl->buffers.dtlsCookieSecret.buffer,
6018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                       ssl->buffers.dtlsCookieSecret.length);
6019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(ssl->buffers.dtlsCookieSecret.buffer,
6020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                   ssl->heap, DYNAMIC_TYPE_NONE);
6021:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6022:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6023:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         newSecret = (byte*)XMALLOC(secretSz, ssl->heap,DYNAMIC_TYPE_COOKIE_PWD);
6024:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (newSecret == NULL) {
6025:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.dtlsCookieSecret.buffer = NULL;
6026:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.dtlsCookieSecret.length = 0;
6027:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("couldn't allocate new cookie secret");
6028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_ERROR;
6029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->buffers.dtlsCookieSecret.buffer = newSecret;
6031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->buffers.dtlsCookieSecret.length = secretSz;
6032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6033:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6034:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* If the supplied secret is NULL, randomly generate a new secret. */
6035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (secret == NULL)
6036:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_RNG_GenerateBlock(ssl->rng,
6037:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              ssl->buffers.dtlsCookieSecret.buffer, secretSz);
6038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
6039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(ssl->buffers.dtlsCookieSecret.buffer, secret, secretSz);
6040:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6041:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_DTLS_SetCookieSecret", 0);
6042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
6043:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6044:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6045:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_DTLS && !NO_WOLFSSL_SERVER */
6046:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6047:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* client only parts */
6049:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
6050:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6051:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
6052:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_METHOD* wolfSSLv3_client_method(void)
6053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
6054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_METHOD* method =
6055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD),
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 203


6056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         0, DYNAMIC_TYPE_METHOD);
6057:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSLv3_client_method");
6058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (method)
6059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             InitSSL_Method(method, MakeSSLv3());
6060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return method;
6061:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6062:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
6063:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6064:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_DTLS
6065:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_OLD_TLS
6067:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_METHOD* wolfDTLSv1_client_method(void)
6068:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
6069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_METHOD* method =
6070:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD),
6071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         0, DYNAMIC_TYPE_METHOD);
6072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ENTER("DTLSv1_client_method");
6073:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (method)
6074:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 InitSSL_Method(method, MakeDTLSv1());
6075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return method;
6076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6077:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif  /* NO_OLD_TLS */
6078:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6079:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_METHOD* wolfDTLSv1_2_client_method(void)
6080:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
6081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_METHOD* method =
6082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD),
6083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         0, DYNAMIC_TYPE_METHOD);
6084:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ENTER("DTLSv1_2_client_method");
6085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (method)
6086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 InitSSL_Method(method, MakeDTLSv1_2());
6087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return method;
6088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
6090:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6091:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* please see note at top of README if you get an error from connect */
6093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_connect(WOLFSSL* ssl)
6094:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 4771              		.loc 1 6094 0
 4772              		.cfi_startproc
 4773              	.LVL554:
 4774 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4775              		.cfi_def_cfa_offset 24
 4776              		.cfi_offset 3, -24
 4777              		.cfi_offset 4, -20
 4778              		.cfi_offset 5, -16
 4779              		.cfi_offset 6, -12
 4780              		.cfi_offset 7, -8
 4781              		.cfi_offset 14, -4
6095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int neededState;
6096:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_connect()");
6098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef HAVE_ERRNO_H
6100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             errno = 0;
6101:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 204


6102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.side != WOLFSSL_CLIENT_END) {
 4782              		.loc 1 6103 0
 4783 0002 8323     		mov	r3, #131
 4784 0004 9B00     		lsl	r3, r3, #2
 4785 0006 C35C     		ldrb	r3, [r0, r3]
 4786 0008 DB06     		lsl	r3, r3, #27
 4787 000a 00D4     		bmi	.LCB4789
 4788 000c B9E0     		b	.L597	@long jump
 4789              	.LCB4789:
6104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ERROR(ssl->error = SIDE_ERROR);
6105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
6106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6107:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_DTLS
6109:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->version.major == DTLS_MAJOR) {
6110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.dtls   = 1;
6111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.tls    = 1;
6112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.tls1_1 = 1;
6113:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (DtlsPoolInit(ssl) != 0) {
6115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->error = MEMORY_ERROR;
6116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6118:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6120:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
6121:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.outputBuffer.length > 0) {
 4790              		.loc 1 6122 0
 4791 000e 436E     		ldr	r3, [r0, #100]
 4792 0010 041C     		mov	r4, r0
 4793 0012 002B     		cmp	r3, #0
 4794 0014 0ED0     		beq	.L568
6123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendBuffered(ssl)) == 0) {
 4795              		.loc 1 6123 0
 4796 0016 FFF7FEFF 		bl	SendBuffered
 4797              	.LVL555:
 4798 001a 231C     		mov	r3, r4
 4799 001c FC33     		add	r3, r3, #252
 4800 001e 1862     		str	r0, [r3, #32]
 4801 0020 0028     		cmp	r0, #0
 4802 0022 00D0     		beq	.LCB4802
 4803 0024 ADE0     		b	.L597	@long jump
 4804              	.LCB4802:
6124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* fragOffset is non-zero when sending fragments. On the last
6125:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  * fragment, fragOffset is zero again, and the state can be
6126:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  * advanced. */
6127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->fragOffset == 0) {
 4805              		.loc 1 6127 0
 4806 0026 9B6B     		ldr	r3, [r3, #56]
 4807 0028 002B     		cmp	r3, #0
 4808 002a 03D1     		bne	.L568
6128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->options.connectState++;
 4809              		.loc 1 6128 0
 4810 002c 564A     		ldr	r2, .L609
 4811 002e A35C     		ldrb	r3, [r4, r2]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 205


 4812 0030 0133     		add	r3, r3, #1
 4813 0032 A354     		strb	r3, [r4, r2]
 4814              	.L568:
6129:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("connect state: "
6130:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 "Advanced from last buffered fragment send");
6131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else {
6133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("connect state: "
6134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 "Not advanced, more fragments to send");
6135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
6138:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6142:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ssl->options.connectState) {
 4815              		.loc 1 6143 0
 4816 0034 544D     		ldr	r5, .L609
 4817 0036 605D     		ldrb	r0, [r4, r5]
 4818 0038 0A28     		cmp	r0, #10
 4819 003a 00D9     		bls	.LCB4815
 4820 003c A1E0     		b	.L597	@long jump
 4821              	.LCB4815:
 4822 003e FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 4823              	.L572:
 4824 0042 06       		.byte	(.L571-.L572)/2
 4825 0043 11       		.byte	(.L573-.L572)/2
 4826 0044 2F       		.byte	(.L574-.L572)/2
 4827 0045 34       		.byte	(.L575-.L572)/2
 4828 0046 36       		.byte	(.L576-.L572)/2
 4829 0047 47       		.byte	(.L577-.L572)/2
 4830 0048 57       		.byte	(.L578-.L572)/2
 4831 0049 68       		.byte	(.L579-.L572)/2
 4832 004a 72       		.byte	(.L580-.L572)/2
 4833 004b 85       		.byte	(.L593-.L572)/2
 4834 004c 8C       		.byte	(.L582-.L572)/2
 4835 004d 00       		.p2align 1
 4836              	.L571:
6144:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CONNECT_BEGIN :
6146:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* always send client hello first */
6147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendClientHello(ssl)) != 0) {
 4837              		.loc 1 6147 0
 4838 004e 201C     		mov	r0, r4
 4839 0050 FFF7FEFF 		bl	SendClientHello
 4840              	.LVL556:
 4841 0054 231C     		mov	r3, r4
 4842 0056 FC33     		add	r3, r3, #252
 4843 0058 1862     		str	r0, [r3, #32]
 4844 005a 0028     		cmp	r0, #0
 4845 005c 00D0     		beq	.LCB4829
 4846 005e 90E0     		b	.L597	@long jump
 4847              	.LCB4829:
6148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 206


6150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6151:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = CLIENT_HELLO_SENT;
 4848              		.loc 1 6151 0
 4849 0060 0123     		mov	r3, #1
 4850 0062 6355     		strb	r3, [r4, r5]
 4851              	.L573:
6152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: CLIENT_HELLO_SENT");
6153:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CLIENT_HELLO_SENT :
6155:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             neededState = ssl->options.resuming ? SERVER_FINISHED_COMPLETE :
 4852              		.loc 1 6155 0
 4853 0064 494F     		ldr	r7, .L609+4
 4854 0066 E65D     		ldrb	r6, [r4, r7]
 4855 0068 7607     		lsl	r6, r6, #29
 4856 006a F60F     		lsr	r6, r6, #31
 4857 006c 0536     		add	r6, r6, #5
 4858              	.L584:
 4859              	.LVL557:
6156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           SERVER_HELLODONE_COMPLETE;
6157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifdef WOLFSSL_DTLS
6158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* In DTLS, when resuming, we can go straight to FINISHED,
6159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  * or do a cookie exchange and then skip to FINISHED, assume
6160:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  * we need the cookie exchange first. */
6161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->options.dtls)
6162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     neededState = SERVER_HELLOVERIFYREQUEST_COMPLETE;
6163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* get response */
6165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             while (ssl->options.serverState < neededState) {
 4860              		.loc 1 6165 0
 4861 006e 8523     		mov	r3, #133
 4862 0070 9B00     		lsl	r3, r3, #2
 4863 0072 E35C     		ldrb	r3, [r4, r3]
 4864 0074 B342     		cmp	r3, r6
 4865 0076 11DA     		bge	.L608
6166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = ProcessReply(ssl)) < 0) {
 4866              		.loc 1 6166 0
 4867 0078 201C     		mov	r0, r4
 4868 007a FFF7FEFF 		bl	ProcessReply
 4869              	.LVL558:
 4870 007e 231C     		mov	r3, r4
 4871 0080 FC33     		add	r3, r3, #252
 4872 0082 1862     		str	r0, [r3, #32]
 4873 0084 0028     		cmp	r0, #0
 4874 0086 7CDB     		blt	.L597
6167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6168:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6170:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* if resumption failed, reset needed state */
6171:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else if (neededState == SERVER_FINISHED_COMPLETE)
 4875              		.loc 1 6171 0
 4876 0088 062E     		cmp	r6, #6
 4877 008a F0D1     		bne	.L584
6172:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (!ssl->options.resuming) {
 4878              		.loc 1 6172 0
 4879 008c E35D     		ldrb	r3, [r4, r7]
 4880 008e 5A07     		lsl	r2, r3, #29
 4881 0090 EDD4     		bmi	.L584
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 207


6173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         if (!ssl->options.dtls)
6174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             neededState = SERVER_HELLODONE_COMPLETE;
 4882              		.loc 1 6174 0
 4883 0092 013E     		sub	r6, r6, #1
 4884              	.LVL559:
6173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         if (!ssl->options.dtls)
 4885              		.loc 1 6173 0
 4886 0094 5B06     		lsl	r3, r3, #25
 4887 0096 EAD5     		bpl	.L584
6175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         else
6176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             neededState = SERVER_HELLOVERIFYREQUEST_COMPLETE;
 4888              		.loc 1 6176 0
 4889 0098 043E     		sub	r6, r6, #4
 4890              	.LVL560:
 4891 009a E8E7     		b	.L584
 4892              	.LVL561:
 4893              	.L608:
6177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6179:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = HELLO_AGAIN;
 4894              		.loc 1 6180 0
 4895 009c 0223     		mov	r3, #2
 4896 009e 6355     		strb	r3, [r4, r5]
 4897              	.LVL562:
 4898              	.L574:
6181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: HELLO_AGAIN");
6182:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case HELLO_AGAIN :
6184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->options.certOnly)
 4899              		.loc 1 6184 0
 4900 00a0 8423     		mov	r3, #132
 4901 00a2 9B00     		lsl	r3, r3, #2
 4902 00a4 E35C     		ldrb	r3, [r4, r3]
 4903 00a6 5B07     		lsl	r3, r3, #29
 4904 00a8 69D4     		bmi	.L607
 4905              	.L575:
6185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_SUCCESS;
6186:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifdef WOLFSSL_DTLS
6188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->options.dtls) {
6189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     /* re-init hashes, exclude first hello and verify request */
6190:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_OLD_TLS
6191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wc_InitMd5(&ssl->hsHashes->hashMd5);
6192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = wc_InitSha(&ssl->hsHashes->hashSha))
6193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                          != 0) {
6194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6197:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (IsAtLeastTLSv1_2(ssl)) {
6199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         #ifndef NO_SHA256
6200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             if ( (ssl->error = wc_InitSha256(
6201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                             &ssl->hsHashes->hashSha256)) != 0) {
6202:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 WOLFSSL_ERROR(ssl->error);
6203:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 return SSL_FATAL_ERROR;
6204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 208


6205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         #endif
6206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         #ifdef WOLFSSL_SHA384
6207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             if ( (ssl->error = wc_InitSha384(
6208:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                             &ssl->hsHashes->hashSha384)) != 0) {
6209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 WOLFSSL_ERROR(ssl->error);
6210:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 return SSL_FATAL_ERROR;
6211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             }
6212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         #endif
6213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         #ifdef WOLFSSL_SHA512
6214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             if ( (ssl->error = wc_InitSha512(
6215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                             &ssl->hsHashes->hashSha512)) != 0) {
6216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 WOLFSSL_ERROR(ssl->error);
6217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 return SSL_FATAL_ERROR;
6218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             }
6219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         #endif
6220:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = SendClientHello(ssl)) != 0) {
6222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6225:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6227:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = HELLO_AGAIN_REPLY;
6229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: HELLO_AGAIN_REPLY");
6230:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case HELLO_AGAIN_REPLY :
6232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifdef WOLFSSL_DTLS
6233:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->options.dtls) {
6234:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     neededState = ssl->options.resuming ?
6235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            SERVER_FINISHED_COMPLETE : SERVER_HELLODONE_COMPLETE;
6236:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     /* get response */
6238:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     while (ssl->options.serverState < neededState) {
6239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         if ( (ssl->error = ProcessReply(ssl)) < 0) {
6240:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 WOLFSSL_ERROR(ssl->error);
6241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 return SSL_FATAL_ERROR;
6242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         }
6243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         /* if resumption failed, reset needed state */
6244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         else if (neededState == SERVER_FINISHED_COMPLETE)
6245:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             if (!ssl->options.resuming)
6246:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 neededState = SERVER_HELLODONE_COMPLETE;
6247:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6250:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = FIRST_REPLY_DONE;
 4906              		.loc 1 6251 0
 4907 00aa 0423     		mov	r3, #4
 4908 00ac 6355     		strb	r3, [r4, r5]
 4909              	.L576:
6252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: FIRST_REPLY_DONE");
6253:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case FIRST_REPLY_DONE :
6255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifndef NO_CERTS
6256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->options.sendVerify) {
 4910              		.loc 1 6256 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 209


 4911 00ae 8323     		mov	r3, #131
 4912 00b0 9B00     		lsl	r3, r3, #2
 4913 00b2 E35C     		ldrb	r3, [r4, r3]
 4914 00b4 9B07     		lsl	r3, r3, #30
 4915 00b6 02D1     		bne	.L587
 4916              	.L588:
6257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = SendCertificate(ssl)) != 0) {
6258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("sent: certificate");
6262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6263:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = FIRST_REPLY_FIRST;
 4917              		.loc 1 6265 0
 4918 00b8 0523     		mov	r3, #5
 4919 00ba 6355     		strb	r3, [r4, r5]
 4920 00bc 08E0     		b	.L577
 4921              	.L587:
6257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = SendCertificate(ssl)) != 0) {
 4922              		.loc 1 6257 0
 4923 00be 201C     		mov	r0, r4
 4924 00c0 FFF7FEFF 		bl	SendCertificate
 4925              	.LVL563:
 4926 00c4 231C     		mov	r3, r4
 4927 00c6 FC33     		add	r3, r3, #252
 4928 00c8 1862     		str	r0, [r3, #32]
 4929 00ca 0028     		cmp	r0, #0
 4930 00cc F4D0     		beq	.L588
 4931 00ce 58E0     		b	.L597
 4932              	.L577:
6266:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: FIRST_REPLY_FIRST");
6267:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6268:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case FIRST_REPLY_FIRST :
6269:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.resuming) {
 4933              		.loc 1 6269 0
 4934 00d0 2E4B     		ldr	r3, .L609+4
 4935 00d2 E35C     		ldrb	r3, [r4, r3]
 4936 00d4 5B07     		lsl	r3, r3, #29
 4937 00d6 02D5     		bpl	.L589
 4938              	.L590:
6270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = SendClientKeyExchange(ssl)) != 0) {
6271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("sent: client key exchange");
6275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6276:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = FIRST_REPLY_SECOND;
 4939              		.loc 1 6277 0
 4940 00d8 0623     		mov	r3, #6
 4941 00da 6355     		strb	r3, [r4, r5]
 4942 00dc 08E0     		b	.L578
 4943              	.L589:
6270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = SendClientKeyExchange(ssl)) != 0) {
 4944              		.loc 1 6270 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 210


 4945 00de 201C     		mov	r0, r4
 4946 00e0 FFF7FEFF 		bl	SendClientKeyExchange
 4947              	.LVL564:
 4948 00e4 231C     		mov	r3, r4
 4949 00e6 FC33     		add	r3, r3, #252
 4950 00e8 1862     		str	r0, [r3, #32]
 4951 00ea 0028     		cmp	r0, #0
 4952 00ec F4D0     		beq	.L590
 4953 00ee 48E0     		b	.L597
 4954              	.L578:
6278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: FIRST_REPLY_SECOND");
6279:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case FIRST_REPLY_SECOND :
6281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifndef NO_CERTS
6282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->options.sendVerify) {
 4955              		.loc 1 6282 0
 4956 00f0 8323     		mov	r3, #131
 4957 00f2 9B00     		lsl	r3, r3, #2
 4958 00f4 E35C     		ldrb	r3, [r4, r3]
 4959 00f6 9B07     		lsl	r3, r3, #30
 4960 00f8 02D1     		bne	.L591
 4961              	.L592:
6283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = SendCertificateVerify(ssl)) != 0) {
6284:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("sent: certificate verify");
6288:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = FIRST_REPLY_THIRD;
 4962              		.loc 1 6290 0
 4963 00fa 0723     		mov	r3, #7
 4964 00fc 6355     		strb	r3, [r4, r5]
 4965 00fe 08E0     		b	.L579
 4966              	.L591:
6283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = SendCertificateVerify(ssl)) != 0) {
 4967              		.loc 1 6283 0
 4968 0100 201C     		mov	r0, r4
 4969 0102 FFF7FEFF 		bl	SendCertificateVerify
 4970              	.LVL565:
 4971 0106 231C     		mov	r3, r4
 4972 0108 FC33     		add	r3, r3, #252
 4973 010a 1862     		str	r0, [r3, #32]
 4974 010c 0028     		cmp	r0, #0
 4975 010e F4D0     		beq	.L592
 4976 0110 37E0     		b	.L597
 4977              	.L579:
6291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: FIRST_REPLY_THIRD");
6292:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case FIRST_REPLY_THIRD :
6294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendChangeCipher(ssl)) != 0) {
 4978              		.loc 1 6294 0
 4979 0112 201C     		mov	r0, r4
 4980 0114 FFF7FEFF 		bl	SendChangeCipher
 4981              	.LVL566:
 4982 0118 231C     		mov	r3, r4
 4983 011a FC33     		add	r3, r3, #252
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 211


 4984 011c 1862     		str	r0, [r3, #32]
 4985 011e 0028     		cmp	r0, #0
 4986 0120 2FD1     		bne	.L597
6295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("sent: change cipher spec");
6299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = FIRST_REPLY_FOURTH;
 4987              		.loc 1 6299 0
 4988 0122 0823     		mov	r3, #8
 4989 0124 6355     		strb	r3, [r4, r5]
 4990              	.L580:
6300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: FIRST_REPLY_FOURTH");
6301:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case FIRST_REPLY_FOURTH :
6303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendFinished(ssl)) != 0) {
 4991              		.loc 1 6303 0
 4992 0126 201C     		mov	r0, r4
 4993 0128 FFF7FEFF 		bl	SendFinished
 4994              	.LVL567:
 4995 012c 231C     		mov	r3, r4
 4996 012e FC33     		add	r3, r3, #252
 4997 0130 1862     		str	r0, [r3, #32]
 4998 0132 0028     		cmp	r0, #0
 4999 0134 25D1     		bne	.L597
6304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6305:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("sent: finished");
6308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = FINISHED_DONE;
 5000              		.loc 1 6308 0
 5001 0136 0923     		mov	r3, #9
 5002 0138 6355     		strb	r3, [r4, r5]
 5003 013a 07E0     		b	.L593
 5004              	.L594:
6309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: FINISHED_DONE");
6310:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case FINISHED_DONE :
6312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* get response */
6313:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             while (ssl->options.serverState < SERVER_FINISHED_COMPLETE)
6314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = ProcessReply(ssl)) < 0) {
 5005              		.loc 1 6314 0
 5006 013c 201C     		mov	r0, r4
 5007 013e FFF7FEFF 		bl	ProcessReply
 5008              	.LVL568:
 5009 0142 231C     		mov	r3, r4
 5010 0144 FC33     		add	r3, r3, #252
 5011 0146 1862     		str	r0, [r3, #32]
 5012 0148 0028     		cmp	r0, #0
 5013 014a 1ADB     		blt	.L597
 5014              	.L593:
6313:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = ProcessReply(ssl)) < 0) {
 5015              		.loc 1 6313 0
 5016 014c 8523     		mov	r3, #133
 5017 014e 9B00     		lsl	r3, r3, #2
 5018 0150 E35C     		ldrb	r3, [r4, r3]
 5019 0152 052B     		cmp	r3, #5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 212


 5020 0154 F2D9     		bls	.L594
6315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6317:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6318:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.connectState = SECOND_REPLY_DONE;
 5021              		.loc 1 6319 0
 5022 0156 0A23     		mov	r3, #10
 5023 0158 6355     		strb	r3, [r4, r5]
 5024              	.L582:
6320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("connect state: SECOND_REPLY_DONE");
6321:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case SECOND_REPLY_DONE:
6323:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_HANDSHAKE_DONE_CB
6324:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->hsDoneCb) {
 5025              		.loc 1 6324 0
 5026 015a A36A     		ldr	r3, [r4, #40]
 5027 015c 002B     		cmp	r3, #0
 5028 015e 07D0     		beq	.L595
 5029              	.LBB85:
6325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 int cbret = ssl->hsDoneCb(ssl, ssl->hsDoneCtx);
 5030              		.loc 1 6325 0
 5031 0160 201C     		mov	r0, r4
 5032 0162 E16A     		ldr	r1, [r4, #44]
 5033 0164 9847     		blx	r3
 5034              	.LVL569:
6326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (cbret < 0) {
 5035              		.loc 1 6326 0
 5036 0166 0028     		cmp	r0, #0
 5037 0168 02DA     		bge	.L595
6327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->error = cbret;
 5038              		.loc 1 6327 0
 5039 016a FC34     		add	r4, r4, #252
 5040              	.LVL570:
 5041 016c 2062     		str	r0, [r4, #32]
 5042 016e 08E0     		b	.L597
 5043              	.LVL571:
 5044              	.L595:
 5045              	.LBE85:
6328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("HandShake Done Cb don't continue error");
6329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6332:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_HANDSHAKE_DONE_CB */
6333:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.dtls) {
 5046              		.loc 1 6334 0
 5047 0170 064B     		ldr	r3, .L609+4
 5048 0172 E35C     		ldrb	r3, [r4, r3]
 5049 0174 5B06     		lsl	r3, r3, #25
 5050 0176 02D4     		bmi	.L607
6335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeHandshakeResources(ssl);
 5051              		.loc 1 6335 0
 5052 0178 201C     		mov	r0, r4
 5053 017a FFF7FEFF 		bl	FreeHandshakeResources
 5054              	.LVL572:
 5055              	.L607:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 213


6336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6337:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
6338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
6339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.dtlsHsRetain = 1;
6340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6341:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_DTLS */
6342:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_LEAVE("SSL_connect()", SSL_SUCCESS);
6344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_SUCCESS;
 5056              		.loc 1 6344 0
 5057 017e 0120     		mov	r0, #1
 5058 0180 01E0     		b	.L566
 5059              	.LVL573:
 5060              	.L597:
6345:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default:
6347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Unknown connect state ERROR");
6348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR; /* unknown connect state */
 5061              		.loc 1 6348 0
 5062 0182 0120     		mov	r0, #1
 5063 0184 4042     		neg	r0, r0
 5064              	.L566:
6349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5065              		.loc 1 6350 0
 5066              		@ sp needed
 5067 0186 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5068              	.L610:
 5069              		.align	2
 5070              	.L609:
 5071 0188 19020000 		.word	537
 5072 018c 0D020000 		.word	525
 5073              		.cfi_endproc
 5074              	.LFE85:
 5075              		.size	wolfSSL_connect, .-wolfSSL_connect
 5076              		.section	.text.wolfSSL_negotiate,"ax",%progbits
 5077              		.align	1
 5078              		.global	wolfSSL_negotiate
 5079              		.code	16
 5080              		.thumb_func
 5081              		.type	wolfSSL_negotiate, %function
 5082              	wolfSSL_negotiate:
 5083              	.LFB27:
 391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int err = SSL_FATAL_ERROR;
 5084              		.loc 1 391 0
 5085              		.cfi_startproc
 5086              	.LVL574:
 5087 0000 08B5     		push	{r3, lr}
 5088              		.cfi_def_cfa_offset 8
 5089              		.cfi_offset 3, -8
 5090              		.cfi_offset 14, -4
 401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         err = wolfSSL_connect(ssl);
 5091              		.loc 1 401 0
 5092 0002 8323     		mov	r3, #131
 5093 0004 9B00     		lsl	r3, r3, #2
 5094 0006 C35C     		ldrb	r3, [r0, r3]
 5095 0008 DB06     		lsl	r3, r3, #27
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 214


 5096 000a 02D5     		bpl	.L613
 402:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 5097              		.loc 1 402 0
 5098 000c FFF7FEFF 		bl	wolfSSL_connect
 5099              	.LVL575:
 5100 0010 01E0     		b	.L612
 5101              	.LVL576:
 5102              	.L613:
 392:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5103              		.loc 1 392 0
 5104 0012 0120     		mov	r0, #1
 5105              	.LVL577:
 5106 0014 4042     		neg	r0, r0
 5107              	.LVL578:
 5108              	.L612:
 408:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5109              		.loc 1 408 0
 5110              		@ sp needed
 5111 0016 08BD     		pop	{r3, pc}
 5112              		.cfi_endproc
 5113              	.LFE27:
 5114              		.size	wolfSSL_negotiate, .-wolfSSL_negotiate
 5115              		.section	.text.wolfSSL_connect_cert,"ax",%progbits
 5116              		.align	1
 5117              		.global	wolfSSL_connect_cert
 5118              		.code	16
 5119              		.thumb_func
 5120              		.type	wolfSSL_connect_cert, %function
 5121              	wolfSSL_connect_cert:
 5122              	.LFB54:
2011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  ret;
 5123              		.loc 1 2011 0
 5124              		.cfi_startproc
 5125              	.LVL579:
 5126 0000 38B5     		push	{r3, r4, r5, lr}
 5127              		.cfi_def_cfa_offset 16
 5128              		.cfi_offset 3, -16
 5129              		.cfi_offset 4, -12
 5130              		.cfi_offset 5, -8
 5131              		.cfi_offset 14, -4
2011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  ret;
 5132              		.loc 1 2011 0
 5133 0002 031E     		sub	r3, r0, #0
2014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
 5134              		.loc 1 2014 0
 5135 0004 0BD0     		beq	.L615
2017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = wolfSSL_connect(ssl);
 5136              		.loc 1 2017 0
 5137 0006 8323     		mov	r3, #131
 5138 0008 0425     		mov	r5, #4
 5139 000a 9B00     		lsl	r3, r3, #2
 5140 000c C418     		add	r4, r0, r3
 5141 000e 2379     		ldrb	r3, [r4, #4]
 5142 0010 2B43     		orr	r3, r5
 5143 0012 2371     		strb	r3, [r4, #4]
2018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.certOnly   = 0;
 5144              		.loc 1 2018 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 215


 5145 0014 FFF7FEFF 		bl	wolfSSL_connect
 5146              	.LVL580:
2019:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5147              		.loc 1 2019 0
 5148 0018 2379     		ldrb	r3, [r4, #4]
 5149 001a AB43     		bic	r3, r5
 5150 001c 2371     		strb	r3, [r4, #4]
 5151              	.LVL581:
 5152              	.L615:
2022:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
 5153              		.loc 1 2022 0
 5154              		@ sp needed
 5155 001e 38BD     		pop	{r3, r4, r5, pc}
 5156              		.cfi_endproc
 5157              	.LFE54:
 5158              		.size	wolfSSL_connect_cert, .-wolfSSL_connect_cert
 5159              		.section	.text.wolfSSL_SetHsDoneCb,"ax",%progbits
 5160              		.align	1
 5161              		.global	wolfSSL_SetHsDoneCb
 5162              		.code	16
 5163              		.thumb_func
 5164              		.type	wolfSSL_SetHsDoneCb, %function
 5165              	wolfSSL_SetHsDoneCb:
 5166              	.LFB86:
6351:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6352:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_CLIENT */
6353:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6354:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6355:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* server only parts */
6356:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_SERVER
6357:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #if defined(WOLFSSL_ALLOW_SSLV3) && !defined(NO_OLD_TLS)
6359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_METHOD* wolfSSLv3_server_method(void)
6360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
6361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_METHOD* method =
6362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD),
6363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         0, DYNAMIC_TYPE_METHOD);
6364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSLv3_server_method");
6365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (method) {
6366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             InitSSL_Method(method, MakeSSLv3());
6367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             method->side = WOLFSSL_SERVER_END;
6368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return method;
6370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
6372:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6373:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_DTLS
6375:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_OLD_TLS
6377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_METHOD* wolfDTLSv1_server_method(void)
6378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
6379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_METHOD* method =
6380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD),
6381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         0, DYNAMIC_TYPE_METHOD);
6382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ENTER("DTLSv1_server_method");
6383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (method) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 216


6384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 InitSSL_Method(method, MakeDTLSv1());
6385:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 method->side = WOLFSSL_SERVER_END;
6386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6387:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return method;
6388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif /* NO_OLD_TLS */
6390:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_METHOD* wolfDTLSv1_2_server_method(void)
6392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
6393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_METHOD* method =
6394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD),
6395:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         0, DYNAMIC_TYPE_METHOD);
6396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ENTER("DTLSv1_2_server_method");
6397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (method) {
6398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 InitSSL_Method(method, MakeDTLSv1_2());
6399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 method->side = WOLFSSL_SERVER_END;
6400:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return method;
6402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
6404:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6405:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_accept(WOLFSSL* ssl)
6407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
6408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word16 havePSK = 0;
6409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word16 haveAnon = 0;
6410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_accept()");
6411:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef HAVE_ERRNO_H
6413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             errno = 0;
6414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
6415:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_PSK
6417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             havePSK = ssl->options.havePSK;
6418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
6419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)havePSK;
6420:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef HAVE_ANON
6422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             haveAnon = ssl->options.haveAnon;
6423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
6424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)haveAnon;
6425:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.side != WOLFSSL_SERVER_END) {
6427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ERROR(ssl->error = SIDE_ERROR);
6428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
6429:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6430:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_CERTS
6432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* in case used set_accept_state after init */
6433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!havePSK && !haveAnon && 
6434:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 (!ssl->buffers.certificate || 
6435:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  !ssl->buffers.certificate->buffer ||
6436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  !ssl->buffers.key || 
6437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  !ssl->buffers.key->buffer)) {
6438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("accept error: don't have server cert and key");
6439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->error = NO_PRIVATE_KEY;
6440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 217


6441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
6444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_DTLS
6446:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->version.major == DTLS_MAJOR) {
6447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.dtls   = 1;
6448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.tls    = 1;
6449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.tls1_1 = 1;
6450:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (DtlsPoolInit(ssl) != 0) {
6452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->error = MEMORY_ERROR;
6453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6457:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
6458:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.outputBuffer.length > 0) {
6460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendBuffered(ssl)) == 0) {
6461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* fragOffset is non-zero when sending fragments. On the last
6462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  * fragment, fragOffset is zero again, and the state can be
6463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  * advanced. */
6464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ssl->fragOffset == 0) {
6465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->options.acceptState++;
6466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("accept state: "
6467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 "Advanced from last buffered fragment send");
6468:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else {
6470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("accept state: "
6471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 "Not advanced, more fragments to send");
6472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
6475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6476:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6479:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ssl->options.acceptState) {
6481:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6482:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ACCEPT_BEGIN :
6483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* get response */
6484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             while (ssl->options.clientState < CLIENT_HELLO_COMPLETE)
6485:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = ProcessReply(ssl)) < 0) {
6486:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = ACCEPT_CLIENT_HELLO_DONE;
6490:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state ACCEPT_CLIENT_HELLO_DONE");
6491:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ACCEPT_CLIENT_HELLO_DONE :
6493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = ACCEPT_FIRST_REPLY_DONE;
6494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state ACCEPT_FIRST_REPLY_DONE");
6495:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6496:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ACCEPT_FIRST_REPLY_DONE :
6497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendServerHello(ssl)) != 0) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 218


6498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6499:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = SERVER_HELLO_SENT;
6502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state SERVER_HELLO_SENT");
6503:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case SERVER_HELLO_SENT :
6505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifndef NO_CERTS
6506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (!ssl->options.resuming)
6507:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = SendCertificate(ssl)) != 0) {
6508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6509:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6510:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6511:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = CERT_SENT;
6513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state CERT_SENT");
6514:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CERT_SENT :
6516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifndef NO_CERTS
6517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.resuming)
6518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = SendCertificateStatus(ssl)) != 0) {
6519:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6521:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6523:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = CERT_STATUS_SENT;
6524:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state CERT_STATUS_SENT");
6525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6526:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CERT_STATUS_SENT :
6527:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.resuming)
6528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = SendServerKeyExchange(ssl)) != 0) {
6529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = KEY_EXCHANGE_SENT;
6533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state KEY_EXCHANGE_SENT");
6534:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6535:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case KEY_EXCHANGE_SENT :
6536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #ifndef NO_CERTS
6537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (!ssl->options.resuming)
6538:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (ssl->options.verifyPeer)
6539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         if ( (ssl->error = SendCertificateRequest(ssl)) != 0) {
6540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             WOLFSSL_ERROR(ssl->error);
6541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             return SSL_FATAL_ERROR;
6542:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         }
6543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             #endif
6544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = CERT_REQ_SENT;
6545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state CERT_REQ_SENT");
6546:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CERT_REQ_SENT :
6548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.resuming)
6549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = SendServerHelloDone(ssl)) != 0) {
6550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = SERVER_HELLO_DONE;
6554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state SERVER_HELLO_DONE");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 219


6555:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6556:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case SERVER_HELLO_DONE :
6557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.resuming) {
6558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 while (ssl->options.clientState < CLIENT_FINISHED_COMPLETE)
6559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = ProcessReply(ssl)) < 0) {
6560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = ACCEPT_SECOND_REPLY_DONE;
6565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state  ACCEPT_SECOND_REPLY_DONE");
6566:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ACCEPT_SECOND_REPLY_DONE :
6568:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SESSION_TICKET
6569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->options.createTicket) {
6570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if ( (ssl->error = SendTicket(ssl)) != 0) {
6571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_ERROR(ssl->error);
6572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6575:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_SESSION_TICKET */
6576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = TICKET_SENT;
6577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state  TICKET_SENT");
6578:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6579:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case TICKET_SENT:
6580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendChangeCipher(ssl)) != 0) {
6581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = CHANGE_CIPHER_SENT;
6585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state  CHANGE_CIPHER_SENT");
6586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case CHANGE_CIPHER_SENT :
6588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( (ssl->error = SendFinished(ssl)) != 0) {
6589:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ssl->error);
6590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
6591:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6593:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = ACCEPT_FINISHED_DONE;
6594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state ACCEPT_FINISHED_DONE");
6595:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ACCEPT_FINISHED_DONE :
6597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->options.resuming)
6598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 while (ssl->options.clientState < CLIENT_FINISHED_COMPLETE)
6599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if ( (ssl->error = ProcessReply(ssl)) < 0) {
6600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         WOLFSSL_ERROR(ssl->error);
6601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         return SSL_FATAL_ERROR;
6602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
6603:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6604:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.acceptState = ACCEPT_THIRD_REPLY_DONE;
6605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("accept state ACCEPT_THIRD_REPLY_DONE");
6606:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         case ACCEPT_THIRD_REPLY_DONE :
6608:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_HANDSHAKE_DONE_CB
6609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->hsDoneCb) {
6610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 int cbret = ssl->hsDoneCb(ssl, ssl->hsDoneCtx);
6611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (cbret < 0) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 220


6612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->error = cbret;
6613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("HandShake Done Cb don't continue error");
6614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return SSL_FATAL_ERROR;
6615:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
6616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_HANDSHAKE_DONE_CB */
6618:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!ssl->options.dtls) {
6620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeHandshakeResources(ssl);
6621:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6622:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_DTLS
6623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else {
6624:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->options.dtlsHsRetain = 1;
6625:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6626:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_DTLS */
6627:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_LEAVE("SSL_accept()", SSL_SUCCESS);
6629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_SUCCESS;
6630:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         default :
6632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Unknown accept state ERROR");
6633:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
6634:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6636:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_WOLFSSL_SERVER */
6638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6639:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6640:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_HANDSHAKE_DONE_CB
6641:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6642:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_SetHsDoneCb(WOLFSSL* ssl, HandShakeDoneCb cb, void* user_ctx)
6643:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 5167              		.loc 1 6643 0
 5168              		.cfi_startproc
 5169              	.LVL582:
6644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SetHsDoneCb");
6645:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
 5170              		.loc 1 6646 0
 5171 0000 0028     		cmp	r0, #0
 5172 0002 03D0     		beq	.L619
6647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
6648:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->hsDoneCb  = cb;
 5173              		.loc 1 6649 0
 5174 0004 8162     		str	r1, [r0, #40]
6650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->hsDoneCtx = user_ctx;
 5175              		.loc 1 6650 0
 5176 0006 C262     		str	r2, [r0, #44]
6651:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6652:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
 5177              		.loc 1 6653 0
 5178 0008 0120     		mov	r0, #1
 5179              	.LVL583:
 5180 000a 01E0     		b	.L618
 5181              	.LVL584:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 221


 5182              	.L619:
6647:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5183              		.loc 1 6647 0
 5184 000c AD20     		mov	r0, #173
 5185              	.LVL585:
 5186 000e 4042     		neg	r0, r0
 5187              	.L618:
6654:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5188              		.loc 1 6654 0
 5189              		@ sp needed
 5190 0010 7047     		bx	lr
 5191              		.cfi_endproc
 5192              	.LFE86:
 5193              		.size	wolfSSL_SetHsDoneCb, .-wolfSSL_SetHsDoneCb
 5194              		.section	.text.wolfSSL_Cleanup,"ax",%progbits
 5195              		.align	1
 5196              		.global	wolfSSL_Cleanup
 5197              		.code	16
 5198              		.thumb_func
 5199              		.type	wolfSSL_Cleanup, %function
 5200              	wolfSSL_Cleanup:
 5201              	.LFB87:
6655:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6656:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_HANDSHAKE_DONE_CB */
6657:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6658:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6659:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_Cleanup(void)
6660:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 5202              		.loc 1 6660 0
 5203              		.cfi_startproc
 5204              	.LVL586:
 5205 0000 38B5     		push	{r3, r4, r5, lr}
 5206              		.cfi_def_cfa_offset 16
 5207              		.cfi_offset 3, -16
 5208              		.cfi_offset 4, -12
 5209              		.cfi_offset 5, -8
 5210              		.cfi_offset 14, -4
6661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_SUCCESS;
6662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int release = 0;
6663:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_Cleanup");
6665:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (initRefCount == 0)
 5211              		.loc 1 6666 0
 5212 0002 104C     		ldr	r4, .L629
 5213 0004 2368     		ldr	r3, [r4]
 5214 0006 002B     		cmp	r3, #0
 5215 0008 01D1     		bne	.L621
 5216              	.LVL587:
 5217              	.L624:
6667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;  /* possibly no init yet, but not failure either way */
 5218              		.loc 1 6667 0
 5219 000a 0120     		mov	r0, #1
 5220 000c 18E0     		b	.L622
 5221              	.LVL588:
 5222              	.L621:
6668:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 222


6669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&count_mutex) != 0) {
 5223              		.loc 1 6669 0
 5224 000e 201D     		add	r0, r4, #4
 5225 0010 FFF7FEFF 		bl	LockMutex
 5226              	.LVL589:
 5227 0014 0028     		cmp	r0, #0
 5228 0016 11D1     		bne	.L625
6670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Bad Lock Mutex count");
6671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
6672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6673:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6674:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     release = initRefCount-- == 1;
 5229              		.loc 1 6674 0
 5230 0018 2568     		ldr	r5, [r4]
 5231 001a 6B1E     		sub	r3, r5, #1
 5232 001c 2360     		str	r3, [r4]
 5233              	.LVL590:
6675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (initRefCount < 0)
 5234              		.loc 1 6675 0
 5235 001e 2368     		ldr	r3, [r4]
 5236 0020 002B     		cmp	r3, #0
 5237 0022 00DA     		bge	.L623
6676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         initRefCount = 0;
 5238              		.loc 1 6676 0
 5239 0024 2060     		str	r0, [r4]
 5240              	.L623:
6677:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&count_mutex);
 5241              		.loc 1 6678 0
 5242 0026 0434     		add	r4, r4, #4
 5243 0028 201C     		mov	r0, r4
 5244 002a FFF7FEFF 		bl	UnLockMutex
 5245              	.LVL591:
6679:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!release)
 5246              		.loc 1 6680 0
 5247 002e 012D     		cmp	r5, #1
 5248 0030 EBD1     		bne	.L624
6681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
6682:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6683:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SESSION_CACHE
6684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (FreeMutex(&session_mutex) != 0)
6685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = BAD_MUTEX_E;
6686:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6687:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (FreeMutex(&count_mutex) != 0)
 5249              		.loc 1 6687 0
 5250 0032 201C     		mov	r0, r4
 5251 0034 FFF7FEFF 		bl	FreeMutex
 5252              	.LVL592:
 5253 0038 0028     		cmp	r0, #0
 5254 003a E6D0     		beq	.L624
 5255              	.LVL593:
 5256              	.L625:
6671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5257              		.loc 1 6671 0
 5258 003c 6A20     		mov	r0, #106
 5259 003e 4042     		neg	r0, r0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 223


 5260              	.L622:
6688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = BAD_MUTEX_E;
6689:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6690:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(HAVE_ECC) && defined(FP_ECC)
6691:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wc_ecc_fp_free();
6692:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
6695:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5261              		.loc 1 6695 0
 5262              		@ sp needed
 5263 0040 38BD     		pop	{r3, r4, r5, pc}
 5264              	.L630:
 5265 0042 C046     		.align	2
 5266              	.L629:
 5267 0044 00000000 		.word	.LANCHOR1
 5268              		.cfi_endproc
 5269              	.LFE87:
 5270              		.size	wolfSSL_Cleanup, .-wolfSSL_Cleanup
 5271              		.section	.text.GetSession,"ax",%progbits
 5272              		.align	1
 5273              		.global	GetSession
 5274              		.code	16
 5275              		.thumb_func
 5276              		.type	GetSession, %function
 5277              	GetSession:
 5278              	.LFB88:
6696:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6698:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SESSION_CACHE
6699:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6700:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6701:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* some session IDs aren't random after all, let's make them random */
6702:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static INLINE word32 HashSession(const byte* sessionID, word32 len, int* error)
6703:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte digest[MAX_DIGEST_SIZE];
6705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6706:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
6707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *error =  wc_Md5Hash(sessionID, len, digest);
6708:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #elif !defined(NO_SHA)
6709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *error =  wc_ShaHash(sessionID, len, digest);
6710:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #elif !defined(NO_SHA256)
6711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *error =  wc_Sha256Hash(sessionID, len, digest);
6712:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
6713:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #error "We need a digest to hash the session IDs"
6714:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6715:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return *error == 0 ? MakeWordFromHash(digest) : 0; /* 0 on failure */
6717:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6718:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6719:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6720:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_flush_sessions(WOLFSSL_CTX* ctx, long tm)
6721:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6722:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* static table now, no flushing needed */
6723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ctx;
6724:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)tm;
6725:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 224


6726:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6727:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6728:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* set ssl session timeout in seconds */
6729:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_timeout(WOLFSSL* ssl, unsigned int to)
6730:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl == NULL)
6732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
6733:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->timeout = to;
6735:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
6737:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6738:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6739:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6740:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* set ctx session timeout in seconds */
6741:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_CTX_set_timeout(WOLFSSL_CTX* ctx, unsigned int to)
6742:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6743:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ctx == NULL)
6744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
6745:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ctx->timeout = to;
6747:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
6749:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6751:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6752:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
6753:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6754:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* Get Session from Client cache based on id/len, return NULL on failure */
6755:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_SESSION* GetSessionClient(WOLFSSL* ssl, const byte* id, int len)
6756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_SESSION* ret = NULL;
6758:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32          row;
6759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int             idx;
6760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int             count;
6761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int             error = 0;
6762:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("GetSessionClient");
6764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side == WOLFSSL_SERVER_END)
6766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6767:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     len = min(SERVER_ID_LEN, (word32)len);
6769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     row = HashSession(id, len, &error) % SESSION_ROWS;
6770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (error != 0) {
6771:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Hash session failed");
6772:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6773:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6774:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
6776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Lock session mutex failed");
6777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6779:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* start from most recently used */
6781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     count = min((word32)ClientCache[row].totalCount, SESSIONS_PER_ROW);
6782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     idx = ClientCache[row].nextIdx - 1;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 225


6783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (idx < 0)
6784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx = SESSIONS_PER_ROW - 1; /* if back to front, the previous was end */
6785:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (; count > 0; --count, idx = idx ? idx - 1 : SESSIONS_PER_ROW - 1) {
6787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_SESSION* current;
6788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ClientSession   clSess;
6789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (idx >= SESSIONS_PER_ROW || idx < 0) { /* sanity check */
6791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad idx");
6792:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
6793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6794:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         clSess = ClientCache[row].Clients[idx];
6796:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         current = &SessionCache[clSess.serverRow].Sessions[clSess.serverIdx];
6798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(current->serverID, id, len) == 0) {
6799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Found a serverid match for client");
6800:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (LowResTimer() < (current->bornOn + current->timeout)) {
6801:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Session valid");
6802:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = current;
6803:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
6804:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             } else {
6805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Session timed out");  /* could have more for id */
6806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6807:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else {
6808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("ServerID not a match from client table");
6809:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&session_mutex);
6813:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6814:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
6815:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6816:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6817:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_CLIENT_CACHE */
6818:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6819:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_SESSION* GetSession(WOLFSSL* ssl, byte* masterSecret)
6821:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_SESSION* ret = 0;
6823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const byte*  id = NULL;
6824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32       row;
6825:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int          idx;
6826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int          count;
6827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int          error = 0;
6828:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6829:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.sessionCacheOff)
6830:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6831:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.haveSessionId == 0)
6833:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SESSION_TICKET
6836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side == WOLFSSL_SERVER_END && ssl->options.useTicket == 1)
6837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6838:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6839:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 226


6840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->arrays)
6841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         id = ssl->arrays->sessionID;
6842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
6843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         id = ssl->session.sessionID;
6844:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     row = HashSession(id, ID_LEN, &error) % SESSION_ROWS;
6846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (error != 0) {
6847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Hash session failed");
6848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
6849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6850:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0)
6852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
6853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6854:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* start from most recently used */
6855:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     count = min((word32)SessionCache[row].totalCount, SESSIONS_PER_ROW);
6856:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     idx = SessionCache[row].nextIdx - 1;
6857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (idx < 0)
6858:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx = SESSIONS_PER_ROW - 1; /* if back to front, the previous was end */
6859:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6860:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (; count > 0; --count, idx = idx ? idx - 1 : SESSIONS_PER_ROW - 1) {
6861:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_SESSION* current;
6862:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (idx >= SESSIONS_PER_ROW || idx < 0) { /* sanity check */
6864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad idx");
6865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;
6866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6867:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         current = &SessionCache[row].Sessions[idx];
6869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XMEMCMP(current->sessionID, id, ID_LEN) == 0) {
6870:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Found a session match");
6871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (LowResTimer() < (current->bornOn + current->timeout)) {
6872:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Session valid");
6873:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = current;
6874:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (masterSecret)
6875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XMEMCPY(masterSecret, current->masterSecret, SECRET_LEN);
6876:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             } else {
6877:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Session timed out");
6878:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
6879:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             break;  /* no more sessionIDs whether valid or not that match */
6880:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else {
6881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("SessionID not a match at this idx");
6882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
6883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6884:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     UnLockMutex(&session_mutex);
6886:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ret;
6888:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6890:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6891:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int SetSession(WOLFSSL* ssl, WOLFSSL_SESSION* session)
6892:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.sessionCacheOff)
6894:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
6895:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LowResTimer() < (session->bornOn + session->timeout)) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 227


6897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->session  = *session;
6898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.resuming = 1;
6899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6900:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SESSION_CERTS
6901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->version              = session->version;
6902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.cipherSuite0 = session->cipherSuite0;
6903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.cipherSuite  = session->cipherSuite;
6904:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6905:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6906:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
6907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6908:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_FAILURE;  /* session timed out */
6909:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
6910:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6911:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6912:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SESSION_STATS
6913:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int get_locked_session_stats(word32* active, word32* total,
6914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                     word32* peak);
6915:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6916:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6917:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int AddSession(WOLFSSL* ssl)
6918:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
6919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32 row, idx;
6920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int    error = 0;
6921:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.sessionCacheOff)
6923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
6924:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.haveSessionId == 0)
6926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
6927:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6928:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SESSION_TICKET
6929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side == WOLFSSL_SERVER_END && ssl->options.useTicket == 1)
6930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
6931:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6932:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     row = HashSession(ssl->arrays->sessionID, ID_LEN, &error) % SESSION_ROWS;
6934:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (error != 0) {
6935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Hash session failed");
6936:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return error;
6937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
6938:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0)
6940:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
6941:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     idx = SessionCache[row].nextIdx++;
6943:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SESSION_INDEX
6944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->sessionIndex = (row << SESSIDX_ROW_SHIFT) | idx;
6945:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6946:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(SessionCache[row].Sessions[idx].masterSecret,
6948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****            ssl->arrays->masterSecret, SECRET_LEN);
6949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(SessionCache[row].Sessions[idx].sessionID, ssl->arrays->sessionID,
6950:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****            ID_LEN);
6951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].sessionIDSz = ssl->arrays->sessionIDSz;
6952:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].timeout = ssl->timeout;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 228


6954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].bornOn  = LowResTimer();
6955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6956:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_SESSION_TICKET
6957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].ticketLen     = ssl->session.ticketLen;
6958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(SessionCache[row].Sessions[idx].ticket,
6959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    ssl->session.ticket, ssl->session.ticketLen);
6960:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
6961:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6962:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SESSION_CERTS
6963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].chain.count = ssl->session.chain.count;
6964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(SessionCache[row].Sessions[idx].chain.certs,
6965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****            ssl->session.chain.certs, sizeof(x509_buffer) * MAX_CHAIN_DEPTH);
6966:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].version      = ssl->version;
6968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].cipherSuite0 = ssl->options.cipherSuite0;
6969:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].Sessions[idx].cipherSuite  = ssl->options.cipherSuite;
6970:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* SESSION_CERTS */
6971:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     SessionCache[row].totalCount++;
6973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (SessionCache[row].nextIdx == SESSIONS_PER_ROW)
6974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SessionCache[row].nextIdx = 0;
6975:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6976:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CLIENT_CACHE
6977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->options.side == WOLFSSL_CLIENT_END && ssl->session.idLen) {
6978:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 clientRow, clientIdx;
6979:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("Adding client cache entry");
6981:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SessionCache[row].Sessions[idx].idLen = ssl->session.idLen;
6983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(SessionCache[row].Sessions[idx].serverID, ssl->session.serverID,
6984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->session.idLen);
6985:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6986:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         clientRow = HashSession(ssl->session.serverID, ssl->session.idLen,
6987:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 &error) % SESSION_ROWS;
6988:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (error != 0) {
6989:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Hash session failed");
6990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else {
6991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             clientIdx = ClientCache[clientRow].nextIdx++;
6992:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ClientCache[clientRow].Clients[clientIdx].serverRow = (word16)row;
6994:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ClientCache[clientRow].Clients[clientIdx].serverIdx = (word16)idx;
6995:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
6996:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ClientCache[clientRow].totalCount++;
6997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ClientCache[clientRow].nextIdx == SESSIONS_PER_ROW)
6998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ClientCache[clientRow].nextIdx = 0;
6999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
7002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SessionCache[row].Sessions[idx].idLen = 0;
7003:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_CLIENT_CACHE */
7004:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7005:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(WOLFSSL_SESSION_STATS) && defined(WOLFSSL_PEAK_SESSIONS)
7006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (error == 0) {
7007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 active = 0;
7008:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         error = get_locked_session_stats(&active, NULL, NULL);
7010:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (error == SSL_SUCCESS) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 229


7011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             error = 0;  /* back to this function ok */
7012:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (active > PeakSessions)
7014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 PeakSessions = active;
7015:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7017:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* defined(WOLFSSL_SESSION_STATS) && defined(WOLFSSL_PEAK_SESSIONS) */
7018:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (UnLockMutex(&session_mutex) != 0)
7020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
7021:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7022:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return error;
7023:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
7024:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7025:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7026:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SESSION_INDEX
7027:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7028:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetSessionIndex(WOLFSSL* ssl)
7029:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
7030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_GetSessionIndex");
7031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_GetSessionIndex", ssl->sessionIndex);
7032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->sessionIndex;
7033:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
7034:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7035:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_GetSessionAtIndex(int idx, WOLFSSL_SESSION* session)
7037:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
7038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int row, col, result = SSL_FAILURE;
7039:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7040:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_GetSessionAtIndex");
7041:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     row = idx >> SESSIDX_ROW_SHIFT;
7043:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     col = idx & SESSIDX_IDX_MASK;
7044:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7045:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
7046:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
7047:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7049:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (row < SESSION_ROWS &&
7050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         col < (int)min(SessionCache[row].totalCount, SESSIONS_PER_ROW)) {
7051:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(session,
7052:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  &SessionCache[row].Sessions[col], sizeof(WOLFSSL_SESSION));
7053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         result = SSL_SUCCESS;
7054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7055:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (UnLockMutex(&session_mutex) != 0)
7057:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         result = BAD_MUTEX_E;
7058:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_GetSessionAtIndex", result);
7060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return result;
7061:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
7062:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7063:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* SESSION_INDEX */
7064:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7065:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(SESSION_INDEX) && defined(SESSION_CERTS)
7066:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7067:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_X509_CHAIN* wolfSSL_SESSION_get_peer_chain(WOLFSSL_SESSION* session)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 230


7068:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
7069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509_CHAIN* chain = NULL;
7070:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_SESSION_get_peer_chain");
7072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (session)
7073:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         chain = &session->chain;
7074:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_SESSION_get_peer_chain", chain ? 1 : 0);
7076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return chain;
7077:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
7078:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7079:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* SESSION_INDEX && SESSION_CERTS */
7080:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7081:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7082:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SESSION_STATS
7083:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7084:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* requires session_mutex lock held, SSL_SUCCESS on ok */
7085:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static int get_locked_session_stats(word32* active, word32* total, word32* peak)
7086:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
7087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int result = SSL_SUCCESS;
7088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int i;
7089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int count;
7090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int idx;
7091:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32 now   = 0;
7092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32 seen  = 0;
7093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32 ticks = LowResTimer();
7094:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)peak;
7096:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("get_locked_session_stats");
7098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     for (i = 0; i < SESSION_ROWS; i++) {
7100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         seen += SessionCache[i].totalCount;
7101:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7102:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (active == NULL)
7103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             continue;  /* no need to calculate what we can't set */
7104:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         count = min((word32)SessionCache[i].totalCount, SESSIONS_PER_ROW);
7106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         idx   = SessionCache[i].nextIdx - 1;
7107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (idx < 0)
7108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             idx = SESSIONS_PER_ROW - 1; /* if back to front previous was end */
7109:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         for (; count > 0; --count, idx = idx ? idx - 1 : SESSIONS_PER_ROW - 1) {
7111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (idx >= SESSIONS_PER_ROW || idx < 0) {  /* sanity check */
7112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("Bad idx");
7113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
7114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7115:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* if not expried then good */
7117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ticks < (SessionCache[i].Sessions[idx].bornOn +
7118:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                          SessionCache[i].Sessions[idx].timeout) ) {
7119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 now++;
7120:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7123:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (active)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 231


7125:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *active = now;
7126:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (total)
7128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *total = seen;
7129:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7130:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_PEAK_SESSIONS
7131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (peak)
7132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *peak = PeakSessions;
7133:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7134:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("get_locked_session_stats", result);
7136:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return result;
7138:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
7139:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7140:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7141:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* return SSL_SUCCESS on ok */
7142:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_session_stats(word32* active, word32* total, word32* peak,
7143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               word32* maxSessions)
7144:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
7145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int result = SSL_SUCCESS;
7146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_get_session_stats");
7148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (maxSessions) {
7150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *maxSessions = SESSIONS_PER_ROW * SESSION_ROWS;
7151:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (active == NULL && total == NULL && peak == NULL)
7153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return result;  /* we're done */
7154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7155:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* user must provide at least one query value */
7157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (active == NULL && total == NULL && peak == NULL)
7158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_FUNC_ARG;
7159:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7160:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (LockMutex(&session_mutex) != 0) {
7161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return BAD_MUTEX_E;
7162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7163:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     result = get_locked_session_stats(active, total, peak);
7165:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (UnLockMutex(&session_mutex) != 0)
7167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         result = BAD_MUTEX_E;
7168:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_LEAVE("wolfSSL_get_session_stats", result);
7170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7171:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return result;
7172:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
7173:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7174:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_SESSION_STATS */
7175:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7176:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef PRINT_SESSION_STATS
7178:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7179:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
7180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_PrintSessionStats(void)
7181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 232


7182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 totalSessionsSeen = 0;
7183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 totalSessionsNow = 0;
7184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 peak = 0;
7185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 maxSessions = 0;
7186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int    i;
7187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int    ret;
7188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         double E;               /* expected freq */
7189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         double chiSquare = 0;
7190:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wolfSSL_get_session_stats(&totalSessionsNow, &totalSessionsSeen,
7192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                         &peak, &maxSessions);
7193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != SSL_SUCCESS)
7194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
7195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         printf("Total Sessions Seen = %d\n", totalSessionsSeen);
7196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         printf("Total Sessions Now  = %d\n", totalSessionsNow);
7197:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_PEAK_SESSIONS
7198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         printf("Peak  Sessions      = %d\n", peak);
7199:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         printf("Max   Sessions      = %d\n", maxSessions);
7201:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7202:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         E = (double)totalSessionsSeen / SESSION_ROWS;
7203:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         for (i = 0; i < SESSION_ROWS; i++) {
7205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             double diff = SessionCache[i].totalCount - E;
7206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             diff *= diff;                /* square    */
7207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             diff /= E;                   /* normalize */
7208:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             chiSquare += diff;
7210:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         printf("  chi-square = %5.1f, d.f. = %d\n", chiSquare,
7212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                      SESSION_ROWS - 1);
7213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #if (SESSION_ROWS == 11)
7214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             printf(" .05 p value =  18.3, chi-square should be less\n");
7215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #elif (SESSION_ROWS == 211)
7216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             printf(".05 p value  = 244.8, chi-square should be less\n");
7217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #elif (SESSION_ROWS == 5981)
7218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             printf(".05 p value  = 6161.0, chi-square should be less\n");
7219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #elif (SESSION_ROWS == 3)
7220:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             printf(".05 p value  =   6.0, chi-square should be less\n");
7221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #elif (SESSION_ROWS == 2861)
7222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             printf(".05 p value  = 2985.5, chi-square should be less\n");
7223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
7224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         printf("\n");
7225:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
7227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7228:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* SESSION_STATS */
7230:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7231:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else  /* NO_SESSION_CACHE */
7232:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7233:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* No session cache version */
7234:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_SESSION* GetSession(WOLFSSL* ssl, byte* masterSecret)
7235:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 5279              		.loc 1 7235 0
 5280              		.cfi_startproc
 5281              	.LVL594:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 233


7236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
7237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)masterSecret;
7238:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NULL;
7240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5282              		.loc 1 7240 0
 5283 0000 0020     		mov	r0, #0
 5284              	.LVL595:
 5285              		@ sp needed
 5286 0002 7047     		bx	lr
 5287              		.cfi_endproc
 5288              	.LFE88:
 5289              		.size	GetSession, .-GetSession
 5290              		.section	.text.wolfSSL_check_domain_name,"ax",%progbits
 5291              		.align	1
 5292              		.global	wolfSSL_check_domain_name
 5293              		.code	16
 5294              		.thumb_func
 5295              		.type	wolfSSL_check_domain_name, %function
 5296              	wolfSSL_check_domain_name:
 5297              	.LFB89:
7241:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7242:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SESSION_CACHE */
7243:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7244:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7245:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* call before SSL_connect, if verifying will add name check to
7246:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    date check and signature check */
7247:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_check_domain_name(WOLFSSL* ssl, const char* dn)
7248:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 5298              		.loc 1 7248 0
 5299              		.cfi_startproc
 5300              	.LVL596:
 5301 0000 38B5     		push	{r3, r4, r5, lr}
 5302              		.cfi_def_cfa_offset 16
 5303              		.cfi_offset 3, -16
 5304              		.cfi_offset 4, -12
 5305              		.cfi_offset 5, -8
 5306              		.cfi_offset 14, -4
 5307              		.loc 1 7248 0
 5308 0002 041C     		mov	r4, r0
7249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_check_domain_name");
7250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->buffers.domainName.buffer)
 5309              		.loc 1 7250 0
 5310 0004 406F     		ldr	r0, [r0, #116]
 5311              	.LVL597:
7248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_check_domain_name");
 5312              		.loc 1 7248 0
 5313 0006 0D1C     		mov	r5, r1
 5314              		.loc 1 7250 0
 5315 0008 0028     		cmp	r0, #0
 5316 000a 01D0     		beq	.L633
 5317              	.LVL598:
 5318              	.LBB86:
7251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(ssl->buffers.domainName.buffer, ssl->heap, DYNAMIC_TYPE_DOMAIN);
 5319              		.loc 1 7251 0 discriminator 1
 5320 000c FFF7FEFF 		bl	wolfSSL_Free
 5321              	.LVL599:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 234


 5322              	.L633:
 5323              	.LBE86:
7252:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.domainName.length = (word32)XSTRLEN(dn) + 1;
 5324              		.loc 1 7253 0
 5325 0010 281C     		mov	r0, r5
 5326 0012 FFF7FEFF 		bl	strlen
 5327              	.LVL600:
 5328 0016 0130     		add	r0, r0, #1
 5329 0018 A067     		str	r0, [r4, #120]
7254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->buffers.domainName.buffer = (byte*) XMALLOC(
 5330              		.loc 1 7254 0
 5331 001a FFF7FEFF 		bl	wolfSSL_Malloc
 5332              	.LVL601:
 5333 001e 6067     		str	r0, [r4, #116]
7255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->buffers.domainName.length, ssl->heap, DYNAMIC_TYPE_DOMAIN);
7256:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->buffers.domainName.buffer) {
 5334              		.loc 1 7257 0
 5335 0020 0028     		cmp	r0, #0
 5336 0022 05D0     		beq	.L634
7258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XSTRNCPY((char*)ssl->buffers.domainName.buffer, dn,
 5337              		.loc 1 7258 0
 5338 0024 291C     		mov	r1, r5
 5339 0026 A26F     		ldr	r2, [r4, #120]
 5340 0028 FFF7FEFF 		bl	strncpy
 5341              	.LVL602:
7259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->buffers.domainName.length);
7260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
 5342              		.loc 1 7260 0
 5343 002c 0120     		mov	r0, #1
 5344 002e 02E0     		b	.L635
 5345              	.L634:
7261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
7263:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->error = MEMORY_ERROR;
 5346              		.loc 1 7263 0
 5347 0030 014B     		ldr	r3, .L639
 5348 0032 FC34     		add	r4, r4, #252
 5349              	.LVL603:
 5350 0034 2362     		str	r3, [r4, #32]
 5351              	.LVL604:
 5352              	.L635:
7264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FAILURE;
7265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5353              		.loc 1 7266 0
 5354              		@ sp needed
 5355              	.LVL605:
 5356 0036 38BD     		pop	{r3, r4, r5, pc}
 5357              	.L640:
 5358              		.align	2
 5359              	.L639:
 5360 0038 D1FEFFFF 		.word	-303
 5361              		.cfi_endproc
 5362              	.LFE89:
 5363              		.size	wolfSSL_check_domain_name, .-wolfSSL_check_domain_name
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 235


 5364              		.section	.text.wolfSSL_set_compression,"ax",%progbits
 5365              		.align	1
 5366              		.global	wolfSSL_set_compression
 5367              		.code	16
 5368              		.thumb_func
 5369              		.type	wolfSSL_set_compression, %function
 5370              	wolfSSL_set_compression:
 5371              	.LFB90:
7267:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7268:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7269:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* turn on wolfSSL zlib compression
7270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    returns SSL_SUCCESS for success, else error (not built in)
7271:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** */
7272:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_compression(WOLFSSL* ssl)
7273:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 5372              		.loc 1 7273 0
 5373              		.cfi_startproc
 5374              	.LVL606:
7274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_set_compression");
7275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
7276:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_LIBZ
7277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ssl->options.usingCompression = 1;
7278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return SSL_SUCCESS;
7279:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
7280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return NOT_COMPILED_IN;
7281:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7282:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5375              		.loc 1 7282 0
 5376 0000 AE20     		mov	r0, #174
 5377              	.LVL607:
 5378              		@ sp needed
 5379 0002 4042     		neg	r0, r0
 5380 0004 7047     		bx	lr
 5381              		.cfi_endproc
 5382              	.LFE90:
 5383              		.size	wolfSSL_set_compression, .-wolfSSL_set_compression
 5384              		.section	.text.wolfSSL_CTX_load_verify_buffer,"ax",%progbits
 5385              		.align	1
 5386              		.global	wolfSSL_CTX_load_verify_buffer
 5387              		.code	16
 5388              		.thumb_func
 5389              		.type	wolfSSL_CTX_load_verify_buffer, %function
 5390              	wolfSSL_CTX_load_verify_buffer:
 5391              	.LFB91:
7283:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7284:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7285:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef USE_WINDOWS_API
7286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_WRITEV
7287:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7288:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* simulate writev semantics, doesn't actually do block at a time though
7289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****            because of SSL_write behavior and because front adds may be small */
7290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int wolfSSL_writev(WOLFSSL* ssl, const struct iovec* iov, int iovcnt)
7291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
7292:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
7293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             byte   staticBuffer[1]; /* force heap usage */
7294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #else
7295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             byte   staticBuffer[FILE_BUFFER_SIZE];
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 236


7296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
7297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             byte* myBuffer  = staticBuffer;
7298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int   dynamic   = 0;
7299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int   sending   = 0;
7300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int   idx       = 0;
7301:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int   i;
7302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int   ret;
7303:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_ENTER("wolfSSL_writev");
7305:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             for (i = 0; i < iovcnt; i++)
7307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 sending += (int)iov[i].iov_len;
7308:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (sending > (int)sizeof(staticBuffer)) {
7310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 myBuffer = (byte*)XMALLOC(sending, ssl->heap,
7311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                            DYNAMIC_TYPE_WRITEV);
7312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (!myBuffer)
7313:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return MEMORY_ERROR;
7314:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 dynamic = 1;
7316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7317:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             for (i = 0; i < iovcnt; i++) {
7319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&myBuffer[idx], iov[i].iov_base, iov[i].iov_len);
7320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 idx += (int)iov[i].iov_len;
7321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7322:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfSSL_write(ssl, myBuffer, sending);
7324:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (dynamic)
7326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(myBuffer, ssl->heap, DYNAMIC_TYPE_WRITEV);
7327:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
7329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
7331:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7332:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7333:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7334:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_CALLBACKS
7335:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     typedef struct itimerval Itimerval;
7337:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* don't keep calling simple functions while setting up timer and signals
7339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        if no inlining these are the next best */
7340:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define AddTimes(a, b, c)                       \
7342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         do {                                        \
7343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             c.tv_sec  = a.tv_sec  + b.tv_sec;       \
7344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             c.tv_usec = a.tv_usec + b.tv_usec;      \
7345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (c.tv_usec >=  1000000) {            \
7346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 c.tv_sec++;                         \
7347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 c.tv_usec -= 1000000;               \
7348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }                                       \
7349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } while (0)
7350:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7351:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define SubtractTimes(a, b, c)                  \
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 237


7353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         do {                                        \
7354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             c.tv_sec  = a.tv_sec  - b.tv_sec;       \
7355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             c.tv_usec = a.tv_usec - b.tv_usec;      \
7356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (c.tv_usec < 0) {                    \
7357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 c.tv_sec--;                         \
7358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 c.tv_usec += 1000000;               \
7359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }                                       \
7360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } while (0)
7361:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define CmpTimes(a, b, cmp)                     \
7363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ((a.tv_sec  ==  b.tv_sec) ?                 \
7364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             (a.tv_usec cmp b.tv_usec) :             \
7365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             (a.tv_sec  cmp b.tv_sec))               \
7366:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7367:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* do nothing handler */
7369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static void myHandler(int signo)
7370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)signo;
7372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return;
7373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7374:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7375:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static int wolfSSL_ex_wrapper(WOLFSSL* ssl, HandShakeCallBack hsCb,
7377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  TimeoutCallBack toCb, Timeval timeout)
7378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int       ret        = SSL_FATAL_ERROR;
7380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int       oldTimerOn = 0;   /* was timer already on */
7381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Timeval   startTime;
7382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Timeval   endTime;
7383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Timeval   totalTime;
7384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Itimerval myTimeout;
7385:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Itimerval oldTimeout; /* if old timer adjust from total time to reset */
7386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         struct sigaction act, oact;
7387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #define ERR_OUT(x) { ssl->hsInfoOn = 0; ssl->toInfoOn = 0; return x; }
7389:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (hsCb) {
7391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->hsInfoOn = 1;
7392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             InitHandShakeInfo(&ssl->handShakeInfo);
7393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (toCb) {
7395:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->toInfoOn = 1;
7396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             InitTimeoutInfo(&ssl->timeoutInfo);
7397:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (gettimeofday(&startTime, 0) < 0)
7399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ERR_OUT(GETTIME_ERROR);
7400:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* use setitimer to simulate getitimer, init 0 myTimeout */
7402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             myTimeout.it_interval.tv_sec  = 0;
7403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             myTimeout.it_interval.tv_usec = 0;
7404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             myTimeout.it_value.tv_sec     = 0;
7405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             myTimeout.it_value.tv_usec    = 0;
7406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (setitimer(ITIMER_REAL, &myTimeout, &oldTimeout) < 0)
7407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ERR_OUT(SETITIMER_ERROR);
7408:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (oldTimeout.it_value.tv_sec || oldTimeout.it_value.tv_usec) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 238


7410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 oldTimerOn = 1;
7411:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* is old timer going to expire before ours */
7413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (CmpTimes(oldTimeout.it_value, timeout, <)) {
7414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     timeout.tv_sec  = oldTimeout.it_value.tv_sec;
7415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     timeout.tv_usec = oldTimeout.it_value.tv_usec;
7416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
7417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             myTimeout.it_value.tv_sec  = timeout.tv_sec;
7419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             myTimeout.it_value.tv_usec = timeout.tv_usec;
7420:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* set up signal handler, don't restart socket send/recv */
7422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             act.sa_handler = myHandler;
7423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             sigemptyset(&act.sa_mask);
7424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             act.sa_flags = 0;
7425:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef SA_INTERRUPT
7426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             act.sa_flags |= SA_INTERRUPT;
7427:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (sigaction(SIGALRM, &act, &oact) < 0)
7429:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ERR_OUT(SIGACT_ERROR);
7430:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (setitimer(ITIMER_REAL, &myTimeout, 0) < 0)
7432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ERR_OUT(SETITIMER_ERROR);
7433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7435:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* do main work */
7436:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
7437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.side == WOLFSSL_CLIENT_END)
7438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfSSL_connect(ssl);
7439:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7440:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_SERVER
7441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.side == WOLFSSL_SERVER_END)
7442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = wolfSSL_accept(ssl);
7443:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* do callbacks */
7446:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (toCb) {
7447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (oldTimerOn) {
7448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 gettimeofday(&endTime, 0);
7449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 SubtractTimes(endTime, startTime, totalTime);
7450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* adjust old timer for elapsed time */
7451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (CmpTimes(totalTime, oldTimeout.it_value, <))
7452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     SubtractTimes(oldTimeout.it_value, totalTime,
7453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   oldTimeout.it_value);
7454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else {
7455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     /* reset value to interval, may be off */
7456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     oldTimeout.it_value.tv_sec = oldTimeout.it_interval.tv_sec;
7457:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     oldTimeout.it_value.tv_usec =oldTimeout.it_interval.tv_usec;
7458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
7459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* keep iter the same whether there or not */
7460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* restore old handler */
7462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (sigaction(SIGALRM, &oact, 0) < 0)
7463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = SIGACT_ERROR;    /* more pressing error, stomp */
7464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             else
7465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 /* use old settings which may turn off (expired or not there) */
7466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (setitimer(ITIMER_REAL, &oldTimeout, 0) < 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 239


7467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = SETITIMER_ERROR;
7468:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* if we had a timeout call callback */
7470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ssl->timeoutInfo.timeoutName[0]) {
7471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->timeoutInfo.timeoutValue.tv_sec  = timeout.tv_sec;
7472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ssl->timeoutInfo.timeoutValue.tv_usec = timeout.tv_usec;
7473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 (toCb)(&ssl->timeoutInfo);
7474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* clean up */
7476:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeTimeoutInfo(&ssl->timeoutInfo, ssl->heap);
7477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->toInfoOn = 0;
7478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7479:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (hsCb) {
7480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FinishHandShakeInfo(&ssl->handShakeInfo, ssl);
7481:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             (hsCb)(&ssl->handShakeInfo);
7482:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->hsInfoOn = 0;
7483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
7485:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7486:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7487:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7488:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_CLIENT
7489:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7490:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_connect_ex(WOLFSSL* ssl, HandShakeCallBack hsCb,
7491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                           TimeoutCallBack toCb, Timeval timeout)
7492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_connect_ex");
7494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_ex_wrapper(ssl, hsCb, toCb, timeout);
7495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7496:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7497:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7498:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7499:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7500:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_WOLFSSL_SERVER
7501:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_accept_ex(WOLFSSL* ssl, HandShakeCallBack hsCb,
7503:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                          TimeoutCallBack toCb,Timeval timeout)
7504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_accept_ex");
7506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_ex_wrapper(ssl, hsCb, toCb, timeout);
7507:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7508:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7509:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
7510:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7511:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_CALLBACKS */
7512:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7513:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7514:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_PSK
7515:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_psk_client_callback(WOLFSSL_CTX* ctx,
7517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                          wc_psk_client_callback cb)
7518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7519:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_set_psk_client_callback");
7520:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->havePSK = 1;
7521:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->client_psk_cb = cb;
7522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7523:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 240


7524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7525:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_psk_client_callback(WOLFSSL* ssl,wc_psk_client_callback cb)
7526:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7527:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte haveRSA = 1;
7528:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_set_psk_client_callback");
7530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.havePSK = 1;
7531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.client_psk_cb = cb;
7532:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef NO_RSA
7534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             haveRSA = 0;
7535:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
7536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitSuites(ssl->suites, ssl->version, haveRSA, TRUE,
7537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveDH, ssl->options.haveNTRU,
7538:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveECDSAsig, ssl->options.haveECC,
7539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveStaticECC, ssl->options.side);
7540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7541:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7542:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_psk_server_callback(WOLFSSL_CTX* ctx,
7544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                          wc_psk_server_callback cb)
7545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_set_psk_server_callback");
7547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->havePSK = 1;
7548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->server_psk_cb = cb;
7549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7550:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7551:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_psk_server_callback(WOLFSSL* ssl,wc_psk_server_callback cb)
7553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte haveRSA = 1;
7555:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7556:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_set_psk_server_callback");
7557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.havePSK = 1;
7558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.server_psk_cb = cb;
7559:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef NO_RSA
7561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             haveRSA = 0;
7562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
7563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitSuites(ssl->suites, ssl->version, haveRSA, TRUE,
7564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveDH, ssl->options.haveNTRU,
7565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveECDSAsig, ssl->options.haveECC,
7566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveStaticECC, ssl->options.side);
7567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7568:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7569:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* wolfSSL_get_psk_identity_hint(const WOLFSSL* ssl)
7571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_get_psk_identity_hint");
7573:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL || ssl->arrays == NULL)
7575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
7576:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->arrays->server_hint;
7578:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7579:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7580:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 241


7581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* wolfSSL_get_psk_identity(const WOLFSSL* ssl)
7582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_get_psk_identity");
7584:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL || ssl->arrays == NULL)
7586:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
7587:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ssl->arrays->client_identity;
7589:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7590:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7591:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7592:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_use_psk_identity_hint(WOLFSSL_CTX* ctx, const char* hint)
7593:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_use_psk_identity_hint");
7595:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (hint == 0)
7596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->server_hint[0] = 0;
7597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
7598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCPY(ctx->server_hint, hint, MAX_PSK_ID_LEN);
7599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->server_hint[MAX_PSK_ID_LEN - 1] = '\0';
7600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
7602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7603:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7604:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7605:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_use_psk_identity_hint(WOLFSSL* ssl, const char* hint)
7606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_use_psk_identity_hint");
7608:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL || ssl->arrays == NULL)
7610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FAILURE;
7611:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (hint == 0)
7613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->arrays->server_hint[0] = 0;
7614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
7615:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XSTRNCPY(ssl->arrays->server_hint, hint, MAX_PSK_ID_LEN);
7616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->arrays->server_hint[MAX_PSK_ID_LEN - 1] = '\0';
7617:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
7619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7620:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7621:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_PSK */
7622:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7623:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ANON
7625:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7626:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_allow_anon_cipher(WOLFSSL_CTX* ctx)
7627:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_allow_anon_cipher");
7629:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL)
7631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FAILURE;
7632:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7633:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->haveAnon = 1;
7634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
7636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 242


7638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_ANON */
7639:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7640:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7641:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_CERTS
7642:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* used to be defined on NO_FILESYSTEM only, but are generally useful */
7643:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* wolfSSL extension allows DER files to be loaded from buffers as well */
7645:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_load_verify_buffer(WOLFSSL_CTX* ctx,
7646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        const unsigned char* in,
7647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        long sz, int format)
7648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5392              		.loc 1 7648 0
 5393              		.cfi_startproc
 5394              	.LVL608:
 5395 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5396              		.cfi_def_cfa_offset 20
 5397              		.cfi_offset 4, -20
 5398              		.cfi_offset 5, -16
 5399              		.cfi_offset 6, -12
 5400              		.cfi_offset 7, -8
 5401              		.cfi_offset 14, -4
 5402 0002 89B0     		sub	sp, sp, #36
 5403              		.cfi_def_cfa_offset 56
 5404              		.loc 1 7648 0
 5405 0004 071C     		mov	r7, r0
 5406 0006 0591     		str	r1, [sp, #20]
 5407 0008 161C     		mov	r6, r2
 5408 000a 0024     		mov	r4, #0
7649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_load_verify_buffer");
7650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (format == SSL_FILETYPE_PEM)
 5409              		.loc 1 7650 0
 5410 000c 012B     		cmp	r3, #1
 5411 000e 20D1     		bne	.L653
 5412 0010 231C     		mov	r3, r4
 5413              	.LVL609:
 5414 0012 251C     		mov	r5, r4
 5415              	.LVL610:
 5416              	.L643:
 5417              	.LBB92:
 5418              	.LBB93:
 5419              	.LBB94:
3533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         long consumed = 0;
 5420              		.loc 1 3533 0
 5421 0014 B542     		cmp	r5, r6
 5422 0016 17DA     		bge	.L647
 5423              	.LBB95:
3536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             &consumed, 0);
 5424              		.loc 1 3536 0
 5425 0018 0420     		mov	r0, #4
3534:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5426              		.loc 1 3534 0
 5427 001a 0023     		mov	r3, #0
 5428              	.LVL611:
3536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             &consumed, 0);
 5429              		.loc 1 3536 0
 5430 001c 059A     		ldr	r2, [sp, #20]
 5431 001e 0090     		str	r0, [sp]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 243


 5432 0020 07A8     		add	r0, sp, #28
3534:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5433              		.loc 1 3534 0
 5434 0022 0793     		str	r3, [sp, #28]
3536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             &consumed, 0);
 5435              		.loc 1 3536 0
 5436 0024 5119     		add	r1, r2, r5
 5437 0026 0193     		str	r3, [sp, #4]
 5438 0028 721B     		sub	r2, r6, r5
 5439 002a 0290     		str	r0, [sp, #8]
 5440 002c 0393     		str	r3, [sp, #12]
 5441 002e 381C     		mov	r0, r7
 5442 0030 0133     		add	r3, r3, #1
 5443 0032 FFF7FEFF 		bl	ProcessBuffer
 5444              	.LVL612:
 5445 0036 079A     		ldr	r2, [sp, #28]
 5446 0038 031E     		sub	r3, r0, #0
 5447              	.LVL613:
3539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
 5448              		.loc 1 3539 0
 5449 003a 02DA     		bge	.L651
3541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_ERROR(ret);
 5450              		.loc 1 3541 0
 5451 003c 002A     		cmp	r2, #0
 5452 003e 01DC     		bgt	.L645
 5453 0040 02E0     		b	.L647
 5454              	.L651:
3552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 5455              		.loc 1 3552 0
 5456 0042 0124     		mov	r4, #1
 5457              	.LVL614:
 5458              	.L645:
3554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5459              		.loc 1 3554 0
 5460 0044 AD18     		add	r5, r5, r2
 5461              	.LVL615:
 5462 0046 E5E7     		b	.L643
 5463              	.LVL616:
 5464              	.L647:
 5465              	.LBE95:
3560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5466              		.loc 1 3560 0
 5467 0048 0120     		mov	r0, #1
3557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5468              		.loc 1 3557 0
 5469 004a 002C     		cmp	r4, #0
 5470 004c 0AD1     		bne	.L649
3562:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5471              		.loc 1 3562 0
 5472 004e 181C     		mov	r0, r3
 5473 0050 08E0     		b	.L649
 5474              	.LVL617:
 5475              	.L653:
 5476              	.LBE94:
 5477              	.LBE93:
 5478              	.LBE92:
7651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ProcessChainBuffer(ctx, in, sz, format, CA_TYPE, NULL);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 244


7652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
7653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ProcessBuffer(ctx, in, sz, format, CA_TYPE, NULL,NULL,0);
 5479              		.loc 1 7653 0
 5480 0052 0422     		mov	r2, #4
 5481              	.LVL618:
 5482 0054 0194     		str	r4, [sp, #4]
 5483 0056 0092     		str	r2, [sp]
 5484 0058 0294     		str	r4, [sp, #8]
 5485 005a 0394     		str	r4, [sp, #12]
 5486 005c 0599     		ldr	r1, [sp, #20]
 5487              	.LVL619:
 5488 005e 321C     		mov	r2, r6
 5489 0060 FFF7FEFF 		bl	ProcessBuffer
 5490              	.LVL620:
 5491              	.L649:
7654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5492              		.loc 1 7654 0
 5493 0064 09B0     		add	sp, sp, #36
 5494              		@ sp needed
 5495              	.LVL621:
 5496              	.LVL622:
 5497 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 5498              		.cfi_endproc
 5499              	.LFE91:
 5500              		.size	wolfSSL_CTX_load_verify_buffer, .-wolfSSL_CTX_load_verify_buffer
 5501              		.section	.text.wolfSSL_CertManagerLoadCABuffer,"ax",%progbits
 5502              		.align	1
 5503              		.global	wolfSSL_CertManagerLoadCABuffer
 5504              		.code	16
 5505              		.thumb_func
 5506              		.type	wolfSSL_CertManagerLoadCABuffer, %function
 5507              	wolfSSL_CertManagerLoadCABuffer:
 5508              	.LFB70:
3589:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int ret = SSL_FATAL_ERROR;
 5509              		.loc 1 3589 0
 5510              		.cfi_startproc
 5511              	.LVL623:
 5512 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 5513              		.cfi_def_cfa_offset 32
 5514              		.cfi_offset 0, -32
 5515              		.cfi_offset 1, -28
 5516              		.cfi_offset 2, -24
 5517              		.cfi_offset 4, -20
 5518              		.cfi_offset 5, -16
 5519              		.cfi_offset 6, -12
 5520              		.cfi_offset 7, -8
 5521              		.cfi_offset 14, -4
3595:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("No CertManager error");
 5522              		.loc 1 3595 0
 5523 0002 0028     		cmp	r0, #0
 5524 0004 02D1     		bne	.L655
 5525              	.LVL624:
 5526              	.L657:
3597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5527              		.loc 1 3597 0
 5528 0006 0120     		mov	r0, #1
 5529 0008 4042     		neg	r0, r0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 245


 5530 000a 1AE0     		b	.L656
 5531              	.LVL625:
 5532              	.L655:
 5533 000c 0193     		str	r3, [sp, #4]
 5534 000e 161C     		mov	r6, r2
 5535 0010 0F1C     		mov	r7, r1
 5536 0012 051C     		mov	r5, r0
 5537              	.LBB96:
 5538              	.LBB97:
3572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
 5539              		.loc 1 3572 0
 5540 0014 FFF7FEFF 		bl	wolfTLSv1_2_client_method
 5541              	.LVL626:
 5542              	.LBE97:
 5543              	.LBE96:
3599:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5544              		.loc 1 3599 0
 5545 0018 FFF7FEFF 		bl	wolfSSL_CTX_new
 5546              	.LVL627:
 5547 001c 041E     		sub	r4, r0, #0
 5548              	.LVL628:
3601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("CTX new failed");
 5549              		.loc 1 3601 0
 5550 001e F2D0     		beq	.L657
3607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     tmp->cm = cm;
 5551              		.loc 1 3607 0
 5552 0020 8069     		ldr	r0, [r0, #24]
 5553              	.LVL629:
 5554 0022 FFF7FEFF 		bl	wolfSSL_CertManagerFree
 5555              	.LVL630:
3608:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5556              		.loc 1 3608 0
 5557 0026 A561     		str	r5, [r4, #24]
3610:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5558              		.loc 1 3610 0
 5559 0028 391C     		mov	r1, r7
 5560 002a 321C     		mov	r2, r6
 5561 002c 019B     		ldr	r3, [sp, #4]
 5562 002e 201C     		mov	r0, r4
 5563 0030 FFF7FEFF 		bl	wolfSSL_CTX_load_verify_buffer
 5564              	.LVL631:
3613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wolfSSL_CTX_free(tmp);
 5565              		.loc 1 3613 0
 5566 0034 0023     		mov	r3, #0
3610:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5567              		.loc 1 3610 0
 5568 0036 051C     		mov	r5, r0
 5569              	.LVL632:
3613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     wolfSSL_CTX_free(tmp);
 5570              		.loc 1 3613 0
 5571 0038 A361     		str	r3, [r4, #24]
3614:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5572              		.loc 1 3614 0
 5573 003a 201C     		mov	r0, r4
 5574              	.LVL633:
 5575 003c FFF7FEFF 		bl	wolfSSL_CTX_free
 5576              	.LVL634:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 246


3616:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5577              		.loc 1 3616 0
 5578 0040 281C     		mov	r0, r5
 5579              	.LVL635:
 5580              	.L656:
3617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5581              		.loc 1 3617 0
 5582              		@ sp needed
 5583 0042 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 5584              		.cfi_endproc
 5585              	.LFE70:
 5586              		.size	wolfSSL_CertManagerLoadCABuffer, .-wolfSSL_CertManagerLoadCABuffer
 5587              		.section	.text.wolfSSL_CTX_use_certificate_buffer,"ax",%progbits
 5588              		.align	1
 5589              		.global	wolfSSL_CTX_use_certificate_buffer
 5590              		.code	16
 5591              		.thumb_func
 5592              		.type	wolfSSL_CTX_use_certificate_buffer, %function
 5593              	wolfSSL_CTX_use_certificate_buffer:
 5594              	.LFB92:
7655:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7656:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7657:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
7658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_trust_peer_buffer(WOLFSSL_CTX* ctx,
7659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        const unsigned char* in,
7660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        long sz, int format)
7661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_trust_peer_buffer");
7663:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* sanity check on arguments */
7665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (sz < 0 || in == NULL || ctx == NULL) {
7666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
7667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7668:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (format == SSL_FILETYPE_PEM)
7670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ProcessChainBuffer(ctx, in, sz, format,
7671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                        TRUSTED_PEER_TYPE, NULL);
7672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
7673:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ProcessBuffer(ctx, in, sz, format, TRUSTED_PEER_TYPE,
7674:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                                    NULL,NULL,0);
7675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7676:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
7677:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7678:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_use_certificate_buffer(WOLFSSL_CTX* ctx,
7680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const unsigned char* in, long sz, int format)
7681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5595              		.loc 1 7681 0
 5596              		.cfi_startproc
 5597              	.LVL636:
 5598 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5599              		.cfi_def_cfa_offset 24
 5600              		.cfi_offset 0, -24
 5601              		.cfi_offset 1, -20
 5602              		.cfi_offset 2, -16
 5603              		.cfi_offset 3, -12
 5604              		.cfi_offset 4, -8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 247


 5605              		.cfi_offset 14, -4
7682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_use_certificate_buffer");
7683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ProcessBuffer(ctx, in, sz, format, CERT_TYPE, NULL, NULL, 0);
 5606              		.loc 1 7683 0
 5607 0002 0024     		mov	r4, #0
 5608 0004 0094     		str	r4, [sp]
 5609 0006 0194     		str	r4, [sp, #4]
 5610 0008 0294     		str	r4, [sp, #8]
 5611 000a 0394     		str	r4, [sp, #12]
 5612 000c FFF7FEFF 		bl	ProcessBuffer
 5613              	.LVL637:
7684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5614              		.loc 1 7684 0
 5615 0010 04B0     		add	sp, sp, #16
 5616              		@ sp needed
 5617 0012 10BD     		pop	{r4, pc}
 5618              		.cfi_endproc
 5619              	.LFE92:
 5620              		.size	wolfSSL_CTX_use_certificate_buffer, .-wolfSSL_CTX_use_certificate_buffer
 5621              		.section	.text.wolfSSL_CTX_use_PrivateKey_buffer,"ax",%progbits
 5622              		.align	1
 5623              		.global	wolfSSL_CTX_use_PrivateKey_buffer
 5624              		.code	16
 5625              		.thumb_func
 5626              		.type	wolfSSL_CTX_use_PrivateKey_buffer, %function
 5627              	wolfSSL_CTX_use_PrivateKey_buffer:
 5628              	.LFB93:
7685:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7686:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7687:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_use_PrivateKey_buffer(WOLFSSL_CTX* ctx,
7688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const unsigned char* in, long sz, int format)
7689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5629              		.loc 1 7689 0
 5630              		.cfi_startproc
 5631              	.LVL638:
 5632 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5633              		.cfi_def_cfa_offset 24
 5634              		.cfi_offset 0, -24
 5635              		.cfi_offset 1, -20
 5636              		.cfi_offset 2, -16
 5637              		.cfi_offset 3, -12
 5638              		.cfi_offset 4, -8
 5639              		.cfi_offset 14, -4
7690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_use_PrivateKey_buffer");
7691:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ProcessBuffer(ctx, in, sz, format, PRIVATEKEY_TYPE, NULL,NULL,0);
 5640              		.loc 1 7691 0
 5641 0002 0124     		mov	r4, #1
 5642 0004 0094     		str	r4, [sp]
 5643 0006 0024     		mov	r4, #0
 5644 0008 0194     		str	r4, [sp, #4]
 5645 000a 0294     		str	r4, [sp, #8]
 5646 000c 0394     		str	r4, [sp, #12]
 5647 000e FFF7FEFF 		bl	ProcessBuffer
 5648              	.LVL639:
7692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5649              		.loc 1 7692 0
 5650 0012 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 248


 5651              		@ sp needed
 5652 0014 10BD     		pop	{r4, pc}
 5653              		.cfi_endproc
 5654              	.LFE93:
 5655              		.size	wolfSSL_CTX_use_PrivateKey_buffer, .-wolfSSL_CTX_use_PrivateKey_buffer
 5656              		.section	.text.wolfSSL_CTX_use_certificate_chain_buffer,"ax",%progbits
 5657              		.align	1
 5658              		.global	wolfSSL_CTX_use_certificate_chain_buffer
 5659              		.code	16
 5660              		.thumb_func
 5661              		.type	wolfSSL_CTX_use_certificate_chain_buffer, %function
 5662              	wolfSSL_CTX_use_certificate_chain_buffer:
 5663              	.LFB94:
7693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7694:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7695:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_use_certificate_chain_buffer(WOLFSSL_CTX* ctx,
7696:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const unsigned char* in, long sz)
7697:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5664              		.loc 1 7697 0
 5665              		.cfi_startproc
 5666              	.LVL640:
 5667 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5668              		.cfi_def_cfa_offset 24
 5669              		.cfi_offset 0, -24
 5670              		.cfi_offset 1, -20
 5671              		.cfi_offset 2, -16
 5672              		.cfi_offset 3, -12
 5673              		.cfi_offset 4, -8
 5674              		.cfi_offset 14, -4
7698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_use_certificate_chain_buffer");
7699:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ProcessBuffer(ctx, in, sz, SSL_FILETYPE_PEM, CERT_TYPE, NULL,
 5675              		.loc 1 7699 0
 5676 0002 0023     		mov	r3, #0
 5677 0004 0093     		str	r3, [sp]
 5678 0006 0193     		str	r3, [sp, #4]
 5679 0008 0293     		str	r3, [sp, #8]
 5680 000a 0133     		add	r3, r3, #1
 5681 000c 0393     		str	r3, [sp, #12]
 5682 000e FFF7FEFF 		bl	ProcessBuffer
 5683              	.LVL641:
7700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              NULL, 1);
7701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5684              		.loc 1 7701 0
 5685 0012 05B0     		add	sp, sp, #20
 5686              		@ sp needed
 5687 0014 00BD     		pop	{pc}
 5688              		.cfi_endproc
 5689              	.LFE94:
 5690              		.size	wolfSSL_CTX_use_certificate_chain_buffer, .-wolfSSL_CTX_use_certificate_chain_buffer
 5691              		.section	.text.wolfSSL_use_certificate_buffer,"ax",%progbits
 5692              		.align	1
 5693              		.global	wolfSSL_use_certificate_buffer
 5694              		.code	16
 5695              		.thumb_func
 5696              		.type	wolfSSL_use_certificate_buffer, %function
 5697              	wolfSSL_use_certificate_buffer:
 5698              	.LFB95:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 249


7702:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7703:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7704:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DH
7705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7706:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* server wrapper for ctx or ssl Diffie-Hellman parameters */
7707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     static int wolfSSL_SetTmpDH_buffer_wrapper(WOLFSSL_CTX* ctx, WOLFSSL* ssl,
7708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                const unsigned char* buf,
7709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                long sz, int format)
7710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DerBuffer* der = NULL;
7712:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int    ret      = 0;
7713:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 pSz = MAX_DH_SIZE;
7714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 gSz = MAX_DH_SIZE;
7715:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
7716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte*  p = NULL;
7717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte*  g = NULL;
7718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
7719:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte   p[MAX_DH_SIZE];
7720:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte   g[MAX_DH_SIZE];
7721:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
7722:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL || buf == NULL)
7724:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
7725:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = AllocDer(&der, 0, DH_PARAM_TYPE, ctx->heap);
7727:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != 0) {
7728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ret;
7729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->buffer = (byte*)buf;
7731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         der->length = (word32)sz;
7732:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7733:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
7734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         p = (byte*)XMALLOC(pSz, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7735:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         g = (byte*)XMALLOC(gSz, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7736:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (p == NULL || g == NULL) {
7738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(p, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(g, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7740:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return MEMORY_E;
7741:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7742:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
7743:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (format != SSL_FILETYPE_ASN1 && format != SSL_FILETYPE_PEM)
7745:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = SSL_BAD_FILETYPE;
7746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
7747:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (format == SSL_FILETYPE_PEM) {
7748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 FreeDer(&der);
7749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = PemToDer(buf, sz, DH_PARAM_TYPE, &der, ctx->heap,
7750:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                NULL, NULL);
7751:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7752:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7753:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret == 0) {
7754:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (wc_DhParamsLoad(der->buffer, der->length, p, &pSz, g, &gSz) < 0)
7755:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = SSL_BAD_FILETYPE;
7756:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else if (ssl)
7757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = wolfSSL_SetTmpDH(ssl, p, pSz, g, gSz);
7758:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 250


7759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = wolfSSL_CTX_SetTmpDH(ctx, p, pSz, g, gSz);
7760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
7761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7762:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeDer(&der);
7764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
7766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(p, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(g, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
7769:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
7771:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7772:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7773:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* server Diffie-Hellman parameters, SSL_SUCCESS on ok */
7775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_SetTmpDH_buffer(WOLFSSL* ssl, const unsigned char* buf, long sz,
7776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                int format)
7777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL)
7779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
7780:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_SetTmpDH_buffer_wrapper(ssl->ctx, ssl, buf, sz, format);
7782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7783:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7784:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* server ctx Diffie-Hellman parameters, SSL_SUCCESS on ok */
7786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_SetTmpDH_buffer(WOLFSSL_CTX* ctx, const unsigned char* buf,
7787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    long sz, int format)
7788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7789:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_SetTmpDH_buffer_wrapper(ctx, NULL, buf, sz, format);
7790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7791:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7792:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_DH */
7793:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7794:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_use_certificate_buffer(WOLFSSL* ssl,
7796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const unsigned char* in, long sz, int format)
7797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5699              		.loc 1 7797 0
 5700              		.cfi_startproc
 5701              	.LVL642:
 5702 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5703              		.cfi_def_cfa_offset 24
 5704              		.cfi_offset 0, -24
 5705              		.cfi_offset 1, -20
 5706              		.cfi_offset 2, -16
 5707              		.cfi_offset 3, -12
 5708              		.cfi_offset 4, -8
 5709              		.cfi_offset 14, -4
7798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_use_certificate_buffer");
7799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ProcessBuffer(ssl->ctx, in, sz, format,CERT_TYPE,ssl,NULL,0);
 5710              		.loc 1 7799 0
 5711 0002 0024     		mov	r4, #0
 5712 0004 0190     		str	r0, [sp, #4]
 5713 0006 0094     		str	r4, [sp]
 5714 0008 0294     		str	r4, [sp, #8]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 251


 5715 000a 0394     		str	r4, [sp, #12]
 5716 000c 0068     		ldr	r0, [r0]
 5717              	.LVL643:
 5718 000e FFF7FEFF 		bl	ProcessBuffer
 5719              	.LVL644:
7800:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5720              		.loc 1 7800 0
 5721 0012 04B0     		add	sp, sp, #16
 5722              		@ sp needed
 5723 0014 10BD     		pop	{r4, pc}
 5724              		.cfi_endproc
 5725              	.LFE95:
 5726              		.size	wolfSSL_use_certificate_buffer, .-wolfSSL_use_certificate_buffer
 5727              		.section	.text.wolfSSL_use_PrivateKey_buffer,"ax",%progbits
 5728              		.align	1
 5729              		.global	wolfSSL_use_PrivateKey_buffer
 5730              		.code	16
 5731              		.thumb_func
 5732              		.type	wolfSSL_use_PrivateKey_buffer, %function
 5733              	wolfSSL_use_PrivateKey_buffer:
 5734              	.LFB96:
7801:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7802:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7803:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_use_PrivateKey_buffer(WOLFSSL* ssl,
7804:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const unsigned char* in, long sz, int format)
7805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5735              		.loc 1 7805 0
 5736              		.cfi_startproc
 5737              	.LVL645:
 5738 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5739              		.cfi_def_cfa_offset 24
 5740              		.cfi_offset 0, -24
 5741              		.cfi_offset 1, -20
 5742              		.cfi_offset 2, -16
 5743              		.cfi_offset 3, -12
 5744              		.cfi_offset 4, -8
 5745              		.cfi_offset 14, -4
7806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_use_PrivateKey_buffer");
7807:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ProcessBuffer(ssl->ctx, in, sz, format, PRIVATEKEY_TYPE,
 5746              		.loc 1 7807 0
 5747 0002 0124     		mov	r4, #1
 5748 0004 0094     		str	r4, [sp]
 5749 0006 0024     		mov	r4, #0
 5750 0008 0190     		str	r0, [sp, #4]
 5751 000a 0294     		str	r4, [sp, #8]
 5752 000c 0394     		str	r4, [sp, #12]
 5753 000e 0068     		ldr	r0, [r0]
 5754              	.LVL646:
 5755 0010 FFF7FEFF 		bl	ProcessBuffer
 5756              	.LVL647:
7808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              ssl, NULL, 0);
7809:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5757              		.loc 1 7809 0
 5758 0014 04B0     		add	sp, sp, #16
 5759              		@ sp needed
 5760 0016 10BD     		pop	{r4, pc}
 5761              		.cfi_endproc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 252


 5762              	.LFE96:
 5763              		.size	wolfSSL_use_PrivateKey_buffer, .-wolfSSL_use_PrivateKey_buffer
 5764              		.section	.text.wolfSSL_use_certificate_chain_buffer,"ax",%progbits
 5765              		.align	1
 5766              		.global	wolfSSL_use_certificate_chain_buffer
 5767              		.code	16
 5768              		.thumb_func
 5769              		.type	wolfSSL_use_certificate_chain_buffer, %function
 5770              	wolfSSL_use_certificate_chain_buffer:
 5771              	.LFB97:
7810:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_use_certificate_chain_buffer(WOLFSSL* ssl,
7813:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  const unsigned char* in, long sz)
7814:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5772              		.loc 1 7814 0
 5773              		.cfi_startproc
 5774              	.LVL648:
 5775 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 5776              		.cfi_def_cfa_offset 24
 5777              		.cfi_offset 0, -24
 5778              		.cfi_offset 1, -20
 5779              		.cfi_offset 2, -16
 5780              		.cfi_offset 3, -12
 5781              		.cfi_offset 4, -8
 5782              		.cfi_offset 14, -4
7815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_use_certificate_chain_buffer");
7816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ProcessBuffer(ssl->ctx, in, sz, SSL_FILETYPE_PEM, CERT_TYPE,
 5783              		.loc 1 7816 0
 5784 0002 0023     		mov	r3, #0
 5785 0004 0093     		str	r3, [sp]
 5786 0006 0293     		str	r3, [sp, #8]
 5787 0008 0133     		add	r3, r3, #1
 5788 000a 0190     		str	r0, [sp, #4]
 5789 000c 0393     		str	r3, [sp, #12]
 5790 000e 0068     		ldr	r0, [r0]
 5791              	.LVL649:
 5792 0010 FFF7FEFF 		bl	ProcessBuffer
 5793              	.LVL650:
7817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              ssl, NULL, 1);
7818:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5794              		.loc 1 7818 0
 5795 0014 05B0     		add	sp, sp, #20
 5796              		@ sp needed
 5797 0016 00BD     		pop	{pc}
 5798              		.cfi_endproc
 5799              	.LFE97:
 5800              		.size	wolfSSL_use_certificate_chain_buffer, .-wolfSSL_use_certificate_chain_buffer
 5801              		.section	.text.wolfSSL_UnloadCertsKeys,"ax",%progbits
 5802              		.align	1
 5803              		.global	wolfSSL_UnloadCertsKeys
 5804              		.code	16
 5805              		.thumb_func
 5806              		.type	wolfSSL_UnloadCertsKeys, %function
 5807              	wolfSSL_UnloadCertsKeys:
 5808              	.LFB98:
7819:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 253


7820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7821:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* unload any certs or keys that SSL owns, leave CTX as is
7822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        SSL_SUCCESS on ok */
7823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_UnloadCertsKeys(WOLFSSL* ssl)
7824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5809              		.loc 1 7824 0
 5810              		.cfi_startproc
 5811              	.LVL651:
 5812 0000 70B5     		push	{r4, r5, r6, lr}
 5813              		.cfi_def_cfa_offset 16
 5814              		.cfi_offset 4, -16
 5815              		.cfi_offset 5, -12
 5816              		.cfi_offset 6, -8
 5817              		.cfi_offset 14, -4
7825:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL) {
 5818              		.loc 1 7825 0
 5819 0002 0028     		cmp	r0, #0
 5820 0004 22D0     		beq	.L671
7826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Null function arg");
7827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
7828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7830:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.weOwnCert) {
 5821              		.loc 1 7830 0
 5822 0006 051C     		mov	r5, r0
 5823 0008 8C35     		add	r5, r5, #140
 5824 000a 2B78     		ldrb	r3, [r5]
 5825 000c 041C     		mov	r4, r0
 5826 000e 002B     		cmp	r3, #0
 5827 0010 04D0     		beq	.L669
7831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Unloading cert");
7832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&ssl->buffers.certificate);
 5828              		.loc 1 7832 0
 5829 0012 9030     		add	r0, r0, #144
 5830              	.LVL652:
 5831 0014 FFF7FEFF 		bl	FreeDer
 5832              	.LVL653:
7833:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.weOwnCert = 0;
 5833              		.loc 1 7833 0
 5834 0018 0023     		mov	r3, #0
 5835 001a 2B70     		strb	r3, [r5]
 5836              	.L669:
7834:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.weOwnCertChain) {
 5837              		.loc 1 7836 0
 5838 001c 251C     		mov	r5, r4
 5839 001e 8D35     		add	r5, r5, #141
 5840 0020 2B78     		ldrb	r3, [r5]
 5841 0022 002B     		cmp	r3, #0
 5842 0024 05D0     		beq	.L670
7837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Unloading cert chain");
7838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&ssl->buffers.certChain);
 5843              		.loc 1 7838 0
 5844 0026 201C     		mov	r0, r4
 5845 0028 9830     		add	r0, r0, #152
 5846 002a FFF7FEFF 		bl	FreeDer
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 254


 5847              	.LVL654:
7839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.weOwnCertChain = 0;
 5848              		.loc 1 7839 0
 5849 002e 0023     		mov	r3, #0
 5850 0030 2B70     		strb	r3, [r5]
 5851              	.L670:
7840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7841:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->buffers.weOwnKey) {
 5852              		.loc 1 7842 0
 5853 0032 261C     		mov	r6, r4
 5854 0034 8E36     		add	r6, r6, #142
 5855 0036 3378     		ldrb	r3, [r6]
7843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Unloading key");
7844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&ssl->buffers.key);
7845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.weOwnKey = 0;
7846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
7847:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
 5856              		.loc 1 7848 0
 5857 0038 0125     		mov	r5, #1
7842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Unloading key");
 5858              		.loc 1 7842 0
 5859 003a 002B     		cmp	r3, #0
 5860 003c 08D0     		beq	.L668
7844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->buffers.weOwnKey = 0;
 5861              		.loc 1 7844 0
 5862 003e 201C     		mov	r0, r4
 5863 0040 9430     		add	r0, r0, #148
 5864 0042 FFF7FEFF 		bl	FreeDer
 5865              	.LVL655:
7845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 5866              		.loc 1 7845 0
 5867 0046 0023     		mov	r3, #0
 5868 0048 3370     		strb	r3, [r6]
 5869 004a 01E0     		b	.L668
 5870              	.LVL656:
 5871              	.L671:
7827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
 5872              		.loc 1 7827 0
 5873 004c AD25     		mov	r5, #173
 5874 004e 6D42     		neg	r5, r5
 5875              	.LVL657:
 5876              	.L668:
7849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5877              		.loc 1 7849 0
 5878 0050 281C     		mov	r0, r5
 5879              		@ sp needed
 5880 0052 70BD     		pop	{r4, r5, r6, pc}
 5881              		.cfi_endproc
 5882              	.LFE98:
 5883              		.size	wolfSSL_UnloadCertsKeys, .-wolfSSL_UnloadCertsKeys
 5884              		.section	.text.wolfSSL_CTX_UnloadCAs,"ax",%progbits
 5885              		.align	1
 5886              		.global	wolfSSL_CTX_UnloadCAs
 5887              		.code	16
 5888              		.thumb_func
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 255


 5889              		.type	wolfSSL_CTX_UnloadCAs, %function
 5890              	wolfSSL_CTX_UnloadCAs:
 5891              	.LFB99:
7850:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7851:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_UnloadCAs(WOLFSSL_CTX* ctx)
7853:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5892              		.loc 1 7853 0
 5893              		.cfi_startproc
 5894              	.LVL658:
 5895 0000 08B5     		push	{r3, lr}
 5896              		.cfi_def_cfa_offset 8
 5897              		.cfi_offset 3, -8
 5898              		.cfi_offset 14, -4
7854:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_UnloadCAs");
7855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7856:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL)
 5899              		.loc 1 7856 0
 5900 0002 0028     		cmp	r0, #0
 5901 0004 03D0     		beq	.L682
7857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
7858:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7859:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerUnloadCAs(ctx->cm);
 5902              		.loc 1 7859 0
 5903 0006 8069     		ldr	r0, [r0, #24]
 5904              	.LVL659:
 5905 0008 FFF7FEFF 		bl	wolfSSL_CertManagerUnloadCAs
 5906              	.LVL660:
 5907 000c 01E0     		b	.L681
 5908              	.LVL661:
 5909              	.L682:
7857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
 5910              		.loc 1 7857 0
 5911 000e AD20     		mov	r0, #173
 5912              	.LVL662:
 5913 0010 4042     		neg	r0, r0
 5914              	.L681:
7860:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5915              		.loc 1 7860 0
 5916              		@ sp needed
 5917 0012 08BD     		pop	{r3, pc}
 5918              		.cfi_endproc
 5919              	.LFE99:
 5920              		.size	wolfSSL_CTX_UnloadCAs, .-wolfSSL_CTX_UnloadCAs
 5921              		.section	.text.wolfSSL_is_init_finished,"ax",%progbits
 5922              		.align	1
 5923              		.global	wolfSSL_is_init_finished
 5924              		.code	16
 5925              		.thumb_func
 5926              		.type	wolfSSL_is_init_finished, %function
 5927              	wolfSSL_is_init_finished:
 5928              	.LFB100:
7861:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7862:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7863:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
7864:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_Unload_trust_peers(WOLFSSL_CTX* ctx)
7865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 256


7866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_Unload_trust_peers");
7867:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL)
7869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
7870:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return wolfSSL_CertManagerUnload_trust_peers(ctx->cm);
7872:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7873:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
7874:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* old NO_FILESYSTEM end */
7875:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* !NO_CERTS */
7876:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7877:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7878:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(GOAHEAD_WS)
7879:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7880:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_add_all_algorithms(void)
7882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_add_all_algorithms");
7884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (wolfSSL_Init() == SSL_SUCCESS)
7885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_SUCCESS;
7886:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
7887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
7888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7890:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7891:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_CTX_sess_set_cache_size(WOLFSSL_CTX* ctx, long sz)
7892:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* cache size fixed at compile time in wolfSSL */
7894:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
7895:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sz;
7896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
7897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7898:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_quiet_shutdown(WOLFSSL_CTX* ctx, int mode)
7901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_set_quiet_shutdown");
7903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (mode)
7904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->quietShutdown = 1;
7905:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7906:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7907:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7908:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_quiet_shutdown(WOLFSSL* ssl, int mode)
7909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_CTX_set_quiet_shutdown");
7911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (mode)
7912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ssl->options.quietShutdown = 1;
7913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7914:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7915:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_bio(WOLFSSL* ssl, WOLFSSL_BIO* rd, WOLFSSL_BIO* wr)
7917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7918:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_set_bio");
7919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_set_rfd(ssl, rd->fd);
7920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wolfSSL_set_wfd(ssl, wr->fd);
7921:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->biord = rd;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 257


7923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->biowr = wr;
7924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7925:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7926:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_client_CA_list(WOLFSSL_CTX* ctx,
7928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        STACK_OF(WOLFSSL_X509_NAME)* names)
7929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
7931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)names;
7932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7933:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     STACK_OF(WOLFSSL_X509_NAME)* wolfSSL_load_client_CA_file(const char* fname)
7936:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)fname;
7938:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
7939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7940:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7941:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_set_default_verify_paths(WOLFSSL_CTX* ctx)
7943:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO:, not needed in goahead */
7945:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
7946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_NOT_IMPLEMENTED;
7947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7948:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7949:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7950:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* keyblock size in bytes or -1 */
7951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_get_keyblock_size(WOLFSSL* ssl)
7952:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL)
7954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
7955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7956:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 2 * (ssl->specs.key_size + ssl->specs.iv_size +
7957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ssl->specs.hash_size);
7958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7959:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7960:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* store keys returns SSL_SUCCESS or -1 on error */
7962:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_get_keys(WOLFSSL* ssl, unsigned char** ms, unsigned int* msLen,
7963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      unsigned char** sr, unsigned int* srLen,
7964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      unsigned char** cr, unsigned int* crLen)
7965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL || ssl->arrays == NULL)
7967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
7968:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7969:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *ms = ssl->arrays->masterSecret;
7970:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *sr = ssl->arrays->serverRandom;
7971:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *cr = ssl->arrays->clientRandom;
7972:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *msLen = SECRET_LEN;
7974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *srLen = RAN_LEN;
7975:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *crLen = RAN_LEN;
7976:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
7978:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
7979:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 258


7980:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7981:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_accept_state(WOLFSSL* ssl)
7982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
7983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word16 haveRSA = 1;
7984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word16 havePSK = 0;
7985:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7986:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_set_accept_state");
7987:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.side = WOLFSSL_SERVER_END;
7988:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* reset suites in case user switched */
7989:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
7990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef NO_RSA
7991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             haveRSA = 0;
7992:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
7993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_PSK
7994:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             havePSK = ssl->options.havePSK;
7995:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
7996:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitSuites(ssl->suites, ssl->version, haveRSA, havePSK,
7997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveDH, ssl->options.haveNTRU,
7998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveECDSAsig, ssl->options.haveECC,
7999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                    ssl->options.haveStaticECC, ssl->options.side);
8000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8001:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
8002:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8003:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* return true if connection established */
8004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_is_init_finished(WOLFSSL* ssl)
8005:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
 5929              		.loc 1 8005 0
 5930              		.cfi_startproc
 5931              	.LVL663:
8006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL)
8007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;
 5932              		.loc 1 8007 0
 5933 0000 031E     		sub	r3, r0, #0
8006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == NULL)
 5934              		.loc 1 8006 0
 5935 0002 04D0     		beq	.L684
8008:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->options.handShakeState == HANDSHAKE_DONE)
 5936              		.loc 1 8009 0
 5937 0004 034B     		ldr	r3, .L686
 5938 0006 C35C     		ldrb	r3, [r0, r3]
 5939 0008 0A3B     		sub	r3, r3, #10
8007:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
 5940              		.loc 1 8007 0
 5941 000a 5842     		neg	r0, r3
 5942 000c 4341     		adc	r3, r3, r0
 5943              	.LVL664:
 5944              	.L684:
8010:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 1;
8011:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
 5945              		.loc 1 8013 0
 5946 000e 181C     		mov	r0, r3
 5947              		@ sp needed
 5948 0010 7047     		bx	lr
 5949              	.L687:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 259


 5950 0012 C046     		.align	2
 5951              	.L686:
 5952 0014 16020000 		.word	534
 5953              		.cfi_endproc
 5954              	.LFE100:
 5955              		.size	wolfSSL_is_init_finished, .-wolfSSL_is_init_finished
 5956              		.section	.text.wolfSSL_get_shutdown,"ax",%progbits
 5957              		.align	1
 5958              		.global	wolfSSL_get_shutdown
 5959              		.code	16
 5960              		.thumb_func
 5961              		.type	wolfSSL_get_shutdown, %function
 5962              	wolfSSL_get_shutdown:
 5963              	.LFB101:
8014:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8015:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(GOAHEAD_WS)
8016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_tmp_rsa_callback(WOLFSSL_CTX* ctx,
8017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                       WOLFSSL_RSA*(*f)(WOLFSSL*, int, int))
8018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* wolfSSL verifies all these internally */
8020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
8021:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)f;
8022:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8023:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8024:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8025:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_shutdown(WOLFSSL* ssl, int opt)
8026:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8027:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_set_shutdown");
8028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if(ssl==NULL) {
8029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Shutdown not set. ssl is null");
8030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return;
8031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8032:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8033:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.sentNotify =  (opt&SSL_SENT_SHUTDOWN) > 0;
8034:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->options.closeNotify = (opt&SSL_RECEIVED_SHUTDOWN) > 0;
8035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8037:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_CTX_set_options(WOLFSSL_CTX* ctx, long opt)
8039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8040:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* goahead calls with 0, do nothing */
8041:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_set_options");
8042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
8043:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return opt;
8044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8045:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8046:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8047:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_set_rfd(WOLFSSL* ssl, int rfd)
8048:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8049:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_set_rfd");
8050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->rfd = rfd;      /* not used directly to allow IO callbacks */
8051:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8052:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->IOCB_ReadCtx  = &ssl->rfd;
8053:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
8055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8056:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 260


8057:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_set_wfd(WOLFSSL* ssl, int wfd)
8059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_set_wfd");
8061:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->wfd = wfd;      /* not used directly to allow IO callbacks */
8062:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8063:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ssl->IOCB_WriteCtx  = &ssl->wfd;
8064:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8065:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
8066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8067:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8068:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_RSA* wolfSSL_RSA_generate_key(int len, unsigned long bits,
8070:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           void(*f)(int, int, void*), void* data)
8071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* no tmp key needed, actual generation not supported */
8073:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("RSA_generate_key");
8074:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)len;
8075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)bits;
8076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)f;
8077:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)data;
8078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
8079:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8080:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8081:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8082:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509* wolfSSL_X509_STORE_CTX_get_current_cert(
8084:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                     WOLFSSL_X509_STORE_CTX* ctx)
8085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_STORE_CTX_get_current_cert");
8087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if(ctx)
8088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ctx->current_cert;
8089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
8090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8091:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8092:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_STORE_CTX_get_error(WOLFSSL_X509_STORE_CTX* ctx)
8094:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_STORE_CTX_get_error");
8096:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx != NULL)
8097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ctx->error;
8098:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8100:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8101:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8102:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_STORE_CTX_get_error_depth(WOLFSSL_X509_STORE_CTX* ctx)
8103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_STORE_CTX_get_error_depth");
8105:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if(ctx)
8106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ctx->error_depth;
8107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_FATAL_ERROR;
8108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8109:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8110:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_BIO_METHOD* wolfSSL_BIO_f_buffer(void)
8112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static WOLFSSL_BIO_METHOD meth;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 261


8114:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_f_buffer");
8116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         meth.type = BIO_BUFFER;
8117:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8118:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return &meth;
8119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8120:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8121:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_BIO_set_write_buffer_size(WOLFSSL_BIO* bio, long size)
8123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* wolfSSL has internal buffer, compatibility only */
8125:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_set_write_buffer_size");
8126:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)bio;
8127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return size;
8128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8129:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8130:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_BIO_METHOD* wolfSSL_BIO_f_ssl(void)
8132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static WOLFSSL_BIO_METHOD meth;
8134:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_f_ssl");
8136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         meth.type = BIO_SSL;
8137:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8138:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return &meth;
8139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8140:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8141:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_BIO* wolfSSL_BIO_new_socket(int sfd, int closeF)
8143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_BIO* bio = (WOLFSSL_BIO*) XMALLOC(sizeof(WOLFSSL_BIO), 0,
8145:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                 DYNAMIC_TYPE_OPENSSL);
8146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_new_socket");
8148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (bio) {
8149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->type  = BIO_SOCKET;
8150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->close = (byte)closeF;
8151:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->eof   = 0;
8152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->ssl   = 0;
8153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->fd    = sfd;
8154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->prev  = 0;
8155:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->next  = 0;
8156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->mem   = NULL;
8157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->memLen = 0;
8158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return bio;
8160:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8161:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8162:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_eof(WOLFSSL_BIO* b)
8164:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_eof");
8166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (b->eof)
8167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 1;
8168:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8169:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8170:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 262


8171:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8172:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_BIO_set_ssl(WOLFSSL_BIO* b, WOLFSSL* ssl, int closeF)
8174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_set_ssl");
8176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         b->ssl   = ssl;
8177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         b->close = (byte)closeF;
8178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* add to ssl for bio free if SSL_free called before/instead of free_all? */
8179:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8181:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8182:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8183:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_BIO* wolfSSL_BIO_new(WOLFSSL_BIO_METHOD* method)
8185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_BIO* bio = (WOLFSSL_BIO*) XMALLOC(sizeof(WOLFSSL_BIO), 0,
8187:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                 DYNAMIC_TYPE_OPENSSL);
8188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_new");
8189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (bio) {
8190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->type   = method->type;
8191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->close  = 0;
8192:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->eof    = 0;
8193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->ssl    = NULL;
8194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->mem    = NULL;
8195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->memLen = 0;
8196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->fd     = 0;
8197:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->prev   = NULL;
8198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio->next   = NULL;
8199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return bio;
8201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8202:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8203:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_get_mem_data(WOLFSSL_BIO* bio, const byte** p)
8205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (bio == NULL || p == NULL)
8207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
8208:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *p = bio->mem;
8210:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return bio->memLen;
8212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8213:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8214:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_BIO* wolfSSL_BIO_new_mem_buf(void* buf, int len)
8216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8217:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_BIO* bio = NULL;
8218:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (buf == NULL)
8219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return bio;
8220:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         bio = wolfSSL_BIO_new(wolfSSL_BIO_s_mem());
8222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (bio == NULL)
8223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return bio;
8224:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8225:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         bio->memLen = len;
8226:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         bio->mem    = (byte*)XMALLOC(len, 0, DYNAMIC_TYPE_OPENSSL);
8227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (bio->mem == NULL) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 263


8228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(bio, 0, DYNAMIC_TYPE_OPENSSL);
8229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
8230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8231:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(bio->mem, buf, len);
8233:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8234:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return bio;
8235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8236:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8237:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8238:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef USE_WINDOWS_API
8239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define CloseSocket(s) closesocket(s)
8240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #elif defined(WOLFSSL_MDK_ARM)  || defined(WOLFSSL_KEIL_TCP_NET)
8241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define CloseSocket(s) closesocket(s)
8242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     extern int closesocket(int) ;
8243:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
8244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #define CloseSocket(s) close(s)
8245:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
8246:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8247:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_free(WOLFSSL_BIO* bio)
8248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* unchain?, doesn't matter in goahead since from free all */
8250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_free");
8251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (bio) {
8252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (bio->close) {
8253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (bio->ssl)
8254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wolfSSL_free(bio->ssl);
8255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (bio->fd)
8256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     CloseSocket(bio->fd);
8257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (bio->mem)
8259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(bio->mem, 0, DYNAMIC_TYPE_OPENSSL);
8260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(bio, 0, DYNAMIC_TYPE_OPENSSL);
8261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8263:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8264:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8265:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8266:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_free_all(WOLFSSL_BIO* bio)
8267:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8268:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_free_all");
8269:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while (bio) {
8270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_BIO* next = bio->next;
8271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_BIO_free(bio);
8272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio = next;
8273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8276:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8277:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_read(WOLFSSL_BIO* bio, void* buf, int len)
8279:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  ret;
8281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL* ssl = 0;
8282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_BIO* front = bio;
8283:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8284:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_read");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 264


8285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* already got eof, again is error */
8286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (front->eof)
8287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
8288:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while(bio && ((ssl = bio->ssl) == 0) )
8290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio = bio->next;
8291:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8292:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == 0) return BAD_FUNC_ARG;
8293:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wolfSSL_read(ssl, buf, len);
8295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret == 0)
8296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             front->eof = 1;
8297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ret < 0) {
8298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int err = wolfSSL_get_error(ssl, 0);
8299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( !(err == SSL_ERROR_WANT_READ || err == SSL_ERROR_WANT_WRITE) )
8300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 front->eof = 1;
8301:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
8303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8304:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8305:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8306:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_write(WOLFSSL_BIO* bio, const void* data, int len)
8307:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8308:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  ret;
8309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL* ssl = 0;
8310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_BIO* front = bio;
8311:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_write");
8313:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* already got eof, again is error */
8314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (front->eof)
8315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
8316:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8317:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while(bio && ((ssl = bio->ssl) == 0) )
8318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             bio = bio->next;
8319:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl == 0) return BAD_FUNC_ARG;
8321:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = wolfSSL_write(ssl, data, len);
8323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret == 0)
8324:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             front->eof = 1;
8325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ret < 0) {
8326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int err = wolfSSL_get_error(ssl, 0);
8327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if ( !(err == SSL_ERROR_WANT_READ || err == SSL_ERROR_WANT_WRITE) )
8328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 front->eof = 1;
8329:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8330:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
8332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8333:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8334:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_BIO* wolfSSL_BIO_push(WOLFSSL_BIO* top, WOLFSSL_BIO* append)
8336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_push");
8338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         top->next    = append;
8339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         append->prev = top;
8340:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return top;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 265


8342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8343:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8344:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_BIO_flush(WOLFSSL_BIO* bio)
8346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* for wolfSSL no flushing needed */
8348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("BIO_flush");
8349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)bio;
8350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 1;
8351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8352:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8353:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8354:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA || GOAHEAD_WS */
8355:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8356:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8357:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(OPENSSL_EXTRA) || defined(HAVE_WEBSERVER)
8358:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_default_passwd_cb_userdata(WOLFSSL_CTX* ctx,
8360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                    void* userdata)
8361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_set_default_passwd_cb_userdata");
8363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->userdata = userdata;
8364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8365:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8366:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_default_passwd_cb(WOLFSSL_CTX* ctx, pem_password_cb cb)
8368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_set_default_passwd_cb");
8370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ctx->passwd_cb = cb;
8371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8372:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_num_locks(void)
8374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8375:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8377:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_locking_callback(void (*f)(int, int, const char*, int))
8379:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)f;
8381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8382:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_set_id_callback(unsigned long (*f)(void))
8384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8385:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)f;
8386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned long wolfSSL_ERR_get_error(void)
8389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: */
8391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8393:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8394:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
8395:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_BytesToKey(const WOLFSSL_EVP_CIPHER* type,
8397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                        const WOLFSSL_EVP_MD* md, const byte* salt,
8398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                        const byte* data, int sz, int count, byte* key, byte* iv)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 266


8399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8400:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  keyLen = 0;
8401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  ivLen  = 0;
8402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  j;
8403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  keyLeft;
8404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  ivLeft;
8405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int  keyOutput = 0;
8406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte digest[MD5_DIGEST_SIZE];
8407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
8408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Md5* md5 = NULL;
8409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
8410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Md5  md5[1];
8411:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
8412:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
8414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         md5 = (Md5*)XMALLOC(sizeof(Md5), NULL, DYNAMIC_TYPE_TMP_BUFFER);
8415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (md5 == NULL)
8416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;
8417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
8418:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_BytesToKey");
8420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_InitMd5(md5);
8421:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* only support MD5 for now */
8423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XSTRNCMP(md, "MD5", 3) != 0) return 0;
8424:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* only support CBC DES and AES for now */
8426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XSTRNCMP(type, EVP_DES_CBC, EVP_DES_SIZE) == 0) {
8427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             keyLen = DES_KEY_SIZE;
8428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ivLen  = DES_IV_SIZE;
8429:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8430:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, EVP_DES_EDE3_CBC, EVP_DES_EDE3_SIZE) == 0) {
8431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             keyLen = DES3_KEY_SIZE;
8432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ivLen  = DES_IV_SIZE;
8433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8434:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, EVP_AES_128_CBC, EVP_AES_SIZE) == 0) {
8435:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             keyLen = AES_128_KEY_SIZE;
8436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ivLen  = AES_IV_SIZE;
8437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, EVP_AES_192_CBC, EVP_AES_SIZE) == 0) {
8439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             keyLen = AES_192_KEY_SIZE;
8440:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ivLen  = AES_IV_SIZE;
8441:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, EVP_AES_256_CBC, EVP_AES_SIZE) == 0) {
8443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             keyLen = AES_256_KEY_SIZE;
8444:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ivLen  = AES_IV_SIZE;
8445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8446:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else {
8447:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
8448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(md5, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
8450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;
8451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8452:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         keyLeft   = keyLen;
8454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ivLeft    = ivLen;
8455:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 267


8456:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         while (keyOutput < (keyLen + ivLen)) {
8457:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int digestLeft = MD5_DIGEST_SIZE;
8458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* D_(i - 1) */
8459:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (keyOutput)                      /* first time D_0 is empty */
8460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Md5Update(md5, digest, MD5_DIGEST_SIZE);
8461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* data */
8462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_Md5Update(md5, data, sz);
8463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* salt */
8464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (salt)
8465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Md5Update(md5, salt, EVP_SALT_SIZE);
8466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_Md5Final(md5, digest);
8467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* count */
8468:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             for (j = 1; j < count; j++) {
8469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Md5Update(md5, digest, MD5_DIGEST_SIZE);
8470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Md5Final(md5, digest);
8471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8472:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (keyLeft) {
8474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 int store = min(keyLeft, MD5_DIGEST_SIZE);
8475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&key[keyLen - keyLeft], digest, store);
8476:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 keyOutput  += store;
8478:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 keyLeft    -= store;
8479:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 digestLeft -= store;
8480:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8481:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8482:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ivLeft && digestLeft) {
8483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 int store = min(ivLeft, digestLeft);
8484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (iv != NULL)
8485:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XMEMCPY(&iv[ivLen - ivLeft],
8486:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             &digest[MD5_DIGEST_SIZE - digestLeft], store);
8487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 keyOutput += store;
8488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ivLeft    -= store;
8489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8490:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8491:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
8493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(md5, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
8495:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8496:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return keyOutput == (keyLen + ivLen) ? keyOutput : 0;
8497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8498:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8499:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_MD5 */
8500:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8501:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA || HAVE_WEBSERVER */
8502:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8503:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8504:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef OPENSSL_EXTRA
8505:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned long wolfSSLeay(void)
8507:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSLEAY_VERSION_NUMBER;
8509:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8510:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8511:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const char* wolfSSLeay_version(int type)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 268


8513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8514:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* version = "SSLeay wolfSSL compatibility";
8515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)type;
8516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return version;
8517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8518:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8519:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8520:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
8521:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_MD5_Init(WOLFSSL_MD5_CTX* md5)
8522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8523:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef char md5_test[sizeof(MD5_CTX) >= sizeof(Md5) ? 1 : -1];
8524:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sizeof(md5_test);
8525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8526:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("MD5_Init");
8527:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_InitMd5((Md5*)md5);
8528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8529:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8530:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_MD5_Update(WOLFSSL_MD5_CTX* md5, const void* input,
8532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            unsigned long sz)
8533:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_MD5_Update");
8535:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Md5Update((Md5*)md5, (const byte*)input, (word32)sz);
8536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8537:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8538:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8539:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_MD5_Final(byte* input, WOLFSSL_MD5_CTX* md5)
8540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("MD5_Final");
8542:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Md5Final((Md5*)md5, input);
8543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8544:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_MD5 */
8545:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8546:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8547:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
8548:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA_Init(WOLFSSL_SHA_CTX* sha)
8549:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef char sha_test[sizeof(SHA_CTX) >= sizeof(Sha) ? 1 : -1];
8551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sizeof(sha_test);
8552:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA_Init");
8554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_InitSha((Sha*)sha);  /* OpenSSL compat, no ret */
8555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8556:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8557:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8558:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA_Update(WOLFSSL_SHA_CTX* sha, const void* input,
8559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            unsigned long sz)
8560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA_Update");
8562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_ShaUpdate((Sha*)sha, (const byte*)input, (word32)sz);
8563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8564:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8565:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA_Final(byte* input, WOLFSSL_SHA_CTX* sha)
8567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA_Final");
8569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_ShaFinal((Sha*)sha, input);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 269


8570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8571:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8572:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA1_Init(WOLFSSL_SHA_CTX* sha)
8574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA1_Init");
8576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SHA_Init(sha);
8577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8578:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8579:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA1_Update(WOLFSSL_SHA_CTX* sha, const void* input,
8581:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                             unsigned long sz)
8582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA1_Update");
8584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SHA_Update(sha, input, sz);
8585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8587:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA1_Final(byte* input, WOLFSSL_SHA_CTX* sha)
8589:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA1_Final");
8591:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         SHA_Final(input, sha);
8592:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8593:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SHA */
8594:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8595:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA256_Init(WOLFSSL_SHA256_CTX* sha256)
8597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef char sha_test[sizeof(SHA256_CTX) >= sizeof(Sha256) ? 1 : -1];
8599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sizeof(sha_test);
8600:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA256_Init");
8602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_InitSha256((Sha256*)sha256);  /* OpenSSL compat, no error */
8603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8604:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8605:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA256_Update(WOLFSSL_SHA256_CTX* sha, const void* input,
8607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               unsigned long sz)
8608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA256_Update");
8610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Sha256Update((Sha256*)sha, (const byte*)input, (word32)sz);
8611:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no error */
8612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8613:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8614:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8615:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA256_Final(byte* input, WOLFSSL_SHA256_CTX* sha)
8616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8617:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA256_Final");
8618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Sha256Final((Sha256*)sha, input);
8619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no error */
8620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8621:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8622:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SHA384
8624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8625:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA384_Init(WOLFSSL_SHA384_CTX* sha)
8626:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 270


8627:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef char sha_test[sizeof(SHA384_CTX) >= sizeof(Sha384) ? 1 : -1];
8628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sizeof(sha_test);
8629:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA384_Init");
8631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_InitSha384((Sha384*)sha);   /* OpenSSL compat, no error */
8632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8633:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8634:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA384_Update(WOLFSSL_SHA384_CTX* sha, const void* input,
8636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            unsigned long sz)
8637:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8638:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA384_Update");
8639:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Sha384Update((Sha384*)sha, (const byte*)input, (word32)sz);
8640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no error */
8641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8642:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8643:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA384_Final(byte* input, WOLFSSL_SHA384_CTX* sha)
8645:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA384_Final");
8647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Sha384Final((Sha384*)sha, input);
8648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no error */
8649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8650:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* WOLFSSL_SHA384 */
8652:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8653:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    #ifdef WOLFSSL_SHA512
8655:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8656:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA512_Init(WOLFSSL_SHA512_CTX* sha)
8657:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         typedef char sha_test[sizeof(SHA512_CTX) >= sizeof(Sha512) ? 1 : -1];
8659:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sizeof(sha_test);
8660:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA512_Init");
8662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_InitSha512((Sha512*)sha);  /* OpenSSL compat, no error */
8663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8664:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8665:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA512_Update(WOLFSSL_SHA512_CTX* sha, const void* input,
8667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                            unsigned long sz)
8668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA512_Update");
8670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Sha512Update((Sha512*)sha, (const byte*)input, (word32)sz);
8671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no error */
8672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8673:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8674:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_SHA512_Final(byte* input, WOLFSSL_SHA512_CTX* sha)
8676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SHA512_Final");
8678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Sha512Final((Sha512*)sha, input);
8679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no error */
8680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8681:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* WOLFSSL_SHA512 */
8683:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 271


8684:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_MD5
8686:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8687:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_MD* wolfSSL_EVP_md5(void)
8688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "MD5";
8690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_md5");
8691:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* NO_MD5 */
8695:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8696:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8697:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
8698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_MD* wolfSSL_EVP_sha1(void)
8699:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "SHA";
8701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_sha1");
8702:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8704:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SHA */
8705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8706:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_MD* wolfSSL_EVP_sha256(void)
8708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "SHA256";
8710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_sha256");
8711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8712:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8713:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SHA384
8715:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_MD* wolfSSL_EVP_sha384(void)
8717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "SHA384";
8719:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_sha384");
8720:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8721:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8722:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* WOLFSSL_SHA384 */
8724:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SHA512
8726:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8727:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_MD* wolfSSL_EVP_sha512(void)
8728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "SHA512";
8730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_sha512");
8731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8733:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* WOLFSSL_SHA512 */
8735:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8736:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_EVP_MD_CTX_init(WOLFSSL_EVP_MD_CTX* ctx)
8738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_CIPHER_MD_CTX_init");
8740:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 272


8741:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* do nothing */
8742:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8743:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_aes_128_cbc(void)
8745:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_aes_128_cbc");
8747:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_AES_128_CBC;
8748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8749:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8751:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_aes_192_cbc(void)
8752:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8753:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_aes_192_cbc");
8754:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_AES_192_CBC;
8755:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8757:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8758:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_aes_256_cbc(void)
8759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_aes_256_cbc");
8761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_AES_256_CBC;
8762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8763:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_aes_128_ctr(void)
8766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_aes_128_ctr");
8768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_AES_128_CTR;
8769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8770:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8771:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8772:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_aes_192_ctr(void)
8773:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_aes_192_ctr");
8775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_AES_192_CTR;
8776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8777:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8778:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_aes_256_ctr(void)
8780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_aes_256_ctr");
8782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_AES_256_CTR;
8783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8784:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8785:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_des_cbc(void)
8787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_des_cbc");
8789:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_DES_CBC;
8790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8791:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8792:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_des_ede3_cbc(void)
8794:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8795:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_des_ede3_cbc");
8796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_DES_EDE3_CBC;
8797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 273


8798:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8799:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8800:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_rc4(void)
8801:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8802:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "ARC4";
8803:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_rc4");
8804:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8806:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8807:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_IDEA
8808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_idea_cbc(void)
8809:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_idea_cbc");
8811:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_IDEA_CBC;
8812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8813:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
8814:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const WOLFSSL_EVP_CIPHER* wolfSSL_EVP_enc_null(void)
8815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         static const char* type = "NULL";
8817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_enc_null");
8818:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
8819:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8820:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8821:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_MD_CTX_cleanup(WOLFSSL_EVP_MD_CTX* ctx)
8823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_MD_CTX_cleanup");
8825:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
8826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
8827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8828:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8830:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_EVP_CIPHER_CTX_init(WOLFSSL_EVP_CIPHER_CTX* ctx)
8832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8833:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_CIPHER_CTX_init");
8834:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx) {
8835:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = 0xff;   /* no init */
8836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 0;
8837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->enc        = 1;      /* start in encrypt mode */
8838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8840:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8841:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
8843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_CIPHER_CTX_cleanup(WOLFSSL_EVP_CIPHER_CTX* ctx)
8844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_CIPHER_CTX_cleanup");
8846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx) {
8847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = 0xff;  /* no more init */
8848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 0;
8849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8850:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8851:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
8852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
8853:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8854:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 274


8855:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* return SSL_SUCCESS on ok, 0 on failure to match API compatibility */
8856:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  wolfSSL_EVP_CipherInit(WOLFSSL_EVP_CIPHER_CTX* ctx,
8857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                const WOLFSSL_EVP_CIPHER* type, byte* key,
8858:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                byte* iv, int enc)
8859:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
8860:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int ret = -1;  /* failure local, during function 0 means success
8861:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                           because internal functions work that way */
8862:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)iv;
8863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)enc;
8864:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_CipherInit");
8866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL) {
8867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("no ctx");
8868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;   /* failure */
8869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8870:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (type == NULL && ctx->cipherType == 0xff) {
8872:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("no type set");
8873:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;   /* failure */
8874:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8875:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8876:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_AES
8877:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->cipherType == AES_128_CBC_TYPE ||
8878:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             (type && XSTRNCMP(type, EVP_AES_128_CBC, EVP_AES_SIZE) == 0)) {
8879:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_AES_128_CBC);
8880:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = AES_128_CBC_TYPE;
8881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 16;
8882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
8883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
8884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
8885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetKey(&ctx->cipher.aes, key, ctx->keyLen, iv,
8886:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 ctx->enc ? AES_ENCRYPTION : AES_DECRYPTION);
8887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8889:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8890:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
8891:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetIV(&ctx->cipher.aes, iv);
8892:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8894:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8895:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx->cipherType == AES_192_CBC_TYPE ||
8897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_AES_192_CBC, EVP_AES_SIZE) == 0)) {
8898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_AES_192_CBC);
8899:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = AES_192_CBC_TYPE;
8900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 24;
8901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
8902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
8903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
8904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetKey(&ctx->cipher.aes, key, ctx->keyLen, iv,
8905:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 ctx->enc ? AES_ENCRYPTION : AES_DECRYPTION);
8906:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8908:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
8910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetIV(&ctx->cipher.aes, iv);
8911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 275


8912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx->cipherType == AES_256_CBC_TYPE ||
8916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_AES_256_CBC, EVP_AES_SIZE) == 0)) {
8917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_AES_256_CBC);
8918:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = AES_256_CBC_TYPE;
8919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 32;
8920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
8921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
8922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
8923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetKey(&ctx->cipher.aes, key, ctx->keyLen, iv,
8924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 ctx->enc ? AES_ENCRYPTION : AES_DECRYPTION);
8925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8927:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
8929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetIV(&ctx->cipher.aes, iv);
8930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_AES_COUNTER
8935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx->cipherType == AES_128_CTR_TYPE ||
8936:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_AES_128_CTR, EVP_AES_SIZE) == 0)) {
8937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_AES_128_CTR);
8938:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = AES_128_CTR_TYPE;
8939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 16;
8940:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
8941:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
8942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
8943:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetKey(&ctx->cipher.aes, key, ctx->keyLen, iv,
8944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 AES_ENCRYPTION);
8945:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
8949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetIV(&ctx->cipher.aes, iv);
8950:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8952:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx->cipherType == AES_192_CTR_TYPE ||
8955:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_AES_192_CTR, EVP_AES_SIZE) == 0)) {
8956:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_AES_192_CTR);
8957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = AES_192_CTR_TYPE;
8958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 24;
8959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
8960:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
8961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
8962:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetKey(&ctx->cipher.aes, key, ctx->keyLen, iv,
8963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 AES_ENCRYPTION);
8964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8965:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
8968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetIV(&ctx->cipher.aes, iv);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 276


8969:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8970:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8971:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx->cipherType == AES_256_CTR_TYPE ||
8974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_AES_256_CTR, EVP_AES_SIZE) == 0)) {
8975:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_AES_256_CTR);
8976:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = AES_256_CTR_TYPE;
8977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 32;
8978:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
8979:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
8980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
8981:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetKey(&ctx->cipher.aes, key, ctx->keyLen, iv,
8982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 AES_ENCRYPTION);
8983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8985:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8986:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
8987:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_AesSetIV(&ctx->cipher.aes, iv);
8988:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
8989:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
8990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
8991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
8992:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_AES_CTR */
8993:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_AES */
8994:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
8995:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
8996:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->cipherType == DES_CBC_TYPE ||
8997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_DES_CBC, EVP_DES_SIZE) == 0)) {
8998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_DES_CBC);
8999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = DES_CBC_TYPE;
9000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 8;
9001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
9002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
9003:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
9004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_Des_SetKey(&ctx->cipher.des, key, iv,
9005:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                           ctx->enc ? DES_ENCRYPTION : DES_DECRYPTION);
9006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
9007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
9008:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9009:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9010:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL)
9011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Des_SetIV(&ctx->cipher.des, iv);
9012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (ctx->cipherType == DES_EDE3_CBC_TYPE ||
9014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type &&
9015:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                   XSTRNCMP(type, EVP_DES_EDE3_CBC, EVP_DES_EDE3_SIZE) == 0)) {
9016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_DES_EDE3_CBC);
9017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = DES_EDE3_CBC_TYPE;
9018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = 24;
9019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
9020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
9021:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
9022:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_Des3_SetKey(&ctx->cipher.des3, key, iv,
9023:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                           ctx->enc ? DES_ENCRYPTION : DES_DECRYPTION);
9024:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
9025:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 277


9026:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9027:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL) {
9029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_Des3_SetIV(&ctx->cipher.des3, iv);
9030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
9031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
9032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9033:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9034:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_DES3 */
9035:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RC4
9036:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->cipherType == ARC4_TYPE || (type &&
9037:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      XSTRNCMP(type, "ARC4", 4) == 0)) {
9038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("ARC4");
9039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = ARC4_TYPE;
9040:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ctx->keyLen == 0)  /* user may have already set */
9041:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->keyLen = 16;  /* default to 128 */
9042:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key)
9043:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Arc4SetKey(&ctx->cipher.arc4, key, ctx->keyLen);
9044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = 0;  /* success */
9045:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9046:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_RC4 */
9047:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_IDEA
9048:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->cipherType == IDEA_CBC_TYPE ||
9049:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                  (type && XSTRNCMP(type, EVP_IDEA_CBC, EVP_IDEA_SIZE) == 0)) {
9050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG(EVP_IDEA_CBC);
9051:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = IDEA_CBC_TYPE;
9052:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen     = IDEA_KEY_SIZE;
9053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (enc == 0 || enc == 1)
9054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ctx->enc = enc ? 1 : 0;
9055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (key) {
9056:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 ret = wc_IdeaSetKey(&ctx->cipher.idea, key, (word16)ctx->keyLen,
9057:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                     iv, ctx->enc ? IDEA_ENCRYPTION :
9058:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                    IDEA_DECRYPTION);
9059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ret != 0)
9060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     return ret;
9061:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9062:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9063:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (iv && key == NULL)
9064:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_IdeaSetIV(&ctx->cipher.idea, iv);
9065:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9066:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_IDEA */
9067:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->cipherType == NULL_CIPHER_TYPE || (type &&
9068:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      XSTRNCMP(type, "NULL", 4) == 0)) {
9069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("NULL cipher");
9070:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->cipherType = NULL_CIPHER_TYPE;
9071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen = 0;
9072:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ret = 0;  /* success */
9073:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9074:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret == 0)
9076:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_SUCCESS;
9077:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;  /* overall failure */
9079:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9080:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9081:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 278


9083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_CIPHER_CTX_key_length(WOLFSSL_EVP_CIPHER_CTX* ctx)
9084:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_CIPHER_CTX_key_length");
9086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx)
9087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return ctx->keyLen;
9088:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;   /* failure */
9090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9091:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9092:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9094:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_CIPHER_CTX_set_key_length(WOLFSSL_EVP_CIPHER_CTX* ctx,
9095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                              int keylen)
9096:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9097:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_CIPHER_CTX_set_key_length");
9098:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx)
9099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->keyLen = keylen;
9100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9101:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;  /* failure */
9102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9105:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9106:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_Cipher(WOLFSSL_EVP_CIPHER_CTX* ctx, byte* dst, byte* src,
9109:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                           word32 len)
9110:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int ret = 0;
9112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_EVP_Cipher");
9113:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9114:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL || dst == NULL || src == NULL) {
9115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad function argument");
9116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;  /* failure */
9117:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9118:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx->cipherType == 0xff) {
9120:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("no init");
9121:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;  /* failure */
9122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9123:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ctx->cipherType) {
9125:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9126:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_AES
9127:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_AES_CBC
9128:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_128_CBC_TYPE :
9129:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_192_CBC_TYPE :
9130:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_256_CBC_TYPE :
9131:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("AES CBC");
9132:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ctx->enc)
9133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = wc_AesCbcEncrypt(&ctx->cipher.aes, dst, src, len);
9134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
9135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = wc_AesCbcDecrypt(&ctx->cipher.aes, dst, src, len);
9136:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9137:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_AES_CBC */
9138:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_AES_COUNTER
9139:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_128_CTR_TYPE :
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 279


9140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_192_CTR_TYPE :
9141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_256_CTR_TYPE :
9142:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     WOLFSSL_MSG("AES CTR");
9143:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wc_AesCtrEncrypt(&ctx->cipher.aes, dst, src, len);
9144:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9145:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_AES_COUNTER */
9146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_AES */
9147:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9148:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
9149:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DES_CBC_TYPE :
9150:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ctx->enc)
9151:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wc_Des_CbcEncrypt(&ctx->cipher.des, dst, src, len);
9152:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
9153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wc_Des_CbcDecrypt(&ctx->cipher.des, dst, src, len);
9154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9155:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9156:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DES_EDE3_CBC_TYPE :
9157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ctx->enc)
9158:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = wc_Des3_CbcEncrypt(&ctx->cipher.des3, dst, src, len);
9159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
9160:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = wc_Des3_CbcDecrypt(&ctx->cipher.des3, dst, src, len);
9161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9162:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9163:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9164:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RC4
9165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ARC4_TYPE :
9166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wc_Arc4Process(&ctx->cipher.arc4, dst, src, len);
9167:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9168:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9169:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_IDEA
9171:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case IDEA_CBC_TYPE :
9172:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (ctx->enc)
9173:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wc_IdeaCbcEncrypt(&ctx->cipher.idea, dst, src, len);
9174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 else
9175:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     wc_IdeaCbcDecrypt(&ctx->cipher.idea, dst, src, len);
9176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9177:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case NULL_CIPHER_TYPE :
9179:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(dst, src, len);
9180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9181:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default: {
9183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("bad type");
9184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return 0;  /* failure */
9185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9187:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret != 0) {
9189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("wolfSSL_EVP_Cipher failure");
9190:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;  /* failuer */
9191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9192:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9193:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_MSG("wolfSSL_EVP_Cipher success");
9194:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;  /* success */
9195:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9196:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 280


9197:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* store for external read of iv, SSL_SUCCESS on success */
9199:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  wolfSSL_StoreExternalIV(WOLFSSL_EVP_CIPHER_CTX* ctx)
9200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_StoreExternalIV");
9202:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9203:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL) {
9204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad function argument");
9205:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
9206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9207:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9208:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ctx->cipherType) {
9209:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9210:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_AES
9211:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_128_CBC_TYPE :
9212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_192_CBC_TYPE :
9213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_256_CBC_TYPE :
9214:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("AES CBC");
9215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(ctx->iv, &ctx->cipher.aes.reg, AES_BLOCK_SIZE);
9216:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9217:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9218:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_AES_COUNTER
9219:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_128_CTR_TYPE :
9220:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_192_CTR_TYPE :
9221:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_256_CTR_TYPE :
9222:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("AES CTR");
9223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(ctx->iv, &ctx->cipher.aes.reg, AES_BLOCK_SIZE);
9224:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9225:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_AES_COUNTER */
9226:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9227:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_AES */
9228:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9229:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
9230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DES_CBC_TYPE :
9231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("DES CBC");
9232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(ctx->iv, &ctx->cipher.des.reg, DES_BLOCK_SIZE);
9233:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9234:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DES_EDE3_CBC_TYPE :
9236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("DES EDE3 CBC");
9237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(ctx->iv, &ctx->cipher.des3.reg, DES_BLOCK_SIZE);
9238:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9239:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9241:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_IDEA
9242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case IDEA_CBC_TYPE :
9243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("IDEA CBC");
9244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(ctx->iv, &ctx->cipher.idea.reg, IDEA_BLOCK_SIZE);
9245:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9246:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9247:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ARC4_TYPE :
9248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("ARC4");
9249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9250:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case NULL_CIPHER_TYPE :
9252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("NULL");
9253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 281


9254:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default: {
9256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("bad type");
9257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
9258:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9261:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9262:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9263:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9264:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* set internal IV from external, SSL_SUCCESS on success */
9265:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int  wolfSSL_SetInternalIV(WOLFSSL_EVP_CIPHER_CTX* ctx)
9266:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9267:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9268:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_SetInternalIV");
9269:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9270:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ctx == NULL) {
9271:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad function argument");
9272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
9273:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9274:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9275:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ctx->cipherType) {
9276:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9277:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_AES
9278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_128_CBC_TYPE :
9279:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_192_CBC_TYPE :
9280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_256_CBC_TYPE :
9281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("AES CBC");
9282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&ctx->cipher.aes.reg, ctx->iv, AES_BLOCK_SIZE);
9283:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9284:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9285:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_AES_COUNTER
9286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_128_CTR_TYPE :
9287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_192_CTR_TYPE :
9288:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case AES_256_CTR_TYPE :
9289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("AES CTR");
9290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&ctx->cipher.aes.reg, ctx->iv, AES_BLOCK_SIZE);
9291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9292:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9293:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9294:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_AES */
9295:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9296:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
9297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DES_CBC_TYPE :
9298:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("DES CBC");
9299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&ctx->cipher.des.reg, ctx->iv, DES_BLOCK_SIZE);
9300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9301:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DES_EDE3_CBC_TYPE :
9303:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("DES EDE3 CBC");
9304:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&ctx->cipher.des3.reg, ctx->iv, DES_BLOCK_SIZE);
9305:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9306:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9307:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9308:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_IDEA
9309:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case IDEA_CBC_TYPE :
9310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("IDEA CBC");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 282


9311:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(&ctx->cipher.idea.reg, ctx->iv, IDEA_BLOCK_SIZE);
9312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9313:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ARC4_TYPE :
9315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("ARC4");
9316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9317:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case NULL_CIPHER_TYPE :
9319:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("NULL");
9320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9321:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9322:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default: {
9323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 WOLFSSL_MSG("bad type");
9324:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return SSL_FATAL_ERROR;
9325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9329:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9330:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_DigestInit(WOLFSSL_EVP_MD_CTX* ctx,
9333:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                const WOLFSSL_EVP_MD* type)
9334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_DigestInit");
9336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XSTRNCMP(type, "SHA256", 6) == 0) {
9337:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              ctx->macType = SHA256;
9338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              wolfSSL_SHA256_Init((SHA256_CTX*)&ctx->hash);
9339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SHA384
9341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, "SHA384", 6) == 0) {
9342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              ctx->macType = SHA384;
9343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              wolfSSL_SHA384_Init((SHA384_CTX*)&ctx->hash);
9344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
9346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SHA512
9347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, "SHA512", 6) == 0) {
9348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              ctx->macType = SHA512;
9349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              wolfSSL_SHA512_Init((SHA512_CTX*)&ctx->hash);
9350:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
9352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_MD5
9353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, "MD5", 3) == 0) {
9354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->macType = MD5;
9355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wolfSSL_MD5_Init((MD5_CTX*)&ctx->hash);
9356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
9358:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_SHA
9359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* has to be last since would pick or 256, 384, or 512 too */
9360:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(type, "SHA", 3) == 0) {
9361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              ctx->macType = SHA;
9362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              wolfSSL_SHA_Init((SHA_CTX*)&ctx->hash);
9363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* NO_SHA */
9365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****              return BAD_FUNC_ARG;
9367:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 283


9368:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9370:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9371:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_DigestUpdate(WOLFSSL_EVP_MD_CTX* ctx, const void* data,
9374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 unsigned long sz)
9375:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_DigestUpdate");
9377:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ctx->macType) {
9379:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
9380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case MD5:
9381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_MD5_Update((MD5_CTX*)&ctx->hash, data,
9382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   (unsigned long)sz);
9383:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9384:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9385:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
9386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA:
9387:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA_Update((SHA_CTX*)&ctx->hash, data,
9388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                   (unsigned long)sz);
9389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9390:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9391:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA256
9392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA256:
9393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA256_Update((SHA256_CTX*)&ctx->hash, data,
9394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      (unsigned long)sz);
9395:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9396:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9397:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA384
9398:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA384:
9399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA384_Update((SHA384_CTX*)&ctx->hash, data,
9400:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      (unsigned long)sz);
9401:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9402:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9403:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA512
9404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA512:
9405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA512_Update((SHA512_CTX*)&ctx->hash, data,
9406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      (unsigned long)sz);
9407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9408:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
9410:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return BAD_FUNC_ARG;
9411:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9412:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9415:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9416:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_DigestFinal(WOLFSSL_EVP_MD_CTX* ctx, unsigned char* md,
9419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                unsigned int* s)
9420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_DigestFinal");
9422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ctx->macType) {
9423:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_MD5
9424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case MD5:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 284


9425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_MD5_Final(md, (MD5_CTX*)&ctx->hash);
9426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (s) *s = MD5_DIGEST_SIZE;
9427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9428:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9429:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
9430:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA:
9431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA_Final(md, (SHA_CTX*)&ctx->hash);
9432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (s) *s = SHA_DIGEST_SIZE;
9433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9434:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9435:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA256
9436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA256:
9437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA256_Final(md, (SHA256_CTX*)&ctx->hash);
9438:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (s) *s = SHA256_DIGEST_SIZE;
9439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9440:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9441:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA384
9442:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA384:
9443:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA384_Final(md, (SHA384_CTX*)&ctx->hash);
9444:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (s) *s = SHA384_DIGEST_SIZE;
9445:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9446:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9447:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA512
9448:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SHA512:
9449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 wolfSSL_SHA512_Final(md, (SHA512_CTX*)&ctx->hash);
9450:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (s) *s = SHA512_DIGEST_SIZE;
9451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9452:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
9454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return BAD_FUNC_ARG;
9455:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9456:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9457:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9458:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9459:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9460:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9462:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_EVP_DigestFinal_ex(WOLFSSL_EVP_MD_CTX* ctx, unsigned char* md,
9463:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    unsigned int* s)
9464:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9465:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("EVP_DigestFinal_ex");
9466:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return EVP_DigestFinal(ctx, md, s);
9467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9468:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9469:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned char* wolfSSL_HMAC(const WOLFSSL_EVP_MD* evp_md, const void* key,
9471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 int key_len, const unsigned char* d, int n,
9472:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                 unsigned char* md, unsigned int* md_len)
9473:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9474:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int type;
9475:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         unsigned char* ret = NULL;
9476:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
9477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Hmac* hmac = NULL;
9478:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
9479:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Hmac  hmac[1];
9480:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
9481:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 285


9482:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("HMAC");
9483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!md)
9484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;  /* no static buffer support */
9485:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9486:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (XSTRNCMP(evp_md, "MD5", 3) == 0)
9487:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             type = MD5;
9488:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else if (XSTRNCMP(evp_md, "SHA", 3) == 0)
9489:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             type = SHA;
9490:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
9492:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
9494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         hmac = (Hmac*)XMALLOC(sizeof(Hmac), NULL, DYNAMIC_TYPE_TMP_BUFFER);
9495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (hmac == NULL)
9496:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
9497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
9498:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9499:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (wc_HmacSetKey(hmac, type, (const byte*)key, key_len) == 0)
9500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (wc_HmacUpdate(hmac, d, n) == 0)
9501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (wc_HmacFinal(hmac, md) == 0) {
9502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (md_len)
9503:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         *md_len = (type == MD5) ? (int)MD5_DIGEST_SIZE
9504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                 : (int)SHA_DIGEST_SIZE;
9505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     ret = md;
9506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
9507:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
9509:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(hmac, NULL, DYNAMIC_TYPE_TMP_BUFFER);
9510:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
9511:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
9513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9514:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_ERR_clear_error(void)
9516:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9517:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: */
9518:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9519:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9520:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9521:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_RAND_status(void)
9522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9523:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;  /* wolfCrypt provides enough seed internally */
9524:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9526:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9527:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9528:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_RAND_add(const void* add, int len, double entropy)
9529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9530:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)add;
9531:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)len;
9532:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)entropy;
9533:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9534:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* wolfSSL seeds/adds internally, use explicit RNG if you want
9535:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****            to take control */
9536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9537:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9538:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 286


9539:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
9540:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* SSL_SUCCESS on ok */
9541:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_DES_key_sched(WOLFSSL_const_DES_cblock* key,
9542:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                               WOLFSSL_DES_key_schedule* schedule)
9543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("DES_key_sched");
9545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(schedule, key, sizeof(const_DES_cblock));
9546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9548:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9549:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9550:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_DES_cbc_encrypt(const unsigned char* input,
9551:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  unsigned char* output, long length,
9552:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  WOLFSSL_DES_key_schedule* schedule,
9553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                  WOLFSSL_DES_cblock* ivec, int enc)
9554:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Des myDes;
9556:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("DES_cbc_encrypt");
9558:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no ret */
9560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Des_SetKey(&myDes, (const byte*)schedule, (const byte*)ivec, !enc);
9561:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9562:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (enc)
9563:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_Des_CbcEncrypt(&myDes, output, input, (word32)length);
9564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_Des_CbcDecrypt(&myDes, output, input, (word32)length);
9566:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9567:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9568:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9569:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* correctly sets ivec for next call */
9570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_DES_ncbc_encrypt(const unsigned char* input,
9571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                      unsigned char* output, long length,
9572:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                      WOLFSSL_DES_key_schedule* schedule, WOLFSSL_DES_cblock* ivec,
9573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                      int enc)
9574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9575:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         Des myDes;
9576:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("DES_ncbc_encrypt");
9578:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9579:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* OpenSSL compat, no ret */
9580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         wc_Des_SetKey(&myDes, (const byte*)schedule, (const byte*)ivec, !enc);
9581:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (enc)
9583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_Des_CbcEncrypt(&myDes, output, input, (word32)length);
9584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             wc_Des_CbcDecrypt(&myDes, output, input, (word32)length);
9586:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(ivec, output + length - sizeof(DES_cblock), sizeof(DES_cblock));
9588:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9589:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9590:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_DES3 */
9591:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9593:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_ERR_free_strings(void)
9594:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9595:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* handled internally */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 287


9596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9597:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9598:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_ERR_remove_state(unsigned long state)
9600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9601:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: GetErrors().Remove(); */
9602:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)state;
9603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9604:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9605:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_EVP_cleanup(void)
9607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9608:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* nothing to do here */
9609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9610:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9611:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_cleanup_all_ex_data(void)
9613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9614:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* nothing to do here */
9615:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9616:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_clear(WOLFSSL* ssl)
9619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9620:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ssl;
9621:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: GetErrors().Remove(); */
9622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9623:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9624:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9625:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9626:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_SSL_SESSION_set_timeout(WOLFSSL_SESSION* ses, long t)
9627:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 tmptime;
9629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!ses || t < 0)
9630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
9631:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9632:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         tmptime = t & 0xFFFFFFFF;
9633:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9634:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ses->timeout = tmptime;
9635:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9637:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9638:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9639:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_CTX_set_mode(WOLFSSL_CTX* ctx, long mode)
9641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER is wolfSSL default mode */
9643:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9644:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_CTX_set_mode");
9645:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (mode == SSL_MODE_ENABLE_PARTIAL_WRITE)
9646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             ctx->partialWrite = 1;
9647:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return mode;
9649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9650:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9651:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9652:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_SSL_get_mode(WOLFSSL* ssl)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 288


9653:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9654:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: */
9655:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ssl;
9656:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
9657:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9658:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9659:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_CTX_get_mode(WOLFSSL_CTX* ctx)
9661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: */
9663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
9664:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
9665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9666:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9667:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_CTX_set_default_read_ahead(WOLFSSL_CTX* ctx, int m)
9669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: maybe? */
9671:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
9672:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)m;
9673:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9674:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9675:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_CTX_set_session_id_context(WOLFSSL_CTX* ctx,
9677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                            const unsigned char* sid_ctx,
9678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                            unsigned int sid_ctx_len)
9679:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9680:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* No application specific context needed for wolfSSL */
9681:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
9682:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sid_ctx;
9683:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)sid_ctx_len;
9684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
9685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9686:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9687:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9688:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long wolfSSL_CTX_sess_get_cache_size(WOLFSSL_CTX* ctx)
9689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* TODO: maybe? */
9691:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)ctx;
9692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return (~0);
9693:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9694:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9695:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned long wolfSSL_ERR_get_error_line_data(const char** file, int* line,
9696:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                   const char** data, int *flags)
9697:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9698:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Not implemented */
9699:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)file;
9700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)line;
9701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)data;
9702:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (void)flags;
9703:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return 0;
9704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9705:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9706:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* OPENSSL_EXTRA */
9707:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9708:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9709:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(KEEP_PEER_CERT)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 289


9710:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9711:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509* wolfSSL_get_peer_certificate(WOLFSSL* ssl)
9712:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9713:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("SSL_get_peer_certificate");
9714:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ssl->peerCert.issuer.sz)
9715:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return &ssl->peerCert;
9716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         else
9717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;
9718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9719:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9720:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* KEEP_PEER_CERT */
9721:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9722:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9723:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(KEEP_PEER_CERT) || defined(SESSION_CERTS) || defined(OPENSSSL_EXTRA)
9724:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9725:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* user externally called free X509, if dynamic go ahead with free, otherwise
9726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****  * don't */
9727:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** static void ExternalFreeX509(WOLFSSL_X509* x509)
9728:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
9729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("ExternalFreeX509");
9730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (x509) {
9731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509->dynamicMemory) {
9732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeX509(x509);
9733:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(x509, NULL, DYNAMIC_TYPE_X509);
9734:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         } else {
9735:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("free called on non dynamic object, not freeing");
9736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9738:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
9739:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9740:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* KEEP_PEER_CERT || SESSION_CERTS || OPENSSSL_EXTRA */
9741:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9742:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(KEEP_PEER_CERT) || defined(SESSION_CERTS)
9743:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     void wolfSSL_FreeX509(WOLFSSL_X509* x509)
9745:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_FreeX509");
9747:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ExternalFreeX509(x509);
9748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9749:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9751:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* return the next, if any, altname from the peer cert */
9752:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char* wolfSSL_X509_get_next_altname(WOLFSSL_X509* cert)
9753:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9754:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char* ret = NULL;
9755:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_next_altname");
9756:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* don't have any to work with */
9758:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cert == NULL || cert->altNames == NULL)
9759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
9760:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* already went through them */
9762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cert->altNamesNext == NULL)
9763:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
9764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = cert->altNamesNext->name;
9766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cert->altNamesNext = cert->altNamesNext->next;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 290


9767:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return ret;
9769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9770:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9771:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9772:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509_NAME* wolfSSL_X509_get_issuer_name(WOLFSSL_X509* cert)
9773:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("X509_get_issuer_name");
9775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if(cert)
9776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return &cert->issuer;
9777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
9778:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9779:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9780:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509_NAME* wolfSSL_X509_get_subject_name(WOLFSSL_X509* cert)
9782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_subject_name");
9784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if(cert)
9785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return &cert->subject;
9786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
9787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9788:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_get_isCA(WOLFSSL_X509* x509)
9791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9792:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int isCA = 0;
9793:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9794:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_isCA");
9795:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9796:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL)
9797:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             isCA = x509->isCa;
9798:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_get_isCA", isCA);
9800:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9801:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return isCA;
9802:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9804:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9805:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef OPENSSL_EXTRA
9806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_ext_isSet_by_NID(WOLFSSL_X509* x509, int nid)
9807:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int isSet = 0;
9809:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_ext_isSet_by_NID");
9811:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL) {
9813:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             switch (nid) {
9814:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case BASIC_CA_OID: isSet = x509->basicConstSet; break;
9815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case ALT_NAMES_OID: isSet = x509->subjAltNameSet; break;
9816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case AUTH_KEY_OID: isSet = x509->authKeyIdSet; break;
9817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case SUBJ_KEY_OID: isSet = x509->subjKeyIdSet; break;
9818:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case KEY_USAGE_OID: isSet = x509->keyUsageSet; break;
9819:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #ifdef WOLFSSL_SEP
9820:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     case CERT_POLICY_OID: isSet = x509->certPolicySet; break;
9821:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #endif /* WOLFSSL_SEP */
9822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 291


9824:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9825:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_ext_isSet_by_NID", isSet);
9826:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return isSet;
9828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9829:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9830:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_ext_get_critical_by_NID(WOLFSSL_X509* x509, int nid)
9832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9833:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int crit = 0;
9834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9835:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_ext_get_critical_by_NID");
9836:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL) {
9838:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             switch (nid) {
9839:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case BASIC_CA_OID: crit = x509->basicConstCrit; break;
9840:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case ALT_NAMES_OID: crit = x509->subjAltNameCrit; break;
9841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case AUTH_KEY_OID: crit = x509->authKeyIdCrit; break;
9842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case SUBJ_KEY_OID: crit = x509->subjKeyIdCrit; break;
9843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 case KEY_USAGE_OID: crit = x509->keyUsageCrit; break;
9844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #ifdef WOLFSSL_SEP
9845:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     case CERT_POLICY_OID: crit = x509->certPolicyCrit; break;
9846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 #endif /* WOLFSSL_SEP */
9847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9849:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9850:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_ext_get_critical_by_NID", crit);
9851:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return crit;
9853:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9854:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9855:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9856:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_get_isSet_pathLength(WOLFSSL_X509* x509)
9857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9858:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int isSet = 0;
9859:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9860:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_isSet_pathLength");
9861:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9862:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL)
9863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             isSet = x509->basicConstPlSet;
9864:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9865:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_get_isSet_pathLength", isSet);
9866:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return isSet;
9868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9869:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9870:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     word32 wolfSSL_X509_get_pathLength(WOLFSSL_X509* x509)
9872:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9873:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word32 pathLength = 0;
9874:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_pathLength");
9876:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9877:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL)
9878:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             pathLength = x509->pathLength;
9879:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9880:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_get_pathLength", pathLength);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 292


9881:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return pathLength;
9883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9884:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9885:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9886:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     unsigned int wolfSSL_X509_get_keyUsage(WOLFSSL_X509* x509)
9887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9888:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         word16 usage = 0;
9889:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9890:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_keyUsage");
9891:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9892:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL)
9893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             usage = x509->keyUsage;
9894:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9895:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_get_keyUsage", usage);
9896:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9897:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return usage;
9898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9899:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9900:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* wolfSSL_X509_get_authorityKeyID(WOLFSSL_X509* x509,
9902:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           byte* dst, int* dstLen)
9903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte *id = NULL;
9905:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int copySz = 0;
9906:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9907:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_authorityKeyID");
9908:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL) {
9910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (x509->authKeyIdSet) {
9911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 copySz = min(dstLen != NULL ? *dstLen : 0,
9912:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                              (int)x509->authKeyIdSz);
9913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 id = x509->authKeyId;
9914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9915:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (dst != NULL && dstLen != NULL && id != NULL && copySz > 0) {
9917:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(dst, id, copySz);
9918:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 id = dst;
9919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 *dstLen = copySz;
9920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9921:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9922:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_get_authorityKeyID", copySz);
9924:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return id;
9926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9927:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9928:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9929:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* wolfSSL_X509_get_subjectKeyID(WOLFSSL_X509* x509,
9930:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                         byte* dst, int* dstLen)
9931:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9932:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte *id = NULL;
9933:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int copySz = 0;
9934:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_subjectKeyID");
9936:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9937:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 293


9938:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (x509->subjKeyIdSet) {
9939:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 copySz = min(dstLen != NULL ? *dstLen : 0,
9940:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                         (int)x509->subjKeyIdSz);
9941:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 id = x509->subjKeyId;
9942:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9943:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9944:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (dst != NULL && dstLen != NULL && id != NULL && copySz > 0) {
9945:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XMEMCPY(dst, id, copySz);
9946:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 id = dst;
9947:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 *dstLen = copySz;
9948:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
9949:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
9950:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9951:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_get_subjectKeyID", copySz);
9952:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9953:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return id;
9954:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9955:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9956:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9957:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_NAME_entry_count(WOLFSSL_X509_NAME* name)
9958:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9959:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int count = 0;
9960:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9961:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_NAME_entry_count");
9962:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9963:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (name != NULL)
9964:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             count = name->fullName.entryCount;
9965:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9966:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_NAME_entry_count", count);
9967:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return count;
9968:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
9969:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9970:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9971:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_NAME_get_text_by_NID(WOLFSSL_X509_NAME* name,
9972:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                           int nid, char* buf, int len)
9973:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
9974:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         char *text = NULL;
9975:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int textSz = 0;
9976:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9977:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_NAME_get_text_by_NID");
9978:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
9979:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (nid) {
9980:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_COMMON_NAME:
9981:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.cnIdx;
9982:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.cnLen;
9983:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9984:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_SUR_NAME:
9985:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.snIdx;
9986:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.snLen;
9987:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9988:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_SERIAL_NUMBER:
9989:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.serialIdx;
9990:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.serialLen;
9991:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9992:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_COUNTRY_NAME:
9993:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.cIdx;
9994:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.cLen;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 294


9995:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
9996:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_LOCALITY_NAME:
9997:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.lIdx;
9998:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.lLen;
9999:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
10000:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_STATE_NAME:
10001:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.stIdx;
10002:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.stLen;
10003:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
10004:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_ORG_NAME:
10005:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.oIdx;
10006:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.oLen;
10007:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
10008:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case ASN_ORGUNIT_NAME:
10009:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 text = name->fullName.fullName + name->fullName.ouIdx;
10010:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 textSz = name->fullName.ouLen;
10011:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
10012:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
10013:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 break;
10014:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10015:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10016:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (buf != NULL && text != NULL) {
10017:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             textSz = min(textSz, len);
10018:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buf, text, textSz);
10019:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             buf[textSz] = '\0';
10020:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10021:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10022:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_LEAVE("wolfSSL_X509_NAME_get_text_by_NID", textSz);
10023:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return textSz;
10024:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10025:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10026:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10027:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10028:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* copy name into in buffer, at most sz bytes, if buffer is null will
10029:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        malloc buffer, call responsible for freeing                     */
10030:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     char* wolfSSL_X509_NAME_oneline(WOLFSSL_X509_NAME* name, char* in, int sz)
10031:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10032:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int copySz = min(sz, name->sz);
10033:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10034:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_NAME_oneline");
10035:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!name->sz) return in;
10036:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10037:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!in) {
10038:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             in = (char*)XMALLOC(name->sz, 0, DYNAMIC_TYPE_OPENSSL);
10039:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (!in ) return in;
10040:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             copySz = name->sz;
10041:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10042:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10043:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (copySz == 0)
10044:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return in;
10045:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10046:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(in, name->name, copySz - 1);
10047:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         in[copySz - 1] = 0;
10048:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10049:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return in;
10050:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10051:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 295


10052:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10053:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_get_signature_type(WOLFSSL_X509* x509)
10054:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10055:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int type = 0;
10056:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10057:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_signature_type");
10058:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10059:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 != NULL)
10060:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             type = x509->sigOID;
10061:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10062:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return type;
10063:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10064:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10065:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10066:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_get_signature(WOLFSSL_X509* x509,
10067:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                  unsigned char* buf, int* bufSz)
10068:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10069:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_signature");
10070:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 == NULL || bufSz == NULL || *bufSz < (int)x509->sig.length)
10071:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return SSL_FATAL_ERROR;
10072:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10073:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (buf != NULL)
10074:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(buf, x509->sig.buffer, x509->sig.length);
10075:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *bufSz = x509->sig.length;
10076:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10077:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
10078:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10079:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10080:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10081:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* write X509 serial number in unsigned binary to buffer
10082:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        buffer needs to be at least EXTERNAL_SERIAL_SIZE (32) for all cases
10083:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****        return SSL_SUCCESS on success */
10084:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_get_serial_number(WOLFSSL_X509* x509,
10085:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                        byte* in, int* inOutSz)
10086:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10087:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_serial_number");
10088:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 == NULL || in == NULL ||
10089:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                    inOutSz == NULL || *inOutSz < x509->serialSz)
10090:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return BAD_FUNC_ARG;
10091:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10092:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XMEMCPY(in, x509->serial, x509->serialSz);
10093:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *inOutSz = x509->serialSz;
10094:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10095:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return SSL_SUCCESS;
10096:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10097:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10098:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10099:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const byte* wolfSSL_X509_get_der(WOLFSSL_X509* x509, int* outSz)
10100:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10101:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_get_der");
10102:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10103:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 == NULL || outSz == NULL)
10104:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10105:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10106:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *outSz = (int)x509->derCert->length;
10107:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return x509->derCert->buffer;
10108:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 296


10109:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10110:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10111:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int wolfSSL_X509_version(WOLFSSL_X509* x509)
10112:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10113:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_version");
10114:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10115:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 == NULL)
10116:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return 0;
10117:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10118:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return x509->version;
10119:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10120:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10121:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10122:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const byte* wolfSSL_X509_notBefore(WOLFSSL_X509* x509)
10123:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10124:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_notBefore");
10125:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10126:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 == NULL)
10127:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10128:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10129:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return x509->notBefore;
10130:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10131:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10132:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10133:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     const byte* wolfSSL_X509_notAfter(WOLFSSL_X509* x509)
10134:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     {
10135:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         WOLFSSL_ENTER("wolfSSL_X509_notAfter");
10136:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10137:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (x509 == NULL)
10138:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10139:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10140:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return x509->notAfter;
10141:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10142:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10143:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10144:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SEP
10145:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10146:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* copy oid into in buffer, at most *inOutSz bytes, if buffer is null will
10147:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    malloc buffer, call responsible for freeing. Actual size returned in
10148:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****    *inOutSz. Requires inOutSz be non-null */
10149:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** byte* wolfSSL_X509_get_device_type(WOLFSSL_X509* x509, byte* in, int *inOutSz)
10150:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10151:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int copySz;
10152:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10153:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_X509_get_dev_type");
10154:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (inOutSz == NULL) return NULL;
10155:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!x509->deviceTypeSz) return in;
10156:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10157:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     copySz = min(*inOutSz, x509->deviceTypeSz);
10158:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10159:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!in) {
10160:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         in = (byte*)XMALLOC(x509->deviceTypeSz, 0, DYNAMIC_TYPE_OPENSSL);
10161:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!in) return in;
10162:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         copySz = x509->deviceTypeSz;
10163:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10164:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10165:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(in, x509->deviceType, copySz);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 297


10166:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *inOutSz = copySz;
10167:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10168:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return in;
10169:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10170:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10171:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10172:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** byte* wolfSSL_X509_get_hw_type(WOLFSSL_X509* x509, byte* in, int* inOutSz)
10173:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10174:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int copySz;
10175:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10176:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_X509_get_hw_type");
10177:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (inOutSz == NULL) return NULL;
10178:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!x509->hwTypeSz) return in;
10179:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10180:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     copySz = min(*inOutSz, x509->hwTypeSz);
10181:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10182:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!in) {
10183:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         in = (byte*)XMALLOC(x509->hwTypeSz, 0, DYNAMIC_TYPE_OPENSSL);
10184:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!in) return in;
10185:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         copySz = x509->hwTypeSz;
10186:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10187:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10188:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(in, x509->hwType, copySz);
10189:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *inOutSz = copySz;
10190:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10191:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return in;
10192:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10193:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10194:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10195:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** byte* wolfSSL_X509_get_hw_serial_number(WOLFSSL_X509* x509,byte* in,
10196:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                         int* inOutSz)
10197:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10198:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int copySz;
10199:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10200:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_X509_get_hw_serial_number");
10201:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (inOutSz == NULL) return NULL;
10202:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!x509->hwTypeSz) return in;
10203:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10204:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     copySz = min(*inOutSz, x509->hwSerialNumSz);
10205:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10206:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (!in) {
10207:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         in = (byte*)XMALLOC(x509->hwSerialNumSz, 0, DYNAMIC_TYPE_OPENSSL);
10208:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (!in) return in;
10209:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         copySz = x509->hwSerialNumSz;
10210:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10211:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10212:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XMEMCPY(in, x509->hwSerialNum, copySz);
10213:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     *inOutSz = copySz;
10214:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10215:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return in;
10216:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10217:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10218:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* WOLFSSL_SEP */
10219:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10220:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10221:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_X509* wolfSSL_X509_d2i(WOLFSSL_X509** x509, const byte* in, int len)
10222:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 298


10223:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509 *newX509 = NULL;
10224:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10225:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_X509_d2i");
10226:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10227:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (in != NULL && len != 0) {
10228:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10229:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DecodedCert* cert = NULL;
10230:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
10231:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DecodedCert  cert[1];
10232:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10233:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10234:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10235:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
10236:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                      DYNAMIC_TYPE_TMP_BUFFER);
10237:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cert == NULL)
10238:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10239:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10240:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10241:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         InitDecodedCert(cert, (byte*)in, len, NULL);
10242:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ParseCertRelative(cert, CERT_TYPE, 0, NULL) == 0) {
10243:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             newX509 = (WOLFSSL_X509*)XMALLOC(sizeof(WOLFSSL_X509), NULL,
10244:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                              DYNAMIC_TYPE_X509);
10245:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (newX509 != NULL) {
10246:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 InitX509(newX509, 1);
10247:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (CopyDecodedToX509(newX509, cert) != 0) {
10248:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     XFREE(newX509, NULL, DYNAMIC_TYPE_X509);
10249:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     newX509 = NULL;
10250:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
10251:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
10252:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10253:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeDecodedCert(cert);
10254:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10255:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
10256:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10257:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10258:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10259:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (x509 != NULL)
10260:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *x509 = newX509;
10261:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10262:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return newX509;
10263:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10264:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10265:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10266:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_FILESYSTEM
10267:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10268:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_STDIO_FILESYSTEM
10269:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10270:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_X509* wolfSSL_X509_d2i_fp(WOLFSSL_X509** x509, XFILE file)
10271:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10272:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509* newX509 = NULL;
10273:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10274:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_X509_d2i_fp");
10275:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10276:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file != XBADFILE) {
10277:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         byte* fileBuffer = NULL;
10278:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         long sz = 0;
10279:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 299


10280:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFSEEK(file, 0, XSEEK_END);
10281:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         sz = XFTELL(file);
10282:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XREWIND(file);
10283:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10284:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (sz < 0) {
10285:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             WOLFSSL_MSG("Bad tell on FILE");
10286:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10287:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10288:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10289:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         fileBuffer = (byte*)XMALLOC(sz, NULL, DYNAMIC_TYPE_FILE);
10290:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (fileBuffer != NULL) {
10291:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             int ret = (int)XFREAD(fileBuffer, sz, 1, file);
10292:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ret > 0) {
10293:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 newX509 = wolfSSL_X509_d2i(NULL, fileBuffer, (int)sz);
10294:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
10295:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(fileBuffer, NULL, DYNAMIC_TYPE_FILE);
10296:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10297:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10298:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10299:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (x509 != NULL)
10300:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         *x509 = newX509;
10301:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10302:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return newX509;
10303:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10304:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10305:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_STDIO_FILESYSTEM */
10306:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10307:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_X509* wolfSSL_X509_load_certificate_file(const char* fname, int format)
10308:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10309:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SMALL_STACK
10310:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte  staticBuffer[1]; /* force heap usage */
10311:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #else
10312:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte  staticBuffer[FILE_BUFFER_SIZE];
10313:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10314:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     byte* fileBuffer = staticBuffer;
10315:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   dynamic = 0;
10316:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     int   ret;
10317:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     long  sz = 0;
10318:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFILE file;
10319:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10320:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_X509* x509 = NULL;
10321:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     DerBuffer* der = NULL;
10322:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10323:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_X509_load_certificate");
10324:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10325:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* Check the inputs */
10326:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if ((fname == NULL) ||
10327:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         (format != SSL_FILETYPE_ASN1 && format != SSL_FILETYPE_PEM))
10328:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
10329:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10330:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     file = XFOPEN(fname, "rb");
10331:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (file == XBADFILE)
10332:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
10333:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10334:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFSEEK(file, 0, XSEEK_END);
10335:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     sz = XFTELL(file);
10336:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XREWIND(file);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 300


10337:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10338:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (sz > (long)sizeof(staticBuffer)) {
10339:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         fileBuffer = (byte*)XMALLOC(sz, NULL, DYNAMIC_TYPE_FILE);
10340:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (fileBuffer == NULL) {
10341:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFCLOSE(file);
10342:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10343:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10344:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         dynamic = 1;
10345:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10346:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (sz < 0) {
10347:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
10348:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
10349:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10350:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10351:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     ret = (int)XFREAD(fileBuffer, sz, 1, file);
10352:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ret < 0) {
10353:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFCLOSE(file);
10354:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (dynamic)
10355:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(fileBuffer, NULL, DYNAMIC_TYPE_FILE);
10356:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
10357:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10358:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10359:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     XFCLOSE(file);
10360:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10361:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (format == SSL_FILETYPE_PEM) {
10362:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         int ecc = 0;
10363:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10364:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         EncryptedInfo* info = NULL;
10365:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
10366:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         EncryptedInfo  info[1];
10367:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10368:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10369:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10370:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info = (EncryptedInfo*)XMALLOC(sizeof(EncryptedInfo), NULL,
10371:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                       DYNAMIC_TYPE_TMP_BUFFER);
10372:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (info == NULL) {
10373:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (dynamic)
10374:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 XFREE(fileBuffer, NULL, DYNAMIC_TYPE_FILE);
10375:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10376:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             return NULL;
10377:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10378:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10379:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10380:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->set = 0;
10381:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->ctx = NULL;
10382:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         info->consumed = 0;
10383:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10384:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (PemToDer(fileBuffer, sz, CERT_TYPE, &der, NULL, info, &ecc) != 0) {
10385:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDer(&der);
10386:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10387:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10388:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10389:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(info, NULL, DYNAMIC_TYPE_TMP_BUFFER);
10390:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10391:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10392:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else {
10393:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         ret = AllocDer(&der, (word32)sz, CERT_TYPE, NULL);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 301


10394:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (ret == 0) {
10395:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XMEMCPY(der->buffer, fileBuffer, sz);
10396:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10397:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10398:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10399:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (dynamic)
10400:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         XFREE(fileBuffer, NULL, DYNAMIC_TYPE_FILE);
10401:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10402:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* At this point we want `der` to have the certificate in DER format */
10403:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* ready to be decoded. */
10404:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (der != NULL && der->buffer != NULL) {
10405:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10406:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DecodedCert* cert = NULL;
10407:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #else
10408:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         DecodedCert  cert[1];
10409:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10410:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10411:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef WOLFSSL_SMALL_STACK
10412:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         cert = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
10413:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
10414:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cert != NULL)
10415:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10416:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         {
10417:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             InitDecodedCert(cert, der->buffer, der->length, NULL);
10418:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             if (ParseCertRelative(cert, CERT_TYPE, 0, NULL) == 0) {
10419:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 x509 = (WOLFSSL_X509*)XMALLOC(sizeof(WOLFSSL_X509), NULL,
10420:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                                              DYNAMIC_TYPE_X509);
10421:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 if (x509 != NULL) {
10422:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     InitX509(x509, 1);
10423:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     if (CopyDecodedToX509(x509, cert) != 0) {
10424:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         XFREE(x509, NULL, DYNAMIC_TYPE_X509);
10425:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                         x509 = NULL;
10426:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                     }
10427:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 }
10428:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
10429:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10430:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             FreeDecodedCert(cert);
10431:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifdef WOLFSSL_SMALL_STACK
10432:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             XFREE(cert, NULL, DYNAMIC_TYPE_TMP_BUFFER);
10433:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
10434:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10435:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10436:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         FreeDer(&der);
10437:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10438:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10439:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return x509;
10440:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10441:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10442:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_FILESYSTEM */
10443:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10444:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* KEEP_PEER_CERT || SESSION_CERTS */
10445:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10446:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10447:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef OPENSSL_EXTRA
10448:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_set_session_id_context(WOLFSSL* ssl, const unsigned char* id,
10449:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                                unsigned int len)
10450:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 302


10451:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
10452:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)id;
10453:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)len;
10454:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
10455:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10456:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10457:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10458:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_set_connect_state(WOLFSSL* ssl)
10459:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10460:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)ssl;
10461:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* client by default */
10462:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10463:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10464:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10465:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_shutdown(const WOLFSSL* ssl)
10466:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 5964              		.loc 1 10466 0
 5965              		.cfi_startproc
 5966              	.LVL665:
10467:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_get_shutdown");
10468:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* in OpenSSL, SSL_SENT_SHUTDOWN = 1, when closeNotifySent   *
10469:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****      * SSL_RECEIVED_SHUTDOWN = 2, from close notify or fatal err */
10470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ((ssl->options.closeNotify||ssl->options.connReset) << 1)
 5967              		.loc 1 10470 0
 5968 0000 8323     		mov	r3, #131
 5969 0002 9B00     		lsl	r3, r3, #2
 5970 0004 C258     		ldr	r2, [r0, r3]
 5971 0006 A023     		mov	r3, #160
 5972 0008 9B02     		lsl	r3, r3, #10
 5973 000a 1A40     		and	r2, r3
 5974 000c 531E     		sub	r3, r2, #1
 5975 000e 9A41     		sbc	r2, r2, r3
10471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             | (ssl->options.sentNotify);
 5976              		.loc 1 10471 0
 5977 0010 034B     		ldr	r3, .L691
10470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             | (ssl->options.sentNotify);
 5978              		.loc 1 10470 0
 5979 0012 5200     		lsl	r2, r2, #1
 5980              		.loc 1 10471 0
 5981 0014 C35C     		ldrb	r3, [r0, r3]
10472:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 5982              		.loc 1 10472 0
 5983              		@ sp needed
10471:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             | (ssl->options.sentNotify);
 5984              		.loc 1 10471 0
 5985 0016 5B07     		lsl	r3, r3, #29
 5986 0018 DB0F     		lsr	r3, r3, #31
10470:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             | (ssl->options.sentNotify);
 5987              		.loc 1 10470 0
 5988 001a 1A43     		orr	r2, r3
 5989 001c 101C     		mov	r0, r2
 5990              	.LVL666:
 5991              		.loc 1 10472 0
 5992 001e 7047     		bx	lr
 5993              	.L692:
 5994              		.align	2
 5995              	.L691:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 303


 5996 0020 0E020000 		.word	526
 5997              		.cfi_endproc
 5998              	.LFE101:
 5999              		.size	wolfSSL_get_shutdown, .-wolfSSL_get_shutdown
 6000              		.section	.text.wolfSSL_session_reused,"ax",%progbits
 6001              		.align	1
 6002              		.global	wolfSSL_session_reused
 6003              		.code	16
 6004              		.thumb_func
 6005              		.type	wolfSSL_session_reused, %function
 6006              	wolfSSL_session_reused:
 6007              	.LFB102:
10473:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10474:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10475:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_session_reused(WOLFSSL* ssl)
10476:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6008              		.loc 1 10476 0
 6009              		.cfi_startproc
 6010              	.LVL667:
10477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->options.resuming;
 6011              		.loc 1 10477 0
 6012 0000 024B     		ldr	r3, .L694
10478:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6013              		.loc 1 10478 0
 6014              		@ sp needed
10477:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return ssl->options.resuming;
 6015              		.loc 1 10477 0
 6016 0002 C05C     		ldrb	r0, [r0, r3]
 6017              	.LVL668:
 6018 0004 4007     		lsl	r0, r0, #29
 6019 0006 C00F     		lsr	r0, r0, #31
 6020              		.loc 1 10478 0
 6021 0008 7047     		bx	lr
 6022              	.L695:
 6023 000a C046     		.align	2
 6024              	.L694:
 6025 000c 0D020000 		.word	525
 6026              		.cfi_endproc
 6027              	.LFE102:
 6028              		.size	wolfSSL_session_reused, .-wolfSSL_session_reused
 6029              		.section	.text.wolfSSL_get_version,"ax",%progbits
 6030              		.align	1
 6031              		.global	wolfSSL_get_version
 6032              		.code	16
 6033              		.thumb_func
 6034              		.type	wolfSSL_get_version, %function
 6035              	wolfSSL_get_version:
 6036              	.LFB103:
10479:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10480:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef OPENSSL_EXTRA
10481:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** void wolfSSL_SESSION_free(WOLFSSL_SESSION* session)
10482:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
10483:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     /* No need to free since cache is static */
10484:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)session;
10485:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
10486:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10487:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 304


10488:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const char* wolfSSL_get_version(WOLFSSL* ssl)
10489:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6037              		.loc 1 10489 0
 6038              		.cfi_startproc
 6039              	.LVL669:
10490:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_version");
10491:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl->version.major == SSLv3_MAJOR) {
 6040              		.loc 1 10491 0
 6041 0000 A123     		mov	r3, #161
 6042 0002 5B00     		lsl	r3, r3, #1
 6043 0004 C25C     		ldrb	r2, [r0, r3]
 6044 0006 032A     		cmp	r2, #3
 6045 0008 0AD1     		bne	.L697
10492:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ssl->version.minor) {
 6046              		.loc 1 10492 0
 6047 000a 4423     		mov	r3, #68
 6048 000c FF33     		add	r3, r3, #255
 6049 000e C25C     		ldrb	r2, [r0, r3]
 6050 0010 0B4B     		ldr	r3, .L705
 6051 0012 032A     		cmp	r2, #3
 6052 0014 11D8     		bhi	.L698
 6053 0016 0B4B     		ldr	r3, .L705+4
 6054 0018 9200     		lsl	r2, r2, #2
 6055 001a 9A18     		add	r2, r3, r2
 6056 001c D368     		ldr	r3, [r2, #12]
 6057 001e 0CE0     		b	.L698
 6058              	.L697:
 6059 0020 074B     		ldr	r3, .L705
10493:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SSLv3_MINOR :
10494:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "SSLv3";
10495:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLSv1_MINOR :
10496:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLSv1";
10497:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLSv1_1_MINOR :
10498:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLSv1.1";
10499:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLSv1_2_MINOR :
10500:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLSv1.2";
10501:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
10502:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "unknown";
10503:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10504:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10505:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else if (ssl->version.major == DTLS_MAJOR) {
 6060              		.loc 1 10505 0
 6061 0022 FE2A     		cmp	r2, #254
 6062 0024 09D1     		bne	.L698
10506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ssl->version.minor) {
 6063              		.loc 1 10506 0
 6064 0026 4423     		mov	r3, #68
 6065 0028 FF33     		add	r3, r3, #255
 6066 002a C25C     		ldrb	r2, [r0, r3]
10507:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DTLS_MINOR :
10508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "DTLS";
10509:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DTLSv1_2_MINOR :
10510:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "DTLSv1.2";
 6067              		.loc 1 10510 0
 6068 002c 064B     		ldr	r3, .L705+8
10506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ssl->version.minor) {
 6069              		.loc 1 10506 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 305


 6070 002e FD2A     		cmp	r2, #253
 6071 0030 03D0     		beq	.L698
10508:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case DTLSv1_2_MINOR :
 6072              		.loc 1 10508 0
 6073 0032 064B     		ldr	r3, .L705+12
10506:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (ssl->version.minor) {
 6074              		.loc 1 10506 0
 6075 0034 FF2A     		cmp	r2, #255
 6076 0036 00D0     		beq	.L698
10511:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
10512:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "unknown";
 6077              		.loc 1 10512 0
 6078 0038 014B     		ldr	r3, .L705
 6079              	.L698:
10513:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10514:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10515:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return "unknown";
10516:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6080              		.loc 1 10516 0
 6081 003a 181C     		mov	r0, r3
 6082              	.LVL670:
 6083              		@ sp needed
 6084 003c 7047     		bx	lr
 6085              	.L706:
 6086 003e C046     		.align	2
 6087              	.L705:
 6088 0040 31000000 		.word	.LC34
 6089 0044 00000000 		.word	.LANCHOR0
 6090 0048 28000000 		.word	.LC32
 6091 004c 39000000 		.word	.LC36
 6092              		.cfi_endproc
 6093              	.LFE103:
 6094              		.size	wolfSSL_get_version, .-wolfSSL_get_version
 6095              		.section	.text.wolfSSL_lib_version,"ax",%progbits
 6096              		.align	1
 6097              		.global	wolfSSL_lib_version
 6098              		.code	16
 6099              		.thumb_func
 6100              		.type	wolfSSL_lib_version, %function
 6101              	wolfSSL_lib_version:
 6102              	.LFB104:
10517:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10518:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10519:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* current library version */
10520:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const char* wolfSSL_lib_version(void)
10521:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6103              		.loc 1 10521 0
 6104              		.cfi_startproc
10522:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return LIBWOLFSSL_VERSION_STRING;
10523:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6105              		.loc 1 10523 0
 6106 0000 0048     		ldr	r0, .L708
 6107              		@ sp needed
 6108 0002 7047     		bx	lr
 6109              	.L709:
 6110              		.align	2
 6111              	.L708:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 306


 6112 0004 3E000000 		.word	.LC39
 6113              		.cfi_endproc
 6114              	.LFE104:
 6115              		.size	wolfSSL_lib_version, .-wolfSSL_lib_version
 6116              		.section	.text.wolfSSL_lib_version_hex,"ax",%progbits
 6117              		.align	1
 6118              		.global	wolfSSL_lib_version_hex
 6119              		.code	16
 6120              		.thumb_func
 6121              		.type	wolfSSL_lib_version_hex, %function
 6122              	wolfSSL_lib_version_hex:
 6123              	.LFB105:
10524:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10525:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10526:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** /* current library version in hex */
10527:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** word32 wolfSSL_lib_version_hex(void)
10528:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6124              		.loc 1 10528 0
 6125              		.cfi_startproc
10529:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return LIBWOLFSSL_VERSION_HEX;
10530:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6126              		.loc 1 10530 0
 6127 0000 0048     		ldr	r0, .L711
 6128              		@ sp needed
 6129 0002 7047     		bx	lr
 6130              	.L712:
 6131              		.align	2
 6132              	.L711:
 6133 0004 00900003 		.word	50368512
 6134              		.cfi_endproc
 6135              	.LFE105:
 6136              		.size	wolfSSL_lib_version_hex, .-wolfSSL_lib_version_hex
 6137              		.section	.text.wolfSSL_get_current_cipher_suite,"ax",%progbits
 6138              		.align	1
 6139              		.global	wolfSSL_get_current_cipher_suite
 6140              		.code	16
 6141              		.thumb_func
 6142              		.type	wolfSSL_get_current_cipher_suite, %function
 6143              	wolfSSL_get_current_cipher_suite:
 6144              	.LFB106:
10531:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10532:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10533:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** int wolfSSL_get_current_cipher_suite(WOLFSSL* ssl)
10534:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6145              		.loc 1 10534 0
 6146              		.cfi_startproc
 6147              	.LVL671:
 6148              		.loc 1 10534 0
 6149 0000 031E     		sub	r3, r0, #0
10535:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_current_cipher_suite");
10536:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 6150              		.loc 1 10536 0
 6151 0002 05D0     		beq	.L714
10537:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return (ssl->options.cipherSuite0 << 8) | ssl->options.cipherSuite;
 6152              		.loc 1 10537 0
 6153 0004 034A     		ldr	r2, .L716
 6154 0006 985C     		ldrb	r0, [r3, r2]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 307


 6155              	.LVL672:
 6156 0008 034A     		ldr	r2, .L716+4
 6157 000a 0002     		lsl	r0, r0, #8
 6158 000c 9B5C     		ldrb	r3, [r3, r2]
 6159              	.LVL673:
 6160 000e 1843     		orr	r0, r3
 6161              	.L714:
10538:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return 0;
10539:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6162              		.loc 1 10539 0
 6163              		@ sp needed
 6164 0010 7047     		bx	lr
 6165              	.L717:
 6166 0012 C046     		.align	2
 6167              	.L716:
 6168 0014 12020000 		.word	530
 6169 0018 13020000 		.word	531
 6170              		.cfi_endproc
 6171              	.LFE106:
 6172              		.size	wolfSSL_get_current_cipher_suite, .-wolfSSL_get_current_cipher_suite
 6173              		.section	.text.wolfSSL_get_current_cipher,"ax",%progbits
 6174              		.align	1
 6175              		.global	wolfSSL_get_current_cipher
 6176              		.code	16
 6177              		.thumb_func
 6178              		.type	wolfSSL_get_current_cipher, %function
 6179              	wolfSSL_get_current_cipher:
 6180              	.LFB107:
10540:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10541:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** WOLFSSL_CIPHER* wolfSSL_get_current_cipher(WOLFSSL* ssl)
10542:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6181              		.loc 1 10542 0
 6182              		.cfi_startproc
 6183              	.LVL674:
 6184              		.loc 1 10542 0
 6185 0000 031E     		sub	r3, r0, #0
10543:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_get_current_cipher");
10544:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (ssl)
 6186              		.loc 1 10544 0
 6187 0002 01D0     		beq	.L719
10545:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return &ssl->cipher;
 6188              		.loc 1 10545 0
 6189 0004 3033     		add	r3, r3, #48
 6190 0006 181C     		mov	r0, r3
 6191              	.LVL675:
 6192              	.L719:
10546:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     else
10547:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         return NULL;
10548:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6193              		.loc 1 10548 0
 6194              		@ sp needed
 6195 0008 7047     		bx	lr
 6196              		.cfi_endproc
 6197              	.LFE107:
 6198              		.size	wolfSSL_get_current_cipher, .-wolfSSL_get_current_cipher
 6199              		.section	.text.wolfSSL_CIPHER_get_name,"ax",%progbits
 6200              		.align	1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 308


 6201              		.global	wolfSSL_CIPHER_get_name
 6202              		.code	16
 6203              		.thumb_func
 6204              		.type	wolfSSL_CIPHER_get_name, %function
 6205              	wolfSSL_CIPHER_get_name:
 6206              	.LFB108:
10549:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10550:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10551:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const char* wolfSSL_CIPHER_get_name(const WOLFSSL_CIPHER* cipher)
10552:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6207              		.loc 1 10552 0
 6208              		.cfi_startproc
 6209              	.LVL676:
10553:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     (void)cipher;
10554:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10555:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("SSL_CIPHER_get_name");
10556:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_ERROR_STRINGS
10557:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     if (cipher) {
10558:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(HAVE_CHACHA)
10559:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cipher->ssl->options.cipherSuite0 == CHACHA_BYTE) {
10560:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* ChaCha suites */
10561:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (cipher->ssl->options.cipherSuite) {
10562:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_POLY1305
10563:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10564:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 :
10565:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256";
10566:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10567:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 :
10568:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256";
10569:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10570:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_CHACHA20_OLD_POLY1305_SHA256 :
10571:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_CHACHA20_OLD_POLY1305_SHA256";
10572:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10573:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_CHACHA20_OLD_POLY1305_SHA256 :
10574:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_CHACHA20_OLD_POLY1305_SHA256";
10575:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10576:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 :
10577:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256";
10578:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10579:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_CHACHA20_OLD_POLY1305_SHA256 :
10580:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_CHACHA20_OLD_POLY1305_SHA256";
10581:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_PSK
10582:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 :
10583:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256";
10584:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 :
10585:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_CHACHA20_POLY1305_SHA256";
10586:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 :
10587:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256";
10588:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_PSK */
10589:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_POLY1305 */
10590:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             }
10591:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10592:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10593:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10594:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #if defined(HAVE_ECC) || defined(HAVE_AESCCM)
10595:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* Awkwardly, the ECC cipher suites use the ECC_BYTE as expected,
10596:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****          * but the AES-CCM cipher suites also use it, even the ones that
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 309


10597:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****          * aren't ECC. */
10598:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cipher->ssl->options.cipherSuite0 == ECC_BYTE) {
10599:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         /* ECC suites */
10600:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (cipher->ssl->options.cipherSuite) {
10601:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ECC
10602:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10603:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 :
10604:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256";
10605:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10606:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 :
10607:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256";
10608:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10609:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 :
10610:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256";
10611:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10612:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 :
10613:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256";
10614:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10615:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 :
10616:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384";
10617:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10618:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 :
10619:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384";
10620:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10621:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 :
10622:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384";
10623:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10624:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 :
10625:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384";
10626:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10627:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10628:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA :
10629:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA";
10630:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA :
10631:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA";
10632:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10633:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA :
10634:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA";
10635:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA :
10636:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA";
10637:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RC4
10638:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_RSA
10639:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_RC4_128_SHA :
10640:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_RC4_128_SHA";
10641:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10642:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_RC4_128_SHA :
10643:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA";
10644:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10645:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
10646:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_RSA
10647:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA :
10648:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA";
10649:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10650:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA :
10651:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA";
10652:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10653:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 310


10654:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10655:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA :
10656:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA";
10657:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA :
10658:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA";
10659:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10660:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA :
10661:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA";
10662:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA :
10663:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA";
10664:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RC4
10665:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_RSA
10666:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_RC4_128_SHA :
10667:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_RC4_128_SHA";
10668:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10669:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_RC4_128_SHA :
10670:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_RC4_128_SHA";
10671:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10672:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_DES3
10673:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_RSA
10674:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA :
10675:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA";
10676:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10677:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA :
10678:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA";
10679:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10680:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SHA */
10681:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10682:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_AESGCM
10683:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10684:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 :
10685:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256";
10686:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 :
10687:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384";
10688:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10689:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 :
10690:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256";
10691:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 :
10692:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384";
10693:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10694:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 :
10695:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256";
10696:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 :
10697:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384";
10698:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10699:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 :
10700:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256";
10701:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 :
10702:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384";
10703:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10704:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_NULL_SHA :
10705:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_NULL_SHA";
10706:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_PSK
10707:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_PSK_WITH_NULL_SHA256 :
10708:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_PSK_WITH_NULL_SHA256";
10709:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 :
10710:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256";
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 311


10711:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10712:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* HAVE_ECC */
10713:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10714:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_AESCCM
10715:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10716:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_128_CCM_8 :
10717:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_128_CCM_8";
10718:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_256_CCM_8 :
10719:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_256_CCM_8";
10720:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10721:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_PSK
10722:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_128_CCM_8 :
10723:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_128_CCM_8";
10724:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_256_CCM_8 :
10725:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_256_CCM_8";
10726:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_128_CCM :
10727:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_128_CCM";
10728:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_256_CCM :
10729:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_256_CCM";
10730:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_AES_128_CCM :
10731:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_AES_128_CCM";
10732:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_AES_256_CCM :
10733:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_AES_256_CCM";
10734:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10735:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef HAVE_ECC
10736:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8:
10737:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8";
10738:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 :
10739:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8";
10740:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10741:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10742:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10743:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
10744:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "NONE";
10745:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10746:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }
10747:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif  /* ECC */
10748:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         if (cipher->ssl->options.cipherSuite0 != ECC_BYTE &&
10749:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             cipher->ssl->options.cipherSuite0 != CHACHA_BYTE) {
10750:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10751:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             /* normal suites */
10752:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         switch (cipher->ssl->options.cipherSuite) {
10753:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10754:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RC4
10755:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_SHA
10756:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SSL_RSA_WITH_RC4_128_SHA :
10757:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "SSL_RSA_WITH_RC4_128_SHA";
10758:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10759:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_MD5
10760:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SSL_RSA_WITH_RC4_128_MD5 :
10761:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "SSL_RSA_WITH_RC4_128_MD5";
10762:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10763:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10764:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10765:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_DES3
10766:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SSL_RSA_WITH_3DES_EDE_CBC_SHA :
10767:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "SSL_RSA_WITH_3DES_EDE_CBC_SHA";
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 312


10768:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10769:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_IDEA
10770:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case SSL_RSA_WITH_IDEA_CBC_SHA :
10771:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "SSL_RSA_WITH_IDEA_CBC_SHA";
10772:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10773:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10774:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_128_CBC_SHA :
10775:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_128_CBC_SHA";
10776:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_256_CBC_SHA :
10777:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_256_CBC_SHA";
10778:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10779:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_128_CBC_SHA256 :
10780:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_128_CBC_SHA256";
10781:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_256_CBC_SHA256 :
10782:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_256_CBC_SHA256";
10783:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_BLAKE2
10784:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_128_CBC_B2B256:
10785:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_128_CBC_B2B256";
10786:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_256_CBC_B2B256:
10787:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_256_CBC_B2B256";
10788:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10789:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10790:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_NULL_SHA :
10791:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_NULL_SHA";
10792:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10793:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_NULL_SHA256 :
10794:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_NULL_SHA256";
10795:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_RSA */
10796:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_PSK
10797:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10798:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_128_CBC_SHA :
10799:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_128_CBC_SHA";
10800:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_256_CBC_SHA :
10801:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_256_CBC_SHA";
10802:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10803:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA256
10804:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_128_CBC_SHA256 :
10805:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_128_CBC_SHA256";
10806:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_NULL_SHA256 :
10807:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_NULL_SHA256";
10808:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 :
10809:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256";
10810:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_NULL_SHA256 :
10811:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_NULL_SHA256";
10812:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_AESGCM
10813:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_128_GCM_SHA256 :
10814:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_128_GCM_SHA256";
10815:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 :
10816:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256";
10817:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10818:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10819:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef WOLFSSL_SHA384
10820:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_256_CBC_SHA384 :
10821:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_256_CBC_SHA384";
10822:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_NULL_SHA384 :
10823:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_NULL_SHA384";
10824:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 :
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 313


10825:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384";
10826:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_NULL_SHA384 :
10827:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_NULL_SHA384";
10828:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_AESGCM
10829:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_AES_256_GCM_SHA384 :
10830:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_AES_256_GCM_SHA384";
10831:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 :
10832:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384";
10833:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10834:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10835:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10836:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_PSK_WITH_NULL_SHA :
10837:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_PSK_WITH_NULL_SHA";
10838:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10839:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_PSK */
10840:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_RSA
10841:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 :
10842:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256";
10843:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 :
10844:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256";
10845:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10846:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_AES_128_CBC_SHA :
10847:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_AES_128_CBC_SHA";
10848:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_AES_256_CBC_SHA :
10849:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_AES_256_CBC_SHA";
10850:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10851:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_HC128
10852:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_MD5
10853:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_HC_128_MD5 :
10854:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_HC_128_MD5";
10855:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10856:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_SHA
10857:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_HC_128_SHA :
10858:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_HC_128_SHA";
10859:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10860:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_BLAKE2
10861:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_HC_128_B2B256:
10862:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_HC_128_B2B256";
10863:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10864:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_HC128 */
10865:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10866:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifndef NO_RABBIT
10867:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_RABBIT_SHA :
10868:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_RABBIT_SHA";
10869:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif
10870:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_NTRU
10871:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_RC4
10872:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_NTRU_RSA_WITH_RC4_128_SHA :
10873:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_NTRU_RSA_WITH_RC4_128_SHA";
10874:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
10875:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #ifndef NO_DES3
10876:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_NTRU_RSA_WITH_3DES_EDE_CBC_SHA :
10877:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_NTRU_RSA_WITH_3DES_EDE_CBC_SHA";
10878:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         #endif
10879:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_NTRU_RSA_WITH_AES_128_CBC_SHA :
10880:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_NTRU_RSA_WITH_AES_128_CBC_SHA";
10881:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_NTRU_RSA_WITH_AES_256_CBC_SHA :
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 314


10882:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_NTRU_RSA_WITH_AES_256_CBC_SHA";
10883:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* HAVE_NTRU */
10884:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #ifdef HAVE_QSH
10885:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_QSH :
10886:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_QSH";
10887:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     #endif /* HAVE_QSH*/
10888:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_SHA */
10889:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_128_GCM_SHA256 :
10890:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_128_GCM_SHA256";
10891:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_AES_256_GCM_SHA384 :
10892:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_AES_256_GCM_SHA384";
10893:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 :
10894:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256";
10895:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 :
10896:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384";
10897:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10898:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_CAMELLIA_128_CBC_SHA :
10899:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA";
10900:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_CAMELLIA_256_CBC_SHA :
10901:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA";
10902:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10903:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256 :
10904:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256";
10905:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256 :
10906:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256";
10907:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifndef NO_SHA
10908:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA :
10909:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA";
10910:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA :
10911:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA";
10912:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10913:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 :
10914:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256";
10915:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256 :
10916:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256";
10917:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_RSA */
10918:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #ifdef BUILD_TLS_DH_anon_WITH_AES_128_CBC_SHA
10919:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             case TLS_DH_anon_WITH_AES_128_CBC_SHA :
10920:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "TLS_DH_anon_WITH_AES_128_CBC_SHA";
10921:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif
10922:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****             default:
10923:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****                 return "NONE";
10924:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }  /* switch */
10925:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****         }  /* normal / ECC */
10926:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     }
10927:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** #endif /* NO_ERROR_STRINGS */
10928:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return "NONE";
10929:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6210              		.loc 1 10929 0
 6211 0000 0048     		ldr	r0, .L722
 6212              	.LVL677:
 6213              		@ sp needed
 6214 0002 7047     		bx	lr
 6215              	.L723:
 6216              		.align	2
 6217              	.L722:
 6218 0004 44000000 		.word	.LC41
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 315


 6219              		.cfi_endproc
 6220              	.LFE108:
 6221              		.size	wolfSSL_CIPHER_get_name, .-wolfSSL_CIPHER_get_name
 6222              		.section	.text.wolfSSL_get_cipher,"ax",%progbits
 6223              		.align	1
 6224              		.global	wolfSSL_get_cipher
 6225              		.code	16
 6226              		.thumb_func
 6227              		.type	wolfSSL_get_cipher, %function
 6228              	wolfSSL_get_cipher:
 6229              	.LFB109:
10930:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10931:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** 
10932:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** const char* wolfSSL_get_cipher(WOLFSSL* ssl)
10933:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** {
 6230              		.loc 1 10933 0
 6231              		.cfi_startproc
 6232              	.LVL678:
10934:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     WOLFSSL_ENTER("wolfSSL_get_cipher");
10935:..\acn-sdk-c\src\wolfSSL\src/ssl.c ****     return wolfSSL_CIPHER_get_name(wolfSSL_get_current_cipher(ssl));
10936:..\acn-sdk-c\src\wolfSSL\src/ssl.c **** }
 6233              		.loc 1 10936 0
 6234 0000 0048     		ldr	r0, .L725
 6235              	.LVL679:
 6236              		@ sp needed
 6237 0002 7047     		bx	lr
 6238              	.L726:
 6239              		.align	2
 6240              	.L725:
 6241 0004 44000000 		.word	.LC41
 6242              		.cfi_endproc
 6243              	.LFE109:
 6244              		.size	wolfSSL_get_cipher, .-wolfSSL_get_cipher
 6245              		.section	.rodata
 6246              		.align	2
 6247              		.set	.LANCHOR0,. + 0
 6248              		.type	CSWTCH.87, %object
 6249              		.size	CSWTCH.87, 11
 6250              	CSWTCH.87:
 6251 0000 02       		.byte	2
 6252 0001 03       		.byte	3
 6253 0002 03       		.byte	3
 6254 0003 16       		.byte	22
 6255 0004 01       		.byte	1
 6256 0005 03       		.byte	3
 6257 0006 03       		.byte	3
 6258 0007 03       		.byte	3
 6259 0008 15       		.byte	21
 6260 0009 25       		.byte	37
 6261 000a 0A       		.byte	10
 6262 000b 00       		.space	1
 6263              		.type	CSWTCH.144, %object
 6264              		.size	CSWTCH.144, 16
 6265              	CSWTCH.144:
 6266 000c 49000000 		.word	.LC44
 6267 0010 4F000000 		.word	.LC45
 6268 0014 55000000 		.word	.LC46
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 316


 6269 0018 5D000000 		.word	.LC47
 6270              		.section	.rodata.str1.1,"aMS",%progbits,1
 6271              	.LC4:
 6272 0000 506C6561 		.ascii	"Please supply a buffer for error string\000"
 6272      73652073 
 6272      7570706C 
 6272      79206120 
 6272      62756666 
 6273              	.LC32:
 6274 0028 44544C53 		.ascii	"DTLSv1.2\000"
 6274      76312E32 
 6274      00
 6275              	.LC34:
 6276 0031 756E6B6E 		.ascii	"unknown\000"
 6276      6F776E00 
 6277              	.LC36:
 6278 0039 44544C53 		.ascii	"DTLS\000"
 6278      00
 6279              	.LC39:
 6280 003e 332E392E 		.ascii	"3.9.0\000"
 6280      3000
 6281              	.LC41:
 6282 0044 4E4F4E45 		.ascii	"NONE\000"
 6282      00
 6283              	.LC44:
 6284 0049 53534C76 		.ascii	"SSLv3\000"
 6284      3300
 6285              	.LC45:
 6286 004f 544C5376 		.ascii	"TLSv1\000"
 6286      3100
 6287              	.LC46:
 6288 0055 544C5376 		.ascii	"TLSv1.1\000"
 6288      312E3100 
 6289              	.LC47:
 6290 005d 544C5376 		.ascii	"TLSv1.2\000"
 6290      312E3200 
 6291              		.bss
 6292              		.align	2
 6293              		.set	.LANCHOR1,. + 0
 6294              		.type	initRefCount, %object
 6295              		.size	initRefCount, 4
 6296              	initRefCount:
 6297 0000 00000000 		.space	4
 6298              		.type	count_mutex, %object
 6299              		.size	count_mutex, 4
 6300              	count_mutex:
 6301 0004 00000000 		.space	4
 6302              		.text
 6303              	.Letext0:
 6304              		.file 3 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/wc_port.h"
 6305              		.file 4 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/types.h"
 6306              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 6307              		.file 6 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/ssl.h"
 6308              		.file 7 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/internal.h"
 6309              		.file 8 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/sha256.h"
 6310              		.file 9 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/random.h"
 6311              		.file 10 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/sha.h"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 317


 6312              		.file 11 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/asn_public.h"
 6313              		.file 12 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/asn.h"
 6314              		.file 13 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/error-crypt.h"
 6315              		.file 14 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/error-ssl.h"
 6316              		.file 15 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6317              		.file 16 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/memory.h"
 6318              		.file 17 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/coding.h"
 6319              		.section	.debug_info,"",%progbits
 6320              	.Ldebug_info0:
 6321 0000 E25F0000 		.4byte	0x5fe2
 6322 0004 0400     		.2byte	0x4
 6323 0006 00000000 		.4byte	.Ldebug_abbrev0
 6324 000a 04       		.byte	0x4
 6325 000b 01       		.uleb128 0x1
 6326 000c A6090000 		.4byte	.LASF1139
 6327 0010 01       		.byte	0x1
 6328 0011 0E1B0000 		.4byte	.LASF1140
 6329 0015 723B0000 		.4byte	.LASF1141
 6330 0019 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 6331 001d 00000000 		.4byte	0
 6332 0021 00000000 		.4byte	.Ldebug_line0
 6333 0025 02       		.uleb128 0x2
 6334 0026 6A410000 		.4byte	.LASF0
 6335 002a 03       		.byte	0x3
 6336 002b 56       		.byte	0x56
 6337 002c 30000000 		.4byte	0x30
 6338 0030 03       		.uleb128 0x3
 6339 0031 04       		.byte	0x4
 6340 0032 05       		.byte	0x5
 6341 0033 696E7400 		.ascii	"int\000"
 6342 0037 02       		.uleb128 0x2
 6343 0038 F4080000 		.4byte	.LASF1
 6344 003c 04       		.byte	0x4
 6345 003d 2D       		.byte	0x2d
 6346 003e 42000000 		.4byte	0x42
 6347 0042 04       		.uleb128 0x4
 6348 0043 01       		.byte	0x1
 6349 0044 08       		.byte	0x8
 6350 0045 E70E0000 		.4byte	.LASF2
 6351 0049 02       		.uleb128 0x2
 6352 004a C83A0000 		.4byte	.LASF3
 6353 004e 04       		.byte	0x4
 6354 004f 2F       		.byte	0x2f
 6355 0050 54000000 		.4byte	0x54
 6356 0054 04       		.uleb128 0x4
 6357 0055 02       		.byte	0x2
 6358 0056 07       		.byte	0x7
 6359 0057 29230000 		.4byte	.LASF4
 6360 005b 02       		.uleb128 0x2
 6361 005c C93C0000 		.4byte	.LASF5
 6362 0060 04       		.byte	0x4
 6363 0061 30       		.byte	0x30
 6364 0062 66000000 		.4byte	0x66
 6365 0066 04       		.uleb128 0x4
 6366 0067 04       		.byte	0x4
 6367 0068 07       		.byte	0x7
 6368 0069 CC3F0000 		.4byte	.LASF6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 318


 6369 006d 04       		.uleb128 0x4
 6370 006e 08       		.byte	0x8
 6371 006f 07       		.byte	0x7
 6372 0070 59370000 		.4byte	.LASF7
 6373 0074 02       		.uleb128 0x2
 6374 0075 48160000 		.4byte	.LASF8
 6375 0079 05       		.byte	0x5
 6376 007a D4       		.byte	0xd4
 6377 007b 66000000 		.4byte	0x66
 6378 007f 04       		.uleb128 0x4
 6379 0080 01       		.byte	0x1
 6380 0081 06       		.byte	0x6
 6381 0082 44230000 		.4byte	.LASF9
 6382 0086 04       		.uleb128 0x4
 6383 0087 02       		.byte	0x2
 6384 0088 05       		.byte	0x5
 6385 0089 8E400000 		.4byte	.LASF10
 6386 008d 04       		.uleb128 0x4
 6387 008e 04       		.byte	0x4
 6388 008f 05       		.byte	0x5
 6389 0090 3E280000 		.4byte	.LASF11
 6390 0094 04       		.uleb128 0x4
 6391 0095 04       		.byte	0x4
 6392 0096 07       		.byte	0x7
 6393 0097 DE2A0000 		.4byte	.LASF12
 6394 009b 04       		.uleb128 0x4
 6395 009c 08       		.byte	0x8
 6396 009d 05       		.byte	0x5
 6397 009e D13B0000 		.4byte	.LASF13
 6398 00a2 04       		.uleb128 0x4
 6399 00a3 04       		.byte	0x4
 6400 00a4 07       		.byte	0x7
 6401 00a5 A5220000 		.4byte	.LASF14
 6402 00a9 05       		.uleb128 0x5
 6403 00aa 04       		.byte	0x4
 6404 00ab 06       		.uleb128 0x6
 6405 00ac 04       		.byte	0x4
 6406 00ad 42000000 		.4byte	0x42
 6407 00b1 06       		.uleb128 0x6
 6408 00b2 04       		.byte	0x4
 6409 00b3 B7000000 		.4byte	0xb7
 6410 00b7 04       		.uleb128 0x4
 6411 00b8 01       		.byte	0x1
 6412 00b9 08       		.byte	0x8
 6413 00ba 142C0000 		.4byte	.LASF15
 6414 00be 06       		.uleb128 0x6
 6415 00bf 04       		.byte	0x4
 6416 00c0 C4000000 		.4byte	0xc4
 6417 00c4 07       		.uleb128 0x7
 6418 00c5 B7000000 		.4byte	0xb7
 6419 00c9 06       		.uleb128 0x6
 6420 00ca 04       		.byte	0x4
 6421 00cb CF000000 		.4byte	0xcf
 6422 00cf 08       		.uleb128 0x8
 6423 00d0 09       		.uleb128 0x9
 6424 00d1 01       		.byte	0x1
 6425 00d2 04       		.byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 319


 6426 00d3 F2       		.byte	0xf2
 6427 00d4 29020000 		.4byte	0x229
 6428 00d8 0A       		.uleb128 0xa
 6429 00d9 820E0000 		.4byte	.LASF16
 6430 00dd 01       		.sleb128 1
 6431 00de 0A       		.uleb128 0xa
 6432 00df D9220000 		.4byte	.LASF17
 6433 00e3 02       		.sleb128 2
 6434 00e4 0A       		.uleb128 0xa
 6435 00e5 401E0000 		.4byte	.LASF18
 6436 00e9 03       		.sleb128 3
 6437 00ea 0A       		.uleb128 0xa
 6438 00eb AC100000 		.4byte	.LASF19
 6439 00ef 04       		.sleb128 4
 6440 00f0 0A       		.uleb128 0xa
 6441 00f1 560E0000 		.4byte	.LASF20
 6442 00f5 05       		.sleb128 5
 6443 00f6 0A       		.uleb128 0xa
 6444 00f7 9A150000 		.4byte	.LASF21
 6445 00fb 06       		.sleb128 6
 6446 00fc 0A       		.uleb128 0xa
 6447 00fd 52360000 		.4byte	.LASF22
 6448 0101 07       		.sleb128 7
 6449 0102 0A       		.uleb128 0xa
 6450 0103 642F0000 		.4byte	.LASF23
 6451 0107 08       		.sleb128 8
 6452 0108 0A       		.uleb128 0xa
 6453 0109 28240000 		.4byte	.LASF24
 6454 010d 09       		.sleb128 9
 6455 010e 0A       		.uleb128 0xa
 6456 010f 4E170000 		.4byte	.LASF25
 6457 0113 0A       		.sleb128 10
 6458 0114 0A       		.uleb128 0xa
 6459 0115 35040000 		.4byte	.LASF26
 6460 0119 0B       		.sleb128 11
 6461 011a 0A       		.uleb128 0xa
 6462 011b 6D0F0000 		.4byte	.LASF27
 6463 011f 0C       		.sleb128 12
 6464 0120 0A       		.uleb128 0xa
 6465 0121 23090000 		.4byte	.LASF28
 6466 0125 0D       		.sleb128 13
 6467 0126 0A       		.uleb128 0xa
 6468 0127 2B060000 		.4byte	.LASF29
 6469 012b 0E       		.sleb128 14
 6470 012c 0A       		.uleb128 0xa
 6471 012d F00F0000 		.4byte	.LASF30
 6472 0131 0F       		.sleb128 15
 6473 0132 0A       		.uleb128 0xa
 6474 0133 B2390000 		.4byte	.LASF31
 6475 0137 10       		.sleb128 16
 6476 0138 0A       		.uleb128 0xa
 6477 0139 6A1E0000 		.4byte	.LASF32
 6478 013d 11       		.sleb128 17
 6479 013e 0A       		.uleb128 0xa
 6480 013f 243E0000 		.4byte	.LASF33
 6481 0143 12       		.sleb128 18
 6482 0144 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 320


 6483 0145 36000000 		.4byte	.LASF34
 6484 0149 13       		.sleb128 19
 6485 014a 0A       		.uleb128 0xa
 6486 014b B8120000 		.4byte	.LASF35
 6487 014f 14       		.sleb128 20
 6488 0150 0A       		.uleb128 0xa
 6489 0151 C2000000 		.4byte	.LASF36
 6490 0155 15       		.sleb128 21
 6491 0156 0A       		.uleb128 0xa
 6492 0157 573B0000 		.4byte	.LASF37
 6493 015b 16       		.sleb128 22
 6494 015c 0A       		.uleb128 0xa
 6495 015d AA260000 		.4byte	.LASF38
 6496 0161 17       		.sleb128 23
 6497 0162 0A       		.uleb128 0xa
 6498 0163 D8060000 		.4byte	.LASF39
 6499 0167 18       		.sleb128 24
 6500 0168 0A       		.uleb128 0xa
 6501 0169 A2200000 		.4byte	.LASF40
 6502 016d 19       		.sleb128 25
 6503 016e 0A       		.uleb128 0xa
 6504 016f FF2F0000 		.4byte	.LASF41
 6505 0173 1A       		.sleb128 26
 6506 0174 0A       		.uleb128 0xa
 6507 0175 87060000 		.4byte	.LASF42
 6508 0179 1B       		.sleb128 27
 6509 017a 0A       		.uleb128 0xa
 6510 017b 1A1F0000 		.4byte	.LASF43
 6511 017f 1C       		.sleb128 28
 6512 0180 0A       		.uleb128 0xa
 6513 0181 85160000 		.4byte	.LASF44
 6514 0185 1D       		.sleb128 29
 6515 0186 0A       		.uleb128 0xa
 6516 0187 6D250000 		.4byte	.LASF45
 6517 018b 1E       		.sleb128 30
 6518 018c 0A       		.uleb128 0xa
 6519 018d FB280000 		.4byte	.LASF46
 6520 0191 1F       		.sleb128 31
 6521 0192 0A       		.uleb128 0xa
 6522 0193 1C120000 		.4byte	.LASF47
 6523 0197 20       		.sleb128 32
 6524 0198 0A       		.uleb128 0xa
 6525 0199 90050000 		.4byte	.LASF48
 6526 019d 21       		.sleb128 33
 6527 019e 0A       		.uleb128 0xa
 6528 019f 47090000 		.4byte	.LASF49
 6529 01a3 22       		.sleb128 34
 6530 01a4 0A       		.uleb128 0xa
 6531 01a5 A9130000 		.4byte	.LASF50
 6532 01a9 23       		.sleb128 35
 6533 01aa 0A       		.uleb128 0xa
 6534 01ab 04420000 		.4byte	.LASF51
 6535 01af 24       		.sleb128 36
 6536 01b0 0A       		.uleb128 0xa
 6537 01b1 D6370000 		.4byte	.LASF52
 6538 01b5 25       		.sleb128 37
 6539 01b6 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 321


 6540 01b7 AA270000 		.4byte	.LASF53
 6541 01bb 26       		.sleb128 38
 6542 01bc 0A       		.uleb128 0xa
 6543 01bd 6B390000 		.4byte	.LASF54
 6544 01c1 27       		.sleb128 39
 6545 01c2 0A       		.uleb128 0xa
 6546 01c3 6C320000 		.4byte	.LASF55
 6547 01c7 28       		.sleb128 40
 6548 01c8 0A       		.uleb128 0xa
 6549 01c9 DD2B0000 		.4byte	.LASF56
 6550 01cd 29       		.sleb128 41
 6551 01ce 0A       		.uleb128 0xa
 6552 01cf 4E240000 		.4byte	.LASF57
 6553 01d3 2A       		.sleb128 42
 6554 01d4 0A       		.uleb128 0xa
 6555 01d5 F41B0000 		.4byte	.LASF58
 6556 01d9 2B       		.sleb128 43
 6557 01da 0A       		.uleb128 0xa
 6558 01db 92080000 		.4byte	.LASF59
 6559 01df 2C       		.sleb128 44
 6560 01e0 0A       		.uleb128 0xa
 6561 01e1 D1340000 		.4byte	.LASF60
 6562 01e5 2D       		.sleb128 45
 6563 01e6 0A       		.uleb128 0xa
 6564 01e7 DB170000 		.4byte	.LASF61
 6565 01eb 2E       		.sleb128 46
 6566 01ec 0A       		.uleb128 0xa
 6567 01ed 681D0000 		.4byte	.LASF62
 6568 01f1 2F       		.sleb128 47
 6569 01f2 0A       		.uleb128 0xa
 6570 01f3 54320000 		.4byte	.LASF63
 6571 01f7 30       		.sleb128 48
 6572 01f8 0A       		.uleb128 0xa
 6573 01f9 962B0000 		.4byte	.LASF64
 6574 01fd 31       		.sleb128 49
 6575 01fe 0A       		.uleb128 0xa
 6576 01ff EE360000 		.4byte	.LASF65
 6577 0203 32       		.sleb128 50
 6578 0204 0A       		.uleb128 0xa
 6579 0205 4F160000 		.4byte	.LASF66
 6580 0209 33       		.sleb128 51
 6581 020a 0A       		.uleb128 0xa
 6582 020b 50230000 		.4byte	.LASF67
 6583 020f 34       		.sleb128 52
 6584 0210 0A       		.uleb128 0xa
 6585 0211 AF050000 		.4byte	.LASF68
 6586 0215 35       		.sleb128 53
 6587 0216 0A       		.uleb128 0xa
 6588 0217 A3290000 		.4byte	.LASF69
 6589 021b 36       		.sleb128 54
 6590 021c 0A       		.uleb128 0xa
 6591 021d 4A190000 		.4byte	.LASF70
 6592 0221 37       		.sleb128 55
 6593 0222 0A       		.uleb128 0xa
 6594 0223 79150000 		.4byte	.LASF71
 6595 0227 38       		.sleb128 56
 6596 0228 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 322


 6597 0229 0B       		.uleb128 0xb
 6598 022a 01       		.byte	0x1
 6599 022b 04       		.byte	0x4
 6600 022c 2E01     		.2byte	0x12e
 6601 022e 3A020000 		.4byte	0x23a
 6602 0232 0A       		.uleb128 0xa
 6603 0233 7A180000 		.4byte	.LASF72
 6604 0237 D000     		.sleb128 80
 6605 0239 00       		.byte	0
 6606 023a 02       		.uleb128 0x2
 6607 023b 3C230000 		.4byte	.LASF73
 6608 023f 06       		.byte	0x6
 6609 0240 42       		.byte	0x42
 6610 0241 45020000 		.4byte	0x245
 6611 0245 0C       		.uleb128 0xc
 6612 0246 3C230000 		.4byte	.LASF73
 6613 024a 1C02     		.2byte	0x21c
 6614 024c 07       		.byte	0x7
 6615 024d DC09     		.2byte	0x9dc
 6616 024f 1E040000 		.4byte	0x41e
 6617 0253 0D       		.uleb128 0xd
 6618 0254 63747800 		.ascii	"ctx\000"
 6619 0258 07       		.byte	0x7
 6620 0259 DD09     		.2byte	0x9dd
 6621 025b 11240000 		.4byte	0x2411
 6622 025f 00       		.byte	0
 6623 0260 0E       		.uleb128 0xe
 6624 0261 211E0000 		.4byte	.LASF74
 6625 0265 07       		.byte	0x7
 6626 0266 DE09     		.2byte	0x9de
 6627 0268 501C0000 		.4byte	0x1c50
 6628 026c 04       		.byte	0x4
 6629 026d 0E       		.uleb128 0xe
 6630 026e 2D410000 		.4byte	.LASF75
 6631 0272 07       		.byte	0x7
 6632 0273 DF09     		.2byte	0x9df
 6633 0275 17240000 		.4byte	0x2417
 6634 0279 08       		.byte	0x8
 6635 027a 0E       		.uleb128 0xe
 6636 027b 7A260000 		.4byte	.LASF76
 6637 027f 07       		.byte	0x7
 6638 0280 E009     		.2byte	0x9e0
 6639 0282 1D240000 		.4byte	0x241d
 6640 0286 0C       		.byte	0xc
 6641 0287 0E       		.uleb128 0xe
 6642 0288 CD120000 		.4byte	.LASF77
 6643 028c 07       		.byte	0x7
 6644 028d E109     		.2byte	0x9e1
 6645 028f A9000000 		.4byte	0xa9
 6646 0293 10       		.byte	0x10
 6647 0294 0E       		.uleb128 0xe
 6648 0295 70130000 		.4byte	.LASF78
 6649 0299 07       		.byte	0x7
 6650 029a E209     		.2byte	0x9e2
 6651 029c A9000000 		.4byte	0xa9
 6652 02a0 14       		.byte	0x14
 6653 02a1 0D       		.uleb128 0xd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 323


 6654 02a2 726E6700 		.ascii	"rng\000"
 6655 02a6 07       		.byte	0x7
 6656 02a7 E309     		.2byte	0x9e3
 6657 02a9 23240000 		.4byte	0x2423
 6658 02ad 18       		.byte	0x18
 6659 02ae 0E       		.uleb128 0xe
 6660 02af 252C0000 		.4byte	.LASF79
 6661 02b3 07       		.byte	0x7
 6662 02b4 E409     		.2byte	0x9e4
 6663 02b6 A9000000 		.4byte	0xa9
 6664 02ba 1C       		.byte	0x1c
 6665 02bb 0E       		.uleb128 0xe
 6666 02bc BD170000 		.4byte	.LASF80
 6667 02c0 07       		.byte	0x7
 6668 02c1 E509     		.2byte	0x9e5
 6669 02c3 C00A0000 		.4byte	0xac0
 6670 02c7 20       		.byte	0x20
 6671 02c8 0E       		.uleb128 0xe
 6672 02c9 28340000 		.4byte	.LASF81
 6673 02cd 07       		.byte	0x7
 6674 02ce E609     		.2byte	0x9e6
 6675 02d0 A9000000 		.4byte	0xa9
 6676 02d4 24       		.byte	0x24
 6677 02d5 0E       		.uleb128 0xe
 6678 02d6 CF3A0000 		.4byte	.LASF82
 6679 02da 07       		.byte	0x7
 6680 02db E809     		.2byte	0x9e8
 6681 02dd 660D0000 		.4byte	0xd66
 6682 02e1 28       		.byte	0x28
 6683 02e2 0E       		.uleb128 0xe
 6684 02e3 F1260000 		.4byte	.LASF83
 6685 02e7 07       		.byte	0x7
 6686 02e8 E909     		.2byte	0x9e9
 6687 02ea A9000000 		.4byte	0xa9
 6688 02ee 2C       		.byte	0x2c
 6689 02ef 0E       		.uleb128 0xe
 6690 02f0 AF3F0000 		.4byte	.LASF84
 6691 02f4 07       		.byte	0x7
 6692 02f5 EB09     		.2byte	0x9eb
 6693 02f7 E4080000 		.4byte	0x8e4
 6694 02fb 30       		.byte	0x30
 6695 02fc 0E       		.uleb128 0xe
 6696 02fd A8250000 		.4byte	.LASF85
 6697 0301 07       		.byte	0x7
 6698 0302 EC09     		.2byte	0x9ec
 6699 0304 771D0000 		.4byte	0x1d77
 6700 0308 34       		.byte	0x34
 6701 0309 0E       		.uleb128 0xe
 6702 030a B51E0000 		.4byte	.LASF86
 6703 030e 07       		.byte	0x7
 6704 030f ED09     		.2byte	0x9ed
 6705 0311 271D0000 		.4byte	0x1d27
 6706 0315 38       		.byte	0x38
 6707 0316 0E       		.uleb128 0xe
 6708 0317 73040000 		.4byte	.LASF87
 6709 031b 07       		.byte	0x7
 6710 031c EE09     		.2byte	0x9ee
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 324


 6711 031e 271D0000 		.4byte	0x1d27
 6712 0322 39       		.byte	0x39
 6713 0323 0E       		.uleb128 0xe
 6714 0324 36380000 		.4byte	.LASF88
 6715 0328 07       		.byte	0x7
 6716 0329 EF09     		.2byte	0x9ef
 6717 032b C31E0000 		.4byte	0x1ec3
 6718 032f 3C       		.byte	0x3c
 6719 0330 0E       		.uleb128 0xe
 6720 0331 1D290000 		.4byte	.LASF89
 6721 0335 07       		.byte	0x7
 6722 0336 F009     		.2byte	0x9f0
 6723 0338 1E040000 		.4byte	0x41e
 6724 033c 9C       		.byte	0x9c
 6725 033d 0F       		.uleb128 0xf
 6726 033e 5D400000 		.4byte	.LASF90
 6727 0342 07       		.byte	0x7
 6728 0343 F109     		.2byte	0x9f1
 6729 0345 94090000 		.4byte	0x994
 6730 0349 0C01     		.2byte	0x10c
 6731 034b 0F       		.uleb128 0xf
 6732 034c 42160000 		.4byte	.LASF91
 6733 0350 07       		.byte	0x7
 6734 0351 F209     		.2byte	0x9f2
 6735 0353 30000000 		.4byte	0x30
 6736 0357 1C01     		.2byte	0x11c
 6737 0359 10       		.uleb128 0x10
 6738 035a 72666400 		.ascii	"rfd\000"
 6739 035e 07       		.byte	0x7
 6740 035f F309     		.2byte	0x9f3
 6741 0361 30000000 		.4byte	0x30
 6742 0365 2001     		.2byte	0x120
 6743 0367 10       		.uleb128 0x10
 6744 0368 77666400 		.ascii	"wfd\000"
 6745 036c 07       		.byte	0x7
 6746 036d F409     		.2byte	0x9f4
 6747 036f 30000000 		.4byte	0x30
 6748 0373 2401     		.2byte	0x124
 6749 0375 0F       		.uleb128 0xf
 6750 0376 391B0000 		.4byte	.LASF92
 6751 037a 07       		.byte	0x7
 6752 037b F509     		.2byte	0x9f5
 6753 037d 30000000 		.4byte	0x30
 6754 0381 2801     		.2byte	0x128
 6755 0383 0F       		.uleb128 0xf
 6756 0384 DB320000 		.4byte	.LASF93
 6757 0388 07       		.byte	0x7
 6758 0389 F609     		.2byte	0x9f6
 6759 038b 30000000 		.4byte	0x30
 6760 038f 2C01     		.2byte	0x12c
 6761 0391 0F       		.uleb128 0xf
 6762 0392 7E110000 		.4byte	.LASF94
 6763 0396 07       		.byte	0x7
 6764 0397 F709     		.2byte	0x9f7
 6765 0399 5B000000 		.4byte	0x5b
 6766 039d 3001     		.2byte	0x130
 6767 039f 0F       		.uleb128 0xf
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 325


 6768 03a0 E6260000 		.4byte	.LASF95
 6769 03a4 07       		.byte	0x7
 6770 03a5 F809     		.2byte	0x9f8
 6771 03a7 5B000000 		.4byte	0x5b
 6772 03ab 3401     		.2byte	0x134
 6773 03ad 0F       		.uleb128 0xf
 6774 03ae 480B0000 		.4byte	.LASF96
 6775 03b2 07       		.byte	0x7
 6776 03b3 F909     		.2byte	0x9f9
 6777 03b5 49000000 		.4byte	0x49
 6778 03b9 3801     		.2byte	0x138
 6779 03bb 0F       		.uleb128 0xf
 6780 03bc 972C0000 		.4byte	.LASF97
 6781 03c0 07       		.byte	0x7
 6782 03c1 FA09     		.2byte	0x9fa
 6783 03c3 CA220000 		.4byte	0x22ca
 6784 03c7 3A01     		.2byte	0x13a
 6785 03c9 0F       		.uleb128 0xf
 6786 03ca DD230000 		.4byte	.LASF98
 6787 03ce 07       		.byte	0x7
 6788 03cf FB09     		.2byte	0x9fb
 6789 03d1 C4230000 		.4byte	0x23c4
 6790 03d5 4001     		.2byte	0x140
 6791 03d7 0F       		.uleb128 0xf
 6792 03d8 A73F0000 		.4byte	.LASF99
 6793 03dc 07       		.byte	0x7
 6794 03dd FC09     		.2byte	0x9fc
 6795 03df F5170000 		.4byte	0x17f5
 6796 03e3 4201     		.2byte	0x142
 6797 03e5 0F       		.uleb128 0xf
 6798 03e6 32270000 		.4byte	.LASF100
 6799 03ea 07       		.byte	0x7
 6800 03eb FD09     		.2byte	0x9fd
 6801 03ed F5170000 		.4byte	0x17f5
 6802 03f1 4401     		.2byte	0x144
 6803 03f3 0F       		.uleb128 0xf
 6804 03f4 C7300000 		.4byte	.LASF101
 6805 03f8 07       		.byte	0x7
 6806 03f9 FE09     		.2byte	0x9fe
 6807 03fb 001D0000 		.4byte	0x1d00
 6808 03ff 4601     		.2byte	0x146
 6809 0401 0F       		.uleb128 0xf
 6810 0402 7E290000 		.4byte	.LASF102
 6811 0406 07       		.byte	0x7
 6812 0407 FF09     		.2byte	0x9ff
 6813 0409 381C0000 		.4byte	0x1c38
 6814 040d 5801     		.2byte	0x158
 6815 040f 0F       		.uleb128 0xf
 6816 0410 78410000 		.4byte	.LASF103
 6817 0414 07       		.byte	0x7
 6818 0415 000A     		.2byte	0xa00
 6819 0417 AF210000 		.4byte	0x21af
 6820 041b 0C02     		.2byte	0x20c
 6821 041d 00       		.byte	0
 6822 041e 02       		.uleb128 0x2
 6823 041f 36030000 		.4byte	.LASF104
 6824 0423 06       		.byte	0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 326


 6825 0424 43       		.byte	0x43
 6826 0425 29040000 		.4byte	0x429
 6827 0429 11       		.uleb128 0x11
 6828 042a 36030000 		.4byte	.LASF104
 6829 042e 70       		.byte	0x70
 6830 042f 07       		.byte	0x7
 6831 0430 4908     		.2byte	0x849
 6832 0432 92040000 		.4byte	0x492
 6833 0436 0E       		.uleb128 0xe
 6834 0437 EF020000 		.4byte	.LASF105
 6835 043b 07       		.byte	0x7
 6836 043c 4A08     		.2byte	0x84a
 6837 043e 5B000000 		.4byte	0x5b
 6838 0442 00       		.byte	0
 6839 0443 0E       		.uleb128 0xe
 6840 0444 7E110000 		.4byte	.LASF94
 6841 0448 07       		.byte	0x7
 6842 0449 4B08     		.2byte	0x84b
 6843 044b 5B000000 		.4byte	0x5b
 6844 044f 04       		.byte	0x4
 6845 0450 0E       		.uleb128 0xe
 6846 0451 29110000 		.4byte	.LASF106
 6847 0455 07       		.byte	0x7
 6848 0456 4C08     		.2byte	0x84c
 6849 0458 89130000 		.4byte	0x1389
 6850 045c 08       		.byte	0x8
 6851 045d 0E       		.uleb128 0xe
 6852 045e DE010000 		.4byte	.LASF107
 6853 0462 07       		.byte	0x7
 6854 0463 4D08     		.2byte	0x84d
 6855 0465 37000000 		.4byte	0x37
 6856 0469 28       		.byte	0x28
 6857 046a 0E       		.uleb128 0xe
 6858 046b 4B400000 		.4byte	.LASF108
 6859 046f 07       		.byte	0x7
 6860 0470 4E08     		.2byte	0x84e
 6861 0472 671D0000 		.4byte	0x1d67
 6862 0476 29       		.byte	0x29
 6863 0477 0E       		.uleb128 0xe
 6864 0478 D3000000 		.4byte	.LASF109
 6865 047c 07       		.byte	0x7
 6866 047d 5608     		.2byte	0x856
 6867 047f 49000000 		.4byte	0x49
 6868 0483 5A       		.byte	0x5a
 6869 0484 0E       		.uleb128 0xe
 6870 0485 640F0000 		.4byte	.LASF110
 6871 0489 07       		.byte	0x7
 6872 048a 5708     		.2byte	0x857
 6873 048c 69130000 		.4byte	0x1369
 6874 0490 5C       		.byte	0x5c
 6875 0491 00       		.byte	0
 6876 0492 02       		.uleb128 0x2
 6877 0493 EC280000 		.4byte	.LASF111
 6878 0497 06       		.byte	0x6
 6879 0498 44       		.byte	0x44
 6880 0499 9D040000 		.4byte	0x49d
 6881 049d 11       		.uleb128 0x11
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 327


 6882 049e EC280000 		.4byte	.LASF111
 6883 04a2 04       		.byte	0x4
 6884 04a3 07       		.byte	0x7
 6885 04a4 A904     		.2byte	0x4a9
 6886 04a6 D2040000 		.4byte	0x4d2
 6887 04aa 0E       		.uleb128 0xe
 6888 04ab A73F0000 		.4byte	.LASF99
 6889 04af 07       		.byte	0x7
 6890 04b0 AA04     		.2byte	0x4aa
 6891 04b2 F5170000 		.4byte	0x17f5
 6892 04b6 00       		.byte	0
 6893 04b7 0E       		.uleb128 0xe
 6894 04b8 58400000 		.4byte	.LASF112
 6895 04bc 07       		.byte	0x7
 6896 04bd AB04     		.2byte	0x4ab
 6897 04bf 37000000 		.4byte	0x37
 6898 04c3 02       		.byte	0x2
 6899 04c4 0E       		.uleb128 0xe
 6900 04c5 1C190000 		.4byte	.LASF113
 6901 04c9 07       		.byte	0x7
 6902 04ca AC04     		.2byte	0x4ac
 6903 04cc 37000000 		.4byte	0x37
 6904 04d0 03       		.byte	0x3
 6905 04d1 00       		.byte	0
 6906 04d2 02       		.uleb128 0x2
 6907 04d3 65240000 		.4byte	.LASF114
 6908 04d7 06       		.byte	0x6
 6909 04d8 45       		.byte	0x45
 6910 04d9 DD040000 		.4byte	0x4dd
 6911 04dd 11       		.uleb128 0x11
 6912 04de 65240000 		.4byte	.LASF114
 6913 04e2 48       		.byte	0x48
 6914 04e3 07       		.byte	0x7
 6915 04e4 1F07     		.2byte	0x71f
 6916 04e6 70060000 		.4byte	0x670
 6917 04ea 0E       		.uleb128 0xe
 6918 04eb C53F0000 		.4byte	.LASF115
 6919 04ef 07       		.byte	0x7
 6920 04f0 2007     		.2byte	0x720
 6921 04f2 441C0000 		.4byte	0x1c44
 6922 04f6 00       		.byte	0
 6923 04f7 0E       		.uleb128 0xe
 6924 04f8 1E210000 		.4byte	.LASF116
 6925 04fc 07       		.byte	0x7
 6926 04fd 2107     		.2byte	0x721
 6927 04ff 25000000 		.4byte	0x25
 6928 0503 04       		.byte	0x4
 6929 0504 0E       		.uleb128 0xe
 6930 0505 2B1A0000 		.4byte	.LASF117
 6931 0509 07       		.byte	0x7
 6932 050a 2207     		.2byte	0x722
 6933 050c 30000000 		.4byte	0x30
 6934 0510 08       		.byte	0x8
 6935 0511 0E       		.uleb128 0xe
 6936 0512 08170000 		.4byte	.LASF118
 6937 0516 07       		.byte	0x7
 6938 0517 2807     		.2byte	0x728
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 328


 6939 0519 4A1C0000 		.4byte	0x1c4a
 6940 051d 0C       		.byte	0xc
 6941 051e 0E       		.uleb128 0xe
 6942 051f D8410000 		.4byte	.LASF119
 6943 0523 07       		.byte	0x7
 6944 0524 2907     		.2byte	0x729
 6945 0526 4A1C0000 		.4byte	0x1c4a
 6946 052a 10       		.byte	0x10
 6947 052b 0E       		.uleb128 0xe
 6948 052c 79270000 		.4byte	.LASF120
 6949 0530 07       		.byte	0x7
 6950 0531 2B07     		.2byte	0x72b
 6951 0533 4A1C0000 		.4byte	0x1c4a
 6952 0537 14       		.byte	0x14
 6953 0538 0D       		.uleb128 0xd
 6954 0539 636D00   		.ascii	"cm\000"
 6955 053c 07       		.byte	0x7
 6956 053d 2C07     		.2byte	0x72c
 6957 053f 2E090000 		.4byte	0x92e
 6958 0543 18       		.byte	0x18
 6959 0544 0E       		.uleb128 0xe
 6960 0545 211E0000 		.4byte	.LASF74
 6961 0549 07       		.byte	0x7
 6962 054a 2E07     		.2byte	0x72e
 6963 054c 501C0000 		.4byte	0x1c50
 6964 0550 1C       		.byte	0x1c
 6965 0551 0E       		.uleb128 0xe
 6966 0552 28340000 		.4byte	.LASF81
 6967 0556 07       		.byte	0x7
 6968 0557 2F07     		.2byte	0x72f
 6969 0559 A9000000 		.4byte	0xa9
 6970 055d 20       		.byte	0x20
 6971 055e 0E       		.uleb128 0xe
 6972 055f 3F190000 		.4byte	.LASF121
 6973 0563 07       		.byte	0x7
 6974 0564 3007     		.2byte	0x730
 6975 0566 37000000 		.4byte	0x37
 6976 056a 24       		.byte	0x24
 6977 056b 0E       		.uleb128 0xe
 6978 056c F3050000 		.4byte	.LASF122
 6979 0570 07       		.byte	0x7
 6980 0571 3107     		.2byte	0x731
 6981 0573 37000000 		.4byte	0x37
 6982 0577 25       		.byte	0x25
 6983 0578 0E       		.uleb128 0xe
 6984 0579 AB020000 		.4byte	.LASF123
 6985 057d 07       		.byte	0x7
 6986 057e 3207     		.2byte	0x732
 6987 0580 37000000 		.4byte	0x37
 6988 0584 26       		.byte	0x26
 6989 0585 0E       		.uleb128 0xe
 6990 0586 C9160000 		.4byte	.LASF124
 6991 058a 07       		.byte	0x7
 6992 058b 3307     		.2byte	0x733
 6993 058d 37000000 		.4byte	0x37
 6994 0591 27       		.byte	0x27
 6995 0592 0E       		.uleb128 0xe
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 329


 6996 0593 231C0000 		.4byte	.LASF125
 6997 0597 07       		.byte	0x7
 6998 0598 3407     		.2byte	0x734
 6999 059a 37000000 		.4byte	0x37
 7000 059e 28       		.byte	0x28
 7001 059f 0E       		.uleb128 0xe
 7002 05a0 33180000 		.4byte	.LASF126
 7003 05a4 07       		.byte	0x7
 7004 05a5 3507     		.2byte	0x735
 7005 05a7 37000000 		.4byte	0x37
 7006 05ab 29       		.byte	0x29
 7007 05ac 0E       		.uleb128 0xe
 7008 05ad D5110000 		.4byte	.LASF127
 7009 05b1 07       		.byte	0x7
 7010 05b2 3607     		.2byte	0x736
 7011 05b4 37000000 		.4byte	0x37
 7012 05b8 2A       		.byte	0x2a
 7013 05b9 0E       		.uleb128 0xe
 7014 05ba E03F0000 		.4byte	.LASF128
 7015 05be 07       		.byte	0x7
 7016 05bf 3707     		.2byte	0x737
 7017 05c1 37000000 		.4byte	0x37
 7018 05c5 2B       		.byte	0x2b
 7019 05c6 0E       		.uleb128 0xe
 7020 05c7 561D0000 		.4byte	.LASF129
 7021 05cb 07       		.byte	0x7
 7022 05cc 3807     		.2byte	0x738
 7023 05ce 37000000 		.4byte	0x37
 7024 05d2 2C       		.byte	0x2c
 7025 05d3 0E       		.uleb128 0xe
 7026 05d4 CB130000 		.4byte	.LASF130
 7027 05d8 07       		.byte	0x7
 7028 05d9 3907     		.2byte	0x739
 7029 05db 37000000 		.4byte	0x37
 7030 05df 2D       		.byte	0x2d
 7031 05e0 0E       		.uleb128 0xe
 7032 05e1 013D0000 		.4byte	.LASF131
 7033 05e5 07       		.byte	0x7
 7034 05e6 3A07     		.2byte	0x73a
 7035 05e8 37000000 		.4byte	0x37
 7036 05ec 2E       		.byte	0x2e
 7037 05ed 0E       		.uleb128 0xe
 7038 05ee 1B370000 		.4byte	.LASF132
 7039 05f2 07       		.byte	0x7
 7040 05f3 3B07     		.2byte	0x73b
 7041 05f5 37000000 		.4byte	0x37
 7042 05f9 2F       		.byte	0x2f
 7043 05fa 0E       		.uleb128 0xe
 7044 05fb AA2C0000 		.4byte	.LASF133
 7045 05ff 07       		.byte	0x7
 7046 0600 3C07     		.2byte	0x73c
 7047 0602 37000000 		.4byte	0x37
 7048 0606 30       		.byte	0x30
 7049 0607 0E       		.uleb128 0xe
 7050 0608 29210000 		.4byte	.LASF134
 7051 060c 07       		.byte	0x7
 7052 060d 3D07     		.2byte	0x73d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 330


 7053 060f 37000000 		.4byte	0x37
 7054 0613 31       		.byte	0x31
 7055 0614 0E       		.uleb128 0xe
 7056 0615 1E2E0000 		.4byte	.LASF135
 7057 0619 07       		.byte	0x7
 7058 061a 3E07     		.2byte	0x73e
 7059 061c 37000000 		.4byte	0x37
 7060 0620 32       		.byte	0x32
 7061 0621 0E       		.uleb128 0xe
 7062 0622 D02D0000 		.4byte	.LASF136
 7063 0626 07       		.byte	0x7
 7064 0627 3F07     		.2byte	0x73f
 7065 0629 37000000 		.4byte	0x37
 7066 062d 33       		.byte	0x33
 7067 062e 0E       		.uleb128 0xe
 7068 062f 4B100000 		.4byte	.LASF137
 7069 0633 07       		.byte	0x7
 7070 0634 4007     		.2byte	0x740
 7071 0636 37000000 		.4byte	0x37
 7072 063a 34       		.byte	0x34
 7073 063b 0E       		.uleb128 0xe
 7074 063c 1A3D0000 		.4byte	.LASF138
 7075 0640 07       		.byte	0x7
 7076 0641 4407     		.2byte	0x744
 7077 0643 0B0C0000 		.4byte	0xc0b
 7078 0647 38       		.byte	0x38
 7079 0648 0E       		.uleb128 0xe
 7080 0649 83260000 		.4byte	.LASF139
 7081 064d 07       		.byte	0x7
 7082 064e 4507     		.2byte	0x745
 7083 0650 410C0000 		.4byte	0xc41
 7084 0654 3C       		.byte	0x3c
 7085 0655 0E       		.uleb128 0xe
 7086 0656 BD170000 		.4byte	.LASF80
 7087 065a 07       		.byte	0x7
 7088 065b 4907     		.2byte	0x749
 7089 065d C00A0000 		.4byte	0xac0
 7090 0661 40       		.byte	0x40
 7091 0662 0E       		.uleb128 0xe
 7092 0663 7E110000 		.4byte	.LASF94
 7093 0667 07       		.byte	0x7
 7094 0668 4A07     		.2byte	0x74a
 7095 066a 5B000000 		.4byte	0x5b
 7096 066e 44       		.byte	0x44
 7097 066f 00       		.byte	0
 7098 0670 02       		.uleb128 0x2
 7099 0671 EC0C0000 		.4byte	.LASF140
 7100 0675 06       		.byte	0x6
 7101 0676 47       		.byte	0x47
 7102 0677 7B060000 		.4byte	0x67b
 7103 067b 0C       		.uleb128 0xc
 7104 067c EC0C0000 		.4byte	.LASF140
 7105 0680 B003     		.2byte	0x3b0
 7106 0682 07       		.byte	0x7
 7107 0683 3A09     		.2byte	0x93a
 7108 0685 92070000 		.4byte	0x792
 7109 0689 0E       		.uleb128 0xe
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 331


 7110 068a A73F0000 		.4byte	.LASF99
 7111 068e 07       		.byte	0x7
 7112 068f 3B09     		.2byte	0x93b
 7113 0691 30000000 		.4byte	0x30
 7114 0695 00       		.byte	0
 7115 0696 0E       		.uleb128 0xe
 7116 0697 D93F0000 		.4byte	.LASF141
 7117 069b 07       		.byte	0x7
 7118 069c 3C09     		.2byte	0x93c
 7119 069e 92070000 		.4byte	0x792
 7120 06a2 04       		.byte	0x4
 7121 06a3 0F       		.uleb128 0xf
 7122 06a4 92150000 		.4byte	.LASF142
 7123 06a8 07       		.byte	0x7
 7124 06a9 3D09     		.2byte	0x93d
 7125 06ab 92070000 		.4byte	0x792
 7126 06af 1001     		.2byte	0x110
 7127 06b1 0F       		.uleb128 0xf
 7128 06b2 A3370000 		.4byte	.LASF143
 7129 06b6 07       		.byte	0x7
 7130 06b7 3E09     		.2byte	0x93e
 7131 06b9 30000000 		.4byte	0x30
 7132 06bd 1C02     		.2byte	0x21c
 7133 06bf 0F       		.uleb128 0xf
 7134 06c0 BB2A0000 		.4byte	.LASF144
 7135 06c4 07       		.byte	0x7
 7136 06c5 3F09     		.2byte	0x93f
 7137 06c7 89130000 		.4byte	0x1389
 7138 06cb 2002     		.2byte	0x220
 7139 06cd 0F       		.uleb128 0xf
 7140 06ce B92D0000 		.4byte	.LASF145
 7141 06d2 07       		.byte	0x7
 7142 06d3 4009     		.2byte	0x940
 7143 06d5 79130000 		.4byte	0x1379
 7144 06d9 4002     		.2byte	0x240
 7145 06db 0F       		.uleb128 0xf
 7146 06dc D8100000 		.4byte	.LASF146
 7147 06e0 07       		.byte	0x7
 7148 06e1 4D09     		.2byte	0x94d
 7149 06e3 30000000 		.4byte	0x30
 7150 06e7 4003     		.2byte	0x340
 7151 06e9 0F       		.uleb128 0xf
 7152 06ea 361E0000 		.4byte	.LASF147
 7153 06ee 07       		.byte	0x7
 7154 06ef 4E09     		.2byte	0x94e
 7155 06f1 89130000 		.4byte	0x1389
 7156 06f5 4403     		.2byte	0x344
 7157 06f7 0F       		.uleb128 0xf
 7158 06f8 3C270000 		.4byte	.LASF148
 7159 06fc 07       		.byte	0x7
 7160 06fd 4F09     		.2byte	0x94f
 7161 06ff 30000000 		.4byte	0x30
 7162 0703 6403     		.2byte	0x364
 7163 0705 0F       		.uleb128 0xf
 7164 0706 B70D0000 		.4byte	.LASF149
 7165 070a 07       		.byte	0x7
 7166 070b 5009     		.2byte	0x950
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 332


 7167 070d 89130000 		.4byte	0x1389
 7168 0711 6803     		.2byte	0x368
 7169 0713 0F       		.uleb128 0xf
 7170 0714 D1100000 		.4byte	.LASF150
 7171 0718 07       		.byte	0x7
 7172 0719 5109     		.2byte	0x951
 7173 071b 30000000 		.4byte	0x30
 7174 071f 8803     		.2byte	0x388
 7175 0721 10       		.uleb128 0x10
 7176 0722 73696700 		.ascii	"sig\000"
 7177 0726 07       		.byte	0x7
 7178 0727 5209     		.2byte	0x952
 7179 0729 29180000 		.4byte	0x1829
 7180 072d 8C03     		.2byte	0x38c
 7181 072f 0F       		.uleb128 0xf
 7182 0730 683B0000 		.4byte	.LASF151
 7183 0734 07       		.byte	0x7
 7184 0735 5309     		.2byte	0x953
 7185 0737 30000000 		.4byte	0x30
 7186 073b 9403     		.2byte	0x394
 7187 073d 0F       		.uleb128 0xf
 7188 073e B72E0000 		.4byte	.LASF152
 7189 0742 07       		.byte	0x7
 7190 0743 5409     		.2byte	0x954
 7191 0745 29180000 		.4byte	0x1829
 7192 0749 9803     		.2byte	0x398
 7193 074b 0F       		.uleb128 0xf
 7194 074c B40C0000 		.4byte	.LASF153
 7195 0750 07       		.byte	0x7
 7196 0751 5909     		.2byte	0x959
 7197 0753 4A1C0000 		.4byte	0x1c4a
 7198 0757 A003     		.2byte	0x3a0
 7199 0759 0F       		.uleb128 0xf
 7200 075a A4190000 		.4byte	.LASF154
 7201 075e 07       		.byte	0x7
 7202 075f 5B09     		.2byte	0x95b
 7203 0761 810F0000 		.4byte	0xf81
 7204 0765 A403     		.2byte	0x3a4
 7205 0767 0F       		.uleb128 0xf
 7206 0768 24140000 		.4byte	.LASF155
 7207 076c 07       		.byte	0x7
 7208 076d 5C09     		.2byte	0x95c
 7209 076f 810F0000 		.4byte	0xf81
 7210 0773 A803     		.2byte	0x3a8
 7211 0775 0F       		.uleb128 0xf
 7212 0776 DB1F0000 		.4byte	.LASF156
 7213 077a 07       		.byte	0x7
 7214 077b 5D09     		.2byte	0x95d
 7215 077d 37000000 		.4byte	0x37
 7216 0781 AC03     		.2byte	0x3ac
 7217 0783 0F       		.uleb128 0xf
 7218 0784 84080000 		.4byte	.LASF157
 7219 0788 07       		.byte	0x7
 7220 0789 5E09     		.2byte	0x95e
 7221 078b 37000000 		.4byte	0x37
 7222 078f AD03     		.2byte	0x3ad
 7223 0791 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 333


 7224 0792 02       		.uleb128 0x2
 7225 0793 00100000 		.4byte	.LASF158
 7226 0797 06       		.byte	0x6
 7227 0798 48       		.byte	0x48
 7228 0799 9D070000 		.4byte	0x79d
 7229 079d 0C       		.uleb128 0xc
 7230 079e 00100000 		.4byte	.LASF158
 7231 07a2 0C01     		.2byte	0x10c
 7232 07a4 07       		.byte	0x7
 7233 07a5 2809     		.2byte	0x928
 7234 07a7 E1070000 		.4byte	0x7e1
 7235 07ab 0E       		.uleb128 0xe
 7236 07ac CD200000 		.4byte	.LASF159
 7237 07b0 07       		.byte	0x7
 7238 07b1 2909     		.2byte	0x929
 7239 07b3 B1000000 		.4byte	0xb1
 7240 07b7 00       		.byte	0
 7241 07b8 0E       		.uleb128 0xe
 7242 07b9 132D0000 		.4byte	.LASF160
 7243 07bd 07       		.byte	0x7
 7244 07be 2A09     		.2byte	0x92a
 7245 07c0 79130000 		.4byte	0x1379
 7246 07c4 04       		.byte	0x4
 7247 07c5 0F       		.uleb128 0xf
 7248 07c6 5A150000 		.4byte	.LASF161
 7249 07ca 07       		.byte	0x7
 7250 07cb 2B09     		.2byte	0x92b
 7251 07cd 30000000 		.4byte	0x30
 7252 07d1 0401     		.2byte	0x104
 7253 07d3 10       		.uleb128 0x10
 7254 07d4 737A00   		.ascii	"sz\000"
 7255 07d7 07       		.byte	0x7
 7256 07d8 2C09     		.2byte	0x92c
 7257 07da 30000000 		.4byte	0x30
 7258 07de 0801     		.2byte	0x108
 7259 07e0 00       		.byte	0
 7260 07e1 02       		.uleb128 0x2
 7261 07e2 DF1B0000 		.4byte	.LASF162
 7262 07e6 06       		.byte	0x6
 7263 07e7 4B       		.byte	0x4b
 7264 07e8 EC070000 		.4byte	0x7ec
 7265 07ec 11       		.uleb128 0x11
 7266 07ed DF1B0000 		.4byte	.LASF162
 7267 07f1 5C       		.byte	0x5c
 7268 07f2 07       		.byte	0x7
 7269 07f3 AD05     		.2byte	0x5ad
 7270 07f5 E4080000 		.4byte	0x8e4
 7271 07f9 0E       		.uleb128 0xe
 7272 07fa 3E380000 		.4byte	.LASF163
 7273 07fe 07       		.byte	0x7
 7274 07ff AE05     		.2byte	0x5ae
 7275 0801 621B0000 		.4byte	0x1b62
 7276 0805 00       		.byte	0
 7277 0806 0E       		.uleb128 0xe
 7278 0807 28340000 		.4byte	.LASF81
 7279 080b 07       		.byte	0x7
 7280 080c AF05     		.2byte	0x5af
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 334


 7281 080e A9000000 		.4byte	0xa9
 7282 0812 2C       		.byte	0x2c
 7283 0813 0D       		.uleb128 0xd
 7284 0814 63726C00 		.ascii	"crl\000"
 7285 0818 07       		.byte	0x7
 7286 0819 B405     		.2byte	0x5b4
 7287 081b 721B0000 		.4byte	0x1b72
 7288 081f 30       		.byte	0x30
 7289 0820 0E       		.uleb128 0xe
 7290 0821 86110000 		.4byte	.LASF164
 7291 0825 07       		.byte	0x7
 7292 0826 B505     		.2byte	0x5b5
 7293 0828 781B0000 		.4byte	0x1b78
 7294 082c 34       		.byte	0x34
 7295 082d 0E       		.uleb128 0xe
 7296 082e 19110000 		.4byte	.LASF165
 7297 0832 07       		.byte	0x7
 7298 0833 BA05     		.2byte	0x5ba
 7299 0835 B1000000 		.4byte	0xb1
 7300 0839 38       		.byte	0x38
 7301 083a 0E       		.uleb128 0xe
 7302 083b B21F0000 		.4byte	.LASF166
 7303 083f 07       		.byte	0x7
 7304 0840 BB05     		.2byte	0x5bb
 7305 0842 A9000000 		.4byte	0xa9
 7306 0846 3C       		.byte	0x3c
 7307 0847 0E       		.uleb128 0xe
 7308 0848 2C390000 		.4byte	.LASF167
 7309 084c 07       		.byte	0x7
 7310 084d BC05     		.2byte	0x5bc
 7311 084f 7B0C0000 		.4byte	0xc7b
 7312 0853 40       		.byte	0x40
 7313 0854 0E       		.uleb128 0xe
 7314 0855 0D1D0000 		.4byte	.LASF168
 7315 0859 07       		.byte	0x7
 7316 085a BD05     		.2byte	0x5bd
 7317 085c A20C0000 		.4byte	0xca2
 7318 0860 44       		.byte	0x44
 7319 0861 0E       		.uleb128 0xe
 7320 0862 9C380000 		.4byte	.LASF169
 7321 0866 07       		.byte	0x7
 7322 0867 BE05     		.2byte	0x5be
 7323 0869 BF0C0000 		.4byte	0xcbf
 7324 086d 48       		.byte	0x48
 7325 086e 0E       		.uleb128 0xe
 7326 086f A43D0000 		.4byte	.LASF170
 7327 0873 07       		.byte	0x7
 7328 0874 BF05     		.2byte	0x5bf
 7329 0876 FF0C0000 		.4byte	0xcff
 7330 087a 4C       		.byte	0x4c
 7331 087b 0E       		.uleb128 0xe
 7332 087c 780C0000 		.4byte	.LASF171
 7333 0880 07       		.byte	0x7
 7334 0881 C005     		.2byte	0x5c0
 7335 0883 25000000 		.4byte	0x25
 7336 0887 50       		.byte	0x50
 7337 0888 0E       		.uleb128 0xe
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 335


 7338 0889 36170000 		.4byte	.LASF172
 7339 088d 07       		.byte	0x7
 7340 088e C105     		.2byte	0x5c1
 7341 0890 37000000 		.4byte	0x37
 7342 0894 54       		.byte	0x54
 7343 0895 0E       		.uleb128 0xe
 7344 0896 B4290000 		.4byte	.LASF173
 7345 089a 07       		.byte	0x7
 7346 089b C205     		.2byte	0x5c2
 7347 089d 37000000 		.4byte	0x37
 7348 08a1 55       		.byte	0x55
 7349 08a2 0E       		.uleb128 0xe
 7350 08a3 AD250000 		.4byte	.LASF174
 7351 08a7 07       		.byte	0x7
 7352 08a8 C305     		.2byte	0x5c3
 7353 08aa 37000000 		.4byte	0x37
 7354 08ae 56       		.byte	0x56
 7355 08af 0E       		.uleb128 0xe
 7356 08b0 8F2E0000 		.4byte	.LASF175
 7357 08b4 07       		.byte	0x7
 7358 08b5 C405     		.2byte	0x5c4
 7359 08b7 37000000 		.4byte	0x37
 7360 08bb 57       		.byte	0x57
 7361 08bc 0E       		.uleb128 0xe
 7362 08bd 572E0000 		.4byte	.LASF176
 7363 08c1 07       		.byte	0x7
 7364 08c2 C505     		.2byte	0x5c5
 7365 08c4 37000000 		.4byte	0x37
 7366 08c8 58       		.byte	0x58
 7367 08c9 0E       		.uleb128 0xe
 7368 08ca 65060000 		.4byte	.LASF177
 7369 08ce 07       		.byte	0x7
 7370 08cf C605     		.2byte	0x5c6
 7371 08d1 37000000 		.4byte	0x37
 7372 08d5 59       		.byte	0x59
 7373 08d6 0E       		.uleb128 0xe
 7374 08d7 720B0000 		.4byte	.LASF178
 7375 08db 07       		.byte	0x7
 7376 08dc C705     		.2byte	0x5c7
 7377 08de 37000000 		.4byte	0x37
 7378 08e2 5A       		.byte	0x5a
 7379 08e3 00       		.byte	0
 7380 08e4 02       		.uleb128 0x2
 7381 08e5 AB280000 		.4byte	.LASF179
 7382 08e9 06       		.byte	0x6
 7383 08ea 5C       		.byte	0x5c
 7384 08eb EF080000 		.4byte	0x8ef
 7385 08ef 11       		.uleb128 0x11
 7386 08f0 AB280000 		.4byte	.LASF179
 7387 08f4 04       		.byte	0x4
 7388 08f5 07       		.byte	0x7
 7389 08f6 3805     		.2byte	0x538
 7390 08f8 0A090000 		.4byte	0x90a
 7391 08fc 0D       		.uleb128 0xd
 7392 08fd 73736C00 		.ascii	"ssl\000"
 7393 0901 07       		.byte	0x7
 7394 0902 3905     		.2byte	0x539
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 336


 7395 0904 3B0C0000 		.4byte	0xc3b
 7396 0908 00       		.byte	0
 7397 0909 00       		.byte	0
 7398 090a 12       		.uleb128 0x12
 7399 090b 440F0000 		.4byte	.LASF180
 7400 090f 08       		.byte	0x8
 7401 0910 06       		.byte	0x6
 7402 0911 84       		.byte	0x84
 7403 0912 2E090000 		.4byte	0x92e
 7404 0916 13       		.uleb128 0x13
 7405 0917 433F0000 		.4byte	.LASF181
 7406 091b 06       		.byte	0x6
 7407 091c 85       		.byte	0x85
 7408 091d 30000000 		.4byte	0x30
 7409 0921 00       		.byte	0
 7410 0922 14       		.uleb128 0x14
 7411 0923 636D00   		.ascii	"cm\000"
 7412 0926 06       		.byte	0x6
 7413 0927 86       		.byte	0x86
 7414 0928 2E090000 		.4byte	0x92e
 7415 092c 04       		.byte	0x4
 7416 092d 00       		.byte	0
 7417 092e 06       		.uleb128 0x6
 7418 092f 04       		.byte	0x4
 7419 0930 E1070000 		.4byte	0x7e1
 7420 0934 02       		.uleb128 0x2
 7421 0935 440F0000 		.4byte	.LASF180
 7422 0939 06       		.byte	0x6
 7423 093a 87       		.byte	0x87
 7424 093b 0A090000 		.4byte	0x90a
 7425 093f 12       		.uleb128 0x12
 7426 0940 4F1C0000 		.4byte	.LASF182
 7427 0944 08       		.byte	0x8
 7428 0945 06       		.byte	0x6
 7429 0946 89       		.byte	0x89
 7430 0947 64090000 		.4byte	0x964
 7431 094b 13       		.uleb128 0x13
 7432 094c EE190000 		.4byte	.LASF183
 7433 0950 06       		.byte	0x6
 7434 0951 8A       		.byte	0x8a
 7435 0952 30000000 		.4byte	0x30
 7436 0956 00       		.byte	0
 7437 0957 13       		.uleb128 0x13
 7438 0958 6D200000 		.4byte	.LASF184
 7439 095c 06       		.byte	0x6
 7440 095d 8B       		.byte	0x8b
 7441 095e 30000000 		.4byte	0x30
 7442 0962 04       		.byte	0x4
 7443 0963 00       		.byte	0
 7444 0964 02       		.uleb128 0x2
 7445 0965 4F1C0000 		.4byte	.LASF182
 7446 0969 06       		.byte	0x6
 7447 096a 8C       		.byte	0x8c
 7448 096b 3F090000 		.4byte	0x93f
 7449 096f 12       		.uleb128 0x12
 7450 0970 61190000 		.4byte	.LASF185
 7451 0974 10       		.byte	0x10
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 337


 7452 0975 06       		.byte	0x6
 7453 0976 8E       		.byte	0x8e
 7454 0977 94090000 		.4byte	0x994
 7455 097b 13       		.uleb128 0x13
 7456 097c FC3A0000 		.4byte	.LASF186
 7457 0980 06       		.byte	0x6
 7458 0981 8F       		.byte	0x8f
 7459 0982 64090000 		.4byte	0x964
 7460 0986 00       		.byte	0
 7461 0987 13       		.uleb128 0x13
 7462 0988 2C3D0000 		.4byte	.LASF187
 7463 098c 06       		.byte	0x6
 7464 098d 90       		.byte	0x90
 7465 098e 64090000 		.4byte	0x964
 7466 0992 08       		.byte	0x8
 7467 0993 00       		.byte	0
 7468 0994 02       		.uleb128 0x2
 7469 0995 61190000 		.4byte	.LASF185
 7470 0999 06       		.byte	0x6
 7471 099a 91       		.byte	0x91
 7472 099b 6F090000 		.4byte	0x96f
 7473 099f 06       		.uleb128 0x6
 7474 09a0 04       		.byte	0x4
 7475 09a1 70060000 		.4byte	0x670
 7476 09a5 12       		.uleb128 0x12
 7477 09a6 28300000 		.4byte	.LASF188
 7478 09aa 20       		.byte	0x20
 7479 09ab 06       		.byte	0x6
 7480 09ac A0       		.byte	0xa0
 7481 09ad 120A0000 		.4byte	0xa12
 7482 09b1 13       		.uleb128 0x13
 7483 09b2 043B0000 		.4byte	.LASF189
 7484 09b6 06       		.byte	0x6
 7485 09b7 A1       		.byte	0xa1
 7486 09b8 120A0000 		.4byte	0xa12
 7487 09bc 00       		.byte	0
 7488 09bd 13       		.uleb128 0x13
 7489 09be 6B3D0000 		.4byte	.LASF190
 7490 09c2 06       		.byte	0x6
 7491 09c3 A2       		.byte	0xa2
 7492 09c4 9F090000 		.4byte	0x99f
 7493 09c8 04       		.byte	0x4
 7494 09c9 13       		.uleb128 0x13
 7495 09ca DC310000 		.4byte	.LASF191
 7496 09ce 06       		.byte	0x6
 7497 09cf A3       		.byte	0xa3
 7498 09d0 B1000000 		.4byte	0xb1
 7499 09d4 08       		.byte	0x8
 7500 09d5 13       		.uleb128 0x13
 7501 09d6 B5170000 		.4byte	.LASF192
 7502 09da 06       		.byte	0x6
 7503 09db A4       		.byte	0xa4
 7504 09dc A9000000 		.4byte	0xa9
 7505 09e0 0C       		.byte	0xc
 7506 09e1 13       		.uleb128 0x13
 7507 09e2 DD080000 		.4byte	.LASF193
 7508 09e6 06       		.byte	0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 338


 7509 09e7 A5       		.byte	0xa5
 7510 09e8 A9000000 		.4byte	0xa9
 7511 09ec 10       		.byte	0x10
 7512 09ed 13       		.uleb128 0x13
 7513 09ee 42160000 		.4byte	.LASF91
 7514 09f2 06       		.byte	0x6
 7515 09f3 A6       		.byte	0xa6
 7516 09f4 30000000 		.4byte	0x30
 7517 09f8 14       		.byte	0x14
 7518 09f9 13       		.uleb128 0x13
 7519 09fa 68020000 		.4byte	.LASF194
 7520 09fe 06       		.byte	0x6
 7521 09ff A7       		.byte	0xa7
 7522 0a00 30000000 		.4byte	0x30
 7523 0a04 18       		.byte	0x18
 7524 0a05 13       		.uleb128 0x13
 7525 0a06 A52F0000 		.4byte	.LASF195
 7526 0a0a 06       		.byte	0x6
 7527 0a0b A8       		.byte	0xa8
 7528 0a0c 30000000 		.4byte	0x30
 7529 0a10 1C       		.byte	0x1c
 7530 0a11 00       		.byte	0
 7531 0a12 06       		.uleb128 0x6
 7532 0a13 04       		.byte	0x4
 7533 0a14 34090000 		.4byte	0x934
 7534 0a18 02       		.uleb128 0x2
 7535 0a19 28300000 		.4byte	.LASF188
 7536 0a1d 06       		.byte	0x6
 7537 0a1e A9       		.byte	0xa9
 7538 0a1f A5090000 		.4byte	0x9a5
 7539 0a23 15       		.uleb128 0x15
 7540 0a24 83220000 		.4byte	.LASF215
 7541 0a28 01       		.byte	0x1
 7542 0a29 06       		.byte	0x6
 7543 0a2a AD       		.byte	0xad
 7544 0a2b A70A0000 		.4byte	0xaa7
 7545 0a2f 0A       		.uleb128 0xa
 7546 0a30 32050000 		.4byte	.LASF196
 7547 0a34 00       		.sleb128 0
 7548 0a35 0A       		.uleb128 0xa
 7549 0a36 400D0000 		.4byte	.LASF197
 7550 0a3a 0A       		.sleb128 10
 7551 0a3b 0A       		.uleb128 0xa
 7552 0a3c 0D190000 		.4byte	.LASF198
 7553 0a40 14       		.sleb128 20
 7554 0a41 0A       		.uleb128 0xa
 7555 0a42 522B0000 		.4byte	.LASF199
 7556 0a46 16       		.sleb128 22
 7557 0a47 0A       		.uleb128 0xa
 7558 0a48 9C2A0000 		.4byte	.LASF200
 7559 0a4c 1E       		.sleb128 30
 7560 0a4d 0A       		.uleb128 0xa
 7561 0a4e A63A0000 		.4byte	.LASF201
 7562 0a52 28       		.sleb128 40
 7563 0a53 0A       		.uleb128 0xa
 7564 0a54 18100000 		.4byte	.LASF202
 7565 0a58 29       		.sleb128 41
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 339


 7566 0a59 0A       		.uleb128 0xa
 7567 0a5a 2C080000 		.4byte	.LASF203
 7568 0a5e 2A       		.sleb128 42
 7569 0a5f 0A       		.uleb128 0xa
 7570 0a60 E0110000 		.4byte	.LASF204
 7571 0a64 2B       		.sleb128 43
 7572 0a65 0A       		.uleb128 0xa
 7573 0a66 DF3A0000 		.4byte	.LASF205
 7574 0a6a 2C       		.sleb128 44
 7575 0a6b 0A       		.uleb128 0xa
 7576 0a6c 353E0000 		.4byte	.LASF206
 7577 0a70 2D       		.sleb128 45
 7578 0a71 0A       		.uleb128 0xa
 7579 0a72 8C1E0000 		.4byte	.LASF207
 7580 0a76 2E       		.sleb128 46
 7581 0a77 0A       		.uleb128 0xa
 7582 0a78 24170000 		.4byte	.LASF208
 7583 0a7c 2F       		.sleb128 47
 7584 0a7d 0A       		.uleb128 0xa
 7585 0a7e E71D0000 		.4byte	.LASF209
 7586 0a82 33       		.sleb128 51
 7587 0a83 0A       		.uleb128 0xa
 7588 0a84 71240000 		.4byte	.LASF210
 7589 0a88 C600     		.sleb128 70
 7590 0a8a 0A       		.uleb128 0xa
 7591 0a8b 7B1E0000 		.4byte	.LASF211
 7592 0a8f E400     		.sleb128 100
 7593 0a91 0A       		.uleb128 0xa
 7594 0a92 0B040000 		.4byte	.LASF212
 7595 0a96 F000     		.sleb128 112
 7596 0a98 0A       		.uleb128 0xa
 7597 0a99 573C0000 		.4byte	.LASF213
 7598 0a9d F100     		.sleb128 113
 7599 0a9f 0A       		.uleb128 0xa
 7600 0aa0 1D040000 		.4byte	.LASF214
 7601 0aa4 F800     		.sleb128 120
 7602 0aa6 00       		.byte	0
 7603 0aa7 15       		.uleb128 0x15
 7604 0aa8 511E0000 		.4byte	.LASF216
 7605 0aac 01       		.byte	0x1
 7606 0aad 06       		.byte	0x6
 7607 0aae C9       		.byte	0xc9
 7608 0aaf C00A0000 		.4byte	0xac0
 7609 0ab3 0A       		.uleb128 0xa
 7610 0ab4 E8240000 		.4byte	.LASF217
 7611 0ab8 01       		.sleb128 1
 7612 0ab9 0A       		.uleb128 0xa
 7613 0aba E51A0000 		.4byte	.LASF218
 7614 0abe 02       		.sleb128 2
 7615 0abf 00       		.byte	0
 7616 0ac0 16       		.uleb128 0x16
 7617 0ac1 483B0000 		.4byte	.LASF219
 7618 0ac5 06       		.byte	0x6
 7619 0ac6 3301     		.2byte	0x133
 7620 0ac8 CC0A0000 		.4byte	0xacc
 7621 0acc 06       		.uleb128 0x6
 7622 0acd 04       		.byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 340


 7623 0ace D20A0000 		.4byte	0xad2
 7624 0ad2 17       		.uleb128 0x17
 7625 0ad3 30000000 		.4byte	0x30
 7626 0ad7 E60A0000 		.4byte	0xae6
 7627 0adb 18       		.uleb128 0x18
 7628 0adc 30000000 		.4byte	0x30
 7629 0ae0 18       		.uleb128 0x18
 7630 0ae1 E60A0000 		.4byte	0xae6
 7631 0ae5 00       		.byte	0
 7632 0ae6 06       		.uleb128 0x6
 7633 0ae7 04       		.byte	0x4
 7634 0ae8 180A0000 		.4byte	0xa18
 7635 0aec 0B       		.uleb128 0xb
 7636 0aed 02       		.byte	0x2
 7637 0aee 06       		.byte	0x6
 7638 0aef A802     		.2byte	0x2a8
 7639 0af1 0B0C0000 		.4byte	0xc0b
 7640 0af5 0A       		.uleb128 0xa
 7641 0af6 B3160000 		.4byte	.LASF220
 7642 0afa 00       		.sleb128 0
 7643 0afb 0A       		.uleb128 0xa
 7644 0afc 31400000 		.4byte	.LASF221
 7645 0b00 00       		.sleb128 0
 7646 0b01 0A       		.uleb128 0xa
 7647 0b02 AB310000 		.4byte	.LASF222
 7648 0b06 01       		.sleb128 1
 7649 0b07 0A       		.uleb128 0xa
 7650 0b08 BE0E0000 		.4byte	.LASF223
 7651 0b0c 02       		.sleb128 2
 7652 0b0d 0A       		.uleb128 0xa
 7653 0b0e 653E0000 		.4byte	.LASF224
 7654 0b12 77       		.sleb128 -9
 7655 0b13 0A       		.uleb128 0xa
 7656 0b14 92370000 		.4byte	.LASF225
 7657 0b18 78       		.sleb128 -8
 7658 0b19 0A       		.uleb128 0xa
 7659 0b1a 001A0000 		.4byte	.LASF226
 7660 0b1e 79       		.sleb128 -7
 7661 0b1f 0A       		.uleb128 0xa
 7662 0b20 863E0000 		.4byte	.LASF227
 7663 0b24 7A       		.sleb128 -6
 7664 0b25 0A       		.uleb128 0xa
 7665 0b26 F22D0000 		.4byte	.LASF228
 7666 0b2a 7B       		.sleb128 -5
 7667 0b2b 0A       		.uleb128 0xa
 7668 0b2c 570F0000 		.4byte	.LASF229
 7669 0b30 7C       		.sleb128 -4
 7670 0b31 0A       		.uleb128 0xa
 7671 0b32 93010000 		.4byte	.LASF230
 7672 0b36 7D       		.sleb128 -3
 7673 0b37 0A       		.uleb128 0xa
 7674 0b38 58100000 		.4byte	.LASF231
 7675 0b3c 7E       		.sleb128 -2
 7676 0b3d 0A       		.uleb128 0xa
 7677 0b3e C7080000 		.4byte	.LASF232
 7678 0b42 7F       		.sleb128 -1
 7679 0b43 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 341


 7680 0b44 392E0000 		.4byte	.LASF233
 7681 0b48 02       		.sleb128 2
 7682 0b49 0A       		.uleb128 0xa
 7683 0b4a 36360000 		.4byte	.LASF234
 7684 0b4e 01       		.sleb128 1
 7685 0b4f 0A       		.uleb128 0xa
 7686 0b50 E4270000 		.4byte	.LASF235
 7687 0b54 02       		.sleb128 2
 7688 0b55 0A       		.uleb128 0xa
 7689 0b56 033F0000 		.4byte	.LASF236
 7690 0b5a 03       		.sleb128 3
 7691 0b5b 0A       		.uleb128 0xa
 7692 0b5c 42080000 		.4byte	.LASF237
 7693 0b60 00       		.sleb128 0
 7694 0b61 0A       		.uleb128 0xa
 7695 0b62 03410000 		.4byte	.LASF238
 7696 0b66 01       		.sleb128 1
 7697 0b67 0A       		.uleb128 0xa
 7698 0b68 E7370000 		.4byte	.LASF239
 7699 0b6c 02       		.sleb128 2
 7700 0b6d 0A       		.uleb128 0xa
 7701 0b6e E83F0000 		.4byte	.LASF240
 7702 0b72 04       		.sleb128 4
 7703 0b73 0A       		.uleb128 0xa
 7704 0b74 C9400000 		.4byte	.LASF241
 7705 0b78 08       		.sleb128 8
 7706 0b79 0A       		.uleb128 0xa
 7707 0b7a 06360000 		.4byte	.LASF242
 7708 0b7e 1E       		.sleb128 30
 7709 0b7f 0A       		.uleb128 0xa
 7710 0b80 62300000 		.4byte	.LASF243
 7711 0b84 1F       		.sleb128 31
 7712 0b85 0A       		.uleb128 0xa
 7713 0b86 1E160000 		.4byte	.LASF244
 7714 0b8a 20       		.sleb128 32
 7715 0b8b 0A       		.uleb128 0xa
 7716 0b8c 55030000 		.4byte	.LASF245
 7717 0b90 21       		.sleb128 33
 7718 0b91 0A       		.uleb128 0xa
 7719 0b92 88070000 		.4byte	.LASF246
 7720 0b96 22       		.sleb128 34
 7721 0b97 0A       		.uleb128 0xa
 7722 0b98 3F050000 		.4byte	.LASF247
 7723 0b9c 23       		.sleb128 35
 7724 0b9d 0A       		.uleb128 0xa
 7725 0b9e 0F0E0000 		.4byte	.LASF248
 7726 0ba2 02       		.sleb128 2
 7727 0ba3 0A       		.uleb128 0xa
 7728 0ba4 F3040000 		.4byte	.LASF249
 7729 0ba8 03       		.sleb128 3
 7730 0ba9 0A       		.uleb128 0xa
 7731 0baa FA200000 		.4byte	.LASF250
 7732 0bae 07       		.sleb128 7
 7733 0baf 0A       		.uleb128 0xa
 7734 0bb0 5F380000 		.4byte	.LASF251
 7735 0bb4 08       		.sleb128 8
 7736 0bb5 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 342


 7737 0bb6 0A3B0000 		.4byte	.LASF252
 7738 0bba 05       		.sleb128 5
 7739 0bbb 0A       		.uleb128 0xa
 7740 0bbc 59000000 		.4byte	.LASF253
 7741 0bc0 D300     		.sleb128 83
 7742 0bc2 0A       		.uleb128 0xa
 7743 0bc3 53260000 		.4byte	.LASF254
 7744 0bc7 06       		.sleb128 6
 7745 0bc8 0A       		.uleb128 0xa
 7746 0bc9 020B0000 		.4byte	.LASF255
 7747 0bcd D500     		.sleb128 85
 7748 0bcf 0A       		.uleb128 0xa
 7749 0bd0 B7060000 		.4byte	.LASF256
 7750 0bd4 01       		.sleb128 1
 7751 0bd5 0A       		.uleb128 0xa
 7752 0bd6 68230000 		.4byte	.LASF257
 7753 0bda 02       		.sleb128 2
 7754 0bdb 0A       		.uleb128 0xa
 7755 0bdc 27100000 		.4byte	.LASF258
 7756 0be0 04       		.sleb128 4
 7757 0be1 0A       		.uleb128 0xa
 7758 0be2 D9000000 		.4byte	.LASF259
 7759 0be6 08       		.sleb128 8
 7760 0be7 0A       		.uleb128 0xa
 7761 0be8 B6020000 		.4byte	.LASF260
 7762 0bec E500     		.sleb128 101
 7763 0bee 0A       		.uleb128 0xa
 7764 0bef FE3D0000 		.4byte	.LASF261
 7765 0bf3 E600     		.sleb128 102
 7766 0bf5 0A       		.uleb128 0xa
 7767 0bf6 0E260000 		.4byte	.LASF262
 7768 0bfa E700     		.sleb128 103
 7769 0bfc 0A       		.uleb128 0xa
 7770 0bfd 55290000 		.4byte	.LASF263
 7771 0c01 E800     		.sleb128 104
 7772 0c03 0A       		.uleb128 0xa
 7773 0c04 32010000 		.4byte	.LASF264
 7774 0c08 8008     		.sleb128 1024
 7775 0c0a 00       		.byte	0
 7776 0c0b 16       		.uleb128 0x16
 7777 0c0c 46030000 		.4byte	.LASF265
 7778 0c10 06       		.byte	0x6
 7779 0c11 EB03     		.2byte	0x3eb
 7780 0c13 170C0000 		.4byte	0xc17
 7781 0c17 06       		.uleb128 0x6
 7782 0c18 04       		.byte	0x4
 7783 0c19 1D0C0000 		.4byte	0xc1d
 7784 0c1d 17       		.uleb128 0x17
 7785 0c1e 30000000 		.4byte	0x30
 7786 0c22 3B0C0000 		.4byte	0xc3b
 7787 0c26 18       		.uleb128 0x18
 7788 0c27 3B0C0000 		.4byte	0xc3b
 7789 0c2b 18       		.uleb128 0x18
 7790 0c2c B1000000 		.4byte	0xb1
 7791 0c30 18       		.uleb128 0x18
 7792 0c31 30000000 		.4byte	0x30
 7793 0c35 18       		.uleb128 0x18
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 343


 7794 0c36 A9000000 		.4byte	0xa9
 7795 0c3a 00       		.byte	0
 7796 0c3b 06       		.uleb128 0x6
 7797 0c3c 04       		.byte	0x4
 7798 0c3d 3A020000 		.4byte	0x23a
 7799 0c41 16       		.uleb128 0x16
 7800 0c42 F02C0000 		.4byte	.LASF266
 7801 0c46 06       		.byte	0x6
 7802 0c47 EC03     		.2byte	0x3ec
 7803 0c49 170C0000 		.4byte	0xc17
 7804 0c4d 0B       		.uleb128 0xb
 7805 0c4e 01       		.byte	0x1
 7806 0c4f 06       		.byte	0x6
 7807 0c50 3A04     		.2byte	0x43a
 7808 0c52 7B0C0000 		.4byte	0xc7b
 7809 0c56 0A       		.uleb128 0xa
 7810 0c57 DB0B0000 		.4byte	.LASF267
 7811 0c5b 00       		.sleb128 0
 7812 0c5c 0A       		.uleb128 0xa
 7813 0c5d 1A340000 		.4byte	.LASF268
 7814 0c61 01       		.sleb128 1
 7815 0c62 0A       		.uleb128 0xa
 7816 0c63 AB1A0000 		.4byte	.LASF269
 7817 0c67 02       		.sleb128 2
 7818 0c68 0A       		.uleb128 0xa
 7819 0c69 BB1A0000 		.4byte	.LASF270
 7820 0c6d 03       		.sleb128 3
 7821 0c6e 0A       		.uleb128 0xa
 7822 0c6f DE040000 		.4byte	.LASF271
 7823 0c73 01       		.sleb128 1
 7824 0c74 0A       		.uleb128 0xa
 7825 0c75 8F020000 		.4byte	.LASF272
 7826 0c79 02       		.sleb128 2
 7827 0c7a 00       		.byte	0
 7828 0c7b 16       		.uleb128 0x16
 7829 0c7c BF230000 		.4byte	.LASF273
 7830 0c80 06       		.byte	0x6
 7831 0c81 5704     		.2byte	0x457
 7832 0c83 870C0000 		.4byte	0xc87
 7833 0c87 06       		.uleb128 0x6
 7834 0c88 04       		.byte	0x4
 7835 0c89 8D0C0000 		.4byte	0xc8d
 7836 0c8d 19       		.uleb128 0x19
 7837 0c8e A20C0000 		.4byte	0xca2
 7838 0c92 18       		.uleb128 0x18
 7839 0c93 AB000000 		.4byte	0xab
 7840 0c97 18       		.uleb128 0x18
 7841 0c98 30000000 		.4byte	0x30
 7842 0c9c 18       		.uleb128 0x18
 7843 0c9d 30000000 		.4byte	0x30
 7844 0ca1 00       		.byte	0
 7845 0ca2 16       		.uleb128 0x16
 7846 0ca3 71110000 		.4byte	.LASF274
 7847 0ca7 06       		.byte	0x6
 7848 0ca8 5804     		.2byte	0x458
 7849 0caa AE0C0000 		.4byte	0xcae
 7850 0cae 06       		.uleb128 0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 344


 7851 0caf 04       		.byte	0x4
 7852 0cb0 B40C0000 		.4byte	0xcb4
 7853 0cb4 19       		.uleb128 0x19
 7854 0cb5 BF0C0000 		.4byte	0xcbf
 7855 0cb9 18       		.uleb128 0x18
 7856 0cba BE000000 		.4byte	0xbe
 7857 0cbe 00       		.byte	0
 7858 0cbf 16       		.uleb128 0x16
 7859 0cc0 F9100000 		.4byte	.LASF275
 7860 0cc4 06       		.byte	0x6
 7861 0cc5 5904     		.2byte	0x459
 7862 0cc7 CB0C0000 		.4byte	0xccb
 7863 0ccb 06       		.uleb128 0x6
 7864 0ccc 04       		.byte	0x4
 7865 0ccd D10C0000 		.4byte	0xcd1
 7866 0cd1 17       		.uleb128 0x17
 7867 0cd2 30000000 		.4byte	0x30
 7868 0cd6 F90C0000 		.4byte	0xcf9
 7869 0cda 18       		.uleb128 0x18
 7870 0cdb A9000000 		.4byte	0xa9
 7871 0cdf 18       		.uleb128 0x18
 7872 0ce0 BE000000 		.4byte	0xbe
 7873 0ce4 18       		.uleb128 0x18
 7874 0ce5 30000000 		.4byte	0x30
 7875 0ce9 18       		.uleb128 0x18
 7876 0cea AB000000 		.4byte	0xab
 7877 0cee 18       		.uleb128 0x18
 7878 0cef 30000000 		.4byte	0x30
 7879 0cf3 18       		.uleb128 0x18
 7880 0cf4 F90C0000 		.4byte	0xcf9
 7881 0cf8 00       		.byte	0
 7882 0cf9 06       		.uleb128 0x6
 7883 0cfa 04       		.byte	0x4
 7884 0cfb AB000000 		.4byte	0xab
 7885 0cff 16       		.uleb128 0x16
 7886 0d00 962D0000 		.4byte	.LASF276
 7887 0d04 06       		.byte	0x6
 7888 0d05 5B04     		.2byte	0x45b
 7889 0d07 0B0D0000 		.4byte	0xd0b
 7890 0d0b 06       		.uleb128 0x6
 7891 0d0c 04       		.byte	0x4
 7892 0d0d 110D0000 		.4byte	0xd11
 7893 0d11 19       		.uleb128 0x19
 7894 0d12 210D0000 		.4byte	0xd21
 7895 0d16 18       		.uleb128 0x18
 7896 0d17 A9000000 		.4byte	0xa9
 7897 0d1b 18       		.uleb128 0x18
 7898 0d1c AB000000 		.4byte	0xab
 7899 0d20 00       		.byte	0
 7900 0d21 06       		.uleb128 0x6
 7901 0d22 04       		.byte	0x4
 7902 0d23 270D0000 		.4byte	0xd27
 7903 0d27 07       		.uleb128 0x7
 7904 0d28 42000000 		.4byte	0x42
 7905 0d2c 06       		.uleb128 0x6
 7906 0d2d 04       		.byte	0x4
 7907 0d2e 66000000 		.4byte	0x66
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 345


 7908 0d32 0B       		.uleb128 0xb
 7909 0d33 01       		.byte	0x1
 7910 0d34 06       		.byte	0x6
 7911 0d35 8204     		.2byte	0x482
 7912 0d37 600D0000 		.4byte	0xd60
 7913 0d3b 0A       		.uleb128 0xa
 7914 0d3c 71330000 		.4byte	.LASF277
 7915 0d40 00       		.sleb128 0
 7916 0d41 0A       		.uleb128 0xa
 7917 0d42 071F0000 		.4byte	.LASF278
 7918 0d46 01       		.sleb128 1
 7919 0d47 0A       		.uleb128 0xa
 7920 0d48 2B2D0000 		.4byte	.LASF279
 7921 0d4c 02       		.sleb128 2
 7922 0d4d 0A       		.uleb128 0xa
 7923 0d4e 0A2E0000 		.4byte	.LASF280
 7924 0d52 03       		.sleb128 3
 7925 0d53 0A       		.uleb128 0xa
 7926 0d54 3D150000 		.4byte	.LASF281
 7927 0d58 04       		.sleb128 4
 7928 0d59 0A       		.uleb128 0xa
 7929 0d5a 75380000 		.4byte	.LASF282
 7930 0d5e 0D       		.sleb128 13
 7931 0d5f 00       		.byte	0
 7932 0d60 06       		.uleb128 0x6
 7933 0d61 04       		.byte	0x4
 7934 0d62 30000000 		.4byte	0x30
 7935 0d66 16       		.uleb128 0x16
 7936 0d67 901C0000 		.4byte	.LASF283
 7937 0d6b 06       		.byte	0x6
 7938 0d6c 2A06     		.2byte	0x62a
 7939 0d6e 720D0000 		.4byte	0xd72
 7940 0d72 06       		.uleb128 0x6
 7941 0d73 04       		.byte	0x4
 7942 0d74 780D0000 		.4byte	0xd78
 7943 0d78 17       		.uleb128 0x17
 7944 0d79 30000000 		.4byte	0x30
 7945 0d7d 8C0D0000 		.4byte	0xd8c
 7946 0d81 18       		.uleb128 0x18
 7947 0d82 3B0C0000 		.4byte	0xc3b
 7948 0d86 18       		.uleb128 0x18
 7949 0d87 A9000000 		.4byte	0xa9
 7950 0d8b 00       		.byte	0
 7951 0d8c 12       		.uleb128 0x12
 7952 0d8d 481C0000 		.4byte	.LASF284
 7953 0d91 6C       		.byte	0x6c
 7954 0d92 08       		.byte	0x8
 7955 0d93 3A       		.byte	0x3a
 7956 0d94 D50D0000 		.4byte	0xdd5
 7957 0d98 13       		.uleb128 0x13
 7958 0d99 DF0D0000 		.4byte	.LASF285
 7959 0d9d 08       		.byte	0x8
 7960 0d9e 3B       		.byte	0x3b
 7961 0d9f 5B000000 		.4byte	0x5b
 7962 0da3 00       		.byte	0
 7963 0da4 13       		.uleb128 0x13
 7964 0da5 12100000 		.4byte	.LASF286
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 346


 7965 0da9 08       		.byte	0x8
 7966 0daa 3C       		.byte	0x3c
 7967 0dab 5B000000 		.4byte	0x5b
 7968 0daf 04       		.byte	0x4
 7969 0db0 13       		.uleb128 0x13
 7970 0db1 A30F0000 		.4byte	.LASF287
 7971 0db5 08       		.byte	0x8
 7972 0db6 3D       		.byte	0x3d
 7973 0db7 5B000000 		.4byte	0x5b
 7974 0dbb 08       		.byte	0x8
 7975 0dbc 13       		.uleb128 0x13
 7976 0dbd EA230000 		.4byte	.LASF288
 7977 0dc1 08       		.byte	0x8
 7978 0dc2 3E       		.byte	0x3e
 7979 0dc3 D50D0000 		.4byte	0xdd5
 7980 0dc7 0C       		.byte	0xc
 7981 0dc8 13       		.uleb128 0x13
 7982 0dc9 652E0000 		.4byte	.LASF289
 7983 0dcd 08       		.byte	0x8
 7984 0dce 3F       		.byte	0x3f
 7985 0dcf E50D0000 		.4byte	0xde5
 7986 0dd3 2C       		.byte	0x2c
 7987 0dd4 00       		.byte	0
 7988 0dd5 1A       		.uleb128 0x1a
 7989 0dd6 5B000000 		.4byte	0x5b
 7990 0dda E50D0000 		.4byte	0xde5
 7991 0dde 1B       		.uleb128 0x1b
 7992 0ddf A2000000 		.4byte	0xa2
 7993 0de3 07       		.byte	0x7
 7994 0de4 00       		.byte	0
 7995 0de5 1A       		.uleb128 0x1a
 7996 0de6 5B000000 		.4byte	0x5b
 7997 0dea F50D0000 		.4byte	0xdf5
 7998 0dee 1B       		.uleb128 0x1b
 7999 0def A2000000 		.4byte	0xa2
 8000 0df3 0F       		.byte	0xf
 8001 0df4 00       		.byte	0
 8002 0df5 02       		.uleb128 0x2
 8003 0df6 481C0000 		.4byte	.LASF284
 8004 0dfa 08       		.byte	0x8
 8005 0dfb 43       		.byte	0x43
 8006 0dfc 8C0D0000 		.4byte	0xd8c
 8007 0e00 12       		.uleb128 0x12
 8008 0e01 321F0000 		.4byte	.LASF290
 8009 0e05 04       		.byte	0x4
 8010 0e06 09       		.byte	0x9
 8011 0e07 3F       		.byte	0x3f
 8012 0e08 180E0000 		.4byte	0xe18
 8013 0e0c 14       		.uleb128 0x14
 8014 0e0d 666400   		.ascii	"fd\000"
 8015 0e10 09       		.byte	0x9
 8016 0e11 43       		.byte	0x43
 8017 0e12 30000000 		.4byte	0x30
 8018 0e16 00       		.byte	0
 8019 0e17 00       		.byte	0
 8020 0e18 02       		.uleb128 0x2
 8021 0e19 321F0000 		.4byte	.LASF290
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 347


 8022 0e1d 09       		.byte	0x9
 8023 0e1e 45       		.byte	0x45
 8024 0e1f 000E0000 		.4byte	0xe00
 8025 0e23 12       		.uleb128 0x12
 8026 0e24 07320000 		.4byte	.LASF291
 8027 0e28 0C       		.byte	0xc
 8028 0e29 09       		.byte	0x9
 8029 0e2a 51       		.byte	0x51
 8030 0e2b 540E0000 		.4byte	0xe54
 8031 0e2f 13       		.uleb128 0x13
 8032 0e30 E9350000 		.4byte	.LASF292
 8033 0e34 09       		.byte	0x9
 8034 0e35 52       		.byte	0x52
 8035 0e36 590E0000 		.4byte	0xe59
 8036 0e3a 00       		.byte	0
 8037 0e3b 13       		.uleb128 0x13
 8038 0e3c F9270000 		.4byte	.LASF293
 8039 0e40 09       		.byte	0x9
 8040 0e41 53       		.byte	0x53
 8041 0e42 180E0000 		.4byte	0xe18
 8042 0e46 04       		.byte	0x4
 8043 0e47 13       		.uleb128 0x13
 8044 0e48 60110000 		.4byte	.LASF294
 8045 0e4c 09       		.byte	0x9
 8046 0e4d 54       		.byte	0x54
 8047 0e4e 37000000 		.4byte	0x37
 8048 0e52 08       		.byte	0x8
 8049 0e53 00       		.byte	0
 8050 0e54 1C       		.uleb128 0x1c
 8051 0e55 EE040000 		.4byte	.LASF382
 8052 0e59 06       		.uleb128 0x6
 8053 0e5a 04       		.byte	0x4
 8054 0e5b 540E0000 		.4byte	0xe54
 8055 0e5f 02       		.uleb128 0x2
 8056 0e60 07320000 		.4byte	.LASF291
 8057 0e64 09       		.byte	0x9
 8058 0e65 55       		.byte	0x55
 8059 0e66 230E0000 		.4byte	0xe23
 8060 0e6a 09       		.uleb128 0x9
 8061 0e6b 01       		.byte	0x1
 8062 0e6c 0A       		.byte	0xa
 8063 0e6d 29       		.byte	0x29
 8064 0e6e 8C0E0000 		.4byte	0xe8c
 8065 0e72 1D       		.uleb128 0x1d
 8066 0e73 53484100 		.ascii	"SHA\000"
 8067 0e77 01       		.sleb128 1
 8068 0e78 0A       		.uleb128 0xa
 8069 0e79 343D0000 		.4byte	.LASF295
 8070 0e7d C000     		.sleb128 64
 8071 0e7f 0A       		.uleb128 0xa
 8072 0e80 0E320000 		.4byte	.LASF296
 8073 0e84 14       		.sleb128 20
 8074 0e85 0A       		.uleb128 0xa
 8075 0e86 CE320000 		.4byte	.LASF297
 8076 0e8a 38       		.sleb128 56
 8077 0e8b 00       		.byte	0
 8078 0e8c 15       		.uleb128 0x15
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 348


 8079 0e8d 7C1F0000 		.4byte	.LASF298
 8080 0e91 01       		.byte	0x1
 8081 0e92 0B       		.byte	0xb
 8082 0e93 28       		.byte	0x28
 8083 0e94 F30E0000 		.4byte	0xef3
 8084 0e98 0A       		.uleb128 0xa
 8085 0e99 2E320000 		.4byte	.LASF299
 8086 0e9d 00       		.sleb128 0
 8087 0e9e 0A       		.uleb128 0xa
 8088 0e9f 2E280000 		.4byte	.LASF300
 8089 0ea3 01       		.sleb128 1
 8090 0ea4 0A       		.uleb128 0xa
 8091 0ea5 D00A0000 		.4byte	.LASF301
 8092 0ea9 02       		.sleb128 2
 8093 0eaa 0A       		.uleb128 0xa
 8094 0eab B22A0000 		.4byte	.LASF302
 8095 0eaf 03       		.sleb128 3
 8096 0eb0 0A       		.uleb128 0xa
 8097 0eb1 7E050000 		.4byte	.LASF303
 8098 0eb5 04       		.sleb128 4
 8099 0eb6 0A       		.uleb128 0xa
 8100 0eb7 901F0000 		.4byte	.LASF304
 8101 0ebb 05       		.sleb128 5
 8102 0ebc 0A       		.uleb128 0xa
 8103 0ebd 092F0000 		.4byte	.LASF305
 8104 0ec1 06       		.sleb128 6
 8105 0ec2 0A       		.uleb128 0xa
 8106 0ec3 8F380000 		.4byte	.LASF306
 8107 0ec7 07       		.sleb128 7
 8108 0ec8 0A       		.uleb128 0xa
 8109 0ec9 9C2F0000 		.4byte	.LASF307
 8110 0ecd 08       		.sleb128 8
 8111 0ece 0A       		.uleb128 0xa
 8112 0ecf 49140000 		.4byte	.LASF308
 8113 0ed3 09       		.sleb128 9
 8114 0ed4 0A       		.uleb128 0xa
 8115 0ed5 553D0000 		.4byte	.LASF309
 8116 0ed9 0A       		.sleb128 10
 8117 0eda 0A       		.uleb128 0xa
 8118 0edb 250D0000 		.4byte	.LASF310
 8119 0edf 0B       		.sleb128 11
 8120 0ee0 0A       		.uleb128 0xa
 8121 0ee1 2A150000 		.4byte	.LASF311
 8122 0ee5 0C       		.sleb128 12
 8123 0ee6 0A       		.uleb128 0xa
 8124 0ee7 E2030000 		.4byte	.LASF312
 8125 0eeb 0D       		.sleb128 13
 8126 0eec 0A       		.uleb128 0xa
 8127 0eed 42320000 		.4byte	.LASF313
 8128 0ef1 0E       		.sleb128 14
 8129 0ef2 00       		.byte	0
 8130 0ef3 15       		.uleb128 0x15
 8131 0ef4 34220000 		.4byte	.LASF314
 8132 0ef8 02       		.byte	0x2
 8133 0ef9 0B       		.byte	0xb
 8134 0efa 3C       		.byte	0x3c
 8135 0efb 4D0F0000 		.4byte	0xf4d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 349


 8136 0eff 0A       		.uleb128 0xa
 8137 0f00 FF1D0000 		.4byte	.LASF315
 8138 0f04 8504     		.sleb128 517
 8139 0f06 0A       		.uleb128 0xa
 8140 0f07 64010000 		.4byte	.LASF316
 8141 0f0b 8605     		.sleb128 646
 8142 0f0d 0A       		.uleb128 0xa
 8143 0f0e 743F0000 		.4byte	.LASF317
 8144 0f12 8805     		.sleb128 648
 8145 0f14 0A       		.uleb128 0xa
 8146 0f15 70350000 		.4byte	.LASF318
 8147 0f19 8905     		.sleb128 649
 8148 0f1b 0A       		.uleb128 0xa
 8149 0f1c 5C1E0000 		.4byte	.LASF319
 8150 0f20 8804     		.sleb128 520
 8151 0f22 0A       		.uleb128 0xa
 8152 0f23 08080000 		.4byte	.LASF320
 8153 0f27 8F05     		.sleb128 655
 8154 0f29 0A       		.uleb128 0xa
 8155 0f2a D83E0000 		.4byte	.LASF321
 8156 0f2e 8C04     		.sleb128 524
 8157 0f30 0A       		.uleb128 0xa
 8158 0f31 78060000 		.4byte	.LASF322
 8159 0f35 9005     		.sleb128 656
 8160 0f37 0A       		.uleb128 0xa
 8161 0f38 5C270000 		.4byte	.LASF323
 8162 0f3c 8D04     		.sleb128 525
 8163 0f3e 0A       		.uleb128 0xa
 8164 0f3f 57080000 		.4byte	.LASF324
 8165 0f43 9105     		.sleb128 657
 8166 0f45 0A       		.uleb128 0xa
 8167 0f46 69260000 		.4byte	.LASF325
 8168 0f4a 8E04     		.sleb128 526
 8169 0f4c 00       		.byte	0
 8170 0f4d 16       		.uleb128 0x16
 8171 0f4e DF350000 		.4byte	.LASF326
 8172 0f52 0C       		.byte	0xc
 8173 0f53 4101     		.2byte	0x141
 8174 0f55 590F0000 		.4byte	0xf59
 8175 0f59 11       		.uleb128 0x11
 8176 0f5a DF350000 		.4byte	.LASF326
 8177 0f5e 08       		.byte	0x8
 8178 0f5f 0C       		.byte	0xc
 8179 0f60 4301     		.2byte	0x143
 8180 0f62 810F0000 		.4byte	0xf81
 8181 0f66 0E       		.uleb128 0xe
 8182 0f67 51020000 		.4byte	.LASF327
 8183 0f6b 0C       		.byte	0xc
 8184 0f6c 4401     		.2byte	0x144
 8185 0f6e 810F0000 		.4byte	0xf81
 8186 0f72 00       		.byte	0
 8187 0f73 0E       		.uleb128 0xe
 8188 0f74 CD200000 		.4byte	.LASF159
 8189 0f78 0C       		.byte	0xc
 8190 0f79 4501     		.2byte	0x145
 8191 0f7b B1000000 		.4byte	0xb1
 8192 0f7f 04       		.byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 350


 8193 0f80 00       		.byte	0
 8194 0f81 06       		.uleb128 0x6
 8195 0f82 04       		.byte	0x4
 8196 0f83 4D0F0000 		.4byte	0xf4d
 8197 0f87 16       		.uleb128 0x16
 8198 0f88 A0020000 		.4byte	.LASF328
 8199 0f8c 0C       		.byte	0xc
 8200 0f8d 4901     		.2byte	0x149
 8201 0f8f 930F0000 		.4byte	0xf93
 8202 0f93 11       		.uleb128 0x11
 8203 0f94 A0020000 		.4byte	.LASF328
 8204 0f98 10       		.byte	0x10
 8205 0f99 0C       		.byte	0xc
 8206 0f9a 4B01     		.2byte	0x14b
 8207 0f9c D50F0000 		.4byte	0xfd5
 8208 0fa0 0E       		.uleb128 0xe
 8209 0fa1 51020000 		.4byte	.LASF327
 8210 0fa5 0C       		.byte	0xc
 8211 0fa6 4C01     		.2byte	0x14c
 8212 0fa8 D50F0000 		.4byte	0xfd5
 8213 0fac 00       		.byte	0
 8214 0fad 0E       		.uleb128 0xe
 8215 0fae CD200000 		.4byte	.LASF159
 8216 0fb2 0C       		.byte	0xc
 8217 0fb3 4D01     		.2byte	0x14d
 8218 0fb5 B1000000 		.4byte	0xb1
 8219 0fb9 04       		.byte	0x4
 8220 0fba 0E       		.uleb128 0xe
 8221 0fbb 34260000 		.4byte	.LASF329
 8222 0fbf 0C       		.byte	0xc
 8223 0fc0 4E01     		.2byte	0x14e
 8224 0fc2 30000000 		.4byte	0x30
 8225 0fc6 08       		.byte	0x8
 8226 0fc7 0E       		.uleb128 0xe
 8227 0fc8 9D0C0000 		.4byte	.LASF330
 8228 0fcc 0C       		.byte	0xc
 8229 0fcd 4F01     		.2byte	0x14f
 8230 0fcf 37000000 		.4byte	0x37
 8231 0fd3 0C       		.byte	0xc
 8232 0fd4 00       		.byte	0
 8233 0fd5 06       		.uleb128 0x6
 8234 0fd6 04       		.byte	0x4
 8235 0fd7 870F0000 		.4byte	0xf87
 8236 0fdb 16       		.uleb128 0x16
 8237 0fdc F7000000 		.4byte	.LASF331
 8238 0fe0 0C       		.byte	0xc
 8239 0fe1 6E01     		.2byte	0x16e
 8240 0fe3 E70F0000 		.4byte	0xfe7
 8241 0fe7 0C       		.uleb128 0xc
 8242 0fe8 F7000000 		.4byte	.LASF331
 8243 0fec 1003     		.2byte	0x310
 8244 0fee 0C       		.byte	0xc
 8245 0fef 7601     		.2byte	0x176
 8246 0ff1 C7120000 		.4byte	0x12c7
 8247 0ff5 0E       		.uleb128 0xe
 8248 0ff6 4B220000 		.4byte	.LASF332
 8249 0ffa 0C       		.byte	0xc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 351


 8250 0ffb 7701     		.2byte	0x177
 8251 0ffd 63130000 		.4byte	0x1363
 8252 1001 00       		.byte	0
 8253 1002 0E       		.uleb128 0xe
 8254 1003 851F0000 		.4byte	.LASF333
 8255 1007 0C       		.byte	0xc
 8256 1008 7801     		.2byte	0x178
 8257 100a 5B000000 		.4byte	0x5b
 8258 100e 04       		.byte	0x4
 8259 100f 0E       		.uleb128 0xe
 8260 1010 331C0000 		.4byte	.LASF334
 8261 1014 0C       		.byte	0xc
 8262 1015 7901     		.2byte	0x179
 8263 1017 30000000 		.4byte	0x30
 8264 101b 08       		.byte	0x8
 8265 101c 0E       		.uleb128 0xe
 8266 101d C6350000 		.4byte	.LASF335
 8267 1021 0C       		.byte	0xc
 8268 1022 7A01     		.2byte	0x17a
 8269 1024 5B000000 		.4byte	0x5b
 8270 1028 0C       		.byte	0xc
 8271 1029 0E       		.uleb128 0xe
 8272 102a A0130000 		.4byte	.LASF336
 8273 102e 0C       		.byte	0xc
 8274 102f 7B01     		.2byte	0x17b
 8275 1031 5B000000 		.4byte	0x5b
 8276 1035 10       		.byte	0x10
 8277 1036 0E       		.uleb128 0xe
 8278 1037 F0400000 		.4byte	.LASF337
 8279 103b 0C       		.byte	0xc
 8280 103c 7C01     		.2byte	0x17c
 8281 103e 5B000000 		.4byte	0x5b
 8282 1042 14       		.byte	0x14
 8283 1043 0E       		.uleb128 0xe
 8284 1044 9D2C0000 		.4byte	.LASF338
 8285 1048 0C       		.byte	0xc
 8286 1049 7D01     		.2byte	0x17d
 8287 104b 5B000000 		.4byte	0x5b
 8288 104f 18       		.byte	0x18
 8289 1050 0E       		.uleb128 0xe
 8290 1051 C2160000 		.4byte	.LASF339
 8291 1055 0C       		.byte	0xc
 8292 1056 7E01     		.2byte	0x17e
 8293 1058 5B000000 		.4byte	0x5b
 8294 105c 1C       		.byte	0x1c
 8295 105d 0E       		.uleb128 0xe
 8296 105e A73F0000 		.4byte	.LASF99
 8297 1062 0C       		.byte	0xc
 8298 1063 7F01     		.2byte	0x17f
 8299 1065 30000000 		.4byte	0x30
 8300 1069 20       		.byte	0x20
 8301 106a 0E       		.uleb128 0xe
 8302 106b A4190000 		.4byte	.LASF154
 8303 106f 0C       		.byte	0xc
 8304 1070 8001     		.2byte	0x180
 8305 1072 810F0000 		.4byte	0xf81
 8306 1076 24       		.byte	0x24
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 352


 8307 1077 0E       		.uleb128 0xe
 8308 1078 A71E0000 		.4byte	.LASF340
 8309 107c 0C       		.byte	0xc
 8310 107d 8201     		.2byte	0x182
 8311 107f 810F0000 		.4byte	0xf81
 8312 1083 28       		.byte	0x28
 8313 1084 0E       		.uleb128 0xe
 8314 1085 973A0000 		.4byte	.LASF341
 8315 1089 0C       		.byte	0xc
 8316 108a 8301     		.2byte	0x183
 8317 108c D50F0000 		.4byte	0xfd5
 8318 1090 2C       		.byte	0x2c
 8319 1091 0E       		.uleb128 0xe
 8320 1092 1B230000 		.4byte	.LASF342
 8321 1096 0C       		.byte	0xc
 8322 1097 8401     		.2byte	0x184
 8323 1099 D50F0000 		.4byte	0xfd5
 8324 109d 30       		.byte	0x30
 8325 109e 0E       		.uleb128 0xe
 8326 109f B4040000 		.4byte	.LASF343
 8327 10a3 0C       		.byte	0xc
 8328 10a4 8601     		.2byte	0x186
 8329 10a6 69130000 		.4byte	0x1369
 8330 10aa 34       		.byte	0x34
 8331 10ab 0E       		.uleb128 0xe
 8332 10ac DE150000 		.4byte	.LASF344
 8333 10b0 0C       		.byte	0xc
 8334 10b1 8701     		.2byte	0x187
 8335 10b3 69130000 		.4byte	0x1369
 8336 10b7 48       		.byte	0x48
 8337 10b8 0E       		.uleb128 0xe
 8338 10b9 A2100000 		.4byte	.LASF345
 8339 10bd 0C       		.byte	0xc
 8340 10be 8B01     		.2byte	0x18b
 8341 10c0 63130000 		.4byte	0x1363
 8342 10c4 5C       		.byte	0x5c
 8343 10c5 0E       		.uleb128 0xe
 8344 10c6 B92D0000 		.4byte	.LASF145
 8345 10ca 0C       		.byte	0xc
 8346 10cb 8C01     		.2byte	0x18c
 8347 10cd B1000000 		.4byte	0xb1
 8348 10d1 60       		.byte	0x60
 8349 10d2 0E       		.uleb128 0xe
 8350 10d3 750E0000 		.4byte	.LASF346
 8351 10d7 0C       		.byte	0xc
 8352 10d8 8D01     		.2byte	0x18d
 8353 10da 30000000 		.4byte	0x30
 8354 10de 64       		.byte	0x64
 8355 10df 0E       		.uleb128 0xe
 8356 10e0 892D0000 		.4byte	.LASF347
 8357 10e4 0C       		.byte	0xc
 8358 10e5 8E01     		.2byte	0x18e
 8359 10e7 B7000000 		.4byte	0xb7
 8360 10eb 68       		.byte	0x68
 8361 10ec 0E       		.uleb128 0xe
 8362 10ed F1070000 		.4byte	.LASF348
 8363 10f1 0C       		.byte	0xc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 353


 8364 10f2 8F01     		.2byte	0x18f
 8365 10f4 30000000 		.4byte	0x30
 8366 10f8 6C       		.byte	0x6c
 8367 10f9 0E       		.uleb128 0xe
 8368 10fa D93F0000 		.4byte	.LASF141
 8369 10fe 0C       		.byte	0xc
 8370 10ff 9001     		.2byte	0x190
 8371 1101 79130000 		.4byte	0x1379
 8372 1105 70       		.byte	0x70
 8373 1106 0F       		.uleb128 0xf
 8374 1107 92150000 		.4byte	.LASF142
 8375 110b 0C       		.byte	0xc
 8376 110c 9101     		.2byte	0x191
 8377 110e 79130000 		.4byte	0x1379
 8378 1112 7001     		.2byte	0x170
 8379 1114 0F       		.uleb128 0xf
 8380 1115 76080000 		.4byte	.LASF349
 8381 1119 0C       		.byte	0xc
 8382 111a 9201     		.2byte	0x192
 8383 111c 30000000 		.4byte	0x30
 8384 1120 7002     		.2byte	0x270
 8385 1122 0F       		.uleb128 0xf
 8386 1123 7D080000 		.4byte	.LASF350
 8387 1127 0C       		.byte	0xc
 8388 1128 9301     		.2byte	0x193
 8389 112a 63130000 		.4byte	0x1363
 8390 112e 7402     		.2byte	0x274
 8391 1130 0F       		.uleb128 0xf
 8392 1131 811D0000 		.4byte	.LASF351
 8393 1135 0C       		.byte	0xc
 8394 1136 9401     		.2byte	0x194
 8395 1138 5B000000 		.4byte	0x5b
 8396 113c 7802     		.2byte	0x278
 8397 113e 0F       		.uleb128 0xf
 8398 113f A01E0000 		.4byte	.LASF352
 8399 1143 0C       		.byte	0xc
 8400 1144 9501     		.2byte	0x195
 8401 1146 5B000000 		.4byte	0x5b
 8402 114a 7C02     		.2byte	0x27c
 8403 114c 0F       		.uleb128 0xf
 8404 114d 28340000 		.4byte	.LASF81
 8405 1151 0C       		.byte	0xc
 8406 1152 9601     		.2byte	0x196
 8407 1154 A9000000 		.4byte	0xa9
 8408 1158 8002     		.2byte	0x280
 8409 115a 0F       		.uleb128 0xf
 8410 115b BB2A0000 		.4byte	.LASF144
 8411 115f 0C       		.byte	0xc
 8412 1160 9701     		.2byte	0x197
 8413 1162 89130000 		.4byte	0x1389
 8414 1166 8402     		.2byte	0x284
 8415 1168 0F       		.uleb128 0xf
 8416 1169 A3370000 		.4byte	.LASF143
 8417 116d 0C       		.byte	0xc
 8418 116e 9801     		.2byte	0x198
 8419 1170 30000000 		.4byte	0x30
 8420 1174 A402     		.2byte	0x2a4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 354


 8421 1176 0F       		.uleb128 0xf
 8422 1177 E1200000 		.4byte	.LASF353
 8423 117b 0C       		.byte	0xc
 8424 117c 9901     		.2byte	0x199
 8425 117e 63130000 		.4byte	0x1363
 8426 1182 A802     		.2byte	0x2a8
 8427 1184 0F       		.uleb128 0xf
 8428 1185 C71D0000 		.4byte	.LASF354
 8429 1189 0C       		.byte	0xc
 8430 118a 9A01     		.2byte	0x19a
 8431 118c 30000000 		.4byte	0x30
 8432 1190 AC02     		.2byte	0x2ac
 8433 1192 0F       		.uleb128 0xf
 8434 1193 850F0000 		.4byte	.LASF355
 8435 1197 0C       		.byte	0xc
 8436 1198 9B01     		.2byte	0x19b
 8437 119a 5B000000 		.4byte	0x5b
 8438 119e B002     		.2byte	0x2b0
 8439 11a0 0F       		.uleb128 0xf
 8440 11a1 CF0B0000 		.4byte	.LASF356
 8441 11a5 0C       		.byte	0xc
 8442 11a6 9C01     		.2byte	0x19c
 8443 11a8 63130000 		.4byte	0x1363
 8444 11ac B402     		.2byte	0x2b4
 8445 11ae 0F       		.uleb128 0xf
 8446 11af 0F150000 		.4byte	.LASF357
 8447 11b3 0C       		.byte	0xc
 8448 11b4 9D01     		.2byte	0x19d
 8449 11b6 30000000 		.4byte	0x30
 8450 11ba B802     		.2byte	0x2b8
 8451 11bc 0F       		.uleb128 0xf
 8452 11bd 313C0000 		.4byte	.LASF358
 8453 11c1 0C       		.byte	0xc
 8454 11c2 9E01     		.2byte	0x19e
 8455 11c4 63130000 		.4byte	0x1363
 8456 11c8 BC02     		.2byte	0x2bc
 8457 11ca 0F       		.uleb128 0xf
 8458 11cb 9E280000 		.4byte	.LASF359
 8459 11cf 0C       		.byte	0xc
 8460 11d0 9F01     		.2byte	0x19f
 8461 11d2 30000000 		.4byte	0x30
 8462 11d6 C002     		.2byte	0x2c0
 8463 11d8 0F       		.uleb128 0xf
 8464 11d9 2D070000 		.4byte	.LASF360
 8465 11dd 0C       		.byte	0xc
 8466 11de A001     		.2byte	0x1a0
 8467 11e0 69130000 		.4byte	0x1369
 8468 11e4 C402     		.2byte	0x2c4
 8469 11e6 0F       		.uleb128 0xf
 8470 11e7 55350000 		.4byte	.LASF361
 8471 11eb 0C       		.byte	0xc
 8472 11ec A101     		.2byte	0x1a1
 8473 11ee 37000000 		.4byte	0x37
 8474 11f2 D802     		.2byte	0x2d8
 8475 11f4 0F       		.uleb128 0xf
 8476 11f5 7E170000 		.4byte	.LASF362
 8477 11f9 0C       		.byte	0xc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 355


 8478 11fa A201     		.2byte	0x1a2
 8479 11fc 69130000 		.4byte	0x1369
 8480 1200 D902     		.2byte	0x2d9
 8481 1202 0F       		.uleb128 0xf
 8482 1203 6B400000 		.4byte	.LASF363
 8483 1207 0C       		.byte	0xc
 8484 1208 A301     		.2byte	0x1a3
 8485 120a 37000000 		.4byte	0x37
 8486 120e ED02     		.2byte	0x2ed
 8487 1210 0F       		.uleb128 0xf
 8488 1211 682C0000 		.4byte	.LASF364
 8489 1215 0C       		.byte	0xc
 8490 1216 A501     		.2byte	0x1a5
 8491 1218 37000000 		.4byte	0x37
 8492 121c EE02     		.2byte	0x2ee
 8493 121e 0F       		.uleb128 0xf
 8494 121f 52080000 		.4byte	.LASF365
 8495 1223 0C       		.byte	0xc
 8496 1224 A701     		.2byte	0x1a7
 8497 1226 37000000 		.4byte	0x37
 8498 122a EF02     		.2byte	0x2ef
 8499 122c 0F       		.uleb128 0xf
 8500 122d B0330000 		.4byte	.LASF366
 8501 1231 0C       		.byte	0xc
 8502 1232 A801     		.2byte	0x1a8
 8503 1234 37000000 		.4byte	0x37
 8504 1238 F002     		.2byte	0x2f0
 8505 123a 0F       		.uleb128 0xf
 8506 123b E5330000 		.4byte	.LASF367
 8507 123f 0C       		.byte	0xc
 8508 1240 A901     		.2byte	0x1a9
 8509 1242 37000000 		.4byte	0x37
 8510 1246 F102     		.2byte	0x2f1
 8511 1248 0F       		.uleb128 0xf
 8512 1249 B41B0000 		.4byte	.LASF368
 8513 124d 0C       		.byte	0xc
 8514 124e AA01     		.2byte	0x1aa
 8515 1250 49000000 		.4byte	0x49
 8516 1254 F202     		.2byte	0x2f2
 8517 1256 0F       		.uleb128 0xf
 8518 1257 FD170000 		.4byte	.LASF369
 8519 125b 0C       		.byte	0xc
 8520 125c AB01     		.2byte	0x1ab
 8521 125e 37000000 		.4byte	0x37
 8522 1262 F402     		.2byte	0x2f4
 8523 1264 0F       		.uleb128 0xf
 8524 1265 CC170000 		.4byte	.LASF370
 8525 1269 0C       		.byte	0xc
 8526 126a AC01     		.2byte	0x1ac
 8527 126c 37000000 		.4byte	0x37
 8528 1270 F502     		.2byte	0x2f5
 8529 1272 0F       		.uleb128 0xf
 8530 1273 53280000 		.4byte	.LASF371
 8531 1277 0C       		.byte	0xc
 8532 1278 C601     		.2byte	0x1c6
 8533 127a 63130000 		.4byte	0x1363
 8534 127e F802     		.2byte	0x2f8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 356


 8535 1280 0F       		.uleb128 0xf
 8536 1281 5B1B0000 		.4byte	.LASF372
 8537 1285 0C       		.byte	0xc
 8538 1286 C701     		.2byte	0x1c7
 8539 1288 30000000 		.4byte	0x30
 8540 128c FC02     		.2byte	0x2fc
 8541 128e 0F       		.uleb128 0xf
 8542 128f 2B1D0000 		.4byte	.LASF373
 8543 1293 0C       		.byte	0xc
 8544 1294 C801     		.2byte	0x1c8
 8545 1296 63130000 		.4byte	0x1363
 8546 129a 0003     		.2byte	0x300
 8547 129c 0F       		.uleb128 0xf
 8548 129d FB160000 		.4byte	.LASF374
 8549 12a1 0C       		.byte	0xc
 8550 12a2 C901     		.2byte	0x1c9
 8551 12a4 30000000 		.4byte	0x30
 8552 12a8 0403     		.2byte	0x304
 8553 12aa 0F       		.uleb128 0xf
 8554 12ab 0B1E0000 		.4byte	.LASF375
 8555 12af 0C       		.byte	0xc
 8556 12b0 CF01     		.2byte	0x1cf
 8557 12b2 63130000 		.4byte	0x1363
 8558 12b6 0803     		.2byte	0x308
 8559 12b8 0F       		.uleb128 0xf
 8560 12b9 83290000 		.4byte	.LASF376
 8561 12bd 0C       		.byte	0xc
 8562 12be D001     		.2byte	0x1d0
 8563 12c0 30000000 		.4byte	0x30
 8564 12c4 0C03     		.2byte	0x30c
 8565 12c6 00       		.byte	0
 8566 12c7 16       		.uleb128 0x16
 8567 12c8 D7010000 		.4byte	.LASF377
 8568 12cc 0C       		.byte	0xc
 8569 12cd 7001     		.2byte	0x170
 8570 12cf D3120000 		.4byte	0x12d3
 8571 12d3 11       		.uleb128 0x11
 8572 12d4 D7010000 		.4byte	.LASF377
 8573 12d8 38       		.byte	0x38
 8574 12d9 0C       		.byte	0xc
 8575 12da 1C02     		.2byte	0x21c
 8576 12dc 63130000 		.4byte	0x1363
 8577 12e0 0E       		.uleb128 0xe
 8578 12e1 851F0000 		.4byte	.LASF333
 8579 12e5 0C       		.byte	0xc
 8580 12e6 1D02     		.2byte	0x21d
 8581 12e8 5B000000 		.4byte	0x5b
 8582 12ec 00       		.byte	0
 8583 12ed 0E       		.uleb128 0xe
 8584 12ee C2160000 		.4byte	.LASF339
 8585 12f2 0C       		.byte	0xc
 8586 12f3 1E02     		.2byte	0x21e
 8587 12f5 5B000000 		.4byte	0x5b
 8588 12f9 04       		.byte	0x4
 8589 12fa 0E       		.uleb128 0xe
 8590 12fb 8D2B0000 		.4byte	.LASF378
 8591 12ff 0C       		.byte	0xc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 357


 8592 1300 1F02     		.2byte	0x21f
 8593 1302 49000000 		.4byte	0x49
 8594 1306 08       		.byte	0x8
 8595 1307 0E       		.uleb128 0xe
 8596 1308 4B220000 		.4byte	.LASF332
 8597 130c 0C       		.byte	0xc
 8598 130d 2002     		.2byte	0x220
 8599 130f 63130000 		.4byte	0x1363
 8600 1313 0C       		.byte	0xc
 8601 1314 0E       		.uleb128 0xe
 8602 1315 0A090000 		.4byte	.LASF379
 8603 1319 0C       		.byte	0xc
 8604 131a 2102     		.2byte	0x221
 8605 131c 30000000 		.4byte	0x30
 8606 1320 10       		.byte	0x10
 8607 1321 0E       		.uleb128 0xe
 8608 1322 CD200000 		.4byte	.LASF159
 8609 1326 0C       		.byte	0xc
 8610 1327 2202     		.2byte	0x222
 8611 1329 B1000000 		.4byte	0xb1
 8612 132d 14       		.byte	0x14
 8613 132e 0E       		.uleb128 0xe
 8614 132f 973A0000 		.4byte	.LASF341
 8615 1333 0C       		.byte	0xc
 8616 1334 2402     		.2byte	0x224
 8617 1336 D50F0000 		.4byte	0xfd5
 8618 133a 18       		.byte	0x18
 8619 133b 0E       		.uleb128 0xe
 8620 133c 1B230000 		.4byte	.LASF342
 8621 1340 0C       		.byte	0xc
 8622 1341 2502     		.2byte	0x225
 8623 1343 D50F0000 		.4byte	0xfd5
 8624 1347 1C       		.byte	0x1c
 8625 1348 0E       		.uleb128 0xe
 8626 1349 C23D0000 		.4byte	.LASF380
 8627 134d 0C       		.byte	0xc
 8628 134e 2702     		.2byte	0x227
 8629 1350 69130000 		.4byte	0x1369
 8630 1354 20       		.byte	0x20
 8631 1355 0E       		.uleb128 0xe
 8632 1356 51020000 		.4byte	.LASF327
 8633 135a 0C       		.byte	0xc
 8634 135b 2D02     		.2byte	0x22d
 8635 135d 99130000 		.4byte	0x1399
 8636 1361 34       		.byte	0x34
 8637 1362 00       		.byte	0
 8638 1363 06       		.uleb128 0x6
 8639 1364 04       		.byte	0x4
 8640 1365 37000000 		.4byte	0x37
 8641 1369 1A       		.uleb128 0x1a
 8642 136a 37000000 		.4byte	0x37
 8643 136e 79130000 		.4byte	0x1379
 8644 1372 1B       		.uleb128 0x1b
 8645 1373 A2000000 		.4byte	0xa2
 8646 1377 13       		.byte	0x13
 8647 1378 00       		.byte	0
 8648 1379 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 358


 8649 137a B7000000 		.4byte	0xb7
 8650 137e 89130000 		.4byte	0x1389
 8651 1382 1B       		.uleb128 0x1b
 8652 1383 A2000000 		.4byte	0xa2
 8653 1387 FF       		.byte	0xff
 8654 1388 00       		.byte	0
 8655 1389 1A       		.uleb128 0x1a
 8656 138a 37000000 		.4byte	0x37
 8657 138e 99130000 		.4byte	0x1399
 8658 1392 1B       		.uleb128 0x1b
 8659 1393 A2000000 		.4byte	0xa2
 8660 1397 1F       		.byte	0x1f
 8661 1398 00       		.byte	0
 8662 1399 06       		.uleb128 0x6
 8663 139a 04       		.byte	0x4
 8664 139b C7120000 		.4byte	0x12c7
 8665 139f 16       		.uleb128 0x16
 8666 13a0 592F0000 		.4byte	.LASF381
 8667 13a4 0C       		.byte	0xc
 8668 13a5 A202     		.2byte	0x2a2
 8669 13a7 AB130000 		.4byte	0x13ab
 8670 13ab 1C       		.uleb128 0x1c
 8671 13ac 592F0000 		.4byte	.LASF381
 8672 13b0 16       		.uleb128 0x16
 8673 13b1 F31F0000 		.4byte	.LASF383
 8674 13b5 0C       		.byte	0xc
 8675 13b6 0D03     		.2byte	0x30d
 8676 13b8 BC130000 		.4byte	0x13bc
 8677 13bc 1C       		.uleb128 0x1c
 8678 13bd F31F0000 		.4byte	.LASF383
 8679 13c1 07       		.uleb128 0x7
 8680 13c2 BE000000 		.4byte	0xbe
 8681 13c6 1E       		.uleb128 0x1e
 8682 13c7 E21D0000 		.4byte	.LASF384
 8683 13cb 04       		.byte	0x4
 8684 13cc 07       		.byte	0x7
 8685 13cd 5203     		.2byte	0x352
 8686 13cf 7D170000 		.4byte	0x177d
 8687 13d3 0A       		.uleb128 0xa
 8688 13d4 F42E0000 		.4byte	.LASF385
 8689 13d8 C001     		.sleb128 192
 8690 13da 0A       		.uleb128 0xa
 8691 13db F5030000 		.4byte	.LASF386
 8692 13df D001     		.sleb128 208
 8693 13e1 0A       		.uleb128 0xa
 8694 13e2 51070000 		.4byte	.LASF387
 8695 13e6 CC01     		.sleb128 204
 8696 13e8 0A       		.uleb128 0xa
 8697 13e9 443C0000 		.4byte	.LASF388
 8698 13ed 01       		.sleb128 1
 8699 13ee 0A       		.uleb128 0xa
 8700 13ef 80280000 		.4byte	.LASF389
 8701 13f3 02       		.sleb128 2
 8702 13f4 0A       		.uleb128 0xa
 8703 13f5 7D090000 		.4byte	.LASF390
 8704 13f9 FE01     		.sleb128 254
 8705 13fb 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 359


 8706 13fc 0D1A0000 		.4byte	.LASF391
 8707 1400 FF01     		.sleb128 255
 8708 1402 0A       		.uleb128 0xa
 8709 1403 F81E0000 		.4byte	.LASF392
 8710 1407 FD01     		.sleb128 253
 8711 1409 0A       		.uleb128 0xa
 8712 140a 732A0000 		.4byte	.LASF393
 8713 140e 03       		.sleb128 3
 8714 140f 0A       		.uleb128 0xa
 8715 1410 3C3B0000 		.4byte	.LASF394
 8716 1414 00       		.sleb128 0
 8717 1415 0A       		.uleb128 0xa
 8718 1416 A0060000 		.4byte	.LASF395
 8719 141a 01       		.sleb128 1
 8720 141b 0A       		.uleb128 0xa
 8721 141c 1D2F0000 		.4byte	.LASF396
 8722 1420 02       		.sleb128 2
 8723 1421 0A       		.uleb128 0xa
 8724 1422 573E0000 		.4byte	.LASF397
 8725 1426 03       		.sleb128 3
 8726 1427 0A       		.uleb128 0xa
 8727 1428 76360000 		.4byte	.LASF398
 8728 142c 01       		.sleb128 1
 8729 142d 0A       		.uleb128 0xa
 8730 142e E4070000 		.4byte	.LASF399
 8731 1432 FF01     		.sleb128 255
 8732 1434 0A       		.uleb128 0xa
 8733 1435 D3380000 		.4byte	.LASF400
 8734 1439 00       		.sleb128 0
 8735 143a 0A       		.uleb128 0xa
 8736 143b DF0F0000 		.4byte	.LASF401
 8737 143f DD01     		.sleb128 221
 8738 1441 0A       		.uleb128 0xa
 8739 1442 AD0B0000 		.4byte	.LASF402
 8740 1446 0D       		.sleb128 13
 8741 1447 0A       		.uleb128 0xa
 8742 1448 14060000 		.4byte	.LASF403
 8743 144c 30       		.sleb128 48
 8744 144d 0A       		.uleb128 0xa
 8745 144e 783D0000 		.4byte	.LASF404
 8746 1452 8004     		.sleb128 512
 8747 1454 0A       		.uleb128 0xa
 8748 1455 281E0000 		.4byte	.LASF405
 8749 1459 04       		.sleb128 4
 8750 145a 0A       		.uleb128 0xa
 8751 145b 3C0B0000 		.4byte	.LASF406
 8752 145f 24       		.sleb128 36
 8753 1460 0A       		.uleb128 0xa
 8754 1461 B7410000 		.4byte	.LASF407
 8755 1465 808001   		.sleb128 16384
 8756 1468 0A       		.uleb128 0xa
 8757 1469 923C0000 		.4byte	.LASF408
 8758 146d C600     		.sleb128 70
 8759 146f 0A       		.uleb128 0xa
 8760 1470 4A000000 		.4byte	.LASF409
 8761 1474 8008     		.sleb128 1024
 8762 1476 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 360


 8763 1477 541F0000 		.4byte	.LASF410
 8764 147b DC0B     		.sleb128 1500
 8765 147d 0A       		.uleb128 0xa
 8766 147e 25290000 		.4byte	.LASF411
 8767 1482 9C3F     		.sleb128 8092
 8768 1484 0A       		.uleb128 0xa
 8769 1485 CF220000 		.4byte	.LASF412
 8770 1489 8C08     		.sleb128 1036
 8771 148b 0A       		.uleb128 0xa
 8772 148c 00000000 		.4byte	.LASF413
 8773 1490 08       		.sleb128 8
 8774 1491 0A       		.uleb128 0xa
 8775 1492 E2320000 		.4byte	.LASF414
 8776 1496 30       		.sleb128 48
 8777 1497 0A       		.uleb128 0xa
 8778 1498 401C0000 		.4byte	.LASF415
 8779 149c 28       		.sleb128 40
 8780 149d 0A       		.uleb128 0xa
 8781 149e 8B110000 		.4byte	.LASF416
 8782 14a2 8002     		.sleb128 256
 8783 14a4 0A       		.uleb128 0xa
 8784 14a5 19360000 		.4byte	.LASF417
 8785 14a9 C000     		.sleb128 64
 8786 14ab 0A       		.uleb128 0xa
 8787 14ac 98040000 		.4byte	.LASF418
 8788 14b0 0D       		.sleb128 13
 8789 14b1 0A       		.uleb128 0xa
 8790 14b2 6F170000 		.4byte	.LASF419
 8791 14b6 37       		.sleb128 55
 8792 14b7 0A       		.uleb128 0xa
 8793 14b8 CF2F0000 		.4byte	.LASF420
 8794 14bc C000     		.sleb128 64
 8795 14be 0A       		.uleb128 0xa
 8796 14bf 230E0000 		.4byte	.LASF421
 8797 14c3 D000     		.sleb128 80
 8798 14c5 0A       		.uleb128 0xa
 8799 14c6 3F330000 		.4byte	.LASF422
 8800 14ca 02       		.sleb128 2
 8801 14cb 0A       		.uleb128 0xa
 8802 14cc 4E300000 		.4byte	.LASF423
 8803 14d0 02       		.sleb128 2
 8804 14d1 0A       		.uleb128 0xa
 8805 14d2 12280000 		.4byte	.LASF424
 8806 14d6 08       		.sleb128 8
 8807 14d7 0A       		.uleb128 0xa
 8808 14d8 AA040000 		.4byte	.LASF425
 8809 14dc 03       		.sleb128 3
 8810 14dd 0A       		.uleb128 0xa
 8811 14de D2020000 		.4byte	.LASF426
 8812 14e2 02       		.sleb128 2
 8813 14e3 0A       		.uleb128 0xa
 8814 14e4 02110000 		.4byte	.LASF427
 8815 14e8 02       		.sleb128 2
 8816 14e9 0A       		.uleb128 0xa
 8817 14ea B6070000 		.4byte	.LASF428
 8818 14ee 02       		.sleb128 2
 8819 14ef 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 361


 8820 14f0 072D0000 		.4byte	.LASF429
 8821 14f4 8104     		.sleb128 513
 8822 14f6 0A       		.uleb128 0xa
 8823 14f7 A7010000 		.4byte	.LASF430
 8824 14fb 04       		.sleb128 4
 8825 14fc 0A       		.uleb128 0xa
 8826 14fd E4100000 		.4byte	.LASF431
 8827 1501 20       		.sleb128 32
 8828 1502 0A       		.uleb128 0xa
 8829 1503 40140000 		.4byte	.LASF432
 8830 1507 C000     		.sleb128 64
 8831 1509 0A       		.uleb128 0xa
 8832 150a 4E350000 		.4byte	.LASF433
 8833 150e 20       		.sleb128 32
 8834 150f 0A       		.uleb128 0xa
 8835 1510 5A390000 		.4byte	.LASF434
 8836 1514 0E       		.sleb128 14
 8837 1515 0A       		.uleb128 0xa
 8838 1516 CE140000 		.4byte	.LASF435
 8839 151a 20       		.sleb128 32
 8840 151b 0A       		.uleb128 0xa
 8841 151c D0070000 		.4byte	.LASF436
 8842 1520 14       		.sleb128 20
 8843 1521 0A       		.uleb128 0xa
 8844 1522 7D1B0000 		.4byte	.LASF437
 8845 1526 02       		.sleb128 2
 8846 1527 0A       		.uleb128 0xa
 8847 1528 99100000 		.4byte	.LASF438
 8848 152c 01       		.sleb128 1
 8849 152d 0A       		.uleb128 0xa
 8850 152e 9A320000 		.4byte	.LASF439
 8851 1532 01       		.sleb128 1
 8852 1533 0A       		.uleb128 0xa
 8853 1534 831C0000 		.4byte	.LASF440
 8854 1538 02       		.sleb128 2
 8855 1539 0A       		.uleb128 0xa
 8856 153a 0D340000 		.4byte	.LASF441
 8857 153e 03       		.sleb128 3
 8858 153f 0A       		.uleb128 0xa
 8859 1540 5E090000 		.4byte	.LASF442
 8860 1544 04       		.sleb128 4
 8861 1545 0A       		.uleb128 0xa
 8862 1546 290B0000 		.4byte	.LASF443
 8863 154a 01       		.sleb128 1
 8864 154b 0A       		.uleb128 0xa
 8865 154c CE3E0000 		.4byte	.LASF444
 8866 1550 02       		.sleb128 2
 8867 1551 0A       		.uleb128 0xa
 8868 1552 89300000 		.4byte	.LASF445
 8869 1556 14       		.sleb128 20
 8870 1557 0A       		.uleb128 0xa
 8871 1558 F0410000 		.4byte	.LASF446
 8872 155c 04       		.sleb128 4
 8873 155d 0A       		.uleb128 0xa
 8874 155e B82C0000 		.4byte	.LASF447
 8875 1562 05       		.sleb128 5
 8876 1563 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 362


 8877 1564 BE330000 		.4byte	.LASF448
 8878 1568 03       		.sleb128 3
 8879 1569 0A       		.uleb128 0xa
 8880 156a 74020000 		.4byte	.LASF449
 8881 156e 02       		.sleb128 2
 8882 156f 0A       		.uleb128 0xa
 8883 1570 1A180000 		.4byte	.LASF450
 8884 1574 02       		.sleb128 2
 8885 1575 0A       		.uleb128 0xa
 8886 1576 142B0000 		.4byte	.LASF451
 8887 157a 0A       		.sleb128 10
 8888 157b 0A       		.uleb128 0xa
 8889 157c D9290000 		.4byte	.LASF452
 8890 1580 02       		.sleb128 2
 8891 1581 0A       		.uleb128 0xa
 8892 1582 F3190000 		.4byte	.LASF453
 8893 1586 08       		.sleb128 8
 8894 1587 0A       		.uleb128 0xa
 8895 1588 C30C0000 		.4byte	.LASF454
 8896 158c 06       		.sleb128 6
 8897 158d 0A       		.uleb128 0xa
 8898 158e F6390000 		.4byte	.LASF455
 8899 1592 02       		.sleb128 2
 8900 1593 0A       		.uleb128 0xa
 8901 1594 E5160000 		.4byte	.LASF456
 8902 1598 20       		.sleb128 32
 8903 1599 0A       		.uleb128 0xa
 8904 159a A8360000 		.4byte	.LASF457
 8905 159e 0C       		.sleb128 12
 8906 159f 0A       		.uleb128 0xa
 8907 15a0 FE050000 		.4byte	.LASF458
 8908 15a4 0D       		.sleb128 13
 8909 15a5 0A       		.uleb128 0xa
 8910 15a6 872F0000 		.4byte	.LASF459
 8911 15aa 08       		.sleb128 8
 8912 15ab 0A       		.uleb128 0xa
 8913 15ac 4D380000 		.4byte	.LASF460
 8914 15b0 08       		.sleb128 8
 8915 15b1 0A       		.uleb128 0xa
 8916 15b2 38350000 		.4byte	.LASF461
 8917 15b6 02       		.sleb128 2
 8918 15b7 0A       		.uleb128 0xa
 8919 15b8 1F000000 		.4byte	.LASF462
 8920 15bc 03       		.sleb128 3
 8921 15bd 0A       		.uleb128 0xa
 8922 15be 072B0000 		.4byte	.LASF463
 8923 15c2 05       		.sleb128 5
 8924 15c3 0A       		.uleb128 0xa
 8925 15c4 06240000 		.4byte	.LASF464
 8926 15c8 0F       		.sleb128 15
 8927 15c9 0A       		.uleb128 0xa
 8928 15ca E2380000 		.4byte	.LASF465
 8929 15ce 0C       		.sleb128 12
 8930 15cf 0A       		.uleb128 0xa
 8931 15d0 1D410000 		.4byte	.LASF466
 8932 15d4 0D       		.sleb128 13
 8933 15d5 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 363


 8934 15d6 C32D0000 		.4byte	.LASF467
 8935 15da 0D       		.sleb128 13
 8936 15db 0A       		.uleb128 0xa
 8937 15dc 82020000 		.4byte	.LASF468
 8938 15e0 8002     		.sleb128 256
 8939 15e2 0A       		.uleb128 0xa
 8940 15e3 F2140000 		.4byte	.LASF469
 8941 15e7 8001     		.sleb128 128
 8942 15e9 0A       		.uleb128 0xa
 8943 15ea 47280000 		.4byte	.LASF470
 8944 15ee E001     		.sleb128 224
 8945 15f0 0A       		.uleb128 0xa
 8946 15f1 B3210000 		.4byte	.LASF471
 8947 15f5 8002     		.sleb128 256
 8948 15f7 0A       		.uleb128 0xa
 8949 15f8 143F0000 		.4byte	.LASF472
 8950 15fc 8002     		.sleb128 256
 8951 15fe 0A       		.uleb128 0xa
 8952 15ff C2210000 		.4byte	.LASF473
 8953 1603 10       		.sleb128 16
 8954 1604 0A       		.uleb128 0xa
 8955 1605 E6250000 		.4byte	.LASF474
 8956 1609 08       		.sleb128 8
 8957 160a 0A       		.uleb128 0xa
 8958 160b 100B0000 		.4byte	.LASF475
 8959 160f 18       		.sleb128 24
 8960 1610 0A       		.uleb128 0xa
 8961 1611 FD2E0000 		.4byte	.LASF476
 8962 1615 08       		.sleb128 8
 8963 1616 0A       		.uleb128 0xa
 8964 1617 A7140000 		.4byte	.LASF477
 8965 161b 20       		.sleb128 32
 8966 161c 0A       		.uleb128 0xa
 8967 161d F6020000 		.4byte	.LASF478
 8968 1621 18       		.sleb128 24
 8969 1622 0A       		.uleb128 0xa
 8970 1623 50270000 		.4byte	.LASF479
 8971 1627 10       		.sleb128 16
 8972 1628 0A       		.uleb128 0xa
 8973 1629 12090000 		.4byte	.LASF480
 8974 162d 10       		.sleb128 16
 8975 162e 0A       		.uleb128 0xa
 8976 162f 66080000 		.4byte	.LASF481
 8977 1633 04       		.sleb128 4
 8978 1634 0A       		.uleb128 0xa
 8979 1635 3C2C0000 		.4byte	.LASF482
 8980 1639 08       		.sleb128 8
 8981 163a 0A       		.uleb128 0xa
 8982 163b 1A1D0000 		.4byte	.LASF483
 8983 163f 09       		.sleb128 9
 8984 1640 0A       		.uleb128 0xa
 8985 1641 89410000 		.4byte	.LASF484
 8986 1645 0A       		.sleb128 10
 8987 1646 0A       		.uleb128 0xa
 8988 1647 00350000 		.4byte	.LASF485
 8989 164b 0B       		.sleb128 11
 8990 164c 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 364


 8991 164d 6A1F0000 		.4byte	.LASF486
 8992 1651 0D       		.sleb128 13
 8993 1652 0A       		.uleb128 0xa
 8994 1653 B7310000 		.4byte	.LASF487
 8995 1657 04       		.sleb128 4
 8996 1658 0A       		.uleb128 0xa
 8997 1659 B41C0000 		.4byte	.LASF488
 8998 165d 08       		.sleb128 8
 8999 165e 0A       		.uleb128 0xa
 9000 165f 25020000 		.4byte	.LASF489
 9001 1663 0C       		.sleb128 12
 9002 1664 0A       		.uleb128 0xa
 9003 1665 D61E0000 		.4byte	.LASF490
 9004 1669 0C       		.sleb128 12
 9005 166a 0A       		.uleb128 0xa
 9006 166b 433D0000 		.4byte	.LASF491
 9007 166f 0C       		.sleb128 12
 9008 1670 0A       		.uleb128 0xa
 9009 1671 7E3C0000 		.4byte	.LASF492
 9010 1675 08       		.sleb128 8
 9011 1676 0A       		.uleb128 0xa
 9012 1677 26030000 		.4byte	.LASF493
 9013 167b 10       		.sleb128 16
 9014 167c 0A       		.uleb128 0xa
 9015 167d F9210000 		.4byte	.LASF494
 9016 1681 10       		.sleb128 16
 9017 1682 0A       		.uleb128 0xa
 9018 1683 2F310000 		.4byte	.LASF495
 9019 1687 08       		.sleb128 8
 9020 1688 0A       		.uleb128 0xa
 9021 1689 3E2D0000 		.4byte	.LASF496
 9022 168d 10       		.sleb128 16
 9023 168e 0A       		.uleb128 0xa
 9024 168f 7D010000 		.4byte	.LASF497
 9025 1693 18       		.sleb128 24
 9026 1694 0A       		.uleb128 0xa
 9027 1695 0B3A0000 		.4byte	.LASF498
 9028 1699 20       		.sleb128 32
 9029 169a 0A       		.uleb128 0xa
 9030 169b A4080000 		.4byte	.LASF499
 9031 169f 10       		.sleb128 16
 9032 16a0 0A       		.uleb128 0xa
 9033 16a1 B92F0000 		.4byte	.LASF500
 9034 16a5 20       		.sleb128 32
 9035 16a6 0A       		.uleb128 0xa
 9036 16a7 42250000 		.4byte	.LASF501
 9037 16ab 10       		.sleb128 16
 9038 16ac 0A       		.uleb128 0xa
 9039 16ad DF1C0000 		.4byte	.LASF502
 9040 16b1 0C       		.sleb128 12
 9041 16b2 0A       		.uleb128 0xa
 9042 16b3 40020000 		.4byte	.LASF503
 9043 16b7 10       		.sleb128 16
 9044 16b8 0A       		.uleb128 0xa
 9045 16b9 65160000 		.4byte	.LASF504
 9046 16bd 10       		.sleb128 16
 9047 16be 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 365


 9048 16bf B33D0000 		.4byte	.LASF505
 9049 16c3 10       		.sleb128 16
 9050 16c4 0A       		.uleb128 0xa
 9051 16c5 383A0000 		.4byte	.LASF506
 9052 16c9 10       		.sleb128 16
 9053 16ca 0A       		.uleb128 0xa
 9054 16cb 7F0D0000 		.4byte	.LASF507
 9055 16cf 08       		.sleb128 8
 9056 16d0 0A       		.uleb128 0xa
 9057 16d1 901B0000 		.4byte	.LASF508
 9058 16d5 08       		.sleb128 8
 9059 16d6 0A       		.uleb128 0xa
 9060 16d7 1E0B0000 		.4byte	.LASF509
 9061 16db 20       		.sleb128 32
 9062 16dc 0A       		.uleb128 0xa
 9063 16dd 13020000 		.4byte	.LASF510
 9064 16e1 8002     		.sleb128 256
 9065 16e3 0A       		.uleb128 0xa
 9066 16e4 0F390000 		.4byte	.LASF511
 9067 16e8 8001     		.sleb128 128
 9068 16ea 0A       		.uleb128 0xa
 9069 16eb 91190000 		.4byte	.LASF512
 9070 16ef 8008     		.sleb128 1024
 9071 16f1 0A       		.uleb128 0xa
 9072 16f2 D40E0000 		.4byte	.LASF513
 9073 16f6 23       		.sleb128 35
 9074 16f7 0A       		.uleb128 0xa
 9075 16f8 F8310000 		.4byte	.LASF514
 9076 16fc 30       		.sleb128 48
 9077 16fd 0A       		.uleb128 0xa
 9078 16fe FF3F0000 		.4byte	.LASF515
 9079 1702 01       		.sleb128 1
 9080 1703 0A       		.uleb128 0xa
 9081 1704 78300000 		.4byte	.LASF516
 9082 1708 C000     		.sleb128 64
 9083 170a 0A       		.uleb128 0xa
 9084 170b DC2E0000 		.4byte	.LASF517
 9085 170f 02       		.sleb128 2
 9086 1710 0A       		.uleb128 0xa
 9087 1711 B0230000 		.4byte	.LASF518
 9088 1715 8001     		.sleb128 128
 9089 1717 0A       		.uleb128 0xa
 9090 1718 5F170000 		.4byte	.LASF519
 9091 171c C000     		.sleb128 64
 9092 171e 0A       		.uleb128 0xa
 9093 171f 5D070000 		.4byte	.LASF520
 9094 1723 80808002 		.sleb128 4194304
 9095 1727 0A       		.uleb128 0xa
 9096 1728 4D120000 		.4byte	.LASF521
 9097 172c 8010     		.sleb128 2048
 9098 172e 0A       		.uleb128 0xa
 9099 172f C0040000 		.4byte	.LASF522
 9100 1733 8002     		.sleb128 256
 9101 1735 0A       		.uleb128 0xa
 9102 1736 9B1A0000 		.4byte	.LASF523
 9103 173a 8002     		.sleb128 256
 9104 173c 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 366


 9105 173d 341A0000 		.4byte	.LASF524
 9106 1741 8008     		.sleb128 1024
 9107 1743 0A       		.uleb128 0xa
 9108 1744 A01C0000 		.4byte	.LASF525
 9109 1748 8308     		.sleb128 1027
 9110 174a 0A       		.uleb128 0xa
 9111 174b DE2D0000 		.4byte	.LASF526
 9112 174f 8308     		.sleb128 1027
 9113 1751 0A       		.uleb128 0xa
 9114 1752 B2030000 		.4byte	.LASF527
 9115 1756 8002     		.sleb128 256
 9116 1758 0A       		.uleb128 0xa
 9117 1759 7D2C0000 		.4byte	.LASF528
 9118 175d 00       		.sleb128 0
 9119 175e 0A       		.uleb128 0xa
 9120 175f 5F2D0000 		.4byte	.LASF529
 9121 1763 01       		.sleb128 1
 9122 1764 0A       		.uleb128 0xa
 9123 1765 010E0000 		.4byte	.LASF530
 9124 1769 02       		.sleb128 2
 9125 176a 0A       		.uleb128 0xa
 9126 176b 5C200000 		.4byte	.LASF531
 9127 176f 7E       		.sleb128 -2
 9128 1770 0A       		.uleb128 0xa
 9129 1771 E82C0000 		.4byte	.LASF532
 9130 1775 00       		.sleb128 0
 9131 1776 0A       		.uleb128 0xa
 9132 1777 AB230000 		.4byte	.LASF533
 9133 177b 01       		.sleb128 1
 9134 177c 00       		.byte	0
 9135 177d 1E       		.uleb128 0x1e
 9136 177e 68120000 		.4byte	.LASF534
 9137 1782 01       		.byte	0x1
 9138 1783 07       		.byte	0x7
 9139 1784 6204     		.2byte	0x462
 9140 1786 CD170000 		.4byte	0x17cd
 9141 178a 0A       		.uleb128 0xa
 9142 178b 422B0000 		.4byte	.LASF535
 9143 178f 00       		.sleb128 0
 9144 1790 0A       		.uleb128 0xa
 9145 1791 2D340000 		.4byte	.LASF536
 9146 1795 01       		.sleb128 1
 9147 1796 0A       		.uleb128 0xa
 9148 1797 91000000 		.4byte	.LASF537
 9149 179b 02       		.sleb128 2
 9150 179c 0A       		.uleb128 0xa
 9151 179d 82240000 		.4byte	.LASF538
 9152 17a1 03       		.sleb128 3
 9153 17a2 0A       		.uleb128 0xa
 9154 17a3 16270000 		.4byte	.LASF539
 9155 17a7 04       		.sleb128 4
 9156 17a8 0A       		.uleb128 0xa
 9157 17a9 50410000 		.4byte	.LASF540
 9158 17ad 05       		.sleb128 5
 9159 17ae 0A       		.uleb128 0xa
 9160 17af 933E0000 		.4byte	.LASF541
 9161 17b3 06       		.sleb128 6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 367


 9162 17b4 0A       		.uleb128 0xa
 9163 17b5 BB3B0000 		.4byte	.LASF542
 9164 17b9 07       		.sleb128 7
 9165 17ba 0A       		.uleb128 0xa
 9166 17bb C22A0000 		.4byte	.LASF543
 9167 17bf 08       		.sleb128 8
 9168 17c0 0A       		.uleb128 0xa
 9169 17c1 A3240000 		.4byte	.LASF544
 9170 17c5 09       		.sleb128 9
 9171 17c6 0A       		.uleb128 0xa
 9172 17c7 C0190000 		.4byte	.LASF545
 9173 17cb 0A       		.sleb128 10
 9174 17cc 00       		.byte	0
 9175 17cd 11       		.uleb128 0x11
 9176 17ce 042C0000 		.4byte	.LASF546
 9177 17d2 02       		.byte	0x2
 9178 17d3 07       		.byte	0x7
 9179 17d4 7B04     		.2byte	0x47b
 9180 17d6 F5170000 		.4byte	0x17f5
 9181 17da 0E       		.uleb128 0xe
 9182 17db 833A0000 		.4byte	.LASF547
 9183 17df 07       		.byte	0x7
 9184 17e0 7C04     		.2byte	0x47c
 9185 17e2 37000000 		.4byte	0x37
 9186 17e6 00       		.byte	0
 9187 17e7 0E       		.uleb128 0xe
 9188 17e8 3C080000 		.4byte	.LASF548
 9189 17ec 07       		.byte	0x7
 9190 17ed 7D04     		.2byte	0x47d
 9191 17ef 37000000 		.4byte	0x37
 9192 17f3 01       		.byte	0x1
 9193 17f4 00       		.byte	0
 9194 17f5 16       		.uleb128 0x16
 9195 17f6 042C0000 		.4byte	.LASF546
 9196 17fa 07       		.byte	0x7
 9197 17fb 7E04     		.2byte	0x47e
 9198 17fd CD170000 		.4byte	0x17cd
 9199 1801 11       		.uleb128 0x11
 9200 1802 652E0000 		.4byte	.LASF289
 9201 1806 08       		.byte	0x8
 9202 1807 07       		.byte	0x7
 9203 1808 BA04     		.2byte	0x4ba
 9204 180a 29180000 		.4byte	0x1829
 9205 180e 0E       		.uleb128 0xe
 9206 180f 652E0000 		.4byte	.LASF289
 9207 1813 07       		.byte	0x7
 9208 1814 BB04     		.2byte	0x4bb
 9209 1816 63130000 		.4byte	0x1363
 9210 181a 00       		.byte	0
 9211 181b 0E       		.uleb128 0xe
 9212 181c 63040000 		.4byte	.LASF549
 9213 1820 07       		.byte	0x7
 9214 1821 BC04     		.2byte	0x4bc
 9215 1823 5B000000 		.4byte	0x5b
 9216 1827 04       		.byte	0x4
 9217 1828 00       		.byte	0
 9218 1829 16       		.uleb128 0x16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 368


 9219 182a 652E0000 		.4byte	.LASF289
 9220 182e 07       		.byte	0x7
 9221 182f BD04     		.2byte	0x4bd
 9222 1831 01180000 		.4byte	0x1801
 9223 1835 11       		.uleb128 0x11
 9224 1836 E2300000 		.4byte	.LASF550
 9225 183a 14       		.byte	0x14
 9226 183b 07       		.byte	0x7
 9227 183c C104     		.2byte	0x4c1
 9228 183e 84180000 		.4byte	0x1884
 9229 1842 0E       		.uleb128 0xe
 9230 1843 652E0000 		.4byte	.LASF289
 9231 1847 07       		.byte	0x7
 9232 1848 C204     		.2byte	0x4c2
 9233 184a 63130000 		.4byte	0x1363
 9234 184e 00       		.byte	0
 9235 184f 0E       		.uleb128 0xe
 9236 1850 28340000 		.4byte	.LASF81
 9237 1854 07       		.byte	0x7
 9238 1855 C304     		.2byte	0x4c3
 9239 1857 A9000000 		.4byte	0xa9
 9240 185b 04       		.byte	0x4
 9241 185c 0E       		.uleb128 0xe
 9242 185d 63040000 		.4byte	.LASF549
 9243 1861 07       		.byte	0x7
 9244 1862 C404     		.2byte	0x4c4
 9245 1864 5B000000 		.4byte	0x5b
 9246 1868 08       		.byte	0x8
 9247 1869 0E       		.uleb128 0xe
 9248 186a 9D0C0000 		.4byte	.LASF330
 9249 186e 07       		.byte	0x7
 9250 186f C504     		.2byte	0x4c5
 9251 1871 30000000 		.4byte	0x30
 9252 1875 0C       		.byte	0xc
 9253 1876 0E       		.uleb128 0xe
 9254 1877 8F180000 		.4byte	.LASF551
 9255 187b 07       		.byte	0x7
 9256 187c C604     		.2byte	0x4c6
 9257 187e 30000000 		.4byte	0x30
 9258 1882 10       		.byte	0x10
 9259 1883 00       		.byte	0
 9260 1884 16       		.uleb128 0x16
 9261 1885 E2300000 		.4byte	.LASF550
 9262 1889 07       		.byte	0x7
 9263 188a C704     		.2byte	0x4c7
 9264 188c 35180000 		.4byte	0x1835
 9265 1890 1F       		.uleb128 0x1f
 9266 1891 1C       		.byte	0x1c
 9267 1892 07       		.byte	0x7
 9268 1893 0D05     		.2byte	0x50d
 9269 1895 F5180000 		.4byte	0x18f5
 9270 1899 0E       		.uleb128 0xe
 9271 189a FC290000 		.4byte	.LASF552
 9272 189e 07       		.byte	0x7
 9273 189f 0E05     		.2byte	0x50e
 9274 18a1 F5180000 		.4byte	0x18f5
 9275 18a5 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 369


 9276 18a6 0E       		.uleb128 0xe
 9277 18a7 652E0000 		.4byte	.LASF289
 9278 18ab 07       		.byte	0x7
 9279 18ac 0F05     		.2byte	0x50f
 9280 18ae 63130000 		.4byte	0x1363
 9281 18b2 08       		.byte	0x8
 9282 18b3 0E       		.uleb128 0xe
 9283 18b4 63040000 		.4byte	.LASF549
 9284 18b8 07       		.byte	0x7
 9285 18b9 1005     		.2byte	0x510
 9286 18bb 5B000000 		.4byte	0x5b
 9287 18bf 0C       		.byte	0xc
 9288 18c0 0D       		.uleb128 0xd
 9289 18c1 69647800 		.ascii	"idx\000"
 9290 18c5 07       		.byte	0x7
 9291 18c6 1105     		.2byte	0x511
 9292 18c8 5B000000 		.4byte	0x5b
 9293 18cc 10       		.byte	0x10
 9294 18cd 0E       		.uleb128 0xe
 9295 18ce 0A3D0000 		.4byte	.LASF553
 9296 18d2 07       		.byte	0x7
 9297 18d3 1205     		.2byte	0x512
 9298 18d5 5B000000 		.4byte	0x5b
 9299 18d9 14       		.byte	0x14
 9300 18da 0E       		.uleb128 0xe
 9301 18db 1F060000 		.4byte	.LASF554
 9302 18df 07       		.byte	0x7
 9303 18e0 1305     		.2byte	0x513
 9304 18e2 37000000 		.4byte	0x37
 9305 18e6 18       		.byte	0x18
 9306 18e7 0E       		.uleb128 0xe
 9307 18e8 70370000 		.4byte	.LASF555
 9308 18ec 07       		.byte	0x7
 9309 18ed 1405     		.2byte	0x514
 9310 18ef 37000000 		.4byte	0x37
 9311 18f3 19       		.byte	0x19
 9312 18f4 00       		.byte	0
 9313 18f5 1A       		.uleb128 0x1a
 9314 18f6 37000000 		.4byte	0x37
 9315 18fa 05190000 		.4byte	0x1905
 9316 18fe 1B       		.uleb128 0x1b
 9317 18ff A2000000 		.4byte	0xa2
 9318 1903 04       		.byte	0x4
 9319 1904 00       		.byte	0
 9320 1905 16       		.uleb128 0x16
 9321 1906 EC100000 		.4byte	.LASF556
 9322 190a 07       		.byte	0x7
 9323 190b 1505     		.2byte	0x515
 9324 190d 90180000 		.4byte	0x1890
 9325 1911 0C       		.uleb128 0xc
 9326 1912 FB260000 		.4byte	.LASF557
 9327 1916 5401     		.2byte	0x154
 9328 1918 07       		.byte	0x7
 9329 1919 1805     		.2byte	0x518
 9330 191b 7F190000 		.4byte	0x197f
 9331 191f 0E       		.uleb128 0xe
 9332 1920 E0050000 		.4byte	.LASF558
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 370


 9333 1924 07       		.byte	0x7
 9334 1925 1905     		.2byte	0x519
 9335 1927 49000000 		.4byte	0x49
 9336 192b 00       		.byte	0
 9337 192c 0E       		.uleb128 0xe
 9338 192d A7000000 		.4byte	.LASF559
 9339 1931 07       		.byte	0x7
 9340 1932 1A05     		.2byte	0x51a
 9341 1934 49000000 		.4byte	0x49
 9342 1938 02       		.byte	0x2
 9343 1939 0E       		.uleb128 0xe
 9344 193a 211E0000 		.4byte	.LASF74
 9345 193e 07       		.byte	0x7
 9346 193f 1B05     		.2byte	0x51b
 9347 1941 7F190000 		.4byte	0x197f
 9348 1945 04       		.byte	0x4
 9349 1946 0F       		.uleb128 0xf
 9350 1947 192C0000 		.4byte	.LASF560
 9351 194b 07       		.byte	0x7
 9352 194c 1C05     		.2byte	0x51c
 9353 194e 89130000 		.4byte	0x1389
 9354 1952 3001     		.2byte	0x130
 9355 1954 0F       		.uleb128 0xf
 9356 1955 E91F0000 		.4byte	.LASF561
 9357 1959 07       		.byte	0x7
 9358 195a 1D05     		.2byte	0x51d
 9359 195c 37000000 		.4byte	0x37
 9360 1960 5001     		.2byte	0x150
 9361 1962 0F       		.uleb128 0xf
 9362 1963 81390000 		.4byte	.LASF562
 9363 1967 07       		.byte	0x7
 9364 1968 1E05     		.2byte	0x51e
 9365 196a 37000000 		.4byte	0x37
 9366 196e 5101     		.2byte	0x151
 9367 1970 0F       		.uleb128 0xf
 9368 1971 E7120000 		.4byte	.LASF563
 9369 1975 07       		.byte	0x7
 9370 1976 1F05     		.2byte	0x51f
 9371 1978 37000000 		.4byte	0x37
 9372 197c 5201     		.2byte	0x152
 9373 197e 00       		.byte	0
 9374 197f 1A       		.uleb128 0x1a
 9375 1980 37000000 		.4byte	0x37
 9376 1984 90190000 		.4byte	0x1990
 9377 1988 20       		.uleb128 0x20
 9378 1989 A2000000 		.4byte	0xa2
 9379 198d 2B01     		.2byte	0x12b
 9380 198f 00       		.byte	0
 9381 1990 16       		.uleb128 0x16
 9382 1991 FB260000 		.4byte	.LASF557
 9383 1995 07       		.byte	0x7
 9384 1996 2005     		.2byte	0x520
 9385 1998 11190000 		.4byte	0x1911
 9386 199c 16       		.uleb128 0x16
 9387 199d 9F340000 		.4byte	.LASF564
 9388 19a1 07       		.byte	0x7
 9389 19a2 3D05     		.2byte	0x53d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 371


 9390 19a4 A8190000 		.4byte	0x19a8
 9391 19a8 11       		.uleb128 0x11
 9392 19a9 9F340000 		.4byte	.LASF564
 9393 19ad 34       		.byte	0x34
 9394 19ae 07       		.byte	0x7
 9395 19af 4A05     		.2byte	0x54a
 9396 19b1 F7190000 		.4byte	0x19f7
 9397 19b5 0E       		.uleb128 0xe
 9398 19b6 51020000 		.4byte	.LASF327
 9399 19ba 07       		.byte	0x7
 9400 19bb 4B05     		.2byte	0x54b
 9401 19bd F7190000 		.4byte	0x19f7
 9402 19c1 00       		.byte	0
 9403 19c2 0E       		.uleb128 0xe
 9404 19c3 DE150000 		.4byte	.LASF344
 9405 19c7 07       		.byte	0x7
 9406 19c8 4C05     		.2byte	0x54c
 9407 19ca 69130000 		.4byte	0x1369
 9408 19ce 04       		.byte	0x4
 9409 19cf 0E       		.uleb128 0xe
 9410 19d0 360C0000 		.4byte	.LASF565
 9411 19d4 07       		.byte	0x7
 9412 19d5 4D05     		.2byte	0x54d
 9413 19d7 69130000 		.4byte	0x1369
 9414 19db 18       		.byte	0x18
 9415 19dc 0E       		.uleb128 0xe
 9416 19dd 60110000 		.4byte	.LASF294
 9417 19e1 07       		.byte	0x7
 9418 19e2 4E05     		.2byte	0x54e
 9419 19e4 FD190000 		.4byte	0x19fd
 9420 19e8 2C       		.byte	0x2c
 9421 19e9 0E       		.uleb128 0xe
 9422 19ea 97300000 		.4byte	.LASF566
 9423 19ee 07       		.byte	0x7
 9424 19ef 4F05     		.2byte	0x54f
 9425 19f1 30000000 		.4byte	0x30
 9426 19f5 30       		.byte	0x30
 9427 19f6 00       		.byte	0
 9428 19f7 06       		.uleb128 0x6
 9429 19f8 04       		.byte	0x4
 9430 19f9 9C190000 		.4byte	0x199c
 9431 19fd 06       		.uleb128 0x6
 9432 19fe 04       		.byte	0x4
 9433 19ff 9F130000 		.4byte	0x139f
 9434 1a03 16       		.uleb128 0x16
 9435 1a04 60340000 		.4byte	.LASF567
 9436 1a08 07       		.byte	0x7
 9437 1a09 5405     		.2byte	0x554
 9438 1a0b 0F1A0000 		.4byte	0x1a0f
 9439 1a0f 11       		.uleb128 0x11
 9440 1a10 60340000 		.4byte	.LASF567
 9441 1a14 0C       		.byte	0xc
 9442 1a15 07       		.byte	0x7
 9443 1a16 5805     		.2byte	0x558
 9444 1a18 431A0000 		.4byte	0x1a43
 9445 1a1c 0D       		.uleb128 0xd
 9446 1a1d 636D00   		.ascii	"cm\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 372


 9447 1a20 07       		.byte	0x7
 9448 1a21 5905     		.2byte	0x559
 9449 1a23 2E090000 		.4byte	0x92e
 9450 1a27 00       		.byte	0
 9451 1a28 0E       		.uleb128 0xe
 9452 1a29 09280000 		.4byte	.LASF568
 9453 1a2d 07       		.byte	0x7
 9454 1a2e 5A05     		.2byte	0x55a
 9455 1a30 F7190000 		.4byte	0x19f7
 9456 1a34 04       		.byte	0x4
 9457 1a35 0E       		.uleb128 0xe
 9458 1a36 233D0000 		.4byte	.LASF569
 9459 1a3a 07       		.byte	0x7
 9460 1a3b 5B05     		.2byte	0x55b
 9461 1a3d 25000000 		.4byte	0x25
 9462 1a41 08       		.byte	0x8
 9463 1a42 00       		.byte	0
 9464 1a43 16       		.uleb128 0x16
 9465 1a44 35190000 		.4byte	.LASF570
 9466 1a48 07       		.byte	0x7
 9467 1a49 6205     		.2byte	0x562
 9468 1a4b 4F1A0000 		.4byte	0x1a4f
 9469 1a4f 11       		.uleb128 0x11
 9470 1a50 35190000 		.4byte	.LASF570
 9471 1a54 64       		.byte	0x64
 9472 1a55 07       		.byte	0x7
 9473 1a56 6F05     		.2byte	0x56f
 9474 1a58 C51A0000 		.4byte	0x1ac5
 9475 1a5c 0E       		.uleb128 0xe
 9476 1a5d 51020000 		.4byte	.LASF327
 9477 1a61 07       		.byte	0x7
 9478 1a62 7005     		.2byte	0x570
 9479 1a64 C51A0000 		.4byte	0x1ac5
 9480 1a68 00       		.byte	0
 9481 1a69 0E       		.uleb128 0xe
 9482 1a6a DE150000 		.4byte	.LASF344
 9483 1a6e 07       		.byte	0x7
 9484 1a6f 7105     		.2byte	0x571
 9485 1a71 69130000 		.4byte	0x1369
 9486 1a75 04       		.byte	0x4
 9487 1a76 0E       		.uleb128 0xe
 9488 1a77 59300000 		.4byte	.LASF571
 9489 1a7b 07       		.byte	0x7
 9490 1a7c 7405     		.2byte	0x574
 9491 1a7e 89130000 		.4byte	0x1389
 9492 1a82 18       		.byte	0x18
 9493 1a83 0E       		.uleb128 0xe
 9494 1a84 4D1D0000 		.4byte	.LASF572
 9495 1a88 07       		.byte	0x7
 9496 1a89 7505     		.2byte	0x575
 9497 1a8b 89130000 		.4byte	0x1389
 9498 1a8f 38       		.byte	0x38
 9499 1a90 0E       		.uleb128 0xe
 9500 1a91 8C1A0000 		.4byte	.LASF573
 9501 1a95 07       		.byte	0x7
 9502 1a96 7605     		.2byte	0x576
 9503 1a98 37000000 		.4byte	0x37
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 373


 9504 1a9c 58       		.byte	0x58
 9505 1a9d 0E       		.uleb128 0xe
 9506 1a9e 23050000 		.4byte	.LASF574
 9507 1aa2 07       		.byte	0x7
 9508 1aa3 7705     		.2byte	0x577
 9509 1aa5 37000000 		.4byte	0x37
 9510 1aa9 59       		.byte	0x59
 9511 1aaa 0E       		.uleb128 0xe
 9512 1aab 15230000 		.4byte	.LASF575
 9513 1aaf 07       		.byte	0x7
 9514 1ab0 7805     		.2byte	0x578
 9515 1ab2 CB1A0000 		.4byte	0x1acb
 9516 1ab6 5C       		.byte	0x5c
 9517 1ab7 0E       		.uleb128 0xe
 9518 1ab8 063C0000 		.4byte	.LASF576
 9519 1abc 07       		.byte	0x7
 9520 1abd 7905     		.2byte	0x579
 9521 1abf 30000000 		.4byte	0x30
 9522 1ac3 60       		.byte	0x60
 9523 1ac4 00       		.byte	0
 9524 1ac5 06       		.uleb128 0x6
 9525 1ac6 04       		.byte	0x4
 9526 1ac7 431A0000 		.4byte	0x1a43
 9527 1acb 06       		.uleb128 0x6
 9528 1acc 04       		.byte	0x4
 9529 1acd B0130000 		.4byte	0x13b0
 9530 1ad1 16       		.uleb128 0x16
 9531 1ad2 E4400000 		.4byte	.LASF577
 9532 1ad6 07       		.byte	0x7
 9533 1ad7 7D05     		.2byte	0x57d
 9534 1ad9 DD1A0000 		.4byte	0x1add
 9535 1add 11       		.uleb128 0x11
 9536 1ade E4400000 		.4byte	.LASF577
 9537 1ae2 08       		.byte	0x8
 9538 1ae3 07       		.byte	0x7
 9539 1ae4 8005     		.2byte	0x580
 9540 1ae6 051B0000 		.4byte	0x1b05
 9541 1aea 0E       		.uleb128 0xe
 9542 1aeb 4E260000 		.4byte	.LASF578
 9543 1aef 07       		.byte	0x7
 9544 1af0 8105     		.2byte	0x581
 9545 1af2 B1000000 		.4byte	0xb1
 9546 1af6 00       		.byte	0
 9547 1af7 0E       		.uleb128 0xe
 9548 1af8 9D0C0000 		.4byte	.LASF330
 9549 1afc 07       		.byte	0x7
 9550 1afd 8205     		.2byte	0x582
 9551 1aff 30000000 		.4byte	0x30
 9552 1b03 04       		.byte	0x4
 9553 1b04 00       		.byte	0
 9554 1b05 16       		.uleb128 0x16
 9555 1b06 9A210000 		.4byte	.LASF579
 9556 1b0a 07       		.byte	0x7
 9557 1b0b 8705     		.2byte	0x587
 9558 1b0d 111B0000 		.4byte	0x1b11
 9559 1b11 11       		.uleb128 0x11
 9560 1b12 9A210000 		.4byte	.LASF579
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 374


 9561 1b16 1C       		.byte	0x1c
 9562 1b17 07       		.byte	0x7
 9563 1b18 8F05     		.2byte	0x58f
 9564 1b1a 521B0000 		.4byte	0x1b52
 9565 1b1e 0D       		.uleb128 0xd
 9566 1b1f 636D00   		.ascii	"cm\000"
 9567 1b22 07       		.byte	0x7
 9568 1b23 9005     		.2byte	0x590
 9569 1b25 2E090000 		.4byte	0x92e
 9570 1b29 00       		.byte	0
 9571 1b2a 0E       		.uleb128 0xe
 9572 1b2b DD1A0000 		.4byte	.LASF580
 9573 1b2f 07       		.byte	0x7
 9574 1b30 9105     		.2byte	0x591
 9575 1b32 C51A0000 		.4byte	0x1ac5
 9576 1b36 04       		.byte	0x4
 9577 1b37 0E       		.uleb128 0xe
 9578 1b38 2B2F0000 		.4byte	.LASF581
 9579 1b3c 07       		.byte	0x7
 9580 1b3d 9205     		.2byte	0x592
 9581 1b3f 25000000 		.4byte	0x25
 9582 1b43 08       		.byte	0x8
 9583 1b44 0E       		.uleb128 0xe
 9584 1b45 C7370000 		.4byte	.LASF582
 9585 1b49 07       		.byte	0x7
 9586 1b4a 9305     		.2byte	0x593
 9587 1b4c 521B0000 		.4byte	0x1b52
 9588 1b50 0C       		.byte	0xc
 9589 1b51 00       		.byte	0
 9590 1b52 1A       		.uleb128 0x1a
 9591 1b53 D11A0000 		.4byte	0x1ad1
 9592 1b57 621B0000 		.4byte	0x1b62
 9593 1b5b 1B       		.uleb128 0x1b
 9594 1b5c A2000000 		.4byte	0xa2
 9595 1b60 01       		.byte	0x1
 9596 1b61 00       		.byte	0
 9597 1b62 1A       		.uleb128 0x1a
 9598 1b63 99130000 		.4byte	0x1399
 9599 1b67 721B0000 		.4byte	0x1b72
 9600 1b6b 1B       		.uleb128 0x1b
 9601 1b6c A2000000 		.4byte	0xa2
 9602 1b70 0A       		.byte	0xa
 9603 1b71 00       		.byte	0
 9604 1b72 06       		.uleb128 0x6
 9605 1b73 04       		.byte	0x4
 9606 1b74 051B0000 		.4byte	0x1b05
 9607 1b78 06       		.uleb128 0x6
 9608 1b79 04       		.byte	0x4
 9609 1b7a 031A0000 		.4byte	0x1a03
 9610 1b7e 11       		.uleb128 0x11
 9611 1b7f D10C0000 		.4byte	.LASF583
 9612 1b83 B4       		.byte	0xb4
 9613 1b84 07       		.byte	0x7
 9614 1b85 F705     		.2byte	0x5f7
 9615 1b87 281C0000 		.4byte	0x1c28
 9616 1b8b 0E       		.uleb128 0xe
 9617 1b8c 9F0D0000 		.4byte	.LASF584
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 375


 9618 1b90 07       		.byte	0x7
 9619 1b91 F805     		.2byte	0x5f8
 9620 1b93 89130000 		.4byte	0x1389
 9621 1b97 00       		.byte	0
 9622 1b98 0E       		.uleb128 0xe
 9623 1b99 1C220000 		.4byte	.LASF585
 9624 1b9d 07       		.byte	0x7
 9625 1b9e F905     		.2byte	0x5f9
 9626 1ba0 89130000 		.4byte	0x1389
 9627 1ba4 20       		.byte	0x20
 9628 1ba5 0E       		.uleb128 0xe
 9629 1ba6 CD330000 		.4byte	.LASF586
 9630 1baa 07       		.byte	0x7
 9631 1bab FA05     		.2byte	0x5fa
 9632 1bad 89130000 		.4byte	0x1389
 9633 1bb1 40       		.byte	0x40
 9634 1bb2 0E       		.uleb128 0xe
 9635 1bb3 F3250000 		.4byte	.LASF587
 9636 1bb7 07       		.byte	0x7
 9637 1bb8 FB05     		.2byte	0x5fb
 9638 1bba 89130000 		.4byte	0x1389
 9639 1bbe 60       		.byte	0x60
 9640 1bbf 0E       		.uleb128 0xe
 9641 1bc0 322B0000 		.4byte	.LASF588
 9642 1bc4 07       		.byte	0x7
 9643 1bc5 FC05     		.2byte	0x5fc
 9644 1bc7 281C0000 		.4byte	0x1c28
 9645 1bcb 80       		.byte	0x80
 9646 1bcc 0E       		.uleb128 0xe
 9647 1bcd 17200000 		.4byte	.LASF589
 9648 1bd1 07       		.byte	0x7
 9649 1bd2 FD05     		.2byte	0x5fd
 9650 1bd4 281C0000 		.4byte	0x1c28
 9651 1bd8 90       		.byte	0x90
 9652 1bd9 0E       		.uleb128 0xe
 9653 1bda 48180000 		.4byte	.LASF590
 9654 1bde 07       		.byte	0x7
 9655 1bdf 0406     		.2byte	0x604
 9656 1be1 5B000000 		.4byte	0x5b
 9657 1be5 A0       		.byte	0xa0
 9658 1be6 0E       		.uleb128 0xe
 9659 1be7 18300000 		.4byte	.LASF591
 9660 1beb 07       		.byte	0x7
 9661 1bec 0506     		.2byte	0x605
 9662 1bee 5B000000 		.4byte	0x5b
 9663 1bf2 A4       		.byte	0xa4
 9664 1bf3 0E       		.uleb128 0xe
 9665 1bf4 84120000 		.4byte	.LASF592
 9666 1bf8 07       		.byte	0x7
 9667 1bf9 1206     		.2byte	0x612
 9668 1bfb 5B000000 		.4byte	0x5b
 9669 1bff A8       		.byte	0xa8
 9670 1c00 0E       		.uleb128 0xe
 9671 1c01 49330000 		.4byte	.LASF593
 9672 1c05 07       		.byte	0x7
 9673 1c06 1306     		.2byte	0x613
 9674 1c08 5B000000 		.4byte	0x5b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 376


 9675 1c0c AC       		.byte	0xac
 9676 1c0d 0E       		.uleb128 0xe
 9677 1c0e 650D0000 		.4byte	.LASF594
 9678 1c12 07       		.byte	0x7
 9679 1c13 1406     		.2byte	0x614
 9680 1c15 37000000 		.4byte	0x37
 9681 1c19 B0       		.byte	0xb0
 9682 1c1a 0E       		.uleb128 0xe
 9683 1c1b A0030000 		.4byte	.LASF595
 9684 1c1f 07       		.byte	0x7
 9685 1c20 1506     		.2byte	0x615
 9686 1c22 37000000 		.4byte	0x37
 9687 1c26 B1       		.byte	0xb1
 9688 1c27 00       		.byte	0
 9689 1c28 1A       		.uleb128 0x1a
 9690 1c29 37000000 		.4byte	0x37
 9691 1c2d 381C0000 		.4byte	0x1c38
 9692 1c31 1B       		.uleb128 0x1b
 9693 1c32 A2000000 		.4byte	0xa2
 9694 1c36 0F       		.byte	0xf
 9695 1c37 00       		.byte	0
 9696 1c38 16       		.uleb128 0x16
 9697 1c39 D10C0000 		.4byte	.LASF583
 9698 1c3d 07       		.byte	0x7
 9699 1c3e 1606     		.2byte	0x616
 9700 1c40 7E1B0000 		.4byte	0x1b7e
 9701 1c44 06       		.uleb128 0x6
 9702 1c45 04       		.byte	0x4
 9703 1c46 92040000 		.4byte	0x492
 9704 1c4a 06       		.uleb128 0x6
 9705 1c4b 04       		.byte	0x4
 9706 1c4c 84180000 		.4byte	0x1884
 9707 1c50 06       		.uleb128 0x6
 9708 1c51 04       		.byte	0x4
 9709 1c52 90190000 		.4byte	0x1990
 9710 1c56 11       		.uleb128 0x11
 9711 1c57 300E0000 		.4byte	.LASF596
 9712 1c5b 10       		.byte	0x10
 9713 1c5c 07       		.byte	0x7
 9714 1c5d A507     		.2byte	0x7a5
 9715 1c5f 001D0000 		.4byte	0x1d00
 9716 1c63 0E       		.uleb128 0xe
 9717 1c64 F33A0000 		.4byte	.LASF597
 9718 1c68 07       		.byte	0x7
 9719 1c69 A607     		.2byte	0x7a6
 9720 1c6b 49000000 		.4byte	0x49
 9721 1c6f 00       		.byte	0
 9722 1c70 0E       		.uleb128 0xe
 9723 1c71 F93C0000 		.4byte	.LASF598
 9724 1c75 07       		.byte	0x7
 9725 1c76 A707     		.2byte	0x7a7
 9726 1c78 49000000 		.4byte	0x49
 9727 1c7c 02       		.byte	0x2
 9728 1c7d 0E       		.uleb128 0xe
 9729 1c7e BA0A0000 		.4byte	.LASF599
 9730 1c82 07       		.byte	0x7
 9731 1c83 A807     		.2byte	0x7a8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 377


 9732 1c85 49000000 		.4byte	0x49
 9733 1c89 04       		.byte	0x4
 9734 1c8a 0E       		.uleb128 0xe
 9735 1c8b BB3C0000 		.4byte	.LASF600
 9736 1c8f 07       		.byte	0x7
 9737 1c90 A907     		.2byte	0x7a9
 9738 1c92 49000000 		.4byte	0x49
 9739 1c96 06       		.byte	0x6
 9740 1c97 0E       		.uleb128 0xe
 9741 1c98 870A0000 		.4byte	.LASF601
 9742 1c9c 07       		.byte	0x7
 9743 1c9d AA07     		.2byte	0x7aa
 9744 1c9f 37000000 		.4byte	0x37
 9745 1ca3 08       		.byte	0x8
 9746 1ca4 0E       		.uleb128 0xe
 9747 1ca5 7E230000 		.4byte	.LASF602
 9748 1ca9 07       		.byte	0x7
 9749 1caa AB07     		.2byte	0x7ab
 9750 1cac 37000000 		.4byte	0x37
 9751 1cb0 09       		.byte	0x9
 9752 1cb1 0E       		.uleb128 0xe
 9753 1cb2 69030000 		.4byte	.LASF603
 9754 1cb6 07       		.byte	0x7
 9755 1cb7 AC07     		.2byte	0x7ac
 9756 1cb9 37000000 		.4byte	0x37
 9757 1cbd 0A       		.byte	0xa
 9758 1cbe 0D       		.uleb128 0xd
 9759 1cbf 6B656100 		.ascii	"kea\000"
 9760 1cc3 07       		.byte	0x7
 9761 1cc4 AD07     		.2byte	0x7ad
 9762 1cc6 37000000 		.4byte	0x37
 9763 1cca 0B       		.byte	0xb
 9764 1ccb 0E       		.uleb128 0xe
 9765 1ccc 502F0000 		.4byte	.LASF604
 9766 1cd0 07       		.byte	0x7
 9767 1cd1 AE07     		.2byte	0x7ae
 9768 1cd3 37000000 		.4byte	0x37
 9769 1cd7 0C       		.byte	0xc
 9770 1cd8 0E       		.uleb128 0xe
 9771 1cd9 4D2C0000 		.4byte	.LASF605
 9772 1cdd 07       		.byte	0x7
 9773 1cde AF07     		.2byte	0x7af
 9774 1ce0 37000000 		.4byte	0x37
 9775 1ce4 0D       		.byte	0xd
 9776 1ce5 0E       		.uleb128 0xe
 9777 1ce6 9F360000 		.4byte	.LASF606
 9778 1cea 07       		.byte	0x7
 9779 1ceb B007     		.2byte	0x7b0
 9780 1ced 37000000 		.4byte	0x37
 9781 1cf1 0E       		.byte	0xe
 9782 1cf2 0E       		.uleb128 0xe
 9783 1cf3 C8310000 		.4byte	.LASF607
 9784 1cf7 07       		.byte	0x7
 9785 1cf8 B107     		.2byte	0x7b1
 9786 1cfa 37000000 		.4byte	0x37
 9787 1cfe 0F       		.byte	0xf
 9788 1cff 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 378


 9789 1d00 16       		.uleb128 0x16
 9790 1d01 300E0000 		.4byte	.LASF596
 9791 1d05 07       		.byte	0x7
 9792 1d06 B207     		.2byte	0x7b2
 9793 1d08 561C0000 		.4byte	0x1c56
 9794 1d0c 11       		.uleb128 0x11
 9795 1d0d 293B0000 		.4byte	.LASF608
 9796 1d11 01       		.byte	0x1
 9797 1d12 07       		.byte	0x7
 9798 1d13 FB07     		.2byte	0x7fb
 9799 1d15 271D0000 		.4byte	0x1d27
 9800 1d19 0E       		.uleb128 0xe
 9801 1d1a 230C0000 		.4byte	.LASF609
 9802 1d1e 07       		.byte	0x7
 9803 1d1f 1408     		.2byte	0x814
 9804 1d21 37000000 		.4byte	0x37
 9805 1d25 00       		.byte	0
 9806 1d26 00       		.byte	0
 9807 1d27 16       		.uleb128 0x16
 9808 1d28 293B0000 		.4byte	.LASF608
 9809 1d2c 07       		.byte	0x7
 9810 1d2d 1508     		.2byte	0x815
 9811 1d2f 0C1D0000 		.4byte	0x1d0c
 9812 1d33 11       		.uleb128 0x11
 9813 1d34 DE330000 		.4byte	.LASF610
 9814 1d38 34       		.byte	0x34
 9815 1d39 07       		.byte	0x7
 9816 1d3a 2908     		.2byte	0x829
 9817 1d3c 5B1D0000 		.4byte	0x1d5b
 9818 1d40 0D       		.uleb128 0xd
 9819 1d41 73686100 		.ascii	"sha\000"
 9820 1d45 07       		.byte	0x7
 9821 1d46 2D08     		.2byte	0x82d
 9822 1d48 69130000 		.4byte	0x1369
 9823 1d4c 00       		.byte	0
 9824 1d4d 0E       		.uleb128 0xe
 9825 1d4e D7150000 		.4byte	.LASF611
 9826 1d52 07       		.byte	0x7
 9827 1d53 2F08     		.2byte	0x82f
 9828 1d55 89130000 		.4byte	0x1389
 9829 1d59 14       		.byte	0x14
 9830 1d5a 00       		.byte	0
 9831 1d5b 16       		.uleb128 0x16
 9832 1d5c DE330000 		.4byte	.LASF610
 9833 1d60 07       		.byte	0x7
 9834 1d61 3708     		.2byte	0x837
 9835 1d63 331D0000 		.4byte	0x1d33
 9836 1d67 1A       		.uleb128 0x1a
 9837 1d68 37000000 		.4byte	0x37
 9838 1d6c 771D0000 		.4byte	0x1d77
 9839 1d70 1B       		.uleb128 0x1b
 9840 1d71 A2000000 		.4byte	0xa2
 9841 1d75 2F       		.byte	0x2f
 9842 1d76 00       		.byte	0
 9843 1d77 16       		.uleb128 0x16
 9844 1d78 E6130000 		.4byte	.LASF612
 9845 1d7c 07       		.byte	0x7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 379


 9846 1d7d 6808     		.2byte	0x868
 9847 1d7f 831D0000 		.4byte	0x1d83
 9848 1d83 06       		.uleb128 0x6
 9849 1d84 04       		.byte	0x4
 9850 1d85 891D0000 		.4byte	0x1d89
 9851 1d89 17       		.uleb128 0x17
 9852 1d8a 30000000 		.4byte	0x30
 9853 1d8e B11D0000 		.4byte	0x1db1
 9854 1d92 18       		.uleb128 0x18
 9855 1d93 3B0C0000 		.4byte	0xc3b
 9856 1d97 18       		.uleb128 0x18
 9857 1d98 63130000 		.4byte	0x1363
 9858 1d9c 18       		.uleb128 0x18
 9859 1d9d B11D0000 		.4byte	0x1db1
 9860 1da1 18       		.uleb128 0x18
 9861 1da2 5B000000 		.4byte	0x5b
 9862 1da6 18       		.uleb128 0x18
 9863 1da7 30000000 		.4byte	0x30
 9864 1dab 18       		.uleb128 0x18
 9865 1dac 30000000 		.4byte	0x30
 9866 1db0 00       		.byte	0
 9867 1db1 06       		.uleb128 0x6
 9868 1db2 04       		.byte	0x4
 9869 1db3 B71D0000 		.4byte	0x1db7
 9870 1db7 07       		.uleb128 0x7
 9871 1db8 37000000 		.4byte	0x37
 9872 1dbc 1E       		.uleb128 0x1e
 9873 1dbd 010F0000 		.4byte	.LASF613
 9874 1dc1 01       		.byte	0x1
 9875 1dc2 07       		.byte	0x7
 9876 1dc3 6F08     		.2byte	0x86f
 9877 1dc5 0C1E0000 		.4byte	0x1e0c
 9878 1dc9 0A       		.uleb128 0xa
 9879 1dca 34160000 		.4byte	.LASF614
 9880 1dce 00       		.sleb128 0
 9881 1dcf 0A       		.uleb128 0xa
 9882 1dd0 D4250000 		.4byte	.LASF615
 9883 1dd4 01       		.sleb128 1
 9884 1dd5 0A       		.uleb128 0xa
 9885 1dd6 28370000 		.4byte	.LASF616
 9886 1dda 02       		.sleb128 2
 9887 1ddb 0A       		.uleb128 0xa
 9888 1ddc AE220000 		.4byte	.LASF617
 9889 1de0 03       		.sleb128 3
 9890 1de1 0A       		.uleb128 0xa
 9891 1de2 94220000 		.4byte	.LASF618
 9892 1de6 04       		.sleb128 4
 9893 1de7 0A       		.uleb128 0xa
 9894 1de8 56020000 		.4byte	.LASF619
 9895 1dec 05       		.sleb128 5
 9896 1ded 0A       		.uleb128 0xa
 9897 1dee 3B260000 		.4byte	.LASF620
 9898 1df2 06       		.sleb128 6
 9899 1df3 0A       		.uleb128 0xa
 9900 1df4 07030000 		.4byte	.LASF621
 9901 1df8 07       		.sleb128 7
 9902 1df9 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 380


 9903 1dfa EE0D0000 		.4byte	.LASF622
 9904 1dfe 08       		.sleb128 8
 9905 1dff 0A       		.uleb128 0xa
 9906 1e00 0F070000 		.4byte	.LASF623
 9907 1e04 09       		.sleb128 9
 9908 1e05 0A       		.uleb128 0xa
 9909 1e06 95350000 		.4byte	.LASF624
 9910 1e0a 0A       		.sleb128 10
 9911 1e0b 00       		.byte	0
 9912 1e0c 11       		.uleb128 0x11
 9913 1e0d 340A0000 		.4byte	.LASF625
 9914 1e11 60       		.byte	0x60
 9915 1e12 07       		.byte	0x7
 9916 1e13 9108     		.2byte	0x891
 9917 1e15 C31E0000 		.4byte	0x1ec3
 9918 1e19 0E       		.uleb128 0xe
 9919 1e1a C7260000 		.4byte	.LASF626
 9920 1e1e 07       		.byte	0x7
 9921 1e1f 9208     		.2byte	0x892
 9922 1e21 05190000 		.4byte	0x1905
 9923 1e25 00       		.byte	0
 9924 1e26 0E       		.uleb128 0xe
 9925 1e27 9D0A0000 		.4byte	.LASF627
 9926 1e2b 07       		.byte	0x7
 9927 1e2c 9308     		.2byte	0x893
 9928 1e2e 05190000 		.4byte	0x1905
 9929 1e32 1C       		.byte	0x1c
 9930 1e33 0E       		.uleb128 0xe
 9931 1e34 40220000 		.4byte	.LASF628
 9932 1e38 07       		.byte	0x7
 9933 1e39 9408     		.2byte	0x894
 9934 1e3b 29180000 		.4byte	0x1829
 9935 1e3f 38       		.byte	0x38
 9936 1e40 0E       		.uleb128 0xe
 9937 1e41 8A390000 		.4byte	.LASF629
 9938 1e45 07       		.byte	0x7
 9939 1e46 9508     		.2byte	0x895
 9940 1e48 29180000 		.4byte	0x1829
 9941 1e4c 40       		.byte	0x40
 9942 1e4d 0E       		.uleb128 0xe
 9943 1e4e 06070000 		.4byte	.LASF630
 9944 1e52 07       		.byte	0x7
 9945 1e53 9608     		.2byte	0x896
 9946 1e55 30000000 		.4byte	0x30
 9947 1e59 48       		.byte	0x48
 9948 1e5a 0E       		.uleb128 0xe
 9949 1e5b 07150000 		.4byte	.LASF631
 9950 1e5f 07       		.byte	0x7
 9951 1e60 9808     		.2byte	0x898
 9952 1e62 30000000 		.4byte	0x30
 9953 1e66 4C       		.byte	0x4c
 9954 1e67 0E       		.uleb128 0xe
 9955 1e68 67110000 		.4byte	.LASF632
 9956 1e6c 07       		.byte	0x7
 9957 1e6d 9A08     		.2byte	0x89a
 9958 1e6f 37000000 		.4byte	0x37
 9959 1e73 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 381


 9960 1e74 0E       		.uleb128 0xe
 9961 1e75 31140000 		.4byte	.LASF633
 9962 1e79 07       		.byte	0x7
 9963 1e7a 9B08     		.2byte	0x89b
 9964 1e7c 37000000 		.4byte	0x37
 9965 1e80 51       		.byte	0x51
 9966 1e81 0E       		.uleb128 0xe
 9967 1e82 2D360000 		.4byte	.LASF634
 9968 1e86 07       		.byte	0x7
 9969 1e87 9C08     		.2byte	0x89c
 9970 1e89 37000000 		.4byte	0x37
 9971 1e8d 52       		.byte	0x52
 9972 1e8e 0E       		.uleb128 0xe
 9973 1e8f 3C3C0000 		.4byte	.LASF635
 9974 1e93 07       		.byte	0x7
 9975 1e94 9D08     		.2byte	0x89d
 9976 1e96 37000000 		.4byte	0x37
 9977 1e9a 53       		.byte	0x53
 9978 1e9b 0E       		.uleb128 0xe
 9979 1e9c 08170000 		.4byte	.LASF118
 9980 1ea0 07       		.byte	0x7
 9981 1ea1 A508     		.2byte	0x8a5
 9982 1ea3 4A1C0000 		.4byte	0x1c4a
 9983 1ea7 54       		.byte	0x54
 9984 1ea8 0D       		.uleb128 0xd
 9985 1ea9 6B657900 		.ascii	"key\000"
 9986 1ead 07       		.byte	0x7
 9987 1eae A608     		.2byte	0x8a6
 9988 1eb0 4A1C0000 		.4byte	0x1c4a
 9989 1eb4 58       		.byte	0x58
 9990 1eb5 0E       		.uleb128 0xe
 9991 1eb6 D8410000 		.4byte	.LASF119
 9992 1eba 07       		.byte	0x7
 9993 1ebb A708     		.2byte	0x8a7
 9994 1ebd 4A1C0000 		.4byte	0x1c4a
 9995 1ec1 5C       		.byte	0x5c
 9996 1ec2 00       		.byte	0
 9997 1ec3 16       		.uleb128 0x16
 9998 1ec4 340A0000 		.4byte	.LASF625
 9999 1ec8 07       		.byte	0x7
 10000 1ec9 B808     		.2byte	0x8b8
 10001 1ecb 0C1E0000 		.4byte	0x1e0c
 10002 1ecf 11       		.uleb128 0x11
 10003 1ed0 BF1D0000 		.4byte	.LASF636
 10004 1ed4 10       		.byte	0x10
 10005 1ed5 07       		.byte	0x7
 10006 1ed6 BA08     		.2byte	0x8ba
 10007 1ed8 AF210000 		.4byte	0x21af
 10008 1edc 21       		.uleb128 0x21
 10009 1edd D5110000 		.4byte	.LASF127
 10010 1ee1 07       		.byte	0x7
 10011 1ee2 C208     		.2byte	0x8c2
 10012 1ee4 49000000 		.4byte	0x49
 10013 1ee8 02       		.byte	0x2
 10014 1ee9 02       		.byte	0x2
 10015 1eea 0E       		.byte	0xe
 10016 1eeb 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 382


 10017 1eec 21       		.uleb128 0x21
 10018 1eed 231C0000 		.4byte	.LASF125
 10019 1ef1 07       		.byte	0x7
 10020 1ef2 C308     		.2byte	0x8c3
 10021 1ef4 49000000 		.4byte	0x49
 10022 1ef8 02       		.byte	0x2
 10023 1ef9 01       		.byte	0x1
 10024 1efa 0D       		.byte	0xd
 10025 1efb 00       		.byte	0
 10026 1efc 21       		.uleb128 0x21
 10027 1efd 33180000 		.4byte	.LASF126
 10028 1f01 07       		.byte	0x7
 10029 1f02 C408     		.2byte	0x8c4
 10030 1f04 49000000 		.4byte	0x49
 10031 1f08 02       		.byte	0x2
 10032 1f09 01       		.byte	0x1
 10033 1f0a 0C       		.byte	0xc
 10034 1f0b 00       		.byte	0
 10035 1f0c 21       		.uleb128 0x21
 10036 1f0d 58400000 		.4byte	.LASF112
 10037 1f11 07       		.byte	0x7
 10038 1f12 C508     		.2byte	0x8c5
 10039 1f14 49000000 		.4byte	0x49
 10040 1f18 02       		.byte	0x2
 10041 1f19 01       		.byte	0x1
 10042 1f1a 0B       		.byte	0xb
 10043 1f1b 00       		.byte	0
 10044 1f1c 21       		.uleb128 0x21
 10045 1f1d 3F190000 		.4byte	.LASF121
 10046 1f21 07       		.byte	0x7
 10047 1f22 C608     		.2byte	0x8c6
 10048 1f24 49000000 		.4byte	0x49
 10049 1f28 02       		.byte	0x2
 10050 1f29 01       		.byte	0x1
 10051 1f2a 0A       		.byte	0xa
 10052 1f2b 00       		.byte	0
 10053 1f2c 21       		.uleb128 0x21
 10054 1f2d F3050000 		.4byte	.LASF122
 10055 1f31 07       		.byte	0x7
 10056 1f32 C708     		.2byte	0x8c7
 10057 1f34 49000000 		.4byte	0x49
 10058 1f38 02       		.byte	0x2
 10059 1f39 01       		.byte	0x1
 10060 1f3a 09       		.byte	0x9
 10061 1f3b 00       		.byte	0
 10062 1f3c 21       		.uleb128 0x21
 10063 1f3d AB020000 		.4byte	.LASF123
 10064 1f41 07       		.byte	0x7
 10065 1f42 C808     		.2byte	0x8c8
 10066 1f44 49000000 		.4byte	0x49
 10067 1f48 02       		.byte	0x2
 10068 1f49 01       		.byte	0x1
 10069 1f4a 08       		.byte	0x8
 10070 1f4b 00       		.byte	0
 10071 1f4c 21       		.uleb128 0x21
 10072 1f4d C9160000 		.4byte	.LASF124
 10073 1f51 07       		.byte	0x7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 383


 10074 1f52 C908     		.2byte	0x8c9
 10075 1f54 49000000 		.4byte	0x49
 10076 1f58 02       		.byte	0x2
 10077 1f59 01       		.byte	0x1
 10078 1f5a 07       		.byte	0x7
 10079 1f5b 00       		.byte	0
 10080 1f5c 21       		.uleb128 0x21
 10081 1f5d 1C190000 		.4byte	.LASF113
 10082 1f61 07       		.byte	0x7
 10083 1f62 CA08     		.2byte	0x8ca
 10084 1f64 49000000 		.4byte	0x49
 10085 1f68 02       		.byte	0x2
 10086 1f69 01       		.byte	0x1
 10087 1f6a 06       		.byte	0x6
 10088 1f6b 00       		.byte	0
 10089 1f6c 21       		.uleb128 0x21
 10090 1f6d 1B3E0000 		.4byte	.LASF637
 10091 1f71 07       		.byte	0x7
 10092 1f72 CB08     		.2byte	0x8cb
 10093 1f74 49000000 		.4byte	0x49
 10094 1f78 02       		.byte	0x2
 10095 1f79 01       		.byte	0x1
 10096 1f7a 05       		.byte	0x5
 10097 1f7b 00       		.byte	0
 10098 1f7c 21       		.uleb128 0x21
 10099 1f7d 90280000 		.4byte	.LASF638
 10100 1f81 07       		.byte	0x7
 10101 1f82 CC08     		.2byte	0x8cc
 10102 1f84 49000000 		.4byte	0x49
 10103 1f88 02       		.byte	0x2
 10104 1f89 01       		.byte	0x1
 10105 1f8a 04       		.byte	0x4
 10106 1f8b 00       		.byte	0
 10107 1f8c 22       		.uleb128 0x22
 10108 1f8d 746C7300 		.ascii	"tls\000"
 10109 1f91 07       		.byte	0x7
 10110 1f92 CD08     		.2byte	0x8cd
 10111 1f94 49000000 		.4byte	0x49
 10112 1f98 02       		.byte	0x2
 10113 1f99 01       		.byte	0x1
 10114 1f9a 03       		.byte	0x3
 10115 1f9b 00       		.byte	0
 10116 1f9c 21       		.uleb128 0x21
 10117 1f9d 46380000 		.4byte	.LASF639
 10118 1fa1 07       		.byte	0x7
 10119 1fa2 CE08     		.2byte	0x8ce
 10120 1fa4 49000000 		.4byte	0x49
 10121 1fa8 02       		.byte	0x2
 10122 1fa9 01       		.byte	0x1
 10123 1faa 02       		.byte	0x2
 10124 1fab 00       		.byte	0
 10125 1fac 21       		.uleb128 0x21
 10126 1fad EC200000 		.4byte	.LASF640
 10127 1fb1 07       		.byte	0x7
 10128 1fb2 CF08     		.2byte	0x8cf
 10129 1fb4 49000000 		.4byte	0x49
 10130 1fb8 02       		.byte	0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 384


 10131 1fb9 01       		.byte	0x1
 10132 1fba 01       		.byte	0x1
 10133 1fbb 00       		.byte	0
 10134 1fbc 21       		.uleb128 0x21
 10135 1fbd AC3E0000 		.4byte	.LASF641
 10136 1fc1 07       		.byte	0x7
 10137 1fc2 D008     		.2byte	0x8d0
 10138 1fc4 49000000 		.4byte	0x49
 10139 1fc8 02       		.byte	0x2
 10140 1fc9 01       		.byte	0x1
 10141 1fca 00       		.byte	0
 10142 1fcb 00       		.byte	0
 10143 1fcc 21       		.uleb128 0x21
 10144 1fcd 5D180000 		.4byte	.LASF642
 10145 1fd1 07       		.byte	0x7
 10146 1fd2 D108     		.2byte	0x8d1
 10147 1fd4 49000000 		.4byte	0x49
 10148 1fd8 02       		.byte	0x2
 10149 1fd9 01       		.byte	0x1
 10150 1fda 0F       		.byte	0xf
 10151 1fdb 02       		.byte	0x2
 10152 1fdc 21       		.uleb128 0x21
 10153 1fdd 8E320000 		.4byte	.LASF643
 10154 1fe1 07       		.byte	0x7
 10155 1fe2 D208     		.2byte	0x8d2
 10156 1fe4 49000000 		.4byte	0x49
 10157 1fe8 02       		.byte	0x2
 10158 1fe9 01       		.byte	0x1
 10159 1fea 0E       		.byte	0xe
 10160 1feb 02       		.byte	0x2
 10161 1fec 21       		.uleb128 0x21
 10162 1fed 35020000 		.4byte	.LASF644
 10163 1ff1 07       		.byte	0x7
 10164 1ff2 D308     		.2byte	0x8d3
 10165 1ff4 49000000 		.4byte	0x49
 10166 1ff8 02       		.byte	0x2
 10167 1ff9 01       		.byte	0x1
 10168 1ffa 0D       		.byte	0xd
 10169 1ffb 02       		.byte	0x2
 10170 1ffc 21       		.uleb128 0x21
 10171 1ffd 81370000 		.4byte	.LASF645
 10172 2001 07       		.byte	0x7
 10173 2002 D408     		.2byte	0x8d4
 10174 2004 49000000 		.4byte	0x49
 10175 2008 02       		.byte	0x2
 10176 2009 01       		.byte	0x1
 10177 200a 0C       		.byte	0xc
 10178 200b 02       		.byte	0x2
 10179 200c 21       		.uleb128 0x21
 10180 200d E03F0000 		.4byte	.LASF128
 10181 2011 07       		.byte	0x7
 10182 2012 D508     		.2byte	0x8d5
 10183 2014 49000000 		.4byte	0x49
 10184 2018 02       		.byte	0x2
 10185 2019 01       		.byte	0x1
 10186 201a 0B       		.byte	0xb
 10187 201b 02       		.byte	0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 385


 10188 201c 21       		.uleb128 0x21
 10189 201d 561D0000 		.4byte	.LASF129
 10190 2021 07       		.byte	0x7
 10191 2022 D608     		.2byte	0x8d6
 10192 2024 49000000 		.4byte	0x49
 10193 2028 02       		.byte	0x2
 10194 2029 01       		.byte	0x1
 10195 202a 0A       		.byte	0xa
 10196 202b 02       		.byte	0x2
 10197 202c 21       		.uleb128 0x21
 10198 202d CB130000 		.4byte	.LASF130
 10199 2031 07       		.byte	0x7
 10200 2032 D708     		.2byte	0x8d7
 10201 2034 49000000 		.4byte	0x49
 10202 2038 02       		.byte	0x2
 10203 2039 01       		.byte	0x1
 10204 203a 09       		.byte	0x9
 10205 203b 02       		.byte	0x2
 10206 203c 21       		.uleb128 0x21
 10207 203d 013D0000 		.4byte	.LASF131
 10208 2041 07       		.byte	0x7
 10209 2042 D808     		.2byte	0x8d8
 10210 2044 49000000 		.4byte	0x49
 10211 2048 02       		.byte	0x2
 10212 2049 01       		.byte	0x1
 10213 204a 08       		.byte	0x8
 10214 204b 02       		.byte	0x2
 10215 204c 21       		.uleb128 0x21
 10216 204d C6390000 		.4byte	.LASF646
 10217 2051 07       		.byte	0x7
 10218 2052 D908     		.2byte	0x8d9
 10219 2054 49000000 		.4byte	0x49
 10220 2058 02       		.byte	0x2
 10221 2059 01       		.byte	0x1
 10222 205a 07       		.byte	0x7
 10223 205b 02       		.byte	0x2
 10224 205c 21       		.uleb128 0x21
 10225 205d 1B370000 		.4byte	.LASF132
 10226 2061 07       		.byte	0x7
 10227 2062 DA08     		.2byte	0x8da
 10228 2064 49000000 		.4byte	0x49
 10229 2068 02       		.byte	0x2
 10230 2069 01       		.byte	0x1
 10231 206a 06       		.byte	0x6
 10232 206b 02       		.byte	0x2
 10233 206c 21       		.uleb128 0x21
 10234 206d AA2C0000 		.4byte	.LASF133
 10235 2071 07       		.byte	0x7
 10236 2072 DB08     		.2byte	0x8db
 10237 2074 49000000 		.4byte	0x49
 10238 2078 02       		.byte	0x2
 10239 2079 01       		.byte	0x1
 10240 207a 05       		.byte	0x5
 10241 207b 02       		.byte	0x2
 10242 207c 21       		.uleb128 0x21
 10243 207d D21C0000 		.4byte	.LASF647
 10244 2081 07       		.byte	0x7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 386


 10245 2082 DC08     		.2byte	0x8dc
 10246 2084 49000000 		.4byte	0x49
 10247 2088 02       		.byte	0x2
 10248 2089 01       		.byte	0x1
 10249 208a 04       		.byte	0x4
 10250 208b 02       		.byte	0x2
 10251 208c 21       		.uleb128 0x21
 10252 208d 401B0000 		.4byte	.LASF648
 10253 2091 07       		.byte	0x7
 10254 2092 DD08     		.2byte	0x8dd
 10255 2094 49000000 		.4byte	0x49
 10256 2098 02       		.byte	0x2
 10257 2099 01       		.byte	0x1
 10258 209a 03       		.byte	0x3
 10259 209b 02       		.byte	0x2
 10260 209c 21       		.uleb128 0x21
 10261 209d CE040000 		.4byte	.LASF649
 10262 20a1 07       		.byte	0x7
 10263 20a2 DE08     		.2byte	0x8de
 10264 20a4 49000000 		.4byte	0x49
 10265 20a8 02       		.byte	0x2
 10266 20a9 01       		.byte	0x1
 10267 20aa 02       		.byte	0x2
 10268 20ab 02       		.byte	0x2
 10269 20ac 21       		.uleb128 0x21
 10270 20ad 862C0000 		.4byte	.LASF650
 10271 20b1 07       		.byte	0x7
 10272 20b2 DF08     		.2byte	0x8df
 10273 20b4 49000000 		.4byte	0x49
 10274 20b8 02       		.byte	0x2
 10275 20b9 01       		.byte	0x1
 10276 20ba 01       		.byte	0x1
 10277 20bb 02       		.byte	0x2
 10278 20bc 21       		.uleb128 0x21
 10279 20bd F52B0000 		.4byte	.LASF651
 10280 20c1 07       		.byte	0x7
 10281 20c2 E008     		.2byte	0x8e0
 10282 20c4 49000000 		.4byte	0x49
 10283 20c8 02       		.byte	0x2
 10284 20c9 01       		.byte	0x1
 10285 20ca 00       		.byte	0
 10286 20cb 02       		.byte	0x2
 10287 20cc 21       		.uleb128 0x21
 10288 20cd 29210000 		.4byte	.LASF134
 10289 20d1 07       		.byte	0x7
 10290 20d2 E108     		.2byte	0x8e1
 10291 20d4 49000000 		.4byte	0x49
 10292 20d8 02       		.byte	0x2
 10293 20d9 01       		.byte	0x1
 10294 20da 0F       		.byte	0xf
 10295 20db 04       		.byte	0x4
 10296 20dc 21       		.uleb128 0x21
 10297 20dd 1E2E0000 		.4byte	.LASF135
 10298 20e1 07       		.byte	0x7
 10299 20e2 E208     		.2byte	0x8e2
 10300 20e4 49000000 		.4byte	0x49
 10301 20e8 02       		.byte	0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 387


 10302 20e9 01       		.byte	0x1
 10303 20ea 0E       		.byte	0xe
 10304 20eb 04       		.byte	0x4
 10305 20ec 21       		.uleb128 0x21
 10306 20ed 27130000 		.4byte	.LASF652
 10307 20f1 07       		.byte	0x7
 10308 20f2 E308     		.2byte	0x8e3
 10309 20f4 49000000 		.4byte	0x49
 10310 20f8 02       		.byte	0x2
 10311 20f9 01       		.byte	0x1
 10312 20fa 0D       		.byte	0xd
 10313 20fb 04       		.byte	0x4
 10314 20fc 21       		.uleb128 0x21
 10315 20fd D02D0000 		.4byte	.LASF136
 10316 2101 07       		.byte	0x7
 10317 2102 E408     		.2byte	0x8e4
 10318 2104 49000000 		.4byte	0x49
 10319 2108 02       		.byte	0x2
 10320 2109 01       		.byte	0x1
 10321 210a 0C       		.byte	0xc
 10322 210b 04       		.byte	0x4
 10323 210c 21       		.uleb128 0x21
 10324 210d DE0C0000 		.4byte	.LASF653
 10325 2111 07       		.byte	0x7
 10326 2112 E508     		.2byte	0x8e5
 10327 2114 49000000 		.4byte	0x49
 10328 2118 02       		.byte	0x2
 10329 2119 01       		.byte	0x1
 10330 211a 0B       		.byte	0xb
 10331 211b 04       		.byte	0x4
 10332 211c 21       		.uleb128 0x21
 10333 211d C33E0000 		.4byte	.LASF654
 10334 2121 07       		.byte	0x7
 10335 2122 E608     		.2byte	0x8e6
 10336 2124 49000000 		.4byte	0x49
 10337 2128 02       		.byte	0x2
 10338 2129 01       		.byte	0x1
 10339 212a 0A       		.byte	0xa
 10340 212b 04       		.byte	0x4
 10341 212c 0E       		.uleb128 0xe
 10342 212d 2D120000 		.4byte	.LASF655
 10343 2131 07       		.byte	0x7
 10344 2132 F708     		.2byte	0x8f7
 10345 2134 37000000 		.4byte	0x37
 10346 2138 05       		.byte	0x5
 10347 2139 0E       		.uleb128 0xe
 10348 213a AE400000 		.4byte	.LASF656
 10349 213e 07       		.byte	0x7
 10350 213f F808     		.2byte	0x8f8
 10351 2141 37000000 		.4byte	0x37
 10352 2145 06       		.byte	0x6
 10353 2146 0E       		.uleb128 0xe
 10354 2147 C2320000 		.4byte	.LASF657
 10355 214b 07       		.byte	0x7
 10356 214c F908     		.2byte	0x8f9
 10357 214e 37000000 		.4byte	0x37
 10358 2152 07       		.byte	0x7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 388


 10359 2153 0E       		.uleb128 0xe
 10360 2154 D30F0000 		.4byte	.LASF658
 10361 2158 07       		.byte	0x7
 10362 2159 FA08     		.2byte	0x8fa
 10363 215b 37000000 		.4byte	0x37
 10364 215f 08       		.byte	0x8
 10365 2160 0E       		.uleb128 0xe
 10366 2161 30130000 		.4byte	.LASF659
 10367 2165 07       		.byte	0x7
 10368 2166 FB08     		.2byte	0x8fb
 10369 2168 37000000 		.4byte	0x37
 10370 216c 09       		.byte	0x9
 10371 216d 0E       		.uleb128 0xe
 10372 216e 27200000 		.4byte	.LASF660
 10373 2172 07       		.byte	0x7
 10374 2173 FC08     		.2byte	0x8fc
 10375 2175 37000000 		.4byte	0x37
 10376 2179 0A       		.byte	0xa
 10377 217a 0E       		.uleb128 0xe
 10378 217b 00330000 		.4byte	.LASF661
 10379 217f 07       		.byte	0x7
 10380 2180 FD08     		.2byte	0x8fd
 10381 2182 37000000 		.4byte	0x37
 10382 2186 0B       		.byte	0xb
 10383 2187 0E       		.uleb128 0xe
 10384 2188 4B100000 		.4byte	.LASF137
 10385 218c 07       		.byte	0x7
 10386 218d FE08     		.2byte	0x8fe
 10387 218f 37000000 		.4byte	0x37
 10388 2193 0C       		.byte	0xc
 10389 2194 0E       		.uleb128 0xe
 10390 2195 B63E0000 		.4byte	.LASF662
 10391 2199 07       		.byte	0x7
 10392 219a FF08     		.2byte	0x8ff
 10393 219c 37000000 		.4byte	0x37
 10394 21a0 0D       		.byte	0xd
 10395 21a1 0E       		.uleb128 0xe
 10396 21a2 340D0000 		.4byte	.LASF663
 10397 21a6 07       		.byte	0x7
 10398 21a7 0009     		.2byte	0x900
 10399 21a9 37000000 		.4byte	0x37
 10400 21ad 0E       		.byte	0xe
 10401 21ae 00       		.byte	0
 10402 21af 16       		.uleb128 0x16
 10403 21b0 BF1D0000 		.4byte	.LASF636
 10404 21b4 07       		.byte	0x7
 10405 21b5 0609     		.2byte	0x906
 10406 21b7 CF1E0000 		.4byte	0x1ecf
 10407 21bb 0C       		.uleb128 0xc
 10408 21bc 11400000 		.4byte	.LASF664
 10409 21c0 A402     		.2byte	0x2a4
 10410 21c2 07       		.byte	0x7
 10411 21c3 0809     		.2byte	0x908
 10412 21c5 5B220000 		.4byte	0x225b
 10413 21c9 0E       		.uleb128 0xe
 10414 21ca 46060000 		.4byte	.LASF665
 10415 21ce 07       		.byte	0x7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 389


 10416 21cf 0909     		.2byte	0x909
 10417 21d1 63130000 		.4byte	0x1363
 10418 21d5 00       		.byte	0
 10419 21d6 0E       		.uleb128 0xe
 10420 21d7 6D270000 		.4byte	.LASF666
 10421 21db 07       		.byte	0x7
 10422 21dc 0A09     		.2byte	0x90a
 10423 21de 5B000000 		.4byte	0x5b
 10424 21e2 04       		.byte	0x4
 10425 21e3 0E       		.uleb128 0xe
 10426 21e4 741A0000 		.4byte	.LASF667
 10427 21e8 07       		.byte	0x7
 10428 21e9 0B09     		.2byte	0x90b
 10429 21eb 5B000000 		.4byte	0x5b
 10430 21ef 08       		.byte	0x8
 10431 21f0 0E       		.uleb128 0xe
 10432 21f1 03010000 		.4byte	.LASF668
 10433 21f5 07       		.byte	0x7
 10434 21f6 0C09     		.2byte	0x90c
 10435 21f8 5B000000 		.4byte	0x5b
 10436 21fc 0C       		.byte	0xc
 10437 21fd 0E       		.uleb128 0xe
 10438 21fe 10350000 		.4byte	.LASF669
 10439 2202 07       		.byte	0x7
 10440 2203 1309     		.2byte	0x913
 10441 2205 89130000 		.4byte	0x1389
 10442 2209 10       		.byte	0x10
 10443 220a 0E       		.uleb128 0xe
 10444 220b 71050000 		.4byte	.LASF670
 10445 220f 07       		.byte	0x7
 10446 2210 1409     		.2byte	0x914
 10447 2212 89130000 		.4byte	0x1389
 10448 2216 30       		.byte	0x30
 10449 2217 0E       		.uleb128 0xe
 10450 2218 29110000 		.4byte	.LASF106
 10451 221c 07       		.byte	0x7
 10452 221d 1509     		.2byte	0x915
 10453 221f 89130000 		.4byte	0x1389
 10454 2223 50       		.byte	0x50
 10455 2224 0E       		.uleb128 0xe
 10456 2225 DE010000 		.4byte	.LASF107
 10457 2229 07       		.byte	0x7
 10458 222a 1609     		.2byte	0x916
 10459 222c 37000000 		.4byte	0x37
 10460 2230 70       		.byte	0x70
 10461 2231 0E       		.uleb128 0xe
 10462 2232 D2030000 		.4byte	.LASF671
 10463 2236 07       		.byte	0x7
 10464 2237 1709     		.2byte	0x917
 10465 2239 5B220000 		.4byte	0x225b
 10466 223d 71       		.byte	0x71
 10467 223e 0F       		.uleb128 0xf
 10468 223f 4B400000 		.4byte	.LASF108
 10469 2243 07       		.byte	0x7
 10470 2244 1809     		.2byte	0x918
 10471 2246 671D0000 		.4byte	0x1d67
 10472 224a 7102     		.2byte	0x271
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 390


 10473 224c 0F       		.uleb128 0xf
 10474 224d 49040000 		.4byte	.LASF672
 10475 2251 07       		.byte	0x7
 10476 2252 1D09     		.2byte	0x91d
 10477 2254 37000000 		.4byte	0x37
 10478 2258 A102     		.2byte	0x2a1
 10479 225a 00       		.byte	0
 10480 225b 1A       		.uleb128 0x1a
 10481 225c 37000000 		.4byte	0x37
 10482 2260 6C220000 		.4byte	0x226c
 10483 2264 20       		.uleb128 0x20
 10484 2265 A2000000 		.4byte	0xa2
 10485 2269 FF01     		.2byte	0x1ff
 10486 226b 00       		.byte	0
 10487 226c 16       		.uleb128 0x16
 10488 226d 11400000 		.4byte	.LASF664
 10489 2271 07       		.byte	0x7
 10490 2272 1E09     		.2byte	0x91e
 10491 2274 BB210000 		.4byte	0x21bb
 10492 2278 11       		.uleb128 0x11
 10493 2279 3E2A0000 		.4byte	.LASF673
 10494 227d 05       		.byte	0x5
 10495 227e 07       		.byte	0x7
 10496 227f 7609     		.2byte	0x976
 10497 2281 BA220000 		.4byte	0x22ba
 10498 2285 0E       		.uleb128 0xe
 10499 2286 9D0C0000 		.4byte	.LASF330
 10500 228a 07       		.byte	0x7
 10501 228b 7709     		.2byte	0x977
 10502 228d 37000000 		.4byte	0x37
 10503 2291 00       		.byte	0
 10504 2292 0E       		.uleb128 0xe
 10505 2293 791D0000 		.4byte	.LASF674
 10506 2297 07       		.byte	0x7
 10507 2298 7809     		.2byte	0x978
 10508 229a 37000000 		.4byte	0x37
 10509 229e 01       		.byte	0x1
 10510 229f 0E       		.uleb128 0xe
 10511 22a0 FF2C0000 		.4byte	.LASF675
 10512 22a4 07       		.byte	0x7
 10513 22a5 7909     		.2byte	0x979
 10514 22a7 37000000 		.4byte	0x37
 10515 22ab 02       		.byte	0x2
 10516 22ac 0E       		.uleb128 0xe
 10517 22ad 63040000 		.4byte	.LASF549
 10518 22b1 07       		.byte	0x7
 10519 22b2 7A09     		.2byte	0x97a
 10520 22b4 BA220000 		.4byte	0x22ba
 10521 22b8 03       		.byte	0x3
 10522 22b9 00       		.byte	0
 10523 22ba 1A       		.uleb128 0x1a
 10524 22bb 37000000 		.4byte	0x37
 10525 22bf CA220000 		.4byte	0x22ca
 10526 22c3 1B       		.uleb128 0x1b
 10527 22c4 A2000000 		.4byte	0xa2
 10528 22c8 01       		.byte	0x1
 10529 22c9 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 391


 10530 22ca 16       		.uleb128 0x16
 10531 22cb 3E2A0000 		.4byte	.LASF673
 10532 22cf 07       		.byte	0x7
 10533 22d0 7B09     		.2byte	0x97b
 10534 22d2 78220000 		.4byte	0x2278
 10535 22d6 11       		.uleb128 0x11
 10536 22d7 26180000 		.4byte	.LASF676
 10537 22db 02       		.byte	0x2
 10538 22dc 07       		.byte	0x7
 10539 22dd B109     		.2byte	0x9b1
 10540 22df C4230000 		.4byte	0x23c4
 10541 22e3 21       		.uleb128 0x21
 10542 22e4 C2250000 		.4byte	.LASF677
 10543 22e8 07       		.byte	0x7
 10544 22e9 B209     		.2byte	0x9b2
 10545 22eb 49000000 		.4byte	0x49
 10546 22ef 02       		.byte	0x2
 10547 22f0 01       		.byte	0x1
 10548 22f1 0F       		.byte	0xf
 10549 22f2 00       		.byte	0
 10550 22f3 21       		.uleb128 0x21
 10551 22f4 8E0D0000 		.4byte	.LASF678
 10552 22f8 07       		.byte	0x7
 10553 22f9 B309     		.2byte	0x9b3
 10554 22fb 49000000 		.4byte	0x49
 10555 22ff 02       		.byte	0x2
 10556 2300 01       		.byte	0x1
 10557 2301 0E       		.byte	0xe
 10558 2302 00       		.byte	0
 10559 2303 21       		.uleb128 0x21
 10560 2304 BC200000 		.4byte	.LASF679
 10561 2308 07       		.byte	0x7
 10562 2309 B409     		.2byte	0x9b4
 10563 230b 49000000 		.4byte	0x49
 10564 230f 02       		.byte	0x2
 10565 2310 01       		.byte	0x1
 10566 2311 0D       		.byte	0xd
 10567 2312 00       		.byte	0
 10568 2313 21       		.uleb128 0x21
 10569 2314 B2150000 		.4byte	.LASF680
 10570 2318 07       		.byte	0x7
 10571 2319 B509     		.2byte	0x9b5
 10572 231b 49000000 		.4byte	0x49
 10573 231f 02       		.byte	0x2
 10574 2320 01       		.byte	0x1
 10575 2321 0C       		.byte	0xc
 10576 2322 00       		.byte	0
 10577 2323 21       		.uleb128 0x21
 10578 2324 8E120000 		.4byte	.LASF681
 10579 2328 07       		.byte	0x7
 10580 2329 B609     		.2byte	0x9b6
 10581 232b 49000000 		.4byte	0x49
 10582 232f 02       		.byte	0x2
 10583 2330 01       		.byte	0x1
 10584 2331 0B       		.byte	0xb
 10585 2332 00       		.byte	0
 10586 2333 21       		.uleb128 0x21
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 392


 10587 2334 33110000 		.4byte	.LASF682
 10588 2338 07       		.byte	0x7
 10589 2339 B709     		.2byte	0x9b7
 10590 233b 49000000 		.4byte	0x49
 10591 233f 02       		.byte	0x2
 10592 2340 01       		.byte	0x1
 10593 2341 0A       		.byte	0xa
 10594 2342 00       		.byte	0
 10595 2343 21       		.uleb128 0x21
 10596 2344 E9150000 		.4byte	.LASF683
 10597 2348 07       		.byte	0x7
 10598 2349 B809     		.2byte	0x9b8
 10599 234b 49000000 		.4byte	0x49
 10600 234f 02       		.byte	0x2
 10601 2350 01       		.byte	0x1
 10602 2351 09       		.byte	0x9
 10603 2352 00       		.byte	0
 10604 2353 21       		.uleb128 0x21
 10605 2354 950B0000 		.4byte	.LASF684
 10606 2358 07       		.byte	0x7
 10607 2359 B909     		.2byte	0x9b9
 10608 235b 49000000 		.4byte	0x49
 10609 235f 02       		.byte	0x2
 10610 2360 01       		.byte	0x1
 10611 2361 08       		.byte	0x8
 10612 2362 00       		.byte	0
 10613 2363 21       		.uleb128 0x21
 10614 2364 EE350000 		.4byte	.LASF685
 10615 2368 07       		.byte	0x7
 10616 2369 BA09     		.2byte	0x9ba
 10617 236b 49000000 		.4byte	0x49
 10618 236f 02       		.byte	0x2
 10619 2370 01       		.byte	0x1
 10620 2371 07       		.byte	0x7
 10621 2372 00       		.byte	0
 10622 2373 21       		.uleb128 0x21
 10623 2374 D6280000 		.4byte	.LASF686
 10624 2378 07       		.byte	0x7
 10625 2379 BB09     		.2byte	0x9bb
 10626 237b 49000000 		.4byte	0x49
 10627 237f 02       		.byte	0x2
 10628 2380 01       		.byte	0x1
 10629 2381 06       		.byte	0x6
 10630 2382 00       		.byte	0
 10631 2383 21       		.uleb128 0x21
 10632 2384 E73D0000 		.4byte	.LASF687
 10633 2388 07       		.byte	0x7
 10634 2389 BC09     		.2byte	0x9bc
 10635 238b 49000000 		.4byte	0x49
 10636 238f 02       		.byte	0x2
 10637 2390 01       		.byte	0x1
 10638 2391 05       		.byte	0x5
 10639 2392 00       		.byte	0
 10640 2393 21       		.uleb128 0x21
 10641 2394 EC300000 		.4byte	.LASF688
 10642 2398 07       		.byte	0x7
 10643 2399 BD09     		.2byte	0x9bd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 393


 10644 239b 49000000 		.4byte	0x49
 10645 239f 02       		.byte	0x2
 10646 23a0 01       		.byte	0x1
 10647 23a1 04       		.byte	0x4
 10648 23a2 00       		.byte	0
 10649 23a3 21       		.uleb128 0x21
 10650 23a4 70010000 		.4byte	.LASF689
 10651 23a8 07       		.byte	0x7
 10652 23a9 BE09     		.2byte	0x9be
 10653 23ab 49000000 		.4byte	0x49
 10654 23af 02       		.byte	0x2
 10655 23b0 01       		.byte	0x1
 10656 23b1 03       		.byte	0x3
 10657 23b2 00       		.byte	0
 10658 23b3 21       		.uleb128 0x21
 10659 23b4 440C0000 		.4byte	.LASF690
 10660 23b8 07       		.byte	0x7
 10661 23b9 BF09     		.2byte	0x9bf
 10662 23bb 49000000 		.4byte	0x49
 10663 23bf 02       		.byte	0x2
 10664 23c0 01       		.byte	0x1
 10665 23c1 02       		.byte	0x2
 10666 23c2 00       		.byte	0
 10667 23c3 00       		.byte	0
 10668 23c4 16       		.uleb128 0x16
 10669 23c5 26180000 		.4byte	.LASF676
 10670 23c9 07       		.byte	0x7
 10671 23ca C009     		.2byte	0x9c0
 10672 23cc D6220000 		.4byte	0x22d6
 10673 23d0 11       		.uleb128 0x11
 10674 23d1 181A0000 		.4byte	.LASF691
 10675 23d5 D4       		.byte	0xd4
 10676 23d6 07       		.byte	0x7
 10677 23d7 C409     		.2byte	0x9c4
 10678 23d9 05240000 		.4byte	0x2405
 10679 23dd 0E       		.uleb128 0xe
 10680 23de 41170000 		.4byte	.LASF692
 10681 23e2 07       		.byte	0x7
 10682 23e3 C509     		.2byte	0x9c5
 10683 23e5 5B1D0000 		.4byte	0x1d5b
 10684 23e9 00       		.byte	0
 10685 23ea 0E       		.uleb128 0xe
 10686 23eb 4F150000 		.4byte	.LASF693
 10687 23ef 07       		.byte	0x7
 10688 23f0 C609     		.2byte	0x9c6
 10689 23f2 5B1D0000 		.4byte	0x1d5b
 10690 23f6 34       		.byte	0x34
 10691 23f7 0E       		.uleb128 0xe
 10692 23f8 313B0000 		.4byte	.LASF694
 10693 23fc 07       		.byte	0x7
 10694 23fd D009     		.2byte	0x9d0
 10695 23ff F50D0000 		.4byte	0xdf5
 10696 2403 68       		.byte	0x68
 10697 2404 00       		.byte	0
 10698 2405 16       		.uleb128 0x16
 10699 2406 181A0000 		.4byte	.LASF691
 10700 240a 07       		.byte	0x7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 394


 10701 240b D809     		.2byte	0x9d8
 10702 240d D0230000 		.4byte	0x23d0
 10703 2411 06       		.uleb128 0x6
 10704 2412 04       		.byte	0x4
 10705 2413 D2040000 		.4byte	0x4d2
 10706 2417 06       		.uleb128 0x6
 10707 2418 04       		.byte	0x4
 10708 2419 6C220000 		.4byte	0x226c
 10709 241d 06       		.uleb128 0x6
 10710 241e 04       		.byte	0x4
 10711 241f 05240000 		.4byte	0x2405
 10712 2423 06       		.uleb128 0x6
 10713 2424 04       		.byte	0x4
 10714 2425 5F0E0000 		.4byte	0xe5f
 10715 2429 11       		.uleb128 0x11
 10716 242a 5C1F0000 		.4byte	.LASF695
 10717 242e 80       		.byte	0x80
 10718 242f 07       		.byte	0x7
 10719 2430 910A     		.2byte	0xa91
 10720 2432 84240000 		.4byte	0x2484
 10721 2436 0E       		.uleb128 0xe
 10722 2437 CD200000 		.4byte	.LASF159
 10723 243b 07       		.byte	0x7
 10724 243c 920A     		.2byte	0xa92
 10725 243e 84240000 		.4byte	0x2484
 10726 2442 00       		.byte	0
 10727 2443 0D       		.uleb128 0xd
 10728 2444 697600   		.ascii	"iv\000"
 10729 2447 07       		.byte	0x7
 10730 2448 930A     		.2byte	0xa93
 10731 244a 89130000 		.4byte	0x1389
 10732 244e 50       		.byte	0x50
 10733 244f 0E       		.uleb128 0xe
 10734 2450 542D0000 		.4byte	.LASF696
 10735 2454 07       		.byte	0x7
 10736 2455 940A     		.2byte	0xa94
 10737 2457 5B000000 		.4byte	0x5b
 10738 245b 70       		.byte	0x70
 10739 245c 0E       		.uleb128 0xe
 10740 245d 47270000 		.4byte	.LASF697
 10741 2461 07       		.byte	0x7
 10742 2462 950A     		.2byte	0xa95
 10743 2464 8D000000 		.4byte	0x8d
 10744 2468 74       		.byte	0x74
 10745 2469 0D       		.uleb128 0xd
 10746 246a 73657400 		.ascii	"set\000"
 10747 246e 07       		.byte	0x7
 10748 246f 960A     		.2byte	0xa96
 10749 2471 37000000 		.4byte	0x37
 10750 2475 78       		.byte	0x78
 10751 2476 0D       		.uleb128 0xd
 10752 2477 63747800 		.ascii	"ctx\000"
 10753 247b 07       		.byte	0x7
 10754 247c 970A     		.2byte	0xa97
 10755 247e 11240000 		.4byte	0x2411
 10756 2482 7C       		.byte	0x7c
 10757 2483 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 395


 10758 2484 1A       		.uleb128 0x1a
 10759 2485 B7000000 		.4byte	0xb7
 10760 2489 94240000 		.4byte	0x2494
 10761 248d 1B       		.uleb128 0x1b
 10762 248e A2000000 		.4byte	0xa2
 10763 2492 4F       		.byte	0x4f
 10764 2493 00       		.byte	0
 10765 2494 16       		.uleb128 0x16
 10766 2495 5C1F0000 		.4byte	.LASF695
 10767 2499 07       		.byte	0x7
 10768 249a 980A     		.2byte	0xa98
 10769 249c 29240000 		.4byte	0x2429
 10770 24a0 09       		.uleb128 0x9
 10771 24a1 02       		.byte	0x2
 10772 24a2 0D       		.byte	0xd
 10773 24a3 27       		.byte	0x27
 10774 24a4 B9270000 		.4byte	0x27b9
 10775 24a8 0A       		.uleb128 0xa
 10776 24a9 7D140000 		.4byte	.LASF698
 10777 24ad 9C7F     		.sleb128 -100
 10778 24af 0A       		.uleb128 0xa
 10779 24b0 2B0F0000 		.4byte	.LASF699
 10780 24b4 9B7F     		.sleb128 -101
 10781 24b6 0A       		.uleb128 0xa
 10782 24b7 E8050000 		.4byte	.LASF700
 10783 24bb 9A7F     		.sleb128 -102
 10784 24bd 0A       		.uleb128 0xa
 10785 24be 18400000 		.4byte	.LASF701
 10786 24c2 997F     		.sleb128 -103
 10787 24c4 0A       		.uleb128 0xa
 10788 24c5 FE270000 		.4byte	.LASF702
 10789 24c9 987F     		.sleb128 -104
 10790 24cb 0A       		.uleb128 0xa
 10791 24cc BA350000 		.4byte	.LASF703
 10792 24d0 977F     		.sleb128 -105
 10793 24d2 0A       		.uleb128 0xa
 10794 24d3 451A0000 		.4byte	.LASF704
 10795 24d7 967F     		.sleb128 -106
 10796 24d9 0A       		.uleb128 0xa
 10797 24da 692B0000 		.4byte	.LASF705
 10798 24de 927F     		.sleb128 -110
 10799 24e0 0A       		.uleb128 0xa
 10800 24e1 BA280000 		.4byte	.LASF706
 10801 24e5 917F     		.sleb128 -111
 10802 24e7 0A       		.uleb128 0xa
 10803 24e8 802B0000 		.4byte	.LASF707
 10804 24ec 907F     		.sleb128 -112
 10805 24ee 0A       		.uleb128 0xa
 10806 24ef FE3B0000 		.4byte	.LASF708
 10807 24f3 8F7F     		.sleb128 -113
 10808 24f5 0A       		.uleb128 0xa
 10809 24f6 FA400000 		.4byte	.LASF709
 10810 24fa 8E7F     		.sleb128 -114
 10811 24fc 0A       		.uleb128 0xa
 10812 24fd 5A0A0000 		.4byte	.LASF710
 10813 2501 8D7F     		.sleb128 -115
 10814 2503 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 396


 10815 2504 6A040000 		.4byte	.LASF711
 10816 2508 8C7F     		.sleb128 -116
 10817 250a 0A       		.uleb128 0xa
 10818 250b 332F0000 		.4byte	.LASF712
 10819 250f 8B7F     		.sleb128 -117
 10820 2511 0A       		.uleb128 0xa
 10821 2512 221A0000 		.4byte	.LASF713
 10822 2516 8A7F     		.sleb128 -118
 10823 2518 0A       		.uleb128 0xa
 10824 2519 18140000 		.4byte	.LASF714
 10825 251d 897F     		.sleb128 -119
 10826 251f 0A       		.uleb128 0xa
 10827 2520 CD1E0000 		.4byte	.LASF715
 10828 2524 887F     		.sleb128 -120
 10829 2526 0A       		.uleb128 0xa
 10830 2527 162A0000 		.4byte	.LASF716
 10831 252b 877F     		.sleb128 -121
 10832 252d 0A       		.uleb128 0xa
 10833 252e AF120000 		.4byte	.LASF717
 10834 2532 837F     		.sleb128 -125
 10835 2534 0A       		.uleb128 0xa
 10836 2535 64100000 		.4byte	.LASF718
 10837 2539 FE7E     		.sleb128 -130
 10838 253b 0A       		.uleb128 0xa
 10839 253c D8160000 		.4byte	.LASF719
 10840 2540 FD7E     		.sleb128 -131
 10841 2542 0A       		.uleb128 0xa
 10842 2543 47410000 		.4byte	.LASF720
 10843 2547 FC7E     		.sleb128 -132
 10844 2549 0A       		.uleb128 0xa
 10845 254a DA070000 		.4byte	.LASF721
 10846 254e FB7E     		.sleb128 -133
 10847 2550 0A       		.uleb128 0xa
 10848 2551 FE030000 		.4byte	.LASF722
 10849 2555 FA7E     		.sleb128 -134
 10850 2557 0A       		.uleb128 0xa
 10851 2558 5E210000 		.4byte	.LASF723
 10852 255c F97E     		.sleb128 -135
 10853 255e 0A       		.uleb128 0xa
 10854 255f F51D0000 		.4byte	.LASF724
 10855 2563 F87E     		.sleb128 -136
 10856 2565 0A       		.uleb128 0xa
 10857 2566 F11A0000 		.4byte	.LASF725
 10858 256a F77E     		.sleb128 -137
 10859 256c 0A       		.uleb128 0xa
 10860 256d 320B0000 		.4byte	.LASF726
 10861 2571 F67E     		.sleb128 -138
 10862 2573 0A       		.uleb128 0xa
 10863 2574 16050000 		.4byte	.LASF727
 10864 2578 F57E     		.sleb128 -139
 10865 257a 0A       		.uleb128 0xa
 10866 257b 93360000 		.4byte	.LASF728
 10867 257f F47E     		.sleb128 -140
 10868 2581 0A       		.uleb128 0xa
 10869 2582 8E310000 		.4byte	.LASF729
 10870 2586 F37E     		.sleb128 -141
 10871 2588 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 397


 10872 2589 732B0000 		.4byte	.LASF730
 10873 258d F27E     		.sleb128 -142
 10874 258f 0A       		.uleb128 0xa
 10875 2590 6A140000 		.4byte	.LASF731
 10876 2594 F17E     		.sleb128 -143
 10877 2596 0A       		.uleb128 0xa
 10878 2597 14170000 		.4byte	.LASF732
 10879 259b F07E     		.sleb128 -144
 10880 259d 0A       		.uleb128 0xa
 10881 259e C00B0000 		.4byte	.LASF733
 10882 25a2 EF7E     		.sleb128 -145
 10883 25a4 0A       		.uleb128 0xa
 10884 25a5 64310000 		.4byte	.LASF734
 10885 25a9 EE7E     		.sleb128 -146
 10886 25ab 0A       		.uleb128 0xa
 10887 25ac 0E0F0000 		.4byte	.LASF735
 10888 25b0 ED7E     		.sleb128 -147
 10889 25b2 0A       		.uleb128 0xa
 10890 25b3 24250000 		.4byte	.LASF736
 10891 25b7 EC7E     		.sleb128 -148
 10892 25b9 0A       		.uleb128 0xa
 10893 25ba BC1F0000 		.4byte	.LASF737
 10894 25be EB7E     		.sleb128 -149
 10895 25c0 0A       		.uleb128 0xa
 10896 25c1 2D330000 		.4byte	.LASF738
 10897 25c5 EA7E     		.sleb128 -150
 10898 25c7 0A       		.uleb128 0xa
 10899 25c8 202A0000 		.4byte	.LASF739
 10900 25cc E97E     		.sleb128 -151
 10901 25ce 0A       		.uleb128 0xa
 10902 25cf C5050000 		.4byte	.LASF740
 10903 25d3 E87E     		.sleb128 -152
 10904 25d5 0A       		.uleb128 0xa
 10905 25d6 65350000 		.4byte	.LASF741
 10906 25da E77E     		.sleb128 -153
 10907 25dc 0A       		.uleb128 0xa
 10908 25dd C70F0000 		.4byte	.LASF742
 10909 25e1 E67E     		.sleb128 -154
 10910 25e3 0A       		.uleb128 0xa
 10911 25e4 91290000 		.4byte	.LASF743
 10912 25e8 E57E     		.sleb128 -155
 10913 25ea 0A       		.uleb128 0xa
 10914 25eb 3F300000 		.4byte	.LASF744
 10915 25ef E47E     		.sleb128 -156
 10916 25f1 0A       		.uleb128 0xa
 10917 25f2 783E0000 		.4byte	.LASF745
 10918 25f6 E37E     		.sleb128 -157
 10919 25f8 0A       		.uleb128 0xa
 10920 25f9 7A0A0000 		.4byte	.LASF746
 10921 25fd E27E     		.sleb128 -158
 10922 25ff 0A       		.uleb128 0xa
 10923 2600 B63F0000 		.4byte	.LASF747
 10924 2604 E17E     		.sleb128 -159
 10925 2606 0A       		.uleb128 0xa
 10926 2607 BE2E0000 		.4byte	.LASF748
 10927 260b E07E     		.sleb128 -160
 10928 260d 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 398


 10929 260e EF170000 		.4byte	.LASF749
 10930 2612 D67E     		.sleb128 -170
 10931 2614 0A       		.uleb128 0xa
 10932 2615 A41F0000 		.4byte	.LASF750
 10933 2619 D57E     		.sleb128 -171
 10934 261b 0A       		.uleb128 0xa
 10935 261c E93C0000 		.4byte	.LASF751
 10936 2620 D47E     		.sleb128 -172
 10937 2622 0A       		.uleb128 0xa
 10938 2623 7C350000 		.4byte	.LASF752
 10939 2627 D37E     		.sleb128 -173
 10940 2629 0A       		.uleb128 0xa
 10941 262a AF1D0000 		.4byte	.LASF753
 10942 262e D27E     		.sleb128 -174
 10943 2630 0A       		.uleb128 0xa
 10944 2631 8C260000 		.4byte	.LASF754
 10945 2635 D17E     		.sleb128 -175
 10946 2637 0A       		.uleb128 0xa
 10947 2638 4E0A0000 		.4byte	.LASF755
 10948 263c D07E     		.sleb128 -176
 10949 263e 0A       		.uleb128 0xa
 10950 263f 58040000 		.4byte	.LASF756
 10951 2643 CF7E     		.sleb128 -177
 10952 2645 0A       		.uleb128 0xa
 10953 2646 C9060000 		.4byte	.LASF757
 10954 264a CC7E     		.sleb128 -180
 10955 264c 0A       		.uleb128 0xa
 10956 264d 26190000 		.4byte	.LASF758
 10957 2651 CB7E     		.sleb128 -181
 10958 2653 0A       		.uleb128 0xa
 10959 2654 F2340000 		.4byte	.LASF759
 10960 2658 CA7E     		.sleb128 -182
 10961 265a 0A       		.uleb128 0xa
 10962 265b AA0A0000 		.4byte	.LASF760
 10963 265f C97E     		.sleb128 -183
 10964 2661 0A       		.uleb128 0xa
 10965 2662 A4050000 		.4byte	.LASF761
 10966 2666 C87E     		.sleb128 -184
 10967 2668 0A       		.uleb128 0xa
 10968 2669 652D0000 		.4byte	.LASF762
 10969 266d C77E     		.sleb128 -185
 10970 266f 0A       		.uleb128 0xa
 10971 2670 19030000 		.4byte	.LASF763
 10972 2674 C67E     		.sleb128 -186
 10973 2676 0A       		.uleb128 0xa
 10974 2677 262B0000 		.4byte	.LASF764
 10975 267b C57E     		.sleb128 -187
 10976 267d 0A       		.uleb128 0xa
 10977 267e B83A0000 		.4byte	.LASF765
 10978 2682 C47E     		.sleb128 -188
 10979 2684 0A       		.uleb128 0xa
 10980 2685 01020000 		.4byte	.LASF766
 10981 2689 C37E     		.sleb128 -189
 10982 268b 0A       		.uleb128 0xa
 10983 268c 02270000 		.4byte	.LASF767
 10984 2690 C27E     		.sleb128 -190
 10985 2692 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 399


 10986 2693 3A120000 		.4byte	.LASF768
 10987 2697 C17E     		.sleb128 -191
 10988 2699 0A       		.uleb128 0xa
 10989 269a 1D070000 		.4byte	.LASF769
 10990 269e C07E     		.sleb128 -192
 10991 26a0 0A       		.uleb128 0xa
 10992 26a1 23400000 		.4byte	.LASF770
 10993 26a5 BF7E     		.sleb128 -193
 10994 26a7 0A       		.uleb128 0xa
 10995 26a8 28350000 		.4byte	.LASF771
 10996 26ac BE7E     		.sleb128 -194
 10997 26ae 0A       		.uleb128 0xa
 10998 26af CB150000 		.4byte	.LASF772
 10999 26b3 BD7E     		.sleb128 -195
 11000 26b5 0A       		.uleb128 0xa
 11001 26b6 B00E0000 		.4byte	.LASF773
 11002 26ba BC7E     		.sleb128 -196
 11003 26bc 0A       		.uleb128 0xa
 11004 26bd 70220000 		.4byte	.LASF774
 11005 26c1 BB7E     		.sleb128 -197
 11006 26c3 0A       		.uleb128 0xa
 11007 26c4 892A0000 		.4byte	.LASF775
 11008 26c8 BA7E     		.sleb128 -198
 11009 26ca 0A       		.uleb128 0xa
 11010 26cb D41D0000 		.4byte	.LASF776
 11011 26cf B97E     		.sleb128 -199
 11012 26d1 0A       		.uleb128 0xa
 11013 26d2 DD020000 		.4byte	.LASF777
 11014 26d6 B87E     		.sleb128 -200
 11015 26d8 0A       		.uleb128 0xa
 11016 26d9 5E1D0000 		.4byte	.LASF778
 11017 26dd B77E     		.sleb128 -201
 11018 26df 0A       		.uleb128 0xa
 11019 26e0 52110000 		.4byte	.LASF779
 11020 26e4 B67E     		.sleb128 -202
 11021 26e6 0A       		.uleb128 0xa
 11022 26e7 500B0000 		.4byte	.LASF780
 11023 26eb B57E     		.sleb128 -203
 11024 26ed 0A       		.uleb128 0xa
 11025 26ee 23010000 		.4byte	.LASF781
 11026 26f2 B47E     		.sleb128 -204
 11027 26f4 0A       		.uleb128 0xa
 11028 26f5 0C220000 		.4byte	.LASF782
 11029 26f9 B37E     		.sleb128 -205
 11030 26fb 0A       		.uleb128 0xa
 11031 26fc CF210000 		.4byte	.LASF783
 11032 2700 B27E     		.sleb128 -206
 11033 2702 0A       		.uleb128 0xa
 11034 2703 D2200000 		.4byte	.LASF784
 11035 2707 B17E     		.sleb128 -207
 11036 2709 0A       		.uleb128 0xa
 11037 270a 1B0F0000 		.4byte	.LASF785
 11038 270e B07E     		.sleb128 -208
 11039 2710 0A       		.uleb128 0xa
 11040 2711 41310000 		.4byte	.LASF786
 11041 2715 AF7E     		.sleb128 -209
 11042 2717 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 400


 11043 2718 6B090000 		.4byte	.LASF787
 11044 271c AE7E     		.sleb128 -210
 11045 271e 0A       		.uleb128 0xa
 11046 271f 42200000 		.4byte	.LASF788
 11047 2723 AD7E     		.sleb128 -211
 11048 2725 0A       		.uleb128 0xa
 11049 2726 87210000 		.4byte	.LASF789
 11050 272a AC7E     		.sleb128 -212
 11051 272c 0A       		.uleb128 0xa
 11052 272d 762F0000 		.4byte	.LASF790
 11053 2731 AB7E     		.sleb128 -213
 11054 2733 0A       		.uleb128 0xa
 11055 2734 0F180000 		.4byte	.LASF791
 11056 2738 AA7E     		.sleb128 -214
 11057 273a 0A       		.uleb128 0xa
 11058 273b 13410000 		.4byte	.LASF792
 11059 273f A97E     		.sleb128 -215
 11060 2741 0A       		.uleb128 0xa
 11061 2742 9C310000 		.4byte	.LASF793
 11062 2746 A87E     		.sleb128 -216
 11063 2748 0A       		.uleb128 0xa
 11064 2749 07140000 		.4byte	.LASF794
 11065 274d A77E     		.sleb128 -217
 11066 274f 0A       		.uleb128 0xa
 11067 2750 720D0000 		.4byte	.LASF795
 11068 2754 A67E     		.sleb128 -218
 11069 2756 0A       		.uleb128 0xa
 11070 2757 E2410000 		.4byte	.LASF796
 11071 275b A57E     		.sleb128 -219
 11072 275d 0A       		.uleb128 0xa
 11073 275e F50E0000 		.4byte	.LASF797
 11074 2762 A47E     		.sleb128 -220
 11075 2764 0A       		.uleb128 0xa
 11076 2765 36250000 		.4byte	.LASF798
 11077 2769 A37E     		.sleb128 -221
 11078 276b 0A       		.uleb128 0xa
 11079 276c 930F0000 		.4byte	.LASF799
 11080 2770 A17E     		.sleb128 -223
 11081 2772 0A       		.uleb128 0xa
 11082 2773 080D0000 		.4byte	.LASF800
 11083 2777 A07E     		.sleb128 -224
 11084 2779 0A       		.uleb128 0xa
 11085 277a BC0C0000 		.4byte	.LASF801
 11086 277e 9F7E     		.sleb128 -225
 11087 2780 0A       		.uleb128 0xa
 11088 2781 4E130000 		.4byte	.LASF802
 11089 2785 9E7E     		.sleb128 -226
 11090 2787 0A       		.uleb128 0xa
 11091 2788 E0390000 		.4byte	.LASF803
 11092 278c 9D7E     		.sleb128 -227
 11093 278e 0A       		.uleb128 0xa
 11094 278f C5220000 		.4byte	.LASF804
 11095 2793 9C7E     		.sleb128 -228
 11096 2795 0A       		.uleb128 0xa
 11097 2796 F22F0000 		.4byte	.LASF805
 11098 279a 9B7E     		.sleb128 -229
 11099 279c 0A       		.uleb128 0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 401


 11100 279d C50A0000 		.4byte	.LASF806
 11101 27a1 9A7E     		.sleb128 -230
 11102 27a3 0A       		.uleb128 0xa
 11103 27a4 881D0000 		.4byte	.LASF807
 11104 27a8 997E     		.sleb128 -231
 11105 27aa 0A       		.uleb128 0xa
 11106 27ab FF220000 		.4byte	.LASF808
 11107 27af 987E     		.sleb128 -232
 11108 27b1 0A       		.uleb128 0xa
 11109 27b2 5A060000 		.4byte	.LASF809
 11110 27b6 D47D     		.sleb128 -300
 11111 27b8 00       		.byte	0
 11112 27b9 15       		.uleb128 0x15
 11113 27ba D1270000 		.4byte	.LASF810
 11114 27be 02       		.byte	0x2
 11115 27bf 0E       		.byte	0xe
 11116 27c0 21       		.byte	0x21
 11117 27c1 B32A0000 		.4byte	0x2ab3
 11118 27c5 0A       		.uleb128 0xa
 11119 27c6 EB290000 		.4byte	.LASF811
 11120 27ca D37D     		.sleb128 -301
 11121 27cc 0A       		.uleb128 0xa
 11122 27cd 290C0000 		.4byte	.LASF812
 11123 27d1 D27D     		.sleb128 -302
 11124 27d3 0A       		.uleb128 0xa
 11125 27d4 1E2D0000 		.4byte	.LASF813
 11126 27d8 D17D     		.sleb128 -303
 11127 27da 0A       		.uleb128 0xa
 11128 27db 0F0D0000 		.4byte	.LASF814
 11129 27df D07D     		.sleb128 -304
 11130 27e1 0A       		.uleb128 0xa
 11131 27e2 F10A0000 		.4byte	.LASF815
 11132 27e6 CF7D     		.sleb128 -305
 11133 27e8 0A       		.uleb128 0xa
 11134 27e9 64130000 		.4byte	.LASF816
 11135 27ed CE7D     		.sleb128 -306
 11136 27ef 0A       		.uleb128 0xa
 11137 27f0 F02A0000 		.4byte	.LASF817
 11138 27f4 CD7D     		.sleb128 -307
 11139 27f6 0A       		.uleb128 0xa
 11140 27f7 E3140000 		.4byte	.LASF818
 11141 27fb CC7D     		.sleb128 -308
 11142 27fd 0A       		.uleb128 0xa
 11143 27fe 812E0000 		.4byte	.LASF819
 11144 2802 CB7D     		.sleb128 -309
 11145 2804 0A       		.uleb128 0xa
 11146 2805 74000000 		.4byte	.LASF820
 11147 2809 CA7D     		.sleb128 -310
 11148 280b 0A       		.uleb128 0xa
 11149 280c 3E210000 		.4byte	.LASF821
 11150 2810 C97D     		.sleb128 -311
 11151 2812 0A       		.uleb128 0xa
 11152 2813 3D400000 		.4byte	.LASF822
 11153 2817 C87D     		.sleb128 -312
 11154 2819 0A       		.uleb128 0xa
 11155 281a F4330000 		.4byte	.LASF823
 11156 281e C77D     		.sleb128 -313
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 402


 11157 2820 0A       		.uleb128 0xa
 11158 2821 A1120000 		.4byte	.LASF824
 11159 2825 C67D     		.sleb128 -314
 11160 2827 0A       		.uleb128 0xa
 11161 2828 A40E0000 		.4byte	.LASF825
 11162 282c C57D     		.sleb128 -315
 11163 282e 0A       		.uleb128 0xa
 11164 282f 4F1B0000 		.4byte	.LASF826
 11165 2833 C47D     		.sleb128 -316
 11166 2835 0A       		.uleb128 0xa
 11167 2836 43110000 		.4byte	.LASF827
 11168 283a C37D     		.sleb128 -317
 11169 283c 0A       		.uleb128 0xa
 11170 283d 3C0A0000 		.4byte	.LASF828
 11171 2841 C27D     		.sleb128 -318
 11172 2843 0A       		.uleb128 0xa
 11173 2844 DB2C0000 		.4byte	.LASF829
 11174 2848 C17D     		.sleb128 -319
 11175 284a 0A       		.uleb128 0xa
 11176 284b CD2B0000 		.4byte	.LASF830
 11177 284f C07D     		.sleb128 -320
 11178 2851 0A       		.uleb128 0xa
 11179 2852 7F2A0000 		.4byte	.LASF831
 11180 2856 BF7D     		.sleb128 -321
 11181 2858 0A       		.uleb128 0xa
 11182 2859 6C2E0000 		.4byte	.LASF832
 11183 285d BE7D     		.sleb128 -322
 11184 285f 0A       		.uleb128 0xa
 11185 2860 1D130000 		.4byte	.LASF833
 11186 2864 BD7D     		.sleb128 -323
 11187 2866 0A       		.uleb128 0xa
 11188 2867 65210000 		.4byte	.LASF834
 11189 286b BC7D     		.sleb128 -324
 11190 286d 0A       		.uleb128 0xa
 11191 286e CB1A0000 		.4byte	.LASF835
 11192 2872 BB7D     		.sleb128 -325
 11193 2874 0A       		.uleb128 0xa
 11194 2875 151C0000 		.4byte	.LASF836
 11195 2879 BA7D     		.sleb128 -326
 11196 287b 0A       		.uleb128 0xa
 11197 287c 811A0000 		.4byte	.LASF837
 11198 2880 B97D     		.sleb128 -327
 11199 2882 0A       		.uleb128 0xa
 11200 2883 00340000 		.4byte	.LASF838
 11201 2887 B87D     		.sleb128 -328
 11202 2889 0A       		.uleb128 0xa
 11203 288a 75210000 		.4byte	.LASF839
 11204 288e B77D     		.sleb128 -329
 11205 2890 0A       		.uleb128 0xa
 11206 2891 96250000 		.4byte	.LASF840
 11207 2895 B67D     		.sleb128 -330
 11208 2897 0A       		.uleb128 0xa
 11209 2898 502A0000 		.4byte	.LASF841
 11210 289c B57D     		.sleb128 -331
 11211 289e 0A       		.uleb128 0xa
 11212 289f ED130000 		.4byte	.LASF842
 11213 28a3 B47D     		.sleb128 -332
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 403


 11214 28a5 0A       		.uleb128 0xa
 11215 28a6 C3340000 		.4byte	.LASF843
 11216 28aa B37D     		.sleb128 -333
 11217 28ac 0A       		.uleb128 0xa
 11218 28ad B3380000 		.4byte	.LASF844
 11219 28b1 B27D     		.sleb128 -334
 11220 28b3 0A       		.uleb128 0xa
 11221 28b4 560C0000 		.4byte	.LASF845
 11222 28b8 B17D     		.sleb128 -335
 11223 28ba 0A       		.uleb128 0xa
 11224 28bb 9F170000 		.4byte	.LASF846
 11225 28bf B07D     		.sleb128 -336
 11226 28c1 0A       		.uleb128 0xa
 11227 28c2 08050000 		.4byte	.LASF847
 11228 28c6 AF7D     		.sleb128 -337
 11229 28c8 0A       		.uleb128 0xa
 11230 28c9 C0070000 		.4byte	.LASF848
 11231 28cd AE7D     		.sleb128 -338
 11232 28cf 0A       		.uleb128 0xa
 11233 28d0 3A090000 		.4byte	.LASF849
 11234 28d4 AD7D     		.sleb128 -339
 11235 28d6 0A       		.uleb128 0xa
 11236 28d7 97140000 		.4byte	.LASF850
 11237 28db AC7D     		.sleb128 -340
 11238 28dd 0A       		.uleb128 0xa
 11239 28de 11210000 		.4byte	.LASF851
 11240 28e2 AB7D     		.sleb128 -341
 11241 28e4 0A       		.uleb128 0xa
 11242 28e5 743A0000 		.4byte	.LASF852
 11243 28e9 AA7D     		.sleb128 -342
 11244 28eb 0A       		.uleb128 0xa
 11245 28ec 9E180000 		.4byte	.LASF853
 11246 28f0 A97D     		.sleb128 -343
 11247 28f2 0A       		.uleb128 0xa
 11248 28f3 47360000 		.4byte	.LASF854
 11249 28f7 A87D     		.sleb128 -344
 11250 28f9 0A       		.uleb128 0xa
 11251 28fa 0F120000 		.4byte	.LASF855
 11252 28fe A77D     		.sleb128 -345
 11253 2900 0A       		.uleb128 0xa
 11254 2901 CA180000 		.4byte	.LASF856
 11255 2905 A67D     		.sleb128 -346
 11256 2907 0A       		.uleb128 0xa
 11257 2908 A90F0000 		.4byte	.LASF857
 11258 290c A57D     		.sleb128 -347
 11259 290e 0A       		.uleb128 0xa
 11260 290f 5F0B0000 		.4byte	.LASF858
 11261 2913 A47D     		.sleb128 -348
 11262 2915 0A       		.uleb128 0xa
 11263 2916 32290000 		.4byte	.LASF859
 11264 291a A37D     		.sleb128 -349
 11265 291c 0A       		.uleb128 0xa
 11266 291d 09130000 		.4byte	.LASF860
 11267 2921 A27D     		.sleb128 -350
 11268 2923 0A       		.uleb128 0xa
 11269 2924 4F330000 		.4byte	.LASF861
 11270 2928 A17D     		.sleb128 -351
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 404


 11271 292a 0A       		.uleb128 0xa
 11272 292b B5080000 		.4byte	.LASF862
 11273 292f A07D     		.sleb128 -352
 11274 2931 0A       		.uleb128 0xa
 11275 2932 52310000 		.4byte	.LASF863
 11276 2936 9F7D     		.sleb128 -353
 11277 2938 0A       		.uleb128 0xa
 11278 2939 F8120000 		.4byte	.LASF864
 11279 293d 9E7D     		.sleb128 -354
 11280 293f 0A       		.uleb128 0xa
 11281 2940 A3300000 		.4byte	.LASF865
 11282 2944 9D7D     		.sleb128 -355
 11283 2946 0A       		.uleb128 0xa
 11284 2947 3C130000 		.4byte	.LASF866
 11285 294b 9B7D     		.sleb128 -357
 11286 294d 0A       		.uleb128 0xa
 11287 294e 860B0000 		.4byte	.LASF867
 11288 2952 9A7D     		.sleb128 -358
 11289 2954 0A       		.uleb128 0xa
 11290 2955 EF060000 		.4byte	.LASF868
 11291 2959 997D     		.sleb128 -359
 11292 295b 0A       		.uleb128 0xa
 11293 295c 772D0000 		.4byte	.LASF869
 11294 2960 987D     		.sleb128 -360
 11295 2962 0A       		.uleb128 0xa
 11296 2963 3F2F0000 		.4byte	.LASF870
 11297 2967 977D     		.sleb128 -361
 11298 2969 0A       		.uleb128 0xa
 11299 296a 52210000 		.4byte	.LASF871
 11300 296e 967D     		.sleb128 -362
 11301 2970 0A       		.uleb128 0xa
 11302 2971 50340000 		.4byte	.LASF872
 11303 2975 957D     		.sleb128 -363
 11304 2977 0A       		.uleb128 0xa
 11305 2978 493F0000 		.4byte	.LASF873
 11306 297c 947D     		.sleb128 -364
 11307 297e 0A       		.uleb128 0xa
 11308 297f 360F0000 		.4byte	.LASF874
 11309 2983 937D     		.sleb128 -365
 11310 2985 0A       		.uleb128 0xa
 11311 2986 AC110000 		.4byte	.LASF875
 11312 298a 927D     		.sleb128 -366
 11313 298c 0A       		.uleb128 0xa
 11314 298d FC1C0000 		.4byte	.LASF876
 11315 2991 917D     		.sleb128 -367
 11316 2993 0A       		.uleb128 0xa
 11317 2994 213C0000 		.4byte	.LASF877
 11318 2998 907D     		.sleb128 -368
 11319 299a 0A       		.uleb128 0xa
 11320 299b 58250000 		.4byte	.LASF878
 11321 299f 8F7D     		.sleb128 -369
 11322 29a1 0A       		.uleb128 0xa
 11323 29a2 E5080000 		.4byte	.LASF879
 11324 29a6 8E7D     		.sleb128 -370
 11325 29a8 0A       		.uleb128 0xa
 11326 29a9 B5000000 		.4byte	.LASF880
 11327 29ad 8D7D     		.sleb128 -371
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 405


 11328 29af 0A       		.uleb128 0xa
 11329 29b0 530D0000 		.4byte	.LASF881
 11330 29b4 8C7D     		.sleb128 -372
 11331 29b6 0A       		.uleb128 0xa
 11332 29b7 511A0000 		.4byte	.LASF882
 11333 29bb 8B7D     		.sleb128 -373
 11334 29bd 0A       		.uleb128 0xa
 11335 29be E91E0000 		.4byte	.LASF883
 11336 29c2 8A7D     		.sleb128 -374
 11337 29c4 0A       		.uleb128 0xa
 11338 29c5 F1010000 		.4byte	.LASF884
 11339 29c9 897D     		.sleb128 -375
 11340 29cb 0A       		.uleb128 0xa
 11341 29cc 1C390000 		.4byte	.LASF885
 11342 29d0 887D     		.sleb128 -376
 11343 29d2 0A       		.uleb128 0xa
 11344 29d3 E93E0000 		.4byte	.LASF886
 11345 29d7 877D     		.sleb128 -377
 11346 29d9 0A       		.uleb128 0xa
 11347 29da 14010000 		.4byte	.LASF887
 11348 29de 867D     		.sleb128 -378
 11349 29e0 0A       		.uleb128 0xa
 11350 29e1 A6210000 		.4byte	.LASF888
 11351 29e5 857D     		.sleb128 -379
 11352 29e7 0A       		.uleb128 0xa
 11353 29e8 3C240000 		.4byte	.LASF889
 11354 29ec 847D     		.sleb128 -380
 11355 29ee 0A       		.uleb128 0xa
 11356 29ef C01B0000 		.4byte	.LASF890
 11357 29f3 837D     		.sleb128 -381
 11358 29f5 0A       		.uleb128 0xa
 11359 29f6 F8110000 		.4byte	.LASF891
 11360 29fa 827D     		.sleb128 -382
 11361 29fc 0A       		.uleb128 0xa
 11362 29fd 1C310000 		.4byte	.LASF892
 11363 2a01 817D     		.sleb128 -383
 11364 2a03 0A       		.uleb128 0xa
 11365 2a04 CE390000 		.4byte	.LASF893
 11366 2a08 FF7C     		.sleb128 -385
 11367 2a0a 0A       		.uleb128 0xa
 11368 2a0b C7410000 		.4byte	.LASF894
 11369 2a0f FE7C     		.sleb128 -386
 11370 2a11 0A       		.uleb128 0xa
 11371 2a12 83360000 		.4byte	.LASF895
 11372 2a16 FD7C     		.sleb128 -387
 11373 2a18 0A       		.uleb128 0xa
 11374 2a19 BE110000 		.4byte	.LASF896
 11375 2a1d FC7C     		.sleb128 -388
 11376 2a1f 0A       		.uleb128 0xa
 11377 2a20 CD300000 		.4byte	.LASF897
 11378 2a24 FB7C     		.sleb128 -389
 11379 2a26 0A       		.uleb128 0xa
 11380 2a27 07380000 		.4byte	.LASF898
 11381 2a2b FA7C     		.sleb128 -390
 11382 2a2d 0A       		.uleb128 0xa
 11383 2a2e E3310000 		.4byte	.LASF899
 11384 2a32 F97C     		.sleb128 -391
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 406


 11385 2a34 0A       		.uleb128 0xa
 11386 2a35 DE2F0000 		.4byte	.LASF900
 11387 2a39 F87C     		.sleb128 -392
 11388 2a3b 0A       		.uleb128 0xa
 11389 2a3c 7B400000 		.4byte	.LASF901
 11390 2a40 F77C     		.sleb128 -393
 11391 2a42 0A       		.uleb128 0xa
 11392 2a43 D3050000 		.4byte	.LASF902
 11393 2a47 F67C     		.sleb128 -394
 11394 2a49 0A       		.uleb128 0xa
 11395 2a4a 75160000 		.4byte	.LASF903
 11396 2a4e F57C     		.sleb128 -395
 11397 2a50 0A       		.uleb128 0xa
 11398 2a51 BD1E0000 		.4byte	.LASF904
 11399 2a55 F47C     		.sleb128 -396
 11400 2a57 0A       		.uleb128 0xa
 11401 2a58 6D340000 		.4byte	.LASF905
 11402 2a5c F37C     		.sleb128 -397
 11403 2a5e 0A       		.uleb128 0xa
 11404 2a5f 3C0E0000 		.4byte	.LASF906
 11405 2a63 F27C     		.sleb128 -398
 11406 2a65 0A       		.uleb128 0xa
 11407 2a66 C4280000 		.4byte	.LASF907
 11408 2a6a F17C     		.sleb128 -399
 11409 2a6c 0A       		.uleb128 0xa
 11410 2a6d D3260000 		.4byte	.LASF908
 11411 2a71 F07C     		.sleb128 -400
 11412 2a73 0A       		.uleb128 0xa
 11413 2a74 A5380000 		.4byte	.LASF909
 11414 2a78 EF7C     		.sleb128 -401
 11415 2a7a 0A       		.uleb128 0xa
 11416 2a7b 9C2E0000 		.4byte	.LASF910
 11417 2a7f EE7C     		.sleb128 -402
 11418 2a81 0A       		.uleb128 0xa
 11419 2a82 9B260000 		.4byte	.LASF911
 11420 2a86 ED7C     		.sleb128 -403
 11421 2a88 0A       		.uleb128 0xa
 11422 2a89 73070000 		.4byte	.LASF912
 11423 2a8d EC7C     		.sleb128 -404
 11424 2a8f 0A       		.uleb128 0xa
 11425 2a90 D9180000 		.4byte	.LASF913
 11426 2a94 EB7C     		.sleb128 -405
 11427 2a96 0A       		.uleb128 0xa
 11428 2a97 F2380000 		.4byte	.LASF914
 11429 2a9b EA7C     		.sleb128 -406
 11430 2a9d 0A       		.uleb128 0xa
 11431 2a9e 66180000 		.4byte	.LASF915
 11432 2aa2 E97C     		.sleb128 -407
 11433 2aa4 0A       		.uleb128 0xa
 11434 2aa5 C0030000 		.4byte	.LASF916
 11435 2aa9 8C7C     		.sleb128 -500
 11436 2aab 0A       		.uleb128 0xa
 11437 2aac C92C0000 		.4byte	.LASF917
 11438 2ab0 8B7C     		.sleb128 -501
 11439 2ab2 00       		.byte	0
 11440 2ab3 23       		.uleb128 0x23
 11441 2ab4 6D696E00 		.ascii	"min\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 407


 11442 2ab8 01       		.byte	0x1
 11443 2ab9 71       		.byte	0x71
 11444 2aba 5B000000 		.4byte	0x5b
 11445 2abe 03       		.byte	0x3
 11446 2abf D62A0000 		.4byte	0x2ad6
 11447 2ac3 24       		.uleb128 0x24
 11448 2ac4 6100     		.ascii	"a\000"
 11449 2ac6 01       		.byte	0x1
 11450 2ac7 71       		.byte	0x71
 11451 2ac8 5B000000 		.4byte	0x5b
 11452 2acc 24       		.uleb128 0x24
 11453 2acd 6200     		.ascii	"b\000"
 11454 2acf 01       		.byte	0x1
 11455 2ad0 71       		.byte	0x71
 11456 2ad1 5B000000 		.4byte	0x5b
 11457 2ad5 00       		.byte	0
 11458 2ad6 25       		.uleb128 0x25
 11459 2ad7 0E330000 		.4byte	.LASF919
 11460 2adb 01       		.byte	0x1
 11461 2adc DD1D     		.2byte	0x1ddd
 11462 2ade 30000000 		.4byte	0x30
 11463 2ae2 01       		.byte	0x1
 11464 2ae3 162B0000 		.4byte	0x2b16
 11465 2ae7 26       		.uleb128 0x26
 11466 2ae8 63747800 		.ascii	"ctx\000"
 11467 2aec 01       		.byte	0x1
 11468 2aed DD1D     		.2byte	0x1ddd
 11469 2aef 11240000 		.4byte	0x2411
 11470 2af3 26       		.uleb128 0x26
 11471 2af4 696E00   		.ascii	"in\000"
 11472 2af7 01       		.byte	0x1
 11473 2af8 DE1D     		.2byte	0x1dde
 11474 2afa 210D0000 		.4byte	0xd21
 11475 2afe 26       		.uleb128 0x26
 11476 2aff 737A00   		.ascii	"sz\000"
 11477 2b02 01       		.byte	0x1
 11478 2b03 DF1D     		.2byte	0x1ddf
 11479 2b05 8D000000 		.4byte	0x8d
 11480 2b09 27       		.uleb128 0x27
 11481 2b0a 6F280000 		.4byte	.LASF918
 11482 2b0e 01       		.byte	0x1
 11483 2b0f DF1D     		.2byte	0x1ddf
 11484 2b11 30000000 		.4byte	0x30
 11485 2b15 00       		.byte	0
 11486 2b16 28       		.uleb128 0x28
 11487 2b17 01250000 		.4byte	.LASF1142
 11488 2b1b 01       		.byte	0x1
 11489 2b1c EE0D     		.2byte	0xdee
 11490 2b1e 441C0000 		.4byte	0x1c44
 11491 2b22 03       		.byte	0x3
 11492 2b23 25       		.uleb128 0x25
 11493 2b24 283F0000 		.4byte	.LASF920
 11494 2b28 01       		.byte	0x1
 11495 2b29 2D29     		.2byte	0x292d
 11496 2b2b 412B0000 		.4byte	0x2b41
 11497 2b2f 01       		.byte	0x1
 11498 2b30 412B0000 		.4byte	0x2b41
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 408


 11499 2b34 26       		.uleb128 0x26
 11500 2b35 73736C00 		.ascii	"ssl\000"
 11501 2b39 01       		.byte	0x1
 11502 2b3a 2D29     		.2byte	0x292d
 11503 2b3c 3B0C0000 		.4byte	0xc3b
 11504 2b40 00       		.byte	0
 11505 2b41 06       		.uleb128 0x6
 11506 2b42 04       		.byte	0x4
 11507 2b43 E4080000 		.4byte	0x8e4
 11508 2b47 25       		.uleb128 0x25
 11509 2b48 52140000 		.4byte	.LASF921
 11510 2b4c 01       		.byte	0x1
 11511 2b4d 3729     		.2byte	0x2937
 11512 2b4f BE000000 		.4byte	0xbe
 11513 2b53 01       		.byte	0x1
 11514 2b54 652B0000 		.4byte	0x2b65
 11515 2b58 27       		.uleb128 0x27
 11516 2b59 AF3F0000 		.4byte	.LASF84
 11517 2b5d 01       		.byte	0x1
 11518 2b5e 3729     		.2byte	0x2937
 11519 2b60 652B0000 		.4byte	0x2b65
 11520 2b64 00       		.byte	0
 11521 2b65 06       		.uleb128 0x6
 11522 2b66 04       		.byte	0x4
 11523 2b67 6B2B0000 		.4byte	0x2b6b
 11524 2b6b 07       		.uleb128 0x7
 11525 2b6c E4080000 		.4byte	0x8e4
 11526 2b70 29       		.uleb128 0x29
 11527 2b71 A7350000 		.4byte	.LASF922
 11528 2b75 01       		.byte	0x1
 11529 2b76 C50D     		.2byte	0xdc5
 11530 2b78 30000000 		.4byte	0x30
 11531 2b7c 01       		.byte	0x1
 11532 2b7d FB2B0000 		.4byte	0x2bfb
 11533 2b81 26       		.uleb128 0x26
 11534 2b82 63747800 		.ascii	"ctx\000"
 11535 2b86 01       		.byte	0x1
 11536 2b87 C50D     		.2byte	0xdc5
 11537 2b89 11240000 		.4byte	0x2411
 11538 2b8d 27       		.uleb128 0x27
 11539 2b8e EB220000 		.4byte	.LASF923
 11540 2b92 01       		.byte	0x1
 11541 2b93 C50D     		.2byte	0xdc5
 11542 2b95 210D0000 		.4byte	0xd21
 11543 2b99 26       		.uleb128 0x26
 11544 2b9a 737A00   		.ascii	"sz\000"
 11545 2b9d 01       		.byte	0x1
 11546 2b9e C60D     		.2byte	0xdc6
 11547 2ba0 8D000000 		.4byte	0x8d
 11548 2ba4 27       		.uleb128 0x27
 11549 2ba5 6F280000 		.4byte	.LASF918
 11550 2ba9 01       		.byte	0x1
 11551 2baa C60D     		.2byte	0xdc6
 11552 2bac 30000000 		.4byte	0x30
 11553 2bb0 27       		.uleb128 0x27
 11554 2bb1 9D0C0000 		.4byte	.LASF330
 11555 2bb5 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 409


 11556 2bb6 C60D     		.2byte	0xdc6
 11557 2bb8 30000000 		.4byte	0x30
 11558 2bbc 26       		.uleb128 0x26
 11559 2bbd 73736C00 		.ascii	"ssl\000"
 11560 2bc1 01       		.byte	0x1
 11561 2bc2 C60D     		.2byte	0xdc6
 11562 2bc4 3B0C0000 		.4byte	0xc3b
 11563 2bc8 2A       		.uleb128 0x2a
 11564 2bc9 153D0000 		.4byte	.LASF924
 11565 2bcd 01       		.byte	0x1
 11566 2bce C80D     		.2byte	0xdc8
 11567 2bd0 8D000000 		.4byte	0x8d
 11568 2bd4 2B       		.uleb128 0x2b
 11569 2bd5 72657400 		.ascii	"ret\000"
 11570 2bd9 01       		.byte	0x1
 11571 2bda C90D     		.2byte	0xdc9
 11572 2bdc 30000000 		.4byte	0x30
 11573 2be0 2A       		.uleb128 0x2a
 11574 2be1 EF390000 		.4byte	.LASF925
 11575 2be5 01       		.byte	0x1
 11576 2be6 CA0D     		.2byte	0xdca
 11577 2be8 30000000 		.4byte	0x30
 11578 2bec 2C       		.uleb128 0x2c
 11579 2bed 2A       		.uleb128 0x2a
 11580 2bee 47270000 		.4byte	.LASF697
 11581 2bf2 01       		.byte	0x1
 11582 2bf3 CE0D     		.2byte	0xdce
 11583 2bf5 8D000000 		.4byte	0x8d
 11584 2bf9 00       		.byte	0
 11585 2bfa 00       		.byte	0
 11586 2bfb 2D       		.uleb128 0x2d
 11587 2bfc A5070000 		.4byte	.LASF1013
 11588 2c00 01       		.byte	0x1
 11589 2c01 7008     		.2byte	0x870
 11590 2c03 5B000000 		.4byte	0x5b
 11591 2c07 00000000 		.4byte	.LFB60
 11592 2c0b 18000000 		.4byte	.LFE60-.LFB60
 11593 2c0f 01       		.uleb128 0x1
 11594 2c10 9C       		.byte	0x9c
 11595 2c11 262C0000 		.4byte	0x2c26
 11596 2c15 2E       		.uleb128 0x2e
 11597 2c16 6E0E0000 		.4byte	.LASF926
 11598 2c1a 01       		.byte	0x1
 11599 2c1b 7008     		.2byte	0x870
 11600 2c1d B11D0000 		.4byte	0x1db1
 11601 2c21 00000000 		.4byte	.LLST0
 11602 2c25 00       		.byte	0
 11603 2c26 2F       		.uleb128 0x2f
 11604 2c27 0B230000 		.4byte	.LASF927
 11605 2c2b 01       		.byte	0x1
 11606 2c2c 84       		.byte	0x84
 11607 2c2d B1000000 		.4byte	0xb1
 11608 2c31 00000000 		.4byte	.LFB13
 11609 2c35 48000000 		.4byte	.LFE13-.LFB13
 11610 2c39 01       		.uleb128 0x1
 11611 2c3a 9C       		.byte	0x9c
 11612 2c3b A82C0000 		.4byte	0x2ca8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 410


 11613 2c3f 30       		.uleb128 0x30
 11614 2c40 733100   		.ascii	"s1\000"
 11615 2c43 01       		.byte	0x1
 11616 2c44 84       		.byte	0x84
 11617 2c45 BE000000 		.4byte	0xbe
 11618 2c49 1E000000 		.4byte	.LLST1
 11619 2c4d 30       		.uleb128 0x30
 11620 2c4e 733200   		.ascii	"s2\000"
 11621 2c51 01       		.byte	0x1
 11622 2c52 84       		.byte	0x84
 11623 2c53 BE000000 		.4byte	0xbe
 11624 2c57 47000000 		.4byte	.LLST2
 11625 2c5b 30       		.uleb128 0x30
 11626 2c5c 6E00     		.ascii	"n\000"
 11627 2c5e 01       		.byte	0x1
 11628 2c5f 84       		.byte	0x84
 11629 2c60 66000000 		.4byte	0x66
 11630 2c64 73000000 		.4byte	.LLST3
 11631 2c68 31       		.uleb128 0x31
 11632 2c69 9A410000 		.4byte	.LASF929
 11633 2c6d 01       		.byte	0x1
 11634 2c6e 86       		.byte	0x86
 11635 2c6f 66000000 		.4byte	0x66
 11636 2c73 A6000000 		.4byte	.LLST4
 11637 2c77 32       		.uleb128 0x32
 11638 2c78 0E000000 		.4byte	.LVL4
 11639 2c7c 215B0000 		.4byte	0x5b21
 11640 2c80 8B2C0000 		.4byte	0x2c8b
 11641 2c84 33       		.uleb128 0x33
 11642 2c85 01       		.uleb128 0x1
 11643 2c86 50       		.byte	0x50
 11644 2c87 02       		.uleb128 0x2
 11645 2c88 76       		.byte	0x76
 11646 2c89 00       		.sleb128 0
 11647 2c8a 00       		.byte	0
 11648 2c8b 34       		.uleb128 0x34
 11649 2c8c 38000000 		.4byte	.LVL8
 11650 2c90 365B0000 		.4byte	0x5b36
 11651 2c94 33       		.uleb128 0x33
 11652 2c95 01       		.uleb128 0x1
 11653 2c96 52       		.byte	0x52
 11654 2c97 02       		.uleb128 0x2
 11655 2c98 77       		.byte	0x77
 11656 2c99 00       		.sleb128 0
 11657 2c9a 33       		.uleb128 0x33
 11658 2c9b 01       		.uleb128 0x1
 11659 2c9c 51       		.byte	0x51
 11660 2c9d 02       		.uleb128 0x2
 11661 2c9e 76       		.byte	0x76
 11662 2c9f 00       		.sleb128 0
 11663 2ca0 33       		.uleb128 0x33
 11664 2ca1 01       		.uleb128 0x1
 11665 2ca2 50       		.byte	0x50
 11666 2ca3 02       		.uleb128 0x2
 11667 2ca4 74       		.byte	0x74
 11668 2ca5 00       		.sleb128 0
 11669 2ca6 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 411


 11670 2ca7 00       		.byte	0
 11671 2ca8 35       		.uleb128 0x35
 11672 2ca9 F9080000 		.4byte	.LASF930
 11673 2cad 01       		.byte	0x1
 11674 2cae C2       		.byte	0xc2
 11675 2caf 00000000 		.4byte	.LFB15
 11676 2cb3 0C000000 		.4byte	.LFE15-.LFB15
 11677 2cb7 01       		.uleb128 0x1
 11678 2cb8 9C       		.byte	0x9c
 11679 2cb9 DE2C0000 		.4byte	0x2cde
 11680 2cbd 30       		.uleb128 0x30
 11681 2cbe 63747800 		.ascii	"ctx\000"
 11682 2cc2 01       		.byte	0x1
 11683 2cc3 C2       		.byte	0xc2
 11684 2cc4 11240000 		.4byte	0x2411
 11685 2cc8 C4000000 		.4byte	.LLST5
 11686 2ccc 34       		.uleb128 0x34
 11687 2ccd 0A000000 		.4byte	.LVL15
 11688 2cd1 555B0000 		.4byte	0x5b55
 11689 2cd5 33       		.uleb128 0x33
 11690 2cd6 01       		.uleb128 0x1
 11691 2cd7 50       		.byte	0x50
 11692 2cd8 03       		.uleb128 0x3
 11693 2cd9 F3       		.byte	0xf3
 11694 2cda 01       		.uleb128 0x1
 11695 2cdb 50       		.byte	0x50
 11696 2cdc 00       		.byte	0
 11697 2cdd 00       		.byte	0
 11698 2cde 2F       		.uleb128 0x2f
 11699 2cdf DA130000 		.4byte	.LASF928
 11700 2ce3 01       		.byte	0x1
 11701 2ce4 CB       		.byte	0xcb
 11702 2ce5 3B0C0000 		.4byte	0xc3b
 11703 2ce9 00000000 		.4byte	.LFB16
 11704 2ced 2A000000 		.4byte	.LFE16-.LFB16
 11705 2cf1 01       		.uleb128 0x1
 11706 2cf2 9C       		.byte	0x9c
 11707 2cf3 642D0000 		.4byte	0x2d64
 11708 2cf7 30       		.uleb128 0x30
 11709 2cf8 63747800 		.ascii	"ctx\000"
 11710 2cfc 01       		.byte	0x1
 11711 2cfd CB       		.byte	0xcb
 11712 2cfe 11240000 		.4byte	0x2411
 11713 2d02 E5000000 		.4byte	.LLST6
 11714 2d06 36       		.uleb128 0x36
 11715 2d07 73736C00 		.ascii	"ssl\000"
 11716 2d0b 01       		.byte	0x1
 11717 2d0c CD       		.byte	0xcd
 11718 2d0d 3B0C0000 		.4byte	0xc3b
 11719 2d11 11010000 		.4byte	.LLST7
 11720 2d15 36       		.uleb128 0x36
 11721 2d16 72657400 		.ascii	"ret\000"
 11722 2d1a 01       		.byte	0x1
 11723 2d1b CE       		.byte	0xce
 11724 2d1c 30000000 		.4byte	0x30
 11725 2d20 47010000 		.4byte	.LLST8
 11726 2d24 32       		.uleb128 0x32
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 412


 11727 2d25 10000000 		.4byte	.LVL18
 11728 2d29 675B0000 		.4byte	0x5b67
 11729 2d2d 392D0000 		.4byte	0x2d39
 11730 2d31 33       		.uleb128 0x33
 11731 2d32 01       		.uleb128 0x1
 11732 2d33 50       		.byte	0x50
 11733 2d34 03       		.uleb128 0x3
 11734 2d35 0A       		.byte	0xa
 11735 2d36 1C02     		.2byte	0x21c
 11736 2d38 00       		.byte	0
 11737 2d39 32       		.uleb128 0x32
 11738 2d3a 1A000000 		.4byte	.LVL20
 11739 2d3e 7C5B0000 		.4byte	0x5b7c
 11740 2d42 532D0000 		.4byte	0x2d53
 11741 2d46 33       		.uleb128 0x33
 11742 2d47 01       		.uleb128 0x1
 11743 2d48 51       		.byte	0x51
 11744 2d49 02       		.uleb128 0x2
 11745 2d4a 75       		.byte	0x75
 11746 2d4b 00       		.sleb128 0
 11747 2d4c 33       		.uleb128 0x33
 11748 2d4d 01       		.uleb128 0x1
 11749 2d4e 50       		.byte	0x50
 11750 2d4f 02       		.uleb128 0x2
 11751 2d50 74       		.byte	0x74
 11752 2d51 00       		.sleb128 0
 11753 2d52 00       		.byte	0
 11754 2d53 34       		.uleb128 0x34
 11755 2d54 26000000 		.4byte	.LVL23
 11756 2d58 975B0000 		.4byte	0x5b97
 11757 2d5c 33       		.uleb128 0x33
 11758 2d5d 01       		.uleb128 0x1
 11759 2d5e 50       		.byte	0x50
 11760 2d5f 02       		.uleb128 0x2
 11761 2d60 74       		.byte	0x74
 11762 2d61 00       		.sleb128 0
 11763 2d62 00       		.byte	0
 11764 2d63 00       		.byte	0
 11765 2d64 35       		.uleb128 0x35
 11766 2d65 F63E0000 		.4byte	.LASF931
 11767 2d69 01       		.byte	0x1
 11768 2d6a E2       		.byte	0xe2
 11769 2d6b 00000000 		.4byte	.LFB17
 11770 2d6f 0C000000 		.4byte	.LFE17-.LFB17
 11771 2d73 01       		.uleb128 0x1
 11772 2d74 9C       		.byte	0x9c
 11773 2d75 9A2D0000 		.4byte	0x2d9a
 11774 2d79 30       		.uleb128 0x30
 11775 2d7a 73736C00 		.ascii	"ssl\000"
 11776 2d7e 01       		.byte	0x1
 11777 2d7f E2       		.byte	0xe2
 11778 2d80 3B0C0000 		.4byte	0xc3b
 11779 2d84 71010000 		.4byte	.LLST9
 11780 2d88 34       		.uleb128 0x34
 11781 2d89 0A000000 		.4byte	.LVL26
 11782 2d8d 975B0000 		.4byte	0x5b97
 11783 2d91 33       		.uleb128 0x33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 413


 11784 2d92 01       		.uleb128 0x1
 11785 2d93 50       		.byte	0x50
 11786 2d94 03       		.uleb128 0x3
 11787 2d95 F3       		.byte	0xf3
 11788 2d96 01       		.uleb128 0x1
 11789 2d97 50       		.byte	0x50
 11790 2d98 00       		.byte	0
 11791 2d99 00       		.byte	0
 11792 2d9a 2F       		.uleb128 0x2f
 11793 2d9b 10000000 		.4byte	.LASF932
 11794 2d9f 01       		.byte	0x1
 11795 2da0 F7       		.byte	0xf7
 11796 2da1 30000000 		.4byte	0x30
 11797 2da5 00000000 		.4byte	.LFB18
 11798 2da9 14000000 		.4byte	.LFE18-.LFB18
 11799 2dad 01       		.uleb128 0x1
 11800 2dae 9C       		.byte	0x9c
 11801 2daf CF2D0000 		.4byte	0x2dcf
 11802 2db3 30       		.uleb128 0x30
 11803 2db4 73736C00 		.ascii	"ssl\000"
 11804 2db8 01       		.byte	0x1
 11805 2db9 F7       		.byte	0xf7
 11806 2dba 3B0C0000 		.4byte	0xc3b
 11807 2dbe 92010000 		.4byte	.LLST10
 11808 2dc2 37       		.uleb128 0x37
 11809 2dc3 666400   		.ascii	"fd\000"
 11810 2dc6 01       		.byte	0x1
 11811 2dc7 F7       		.byte	0xf7
 11812 2dc8 30000000 		.4byte	0x30
 11813 2dcc 01       		.uleb128 0x1
 11814 2dcd 51       		.byte	0x51
 11815 2dce 00       		.byte	0
 11816 2dcf 38       		.uleb128 0x38
 11817 2dd0 04310000 		.4byte	.LASF933
 11818 2dd4 01       		.byte	0x1
 11819 2dd5 1001     		.2byte	0x110
 11820 2dd7 B1000000 		.4byte	0xb1
 11821 2ddb 00000000 		.4byte	.LFB19
 11822 2ddf 20000000 		.4byte	.LFE19-.LFB19
 11823 2de3 01       		.uleb128 0x1
 11824 2de4 9C       		.byte	0x9c
 11825 2de5 1C2E0000 		.4byte	0x2e1c
 11826 2de9 2E       		.uleb128 0x2e
 11827 2dea C42B0000 		.4byte	.LASF934
 11828 2dee 01       		.byte	0x1
 11829 2def 1001     		.2byte	0x110
 11830 2df1 30000000 		.4byte	0x30
 11831 2df5 B3010000 		.4byte	.LLST11
 11832 2df9 39       		.uleb128 0x39
 11833 2dfa BF260000 		.4byte	.LASF935
 11834 2dfe 01       		.byte	0x1
 11835 2dff 1201     		.2byte	0x112
 11836 2e01 1C2E0000 		.4byte	0x2e1c
 11837 2e05 DF010000 		.4byte	.LLST12
 11838 2e09 3A       		.uleb128 0x3a
 11839 2e0a 08000000 		.4byte	.LVL30
 11840 2e0e A95B0000 		.4byte	0x5ba9
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 414


 11841 2e12 3A       		.uleb128 0x3a
 11842 2e13 0E000000 		.4byte	.LVL32
 11843 2e17 B55B0000 		.4byte	0x5bb5
 11844 2e1b 00       		.byte	0
 11845 2e1c 06       		.uleb128 0x6
 11846 2e1d 04       		.byte	0x4
 11847 2e1e C1130000 		.4byte	0x13c1
 11848 2e22 38       		.uleb128 0x38
 11849 2e23 DF3B0000 		.4byte	.LASF936
 11850 2e27 01       		.byte	0x1
 11851 2e28 1C01     		.2byte	0x11c
 11852 2e2a 30000000 		.4byte	0x30
 11853 2e2e 00000000 		.4byte	.LFB20
 11854 2e32 76000000 		.4byte	.LFE20-.LFB20
 11855 2e36 01       		.uleb128 0x1
 11856 2e37 9C       		.byte	0x9c
 11857 2e38 032F0000 		.4byte	0x2f03
 11858 2e3c 3B       		.uleb128 0x3b
 11859 2e3d 62756600 		.ascii	"buf\000"
 11860 2e41 01       		.byte	0x1
 11861 2e42 1C01     		.2byte	0x11c
 11862 2e44 B1000000 		.4byte	0xb1
 11863 2e48 FD010000 		.4byte	.LLST13
 11864 2e4c 3B       		.uleb128 0x3b
 11865 2e4d 6C656E00 		.ascii	"len\000"
 11866 2e51 01       		.byte	0x1
 11867 2e52 1C01     		.2byte	0x11c
 11868 2e54 30000000 		.4byte	0x30
 11869 2e58 3C020000 		.4byte	.LLST14
 11870 2e5c 39       		.uleb128 0x39
 11871 2e5d BF260000 		.4byte	.LASF935
 11872 2e61 01       		.byte	0x1
 11873 2e62 1E01     		.2byte	0x11e
 11874 2e64 1C2E0000 		.4byte	0x2e1c
 11875 2e68 5B020000 		.4byte	.LLST15
 11876 2e6c 39       		.uleb128 0x39
 11877 2e6d 51060000 		.4byte	.LASF937
 11878 2e71 01       		.byte	0x1
 11879 2e72 1F01     		.2byte	0x11f
 11880 2e74 30000000 		.4byte	0x30
 11881 2e78 84020000 		.4byte	.LLST16
 11882 2e7c 39       		.uleb128 0x39
 11883 2e7d AD030000 		.4byte	.LASF938
 11884 2e81 01       		.byte	0x1
 11885 2e82 2001     		.2byte	0x120
 11886 2e84 30000000 		.4byte	0x30
 11887 2e88 C5020000 		.4byte	.LLST17
 11888 2e8c 3C       		.uleb128 0x3c
 11889 2e8d 6B050000 		.4byte	.LASF939
 11890 2e91 01       		.byte	0x1
 11891 2e92 2101     		.2byte	0x121
 11892 2e94 B7000000 		.4byte	0xb7
 11893 2e98 3A       		.byte	0x3a
 11894 2e99 39       		.uleb128 0x39
 11895 2e9a 02150000 		.4byte	.LASF940
 11896 2e9e 01       		.byte	0x1
 11897 2e9f 2201     		.2byte	0x122
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 415


 11898 2ea1 30000000 		.4byte	0x30
 11899 2ea5 0C030000 		.4byte	.LLST18
 11900 2ea9 3D       		.uleb128 0x3d
 11901 2eaa 6900     		.ascii	"i\000"
 11902 2eac 01       		.byte	0x1
 11903 2ead 2301     		.2byte	0x123
 11904 2eaf 30000000 		.4byte	0x30
 11905 2eb3 42030000 		.4byte	.LLST19
 11906 2eb7 3A       		.uleb128 0x3a
 11907 2eb8 0C000000 		.4byte	.LVL36
 11908 2ebc A95B0000 		.4byte	0x5ba9
 11909 2ec0 3A       		.uleb128 0x3a
 11910 2ec1 12000000 		.4byte	.LVL38
 11911 2ec5 B55B0000 		.4byte	0x5bb5
 11912 2ec9 32       		.uleb128 0x32
 11913 2eca 32000000 		.4byte	.LVL41
 11914 2ece 215B0000 		.4byte	0x5b21
 11915 2ed2 DE2E0000 		.4byte	0x2ede
 11916 2ed6 33       		.uleb128 0x33
 11917 2ed7 01       		.uleb128 0x1
 11918 2ed8 50       		.byte	0x50
 11919 2ed9 03       		.uleb128 0x3
 11920 2eda 91       		.byte	0x91
 11921 2edb 60       		.sleb128 -32
 11922 2edc 06       		.byte	0x6
 11923 2edd 00       		.byte	0
 11924 2ede 32       		.uleb128 0x32
 11925 2edf 46000000 		.4byte	.LVL45
 11926 2ee3 C15B0000 		.4byte	0x5bc1
 11927 2ee7 F92E0000 		.4byte	0x2ef9
 11928 2eeb 33       		.uleb128 0x33
 11929 2eec 01       		.uleb128 0x1
 11930 2eed 51       		.byte	0x51
 11931 2eee 03       		.uleb128 0x3
 11932 2eef 91       		.byte	0x91
 11933 2ef0 60       		.sleb128 -32
 11934 2ef1 06       		.byte	0x6
 11935 2ef2 33       		.uleb128 0x33
 11936 2ef3 01       		.uleb128 0x1
 11937 2ef4 50       		.byte	0x50
 11938 2ef5 02       		.uleb128 0x2
 11939 2ef6 74       		.byte	0x74
 11940 2ef7 00       		.sleb128 0
 11941 2ef8 00       		.byte	0
 11942 2ef9 3A       		.uleb128 0x3a
 11943 2efa 4C000000 		.4byte	.LVL46
 11944 2efe 215B0000 		.4byte	0x5b21
 11945 2f02 00       		.byte	0
 11946 2f03 38       		.uleb128 0x38
 11947 2f04 061C0000 		.4byte	.LASF941
 11948 2f08 01       		.byte	0x1
 11949 2f09 3E01     		.2byte	0x13e
 11950 2f0b 30000000 		.4byte	0x30
 11951 2f0f 00000000 		.4byte	.LFB21
 11952 2f13 06000000 		.4byte	.LFE21-.LFB21
 11953 2f17 01       		.uleb128 0x1
 11954 2f18 9C       		.byte	0x9c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 416


 11955 2f19 2E2F0000 		.4byte	0x2f2e
 11956 2f1d 3B       		.uleb128 0x3b
 11957 2f1e 73736C00 		.ascii	"ssl\000"
 11958 2f22 01       		.byte	0x1
 11959 2f23 3E01     		.2byte	0x13e
 11960 2f25 2E2F0000 		.4byte	0x2f2e
 11961 2f29 60030000 		.4byte	.LLST20
 11962 2f2d 00       		.byte	0
 11963 2f2e 06       		.uleb128 0x6
 11964 2f2f 04       		.byte	0x4
 11965 2f30 342F0000 		.4byte	0x2f34
 11966 2f34 07       		.uleb128 0x7
 11967 2f35 3A020000 		.4byte	0x23a
 11968 2f39 38       		.uleb128 0x38
 11969 2f3a 593F0000 		.4byte	.LASF942
 11970 2f3e 01       		.byte	0x1
 11971 2f3f 4601     		.2byte	0x146
 11972 2f41 30000000 		.4byte	0x30
 11973 2f45 00000000 		.4byte	.LFB22
 11974 2f49 0C000000 		.4byte	.LFE22-.LFB22
 11975 2f4d 01       		.uleb128 0x1
 11976 2f4e 9C       		.byte	0x9c
 11977 2f4f 642F0000 		.4byte	0x2f64
 11978 2f53 3B       		.uleb128 0x3b
 11979 2f54 73736C00 		.ascii	"ssl\000"
 11980 2f58 01       		.byte	0x1
 11981 2f59 4601     		.2byte	0x146
 11982 2f5b 3B0C0000 		.4byte	0xc3b
 11983 2f5f 8F030000 		.4byte	.LLST21
 11984 2f63 00       		.byte	0
 11985 2f64 38       		.uleb128 0x38
 11986 2f65 DA120000 		.4byte	.LASF943
 11987 2f69 01       		.byte	0x1
 11988 2f6a 4E01     		.2byte	0x14e
 11989 2f6c 30000000 		.4byte	0x30
 11990 2f70 00000000 		.4byte	.LFB23
 11991 2f74 10000000 		.4byte	.LFE23-.LFB23
 11992 2f78 01       		.uleb128 0x1
 11993 2f79 9C       		.byte	0x9c
 11994 2f7a 8F2F0000 		.4byte	0x2f8f
 11995 2f7e 3B       		.uleb128 0x3b
 11996 2f7f 73736C00 		.ascii	"ssl\000"
 11997 2f83 01       		.byte	0x1
 11998 2f84 4E01     		.2byte	0x14e
 11999 2f86 3B0C0000 		.4byte	0xc3b
 12000 2f8a B0030000 		.4byte	.LLST22
 12001 2f8e 00       		.byte	0
 12002 2f8f 3E       		.uleb128 0x3e
 12003 2f90 73310000 		.4byte	.LASF944
 12004 2f94 01       		.byte	0x1
 12005 2f95 5501     		.2byte	0x155
 12006 2f97 00000000 		.4byte	.LFB24
 12007 2f9b 18000000 		.4byte	.LFE24-.LFB24
 12008 2f9f 01       		.uleb128 0x1
 12009 2fa0 9C       		.byte	0x9c
 12010 2fa1 C62F0000 		.4byte	0x2fc6
 12011 2fa5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 417


 12012 2fa6 73736C00 		.ascii	"ssl\000"
 12013 2faa 01       		.byte	0x1
 12014 2fab 5501     		.2byte	0x155
 12015 2fad 3B0C0000 		.4byte	0xc3b
 12016 2fb1 D1030000 		.4byte	.LLST23
 12017 2fb5 2E       		.uleb128 0x2e
 12018 2fb6 89080000 		.4byte	.LASF945
 12019 2fba 01       		.byte	0x1
 12020 2fbb 5501     		.2byte	0x155
 12021 2fbd 30000000 		.4byte	0x30
 12022 2fc1 F2030000 		.4byte	.LLST24
 12023 2fc5 00       		.byte	0
 12024 2fc6 38       		.uleb128 0x38
 12025 2fc7 98400000 		.4byte	.LASF946
 12026 2fcb 01       		.byte	0x1
 12027 2fcc 5C01     		.2byte	0x15c
 12028 2fce 30000000 		.4byte	0x30
 12029 2fd2 00000000 		.4byte	.LFB25
 12030 2fd6 06000000 		.4byte	.LFE25-.LFB25
 12031 2fda 01       		.uleb128 0x1
 12032 2fdb 9C       		.byte	0x9c
 12033 2fdc 0D300000 		.4byte	0x300d
 12034 2fe0 3B       		.uleb128 0x3b
 12035 2fe1 73736C00 		.ascii	"ssl\000"
 12036 2fe5 01       		.byte	0x1
 12037 2fe6 5C01     		.2byte	0x15c
 12038 2fe8 3B0C0000 		.4byte	0xc3b
 12039 2fec 13040000 		.4byte	.LLST25
 12040 2ff0 3F       		.uleb128 0x3f
 12041 2ff1 B22E0000 		.4byte	.LASF947
 12042 2ff5 01       		.byte	0x1
 12043 2ff6 5C01     		.2byte	0x15c
 12044 2ff8 A9000000 		.4byte	0xa9
 12045 2ffc 01       		.uleb128 0x1
 12046 2ffd 51       		.byte	0x51
 12047 2ffe 3F       		.uleb128 0x3f
 12048 2fff 77290000 		.4byte	.LASF948
 12049 3003 01       		.byte	0x1
 12050 3004 5C01     		.2byte	0x15c
 12051 3006 66000000 		.4byte	0x66
 12052 300a 01       		.uleb128 0x1
 12053 300b 52       		.byte	0x52
 12054 300c 00       		.byte	0
 12055 300d 38       		.uleb128 0x38
 12056 300e C1360000 		.4byte	.LASF949
 12057 3012 01       		.byte	0x1
 12058 3013 7101     		.2byte	0x171
 12059 3015 30000000 		.4byte	0x30
 12060 3019 00000000 		.4byte	.LFB26
 12061 301d 06000000 		.4byte	.LFE26-.LFB26
 12062 3021 01       		.uleb128 0x1
 12063 3022 9C       		.byte	0x9c
 12064 3023 54300000 		.4byte	0x3054
 12065 3027 3B       		.uleb128 0x3b
 12066 3028 73736C00 		.ascii	"ssl\000"
 12067 302c 01       		.byte	0x1
 12068 302d 7101     		.2byte	0x171
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 418


 12069 302f 3B0C0000 		.4byte	0xc3b
 12070 3033 34040000 		.4byte	.LLST26
 12071 3037 3F       		.uleb128 0x3f
 12072 3038 B22E0000 		.4byte	.LASF947
 12073 303c 01       		.byte	0x1
 12074 303d 7101     		.2byte	0x171
 12075 303f A9000000 		.4byte	0xa9
 12076 3043 01       		.uleb128 0x1
 12077 3044 51       		.byte	0x51
 12078 3045 3F       		.uleb128 0x3f
 12079 3046 77290000 		.4byte	.LASF948
 12080 304a 01       		.byte	0x1
 12081 304b 7101     		.2byte	0x171
 12082 304d 2C0D0000 		.4byte	0xd2c
 12083 3051 01       		.uleb128 0x1
 12084 3052 52       		.byte	0x52
 12085 3053 00       		.byte	0
 12086 3054 40       		.uleb128 0x40
 12087 3055 9E1B0000 		.4byte	.LASF1061
 12088 3059 01       		.byte	0x1
 12089 305a 9D01     		.2byte	0x19d
 12090 305c 30000000 		.4byte	0x30
 12091 3060 00000000 		.4byte	.LFB28
 12092 3064 06000000 		.4byte	.LFE28-.LFB28
 12093 3068 01       		.uleb128 0x1
 12094 3069 9C       		.byte	0x9c
 12095 306a 38       		.uleb128 0x38
 12096 306b E9000000 		.4byte	.LASF950
 12097 306f 01       		.byte	0x1
 12098 3070 5102     		.2byte	0x251
 12099 3072 30000000 		.4byte	0x30
 12100 3076 00000000 		.4byte	.LFB29
 12101 307a 20000000 		.4byte	.LFE29-.LFB29
 12102 307e 01       		.uleb128 0x1
 12103 307f 9C       		.byte	0x9c
 12104 3080 E3300000 		.4byte	0x30e3
 12105 3084 3B       		.uleb128 0x3b
 12106 3085 73736C00 		.ascii	"ssl\000"
 12107 3089 01       		.byte	0x1
 12108 308a 5102     		.2byte	0x251
 12109 308c 3B0C0000 		.4byte	0xc3b
 12110 3090 55040000 		.4byte	.LLST27
 12111 3094 2E       		.uleb128 0x2e
 12112 3095 AB330000 		.4byte	.LASF951
 12113 3099 01       		.byte	0x1
 12114 309a 5102     		.2byte	0x251
 12115 309c C9000000 		.4byte	0xc9
 12116 30a0 8F040000 		.4byte	.LLST28
 12117 30a4 3B       		.uleb128 0x3b
 12118 30a5 737A00   		.ascii	"sz\000"
 12119 30a8 01       		.byte	0x1
 12120 30a9 5102     		.2byte	0x251
 12121 30ab 30000000 		.4byte	0x30
 12122 30af C9040000 		.4byte	.LLST29
 12123 30b3 3D       		.uleb128 0x3d
 12124 30b4 72657400 		.ascii	"ret\000"
 12125 30b8 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 419


 12126 30b9 5302     		.2byte	0x253
 12127 30bb 30000000 		.4byte	0x30
 12128 30bf 03050000 		.4byte	.LLST30
 12129 30c3 34       		.uleb128 0x34
 12130 30c4 12000000 		.4byte	.LVL73
 12131 30c8 E05B0000 		.4byte	0x5be0
 12132 30cc 33       		.uleb128 0x33
 12133 30cd 01       		.uleb128 0x1
 12134 30ce 52       		.byte	0x52
 12135 30cf 03       		.uleb128 0x3
 12136 30d0 F3       		.byte	0xf3
 12137 30d1 01       		.uleb128 0x1
 12138 30d2 52       		.byte	0x52
 12139 30d3 33       		.uleb128 0x33
 12140 30d4 01       		.uleb128 0x1
 12141 30d5 51       		.byte	0x51
 12142 30d6 03       		.uleb128 0x3
 12143 30d7 F3       		.byte	0xf3
 12144 30d8 01       		.uleb128 0x1
 12145 30d9 51       		.byte	0x51
 12146 30da 33       		.uleb128 0x33
 12147 30db 01       		.uleb128 0x1
 12148 30dc 50       		.byte	0x50
 12149 30dd 03       		.uleb128 0x3
 12150 30de F3       		.byte	0xf3
 12151 30df 01       		.uleb128 0x1
 12152 30e0 50       		.byte	0x50
 12153 30e1 00       		.byte	0
 12154 30e2 00       		.byte	0
 12155 30e3 29       		.uleb128 0x29
 12156 30e4 483A0000 		.4byte	.LASF952
 12157 30e8 01       		.byte	0x1
 12158 30e9 6902     		.2byte	0x269
 12159 30eb 30000000 		.4byte	0x30
 12160 30ef 01       		.byte	0x1
 12161 30f0 30310000 		.4byte	0x3130
 12162 30f4 26       		.uleb128 0x26
 12163 30f5 73736C00 		.ascii	"ssl\000"
 12164 30f9 01       		.byte	0x1
 12165 30fa 6902     		.2byte	0x269
 12166 30fc 3B0C0000 		.4byte	0xc3b
 12167 3100 27       		.uleb128 0x27
 12168 3101 AB330000 		.4byte	.LASF951
 12169 3105 01       		.byte	0x1
 12170 3106 6902     		.2byte	0x269
 12171 3108 A9000000 		.4byte	0xa9
 12172 310c 26       		.uleb128 0x26
 12173 310d 737A00   		.ascii	"sz\000"
 12174 3110 01       		.byte	0x1
 12175 3111 6902     		.2byte	0x269
 12176 3113 30000000 		.4byte	0x30
 12177 3117 27       		.uleb128 0x27
 12178 3118 AD2E0000 		.4byte	.LASF953
 12179 311c 01       		.byte	0x1
 12180 311d 6902     		.2byte	0x269
 12181 311f 30000000 		.4byte	0x30
 12182 3123 2B       		.uleb128 0x2b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 420


 12183 3124 72657400 		.ascii	"ret\000"
 12184 3128 01       		.byte	0x1
 12185 3129 6B02     		.2byte	0x26b
 12186 312b 30000000 		.4byte	0x30
 12187 312f 00       		.byte	0
 12188 3130 38       		.uleb128 0x38
 12189 3131 DF210000 		.4byte	.LASF954
 12190 3135 01       		.byte	0x1
 12191 3136 8A02     		.2byte	0x28a
 12192 3138 30000000 		.4byte	0x30
 12193 313c 00000000 		.4byte	.LFB31
 12194 3140 2C000000 		.4byte	.LFE31-.LFB31
 12195 3144 01       		.uleb128 0x1
 12196 3145 9C       		.byte	0x9c
 12197 3146 F5310000 		.4byte	0x31f5
 12198 314a 3B       		.uleb128 0x3b
 12199 314b 73736C00 		.ascii	"ssl\000"
 12200 314f 01       		.byte	0x1
 12201 3150 8A02     		.2byte	0x28a
 12202 3152 3B0C0000 		.4byte	0xc3b
 12203 3156 16050000 		.4byte	.LLST31
 12204 315a 2E       		.uleb128 0x2e
 12205 315b AB330000 		.4byte	.LASF951
 12206 315f 01       		.byte	0x1
 12207 3160 8A02     		.2byte	0x28a
 12208 3162 A9000000 		.4byte	0xa9
 12209 3166 50050000 		.4byte	.LLST32
 12210 316a 3B       		.uleb128 0x3b
 12211 316b 737A00   		.ascii	"sz\000"
 12212 316e 01       		.byte	0x1
 12213 316f 8A02     		.2byte	0x28a
 12214 3171 30000000 		.4byte	0x30
 12215 3175 8A050000 		.4byte	.LLST33
 12216 3179 41       		.uleb128 0x41
 12217 317a E3300000 		.4byte	0x30e3
 12218 317e 02000000 		.4byte	.LBB15
 12219 3182 28000000 		.4byte	.LBE15-.LBB15
 12220 3186 01       		.byte	0x1
 12221 3187 8E02     		.2byte	0x28e
 12222 3189 42       		.uleb128 0x42
 12223 318a 17310000 		.4byte	0x3117
 12224 318e 01       		.byte	0x1
 12225 318f 43       		.uleb128 0x43
 12226 3190 0C310000 		.4byte	0x310c
 12227 3194 8A050000 		.4byte	.LLST33
 12228 3198 43       		.uleb128 0x43
 12229 3199 00310000 		.4byte	0x3100
 12230 319d 50050000 		.4byte	.LLST32
 12231 31a1 43       		.uleb128 0x43
 12232 31a2 F4300000 		.4byte	0x30f4
 12233 31a6 16050000 		.4byte	.LLST31
 12234 31aa 44       		.uleb128 0x44
 12235 31ab 02000000 		.4byte	.LBB16
 12236 31af 28000000 		.4byte	.LBE16-.LBB16
 12237 31b3 45       		.uleb128 0x45
 12238 31b4 23310000 		.4byte	0x3123
 12239 31b8 C4050000 		.4byte	.LLST37
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 421


 12240 31bc 46       		.uleb128 0x46
 12241 31bd B32A0000 		.4byte	0x2ab3
 12242 31c1 0E000000 		.4byte	.LBB17
 12243 31c5 0A000000 		.4byte	.LBE17-.LBB17
 12244 31c9 01       		.byte	0x1
 12245 31ca 7E02     		.2byte	0x27e
 12246 31cc E3310000 		.4byte	0x31e3
 12247 31d0 43       		.uleb128 0x43
 12248 31d1 CC2A0000 		.4byte	0x2acc
 12249 31d5 D7050000 		.4byte	.LLST38
 12250 31d9 43       		.uleb128 0x43
 12251 31da C32A0000 		.4byte	0x2ac3
 12252 31de ED050000 		.4byte	.LLST39
 12253 31e2 00       		.byte	0
 12254 31e3 34       		.uleb128 0x34
 12255 31e4 1E000000 		.4byte	.LVL80
 12256 31e8 005C0000 		.4byte	0x5c00
 12257 31ec 33       		.uleb128 0x33
 12258 31ed 01       		.uleb128 0x1
 12259 31ee 53       		.byte	0x53
 12260 31ef 01       		.uleb128 0x1
 12261 31f0 31       		.byte	0x31
 12262 31f1 00       		.byte	0
 12263 31f2 00       		.byte	0
 12264 31f3 00       		.byte	0
 12265 31f4 00       		.byte	0
 12266 31f5 38       		.uleb128 0x38
 12267 31f6 FA1A0000 		.4byte	.LASF955
 12268 31fa 01       		.byte	0x1
 12269 31fb 9202     		.2byte	0x292
 12270 31fd 30000000 		.4byte	0x30
 12271 3201 00000000 		.4byte	.LFB32
 12272 3205 2C000000 		.4byte	.LFE32-.LFB32
 12273 3209 01       		.uleb128 0x1
 12274 320a 9C       		.byte	0x9c
 12275 320b BA320000 		.4byte	0x32ba
 12276 320f 3B       		.uleb128 0x3b
 12277 3210 73736C00 		.ascii	"ssl\000"
 12278 3214 01       		.byte	0x1
 12279 3215 9202     		.2byte	0x292
 12280 3217 3B0C0000 		.4byte	0xc3b
 12281 321b 0E060000 		.4byte	.LLST40
 12282 321f 2E       		.uleb128 0x2e
 12283 3220 AB330000 		.4byte	.LASF951
 12284 3224 01       		.byte	0x1
 12285 3225 9202     		.2byte	0x292
 12286 3227 A9000000 		.4byte	0xa9
 12287 322b 48060000 		.4byte	.LLST41
 12288 322f 3B       		.uleb128 0x3b
 12289 3230 737A00   		.ascii	"sz\000"
 12290 3233 01       		.byte	0x1
 12291 3234 9202     		.2byte	0x292
 12292 3236 30000000 		.4byte	0x30
 12293 323a 82060000 		.4byte	.LLST42
 12294 323e 41       		.uleb128 0x41
 12295 323f E3300000 		.4byte	0x30e3
 12296 3243 02000000 		.4byte	.LBB23
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 422


 12297 3247 28000000 		.4byte	.LBE23-.LBB23
 12298 324b 01       		.byte	0x1
 12299 324c 9602     		.2byte	0x296
 12300 324e 42       		.uleb128 0x42
 12301 324f 17310000 		.4byte	0x3117
 12302 3253 00       		.byte	0
 12303 3254 43       		.uleb128 0x43
 12304 3255 0C310000 		.4byte	0x310c
 12305 3259 82060000 		.4byte	.LLST42
 12306 325d 43       		.uleb128 0x43
 12307 325e 00310000 		.4byte	0x3100
 12308 3262 48060000 		.4byte	.LLST41
 12309 3266 43       		.uleb128 0x43
 12310 3267 F4300000 		.4byte	0x30f4
 12311 326b 0E060000 		.4byte	.LLST40
 12312 326f 44       		.uleb128 0x44
 12313 3270 02000000 		.4byte	.LBB24
 12314 3274 28000000 		.4byte	.LBE24-.LBB24
 12315 3278 45       		.uleb128 0x45
 12316 3279 23310000 		.4byte	0x3123
 12317 327d BC060000 		.4byte	.LLST46
 12318 3281 46       		.uleb128 0x46
 12319 3282 B32A0000 		.4byte	0x2ab3
 12320 3286 0E000000 		.4byte	.LBB25
 12321 328a 0A000000 		.4byte	.LBE25-.LBB25
 12322 328e 01       		.byte	0x1
 12323 328f 7E02     		.2byte	0x27e
 12324 3291 A8320000 		.4byte	0x32a8
 12325 3295 43       		.uleb128 0x43
 12326 3296 CC2A0000 		.4byte	0x2acc
 12327 329a CF060000 		.4byte	.LLST47
 12328 329e 43       		.uleb128 0x43
 12329 329f C32A0000 		.4byte	0x2ac3
 12330 32a3 E5060000 		.4byte	.LLST48
 12331 32a7 00       		.byte	0
 12332 32a8 34       		.uleb128 0x34
 12333 32a9 1E000000 		.4byte	.LVL87
 12334 32ad 005C0000 		.4byte	0x5c00
 12335 32b1 33       		.uleb128 0x33
 12336 32b2 01       		.uleb128 0x1
 12337 32b3 53       		.byte	0x53
 12338 32b4 01       		.uleb128 0x1
 12339 32b5 30       		.byte	0x30
 12340 32b6 00       		.byte	0
 12341 32b7 00       		.byte	0
 12342 32b8 00       		.byte	0
 12343 32b9 00       		.byte	0
 12344 32ba 38       		.uleb128 0x38
 12345 32bb F6180000 		.4byte	.LASF956
 12346 32bf 01       		.byte	0x1
 12347 32c0 DF04     		.2byte	0x4df
 12348 32c2 30000000 		.4byte	0x30
 12349 32c6 00000000 		.4byte	.LFB33
 12350 32ca 24000000 		.4byte	.LFE33-.LFB33
 12351 32ce 01       		.uleb128 0x1
 12352 32cf 9C       		.byte	0x9c
 12353 32d0 53330000 		.4byte	0x3353
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 423


 12354 32d4 3B       		.uleb128 0x3b
 12355 32d5 73736C00 		.ascii	"ssl\000"
 12356 32d9 01       		.byte	0x1
 12357 32da DF04     		.2byte	0x4df
 12358 32dc 3B0C0000 		.4byte	0xc3b
 12359 32e0 06070000 		.4byte	.LLST49
 12360 32e4 2E       		.uleb128 0x2e
 12361 32e5 AB330000 		.4byte	.LASF951
 12362 32e9 01       		.byte	0x1
 12363 32ea DF04     		.2byte	0x4df
 12364 32ec C9000000 		.4byte	0xc9
 12365 32f0 40070000 		.4byte	.LLST50
 12366 32f4 3B       		.uleb128 0x3b
 12367 32f5 737A00   		.ascii	"sz\000"
 12368 32f8 01       		.byte	0x1
 12369 32f9 DF04     		.2byte	0x4df
 12370 32fb 30000000 		.4byte	0x30
 12371 32ff 7A070000 		.4byte	.LLST51
 12372 3303 2E       		.uleb128 0x2e
 12373 3304 B1410000 		.4byte	.LASF957
 12374 3308 01       		.byte	0x1
 12375 3309 DF04     		.2byte	0x4df
 12376 330b 30000000 		.4byte	0x30
 12377 330f B4070000 		.4byte	.LLST52
 12378 3313 3D       		.uleb128 0x3d
 12379 3314 72657400 		.ascii	"ret\000"
 12380 3318 01       		.byte	0x1
 12381 3319 E104     		.2byte	0x4e1
 12382 331b 30000000 		.4byte	0x30
 12383 331f EE070000 		.4byte	.LLST53
 12384 3323 39       		.uleb128 0x39
 12385 3324 EF120000 		.4byte	.LASF958
 12386 3328 01       		.byte	0x1
 12387 3329 E204     		.2byte	0x4e2
 12388 332b 30000000 		.4byte	0x30
 12389 332f 01080000 		.4byte	.LLST54
 12390 3333 34       		.uleb128 0x34
 12391 3334 1A000000 		.4byte	.LVL93
 12392 3338 6A300000 		.4byte	0x306a
 12393 333c 33       		.uleb128 0x33
 12394 333d 01       		.uleb128 0x1
 12395 333e 52       		.byte	0x52
 12396 333f 03       		.uleb128 0x3
 12397 3340 F3       		.byte	0xf3
 12398 3341 01       		.uleb128 0x1
 12399 3342 52       		.byte	0x52
 12400 3343 33       		.uleb128 0x33
 12401 3344 01       		.uleb128 0x1
 12402 3345 51       		.byte	0x51
 12403 3346 03       		.uleb128 0x3
 12404 3347 F3       		.byte	0xf3
 12405 3348 01       		.uleb128 0x1
 12406 3349 51       		.byte	0x51
 12407 334a 33       		.uleb128 0x33
 12408 334b 01       		.uleb128 0x1
 12409 334c 50       		.byte	0x50
 12410 334d 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 424


 12411 334e 74       		.byte	0x74
 12412 334f 847E     		.sleb128 -252
 12413 3351 00       		.byte	0
 12414 3352 00       		.byte	0
 12415 3353 38       		.uleb128 0x38
 12416 3354 A21D0000 		.4byte	.LASF959
 12417 3358 01       		.byte	0x1
 12418 3359 F504     		.2byte	0x4f5
 12419 335b 30000000 		.4byte	0x30
 12420 335f 00000000 		.4byte	.LFB34
 12421 3363 24000000 		.4byte	.LFE34-.LFB34
 12422 3367 01       		.uleb128 0x1
 12423 3368 9C       		.byte	0x9c
 12424 3369 EC330000 		.4byte	0x33ec
 12425 336d 3B       		.uleb128 0x3b
 12426 336e 73736C00 		.ascii	"ssl\000"
 12427 3372 01       		.byte	0x1
 12428 3373 F504     		.2byte	0x4f5
 12429 3375 3B0C0000 		.4byte	0xc3b
 12430 3379 14080000 		.4byte	.LLST55
 12431 337d 2E       		.uleb128 0x2e
 12432 337e AB330000 		.4byte	.LASF951
 12433 3382 01       		.byte	0x1
 12434 3383 F504     		.2byte	0x4f5
 12435 3385 A9000000 		.4byte	0xa9
 12436 3389 4E080000 		.4byte	.LLST56
 12437 338d 3B       		.uleb128 0x3b
 12438 338e 737A00   		.ascii	"sz\000"
 12439 3391 01       		.byte	0x1
 12440 3392 F504     		.2byte	0x4f5
 12441 3394 30000000 		.4byte	0x30
 12442 3398 88080000 		.4byte	.LLST57
 12443 339c 2E       		.uleb128 0x2e
 12444 339d B1410000 		.4byte	.LASF957
 12445 33a1 01       		.byte	0x1
 12446 33a2 F504     		.2byte	0x4f5
 12447 33a4 30000000 		.4byte	0x30
 12448 33a8 C2080000 		.4byte	.LLST58
 12449 33ac 3D       		.uleb128 0x3d
 12450 33ad 72657400 		.ascii	"ret\000"
 12451 33b1 01       		.byte	0x1
 12452 33b2 F704     		.2byte	0x4f7
 12453 33b4 30000000 		.4byte	0x30
 12454 33b8 FC080000 		.4byte	.LLST59
 12455 33bc 39       		.uleb128 0x39
 12456 33bd EF120000 		.4byte	.LASF958
 12457 33c1 01       		.byte	0x1
 12458 33c2 F804     		.2byte	0x4f8
 12459 33c4 30000000 		.4byte	0x30
 12460 33c8 0F090000 		.4byte	.LLST60
 12461 33cc 34       		.uleb128 0x34
 12462 33cd 1A000000 		.4byte	.LVL99
 12463 33d1 F5310000 		.4byte	0x31f5
 12464 33d5 33       		.uleb128 0x33
 12465 33d6 01       		.uleb128 0x1
 12466 33d7 52       		.byte	0x52
 12467 33d8 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 425


 12468 33d9 F3       		.byte	0xf3
 12469 33da 01       		.uleb128 0x1
 12470 33db 52       		.byte	0x52
 12471 33dc 33       		.uleb128 0x33
 12472 33dd 01       		.uleb128 0x1
 12473 33de 51       		.byte	0x51
 12474 33df 03       		.uleb128 0x3
 12475 33e0 F3       		.byte	0xf3
 12476 33e1 01       		.uleb128 0x1
 12477 33e2 51       		.byte	0x51
 12478 33e3 33       		.uleb128 0x33
 12479 33e4 01       		.uleb128 0x1
 12480 33e5 50       		.byte	0x50
 12481 33e6 03       		.uleb128 0x3
 12482 33e7 74       		.byte	0x74
 12483 33e8 847E     		.sleb128 -252
 12484 33ea 00       		.byte	0
 12485 33eb 00       		.byte	0
 12486 33ec 38       		.uleb128 0x38
 12487 33ed 572C0000 		.4byte	.LASF960
 12488 33f1 01       		.byte	0x1
 12489 33f2 0D05     		.2byte	0x50d
 12490 33f4 30000000 		.4byte	0x30
 12491 33f8 00000000 		.4byte	.LFB35
 12492 33fc 7C000000 		.4byte	.LFE35-.LFB35
 12493 3400 01       		.uleb128 0x1
 12494 3401 9C       		.byte	0x9c
 12495 3402 65340000 		.4byte	0x3465
 12496 3406 3B       		.uleb128 0x3b
 12497 3407 73736C00 		.ascii	"ssl\000"
 12498 340b 01       		.byte	0x1
 12499 340c 0D05     		.2byte	0x50d
 12500 340e 3B0C0000 		.4byte	0xc3b
 12501 3412 22090000 		.4byte	.LLST61
 12502 3416 3D       		.uleb128 0x3d
 12503 3417 72657400 		.ascii	"ret\000"
 12504 341b 01       		.byte	0x1
 12505 341c 0F05     		.2byte	0x50f
 12506 341e 30000000 		.4byte	0x30
 12507 3422 99090000 		.4byte	.LLST62
 12508 3426 47       		.uleb128 0x47
 12509 3427 746D7000 		.ascii	"tmp\000"
 12510 342b 01       		.byte	0x1
 12511 342c 1005     		.2byte	0x510
 12512 342e 37000000 		.4byte	0x37
 12513 3432 02       		.uleb128 0x2
 12514 3433 91       		.byte	0x91
 12515 3434 6F       		.sleb128 -17
 12516 3435 32       		.uleb128 0x32
 12517 3436 2E000000 		.4byte	.LVL106
 12518 343a 255C0000 		.4byte	0x5c25
 12519 343e 4E340000 		.4byte	0x344e
 12520 3442 33       		.uleb128 0x33
 12521 3443 01       		.uleb128 0x1
 12522 3444 51       		.byte	0x51
 12523 3445 01       		.uleb128 0x1
 12524 3446 31       		.byte	0x31
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 426


 12525 3447 33       		.uleb128 0x33
 12526 3448 01       		.uleb128 0x1
 12527 3449 50       		.byte	0x50
 12528 344a 02       		.uleb128 0x2
 12529 344b 74       		.byte	0x74
 12530 344c 00       		.sleb128 0
 12531 344d 00       		.byte	0
 12532 344e 34       		.uleb128 0x34
 12533 344f 64000000 		.4byte	.LVL109
 12534 3453 F5310000 		.4byte	0x31f5
 12535 3457 33       		.uleb128 0x33
 12536 3458 01       		.uleb128 0x1
 12537 3459 51       		.byte	0x51
 12538 345a 02       		.uleb128 0x2
 12539 345b 7D       		.byte	0x7d
 12540 345c 07       		.sleb128 7
 12541 345d 33       		.uleb128 0x33
 12542 345e 01       		.uleb128 0x1
 12543 345f 50       		.byte	0x50
 12544 3460 02       		.uleb128 0x2
 12545 3461 74       		.byte	0x74
 12546 3462 00       		.sleb128 0
 12547 3463 00       		.byte	0
 12548 3464 00       		.byte	0
 12549 3465 38       		.uleb128 0x38
 12550 3466 C0290000 		.4byte	.LASF961
 12551 346a 01       		.byte	0x1
 12552 346b 3F05     		.2byte	0x53f
 12553 346d 30000000 		.4byte	0x30
 12554 3471 00000000 		.4byte	.LFB36
 12555 3475 40000000 		.4byte	.LFE36-.LFB36
 12556 3479 01       		.uleb128 0x1
 12557 347a 9C       		.byte	0x9c
 12558 347b 9E340000 		.4byte	0x349e
 12559 347f 3B       		.uleb128 0x3b
 12560 3480 73736C00 		.ascii	"ssl\000"
 12561 3484 01       		.byte	0x1
 12562 3485 3F05     		.2byte	0x53f
 12563 3487 3B0C0000 		.4byte	0xc3b
 12564 348b D2090000 		.4byte	.LLST63
 12565 348f 48       		.uleb128 0x48
 12566 3490 72657400 		.ascii	"ret\000"
 12567 3494 01       		.byte	0x1
 12568 3495 3F05     		.2byte	0x53f
 12569 3497 30000000 		.4byte	0x30
 12570 349b 01       		.uleb128 0x1
 12571 349c 51       		.byte	0x51
 12572 349d 00       		.byte	0
 12573 349e 38       		.uleb128 0x38
 12574 349f 3A1F0000 		.4byte	.LASF962
 12575 34a3 01       		.byte	0x1
 12576 34a4 5605     		.2byte	0x556
 12577 34a6 30000000 		.4byte	0x30
 12578 34aa 00000000 		.4byte	.LFB37
 12579 34ae 1C000000 		.4byte	.LFE37-.LFB37
 12580 34b2 01       		.uleb128 0x1
 12581 34b3 9C       		.byte	0x9c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 427


 12582 34b4 D7340000 		.4byte	0x34d7
 12583 34b8 3B       		.uleb128 0x3b
 12584 34b9 73736C00 		.ascii	"ssl\000"
 12585 34bd 01       		.byte	0x1
 12586 34be 5605     		.2byte	0x556
 12587 34c0 3B0C0000 		.4byte	0xc3b
 12588 34c4 1A0A0000 		.4byte	.LLST64
 12589 34c8 3B       		.uleb128 0x3b
 12590 34c9 6800     		.ascii	"h\000"
 12591 34cb 01       		.byte	0x1
 12592 34cc 5605     		.2byte	0x556
 12593 34ce D7340000 		.4byte	0x34d7
 12594 34d2 640A0000 		.4byte	.LLST65
 12595 34d6 00       		.byte	0
 12596 34d7 06       		.uleb128 0x6
 12597 34d8 04       		.byte	0x4
 12598 34d9 94090000 		.4byte	0x994
 12599 34dd 38       		.uleb128 0x38
 12600 34de 920E0000 		.4byte	.LASF963
 12601 34e2 01       		.byte	0x1
 12602 34e3 6005     		.2byte	0x560
 12603 34e5 30000000 		.4byte	0x30
 12604 34e9 00000000 		.4byte	.LFB38
 12605 34ed 0E000000 		.4byte	.LFE38-.LFB38
 12606 34f1 01       		.uleb128 0x1
 12607 34f2 9C       		.byte	0x9c
 12608 34f3 08350000 		.4byte	0x3508
 12609 34f7 3B       		.uleb128 0x3b
 12610 34f8 73736C00 		.ascii	"ssl\000"
 12611 34fc 01       		.byte	0x1
 12612 34fd 6005     		.2byte	0x560
 12613 34ff 3B0C0000 		.4byte	0xc3b
 12614 3503 920A0000 		.4byte	.LLST66
 12615 3507 00       		.byte	0
 12616 3508 38       		.uleb128 0x38
 12617 3509 08370000 		.4byte	.LASF964
 12618 350d 01       		.byte	0x1
 12619 350e 6B05     		.2byte	0x56b
 12620 3510 30000000 		.4byte	0x30
 12621 3514 00000000 		.4byte	.LFB39
 12622 3518 0E000000 		.4byte	.LFE39-.LFB39
 12623 351c 01       		.uleb128 0x1
 12624 351d 9C       		.byte	0x9c
 12625 351e 33350000 		.4byte	0x3533
 12626 3522 3B       		.uleb128 0x3b
 12627 3523 73736C00 		.ascii	"ssl\000"
 12628 3527 01       		.byte	0x1
 12629 3528 6B05     		.2byte	0x56b
 12630 352a 3B0C0000 		.4byte	0xc3b
 12631 352e C10A0000 		.4byte	.LLST67
 12632 3532 00       		.byte	0
 12633 3533 38       		.uleb128 0x38
 12634 3534 9A160000 		.4byte	.LASF965
 12635 3538 01       		.byte	0x1
 12636 3539 7505     		.2byte	0x575
 12637 353b B1000000 		.4byte	0xb1
 12638 353f 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 428


 12639 3543 18000000 		.4byte	.LFE40-.LFB40
 12640 3547 01       		.uleb128 0x1
 12641 3548 9C       		.byte	0x9c
 12642 3549 98350000 		.4byte	0x3598
 12643 354d 2E       		.uleb128 0x2e
 12644 354e 04260000 		.4byte	.LASF966
 12645 3552 01       		.byte	0x1
 12646 3553 7505     		.2byte	0x575
 12647 3555 94000000 		.4byte	0x94
 12648 3559 F00A0000 		.4byte	.LLST68
 12649 355d 2E       		.uleb128 0x2e
 12650 355e AB330000 		.4byte	.LASF951
 12651 3562 01       		.byte	0x1
 12652 3563 7505     		.2byte	0x575
 12653 3565 B1000000 		.4byte	0xb1
 12654 3569 110B0000 		.4byte	.LLST69
 12655 356d 47       		.uleb128 0x47
 12656 356e 6D736700 		.ascii	"msg\000"
 12657 3572 01       		.byte	0x1
 12658 3573 7705     		.2byte	0x577
 12659 3575 C1130000 		.4byte	0x13c1
 12660 3579 06       		.uleb128 0x6
 12661 357a F2       		.byte	0xf2
 12662 357b 455C0000 		.4byte	.Ldebug_info0+23621
 12663 357f 00       		.sleb128 0
 12664 3580 34       		.uleb128 0x34
 12665 3581 0E000000 		.4byte	.LVL130
 12666 3585 715C0000 		.4byte	0x5c71
 12667 3589 33       		.uleb128 0x33
 12668 358a 01       		.uleb128 0x1
 12669 358b 51       		.byte	0x51
 12670 358c 02       		.uleb128 0x2
 12671 358d 74       		.byte	0x74
 12672 358e 00       		.sleb128 0
 12673 358f 33       		.uleb128 0x33
 12674 3590 01       		.uleb128 0x1
 12675 3591 50       		.byte	0x50
 12676 3592 03       		.uleb128 0x3
 12677 3593 F3       		.byte	0xf3
 12678 3594 01       		.uleb128 0x1
 12679 3595 50       		.byte	0x50
 12680 3596 00       		.byte	0
 12681 3597 00       		.byte	0
 12682 3598 3E       		.uleb128 0x3e
 12683 3599 AC370000 		.4byte	.LASF967
 12684 359d 01       		.byte	0x1
 12685 359e 8305     		.2byte	0x583
 12686 35a0 00000000 		.4byte	.LFB41
 12687 35a4 30000000 		.4byte	.LFE41-.LFB41
 12688 35a8 01       		.uleb128 0x1
 12689 35a9 9C       		.byte	0x9c
 12690 35aa 42360000 		.4byte	0x3642
 12691 35ae 3B       		.uleb128 0x3b
 12692 35af 6500     		.ascii	"e\000"
 12693 35b1 01       		.byte	0x1
 12694 35b2 8305     		.2byte	0x583
 12695 35b4 94000000 		.4byte	0x94
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 429


 12696 35b8 3D0B0000 		.4byte	.LLST70
 12697 35bc 3B       		.uleb128 0x3b
 12698 35bd 62756600 		.ascii	"buf\000"
 12699 35c1 01       		.byte	0x1
 12700 35c2 8305     		.2byte	0x583
 12701 35c4 B1000000 		.4byte	0xb1
 12702 35c8 770B0000 		.4byte	.LLST71
 12703 35cc 3B       		.uleb128 0x3b
 12704 35cd 6C656E00 		.ascii	"len\000"
 12705 35d1 01       		.byte	0x1
 12706 35d2 8305     		.2byte	0x583
 12707 35d4 94000000 		.4byte	0x94
 12708 35d8 B90B0000 		.4byte	.LLST72
 12709 35dc 49       		.uleb128 0x49
 12710 35dd 12000000 		.4byte	.LBB27
 12711 35e1 1A000000 		.4byte	.LBE27-.LBB27
 12712 35e5 2A360000 		.4byte	0x362a
 12713 35e9 47       		.uleb128 0x47
 12714 35ea 746D7000 		.ascii	"tmp\000"
 12715 35ee 01       		.byte	0x1
 12716 35ef 8905     		.2byte	0x589
 12717 35f1 84240000 		.4byte	0x2484
 12718 35f5 03       		.uleb128 0x3
 12719 35f6 91       		.byte	0x91
 12720 35f7 A07F     		.sleb128 -96
 12721 35f9 32       		.uleb128 0x32
 12722 35fa 1E000000 		.4byte	.LVL135
 12723 35fe 33350000 		.4byte	0x3533
 12724 3602 0D360000 		.4byte	0x360d
 12725 3606 33       		.uleb128 0x33
 12726 3607 01       		.uleb128 0x1
 12727 3608 51       		.byte	0x51
 12728 3609 02       		.uleb128 0x2
 12729 360a 7D       		.byte	0x7d
 12730 360b 00       		.sleb128 0
 12731 360c 00       		.byte	0
 12732 360d 34       		.uleb128 0x34
 12733 360e 28000000 		.4byte	.LVL136
 12734 3612 875C0000 		.4byte	0x5c87
 12735 3616 33       		.uleb128 0x33
 12736 3617 01       		.uleb128 0x1
 12737 3618 52       		.byte	0x52
 12738 3619 02       		.uleb128 0x2
 12739 361a 74       		.byte	0x74
 12740 361b 00       		.sleb128 0
 12741 361c 33       		.uleb128 0x33
 12742 361d 01       		.uleb128 0x1
 12743 361e 51       		.byte	0x51
 12744 361f 02       		.uleb128 0x2
 12745 3620 7D       		.byte	0x7d
 12746 3621 00       		.sleb128 0
 12747 3622 33       		.uleb128 0x33
 12748 3623 01       		.uleb128 0x1
 12749 3624 50       		.byte	0x50
 12750 3625 02       		.uleb128 0x2
 12751 3626 75       		.byte	0x75
 12752 3627 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 430


 12753 3628 00       		.byte	0
 12754 3629 00       		.byte	0
 12755 362a 34       		.uleb128 0x34
 12756 362b 10000000 		.4byte	.LVL132
 12757 362f 33350000 		.4byte	0x3533
 12758 3633 33       		.uleb128 0x33
 12759 3634 01       		.uleb128 0x1
 12760 3635 51       		.byte	0x51
 12761 3636 02       		.uleb128 0x2
 12762 3637 75       		.byte	0x75
 12763 3638 00       		.sleb128 0
 12764 3639 33       		.uleb128 0x33
 12765 363a 01       		.uleb128 0x1
 12766 363b 50       		.byte	0x50
 12767 363c 03       		.uleb128 0x3
 12768 363d F3       		.byte	0xf3
 12769 363e 01       		.uleb128 0x1
 12770 363f 50       		.byte	0x50
 12771 3640 00       		.byte	0
 12772 3641 00       		.byte	0
 12773 3642 3E       		.uleb128 0x3e
 12774 3643 34410000 		.4byte	.LASF968
 12775 3647 01       		.byte	0x1
 12776 3648 9605     		.2byte	0x596
 12777 364a 00000000 		.4byte	.LFB42
 12778 364e 14000000 		.4byte	.LFE42-.LFB42
 12779 3652 01       		.uleb128 0x1
 12780 3653 9C       		.byte	0x9c
 12781 3654 69360000 		.4byte	0x3669
 12782 3658 3B       		.uleb128 0x3b
 12783 3659 73736C00 		.ascii	"ssl\000"
 12784 365d 01       		.byte	0x1
 12785 365e 9605     		.2byte	0x596
 12786 3660 3B0C0000 		.4byte	0xc3b
 12787 3664 FD0B0000 		.4byte	.LLST73
 12788 3668 00       		.byte	0
 12789 3669 3E       		.uleb128 0x3e
 12790 366a 66150000 		.4byte	.LASF969
 12791 366e 01       		.byte	0x1
 12792 366f 9E05     		.2byte	0x59e
 12793 3671 00000000 		.4byte	.LFB43
 12794 3675 28000000 		.4byte	.LFE43-.LFB43
 12795 3679 01       		.uleb128 0x1
 12796 367a 9C       		.byte	0x9c
 12797 367b A6360000 		.4byte	0x36a6
 12798 367f 3B       		.uleb128 0x3b
 12799 3680 73736C00 		.ascii	"ssl\000"
 12800 3684 01       		.byte	0x1
 12801 3685 9E05     		.2byte	0x59e
 12802 3687 3B0C0000 		.4byte	0xc3b
 12803 368b 2C0C0000 		.4byte	.LLST74
 12804 368f 34       		.uleb128 0x34
 12805 3690 22000000 		.4byte	.LVL143
 12806 3694 A45C0000 		.4byte	0x5ca4
 12807 3698 33       		.uleb128 0x33
 12808 3699 01       		.uleb128 0x1
 12809 369a 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 431


 12810 369b 01       		.uleb128 0x1
 12811 369c 31       		.byte	0x31
 12812 369d 33       		.uleb128 0x33
 12813 369e 01       		.uleb128 0x1
 12814 369f 50       		.byte	0x50
 12815 36a0 03       		.uleb128 0x3
 12816 36a1 F3       		.byte	0xf3
 12817 36a2 01       		.uleb128 0x1
 12818 36a3 50       		.byte	0x50
 12819 36a4 00       		.byte	0
 12820 36a5 00       		.byte	0
 12821 36a6 38       		.uleb128 0x38
 12822 36a7 F1230000 		.4byte	.LASF970
 12823 36ab 01       		.byte	0x1
 12824 36ac A705     		.2byte	0x5a7
 12825 36ae B11D0000 		.4byte	0x1db1
 12826 36b2 00000000 		.4byte	.LFB44
 12827 36b6 24000000 		.4byte	.LFE44-.LFB44
 12828 36ba 01       		.uleb128 0x1
 12829 36bb 9C       		.byte	0x9c
 12830 36bc DF360000 		.4byte	0x36df
 12831 36c0 3B       		.uleb128 0x3b
 12832 36c1 73736C00 		.ascii	"ssl\000"
 12833 36c5 01       		.byte	0x1
 12834 36c6 A705     		.2byte	0x5a7
 12835 36c8 3B0C0000 		.4byte	0xc3b
 12836 36cc 4D0C0000 		.4byte	.LLST75
 12837 36d0 3F       		.uleb128 0x3f
 12838 36d1 76080000 		.4byte	.LASF349
 12839 36d5 01       		.byte	0x1
 12840 36d6 A705     		.2byte	0x5a7
 12841 36d8 30000000 		.4byte	0x30
 12842 36dc 01       		.uleb128 0x1
 12843 36dd 51       		.byte	0x51
 12844 36de 00       		.byte	0
 12845 36df 38       		.uleb128 0x38
 12846 36e0 F1200000 		.4byte	.LASF971
 12847 36e4 01       		.byte	0x1
 12848 36e5 6706     		.2byte	0x667
 12849 36e7 30000000 		.4byte	0x30
 12850 36eb 00000000 		.4byte	.LFB45
 12851 36ef 4C000000 		.4byte	.LFE45-.LFB45
 12852 36f3 01       		.uleb128 0x1
 12853 36f4 9C       		.byte	0x9c
 12854 36f5 80370000 		.4byte	0x3780
 12855 36f9 2E       		.uleb128 0x2e
 12856 36fa C0220000 		.4byte	.LASF972
 12857 36fe 01       		.byte	0x1
 12858 36ff 6706     		.2byte	0x667
 12859 3701 80370000 		.4byte	0x3780
 12860 3705 6E0C0000 		.4byte	.LLST76
 12861 3709 2E       		.uleb128 0x2e
 12862 370a 63040000 		.4byte	.LASF549
 12863 370e 01       		.byte	0x1
 12864 370f 6706     		.2byte	0x667
 12865 3711 5B000000 		.4byte	0x5b
 12866 3715 BE0C0000 		.4byte	.LLST77
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 432


 12867 3719 2E       		.uleb128 0x2e
 12868 371a 9D0C0000 		.4byte	.LASF330
 12869 371e 01       		.byte	0x1
 12870 371f 6706     		.2byte	0x667
 12871 3721 30000000 		.4byte	0x30
 12872 3725 000D0000 		.4byte	.LLST78
 12873 3729 2E       		.uleb128 0x2e
 12874 372a 28340000 		.4byte	.LASF81
 12875 372e 01       		.byte	0x1
 12876 372f 6706     		.2byte	0x667
 12877 3731 A9000000 		.4byte	0xa9
 12878 3735 420D0000 		.4byte	.LLST79
 12879 3739 3D       		.uleb128 0x3d
 12880 373a 72657400 		.ascii	"ret\000"
 12881 373e 01       		.byte	0x1
 12882 373f 6906     		.2byte	0x669
 12883 3741 30000000 		.4byte	0x30
 12884 3745 860D0000 		.4byte	.LLST80
 12885 3749 4A       		.uleb128 0x4a
 12886 374a 00000000 		.4byte	.Ldebug_ranges0+0
 12887 374e 39       		.uleb128 0x39
 12888 374f 8F180000 		.4byte	.LASF551
 12889 3753 01       		.byte	0x1
 12890 3754 6B06     		.2byte	0x66b
 12891 3756 30000000 		.4byte	0x30
 12892 375a B60D0000 		.4byte	.LLST81
 12893 375e 3D       		.uleb128 0x3d
 12894 375f 64657200 		.ascii	"der\000"
 12895 3763 01       		.byte	0x1
 12896 3764 6C06     		.2byte	0x66c
 12897 3766 4A1C0000 		.4byte	0x1c4a
 12898 376a E00D0000 		.4byte	.LLST82
 12899 376e 34       		.uleb128 0x34
 12900 376f 20000000 		.4byte	.LVL150
 12901 3773 675B0000 		.4byte	0x5b67
 12902 3777 33       		.uleb128 0x33
 12903 3778 01       		.uleb128 0x1
 12904 3779 50       		.byte	0x50
 12905 377a 02       		.uleb128 0x2
 12906 377b 75       		.byte	0x75
 12907 377c 14       		.sleb128 20
 12908 377d 00       		.byte	0
 12909 377e 00       		.byte	0
 12910 377f 00       		.byte	0
 12911 3780 06       		.uleb128 0x6
 12912 3781 04       		.byte	0x4
 12913 3782 4A1C0000 		.4byte	0x1c4a
 12914 3786 4B       		.uleb128 0x4b
 12915 3787 84320000 		.4byte	.LASF1143
 12916 378b 02       		.byte	0x2
 12917 378c B3       		.byte	0xb3
 12918 378d 03       		.byte	0x3
 12919 378e B2370000 		.4byte	0x37b2
 12920 3792 24       		.uleb128 0x24
 12921 3793 6D656D00 		.ascii	"mem\000"
 12922 3797 02       		.byte	0x2
 12923 3798 B3       		.byte	0xb3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 433


 12924 3799 C9000000 		.4byte	0xc9
 12925 379d 24       		.uleb128 0x24
 12926 379e 6C656E00 		.ascii	"len\000"
 12927 37a2 02       		.byte	0x2
 12928 37a3 B3       		.byte	0xb3
 12929 37a4 5B000000 		.4byte	0x5b
 12930 37a8 4C       		.uleb128 0x4c
 12931 37a9 7A00     		.ascii	"z\000"
 12932 37ab 02       		.byte	0x2
 12933 37ac B5       		.byte	0xb5
 12934 37ad B2370000 		.4byte	0x37b2
 12935 37b1 00       		.byte	0
 12936 37b2 06       		.uleb128 0x6
 12937 37b3 04       		.byte	0x4
 12938 37b4 B8370000 		.4byte	0x37b8
 12939 37b8 4D       		.uleb128 0x4d
 12940 37b9 37000000 		.4byte	0x37
 12941 37bd 3E       		.uleb128 0x3e
 12942 37be 311B0000 		.4byte	.LASF973
 12943 37c2 01       		.byte	0x1
 12944 37c3 8A06     		.2byte	0x68a
 12945 37c5 00000000 		.4byte	.LFB46
 12946 37c9 38000000 		.4byte	.LFE46-.LFB46
 12947 37cd 01       		.uleb128 0x1
 12948 37ce 9C       		.byte	0x9c
 12949 37cf 5A380000 		.4byte	0x385a
 12950 37d3 2E       		.uleb128 0x2e
 12951 37d4 C0220000 		.4byte	.LASF972
 12952 37d8 01       		.byte	0x1
 12953 37d9 8A06     		.2byte	0x68a
 12954 37db 80370000 		.4byte	0x3780
 12955 37df 000E0000 		.4byte	.LLST83
 12956 37e3 44       		.uleb128 0x44
 12957 37e4 0C000000 		.4byte	.LBB34
 12958 37e8 2A000000 		.4byte	.LBE34-.LBB34
 12959 37ec 3D       		.uleb128 0x3d
 12960 37ed 64657200 		.ascii	"der\000"
 12961 37f1 01       		.byte	0x1
 12962 37f2 8E06     		.2byte	0x68e
 12963 37f4 4A1C0000 		.4byte	0x1c4a
 12964 37f8 370E0000 		.4byte	.LLST84
 12965 37fc 49       		.uleb128 0x49
 12966 37fd 1A000000 		.4byte	.LBB35
 12967 3801 06000000 		.4byte	.LBE35-.LBB35
 12968 3805 22380000 		.4byte	0x3822
 12969 3809 3D       		.uleb128 0x3d
 12970 380a 787000   		.ascii	"xp\000"
 12971 380d 01       		.byte	0x1
 12972 380e 9606     		.2byte	0x696
 12973 3810 A9000000 		.4byte	0xa9
 12974 3814 550E0000 		.4byte	.LLST85
 12975 3818 3A       		.uleb128 0x3a
 12976 3819 20000000 		.4byte	.LVL162
 12977 381d BB5C0000 		.4byte	0x5cbb
 12978 3821 00       		.byte	0
 12979 3822 41       		.uleb128 0x41
 12980 3823 86370000 		.4byte	0x3786
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 434


 12981 3827 2A000000 		.4byte	.LBB36
 12982 382b 0C000000 		.4byte	.LBE36-.LBB36
 12983 382f 01       		.byte	0x1
 12984 3830 9206     		.2byte	0x692
 12985 3832 43       		.uleb128 0x43
 12986 3833 9D370000 		.4byte	0x379d
 12987 3837 680E0000 		.4byte	.LLST86
 12988 383b 43       		.uleb128 0x43
 12989 383c 92370000 		.4byte	0x3792
 12990 3840 7C0E0000 		.4byte	.LLST87
 12991 3844 44       		.uleb128 0x44
 12992 3845 2A000000 		.4byte	.LBB37
 12993 3849 0C000000 		.4byte	.LBE37-.LBB37
 12994 384d 45       		.uleb128 0x45
 12995 384e A8370000 		.4byte	0x37a8
 12996 3852 8F0E0000 		.4byte	.LLST88
 12997 3856 00       		.byte	0
 12998 3857 00       		.byte	0
 12999 3858 00       		.byte	0
 13000 3859 00       		.byte	0
 13001 385a 3E       		.uleb128 0x3e
 13002 385b 351D0000 		.4byte	.LASF974
 13003 385f 01       		.byte	0x1
 13004 3860 BA06     		.2byte	0x6ba
 13005 3862 00000000 		.4byte	.LFB48
 13006 3866 20000000 		.4byte	.LFE48-.LFB48
 13007 386a 01       		.uleb128 0x1
 13008 386b 9C       		.byte	0x9c
 13009 386c DC380000 		.4byte	0x38dc
 13010 3870 3B       		.uleb128 0x3b
 13011 3871 636D00   		.ascii	"cm\000"
 13012 3874 01       		.byte	0x1
 13013 3875 BA06     		.2byte	0x6ba
 13014 3877 2E090000 		.4byte	0x92e
 13015 387b BA0E0000 		.4byte	.LLST89
 13016 387f 49       		.uleb128 0x49
 13017 3880 18000000 		.4byte	.LBB38
 13018 3884 06000000 		.4byte	.LBE38-.LBB38
 13019 3888 AC380000 		.4byte	0x38ac
 13020 388c 3D       		.uleb128 0x3d
 13021 388d 787000   		.ascii	"xp\000"
 13022 3890 01       		.byte	0x1
 13023 3891 D406     		.2byte	0x6d4
 13024 3893 A9000000 		.4byte	0xa9
 13025 3897 E60E0000 		.4byte	.LLST90
 13026 389b 34       		.uleb128 0x34
 13027 389c 1E000000 		.4byte	.LVL172
 13028 38a0 BB5C0000 		.4byte	0x5cbb
 13029 38a4 33       		.uleb128 0x33
 13030 38a5 01       		.uleb128 0x1
 13031 38a6 50       		.byte	0x50
 13032 38a7 02       		.uleb128 0x2
 13033 38a8 74       		.byte	0x74
 13034 38a9 00       		.sleb128 0
 13035 38aa 00       		.byte	0
 13036 38ab 00       		.byte	0
 13037 38ac 32       		.uleb128 0x32
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 435


 13038 38ad 10000000 		.4byte	.LVL170
 13039 38b1 CC5C0000 		.4byte	0x5ccc
 13040 38b5 CA380000 		.4byte	0x38ca
 13041 38b9 33       		.uleb128 0x33
 13042 38ba 01       		.uleb128 0x1
 13043 38bb 52       		.byte	0x52
 13044 38bc 01       		.uleb128 0x1
 13045 38bd 30       		.byte	0x30
 13046 38be 33       		.uleb128 0x33
 13047 38bf 01       		.uleb128 0x1
 13048 38c0 51       		.byte	0x51
 13049 38c1 01       		.uleb128 0x1
 13050 38c2 3B       		.byte	0x3b
 13051 38c3 33       		.uleb128 0x33
 13052 38c4 01       		.uleb128 0x1
 13053 38c5 50       		.byte	0x50
 13054 38c6 02       		.uleb128 0x2
 13055 38c7 74       		.byte	0x74
 13056 38c8 00       		.sleb128 0
 13057 38c9 00       		.byte	0
 13058 38ca 34       		.uleb128 0x34
 13059 38cb 18000000 		.4byte	.LVL171
 13060 38cf EE5C0000 		.4byte	0x5cee
 13061 38d3 33       		.uleb128 0x33
 13062 38d4 01       		.uleb128 0x1
 13063 38d5 50       		.byte	0x50
 13064 38d6 03       		.uleb128 0x3
 13065 38d7 74       		.byte	0x74
 13066 38d8 D000     		.sleb128 80
 13067 38da 00       		.byte	0
 13068 38db 00       		.byte	0
 13069 38dc 38       		.uleb128 0x38
 13070 38dd 1F380000 		.4byte	.LASF975
 13071 38e1 01       		.byte	0x1
 13072 38e2 9C06     		.2byte	0x69c
 13073 38e4 2E090000 		.4byte	0x92e
 13074 38e8 00000000 		.4byte	.LFB47
 13075 38ec 2C000000 		.4byte	.LFE47-.LFB47
 13076 38f0 01       		.uleb128 0x1
 13077 38f1 9C       		.byte	0x9c
 13078 38f2 5E390000 		.4byte	0x395e
 13079 38f6 3D       		.uleb128 0x3d
 13080 38f7 636D00   		.ascii	"cm\000"
 13081 38fa 01       		.byte	0x1
 13082 38fb 9E06     		.2byte	0x69e
 13083 38fd 2E090000 		.4byte	0x92e
 13084 3901 F90E0000 		.4byte	.LLST91
 13085 3905 32       		.uleb128 0x32
 13086 3906 08000000 		.4byte	.LVL174
 13087 390a 675B0000 		.4byte	0x5b67
 13088 390e 19390000 		.4byte	0x3919
 13089 3912 33       		.uleb128 0x33
 13090 3913 01       		.uleb128 0x1
 13091 3914 50       		.byte	0x50
 13092 3915 02       		.uleb128 0x2
 13093 3916 08       		.byte	0x8
 13094 3917 5C       		.byte	0x5c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 436


 13095 3918 00       		.byte	0
 13096 3919 32       		.uleb128 0x32
 13097 391a 14000000 		.4byte	.LVL176
 13098 391e 095D0000 		.4byte	0x5d09
 13099 3922 38390000 		.4byte	0x3938
 13100 3926 33       		.uleb128 0x33
 13101 3927 01       		.uleb128 0x1
 13102 3928 52       		.byte	0x52
 13103 3929 02       		.uleb128 0x2
 13104 392a 08       		.byte	0x8
 13105 392b 5C       		.byte	0x5c
 13106 392c 33       		.uleb128 0x33
 13107 392d 01       		.uleb128 0x1
 13108 392e 51       		.byte	0x51
 13109 392f 01       		.uleb128 0x1
 13110 3930 30       		.byte	0x30
 13111 3931 33       		.uleb128 0x33
 13112 3932 01       		.uleb128 0x1
 13113 3933 50       		.byte	0x50
 13114 3934 02       		.uleb128 0x2
 13115 3935 74       		.byte	0x74
 13116 3936 00       		.sleb128 0
 13117 3937 00       		.byte	0
 13118 3938 32       		.uleb128 0x32
 13119 3939 1C000000 		.4byte	.LVL177
 13120 393d 265D0000 		.4byte	0x5d26
 13121 3941 4D390000 		.4byte	0x394d
 13122 3945 33       		.uleb128 0x33
 13123 3946 01       		.uleb128 0x1
 13124 3947 50       		.byte	0x50
 13125 3948 03       		.uleb128 0x3
 13126 3949 74       		.byte	0x74
 13127 394a D000     		.sleb128 80
 13128 394c 00       		.byte	0
 13129 394d 34       		.uleb128 0x34
 13130 394e 28000000 		.4byte	.LVL178
 13131 3952 5A380000 		.4byte	0x385a
 13132 3956 33       		.uleb128 0x33
 13133 3957 01       		.uleb128 0x1
 13134 3958 50       		.byte	0x50
 13135 3959 02       		.uleb128 0x2
 13136 395a 74       		.byte	0x74
 13137 395b 00       		.sleb128 0
 13138 395c 00       		.byte	0
 13139 395d 00       		.byte	0
 13140 395e 38       		.uleb128 0x38
 13141 395f 82340000 		.4byte	.LASF976
 13142 3963 01       		.byte	0x1
 13143 3964 DB06     		.2byte	0x6db
 13144 3966 30000000 		.4byte	0x30
 13145 396a 00000000 		.4byte	.LFB49
 13146 396e 32000000 		.4byte	.LFE49-.LFB49
 13147 3972 01       		.uleb128 0x1
 13148 3973 9C       		.byte	0x9c
 13149 3974 C5390000 		.4byte	0x39c5
 13150 3978 3B       		.uleb128 0x3b
 13151 3979 636D00   		.ascii	"cm\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 437


 13152 397c 01       		.byte	0x1
 13153 397d DB06     		.2byte	0x6db
 13154 397f 2E090000 		.4byte	0x92e
 13155 3983 230F0000 		.4byte	.LLST92
 13156 3987 32       		.uleb128 0x32
 13157 3988 12000000 		.4byte	.LVL182
 13158 398c 3B5D0000 		.4byte	0x5d3b
 13159 3990 9B390000 		.4byte	0x399b
 13160 3994 33       		.uleb128 0x33
 13161 3995 01       		.uleb128 0x1
 13162 3996 50       		.byte	0x50
 13163 3997 02       		.uleb128 0x2
 13164 3998 75       		.byte	0x75
 13165 3999 00       		.sleb128 0
 13166 399a 00       		.byte	0
 13167 399b 32       		.uleb128 0x32
 13168 399c 1E000000 		.4byte	.LVL183
 13169 39a0 CC5C0000 		.4byte	0x5ccc
 13170 39a4 B4390000 		.4byte	0x39b4
 13171 39a8 33       		.uleb128 0x33
 13172 39a9 01       		.uleb128 0x1
 13173 39aa 51       		.byte	0x51
 13174 39ab 01       		.uleb128 0x1
 13175 39ac 3B       		.byte	0x3b
 13176 39ad 33       		.uleb128 0x33
 13177 39ae 01       		.uleb128 0x1
 13178 39af 50       		.byte	0x50
 13179 39b0 02       		.uleb128 0x2
 13180 39b1 74       		.byte	0x74
 13181 39b2 00       		.sleb128 0
 13182 39b3 00       		.byte	0
 13183 39b4 34       		.uleb128 0x34
 13184 39b5 24000000 		.4byte	.LVL184
 13185 39b9 505D0000 		.4byte	0x5d50
 13186 39bd 33       		.uleb128 0x33
 13187 39be 01       		.uleb128 0x1
 13188 39bf 50       		.byte	0x50
 13189 39c0 02       		.uleb128 0x2
 13190 39c1 75       		.byte	0x75
 13191 39c2 00       		.sleb128 0
 13192 39c3 00       		.byte	0
 13193 39c4 00       		.byte	0
 13194 39c5 38       		.uleb128 0x38
 13195 39c6 00160000 		.4byte	.LASF977
 13196 39ca 01       		.byte	0x1
 13197 39cb C307     		.2byte	0x7c3
 13198 39cd 30000000 		.4byte	0x30
 13199 39d1 00000000 		.4byte	.LFB52
 13200 39d5 06000000 		.4byte	.LFE52-.LFB52
 13201 39d9 01       		.uleb128 0x1
 13202 39da 9C       		.byte	0x9c
 13203 39db F0390000 		.4byte	0x39f0
 13204 39df 3B       		.uleb128 0x3b
 13205 39e0 73736C00 		.ascii	"ssl\000"
 13206 39e4 01       		.byte	0x1
 13207 39e5 C307     		.2byte	0x7c3
 13208 39e7 3B0C0000 		.4byte	0xc3b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 438


 13209 39eb 730F0000 		.4byte	.LLST93
 13210 39ef 00       		.byte	0
 13211 39f0 38       		.uleb128 0x38
 13212 39f1 CF190000 		.4byte	.LASF978
 13213 39f5 01       		.byte	0x1
 13214 39f6 CC07     		.2byte	0x7cc
 13215 39f8 30000000 		.4byte	0x30
 13216 39fc 00000000 		.4byte	.LFB53
 13217 3a00 14000000 		.4byte	.LFE53-.LFB53
 13218 3a04 01       		.uleb128 0x1
 13219 3a05 9C       		.byte	0x9c
 13220 3a06 1B3A0000 		.4byte	0x3a1b
 13221 3a0a 3B       		.uleb128 0x3b
 13222 3a0b 63747800 		.ascii	"ctx\000"
 13223 3a0f 01       		.byte	0x1
 13224 3a10 CC07     		.2byte	0x7cc
 13225 3a12 11240000 		.4byte	0x2411
 13226 3a16 A10F0000 		.4byte	.LLST94
 13227 3a1a 00       		.byte	0
 13228 3a1b 38       		.uleb128 0x38
 13229 3a1c 55220000 		.4byte	.LASF979
 13230 3a20 01       		.byte	0x1
 13231 3a21 EC07     		.2byte	0x7ec
 13232 3a23 30000000 		.4byte	0x30
 13233 3a27 00000000 		.4byte	.LFB55
 13234 3a2b 1C000000 		.4byte	.LFE55-.LFB55
 13235 3a2f 01       		.uleb128 0x1
 13236 3a30 9C       		.byte	0x9c
 13237 3a31 463A0000 		.4byte	0x3a46
 13238 3a35 3B       		.uleb128 0x3b
 13239 3a36 73736C00 		.ascii	"ssl\000"
 13240 3a3a 01       		.byte	0x1
 13241 3a3b EC07     		.2byte	0x7ec
 13242 3a3d 3B0C0000 		.4byte	0xc3b
 13243 3a41 E50F0000 		.4byte	.LLST95
 13244 3a45 00       		.byte	0
 13245 3a46 29       		.uleb128 0x29
 13246 3a47 F40B0000 		.4byte	.LASF980
 13247 3a4b 01       		.byte	0x1
 13248 3a4c F807     		.2byte	0x7f8
 13249 3a4e 30000000 		.4byte	0x30
 13250 3a52 01       		.byte	0x1
 13251 3a53 703A0000 		.4byte	0x3a70
 13252 3a57 27       		.uleb128 0x27
 13253 3a58 161E0000 		.4byte	.LASF981
 13254 3a5c 01       		.byte	0x1
 13255 3a5d F807     		.2byte	0x7f8
 13256 3a5f 63130000 		.4byte	0x1363
 13257 3a63 27       		.uleb128 0x27
 13258 3a64 A73F0000 		.4byte	.LASF99
 13259 3a68 01       		.byte	0x1
 13260 3a69 F807     		.2byte	0x7f8
 13261 3a6b 30000000 		.4byte	0x30
 13262 3a6f 00       		.byte	0
 13263 3a70 38       		.uleb128 0x38
 13264 3a71 77190000 		.4byte	.LASF982
 13265 3a75 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 439


 13266 3a76 1A08     		.2byte	0x81a
 13267 3a78 30000000 		.4byte	0x30
 13268 3a7c 00000000 		.4byte	.LFB57
 13269 3a80 16000000 		.4byte	.LFE57-.LFB57
 13270 3a84 01       		.uleb128 0x1
 13271 3a85 9C       		.byte	0x9c
 13272 3a86 CC3A0000 		.4byte	0x3acc
 13273 3a8a 3B       		.uleb128 0x3b
 13274 3a8b 63747800 		.ascii	"ctx\000"
 13275 3a8f 01       		.byte	0x1
 13276 3a90 1A08     		.2byte	0x81a
 13277 3a92 11240000 		.4byte	0x2411
 13278 3a96 2D100000 		.4byte	.LLST96
 13279 3a9a 3F       		.uleb128 0x3f
 13280 3a9b A73F0000 		.4byte	.LASF99
 13281 3a9f 01       		.byte	0x1
 13282 3aa0 1A08     		.2byte	0x81a
 13283 3aa2 30000000 		.4byte	0x30
 13284 3aa6 01       		.uleb128 0x1
 13285 3aa7 51       		.byte	0x51
 13286 3aa8 41       		.uleb128 0x41
 13287 3aa9 463A0000 		.4byte	0x3a46
 13288 3aad 04000000 		.4byte	.LBB41
 13289 3ab1 10000000 		.4byte	.LBE41-.LBB41
 13290 3ab5 01       		.byte	0x1
 13291 3ab6 2308     		.2byte	0x823
 13292 3ab8 43       		.uleb128 0x43
 13293 3ab9 633A0000 		.4byte	0x3a63
 13294 3abd 74100000 		.4byte	.LLST97
 13295 3ac1 43       		.uleb128 0x43
 13296 3ac2 573A0000 		.4byte	0x3a57
 13297 3ac6 87100000 		.4byte	.LLST98
 13298 3aca 00       		.byte	0
 13299 3acb 00       		.byte	0
 13300 3acc 38       		.uleb128 0x38
 13301 3acd EA320000 		.4byte	.LASF983
 13302 3ad1 01       		.byte	0x1
 13303 3ad2 2808     		.2byte	0x828
 13304 3ad4 30000000 		.4byte	0x30
 13305 3ad8 00000000 		.4byte	.LFB58
 13306 3adc 18000000 		.4byte	.LFE58-.LFB58
 13307 3ae0 01       		.uleb128 0x1
 13308 3ae1 9C       		.byte	0x9c
 13309 3ae2 283B0000 		.4byte	0x3b28
 13310 3ae6 3B       		.uleb128 0x3b
 13311 3ae7 73736C00 		.ascii	"ssl\000"
 13312 3aeb 01       		.byte	0x1
 13313 3aec 2808     		.2byte	0x828
 13314 3aee 3B0C0000 		.4byte	0xc3b
 13315 3af2 B7100000 		.4byte	.LLST99
 13316 3af6 3F       		.uleb128 0x3f
 13317 3af7 A73F0000 		.4byte	.LASF99
 13318 3afb 01       		.byte	0x1
 13319 3afc 2808     		.2byte	0x828
 13320 3afe 30000000 		.4byte	0x30
 13321 3b02 01       		.uleb128 0x1
 13322 3b03 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 440


 13323 3b04 41       		.uleb128 0x41
 13324 3b05 463A0000 		.4byte	0x3a46
 13325 3b09 04000000 		.4byte	.LBB45
 13326 3b0d 12000000 		.4byte	.LBE45-.LBB45
 13327 3b11 01       		.byte	0x1
 13328 3b12 3108     		.2byte	0x831
 13329 3b14 43       		.uleb128 0x43
 13330 3b15 633A0000 		.4byte	0x3a63
 13331 3b19 F1100000 		.4byte	.LLST100
 13332 3b1d 43       		.uleb128 0x43
 13333 3b1e 573A0000 		.4byte	0x3a57
 13334 3b22 04110000 		.4byte	.LLST101
 13335 3b26 00       		.byte	0
 13336 3b27 00       		.byte	0
 13337 3b28 38       		.uleb128 0x38
 13338 3b29 DE0A0000 		.4byte	.LASF984
 13339 3b2d 01       		.byte	0x1
 13340 3b2e 3508     		.2byte	0x835
 13341 3b30 30000000 		.4byte	0x30
 13342 3b34 00000000 		.4byte	.LFB59
 13343 3b38 68000000 		.4byte	.LFE59-.LFB59
 13344 3b3c 01       		.uleb128 0x1
 13345 3b3d 9C       		.byte	0x9c
 13346 3b3e 9D3B0000 		.4byte	0x3b9d
 13347 3b42 3B       		.uleb128 0x3b
 13348 3b43 73736C00 		.ascii	"ssl\000"
 13349 3b47 01       		.byte	0x1
 13350 3b48 3508     		.2byte	0x835
 13351 3b4a 3B0C0000 		.4byte	0xc3b
 13352 3b4e 2B110000 		.4byte	.LLST102
 13353 3b52 2E       		.uleb128 0x2e
 13354 3b53 A73F0000 		.4byte	.LASF99
 13355 3b57 01       		.byte	0x1
 13356 3b58 3508     		.2byte	0x835
 13357 3b5a 30000000 		.4byte	0x30
 13358 3b5e 62110000 		.4byte	.LLST103
 13359 3b62 39       		.uleb128 0x39
 13360 3b63 E03F0000 		.4byte	.LASF128
 13361 3b67 01       		.byte	0x1
 13362 3b68 3708     		.2byte	0x837
 13363 3b6a 49000000 		.4byte	0x49
 13364 3b6e 9C110000 		.4byte	.LLST104
 13365 3b72 3C       		.uleb128 0x3c
 13366 3b73 C2180000 		.4byte	.LASF985
 13367 3b77 01       		.byte	0x1
 13368 3b78 3808     		.2byte	0x838
 13369 3b7a 49000000 		.4byte	0x49
 13370 3b7e 00       		.byte	0
 13371 3b7f 3A       		.uleb128 0x3a
 13372 3b80 12000000 		.4byte	.LVL214
 13373 3b84 655D0000 		.4byte	0x5d65
 13374 3b88 34       		.uleb128 0x34
 13375 3b89 54000000 		.4byte	.LVL216
 13376 3b8d 715D0000 		.4byte	0x5d71
 13377 3b91 33       		.uleb128 0x33
 13378 3b92 01       		.uleb128 0x1
 13379 3b93 53       		.byte	0x53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 441


 13380 3b94 01       		.uleb128 0x1
 13381 3b95 30       		.byte	0x30
 13382 3b96 33       		.uleb128 0x33
 13383 3b97 01       		.uleb128 0x1
 13384 3b98 52       		.byte	0x52
 13385 3b99 01       		.uleb128 0x1
 13386 3b9a 30       		.byte	0x30
 13387 3b9b 00       		.byte	0
 13388 3b9c 00       		.byte	0
 13389 3b9d 29       		.uleb128 0x29
 13390 3b9e E90B0000 		.4byte	.LASF986
 13391 3ba2 01       		.byte	0x1
 13392 3ba3 7C08     		.2byte	0x87c
 13393 3ba5 5B000000 		.4byte	0x5b
 13394 3ba9 03       		.byte	0x3
 13395 3baa BB3B0000 		.4byte	0x3bbb
 13396 3bae 27       		.uleb128 0x27
 13397 3baf A52D0000 		.4byte	.LASF987
 13398 3bb3 01       		.byte	0x1
 13399 3bb4 7C08     		.2byte	0x87c
 13400 3bb6 B11D0000 		.4byte	0x1db1
 13401 3bba 00       		.byte	0
 13402 3bbb 4E       		.uleb128 0x4e
 13403 3bbc 6A0C0000 		.4byte	.LASF988
 13404 3bc0 01       		.byte	0x1
 13405 3bc1 8308     		.2byte	0x883
 13406 3bc3 30000000 		.4byte	0x30
 13407 3bc7 00000000 		.4byte	.LFB62
 13408 3bcb 4E000000 		.4byte	.LFE62-.LFB62
 13409 3bcf 01       		.uleb128 0x1
 13410 3bd0 9C       		.byte	0x9c
 13411 3bd1 AC3C0000 		.4byte	0x3cac
 13412 3bd5 3B       		.uleb128 0x3b
 13413 3bd6 636D00   		.ascii	"cm\000"
 13414 3bd9 01       		.byte	0x1
 13415 3bda 8308     		.2byte	0x883
 13416 3bdc 2E090000 		.4byte	0x92e
 13417 3be0 C8110000 		.4byte	.LLST105
 13418 3be4 2E       		.uleb128 0x2e
 13419 3be5 A52D0000 		.4byte	.LASF987
 13420 3be9 01       		.byte	0x1
 13421 3bea 8308     		.2byte	0x883
 13422 3bec 63130000 		.4byte	0x1363
 13423 3bf0 F4110000 		.4byte	.LLST106
 13424 3bf4 39       		.uleb128 0x39
 13425 3bf5 36210000 		.4byte	.LASF989
 13426 3bf9 01       		.byte	0x1
 13427 3bfa 8508     		.2byte	0x885
 13428 3bfc 99130000 		.4byte	0x1399
 13429 3c00 20120000 		.4byte	.LLST107
 13430 3c04 3D       		.uleb128 0x3d
 13431 3c05 72657400 		.ascii	"ret\000"
 13432 3c09 01       		.byte	0x1
 13433 3c0a 8608     		.2byte	0x886
 13434 3c0c 30000000 		.4byte	0x30
 13435 3c10 33120000 		.4byte	.LLST108
 13436 3c14 2B       		.uleb128 0x2b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 442


 13437 3c15 726F7700 		.ascii	"row\000"
 13438 3c19 01       		.byte	0x1
 13439 3c1a 8708     		.2byte	0x887
 13440 3c1c 5B000000 		.4byte	0x5b
 13441 3c20 4F       		.uleb128 0x4f
 13442 3c21 9D3B0000 		.4byte	0x3b9d
 13443 3c25 04000000 		.4byte	.LBB50
 13444 3c29 18000000 		.4byte	.Ldebug_ranges0+0x18
 13445 3c2d 01       		.byte	0x1
 13446 3c2e 8708     		.2byte	0x887
 13447 3c30 4E3C0000 		.4byte	0x3c4e
 13448 3c34 43       		.uleb128 0x43
 13449 3c35 AE3B0000 		.4byte	0x3bae
 13450 3c39 F4110000 		.4byte	.LLST106
 13451 3c3d 34       		.uleb128 0x34
 13452 3c3e 0E000000 		.4byte	.LVL222
 13453 3c42 FB2B0000 		.4byte	0x2bfb
 13454 3c46 33       		.uleb128 0x33
 13455 3c47 01       		.uleb128 0x1
 13456 3c48 50       		.byte	0x50
 13457 3c49 02       		.uleb128 0x2
 13458 3c4a 77       		.byte	0x77
 13459 3c4b 00       		.sleb128 0
 13460 3c4c 00       		.byte	0
 13461 3c4d 00       		.byte	0
 13462 3c4e 49       		.uleb128 0x49
 13463 3c4f 2E000000 		.4byte	.LBB58
 13464 3c53 16000000 		.4byte	.LBE58-.LBB58
 13465 3c57 873C0000 		.4byte	0x3c87
 13466 3c5b 39       		.uleb128 0x39
 13467 3c5c B4040000 		.4byte	.LASF343
 13468 3c60 01       		.byte	0x1
 13469 3c61 8D08     		.2byte	0x88d
 13470 3c63 63130000 		.4byte	0x1363
 13471 3c67 52120000 		.4byte	.LLST110
 13472 3c6b 34       		.uleb128 0x34
 13473 3c6c 3A000000 		.4byte	.LVL228
 13474 3c70 365B0000 		.4byte	0x5b36
 13475 3c74 33       		.uleb128 0x33
 13476 3c75 01       		.uleb128 0x1
 13477 3c76 52       		.byte	0x52
 13478 3c77 01       		.uleb128 0x1
 13479 3c78 44       		.byte	0x44
 13480 3c79 33       		.uleb128 0x33
 13481 3c7a 01       		.uleb128 0x1
 13482 3c7b 51       		.byte	0x51
 13483 3c7c 02       		.uleb128 0x2
 13484 3c7d 74       		.byte	0x74
 13485 3c7e 20       		.sleb128 32
 13486 3c7f 33       		.uleb128 0x33
 13487 3c80 01       		.uleb128 0x1
 13488 3c81 50       		.byte	0x50
 13489 3c82 02       		.uleb128 0x2
 13490 3c83 77       		.byte	0x77
 13491 3c84 00       		.sleb128 0
 13492 3c85 00       		.byte	0
 13493 3c86 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 443


 13494 3c87 32       		.uleb128 0x32
 13495 3c88 18000000 		.4byte	.LVL223
 13496 3c8c 3B5D0000 		.4byte	0x5d3b
 13497 3c90 9B3C0000 		.4byte	0x3c9b
 13498 3c94 33       		.uleb128 0x33
 13499 3c95 01       		.uleb128 0x1
 13500 3c96 50       		.byte	0x50
 13501 3c97 02       		.uleb128 0x2
 13502 3c98 75       		.byte	0x75
 13503 3c99 00       		.sleb128 0
 13504 3c9a 00       		.byte	0
 13505 3c9b 34       		.uleb128 0x34
 13506 3c9c 4A000000 		.4byte	.LVL232
 13507 3ca0 505D0000 		.4byte	0x5d50
 13508 3ca4 33       		.uleb128 0x33
 13509 3ca5 01       		.uleb128 0x1
 13510 3ca6 50       		.byte	0x50
 13511 3ca7 02       		.uleb128 0x2
 13512 3ca8 75       		.byte	0x75
 13513 3ca9 00       		.sleb128 0
 13514 3caa 00       		.byte	0
 13515 3cab 00       		.byte	0
 13516 3cac 4E       		.uleb128 0x4e
 13517 3cad D7080000 		.4byte	.LASF990
 13518 3cb1 01       		.byte	0x1
 13519 3cb2 0A09     		.2byte	0x90a
 13520 3cb4 99130000 		.4byte	0x1399
 13521 3cb8 00000000 		.4byte	.LFB63
 13522 3cbc 50000000 		.4byte	.LFE63-.LFB63
 13523 3cc0 01       		.uleb128 0x1
 13524 3cc1 9C       		.byte	0x9c
 13525 3cc2 AC3D0000 		.4byte	0x3dac
 13526 3cc6 3B       		.uleb128 0x3b
 13527 3cc7 767000   		.ascii	"vp\000"
 13528 3cca 01       		.byte	0x1
 13529 3ccb 0A09     		.2byte	0x90a
 13530 3ccd A9000000 		.4byte	0xa9
 13531 3cd1 8C120000 		.4byte	.LLST111
 13532 3cd5 2E       		.uleb128 0x2e
 13533 3cd6 A52D0000 		.4byte	.LASF987
 13534 3cda 01       		.byte	0x1
 13535 3cdb 0A09     		.2byte	0x90a
 13536 3cdd 63130000 		.4byte	0x1363
 13537 3ce1 C6120000 		.4byte	.LLST112
 13538 3ce5 3D       		.uleb128 0x3d
 13539 3ce6 636D00   		.ascii	"cm\000"
 13540 3ce9 01       		.byte	0x1
 13541 3cea 0C09     		.2byte	0x90c
 13542 3cec 2E090000 		.4byte	0x92e
 13543 3cf0 F2120000 		.4byte	.LLST113
 13544 3cf4 3D       		.uleb128 0x3d
 13545 3cf5 72657400 		.ascii	"ret\000"
 13546 3cf9 01       		.byte	0x1
 13547 3cfa 0D09     		.2byte	0x90d
 13548 3cfc 99130000 		.4byte	0x1399
 13549 3d00 2C130000 		.4byte	.LLST114
 13550 3d04 39       		.uleb128 0x39
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 444


 13551 3d05 36210000 		.4byte	.LASF989
 13552 3d09 01       		.byte	0x1
 13553 3d0a 0E09     		.2byte	0x90e
 13554 3d0c 99130000 		.4byte	0x1399
 13555 3d10 4B130000 		.4byte	.LLST115
 13556 3d14 2B       		.uleb128 0x2b
 13557 3d15 726F7700 		.ascii	"row\000"
 13558 3d19 01       		.byte	0x1
 13559 3d1a 0F09     		.2byte	0x90f
 13560 3d1c 5B000000 		.4byte	0x5b
 13561 3d20 4F       		.uleb128 0x4f
 13562 3d21 9D3B0000 		.4byte	0x3b9d
 13563 3d25 04000000 		.4byte	.LBB62
 13564 3d29 40000000 		.4byte	.Ldebug_ranges0+0x40
 13565 3d2d 01       		.byte	0x1
 13566 3d2e 0F09     		.2byte	0x90f
 13567 3d30 4E3D0000 		.4byte	0x3d4e
 13568 3d34 43       		.uleb128 0x43
 13569 3d35 AE3B0000 		.4byte	0x3bae
 13570 3d39 5E130000 		.4byte	.LLST116
 13571 3d3d 34       		.uleb128 0x34
 13572 3d3e 0C000000 		.4byte	.LVL238
 13573 3d42 FB2B0000 		.4byte	0x2bfb
 13574 3d46 33       		.uleb128 0x33
 13575 3d47 01       		.uleb128 0x1
 13576 3d48 50       		.byte	0x50
 13577 3d49 02       		.uleb128 0x2
 13578 3d4a 76       		.byte	0x76
 13579 3d4b 00       		.sleb128 0
 13580 3d4c 00       		.byte	0
 13581 3d4d 00       		.byte	0
 13582 3d4e 49       		.uleb128 0x49
 13583 3d4f 32000000 		.4byte	.LBB66
 13584 3d53 14000000 		.4byte	.LBE66-.LBB66
 13585 3d57 873D0000 		.4byte	0x3d87
 13586 3d5b 39       		.uleb128 0x39
 13587 3d5c B4040000 		.4byte	.LASF343
 13588 3d60 01       		.byte	0x1
 13589 3d61 1909     		.2byte	0x919
 13590 3d63 63130000 		.4byte	0x1363
 13591 3d67 8A130000 		.4byte	.LLST117
 13592 3d6b 34       		.uleb128 0x34
 13593 3d6c 3E000000 		.4byte	.LVL244
 13594 3d70 365B0000 		.4byte	0x5b36
 13595 3d74 33       		.uleb128 0x33
 13596 3d75 01       		.uleb128 0x1
 13597 3d76 52       		.byte	0x52
 13598 3d77 01       		.uleb128 0x1
 13599 3d78 44       		.byte	0x44
 13600 3d79 33       		.uleb128 0x33
 13601 3d7a 01       		.uleb128 0x1
 13602 3d7b 51       		.byte	0x51
 13603 3d7c 02       		.uleb128 0x2
 13604 3d7d 74       		.byte	0x74
 13605 3d7e 20       		.sleb128 32
 13606 3d7f 33       		.uleb128 0x33
 13607 3d80 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 445


 13608 3d81 50       		.byte	0x50
 13609 3d82 02       		.uleb128 0x2
 13610 3d83 76       		.byte	0x76
 13611 3d84 00       		.sleb128 0
 13612 3d85 00       		.byte	0
 13613 3d86 00       		.byte	0
 13614 3d87 32       		.uleb128 0x32
 13615 3d88 26000000 		.4byte	.LVL240
 13616 3d8c 3B5D0000 		.4byte	0x5d3b
 13617 3d90 9B3D0000 		.4byte	0x3d9b
 13618 3d94 33       		.uleb128 0x33
 13619 3d95 01       		.uleb128 0x1
 13620 3d96 50       		.byte	0x50
 13621 3d97 02       		.uleb128 0x2
 13622 3d98 75       		.byte	0x75
 13623 3d99 00       		.sleb128 0
 13624 3d9a 00       		.byte	0
 13625 3d9b 34       		.uleb128 0x34
 13626 3d9c 4C000000 		.4byte	.LVL247
 13627 3da0 505D0000 		.4byte	0x5d50
 13628 3da4 33       		.uleb128 0x33
 13629 3da5 01       		.uleb128 0x1
 13630 3da6 50       		.byte	0x50
 13631 3da7 02       		.uleb128 0x2
 13632 3da8 75       		.byte	0x75
 13633 3da9 00       		.sleb128 0
 13634 3daa 00       		.byte	0
 13635 3dab 00       		.byte	0
 13636 3dac 4E       		.uleb128 0x4e
 13637 3dad 592D0000 		.4byte	.LASF991
 13638 3db1 01       		.byte	0x1
 13639 3db2 CE09     		.2byte	0x9ce
 13640 3db4 30000000 		.4byte	0x30
 13641 3db8 00000000 		.4byte	.LFB64
 13642 3dbc 44010000 		.4byte	.LFE64-.LFB64
 13643 3dc0 01       		.uleb128 0x1
 13644 3dc1 9C       		.byte	0x9c
 13645 3dc2 883F0000 		.4byte	0x3f88
 13646 3dc6 3B       		.uleb128 0x3b
 13647 3dc7 636D00   		.ascii	"cm\000"
 13648 3dca 01       		.byte	0x1
 13649 3dcb CE09     		.2byte	0x9ce
 13650 3dcd 2E090000 		.4byte	0x92e
 13651 3dd1 B7130000 		.4byte	.LLST118
 13652 3dd5 2E       		.uleb128 0x2e
 13653 3dd6 C0220000 		.4byte	.LASF972
 13654 3dda 01       		.byte	0x1
 13655 3ddb CE09     		.2byte	0x9ce
 13656 3ddd 80370000 		.4byte	0x3780
 13657 3de1 E3130000 		.4byte	.LLST119
 13658 3de5 2E       		.uleb128 0x2e
 13659 3de6 9D0C0000 		.4byte	.LASF330
 13660 3dea 01       		.byte	0x1
 13661 3deb CE09     		.2byte	0x9ce
 13662 3ded 30000000 		.4byte	0x30
 13663 3df1 03140000 		.4byte	.LLST120
 13664 3df5 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 446


 13665 3df6 76080000 		.4byte	.LASF349
 13666 3dfa 01       		.byte	0x1
 13667 3dfb CE09     		.2byte	0x9ce
 13668 3dfd 30000000 		.4byte	0x30
 13669 3e01 23140000 		.4byte	.LLST121
 13670 3e05 3D       		.uleb128 0x3d
 13671 3e06 72657400 		.ascii	"ret\000"
 13672 3e0a 01       		.byte	0x1
 13673 3e0b D009     		.2byte	0x9d0
 13674 3e0d 30000000 		.4byte	0x30
 13675 3e11 4F140000 		.4byte	.LLST122
 13676 3e15 39       		.uleb128 0x39
 13677 3e16 E70D0000 		.4byte	.LASF992
 13678 3e1a 01       		.byte	0x1
 13679 3e1b D109     		.2byte	0x9d1
 13680 3e1d 99130000 		.4byte	0x1399
 13681 3e21 A6140000 		.4byte	.LLST123
 13682 3e25 2B       		.uleb128 0x2b
 13683 3e26 726F7700 		.ascii	"row\000"
 13684 3e2a 01       		.byte	0x1
 13685 3e2b D209     		.2byte	0x9d2
 13686 3e2d 5B000000 		.4byte	0x5b
 13687 3e31 39       		.uleb128 0x39
 13688 3e32 B4040000 		.4byte	.LASF343
 13689 3e36 01       		.byte	0x1
 13690 3e37 D309     		.2byte	0x9d3
 13691 3e39 63130000 		.4byte	0x1363
 13692 3e3d E6140000 		.4byte	.LLST124
 13693 3e41 50       		.uleb128 0x50
 13694 3e42 4D2B0000 		.4byte	.LASF993
 13695 3e46 01       		.byte	0x1
 13696 3e47 D709     		.2byte	0x9d7
 13697 3e49 883F0000 		.4byte	0x3f88
 13698 3e4d 03       		.uleb128 0x3
 13699 3e4e 91       		.byte	0x91
 13700 3e4f D879     		.sleb128 -808
 13701 3e51 3D       		.uleb128 0x3d
 13702 3e52 64657200 		.ascii	"der\000"
 13703 3e56 01       		.byte	0x1
 13704 3e57 D909     		.2byte	0x9d9
 13705 3e59 4A1C0000 		.4byte	0x1c4a
 13706 3e5d 2E150000 		.4byte	.LLST125
 13707 3e61 4F       		.uleb128 0x4f
 13708 3e62 9D3B0000 		.4byte	0x3b9d
 13709 3e66 B8000000 		.4byte	.LBB69
 13710 3e6a 58000000 		.4byte	.Ldebug_ranges0+0x58
 13711 3e6e 01       		.byte	0x1
 13712 3e6f 210A     		.2byte	0xa21
 13713 3e71 8F3E0000 		.4byte	0x3e8f
 13714 3e75 43       		.uleb128 0x43
 13715 3e76 AE3B0000 		.4byte	0x3bae
 13716 3e7a 41150000 		.4byte	.LLST126
 13717 3e7e 34       		.uleb128 0x34
 13718 3e7f BC000000 		.4byte	.LVL270
 13719 3e83 FB2B0000 		.4byte	0x2bfb
 13720 3e87 33       		.uleb128 0x33
 13721 3e88 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 447


 13722 3e89 50       		.byte	0x50
 13723 3e8a 02       		.uleb128 0x2
 13724 3e8b 74       		.byte	0x74
 13725 3e8c 20       		.sleb128 32
 13726 3e8d 00       		.byte	0
 13727 3e8e 00       		.byte	0
 13728 3e8f 32       		.uleb128 0x32
 13729 3e90 1C000000 		.4byte	.LVL256
 13730 3e94 B05D0000 		.4byte	0x5db0
 13731 3e98 A43E0000 		.4byte	0x3ea4
 13732 3e9c 33       		.uleb128 0x33
 13733 3e9d 01       		.uleb128 0x1
 13734 3e9e 50       		.byte	0x50
 13735 3e9f 03       		.uleb128 0x3
 13736 3ea0 91       		.byte	0x91
 13737 3ea1 D879     		.sleb128 -808
 13738 3ea3 00       		.byte	0
 13739 3ea4 32       		.uleb128 0x32
 13740 3ea5 28000000 		.4byte	.LVL257
 13741 3ea9 D75D0000 		.4byte	0x5dd7
 13742 3ead CA3E0000 		.4byte	0x3eca
 13743 3eb1 33       		.uleb128 0x33
 13744 3eb2 01       		.uleb128 0x1
 13745 3eb3 53       		.byte	0x53
 13746 3eb4 02       		.uleb128 0x2
 13747 3eb5 75       		.byte	0x75
 13748 3eb6 00       		.sleb128 0
 13749 3eb7 33       		.uleb128 0x33
 13750 3eb8 01       		.uleb128 0x1
 13751 3eb9 52       		.byte	0x52
 13752 3eba 02       		.uleb128 0x2
 13753 3ebb 74       		.byte	0x74
 13754 3ebc 00       		.sleb128 0
 13755 3ebd 33       		.uleb128 0x33
 13756 3ebe 01       		.uleb128 0x1
 13757 3ebf 51       		.byte	0x51
 13758 3ec0 01       		.uleb128 0x1
 13759 3ec1 34       		.byte	0x34
 13760 3ec2 33       		.uleb128 0x33
 13761 3ec3 01       		.uleb128 0x1
 13762 3ec4 50       		.byte	0x50
 13763 3ec5 03       		.uleb128 0x3
 13764 3ec6 91       		.byte	0x91
 13765 3ec7 D879     		.sleb128 -808
 13766 3ec9 00       		.byte	0
 13767 3eca 32       		.uleb128 0x32
 13768 3ecb 5A000000 		.4byte	.LVL261
 13769 3ecf BB3B0000 		.4byte	0x3bbb
 13770 3ed3 E53E0000 		.4byte	0x3ee5
 13771 3ed7 33       		.uleb128 0x33
 13772 3ed8 01       		.uleb128 0x1
 13773 3ed9 51       		.byte	0x51
 13774 3eda 03       		.uleb128 0x3
 13775 3edb 91       		.byte	0x91
 13776 3edc 8C7A     		.sleb128 -756
 13777 3ede 33       		.uleb128 0x33
 13778 3edf 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 448


 13779 3ee0 50       		.byte	0x50
 13780 3ee1 02       		.uleb128 0x2
 13781 3ee2 75       		.byte	0x75
 13782 3ee3 00       		.sleb128 0
 13783 3ee4 00       		.byte	0
 13784 3ee5 3A       		.uleb128 0x3a
 13785 3ee6 6A000000 		.4byte	.LVL264
 13786 3eea FC5D0000 		.4byte	0x5dfc
 13787 3eee 32       		.uleb128 0x32
 13788 3eef 98000000 		.4byte	.LVL268
 13789 3ef3 875C0000 		.4byte	0x5c87
 13790 3ef7 0E3F0000 		.4byte	0x3f0e
 13791 3efb 33       		.uleb128 0x33
 13792 3efc 01       		.uleb128 0x1
 13793 3efd 52       		.byte	0x52
 13794 3efe 01       		.uleb128 0x1
 13795 3eff 44       		.byte	0x44
 13796 3f00 33       		.uleb128 0x33
 13797 3f01 01       		.uleb128 0x1
 13798 3f02 51       		.byte	0x51
 13799 3f03 03       		.uleb128 0x3
 13800 3f04 91       		.byte	0x91
 13801 3f05 8C7A     		.sleb128 -756
 13802 3f07 33       		.uleb128 0x33
 13803 3f08 01       		.uleb128 0x1
 13804 3f09 50       		.byte	0x50
 13805 3f0a 02       		.uleb128 0x2
 13806 3f0b 74       		.byte	0x74
 13807 3f0c 20       		.sleb128 32
 13808 3f0d 00       		.byte	0
 13809 3f0e 32       		.uleb128 0x32
 13810 3f0f CA000000 		.4byte	.LVL271
 13811 3f13 3B5D0000 		.4byte	0x5d3b
 13812 3f17 243F0000 		.4byte	0x3f24
 13813 3f1b 33       		.uleb128 0x33
 13814 3f1c 01       		.uleb128 0x1
 13815 3f1d 50       		.byte	0x50
 13816 3f1e 04       		.uleb128 0x4
 13817 3f1f 91       		.byte	0x91
 13818 3f20 CC79     		.sleb128 -820
 13819 3f22 06       		.byte	0x6
 13820 3f23 00       		.byte	0
 13821 3f24 32       		.uleb128 0x32
 13822 3f25 E6000000 		.4byte	.LVL273
 13823 3f29 505D0000 		.4byte	0x5d50
 13824 3f2d 3A3F0000 		.4byte	0x3f3a
 13825 3f31 33       		.uleb128 0x33
 13826 3f32 01       		.uleb128 0x1
 13827 3f33 50       		.byte	0x50
 13828 3f34 04       		.uleb128 0x4
 13829 3f35 91       		.byte	0x91
 13830 3f36 CC79     		.sleb128 -820
 13831 3f38 06       		.byte	0x6
 13832 3f39 00       		.byte	0
 13833 3f3a 51       		.uleb128 0x51
 13834 3f3b F4000000 		.4byte	.LVL274
 13835 3f3f 4C3F0000 		.4byte	0x3f4c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 449


 13836 3f43 33       		.uleb128 0x33
 13837 3f44 01       		.uleb128 0x1
 13838 3f45 52       		.byte	0x52
 13839 3f46 04       		.uleb128 0x4
 13840 3f47 91       		.byte	0x91
 13841 3f48 C879     		.sleb128 -824
 13842 3f4a 06       		.byte	0x6
 13843 3f4b 00       		.byte	0
 13844 3f4c 32       		.uleb128 0x32
 13845 3f4d FA000000 		.4byte	.LVL275
 13846 3f51 125E0000 		.4byte	0x5e12
 13847 3f55 613F0000 		.4byte	0x3f61
 13848 3f59 33       		.uleb128 0x33
 13849 3f5a 01       		.uleb128 0x1
 13850 3f5b 50       		.byte	0x50
 13851 3f5c 03       		.uleb128 0x3
 13852 3f5d 91       		.byte	0x91
 13853 3f5e D879     		.sleb128 -808
 13854 3f60 00       		.byte	0
 13855 3f61 32       		.uleb128 0x32
 13856 3f62 00010000 		.4byte	.LVL276
 13857 3f66 BD370000 		.4byte	0x37bd
 13858 3f6a 773F0000 		.4byte	0x3f77
 13859 3f6e 33       		.uleb128 0x33
 13860 3f6f 01       		.uleb128 0x1
 13861 3f70 50       		.byte	0x50
 13862 3f71 04       		.uleb128 0x4
 13863 3f72 91       		.byte	0x91
 13864 3f73 D079     		.sleb128 -816
 13865 3f75 06       		.byte	0x6
 13866 3f76 00       		.byte	0
 13867 3f77 34       		.uleb128 0x34
 13868 3f78 18010000 		.4byte	.LVL279
 13869 3f7c 245E0000 		.4byte	0x5e24
 13870 3f80 33       		.uleb128 0x33
 13871 3f81 01       		.uleb128 0x1
 13872 3f82 50       		.byte	0x50
 13873 3f83 02       		.uleb128 0x2
 13874 3f84 74       		.byte	0x74
 13875 3f85 00       		.sleb128 0
 13876 3f86 00       		.byte	0
 13877 3f87 00       		.byte	0
 13878 3f88 1A       		.uleb128 0x1a
 13879 3f89 DB0F0000 		.4byte	0xfdb
 13880 3f8d 983F0000 		.4byte	0x3f98
 13881 3f91 1B       		.uleb128 0x1b
 13882 3f92 A2000000 		.4byte	0xa2
 13883 3f96 00       		.byte	0
 13884 3f97 00       		.byte	0
 13885 3f98 38       		.uleb128 0x38
 13886 3f99 092A0000 		.4byte	.LASF994
 13887 3f9d 01       		.byte	0x1
 13888 3f9e 8A0A     		.2byte	0xa8a
 13889 3fa0 30000000 		.4byte	0x30
 13890 3fa4 00000000 		.4byte	.LFB65
 13891 3fa8 48000000 		.4byte	.LFE65-.LFB65
 13892 3fac 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 450


 13893 3fad 9C       		.byte	0x9c
 13894 3fae F43F0000 		.4byte	0x3ff4
 13895 3fb2 32       		.uleb128 0x32
 13896 3fb3 12000000 		.4byte	.LVL286
 13897 3fb7 3B5D0000 		.4byte	0x5d3b
 13898 3fbb C63F0000 		.4byte	0x3fc6
 13899 3fbf 33       		.uleb128 0x33
 13900 3fc0 01       		.uleb128 0x1
 13901 3fc1 50       		.byte	0x50
 13902 3fc2 02       		.uleb128 0x2
 13903 3fc3 75       		.byte	0x75
 13904 3fc4 00       		.sleb128 0
 13905 3fc5 00       		.byte	0
 13906 3fc6 3A       		.uleb128 0x3a
 13907 3fc7 1C000000 		.4byte	.LVL287
 13908 3fcb 3B5E0000 		.4byte	0x5e3b
 13909 3fcf 32       		.uleb128 0x32
 13910 3fd0 26000000 		.4byte	.LVL288
 13911 3fd4 265D0000 		.4byte	0x5d26
 13912 3fd8 E33F0000 		.4byte	0x3fe3
 13913 3fdc 33       		.uleb128 0x33
 13914 3fdd 01       		.uleb128 0x1
 13915 3fde 50       		.byte	0x50
 13916 3fdf 02       		.uleb128 0x2
 13917 3fe0 74       		.byte	0x74
 13918 3fe1 04       		.sleb128 4
 13919 3fe2 00       		.byte	0
 13920 3fe3 34       		.uleb128 0x34
 13921 3fe4 3A000000 		.4byte	.LVL289
 13922 3fe8 505D0000 		.4byte	0x5d50
 13923 3fec 33       		.uleb128 0x33
 13924 3fed 01       		.uleb128 0x1
 13925 3fee 50       		.byte	0x50
 13926 3fef 02       		.uleb128 0x2
 13927 3ff0 75       		.byte	0x75
 13928 3ff1 00       		.sleb128 0
 13929 3ff2 00       		.byte	0
 13930 3ff3 00       		.byte	0
 13931 3ff4 2F       		.uleb128 0x2f
 13932 3ff5 18240000 		.4byte	.LASF995
 13933 3ff9 01       		.byte	0x1
 13934 3ffa 9D       		.byte	0x9d
 13935 3ffb 11240000 		.4byte	0x2411
 13936 3fff 00000000 		.4byte	.LFB14
 13937 4003 4C000000 		.4byte	.LFE14-.LFB14
 13938 4007 01       		.uleb128 0x1
 13939 4008 9C       		.byte	0x9c
 13940 4009 BC400000 		.4byte	0x40bc
 13941 400d 52       		.uleb128 0x52
 13942 400e C53F0000 		.4byte	.LASF115
 13943 4012 01       		.byte	0x1
 13944 4013 9D       		.byte	0x9d
 13945 4014 441C0000 		.4byte	0x1c44
 13946 4018 6E150000 		.4byte	.LLST127
 13947 401c 36       		.uleb128 0x36
 13948 401d 63747800 		.ascii	"ctx\000"
 13949 4021 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 451


 13950 4022 9F       		.byte	0x9f
 13951 4023 11240000 		.4byte	0x2411
 13952 4027 B0150000 		.4byte	.LLST128
 13953 402b 49       		.uleb128 0x49
 13954 402c 12000000 		.4byte	.LBB75
 13955 4030 0A000000 		.4byte	.LBE75-.LBB75
 13956 4034 51400000 		.4byte	0x4051
 13957 4038 36       		.uleb128 0x36
 13958 4039 72657400 		.ascii	"ret\000"
 13959 403d 01       		.byte	0x1
 13960 403e A5       		.byte	0xa5
 13961 403f 30000000 		.4byte	0x30
 13962 4043 FC150000 		.4byte	.LLST129
 13963 4047 3A       		.uleb128 0x3a
 13964 4048 16000000 		.4byte	.LVL293
 13965 404c 983F0000 		.4byte	0x3f98
 13966 4050 00       		.byte	0
 13967 4051 49       		.uleb128 0x49
 13968 4052 3C000000 		.4byte	.LBB76
 13969 4056 08000000 		.4byte	.LBE76-.LBB76
 13970 405a 7D400000 		.4byte	0x407d
 13971 405e 36       		.uleb128 0x36
 13972 405f 787000   		.ascii	"xp\000"
 13973 4062 01       		.byte	0x1
 13974 4063 BA       		.byte	0xba
 13975 4064 A9000000 		.4byte	0xa9
 13976 4068 0F160000 		.4byte	.LLST130
 13977 406c 34       		.uleb128 0x34
 13978 406d 42000000 		.4byte	.LVL301
 13979 4071 BB5C0000 		.4byte	0x5cbb
 13980 4075 33       		.uleb128 0x33
 13981 4076 01       		.uleb128 0x1
 13982 4077 50       		.byte	0x50
 13983 4078 02       		.uleb128 0x2
 13984 4079 75       		.byte	0x75
 13985 407a 00       		.sleb128 0
 13986 407b 00       		.byte	0
 13987 407c 00       		.byte	0
 13988 407d 32       		.uleb128 0x32
 13989 407e 22000000 		.4byte	.LVL295
 13990 4082 675B0000 		.4byte	0x5b67
 13991 4086 91400000 		.4byte	0x4091
 13992 408a 33       		.uleb128 0x33
 13993 408b 01       		.uleb128 0x1
 13994 408c 50       		.byte	0x50
 13995 408d 02       		.uleb128 0x2
 13996 408e 08       		.byte	0x8
 13997 408f 48       		.byte	0x48
 13998 4090 00       		.byte	0
 13999 4091 32       		.uleb128 0x32
 14000 4092 2C000000 		.4byte	.LVL297
 14001 4096 465E0000 		.4byte	0x5e46
 14002 409a AB400000 		.4byte	0x40ab
 14003 409e 33       		.uleb128 0x33
 14004 409f 01       		.uleb128 0x1
 14005 40a0 51       		.byte	0x51
 14006 40a1 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 452


 14007 40a2 75       		.byte	0x75
 14008 40a3 00       		.sleb128 0
 14009 40a4 33       		.uleb128 0x33
 14010 40a5 01       		.uleb128 0x1
 14011 40a6 50       		.byte	0x50
 14012 40a7 02       		.uleb128 0x2
 14013 40a8 74       		.byte	0x74
 14014 40a9 00       		.sleb128 0
 14015 40aa 00       		.byte	0
 14016 40ab 34       		.uleb128 0x34
 14017 40ac 38000000 		.4byte	.LVL298
 14018 40b0 A82C0000 		.4byte	0x2ca8
 14019 40b4 33       		.uleb128 0x33
 14020 40b5 01       		.uleb128 0x1
 14021 40b6 50       		.byte	0x50
 14022 40b7 02       		.uleb128 0x2
 14023 40b8 74       		.byte	0x74
 14024 40b9 00       		.sleb128 0
 14025 40ba 00       		.byte	0
 14026 40bb 00       		.byte	0
 14027 40bc 38       		.uleb128 0x38
 14028 40bd 3D060000 		.4byte	.LASF996
 14029 40c1 01       		.byte	0x1
 14030 40c2 4C0B     		.2byte	0xb4c
 14031 40c4 30000000 		.4byte	0x30
 14032 40c8 00000000 		.4byte	.LFB66
 14033 40cc 30020000 		.4byte	.LFE66-.LFB66
 14034 40d0 01       		.uleb128 0x1
 14035 40d1 9C       		.byte	0x9c
 14036 40d2 B4420000 		.4byte	0x42b4
 14037 40d6 2E       		.uleb128 0x2e
 14038 40d7 EB220000 		.4byte	.LASF923
 14039 40db 01       		.byte	0x1
 14040 40dc 4C0B     		.2byte	0xb4c
 14041 40de 210D0000 		.4byte	0xd21
 14042 40e2 22160000 		.4byte	.LLST131
 14043 40e6 2E       		.uleb128 0x2e
 14044 40e7 622B0000 		.4byte	.LASF997
 14045 40eb 01       		.byte	0x1
 14046 40ec 4C0B     		.2byte	0xb4c
 14047 40ee 8D000000 		.4byte	0x8d
 14048 40f2 42160000 		.4byte	.LLST132
 14049 40f6 2E       		.uleb128 0x2e
 14050 40f7 9D0C0000 		.4byte	.LASF330
 14051 40fb 01       		.byte	0x1
 14052 40fc 4C0B     		.2byte	0xb4c
 14053 40fe 30000000 		.4byte	0x30
 14054 4102 62160000 		.4byte	.LLST133
 14055 4106 2E       		.uleb128 0x2e
 14056 4107 C0220000 		.4byte	.LASF972
 14057 410b 01       		.byte	0x1
 14058 410c 4D0B     		.2byte	0xb4d
 14059 410e 80370000 		.4byte	0x3780
 14060 4112 B0160000 		.4byte	.LLST134
 14061 4116 3F       		.uleb128 0x3f
 14062 4117 28340000 		.4byte	.LASF81
 14063 411b 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 453


 14064 411c 4D0B     		.2byte	0xb4d
 14065 411e A9000000 		.4byte	0xa9
 14066 4122 02       		.uleb128 0x2
 14067 4123 91       		.byte	0x91
 14068 4124 00       		.sleb128 0
 14069 4125 3F       		.uleb128 0x3f
 14070 4126 510E0000 		.4byte	.LASF998
 14071 412a 01       		.byte	0x1
 14072 412b 4D0B     		.2byte	0xb4d
 14073 412d B4420000 		.4byte	0x42b4
 14074 4131 02       		.uleb128 0x2
 14075 4132 91       		.byte	0x91
 14076 4133 04       		.sleb128 4
 14077 4134 3F       		.uleb128 0x3f
 14078 4135 071B0000 		.4byte	.LASF999
 14079 4139 01       		.byte	0x1
 14080 413a 4D0B     		.2byte	0xb4d
 14081 413c 600D0000 		.4byte	0xd60
 14082 4140 02       		.uleb128 0x2
 14083 4141 91       		.byte	0x91
 14084 4142 08       		.sleb128 8
 14085 4143 39       		.uleb128 0x39
 14086 4144 D83A0000 		.4byte	.LASF1000
 14087 4148 01       		.byte	0x1
 14088 4149 4F0B     		.2byte	0xb4f
 14089 414b BE000000 		.4byte	0xbe
 14090 414f CF160000 		.4byte	.LLST135
 14091 4153 39       		.uleb128 0x39
 14092 4154 773C0000 		.4byte	.LASF1001
 14093 4158 01       		.byte	0x1
 14094 4159 500B     		.2byte	0xb50
 14095 415b BE000000 		.4byte	0xbe
 14096 415f B0170000 		.4byte	.LLST136
 14097 4163 39       		.uleb128 0x39
 14098 4164 77370000 		.4byte	.LASF1002
 14099 4168 01       		.byte	0x1
 14100 4169 510B     		.2byte	0xb51
 14101 416b B1000000 		.4byte	0xb1
 14102 416f 28180000 		.4byte	.LLST137
 14103 4173 39       		.uleb128 0x39
 14104 4174 9C390000 		.4byte	.LASF1003
 14105 4178 01       		.byte	0x1
 14106 4179 520B     		.2byte	0xb52
 14107 417b B1000000 		.4byte	0xb1
 14108 417f 8C180000 		.4byte	.LLST138
 14109 4183 39       		.uleb128 0x39
 14110 4184 F01C0000 		.4byte	.LASF1004
 14111 4188 01       		.byte	0x1
 14112 4189 530B     		.2byte	0xb53
 14113 418b B1000000 		.4byte	0xb1
 14114 418f AA180000 		.4byte	.LLST139
 14115 4193 39       		.uleb128 0x39
 14116 4194 86050000 		.4byte	.LASF1005
 14117 4198 01       		.byte	0x1
 14118 4199 540B     		.2byte	0xb54
 14119 419b B1000000 		.4byte	0xb1
 14120 419f D5180000 		.4byte	.LLST140
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 454


 14121 41a3 39       		.uleb128 0x39
 14122 41a4 871B0000 		.4byte	.LASF1006
 14123 41a8 01       		.byte	0x1
 14124 41a9 550B     		.2byte	0xb55
 14125 41ab 8D000000 		.4byte	0x8d
 14126 41af F1180000 		.4byte	.LLST141
 14127 41b3 3D       		.uleb128 0x3d
 14128 41b4 72657400 		.ascii	"ret\000"
 14129 41b8 01       		.byte	0x1
 14130 41b9 560B     		.2byte	0xb56
 14131 41bb 30000000 		.4byte	0x30
 14132 41bf 04190000 		.4byte	.LLST142
 14133 41c3 3D       		.uleb128 0x3d
 14134 41c4 737A00   		.ascii	"sz\000"
 14135 41c7 01       		.byte	0x1
 14136 41c8 570B     		.2byte	0xb57
 14137 41ca 30000000 		.4byte	0x30
 14138 41ce 45190000 		.4byte	.LLST143
 14139 41d2 3C       		.uleb128 0x3c
 14140 41d3 B90F0000 		.4byte	.LASF1007
 14141 41d7 01       		.byte	0x1
 14142 41d8 580B     		.2byte	0xb58
 14143 41da 30000000 		.4byte	0x30
 14144 41de 00       		.byte	0
 14145 41df 3D       		.uleb128 0x3d
 14146 41e0 64657200 		.ascii	"der\000"
 14147 41e4 01       		.byte	0x1
 14148 41e5 590B     		.2byte	0xb59
 14149 41e7 4A1C0000 		.4byte	0x1c4a
 14150 41eb 5A190000 		.4byte	.LLST144
 14151 41ef 32       		.uleb128 0x32
 14152 41f0 B8000000 		.4byte	.LVL332
 14153 41f4 262C0000 		.4byte	0x2c26
 14154 41f8 13420000 		.4byte	0x4213
 14155 41fc 33       		.uleb128 0x33
 14156 41fd 01       		.uleb128 0x1
 14157 41fe 52       		.byte	0x52
 14158 41ff 04       		.uleb128 0x4
 14159 4200 91       		.byte	0x91
 14160 4201 B87F     		.sleb128 -72
 14161 4203 06       		.byte	0x6
 14162 4204 33       		.uleb128 0x33
 14163 4205 01       		.uleb128 0x1
 14164 4206 51       		.byte	0x51
 14165 4207 02       		.uleb128 0x2
 14166 4208 76       		.byte	0x76
 14167 4209 00       		.sleb128 0
 14168 420a 33       		.uleb128 0x33
 14169 420b 01       		.uleb128 0x1
 14170 420c 50       		.byte	0x50
 14171 420d 04       		.uleb128 0x4
 14172 420e 91       		.byte	0x91
 14173 420f B47F     		.sleb128 -76
 14174 4211 06       		.byte	0x6
 14175 4212 00       		.byte	0
 14176 4213 32       		.uleb128 0x32
 14177 4214 EC000000 		.4byte	.LVL346
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 455


 14178 4218 215B0000 		.4byte	0x5b21
 14179 421c 27420000 		.4byte	0x4227
 14180 4220 33       		.uleb128 0x33
 14181 4221 01       		.uleb128 0x1
 14182 4222 50       		.byte	0x50
 14183 4223 02       		.uleb128 0x2
 14184 4224 76       		.byte	0x76
 14185 4225 00       		.sleb128 0
 14186 4226 00       		.byte	0
 14187 4227 32       		.uleb128 0x32
 14188 4228 38010000 		.4byte	.LVL355
 14189 422c 262C0000 		.4byte	0x2c26
 14190 4230 4B420000 		.4byte	0x424b
 14191 4234 33       		.uleb128 0x33
 14192 4235 01       		.uleb128 0x1
 14193 4236 52       		.byte	0x52
 14194 4237 04       		.uleb128 0x4
 14195 4238 91       		.byte	0x91
 14196 4239 B87F     		.sleb128 -72
 14197 423b 06       		.byte	0x6
 14198 423c 33       		.uleb128 0x33
 14199 423d 01       		.uleb128 0x1
 14200 423e 51       		.byte	0x51
 14201 423f 02       		.uleb128 0x2
 14202 4240 75       		.byte	0x75
 14203 4241 00       		.sleb128 0
 14204 4242 33       		.uleb128 0x33
 14205 4243 01       		.uleb128 0x1
 14206 4244 50       		.byte	0x50
 14207 4245 04       		.uleb128 0x4
 14208 4246 91       		.byte	0x91
 14209 4247 B47F     		.sleb128 -76
 14210 4249 06       		.byte	0x6
 14211 424a 00       		.byte	0
 14212 424b 32       		.uleb128 0x32
 14213 424c 4C010000 		.4byte	.LVL358
 14214 4250 215B0000 		.4byte	0x5b21
 14215 4254 5F420000 		.4byte	0x425f
 14216 4258 33       		.uleb128 0x33
 14217 4259 01       		.uleb128 0x1
 14218 425a 50       		.byte	0x50
 14219 425b 02       		.uleb128 0x2
 14220 425c 75       		.byte	0x75
 14221 425d 00       		.sleb128 0
 14222 425e 00       		.byte	0
 14223 425f 32       		.uleb128 0x32
 14224 4260 9E010000 		.4byte	.LVL367
 14225 4264 DF360000 		.4byte	0x36df
 14226 4268 89420000 		.4byte	0x4289
 14227 426c 33       		.uleb128 0x33
 14228 426d 01       		.uleb128 0x1
 14229 426e 53       		.byte	0x53
 14230 426f 03       		.uleb128 0x3
 14231 4270 91       		.byte	0x91
 14232 4271 00       		.sleb128 0
 14233 4272 06       		.byte	0x6
 14234 4273 33       		.uleb128 0x33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 456


 14235 4274 01       		.uleb128 0x1
 14236 4275 52       		.byte	0x52
 14237 4276 04       		.uleb128 0x4
 14238 4277 91       		.byte	0x91
 14239 4278 BC7F     		.sleb128 -68
 14240 427a 06       		.byte	0x6
 14241 427b 33       		.uleb128 0x33
 14242 427c 01       		.uleb128 0x1
 14243 427d 51       		.byte	0x51
 14244 427e 02       		.uleb128 0x2
 14245 427f 74       		.byte	0x74
 14246 4280 00       		.sleb128 0
 14247 4281 33       		.uleb128 0x33
 14248 4282 01       		.uleb128 0x1
 14249 4283 50       		.byte	0x50
 14250 4284 03       		.uleb128 0x3
 14251 4285 91       		.byte	0x91
 14252 4286 4C       		.sleb128 -52
 14253 4287 06       		.byte	0x6
 14254 4288 00       		.byte	0
 14255 4289 32       		.uleb128 0x32
 14256 428a B4010000 		.4byte	.LVL371
 14257 428e 615E0000 		.4byte	0x5e61
 14258 4292 AA420000 		.4byte	0x42aa
 14259 4296 33       		.uleb128 0x33
 14260 4297 01       		.uleb128 0x1
 14261 4298 53       		.byte	0x53
 14262 4299 02       		.uleb128 0x2
 14263 429a 77       		.byte	0x77
 14264 429b 08       		.sleb128 8
 14265 429c 33       		.uleb128 0x33
 14266 429d 01       		.uleb128 0x1
 14267 429e 51       		.byte	0x51
 14268 429f 02       		.uleb128 0x2
 14269 42a0 74       		.byte	0x74
 14270 42a1 00       		.sleb128 0
 14271 42a2 33       		.uleb128 0x33
 14272 42a3 01       		.uleb128 0x1
 14273 42a4 50       		.byte	0x50
 14274 42a5 03       		.uleb128 0x3
 14275 42a6 91       		.byte	0x91
 14276 42a7 40       		.sleb128 -64
 14277 42a8 06       		.byte	0x6
 14278 42a9 00       		.byte	0
 14279 42aa 3A       		.uleb128 0x3a
 14280 42ab CA010000 		.4byte	.LVL373
 14281 42af 8B5E0000 		.4byte	0x5e8b
 14282 42b3 00       		.byte	0
 14283 42b4 06       		.uleb128 0x6
 14284 42b5 04       		.byte	0x4
 14285 42b6 94240000 		.4byte	0x2494
 14286 42ba 38       		.uleb128 0x38
 14287 42bb D23D0000 		.4byte	.LASF1008
 14288 42bf 01       		.byte	0x1
 14289 42c0 0407     		.2byte	0x704
 14290 42c2 30000000 		.4byte	0x30
 14291 42c6 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 457


 14292 42ca 72000000 		.4byte	.LFE50-.LFB50
 14293 42ce 01       		.uleb128 0x1
 14294 42cf 9C       		.byte	0x9c
 14295 42d0 BA430000 		.4byte	0x43ba
 14296 42d4 3B       		.uleb128 0x3b
 14297 42d5 70656D00 		.ascii	"pem\000"
 14298 42d9 01       		.byte	0x1
 14299 42da 0407     		.2byte	0x704
 14300 42dc 210D0000 		.4byte	0xd21
 14301 42e0 6D190000 		.4byte	.LLST145
 14302 42e4 2E       		.uleb128 0x2e
 14303 42e5 DD140000 		.4byte	.LASF1009
 14304 42e9 01       		.byte	0x1
 14305 42ea 0407     		.2byte	0x704
 14306 42ec 30000000 		.4byte	0x30
 14307 42f0 A7190000 		.4byte	.LLST146
 14308 42f4 2E       		.uleb128 0x2e
 14309 42f5 EB220000 		.4byte	.LASF923
 14310 42f9 01       		.byte	0x1
 14311 42fa 0507     		.2byte	0x705
 14312 42fc AB000000 		.4byte	0xab
 14313 4300 E1190000 		.4byte	.LLST147
 14314 4304 2E       		.uleb128 0x2e
 14315 4305 D81B0000 		.4byte	.LASF1010
 14316 4309 01       		.byte	0x1
 14317 430a 0507     		.2byte	0x705
 14318 430c 30000000 		.4byte	0x30
 14319 4310 181A0000 		.4byte	.LLST148
 14320 4314 3F       		.uleb128 0x3f
 14321 4315 9D0C0000 		.4byte	.LASF330
 14322 4319 01       		.byte	0x1
 14323 431a 0507     		.2byte	0x705
 14324 431c 30000000 		.4byte	0x30
 14325 4320 02       		.uleb128 0x2
 14326 4321 91       		.byte	0x91
 14327 4322 00       		.sleb128 0
 14328 4323 50       		.uleb128 0x50
 14329 4324 071B0000 		.4byte	.LASF999
 14330 4328 01       		.byte	0x1
 14331 4329 0707     		.2byte	0x707
 14332 432b 30000000 		.4byte	0x30
 14333 432f 03       		.uleb128 0x3
 14334 4330 91       		.byte	0x91
 14335 4331 E07E     		.sleb128 -160
 14336 4333 3D       		.uleb128 0x3d
 14337 4334 72657400 		.ascii	"ret\000"
 14338 4338 01       		.byte	0x1
 14339 4339 0807     		.2byte	0x708
 14340 433b 30000000 		.4byte	0x30
 14341 433f 4F1A0000 		.4byte	.LLST149
 14342 4343 47       		.uleb128 0x47
 14343 4344 64657200 		.ascii	"der\000"
 14344 4348 01       		.byte	0x1
 14345 4349 0907     		.2byte	0x709
 14346 434b 4A1C0000 		.4byte	0x1c4a
 14347 434f 03       		.uleb128 0x3
 14348 4350 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 458


 14349 4351 E47E     		.sleb128 -156
 14350 4353 50       		.uleb128 0x50
 14351 4354 510E0000 		.4byte	.LASF998
 14352 4358 01       		.byte	0x1
 14353 4359 0D07     		.2byte	0x70d
 14354 435b BA430000 		.4byte	0x43ba
 14355 435f 03       		.uleb128 0x3
 14356 4360 91       		.byte	0x91
 14357 4361 E87E     		.sleb128 -152
 14358 4363 32       		.uleb128 0x32
 14359 4364 44000000 		.4byte	.LVL379
 14360 4368 BC400000 		.4byte	0x40bc
 14361 436c 94430000 		.4byte	0x4394
 14362 4370 33       		.uleb128 0x33
 14363 4371 01       		.uleb128 0x1
 14364 4372 53       		.byte	0x53
 14365 4373 03       		.uleb128 0x3
 14366 4374 91       		.byte	0x91
 14367 4375 E47E     		.sleb128 -156
 14368 4377 33       		.uleb128 0x33
 14369 4378 01       		.uleb128 0x1
 14370 4379 52       		.byte	0x52
 14371 437a 02       		.uleb128 0x2
 14372 437b 74       		.byte	0x74
 14373 437c 00       		.sleb128 0
 14374 437d 33       		.uleb128 0x33
 14375 437e 02       		.uleb128 0x2
 14376 437f 7D       		.byte	0x7d
 14377 4380 08       		.sleb128 8
 14378 4381 03       		.uleb128 0x3
 14379 4382 91       		.byte	0x91
 14380 4383 E07E     		.sleb128 -160
 14381 4385 33       		.uleb128 0x33
 14382 4386 02       		.uleb128 0x2
 14383 4387 7D       		.byte	0x7d
 14384 4388 04       		.sleb128 4
 14385 4389 03       		.uleb128 0x3
 14386 438a 91       		.byte	0x91
 14387 438b E87E     		.sleb128 -152
 14388 438d 33       		.uleb128 0x33
 14389 438e 02       		.uleb128 0x2
 14390 438f 7D       		.byte	0x7d
 14391 4390 00       		.sleb128 0
 14392 4391 01       		.uleb128 0x1
 14393 4392 30       		.byte	0x30
 14394 4393 00       		.byte	0
 14395 4394 32       		.uleb128 0x32
 14396 4395 58000000 		.4byte	.LVL382
 14397 4399 875C0000 		.4byte	0x5c87
 14398 439d A8430000 		.4byte	0x43a8
 14399 43a1 33       		.uleb128 0x33
 14400 43a2 01       		.uleb128 0x1
 14401 43a3 50       		.byte	0x50
 14402 43a4 02       		.uleb128 0x2
 14403 43a5 75       		.byte	0x75
 14404 43a6 00       		.sleb128 0
 14405 43a7 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 459


 14406 43a8 34       		.uleb128 0x34
 14407 43a9 66000000 		.4byte	.LVL386
 14408 43ad BD370000 		.4byte	0x37bd
 14409 43b1 33       		.uleb128 0x33
 14410 43b2 01       		.uleb128 0x1
 14411 43b3 50       		.byte	0x50
 14412 43b4 03       		.uleb128 0x3
 14413 43b5 91       		.byte	0x91
 14414 43b6 E47E     		.sleb128 -156
 14415 43b8 00       		.byte	0
 14416 43b9 00       		.byte	0
 14417 43ba 1A       		.uleb128 0x1a
 14418 43bb 94240000 		.4byte	0x2494
 14419 43bf CA430000 		.4byte	0x43ca
 14420 43c3 1B       		.uleb128 0x1b
 14421 43c4 A2000000 		.4byte	0xa2
 14422 43c8 00       		.byte	0
 14423 43c9 00       		.byte	0
 14424 43ca 38       		.uleb128 0x38
 14425 43cb 601A0000 		.4byte	.LASF1011
 14426 43cf 01       		.byte	0x1
 14427 43d0 6707     		.2byte	0x767
 14428 43d2 30000000 		.4byte	0x30
 14429 43d6 00000000 		.4byte	.LFB51
 14430 43da 6E000000 		.4byte	.LFE51-.LFB51
 14431 43de 01       		.uleb128 0x1
 14432 43df 9C       		.byte	0x9c
 14433 43e0 E0440000 		.4byte	0x44e0
 14434 43e4 3B       		.uleb128 0x3b
 14435 43e5 70656D00 		.ascii	"pem\000"
 14436 43e9 01       		.byte	0x1
 14437 43ea 6707     		.2byte	0x767
 14438 43ec 210D0000 		.4byte	0xd21
 14439 43f0 831A0000 		.4byte	.LLST150
 14440 43f4 2E       		.uleb128 0x2e
 14441 43f5 DD140000 		.4byte	.LASF1009
 14442 43f9 01       		.byte	0x1
 14443 43fa 6707     		.2byte	0x767
 14444 43fc 30000000 		.4byte	0x30
 14445 4400 BD1A0000 		.4byte	.LLST151
 14446 4404 2E       		.uleb128 0x2e
 14447 4405 EB220000 		.4byte	.LASF923
 14448 4409 01       		.byte	0x1
 14449 440a 6807     		.2byte	0x768
 14450 440c AB000000 		.4byte	0xab
 14451 4410 F71A0000 		.4byte	.LLST152
 14452 4414 2E       		.uleb128 0x2e
 14453 4415 D81B0000 		.4byte	.LASF1010
 14454 4419 01       		.byte	0x1
 14455 441a 6807     		.2byte	0x768
 14456 441c 30000000 		.4byte	0x30
 14457 4420 2E1B0000 		.4byte	.LLST153
 14458 4424 3F       		.uleb128 0x3f
 14459 4425 81250000 		.4byte	.LASF1012
 14460 4429 01       		.byte	0x1
 14461 442a 6807     		.2byte	0x768
 14462 442c BE000000 		.4byte	0xbe
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 460


 14463 4430 02       		.uleb128 0x2
 14464 4431 91       		.byte	0x91
 14465 4432 00       		.sleb128 0
 14466 4433 50       		.uleb128 0x50
 14467 4434 071B0000 		.4byte	.LASF999
 14468 4438 01       		.byte	0x1
 14469 4439 6A07     		.2byte	0x76a
 14470 443b 30000000 		.4byte	0x30
 14471 443f 03       		.uleb128 0x3
 14472 4440 91       		.byte	0x91
 14473 4441 E07E     		.sleb128 -160
 14474 4443 3D       		.uleb128 0x3d
 14475 4444 72657400 		.ascii	"ret\000"
 14476 4448 01       		.byte	0x1
 14477 4449 6B07     		.2byte	0x76b
 14478 444b 30000000 		.4byte	0x30
 14479 444f 651B0000 		.4byte	.LLST154
 14480 4453 47       		.uleb128 0x47
 14481 4454 64657200 		.ascii	"der\000"
 14482 4458 01       		.byte	0x1
 14483 4459 6C07     		.2byte	0x76c
 14484 445b 4A1C0000 		.4byte	0x1c4a
 14485 445f 03       		.uleb128 0x3
 14486 4460 91       		.byte	0x91
 14487 4461 E47E     		.sleb128 -156
 14488 4463 50       		.uleb128 0x50
 14489 4464 510E0000 		.4byte	.LASF998
 14490 4468 01       		.byte	0x1
 14491 4469 7007     		.2byte	0x770
 14492 446b BA430000 		.4byte	0x43ba
 14493 446f 03       		.uleb128 0x3
 14494 4470 91       		.byte	0x91
 14495 4471 E87E     		.sleb128 -152
 14496 4473 32       		.uleb128 0x32
 14497 4474 34000000 		.4byte	.LVL393
 14498 4478 BC400000 		.4byte	0x40bc
 14499 447c B1440000 		.4byte	0x44b1
 14500 4480 33       		.uleb128 0x33
 14501 4481 01       		.uleb128 0x1
 14502 4482 53       		.byte	0x53
 14503 4483 03       		.uleb128 0x3
 14504 4484 91       		.byte	0x91
 14505 4485 E47E     		.sleb128 -156
 14506 4487 33       		.uleb128 0x33
 14507 4488 01       		.uleb128 0x1
 14508 4489 52       		.byte	0x52
 14509 448a 01       		.uleb128 0x1
 14510 448b 31       		.byte	0x31
 14511 448c 33       		.uleb128 0x33
 14512 448d 01       		.uleb128 0x1
 14513 448e 51       		.byte	0x51
 14514 448f 03       		.uleb128 0x3
 14515 4490 F3       		.byte	0xf3
 14516 4491 01       		.uleb128 0x1
 14517 4492 51       		.byte	0x51
 14518 4493 33       		.uleb128 0x33
 14519 4494 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 461


 14520 4495 50       		.byte	0x50
 14521 4496 03       		.uleb128 0x3
 14522 4497 F3       		.byte	0xf3
 14523 4498 01       		.uleb128 0x1
 14524 4499 50       		.byte	0x50
 14525 449a 33       		.uleb128 0x33
 14526 449b 02       		.uleb128 0x2
 14527 449c 7D       		.byte	0x7d
 14528 449d 08       		.sleb128 8
 14529 449e 03       		.uleb128 0x3
 14530 449f 91       		.byte	0x91
 14531 44a0 E07E     		.sleb128 -160
 14532 44a2 33       		.uleb128 0x33
 14533 44a3 02       		.uleb128 0x2
 14534 44a4 7D       		.byte	0x7d
 14535 44a5 04       		.sleb128 4
 14536 44a6 02       		.uleb128 0x2
 14537 44a7 77       		.byte	0x77
 14538 44a8 00       		.sleb128 0
 14539 44a9 33       		.uleb128 0x33
 14540 44aa 02       		.uleb128 0x2
 14541 44ab 7D       		.byte	0x7d
 14542 44ac 00       		.sleb128 0
 14543 44ad 02       		.uleb128 0x2
 14544 44ae 74       		.byte	0x74
 14545 44af 00       		.sleb128 0
 14546 44b0 00       		.byte	0
 14547 44b1 3A       		.uleb128 0x3a
 14548 44b2 40000000 		.4byte	.LVL396
 14549 44b6 A82C0000 		.4byte	0x2ca8
 14550 44ba 32       		.uleb128 0x32
 14551 44bb 54000000 		.4byte	.LVL398
 14552 44bf 875C0000 		.4byte	0x5c87
 14553 44c3 CE440000 		.4byte	0x44ce
 14554 44c7 33       		.uleb128 0x33
 14555 44c8 01       		.uleb128 0x1
 14556 44c9 50       		.byte	0x50
 14557 44ca 02       		.uleb128 0x2
 14558 44cb 75       		.byte	0x75
 14559 44cc 00       		.sleb128 0
 14560 44cd 00       		.byte	0
 14561 44ce 34       		.uleb128 0x34
 14562 44cf 62000000 		.4byte	.LVL402
 14563 44d3 BD370000 		.4byte	0x37bd
 14564 44d7 33       		.uleb128 0x33
 14565 44d8 01       		.uleb128 0x1
 14566 44d9 50       		.byte	0x50
 14567 44da 03       		.uleb128 0x3
 14568 44db 91       		.byte	0x91
 14569 44dc E47E     		.sleb128 -156
 14570 44de 00       		.byte	0
 14571 44df 00       		.byte	0
 14572 44e0 2D       		.uleb128 0x2d
 14573 44e1 BB400000 		.4byte	.LASF1014
 14574 44e5 01       		.byte	0x1
 14575 44e6 2B0C     		.2byte	0xc2b
 14576 44e8 30000000 		.4byte	0x30
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 462


 14577 44ec 00000000 		.4byte	.LFB67
 14578 44f0 C8030000 		.4byte	.LFE67-.LFB67
 14579 44f4 01       		.uleb128 0x1
 14580 44f5 9C       		.byte	0x9c
 14581 44f6 544A0000 		.4byte	0x4a54
 14582 44fa 3B       		.uleb128 0x3b
 14583 44fb 63747800 		.ascii	"ctx\000"
 14584 44ff 01       		.byte	0x1
 14585 4500 2B0C     		.2byte	0xc2b
 14586 4502 11240000 		.4byte	0x2411
 14587 4506 991B0000 		.4byte	.LLST155
 14588 450a 2E       		.uleb128 0x2e
 14589 450b EB220000 		.4byte	.LASF923
 14590 450f 01       		.byte	0x1
 14591 4510 2B0C     		.2byte	0xc2b
 14592 4512 210D0000 		.4byte	0xd21
 14593 4516 3D1C0000 		.4byte	.LLST156
 14594 451a 3B       		.uleb128 0x3b
 14595 451b 737A00   		.ascii	"sz\000"
 14596 451e 01       		.byte	0x1
 14597 451f 2C0C     		.2byte	0xc2c
 14598 4521 8D000000 		.4byte	0x8d
 14599 4525 911C0000 		.4byte	.LLST157
 14600 4529 2E       		.uleb128 0x2e
 14601 452a 6F280000 		.4byte	.LASF918
 14602 452e 01       		.byte	0x1
 14603 452f 2C0C     		.2byte	0xc2c
 14604 4531 30000000 		.4byte	0x30
 14605 4535 E51C0000 		.4byte	.LLST158
 14606 4539 3F       		.uleb128 0x3f
 14607 453a 9D0C0000 		.4byte	.LASF330
 14608 453e 01       		.byte	0x1
 14609 453f 2C0C     		.2byte	0xc2c
 14610 4541 30000000 		.4byte	0x30
 14611 4545 02       		.uleb128 0x2
 14612 4546 91       		.byte	0x91
 14613 4547 00       		.sleb128 0
 14614 4548 48       		.uleb128 0x48
 14615 4549 73736C00 		.ascii	"ssl\000"
 14616 454d 01       		.byte	0x1
 14617 454e 2C0C     		.2byte	0xc2c
 14618 4550 3B0C0000 		.4byte	0xc3b
 14619 4554 02       		.uleb128 0x2
 14620 4555 91       		.byte	0x91
 14621 4556 04       		.sleb128 4
 14622 4557 3F       		.uleb128 0x3f
 14623 4558 153D0000 		.4byte	.LASF924
 14624 455c 01       		.byte	0x1
 14625 455d 2D0C     		.2byte	0xc2d
 14626 455f 544A0000 		.4byte	0x4a54
 14627 4563 02       		.uleb128 0x2
 14628 4564 91       		.byte	0x91
 14629 4565 08       		.sleb128 8
 14630 4566 3F       		.uleb128 0x3f
 14631 4567 76280000 		.4byte	.LASF1015
 14632 456b 01       		.byte	0x1
 14633 456c 2D0C     		.2byte	0xc2d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 463


 14634 456e 30000000 		.4byte	0x30
 14635 4572 02       		.uleb128 0x2
 14636 4573 91       		.byte	0x91
 14637 4574 0C       		.sleb128 12
 14638 4575 47       		.uleb128 0x47
 14639 4576 64657200 		.ascii	"der\000"
 14640 457a 01       		.byte	0x1
 14641 457b 2F0C     		.2byte	0xc2f
 14642 457d 4A1C0000 		.4byte	0x1c4a
 14643 4581 03       		.uleb128 0x3
 14644 4582 91       		.byte	0x91
 14645 4583 DC76     		.sleb128 -1188
 14646 4585 3D       		.uleb128 0x3d
 14647 4586 72657400 		.ascii	"ret\000"
 14648 458a 01       		.byte	0x1
 14649 458b 300C     		.2byte	0xc30
 14650 458d 30000000 		.4byte	0x30
 14651 4591 381D0000 		.4byte	.LLST159
 14652 4595 50       		.uleb128 0x50
 14653 4596 071B0000 		.4byte	.LASF999
 14654 459a 01       		.byte	0x1
 14655 459b 310C     		.2byte	0xc31
 14656 459d 30000000 		.4byte	0x30
 14657 45a1 03       		.uleb128 0x3
 14658 45a2 91       		.byte	0x91
 14659 45a3 E076     		.sleb128 -1184
 14660 45a5 3C       		.uleb128 0x3c
 14661 45a6 EA010000 		.4byte	.LASF1016
 14662 45aa 01       		.byte	0x1
 14663 45ab 320C     		.2byte	0xc32
 14664 45ad 30000000 		.4byte	0x30
 14665 45b1 00       		.byte	0
 14666 45b2 39       		.uleb128 0x39
 14667 45b3 28340000 		.4byte	.LASF81
 14668 45b7 01       		.byte	0x1
 14669 45b8 330C     		.2byte	0xc33
 14670 45ba A9000000 		.4byte	0xa9
 14671 45be 311E0000 		.4byte	.LLST160
 14672 45c2 50       		.uleb128 0x50
 14673 45c3 510E0000 		.4byte	.LASF998
 14674 45c7 01       		.byte	0x1
 14675 45c8 370C     		.2byte	0xc37
 14676 45ca BA430000 		.4byte	0x43ba
 14677 45ce 03       		.uleb128 0x3
 14678 45cf 91       		.byte	0x91
 14679 45d0 E876     		.sleb128 -1176
 14680 45d2 53       		.uleb128 0x53
 14681 45d3 78000000 		.4byte	.Ldebug_ranges0+0x78
 14682 45d7 51480000 		.4byte	0x4851
 14683 45db 50       		.uleb128 0x50
 14684 45dc FC290000 		.4byte	.LASF552
 14685 45e0 01       		.byte	0x1
 14686 45e1 640C     		.2byte	0xc64
 14687 45e3 5A4A0000 		.4byte	0x4a5a
 14688 45e7 03       		.uleb128 0x3
 14689 45e8 91       		.byte	0x91
 14690 45e9 E877     		.sleb128 -1048
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 464


 14691 45eb 39       		.uleb128 0x39
 14692 45ec 36200000 		.4byte	.LASF1017
 14693 45f0 01       		.byte	0x1
 14694 45f1 660C     		.2byte	0xc66
 14695 45f3 63130000 		.4byte	0x1363
 14696 45f7 461E0000 		.4byte	.LLST161
 14697 45fb 39       		.uleb128 0x39
 14698 45fc 893A0000 		.4byte	.LASF1018
 14699 4600 01       		.byte	0x1
 14700 4601 670C     		.2byte	0xc67
 14701 4603 30000000 		.4byte	0x30
 14702 4607 B21E0000 		.4byte	.LLST162
 14703 460b 39       		.uleb128 0x39
 14704 460c B9250000 		.4byte	.LASF1019
 14705 4610 01       		.byte	0x1
 14706 4611 680C     		.2byte	0xc68
 14707 4613 5B000000 		.4byte	0x5b
 14708 4617 F91E0000 		.4byte	.LLST163
 14709 461b 39       		.uleb128 0x39
 14710 461c 47270000 		.4byte	.LASF697
 14711 4620 01       		.byte	0x1
 14712 4621 690C     		.2byte	0xc69
 14713 4623 8D000000 		.4byte	0x8d
 14714 4627 4F1F0000 		.4byte	.LLST164
 14715 462b 3D       		.uleb128 0x3d
 14716 462c 69647800 		.ascii	"idx\000"
 14717 4630 01       		.byte	0x1
 14718 4631 6A0C     		.2byte	0xc6a
 14719 4633 5B000000 		.4byte	0x5b
 14720 4637 831F0000 		.4byte	.LLST165
 14721 463b 39       		.uleb128 0x39
 14722 463c EF390000 		.4byte	.LASF925
 14723 4640 01       		.byte	0x1
 14724 4641 6B0C     		.2byte	0xc6b
 14725 4643 30000000 		.4byte	0x30
 14726 4647 AD1F0000 		.4byte	.LLST166
 14727 464b 53       		.uleb128 0x53
 14728 464c 90000000 		.4byte	.Ldebug_ranges0+0x90
 14729 4650 35470000 		.4byte	0x4735
 14730 4654 50       		.uleb128 0x50
 14731 4655 60240000 		.4byte	.LASF1020
 14732 4659 01       		.byte	0x1
 14733 465a 7E0C     		.2byte	0xc7e
 14734 465c 4A1C0000 		.4byte	0x1c4a
 14735 4660 03       		.uleb128 0x3
 14736 4661 91       		.byte	0x91
 14737 4662 E476     		.sleb128 -1180
 14738 4664 49       		.uleb128 0x49
 14739 4665 8A010000 		.4byte	.LBB79
 14740 4669 06000000 		.4byte	.LBE79-.LBB79
 14741 466d 93460000 		.4byte	0x4693
 14742 4671 3D       		.uleb128 0x3d
 14743 4672 787000   		.ascii	"xp\000"
 14744 4675 01       		.byte	0x1
 14745 4676 9D0C     		.2byte	0xc9d
 14746 4678 A9000000 		.4byte	0xa9
 14747 467c FA1F0000 		.4byte	.LLST167
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 465


 14748 4680 34       		.uleb128 0x34
 14749 4681 90010000 		.4byte	.LVL443
 14750 4685 BB5C0000 		.4byte	0x5cbb
 14751 4689 33       		.uleb128 0x33
 14752 468a 01       		.uleb128 0x1
 14753 468b 50       		.byte	0x50
 14754 468c 04       		.uleb128 0x4
 14755 468d 91       		.byte	0x91
 14756 468e B876     		.sleb128 -1224
 14757 4690 06       		.byte	0x6
 14758 4691 00       		.byte	0
 14759 4692 00       		.byte	0
 14760 4693 32       		.uleb128 0x32
 14761 4694 FC000000 		.4byte	.LVL429
 14762 4698 A65E0000 		.4byte	0x5ea6
 14763 469c AC460000 		.4byte	0x46ac
 14764 46a0 33       		.uleb128 0x33
 14765 46a1 01       		.uleb128 0x1
 14766 46a2 51       		.byte	0x51
 14767 46a3 07       		.uleb128 0x7
 14768 46a4 91       		.byte	0x91
 14769 46a5 B876     		.sleb128 -1224
 14770 46a7 06       		.byte	0x6
 14771 46a8 76       		.byte	0x76
 14772 46a9 00       		.sleb128 0
 14773 46aa 22       		.byte	0x22
 14774 46ab 00       		.byte	0
 14775 46ac 32       		.uleb128 0x32
 14776 46ad 0C010000 		.4byte	.LVL431
 14777 46b1 875C0000 		.4byte	0x5c87
 14778 46b5 C5460000 		.4byte	0x46c5
 14779 46b9 33       		.uleb128 0x33
 14780 46ba 01       		.uleb128 0x1
 14781 46bb 50       		.byte	0x50
 14782 46bc 07       		.uleb128 0x7
 14783 46bd 91       		.byte	0x91
 14784 46be B876     		.sleb128 -1224
 14785 46c0 06       		.byte	0x6
 14786 46c1 76       		.byte	0x76
 14787 46c2 00       		.sleb128 0
 14788 46c3 22       		.byte	0x22
 14789 46c4 00       		.byte	0
 14790 46c5 32       		.uleb128 0x32
 14791 46c6 3A010000 		.4byte	.LVL435
 14792 46ca BD370000 		.4byte	0x37bd
 14793 46ce DA460000 		.4byte	0x46da
 14794 46d2 33       		.uleb128 0x33
 14795 46d3 01       		.uleb128 0x1
 14796 46d4 50       		.byte	0x50
 14797 46d5 03       		.uleb128 0x3
 14798 46d6 91       		.byte	0x91
 14799 46d7 E476     		.sleb128 -1180
 14800 46d9 00       		.byte	0
 14801 46da 32       		.uleb128 0x32
 14802 46db 6E010000 		.4byte	.LVL437
 14803 46df BC400000 		.4byte	0x40bc
 14804 46e3 23470000 		.4byte	0x4723
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 466


 14805 46e7 33       		.uleb128 0x33
 14806 46e8 01       		.uleb128 0x1
 14807 46e9 53       		.byte	0x53
 14808 46ea 03       		.uleb128 0x3
 14809 46eb 91       		.byte	0x91
 14810 46ec E476     		.sleb128 -1180
 14811 46ee 33       		.uleb128 0x33
 14812 46ef 01       		.uleb128 0x1
 14813 46f0 52       		.byte	0x52
 14814 46f1 01       		.uleb128 0x1
 14815 46f2 30       		.byte	0x30
 14816 46f3 33       		.uleb128 0x33
 14817 46f4 01       		.uleb128 0x1
 14818 46f5 51       		.byte	0x51
 14819 46f6 07       		.uleb128 0x7
 14820 46f7 91       		.byte	0x91
 14821 46f8 C076     		.sleb128 -1216
 14822 46fa 06       		.byte	0x6
 14823 46fb 74       		.byte	0x74
 14824 46fc 00       		.sleb128 0
 14825 46fd 1C       		.byte	0x1c
 14826 46fe 33       		.uleb128 0x33
 14827 46ff 01       		.uleb128 0x1
 14828 4700 50       		.byte	0x50
 14829 4701 07       		.uleb128 0x7
 14830 4702 91       		.byte	0x91
 14831 4703 D076     		.sleb128 -1200
 14832 4705 06       		.byte	0x6
 14833 4706 74       		.byte	0x74
 14834 4707 00       		.sleb128 0
 14835 4708 22       		.byte	0x22
 14836 4709 33       		.uleb128 0x33
 14837 470a 02       		.uleb128 0x2
 14838 470b 7D       		.byte	0x7d
 14839 470c 08       		.sleb128 8
 14840 470d 03       		.uleb128 0x3
 14841 470e 91       		.byte	0x91
 14842 470f E076     		.sleb128 -1184
 14843 4711 33       		.uleb128 0x33
 14844 4712 02       		.uleb128 0x2
 14845 4713 7D       		.byte	0x7d
 14846 4714 04       		.sleb128 4
 14847 4715 03       		.uleb128 0x3
 14848 4716 91       		.byte	0x91
 14849 4717 E876     		.sleb128 -1176
 14850 4719 33       		.uleb128 0x33
 14851 471a 02       		.uleb128 0x2
 14852 471b 7D       		.byte	0x7d
 14853 471c 00       		.sleb128 0
 14854 471d 04       		.uleb128 0x4
 14855 471e 91       		.byte	0x91
 14856 471f BC76     		.sleb128 -1220
 14857 4721 06       		.byte	0x6
 14858 4722 00       		.byte	0
 14859 4723 34       		.uleb128 0x34
 14860 4724 96010000 		.4byte	.LVL444
 14861 4728 BD370000 		.4byte	0x37bd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 467


 14862 472c 33       		.uleb128 0x33
 14863 472d 01       		.uleb128 0x1
 14864 472e 50       		.byte	0x50
 14865 472f 03       		.uleb128 0x3
 14866 4730 91       		.byte	0x91
 14867 4731 DC76     		.sleb128 -1188
 14868 4733 00       		.byte	0
 14869 4734 00       		.byte	0
 14870 4735 49       		.uleb128 0x49
 14871 4736 28020000 		.4byte	.LBB81
 14872 473a 06000000 		.4byte	.LBE81-.LBB81
 14873 473e 64470000 		.4byte	0x4764
 14874 4742 3D       		.uleb128 0x3d
 14875 4743 787000   		.ascii	"xp\000"
 14876 4746 01       		.byte	0x1
 14877 4747 BE0C     		.2byte	0xcbe
 14878 4749 A9000000 		.4byte	0xa9
 14879 474d 0F200000 		.4byte	.LLST168
 14880 4751 34       		.uleb128 0x34
 14881 4752 2E020000 		.4byte	.LVL461
 14882 4756 BB5C0000 		.4byte	0x5cbb
 14883 475a 33       		.uleb128 0x33
 14884 475b 01       		.uleb128 0x1
 14885 475c 50       		.byte	0x50
 14886 475d 04       		.uleb128 0x4
 14887 475e 91       		.byte	0x91
 14888 475f B876     		.sleb128 -1224
 14889 4761 06       		.byte	0x6
 14890 4762 00       		.byte	0
 14891 4763 00       		.byte	0
 14892 4764 32       		.uleb128 0x32
 14893 4765 C2000000 		.4byte	.LVL418
 14894 4769 675B0000 		.4byte	0x5b67
 14895 476d 7A470000 		.4byte	0x477a
 14896 4771 33       		.uleb128 0x33
 14897 4772 01       		.uleb128 0x1
 14898 4773 50       		.byte	0x50
 14899 4774 04       		.uleb128 0x4
 14900 4775 91       		.byte	0x91
 14901 4776 CC76     		.sleb128 -1204
 14902 4778 06       		.byte	0x6
 14903 4779 00       		.byte	0
 14904 477a 32       		.uleb128 0x32
 14905 477b E2000000 		.4byte	.LVL425
 14906 477f BD370000 		.4byte	0x37bd
 14907 4783 8F470000 		.4byte	0x478f
 14908 4787 33       		.uleb128 0x33
 14909 4788 01       		.uleb128 0x1
 14910 4789 50       		.byte	0x50
 14911 478a 03       		.uleb128 0x3
 14912 478b 91       		.byte	0x91
 14913 478c DC76     		.sleb128 -1188
 14914 478e 00       		.byte	0
 14915 478f 32       		.uleb128 0x32
 14916 4790 C4010000 		.4byte	.LVL448
 14917 4794 BD370000 		.4byte	0x37bd
 14918 4798 A3470000 		.4byte	0x47a3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 468


 14919 479c 33       		.uleb128 0x33
 14920 479d 01       		.uleb128 0x1
 14921 479e 50       		.byte	0x50
 14922 479f 02       		.uleb128 0x2
 14923 47a0 77       		.byte	0x77
 14924 47a1 00       		.sleb128 0
 14925 47a2 00       		.byte	0
 14926 47a3 32       		.uleb128 0x32
 14927 47a4 D0010000 		.4byte	.LVL449
 14928 47a8 DF360000 		.4byte	0x36df
 14929 47ac CA470000 		.4byte	0x47ca
 14930 47b0 33       		.uleb128 0x33
 14931 47b1 01       		.uleb128 0x1
 14932 47b2 53       		.byte	0x53
 14933 47b3 04       		.uleb128 0x4
 14934 47b4 91       		.byte	0x91
 14935 47b5 BC76     		.sleb128 -1220
 14936 47b7 06       		.byte	0x6
 14937 47b8 33       		.uleb128 0x33
 14938 47b9 01       		.uleb128 0x1
 14939 47ba 52       		.byte	0x52
 14940 47bb 01       		.uleb128 0x1
 14941 47bc 30       		.byte	0x30
 14942 47bd 33       		.uleb128 0x33
 14943 47be 01       		.uleb128 0x1
 14944 47bf 51       		.byte	0x51
 14945 47c0 02       		.uleb128 0x2
 14946 47c1 76       		.byte	0x76
 14947 47c2 00       		.sleb128 0
 14948 47c3 33       		.uleb128 0x33
 14949 47c4 01       		.uleb128 0x1
 14950 47c5 50       		.byte	0x50
 14951 47c6 02       		.uleb128 0x2
 14952 47c7 77       		.byte	0x77
 14953 47c8 00       		.sleb128 0
 14954 47c9 00       		.byte	0
 14955 47ca 32       		.uleb128 0x32
 14956 47cb E2010000 		.4byte	.LVL452
 14957 47cf 875C0000 		.4byte	0x5c87
 14958 47d3 E6470000 		.4byte	0x47e6
 14959 47d7 33       		.uleb128 0x33
 14960 47d8 01       		.uleb128 0x1
 14961 47d9 52       		.byte	0x52
 14962 47da 02       		.uleb128 0x2
 14963 47db 76       		.byte	0x76
 14964 47dc 00       		.sleb128 0
 14965 47dd 33       		.uleb128 0x33
 14966 47de 01       		.uleb128 0x1
 14967 47df 51       		.byte	0x51
 14968 47e0 04       		.uleb128 0x4
 14969 47e1 91       		.byte	0x91
 14970 47e2 B876     		.sleb128 -1224
 14971 47e4 06       		.byte	0x6
 14972 47e5 00       		.byte	0
 14973 47e6 32       		.uleb128 0x32
 14974 47e7 FE010000 		.4byte	.LVL455
 14975 47eb BD370000 		.4byte	0x37bd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 469


 14976 47ef FA470000 		.4byte	0x47fa
 14977 47f3 33       		.uleb128 0x33
 14978 47f4 01       		.uleb128 0x1
 14979 47f5 50       		.byte	0x50
 14980 47f6 02       		.uleb128 0x2
 14981 47f7 74       		.byte	0x74
 14982 47f8 00       		.sleb128 0
 14983 47f9 00       		.byte	0
 14984 47fa 32       		.uleb128 0x32
 14985 47fb 0E020000 		.4byte	.LVL456
 14986 47ff DF360000 		.4byte	0x36df
 14987 4803 23480000 		.4byte	0x4823
 14988 4807 33       		.uleb128 0x33
 14989 4808 01       		.uleb128 0x1
 14990 4809 53       		.byte	0x53
 14991 480a 04       		.uleb128 0x4
 14992 480b 91       		.byte	0x91
 14993 480c BC76     		.sleb128 -1220
 14994 480e 06       		.byte	0x6
 14995 480f 33       		.uleb128 0x33
 14996 4810 01       		.uleb128 0x1
 14997 4811 52       		.byte	0x52
 14998 4812 03       		.uleb128 0x3
 14999 4813 91       		.byte	0x91
 15000 4814 04       		.sleb128 4
 15001 4815 06       		.byte	0x6
 15002 4816 33       		.uleb128 0x33
 15003 4817 01       		.uleb128 0x1
 15004 4818 51       		.byte	0x51
 15005 4819 02       		.uleb128 0x2
 15006 481a 76       		.byte	0x76
 15007 481b 00       		.sleb128 0
 15008 481c 33       		.uleb128 0x33
 15009 481d 01       		.uleb128 0x1
 15010 481e 50       		.byte	0x50
 15011 481f 02       		.uleb128 0x2
 15012 4820 74       		.byte	0x74
 15013 4821 00       		.sleb128 0
 15014 4822 00       		.byte	0
 15015 4823 32       		.uleb128 0x32
 15016 4824 20020000 		.4byte	.LVL459
 15017 4828 875C0000 		.4byte	0x5c87
 15018 482c 3F480000 		.4byte	0x483f
 15019 4830 33       		.uleb128 0x33
 15020 4831 01       		.uleb128 0x1
 15021 4832 52       		.byte	0x52
 15022 4833 02       		.uleb128 0x2
 15023 4834 76       		.byte	0x76
 15024 4835 00       		.sleb128 0
 15025 4836 33       		.uleb128 0x33
 15026 4837 01       		.uleb128 0x1
 15027 4838 51       		.byte	0x51
 15028 4839 04       		.uleb128 0x4
 15029 483a 91       		.byte	0x91
 15030 483b B876     		.sleb128 -1224
 15031 483d 06       		.byte	0x6
 15032 483e 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 470


 15033 483f 34       		.uleb128 0x34
 15034 4840 38020000 		.4byte	.LVL463
 15035 4844 BD370000 		.4byte	0x37bd
 15036 4848 33       		.uleb128 0x33
 15037 4849 01       		.uleb128 0x1
 15038 484a 50       		.byte	0x50
 15039 484b 03       		.uleb128 0x3
 15040 484c 91       		.byte	0x91
 15041 484d DC76     		.sleb128 -1188
 15042 484f 00       		.byte	0
 15043 4850 00       		.byte	0
 15044 4851 49       		.uleb128 0x49
 15045 4852 4E030000 		.4byte	.LBB83
 15046 4856 66000000 		.4byte	.LBE83-.LBB83
 15047 485a B7480000 		.4byte	0x48b7
 15048 485e 50       		.uleb128 0x50
 15049 485f 4D2B0000 		.4byte	.LASF993
 15050 4863 01       		.byte	0x1
 15051 4864 7F0D     		.2byte	0xd7f
 15052 4866 883F0000 		.4byte	0x3f88
 15053 486a 03       		.uleb128 0x3
 15054 486b 91       		.byte	0x91
 15055 486c E877     		.sleb128 -1048
 15056 486e 32       		.uleb128 0x32
 15057 486f 5C030000 		.4byte	.LVL496
 15058 4873 B05D0000 		.4byte	0x5db0
 15059 4877 8B480000 		.4byte	0x488b
 15060 487b 33       		.uleb128 0x33
 15061 487c 01       		.uleb128 0x1
 15062 487d 53       		.byte	0x53
 15063 487e 04       		.uleb128 0x4
 15064 487f 91       		.byte	0x91
 15065 4880 BC76     		.sleb128 -1220
 15066 4882 06       		.byte	0x6
 15067 4883 33       		.uleb128 0x33
 15068 4884 01       		.uleb128 0x1
 15069 4885 50       		.byte	0x50
 15070 4886 03       		.uleb128 0x3
 15071 4887 91       		.byte	0x91
 15072 4888 E877     		.sleb128 -1048
 15073 488a 00       		.byte	0
 15074 488b 32       		.uleb128 0x32
 15075 488c 64030000 		.4byte	.LVL497
 15076 4890 BD5E0000 		.4byte	0x5ebd
 15077 4894 A5480000 		.4byte	0x48a5
 15078 4898 33       		.uleb128 0x33
 15079 4899 01       		.uleb128 0x1
 15080 489a 51       		.byte	0x51
 15081 489b 01       		.uleb128 0x1
 15082 489c 30       		.byte	0x30
 15083 489d 33       		.uleb128 0x33
 15084 489e 01       		.uleb128 0x1
 15085 489f 50       		.byte	0x50
 15086 48a0 03       		.uleb128 0x3
 15087 48a1 91       		.byte	0x91
 15088 48a2 E877     		.sleb128 -1048
 15089 48a4 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 471


 15090 48a5 34       		.uleb128 0x34
 15091 48a6 B4030000 		.4byte	.LVL501
 15092 48aa 125E0000 		.4byte	0x5e12
 15093 48ae 33       		.uleb128 0x33
 15094 48af 01       		.uleb128 0x1
 15095 48b0 50       		.byte	0x50
 15096 48b1 03       		.uleb128 0x3
 15097 48b2 91       		.byte	0x91
 15098 48b3 E877     		.sleb128 -1048
 15099 48b5 00       		.byte	0
 15100 48b6 00       		.byte	0
 15101 48b7 32       		.uleb128 0x32
 15102 48b8 74000000 		.4byte	.LVL413
 15103 48bc BC400000 		.4byte	0x40bc
 15104 48c0 FA480000 		.4byte	0x48fa
 15105 48c4 33       		.uleb128 0x33
 15106 48c5 01       		.uleb128 0x1
 15107 48c6 53       		.byte	0x53
 15108 48c7 03       		.uleb128 0x3
 15109 48c8 91       		.byte	0x91
 15110 48c9 DC76     		.sleb128 -1188
 15111 48cb 33       		.uleb128 0x33
 15112 48cc 01       		.uleb128 0x1
 15113 48cd 52       		.byte	0x52
 15114 48ce 02       		.uleb128 0x2
 15115 48cf 76       		.byte	0x76
 15116 48d0 00       		.sleb128 0
 15117 48d1 33       		.uleb128 0x33
 15118 48d2 01       		.uleb128 0x1
 15119 48d3 51       		.byte	0x51
 15120 48d4 04       		.uleb128 0x4
 15121 48d5 91       		.byte	0x91
 15122 48d6 C076     		.sleb128 -1216
 15123 48d8 06       		.byte	0x6
 15124 48d9 33       		.uleb128 0x33
 15125 48da 01       		.uleb128 0x1
 15126 48db 50       		.byte	0x50
 15127 48dc 04       		.uleb128 0x4
 15128 48dd 91       		.byte	0x91
 15129 48de D076     		.sleb128 -1200
 15130 48e0 06       		.byte	0x6
 15131 48e1 33       		.uleb128 0x33
 15132 48e2 02       		.uleb128 0x2
 15133 48e3 7D       		.byte	0x7d
 15134 48e4 08       		.sleb128 8
 15135 48e5 03       		.uleb128 0x3
 15136 48e6 91       		.byte	0x91
 15137 48e7 E076     		.sleb128 -1184
 15138 48e9 33       		.uleb128 0x33
 15139 48ea 02       		.uleb128 0x2
 15140 48eb 7D       		.byte	0x7d
 15141 48ec 04       		.sleb128 4
 15142 48ed 02       		.uleb128 0x2
 15143 48ee 77       		.byte	0x77
 15144 48ef 00       		.sleb128 0
 15145 48f0 33       		.uleb128 0x33
 15146 48f1 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 472


 15147 48f2 7D       		.byte	0x7d
 15148 48f3 00       		.sleb128 0
 15149 48f4 04       		.uleb128 0x4
 15150 48f5 91       		.byte	0x91
 15151 48f6 BC76     		.sleb128 -1220
 15152 48f8 06       		.byte	0x6
 15153 48f9 00       		.byte	0
 15154 48fa 32       		.uleb128 0x32
 15155 48fb 46020000 		.4byte	.LVL467
 15156 48ff DF360000 		.4byte	0x36df
 15157 4903 25490000 		.4byte	0x4925
 15158 4907 33       		.uleb128 0x33
 15159 4908 01       		.uleb128 0x1
 15160 4909 53       		.byte	0x53
 15161 490a 04       		.uleb128 0x4
 15162 490b 91       		.byte	0x91
 15163 490c BC76     		.sleb128 -1220
 15164 490e 06       		.byte	0x6
 15165 490f 33       		.uleb128 0x33
 15166 4910 01       		.uleb128 0x1
 15167 4911 52       		.byte	0x52
 15168 4912 02       		.uleb128 0x2
 15169 4913 76       		.byte	0x76
 15170 4914 00       		.sleb128 0
 15171 4915 33       		.uleb128 0x33
 15172 4916 01       		.uleb128 0x1
 15173 4917 51       		.byte	0x51
 15174 4918 04       		.uleb128 0x4
 15175 4919 91       		.byte	0x91
 15176 491a C076     		.sleb128 -1216
 15177 491c 06       		.byte	0x6
 15178 491d 33       		.uleb128 0x33
 15179 491e 01       		.uleb128 0x1
 15180 491f 50       		.byte	0x50
 15181 4920 03       		.uleb128 0x3
 15182 4921 91       		.byte	0x91
 15183 4922 DC76     		.sleb128 -1188
 15184 4924 00       		.byte	0
 15185 4925 32       		.uleb128 0x32
 15186 4926 58020000 		.4byte	.LVL469
 15187 492a 875C0000 		.4byte	0x5c87
 15188 492e 43490000 		.4byte	0x4943
 15189 4932 33       		.uleb128 0x33
 15190 4933 01       		.uleb128 0x1
 15191 4934 52       		.byte	0x52
 15192 4935 04       		.uleb128 0x4
 15193 4936 91       		.byte	0x91
 15194 4937 C076     		.sleb128 -1216
 15195 4939 06       		.byte	0x6
 15196 493a 33       		.uleb128 0x33
 15197 493b 01       		.uleb128 0x1
 15198 493c 51       		.byte	0x51
 15199 493d 04       		.uleb128 0x4
 15200 493e 91       		.byte	0x91
 15201 493f D076     		.sleb128 -1200
 15202 4941 06       		.byte	0x6
 15203 4942 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 473


 15204 4943 32       		.uleb128 0x32
 15205 4944 66020000 		.4byte	.LVL470
 15206 4948 BD370000 		.4byte	0x37bd
 15207 494c 58490000 		.4byte	0x4958
 15208 4950 33       		.uleb128 0x33
 15209 4951 01       		.uleb128 0x1
 15210 4952 50       		.byte	0x50
 15211 4953 03       		.uleb128 0x3
 15212 4954 91       		.byte	0x91
 15213 4955 DC76     		.sleb128 -1188
 15214 4957 00       		.byte	0
 15215 4958 32       		.uleb128 0x32
 15216 4959 7A020000 		.4byte	.LVL471
 15217 495d AC3D0000 		.4byte	0x3dac
 15218 4961 72490000 		.4byte	0x4972
 15219 4965 33       		.uleb128 0x33
 15220 4966 01       		.uleb128 0x1
 15221 4967 52       		.byte	0x52
 15222 4968 01       		.uleb128 0x1
 15223 4969 31       		.byte	0x31
 15224 496a 33       		.uleb128 0x33
 15225 496b 01       		.uleb128 0x1
 15226 496c 51       		.byte	0x51
 15227 496d 03       		.uleb128 0x3
 15228 496e 91       		.byte	0x91
 15229 496f DC76     		.sleb128 -1188
 15230 4971 00       		.byte	0
 15231 4972 32       		.uleb128 0x32
 15232 4973 A8020000 		.4byte	.LVL475
 15233 4977 BD370000 		.4byte	0x37bd
 15234 497b 86490000 		.4byte	0x4986
 15235 497f 33       		.uleb128 0x33
 15236 4980 01       		.uleb128 0x1
 15237 4981 50       		.byte	0x50
 15238 4982 02       		.uleb128 0x2
 15239 4983 76       		.byte	0x76
 15240 4984 00       		.sleb128 0
 15241 4985 00       		.byte	0
 15242 4986 32       		.uleb128 0x32
 15243 4987 B2020000 		.4byte	.LVL476
 15244 498b 875C0000 		.4byte	0x5c87
 15245 498f A6490000 		.4byte	0x49a6
 15246 4993 33       		.uleb128 0x33
 15247 4994 01       		.uleb128 0x1
 15248 4995 52       		.byte	0x52
 15249 4996 01       		.uleb128 0x1
 15250 4997 34       		.byte	0x34
 15251 4998 33       		.uleb128 0x33
 15252 4999 01       		.uleb128 0x1
 15253 499a 51       		.byte	0x51
 15254 499b 03       		.uleb128 0x3
 15255 499c 91       		.byte	0x91
 15256 499d DC76     		.sleb128 -1188
 15257 499f 33       		.uleb128 0x33
 15258 49a0 01       		.uleb128 0x1
 15259 49a1 50       		.byte	0x50
 15260 49a2 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 474


 15261 49a3 76       		.byte	0x76
 15262 49a4 00       		.sleb128 0
 15263 49a5 00       		.byte	0
 15264 49a6 32       		.uleb128 0x32
 15265 49a7 C6020000 		.4byte	.LVL477
 15266 49ab BD370000 		.4byte	0x37bd
 15267 49af BA490000 		.4byte	0x49ba
 15268 49b3 33       		.uleb128 0x33
 15269 49b4 01       		.uleb128 0x1
 15270 49b5 50       		.byte	0x50
 15271 49b6 02       		.uleb128 0x2
 15272 49b7 74       		.byte	0x74
 15273 49b8 00       		.sleb128 0
 15274 49b9 00       		.byte	0
 15275 49ba 32       		.uleb128 0x32
 15276 49bb D0020000 		.4byte	.LVL478
 15277 49bf 875C0000 		.4byte	0x5c87
 15278 49c3 DA490000 		.4byte	0x49da
 15279 49c7 33       		.uleb128 0x33
 15280 49c8 01       		.uleb128 0x1
 15281 49c9 52       		.byte	0x52
 15282 49ca 01       		.uleb128 0x1
 15283 49cb 34       		.byte	0x34
 15284 49cc 33       		.uleb128 0x33
 15285 49cd 01       		.uleb128 0x1
 15286 49ce 51       		.byte	0x51
 15287 49cf 03       		.uleb128 0x3
 15288 49d0 91       		.byte	0x91
 15289 49d1 DC76     		.sleb128 -1188
 15290 49d3 33       		.uleb128 0x33
 15291 49d4 01       		.uleb128 0x1
 15292 49d5 50       		.byte	0x50
 15293 49d6 02       		.uleb128 0x2
 15294 49d7 74       		.byte	0x74
 15295 49d8 00       		.sleb128 0
 15296 49d9 00       		.byte	0
 15297 49da 32       		.uleb128 0x32
 15298 49db 00030000 		.4byte	.LVL483
 15299 49df BD370000 		.4byte	0x37bd
 15300 49e3 EE490000 		.4byte	0x49ee
 15301 49e7 33       		.uleb128 0x33
 15302 49e8 01       		.uleb128 0x1
 15303 49e9 50       		.byte	0x50
 15304 49ea 02       		.uleb128 0x2
 15305 49eb 74       		.byte	0x74
 15306 49ec 00       		.sleb128 0
 15307 49ed 00       		.byte	0
 15308 49ee 32       		.uleb128 0x32
 15309 49ef 0A030000 		.4byte	.LVL484
 15310 49f3 875C0000 		.4byte	0x5c87
 15311 49f7 0E4A0000 		.4byte	0x4a0e
 15312 49fb 33       		.uleb128 0x33
 15313 49fc 01       		.uleb128 0x1
 15314 49fd 52       		.byte	0x52
 15315 49fe 01       		.uleb128 0x1
 15316 49ff 34       		.byte	0x34
 15317 4a00 33       		.uleb128 0x33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 475


 15318 4a01 01       		.uleb128 0x1
 15319 4a02 51       		.byte	0x51
 15320 4a03 03       		.uleb128 0x3
 15321 4a04 91       		.byte	0x91
 15322 4a05 DC76     		.sleb128 -1188
 15323 4a07 33       		.uleb128 0x33
 15324 4a08 01       		.uleb128 0x1
 15325 4a09 50       		.byte	0x50
 15326 4a0a 02       		.uleb128 0x2
 15327 4a0b 74       		.byte	0x74
 15328 4a0c 00       		.sleb128 0
 15329 4a0d 00       		.byte	0
 15330 4a0e 32       		.uleb128 0x32
 15331 4a0f 1C030000 		.4byte	.LVL487
 15332 4a13 BD370000 		.4byte	0x37bd
 15333 4a17 224A0000 		.4byte	0x4a22
 15334 4a1b 33       		.uleb128 0x33
 15335 4a1c 01       		.uleb128 0x1
 15336 4a1d 50       		.byte	0x50
 15337 4a1e 02       		.uleb128 0x2
 15338 4a1f 75       		.byte	0x75
 15339 4a20 00       		.sleb128 0
 15340 4a21 00       		.byte	0
 15341 4a22 32       		.uleb128 0x32
 15342 4a23 26030000 		.4byte	.LVL488
 15343 4a27 875C0000 		.4byte	0x5c87
 15344 4a2b 424A0000 		.4byte	0x4a42
 15345 4a2f 33       		.uleb128 0x33
 15346 4a30 01       		.uleb128 0x1
 15347 4a31 52       		.byte	0x52
 15348 4a32 01       		.uleb128 0x1
 15349 4a33 34       		.byte	0x34
 15350 4a34 33       		.uleb128 0x33
 15351 4a35 01       		.uleb128 0x1
 15352 4a36 51       		.byte	0x51
 15353 4a37 03       		.uleb128 0x3
 15354 4a38 91       		.byte	0x91
 15355 4a39 DC76     		.sleb128 -1188
 15356 4a3b 33       		.uleb128 0x33
 15357 4a3c 01       		.uleb128 0x1
 15358 4a3d 50       		.byte	0x50
 15359 4a3e 02       		.uleb128 0x2
 15360 4a3f 75       		.byte	0x75
 15361 4a40 00       		.sleb128 0
 15362 4a41 00       		.byte	0
 15363 4a42 34       		.uleb128 0x34
 15364 4a43 2E030000 		.4byte	.LVL490
 15365 4a47 BD370000 		.4byte	0x37bd
 15366 4a4b 33       		.uleb128 0x33
 15367 4a4c 01       		.uleb128 0x1
 15368 4a4d 50       		.byte	0x50
 15369 4a4e 03       		.uleb128 0x3
 15370 4a4f 91       		.byte	0x91
 15371 4a50 DC76     		.sleb128 -1188
 15372 4a52 00       		.byte	0
 15373 4a53 00       		.byte	0
 15374 4a54 06       		.uleb128 0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 476


 15375 4a55 04       		.byte	0x4
 15376 4a56 8D000000 		.4byte	0x8d
 15377 4a5a 1A       		.uleb128 0x1a
 15378 4a5b 37000000 		.4byte	0x37
 15379 4a5f 6B4A0000 		.4byte	0x4a6b
 15380 4a63 20       		.uleb128 0x20
 15381 4a64 A2000000 		.4byte	0xa2
 15382 4a68 FF03     		.2byte	0x3ff
 15383 4a6a 00       		.byte	0
 15384 4a6b 38       		.uleb128 0x38
 15385 4a6c 803F0000 		.4byte	.LASF1021
 15386 4a70 01       		.byte	0x1
 15387 4a71 390E     		.2byte	0xe39
 15388 4a73 30000000 		.4byte	0x30
 15389 4a77 00000000 		.4byte	.LFB71
 15390 4a7b 08000000 		.4byte	.LFE71-.LFB71
 15391 4a7f 01       		.uleb128 0x1
 15392 4a80 9C       		.byte	0x9c
 15393 4a81 B04A0000 		.4byte	0x4ab0
 15394 4a85 3B       		.uleb128 0x3b
 15395 4a86 636D00   		.ascii	"cm\000"
 15396 4a89 01       		.byte	0x1
 15397 4a8a 390E     		.2byte	0xe39
 15398 4a8c 2E090000 		.4byte	0x92e
 15399 4a90 24200000 		.4byte	.LLST169
 15400 4a94 3F       		.uleb128 0x3f
 15401 4a95 78410000 		.4byte	.LASF103
 15402 4a99 01       		.byte	0x1
 15403 4a9a 390E     		.2byte	0xe39
 15404 4a9c 30000000 		.4byte	0x30
 15405 4aa0 01       		.uleb128 0x1
 15406 4aa1 51       		.byte	0x51
 15407 4aa2 54       		.uleb128 0x54
 15408 4aa3 72657400 		.ascii	"ret\000"
 15409 4aa7 01       		.byte	0x1
 15410 4aa8 3B0E     		.2byte	0xe3b
 15411 4aaa 30000000 		.4byte	0x30
 15412 4aae 01       		.byte	0x1
 15413 4aaf 00       		.byte	0
 15414 4ab0 38       		.uleb128 0x38
 15415 4ab1 3C390000 		.4byte	.LASF1022
 15416 4ab5 01       		.byte	0x1
 15417 4ab6 5C0E     		.2byte	0xe5c
 15418 4ab8 30000000 		.4byte	0x30
 15419 4abc 00000000 		.4byte	.LFB72
 15420 4ac0 14000000 		.4byte	.LFE72-.LFB72
 15421 4ac4 01       		.uleb128 0x1
 15422 4ac5 9C       		.byte	0x9c
 15423 4ac6 DA4A0000 		.4byte	0x4ada
 15424 4aca 3B       		.uleb128 0x3b
 15425 4acb 636D00   		.ascii	"cm\000"
 15426 4ace 01       		.byte	0x1
 15427 4acf 5C0E     		.2byte	0xe5c
 15428 4ad1 2E090000 		.4byte	0x92e
 15429 4ad5 45200000 		.4byte	.LLST170
 15430 4ad9 00       		.byte	0
 15431 4ada 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 477


 15432 4adb 843D0000 		.4byte	.LASF1023
 15433 4adf 01       		.byte	0x1
 15434 4ae0 670E     		.2byte	0xe67
 15435 4ae2 30000000 		.4byte	0x30
 15436 4ae6 00000000 		.4byte	.LFB73
 15437 4aea 80000000 		.4byte	.LFE73-.LFB73
 15438 4aee 01       		.uleb128 0x1
 15439 4aef 9C       		.byte	0x9c
 15440 4af0 3B4C0000 		.4byte	0x4c3b
 15441 4af4 3B       		.uleb128 0x3b
 15442 4af5 636D00   		.ascii	"cm\000"
 15443 4af8 01       		.byte	0x1
 15444 4af9 670E     		.2byte	0xe67
 15445 4afb 2E090000 		.4byte	0x92e
 15446 4aff 8D200000 		.4byte	.LLST171
 15447 4b03 2E       		.uleb128 0x2e
 15448 4b04 EB220000 		.4byte	.LASF923
 15449 4b08 01       		.byte	0x1
 15450 4b09 670E     		.2byte	0xe67
 15451 4b0b B11D0000 		.4byte	0x1db1
 15452 4b0f CF200000 		.4byte	.LLST172
 15453 4b13 3B       		.uleb128 0x3b
 15454 4b14 737A00   		.ascii	"sz\000"
 15455 4b17 01       		.byte	0x1
 15456 4b18 680E     		.2byte	0xe68
 15457 4b1a 8D000000 		.4byte	0x8d
 15458 4b1e 14210000 		.4byte	.LLST173
 15459 4b22 2E       		.uleb128 0x2e
 15460 4b23 6F280000 		.4byte	.LASF918
 15461 4b27 01       		.byte	0x1
 15462 4b28 680E     		.2byte	0xe68
 15463 4b2a 30000000 		.4byte	0x30
 15464 4b2e 59210000 		.4byte	.LLST174
 15465 4b32 3D       		.uleb128 0x3d
 15466 4b33 72657400 		.ascii	"ret\000"
 15467 4b37 01       		.byte	0x1
 15468 4b38 6A0E     		.2byte	0xe6a
 15469 4b3a 30000000 		.4byte	0x30
 15470 4b3e 93210000 		.4byte	.LLST175
 15471 4b42 47       		.uleb128 0x47
 15472 4b43 64657200 		.ascii	"der\000"
 15473 4b47 01       		.byte	0x1
 15474 4b48 6B0E     		.2byte	0xe6b
 15475 4b4a 4A1C0000 		.4byte	0x1c4a
 15476 4b4e 03       		.uleb128 0x3
 15477 4b4f 91       		.byte	0x91
 15478 4b50 D878     		.sleb128 -936
 15479 4b52 50       		.uleb128 0x50
 15480 4b53 4D2B0000 		.4byte	.LASF993
 15481 4b57 01       		.byte	0x1
 15482 4b58 6F0E     		.2byte	0xe6f
 15483 4b5a 883F0000 		.4byte	0x3f88
 15484 4b5e 03       		.uleb128 0x3
 15485 4b5f 91       		.byte	0x91
 15486 4b60 E079     		.sleb128 -800
 15487 4b62 49       		.uleb128 0x49
 15488 4b63 10000000 		.4byte	.LBB84
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 478


 15489 4b67 32000000 		.4byte	.LBE84-.LBB84
 15490 4b6b DA4B0000 		.4byte	0x4bda
 15491 4b6f 50       		.uleb128 0x50
 15492 4b70 071B0000 		.4byte	.LASF999
 15493 4b74 01       		.byte	0x1
 15494 4b75 7C0E     		.2byte	0xe7c
 15495 4b77 30000000 		.4byte	0x30
 15496 4b7b 03       		.uleb128 0x3
 15497 4b7c 91       		.byte	0x91
 15498 4b7d DC78     		.sleb128 -932
 15499 4b7f 50       		.uleb128 0x50
 15500 4b80 510E0000 		.4byte	.LASF998
 15501 4b84 01       		.byte	0x1
 15502 4b85 800E     		.2byte	0xe80
 15503 4b87 BA430000 		.4byte	0x43ba
 15504 4b8b 03       		.uleb128 0x3
 15505 4b8c 91       		.byte	0x91
 15506 4b8d E078     		.sleb128 -928
 15507 4b8f 32       		.uleb128 0x32
 15508 4b90 32000000 		.4byte	.LVL514
 15509 4b94 BC400000 		.4byte	0x40bc
 15510 4b98 C84B0000 		.4byte	0x4bc8
 15511 4b9c 33       		.uleb128 0x33
 15512 4b9d 01       		.uleb128 0x1
 15513 4b9e 53       		.byte	0x53
 15514 4b9f 03       		.uleb128 0x3
 15515 4ba0 91       		.byte	0x91
 15516 4ba1 D878     		.sleb128 -936
 15517 4ba3 33       		.uleb128 0x33
 15518 4ba4 01       		.uleb128 0x1
 15519 4ba5 52       		.byte	0x52
 15520 4ba6 02       		.uleb128 0x2
 15521 4ba7 74       		.byte	0x74
 15522 4ba8 00       		.sleb128 0
 15523 4ba9 33       		.uleb128 0x33
 15524 4baa 01       		.uleb128 0x1
 15525 4bab 51       		.byte	0x51
 15526 4bac 03       		.uleb128 0x3
 15527 4bad F3       		.byte	0xf3
 15528 4bae 01       		.uleb128 0x1
 15529 4baf 52       		.byte	0x52
 15530 4bb0 33       		.uleb128 0x33
 15531 4bb1 01       		.uleb128 0x1
 15532 4bb2 50       		.byte	0x50
 15533 4bb3 03       		.uleb128 0x3
 15534 4bb4 F3       		.byte	0xf3
 15535 4bb5 01       		.uleb128 0x1
 15536 4bb6 51       		.byte	0x51
 15537 4bb7 33       		.uleb128 0x33
 15538 4bb8 02       		.uleb128 0x2
 15539 4bb9 7D       		.byte	0x7d
 15540 4bba 08       		.sleb128 8
 15541 4bbb 03       		.uleb128 0x3
 15542 4bbc 91       		.byte	0x91
 15543 4bbd DC78     		.sleb128 -932
 15544 4bbf 33       		.uleb128 0x33
 15545 4bc0 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 479


 15546 4bc1 7D       		.byte	0x7d
 15547 4bc2 04       		.sleb128 4
 15548 4bc3 03       		.uleb128 0x3
 15549 4bc4 91       		.byte	0x91
 15550 4bc5 E078     		.sleb128 -928
 15551 4bc7 00       		.byte	0
 15552 4bc8 34       		.uleb128 0x34
 15553 4bc9 42000000 		.4byte	.LVL517
 15554 4bcd B05D0000 		.4byte	0x5db0
 15555 4bd1 33       		.uleb128 0x33
 15556 4bd2 01       		.uleb128 0x1
 15557 4bd3 50       		.byte	0x50
 15558 4bd4 03       		.uleb128 0x3
 15559 4bd5 91       		.byte	0x91
 15560 4bd6 E079     		.sleb128 -800
 15561 4bd8 00       		.byte	0
 15562 4bd9 00       		.byte	0
 15563 4bda 32       		.uleb128 0x32
 15564 4bdb 50000000 		.4byte	.LVL521
 15565 4bdf B05D0000 		.4byte	0x5db0
 15566 4be3 EF4B0000 		.4byte	0x4bef
 15567 4be7 33       		.uleb128 0x33
 15568 4be8 01       		.uleb128 0x1
 15569 4be9 50       		.byte	0x50
 15570 4bea 03       		.uleb128 0x3
 15571 4beb 91       		.byte	0x91
 15572 4bec E079     		.sleb128 -800
 15573 4bee 00       		.byte	0
 15574 4bef 32       		.uleb128 0x32
 15575 4bf0 5C000000 		.4byte	.LVL522
 15576 4bf4 D85E0000 		.4byte	0x5ed8
 15577 4bf8 144C0000 		.4byte	0x4c14
 15578 4bfc 33       		.uleb128 0x33
 15579 4bfd 01       		.uleb128 0x1
 15580 4bfe 53       		.byte	0x53
 15581 4bff 02       		.uleb128 0x2
 15582 4c00 75       		.byte	0x75
 15583 4c01 00       		.sleb128 0
 15584 4c02 33       		.uleb128 0x33
 15585 4c03 01       		.uleb128 0x1
 15586 4c04 52       		.byte	0x52
 15587 4c05 01       		.uleb128 0x1
 15588 4c06 31       		.byte	0x31
 15589 4c07 33       		.uleb128 0x33
 15590 4c08 01       		.uleb128 0x1
 15591 4c09 51       		.byte	0x51
 15592 4c0a 01       		.uleb128 0x1
 15593 4c0b 30       		.byte	0x30
 15594 4c0c 33       		.uleb128 0x33
 15595 4c0d 01       		.uleb128 0x1
 15596 4c0e 50       		.byte	0x50
 15597 4c0f 03       		.uleb128 0x3
 15598 4c10 91       		.byte	0x91
 15599 4c11 E079     		.sleb128 -800
 15600 4c13 00       		.byte	0
 15601 4c14 32       		.uleb128 0x32
 15602 4c15 64000000 		.4byte	.LVL524
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 480


 15603 4c19 125E0000 		.4byte	0x5e12
 15604 4c1d 294C0000 		.4byte	0x4c29
 15605 4c21 33       		.uleb128 0x33
 15606 4c22 01       		.uleb128 0x1
 15607 4c23 50       		.byte	0x50
 15608 4c24 03       		.uleb128 0x3
 15609 4c25 91       		.byte	0x91
 15610 4c26 E079     		.sleb128 -800
 15611 4c28 00       		.byte	0
 15612 4c29 34       		.uleb128 0x34
 15613 4c2a 6A000000 		.4byte	.LVL525
 15614 4c2e BD370000 		.4byte	0x37bd
 15615 4c32 33       		.uleb128 0x33
 15616 4c33 01       		.uleb128 0x1
 15617 4c34 50       		.byte	0x50
 15618 4c35 03       		.uleb128 0x3
 15619 4c36 91       		.byte	0x91
 15620 4c37 D878     		.sleb128 -936
 15621 4c39 00       		.byte	0
 15622 4c3a 00       		.byte	0
 15623 4c3b 38       		.uleb128 0x38
 15624 4c3c 7F0C0000 		.4byte	.LASF1024
 15625 4c40 01       		.byte	0x1
 15626 4c41 AD0E     		.2byte	0xead
 15627 4c43 30000000 		.4byte	0x30
 15628 4c47 00000000 		.4byte	.LFB74
 15629 4c4b 08000000 		.4byte	.LFE74-.LFB74
 15630 4c4f 01       		.uleb128 0x1
 15631 4c50 9C       		.byte	0x9c
 15632 4c51 804C0000 		.4byte	0x4c80
 15633 4c55 3B       		.uleb128 0x3b
 15634 4c56 636D00   		.ascii	"cm\000"
 15635 4c59 01       		.byte	0x1
 15636 4c5a AD0E     		.2byte	0xead
 15637 4c5c 2E090000 		.4byte	0x92e
 15638 4c60 D4210000 		.4byte	.LLST176
 15639 4c64 3F       		.uleb128 0x3f
 15640 4c65 78410000 		.4byte	.LASF103
 15641 4c69 01       		.byte	0x1
 15642 4c6a AD0E     		.2byte	0xead
 15643 4c6c 30000000 		.4byte	0x30
 15644 4c70 01       		.uleb128 0x1
 15645 4c71 51       		.byte	0x51
 15646 4c72 54       		.uleb128 0x54
 15647 4c73 72657400 		.ascii	"ret\000"
 15648 4c77 01       		.byte	0x1
 15649 4c78 AF0E     		.2byte	0xeaf
 15650 4c7a 30000000 		.4byte	0x30
 15651 4c7e 01       		.byte	0x1
 15652 4c7f 00       		.byte	0
 15653 4c80 38       		.uleb128 0x38
 15654 4c81 C00D0000 		.4byte	.LASF1025
 15655 4c85 01       		.byte	0x1
 15656 4c86 DA0E     		.2byte	0xeda
 15657 4c88 30000000 		.4byte	0x30
 15658 4c8c 00000000 		.4byte	.LFB75
 15659 4c90 14000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 481


 15660 4c94 01       		.uleb128 0x1
 15661 4c95 9C       		.byte	0x9c
 15662 4c96 AA4C0000 		.4byte	0x4caa
 15663 4c9a 3B       		.uleb128 0x3b
 15664 4c9b 636D00   		.ascii	"cm\000"
 15665 4c9e 01       		.byte	0x1
 15666 4c9f DA0E     		.2byte	0xeda
 15667 4ca1 2E090000 		.4byte	0x92e
 15668 4ca5 F5210000 		.4byte	.LLST177
 15669 4ca9 00       		.byte	0
 15670 4caa 38       		.uleb128 0x38
 15671 4cab 84270000 		.4byte	.LASF1026
 15672 4caf 01       		.byte	0x1
 15673 4cb0 E60E     		.2byte	0xee6
 15674 4cb2 30000000 		.4byte	0x30
 15675 4cb6 00000000 		.4byte	.LFB76
 15676 4cba 08000000 		.4byte	.LFE76-.LFB76
 15677 4cbe 01       		.uleb128 0x1
 15678 4cbf 9C       		.byte	0x9c
 15679 4cc0 E14C0000 		.4byte	0x4ce1
 15680 4cc4 3B       		.uleb128 0x3b
 15681 4cc5 636D00   		.ascii	"cm\000"
 15682 4cc8 01       		.byte	0x1
 15683 4cc9 E60E     		.2byte	0xee6
 15684 4ccb 2E090000 		.4byte	0x92e
 15685 4ccf 3D220000 		.4byte	.LLST178
 15686 4cd3 54       		.uleb128 0x54
 15687 4cd4 72657400 		.ascii	"ret\000"
 15688 4cd8 01       		.byte	0x1
 15689 4cd9 E80E     		.2byte	0xee8
 15690 4cdb 30000000 		.4byte	0x30
 15691 4cdf 01       		.byte	0x1
 15692 4ce0 00       		.byte	0
 15693 4ce1 3E       		.uleb128 0x3e
 15694 4ce2 213A0000 		.4byte	.LASF1027
 15695 4ce6 01       		.byte	0x1
 15696 4ce7 4213     		.2byte	0x1342
 15697 4ce9 00000000 		.4byte	.LFB77
 15698 4ced 3E000000 		.4byte	.LFE77-.LFB77
 15699 4cf1 01       		.uleb128 0x1
 15700 4cf2 9C       		.byte	0x9c
 15701 4cf3 234D0000 		.4byte	0x4d23
 15702 4cf7 48       		.uleb128 0x48
 15703 4cf8 63747800 		.ascii	"ctx\000"
 15704 4cfc 01       		.byte	0x1
 15705 4cfd 4213     		.2byte	0x1342
 15706 4cff 11240000 		.4byte	0x2411
 15707 4d03 01       		.uleb128 0x1
 15708 4d04 50       		.byte	0x50
 15709 4d05 2E       		.uleb128 0x2e
 15710 4d06 49130000 		.4byte	.LASF1028
 15711 4d0a 01       		.byte	0x1
 15712 4d0b 4213     		.2byte	0x1342
 15713 4d0d 30000000 		.4byte	0x30
 15714 4d11 5E220000 		.4byte	.LLST179
 15715 4d15 48       		.uleb128 0x48
 15716 4d16 766300   		.ascii	"vc\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 482


 15717 4d19 01       		.byte	0x1
 15718 4d1a 4213     		.2byte	0x1342
 15719 4d1c C00A0000 		.4byte	0xac0
 15720 4d20 01       		.uleb128 0x1
 15721 4d21 52       		.byte	0x52
 15722 4d22 00       		.byte	0
 15723 4d23 3E       		.uleb128 0x3e
 15724 4d24 602A0000 		.4byte	.LASF1029
 15725 4d28 01       		.byte	0x1
 15726 4d29 5B13     		.2byte	0x135b
 15727 4d2b 00000000 		.4byte	.LFB78
 15728 4d2f 58000000 		.4byte	.LFE78-.LFB78
 15729 4d33 01       		.uleb128 0x1
 15730 4d34 9C       		.byte	0x9c
 15731 4d35 654D0000 		.4byte	0x4d65
 15732 4d39 48       		.uleb128 0x48
 15733 4d3a 73736C00 		.ascii	"ssl\000"
 15734 4d3e 01       		.byte	0x1
 15735 4d3f 5B13     		.2byte	0x135b
 15736 4d41 3B0C0000 		.4byte	0xc3b
 15737 4d45 01       		.uleb128 0x1
 15738 4d46 50       		.byte	0x50
 15739 4d47 2E       		.uleb128 0x2e
 15740 4d48 49130000 		.4byte	.LASF1028
 15741 4d4c 01       		.byte	0x1
 15742 4d4d 5B13     		.2byte	0x135b
 15743 4d4f 30000000 		.4byte	0x30
 15744 4d53 7F220000 		.4byte	.LLST180
 15745 4d57 48       		.uleb128 0x48
 15746 4d58 766300   		.ascii	"vc\000"
 15747 4d5b 01       		.byte	0x1
 15748 4d5c 5B13     		.2byte	0x135b
 15749 4d5e C00A0000 		.4byte	0xac0
 15750 4d62 01       		.uleb128 0x1
 15751 4d63 52       		.byte	0x52
 15752 4d64 00       		.byte	0
 15753 4d65 3E       		.uleb128 0x3e
 15754 4d66 17080000 		.4byte	.LASF1030
 15755 4d6a 01       		.byte	0x1
 15756 4d6b 7513     		.2byte	0x1375
 15757 4d6d 00000000 		.4byte	.LFB79
 15758 4d71 08000000 		.4byte	.LFE79-.LFB79
 15759 4d75 01       		.uleb128 0x1
 15760 4d76 9C       		.byte	0x9c
 15761 4d77 984D0000 		.4byte	0x4d98
 15762 4d7b 48       		.uleb128 0x48
 15763 4d7c 73736C00 		.ascii	"ssl\000"
 15764 4d80 01       		.byte	0x1
 15765 4d81 7513     		.2byte	0x1375
 15766 4d83 3B0C0000 		.4byte	0xc3b
 15767 4d87 01       		.uleb128 0x1
 15768 4d88 50       		.byte	0x50
 15769 4d89 48       		.uleb128 0x48
 15770 4d8a 63747800 		.ascii	"ctx\000"
 15771 4d8e 01       		.byte	0x1
 15772 4d8f 7513     		.2byte	0x1375
 15773 4d91 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 483


 15774 4d95 01       		.uleb128 0x1
 15775 4d96 51       		.byte	0x51
 15776 4d97 00       		.byte	0
 15777 4d98 3E       		.uleb128 0x3e
 15778 4d99 691B0000 		.4byte	.LASF1031
 15779 4d9d 01       		.byte	0x1
 15780 4d9e 7E13     		.2byte	0x137e
 15781 4da0 00000000 		.4byte	.LFB80
 15782 4da4 0E000000 		.4byte	.LFE80-.LFB80
 15783 4da8 01       		.uleb128 0x1
 15784 4da9 9C       		.byte	0x9c
 15785 4daa CA4D0000 		.4byte	0x4dca
 15786 4dae 48       		.uleb128 0x48
 15787 4daf 63747800 		.ascii	"ctx\000"
 15788 4db3 01       		.byte	0x1
 15789 4db4 7E13     		.2byte	0x137e
 15790 4db6 11240000 		.4byte	0x2411
 15791 4dba 01       		.uleb128 0x1
 15792 4dbb 50       		.byte	0x50
 15793 4dbc 48       		.uleb128 0x48
 15794 4dbd 636200   		.ascii	"cb\000"
 15795 4dc0 01       		.byte	0x1
 15796 4dc1 7E13     		.2byte	0x137e
 15797 4dc3 7B0C0000 		.4byte	0xc7b
 15798 4dc7 01       		.uleb128 0x1
 15799 4dc8 51       		.byte	0x51
 15800 4dc9 00       		.byte	0
 15801 4dca 55       		.uleb128 0x55
 15802 4dcb 080C0000 		.4byte	.LASF1144
 15803 4dcf 01       		.byte	0x1
 15804 4dd0 1A15     		.2byte	0x151a
 15805 4dd2 00000000 		.4byte	.LFB81
 15806 4dd6 02000000 		.4byte	.LFE81-.LFB81
 15807 4dda 01       		.uleb128 0x1
 15808 4ddb 9C       		.byte	0x9c
 15809 4ddc 38       		.uleb128 0x38
 15810 4ddd AF2B0000 		.4byte	.LASF1032
 15811 4de1 01       		.byte	0x1
 15812 4de2 1E15     		.2byte	0x151e
 15813 4de4 30000000 		.4byte	0x30
 15814 4de8 00000000 		.4byte	.LFB82
 15815 4dec 10000000 		.4byte	.LFE82-.LFB82
 15816 4df0 01       		.uleb128 0x1
 15817 4df1 9C       		.byte	0x9c
 15818 4df2 004E0000 		.4byte	0x4e00
 15819 4df6 3A       		.uleb128 0x3a
 15820 4df7 06000000 		.4byte	.LVL543
 15821 4dfb 983F0000 		.4byte	0x3f98
 15822 4dff 00       		.byte	0
 15823 4e00 38       		.uleb128 0x38
 15824 4e01 A6320000 		.4byte	.LASF1033
 15825 4e05 01       		.byte	0x1
 15826 4e06 0E17     		.2byte	0x170e
 15827 4e08 30000000 		.4byte	0x30
 15828 4e0c 00000000 		.4byte	.LFB83
 15829 4e10 36000000 		.4byte	.LFE83-.LFB83
 15830 4e14 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 484


 15831 4e15 9C       		.byte	0x9c
 15832 4e16 7B4E0000 		.4byte	0x4e7b
 15833 4e1a 3B       		.uleb128 0x3b
 15834 4e1b 63747800 		.ascii	"ctx\000"
 15835 4e1f 01       		.byte	0x1
 15836 4e20 0E17     		.2byte	0x170e
 15837 4e22 11240000 		.4byte	0x2411
 15838 4e26 A0220000 		.4byte	.LLST181
 15839 4e2a 2E       		.uleb128 0x2e
 15840 4e2b 78140000 		.4byte	.LASF1034
 15841 4e2f 01       		.byte	0x1
 15842 4e30 0E17     		.2byte	0x170e
 15843 4e32 BE000000 		.4byte	0xbe
 15844 4e36 CC220000 		.4byte	.LLST182
 15845 4e3a 32       		.uleb128 0x32
 15846 4e3b 14000000 		.4byte	.LVL546
 15847 4e3f 675B0000 		.4byte	0x5b67
 15848 4e43 4F4E0000 		.4byte	0x4e4f
 15849 4e47 33       		.uleb128 0x33
 15850 4e48 01       		.uleb128 0x1
 15851 4e49 50       		.byte	0x50
 15852 4e4a 03       		.uleb128 0x3
 15853 4e4b 0A       		.byte	0xa
 15854 4e4c 5401     		.2byte	0x154
 15855 4e4e 00       		.byte	0
 15856 4e4f 32       		.uleb128 0x32
 15857 4e50 24000000 		.4byte	.LVL547
 15858 4e54 095D0000 		.4byte	0x5d09
 15859 4e58 6A4E0000 		.4byte	0x4e6a
 15860 4e5c 33       		.uleb128 0x33
 15861 4e5d 01       		.uleb128 0x1
 15862 4e5e 52       		.byte	0x52
 15863 4e5f 03       		.uleb128 0x3
 15864 4e60 0A       		.byte	0xa
 15865 4e61 5401     		.2byte	0x154
 15866 4e63 33       		.uleb128 0x33
 15867 4e64 01       		.uleb128 0x1
 15868 4e65 51       		.byte	0x51
 15869 4e66 02       		.uleb128 0x2
 15870 4e67 75       		.byte	0x75
 15871 4e68 00       		.sleb128 0
 15872 4e69 00       		.byte	0
 15873 4e6a 34       		.uleb128 0x34
 15874 4e6b 2C000000 		.4byte	.LVL548
 15875 4e6f FD5E0000 		.4byte	0x5efd
 15876 4e73 33       		.uleb128 0x33
 15877 4e74 01       		.uleb128 0x1
 15878 4e75 51       		.byte	0x51
 15879 4e76 02       		.uleb128 0x2
 15880 4e77 76       		.byte	0x76
 15881 4e78 00       		.sleb128 0
 15882 4e79 00       		.byte	0
 15883 4e7a 00       		.byte	0
 15884 4e7b 38       		.uleb128 0x38
 15885 4e7c 4C010000 		.4byte	.LASF1035
 15886 4e80 01       		.byte	0x1
 15887 4e81 2117     		.2byte	0x1721
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 485


 15888 4e83 30000000 		.4byte	0x30
 15889 4e87 00000000 		.4byte	.LFB84
 15890 4e8b 0E000000 		.4byte	.LFE84-.LFB84
 15891 4e8f 01       		.uleb128 0x1
 15892 4e90 9C       		.byte	0x9c
 15893 4e91 C74E0000 		.4byte	0x4ec7
 15894 4e95 3B       		.uleb128 0x3b
 15895 4e96 73736C00 		.ascii	"ssl\000"
 15896 4e9a 01       		.byte	0x1
 15897 4e9b 2117     		.2byte	0x1721
 15898 4e9d 3B0C0000 		.4byte	0xc3b
 15899 4ea1 F8220000 		.4byte	.LLST183
 15900 4ea5 2E       		.uleb128 0x2e
 15901 4ea6 78140000 		.4byte	.LASF1034
 15902 4eaa 01       		.byte	0x1
 15903 4eab 2117     		.2byte	0x1721
 15904 4ead BE000000 		.4byte	0xbe
 15905 4eb1 19230000 		.4byte	.LLST184
 15906 4eb5 34       		.uleb128 0x34
 15907 4eb6 08000000 		.4byte	.LVL553
 15908 4eba FD5E0000 		.4byte	0x5efd
 15909 4ebe 33       		.uleb128 0x33
 15910 4ebf 01       		.uleb128 0x1
 15911 4ec0 51       		.byte	0x51
 15912 4ec1 03       		.uleb128 0x3
 15913 4ec2 F3       		.byte	0xf3
 15914 4ec3 01       		.uleb128 0x1
 15915 4ec4 51       		.byte	0x51
 15916 4ec5 00       		.byte	0
 15917 4ec6 00       		.byte	0
 15918 4ec7 38       		.uleb128 0x38
 15919 4ec8 86250000 		.4byte	.LASF1036
 15920 4ecc 01       		.byte	0x1
 15921 4ecd CD17     		.2byte	0x17cd
 15922 4ecf 30000000 		.4byte	0x30
 15923 4ed3 00000000 		.4byte	.LFB85
 15924 4ed7 90010000 		.4byte	.LFE85-.LFB85
 15925 4edb 01       		.uleb128 0x1
 15926 4edc 9C       		.byte	0x9c
 15927 4edd F04F0000 		.4byte	0x4ff0
 15928 4ee1 3B       		.uleb128 0x3b
 15929 4ee2 73736C00 		.ascii	"ssl\000"
 15930 4ee6 01       		.byte	0x1
 15931 4ee7 CD17     		.2byte	0x17cd
 15932 4ee9 3B0C0000 		.4byte	0xc3b
 15933 4eed 3A230000 		.4byte	.LLST185
 15934 4ef1 39       		.uleb128 0x39
 15935 4ef2 BF130000 		.4byte	.LASF1037
 15936 4ef6 01       		.byte	0x1
 15937 4ef7 CF17     		.2byte	0x17cf
 15938 4ef9 30000000 		.4byte	0x30
 15939 4efd 7F230000 		.4byte	.LLST186
 15940 4f01 49       		.uleb128 0x49
 15941 4f02 60010000 		.4byte	.LBB85
 15942 4f06 10000000 		.4byte	.LBE85-.LBB85
 15943 4f0a 2B4F0000 		.4byte	0x4f2b
 15944 4f0e 39       		.uleb128 0x39
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 486


 15945 4f0f D0370000 		.4byte	.LASF1038
 15946 4f13 01       		.byte	0x1
 15947 4f14 B518     		.2byte	0x18b5
 15948 4f16 30000000 		.4byte	0x30
 15949 4f1a B7230000 		.4byte	.LLST187
 15950 4f1e 56       		.uleb128 0x56
 15951 4f1f 66010000 		.4byte	.LVL569
 15952 4f23 33       		.uleb128 0x33
 15953 4f24 01       		.uleb128 0x1
 15954 4f25 50       		.byte	0x50
 15955 4f26 02       		.uleb128 0x2
 15956 4f27 74       		.byte	0x74
 15957 4f28 00       		.sleb128 0
 15958 4f29 00       		.byte	0
 15959 4f2a 00       		.byte	0
 15960 4f2b 32       		.uleb128 0x32
 15961 4f2c 1A000000 		.4byte	.LVL555
 15962 4f30 185F0000 		.4byte	0x5f18
 15963 4f34 3F4F0000 		.4byte	0x4f3f
 15964 4f38 33       		.uleb128 0x33
 15965 4f39 01       		.uleb128 0x1
 15966 4f3a 50       		.byte	0x50
 15967 4f3b 02       		.uleb128 0x2
 15968 4f3c 74       		.byte	0x74
 15969 4f3d 00       		.sleb128 0
 15970 4f3e 00       		.byte	0
 15971 4f3f 32       		.uleb128 0x32
 15972 4f40 54000000 		.4byte	.LVL556
 15973 4f44 2E5F0000 		.4byte	0x5f2e
 15974 4f48 534F0000 		.4byte	0x4f53
 15975 4f4c 33       		.uleb128 0x33
 15976 4f4d 01       		.uleb128 0x1
 15977 4f4e 50       		.byte	0x50
 15978 4f4f 02       		.uleb128 0x2
 15979 4f50 74       		.byte	0x74
 15980 4f51 00       		.sleb128 0
 15981 4f52 00       		.byte	0
 15982 4f53 32       		.uleb128 0x32
 15983 4f54 7E000000 		.4byte	.LVL558
 15984 4f58 445F0000 		.4byte	0x5f44
 15985 4f5c 674F0000 		.4byte	0x4f67
 15986 4f60 33       		.uleb128 0x33
 15987 4f61 01       		.uleb128 0x1
 15988 4f62 50       		.byte	0x50
 15989 4f63 02       		.uleb128 0x2
 15990 4f64 74       		.byte	0x74
 15991 4f65 00       		.sleb128 0
 15992 4f66 00       		.byte	0
 15993 4f67 32       		.uleb128 0x32
 15994 4f68 C4000000 		.4byte	.LVL563
 15995 4f6c 5A5F0000 		.4byte	0x5f5a
 15996 4f70 7B4F0000 		.4byte	0x4f7b
 15997 4f74 33       		.uleb128 0x33
 15998 4f75 01       		.uleb128 0x1
 15999 4f76 50       		.byte	0x50
 16000 4f77 02       		.uleb128 0x2
 16001 4f78 74       		.byte	0x74
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 487


 16002 4f79 00       		.sleb128 0
 16003 4f7a 00       		.byte	0
 16004 4f7b 32       		.uleb128 0x32
 16005 4f7c E4000000 		.4byte	.LVL564
 16006 4f80 705F0000 		.4byte	0x5f70
 16007 4f84 8F4F0000 		.4byte	0x4f8f
 16008 4f88 33       		.uleb128 0x33
 16009 4f89 01       		.uleb128 0x1
 16010 4f8a 50       		.byte	0x50
 16011 4f8b 02       		.uleb128 0x2
 16012 4f8c 74       		.byte	0x74
 16013 4f8d 00       		.sleb128 0
 16014 4f8e 00       		.byte	0
 16015 4f8f 32       		.uleb128 0x32
 16016 4f90 06010000 		.4byte	.LVL565
 16017 4f94 865F0000 		.4byte	0x5f86
 16018 4f98 A34F0000 		.4byte	0x4fa3
 16019 4f9c 33       		.uleb128 0x33
 16020 4f9d 01       		.uleb128 0x1
 16021 4f9e 50       		.byte	0x50
 16022 4f9f 02       		.uleb128 0x2
 16023 4fa0 74       		.byte	0x74
 16024 4fa1 00       		.sleb128 0
 16025 4fa2 00       		.byte	0
 16026 4fa3 32       		.uleb128 0x32
 16027 4fa4 18010000 		.4byte	.LVL566
 16028 4fa8 9C5F0000 		.4byte	0x5f9c
 16029 4fac B74F0000 		.4byte	0x4fb7
 16030 4fb0 33       		.uleb128 0x33
 16031 4fb1 01       		.uleb128 0x1
 16032 4fb2 50       		.byte	0x50
 16033 4fb3 02       		.uleb128 0x2
 16034 4fb4 74       		.byte	0x74
 16035 4fb5 00       		.sleb128 0
 16036 4fb6 00       		.byte	0
 16037 4fb7 32       		.uleb128 0x32
 16038 4fb8 2C010000 		.4byte	.LVL567
 16039 4fbc B25F0000 		.4byte	0x5fb2
 16040 4fc0 CB4F0000 		.4byte	0x4fcb
 16041 4fc4 33       		.uleb128 0x33
 16042 4fc5 01       		.uleb128 0x1
 16043 4fc6 50       		.byte	0x50
 16044 4fc7 02       		.uleb128 0x2
 16045 4fc8 74       		.byte	0x74
 16046 4fc9 00       		.sleb128 0
 16047 4fca 00       		.byte	0
 16048 4fcb 32       		.uleb128 0x32
 16049 4fcc 42010000 		.4byte	.LVL568
 16050 4fd0 445F0000 		.4byte	0x5f44
 16051 4fd4 DF4F0000 		.4byte	0x4fdf
 16052 4fd8 33       		.uleb128 0x33
 16053 4fd9 01       		.uleb128 0x1
 16054 4fda 50       		.byte	0x50
 16055 4fdb 02       		.uleb128 0x2
 16056 4fdc 74       		.byte	0x74
 16057 4fdd 00       		.sleb128 0
 16058 4fde 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 488


 16059 4fdf 34       		.uleb128 0x34
 16060 4fe0 7E010000 		.4byte	.LVL572
 16061 4fe4 C85F0000 		.4byte	0x5fc8
 16062 4fe8 33       		.uleb128 0x33
 16063 4fe9 01       		.uleb128 0x1
 16064 4fea 50       		.byte	0x50
 16065 4feb 02       		.uleb128 0x2
 16066 4fec 74       		.byte	0x74
 16067 4fed 00       		.sleb128 0
 16068 4fee 00       		.byte	0
 16069 4fef 00       		.byte	0
 16070 4ff0 38       		.uleb128 0x38
 16071 4ff1 A20C0000 		.4byte	.LASF1039
 16072 4ff5 01       		.byte	0x1
 16073 4ff6 8601     		.2byte	0x186
 16074 4ff8 30000000 		.4byte	0x30
 16075 4ffc 00000000 		.4byte	.LFB27
 16076 5000 18000000 		.4byte	.LFE27-.LFB27
 16077 5004 01       		.uleb128 0x1
 16078 5005 9C       		.byte	0x9c
 16079 5006 3C500000 		.4byte	0x503c
 16080 500a 3B       		.uleb128 0x3b
 16081 500b 73736C00 		.ascii	"ssl\000"
 16082 500f 01       		.byte	0x1
 16083 5010 8601     		.2byte	0x186
 16084 5012 3B0C0000 		.4byte	0xc3b
 16085 5016 CA230000 		.4byte	.LLST188
 16086 501a 3D       		.uleb128 0x3d
 16087 501b 65727200 		.ascii	"err\000"
 16088 501f 01       		.byte	0x1
 16089 5020 8801     		.2byte	0x188
 16090 5022 30000000 		.4byte	0x30
 16091 5026 04240000 		.4byte	.LLST189
 16092 502a 34       		.uleb128 0x34
 16093 502b 10000000 		.4byte	.LVL575
 16094 502f C74E0000 		.4byte	0x4ec7
 16095 5033 33       		.uleb128 0x33
 16096 5034 01       		.uleb128 0x1
 16097 5035 50       		.byte	0x50
 16098 5036 03       		.uleb128 0x3
 16099 5037 F3       		.byte	0xf3
 16100 5038 01       		.uleb128 0x1
 16101 5039 50       		.byte	0x50
 16102 503a 00       		.byte	0
 16103 503b 00       		.byte	0
 16104 503c 38       		.uleb128 0x38
 16105 503d 6F120000 		.4byte	.LASF1040
 16106 5041 01       		.byte	0x1
 16107 5042 DA07     		.2byte	0x7da
 16108 5044 30000000 		.4byte	0x30
 16109 5048 00000000 		.4byte	.LFB54
 16110 504c 20000000 		.4byte	.LFE54-.LFB54
 16111 5050 01       		.uleb128 0x1
 16112 5051 9C       		.byte	0x9c
 16113 5052 88500000 		.4byte	0x5088
 16114 5056 3B       		.uleb128 0x3b
 16115 5057 73736C00 		.ascii	"ssl\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 489


 16116 505b 01       		.byte	0x1
 16117 505c DA07     		.2byte	0x7da
 16118 505e 3B0C0000 		.4byte	0xc3b
 16119 5062 3C240000 		.4byte	.LLST190
 16120 5066 3D       		.uleb128 0x3d
 16121 5067 72657400 		.ascii	"ret\000"
 16122 506b 01       		.byte	0x1
 16123 506c DC07     		.2byte	0x7dc
 16124 506e 30000000 		.4byte	0x30
 16125 5072 6B240000 		.4byte	.LLST191
 16126 5076 34       		.uleb128 0x34
 16127 5077 18000000 		.4byte	.LVL580
 16128 507b C74E0000 		.4byte	0x4ec7
 16129 507f 33       		.uleb128 0x33
 16130 5080 01       		.uleb128 0x1
 16131 5081 50       		.byte	0x50
 16132 5082 03       		.uleb128 0x3
 16133 5083 74       		.byte	0x74
 16134 5084 F47B     		.sleb128 -524
 16135 5086 00       		.byte	0
 16136 5087 00       		.byte	0
 16137 5088 38       		.uleb128 0x38
 16138 5089 10250000 		.4byte	.LASF1041
 16139 508d 01       		.byte	0x1
 16140 508e F219     		.2byte	0x19f2
 16141 5090 30000000 		.4byte	0x30
 16142 5094 00000000 		.4byte	.LFB86
 16143 5098 12000000 		.4byte	.LFE86-.LFB86
 16144 509c 01       		.uleb128 0x1
 16145 509d 9C       		.byte	0x9c
 16146 509e CE500000 		.4byte	0x50ce
 16147 50a2 3B       		.uleb128 0x3b
 16148 50a3 73736C00 		.ascii	"ssl\000"
 16149 50a7 01       		.byte	0x1
 16150 50a8 F219     		.2byte	0x19f2
 16151 50aa 3B0C0000 		.4byte	0xc3b
 16152 50ae 7E240000 		.4byte	.LLST192
 16153 50b2 48       		.uleb128 0x48
 16154 50b3 636200   		.ascii	"cb\000"
 16155 50b6 01       		.byte	0x1
 16156 50b7 F219     		.2byte	0x19f2
 16157 50b9 660D0000 		.4byte	0xd66
 16158 50bd 01       		.uleb128 0x1
 16159 50be 51       		.byte	0x51
 16160 50bf 3F       		.uleb128 0x3f
 16161 50c0 10110000 		.4byte	.LASF1042
 16162 50c4 01       		.byte	0x1
 16163 50c5 F219     		.2byte	0x19f2
 16164 50c7 A9000000 		.4byte	0xa9
 16165 50cb 01       		.uleb128 0x1
 16166 50cc 52       		.byte	0x52
 16167 50cd 00       		.byte	0
 16168 50ce 38       		.uleb128 0x38
 16169 50cf 45290000 		.4byte	.LASF1043
 16170 50d3 01       		.byte	0x1
 16171 50d4 031A     		.2byte	0x1a03
 16172 50d6 30000000 		.4byte	0x30
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 490


 16173 50da 00000000 		.4byte	.LFB87
 16174 50de 48000000 		.4byte	.LFE87-.LFB87
 16175 50e2 01       		.uleb128 0x1
 16176 50e3 9C       		.byte	0x9c
 16177 50e4 3E510000 		.4byte	0x513e
 16178 50e8 54       		.uleb128 0x54
 16179 50e9 72657400 		.ascii	"ret\000"
 16180 50ed 01       		.byte	0x1
 16181 50ee 051A     		.2byte	0x1a05
 16182 50f0 30000000 		.4byte	0x30
 16183 50f4 01       		.byte	0x1
 16184 50f5 39       		.uleb128 0x39
 16185 50f6 D4310000 		.4byte	.LASF1044
 16186 50fa 01       		.byte	0x1
 16187 50fb 061A     		.2byte	0x1a06
 16188 50fd 30000000 		.4byte	0x30
 16189 5101 B8240000 		.4byte	.LLST193
 16190 5105 32       		.uleb128 0x32
 16191 5106 14000000 		.4byte	.LVL589
 16192 510a 3B5D0000 		.4byte	0x5d3b
 16193 510e 19510000 		.4byte	0x5119
 16194 5112 33       		.uleb128 0x33
 16195 5113 01       		.uleb128 0x1
 16196 5114 50       		.byte	0x50
 16197 5115 02       		.uleb128 0x2
 16198 5116 74       		.byte	0x74
 16199 5117 04       		.sleb128 4
 16200 5118 00       		.byte	0
 16201 5119 32       		.uleb128 0x32
 16202 511a 2E000000 		.4byte	.LVL591
 16203 511e 505D0000 		.4byte	0x5d50
 16204 5122 2D510000 		.4byte	0x512d
 16205 5126 33       		.uleb128 0x33
 16206 5127 01       		.uleb128 0x1
 16207 5128 50       		.byte	0x50
 16208 5129 02       		.uleb128 0x2
 16209 512a 74       		.byte	0x74
 16210 512b 00       		.sleb128 0
 16211 512c 00       		.byte	0
 16212 512d 34       		.uleb128 0x34
 16213 512e 38000000 		.4byte	.LVL592
 16214 5132 EE5C0000 		.4byte	0x5cee
 16215 5136 33       		.uleb128 0x33
 16216 5137 01       		.uleb128 0x1
 16217 5138 50       		.byte	0x50
 16218 5139 02       		.uleb128 0x2
 16219 513a 74       		.byte	0x74
 16220 513b 00       		.sleb128 0
 16221 513c 00       		.byte	0
 16222 513d 00       		.byte	0
 16223 513e 38       		.uleb128 0x38
 16224 513f 630A0000 		.4byte	.LASF1045
 16225 5143 01       		.byte	0x1
 16226 5144 421C     		.2byte	0x1c42
 16227 5146 77510000 		.4byte	0x5177
 16228 514a 00000000 		.4byte	.LFB88
 16229 514e 04000000 		.4byte	.LFE88-.LFB88
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 491


 16230 5152 01       		.uleb128 0x1
 16231 5153 9C       		.byte	0x9c
 16232 5154 77510000 		.4byte	0x5177
 16233 5158 3B       		.uleb128 0x3b
 16234 5159 73736C00 		.ascii	"ssl\000"
 16235 515d 01       		.byte	0x1
 16236 515e 421C     		.2byte	0x1c42
 16237 5160 3B0C0000 		.4byte	0xc3b
 16238 5164 EA240000 		.4byte	.LLST194
 16239 5168 3F       		.uleb128 0x3f
 16240 5169 4B400000 		.4byte	.LASF108
 16241 516d 01       		.byte	0x1
 16242 516e 421C     		.2byte	0x1c42
 16243 5170 63130000 		.4byte	0x1363
 16244 5174 01       		.uleb128 0x1
 16245 5175 51       		.byte	0x51
 16246 5176 00       		.byte	0
 16247 5177 06       		.uleb128 0x6
 16248 5178 04       		.byte	0x4
 16249 5179 1E040000 		.4byte	0x41e
 16250 517d 38       		.uleb128 0x38
 16251 517e A9340000 		.4byte	.LASF1046
 16252 5182 01       		.byte	0x1
 16253 5183 4F1C     		.2byte	0x1c4f
 16254 5185 30000000 		.4byte	0x30
 16255 5189 00000000 		.4byte	.LFB89
 16256 518d 3C000000 		.4byte	.LFE89-.LFB89
 16257 5191 01       		.uleb128 0x1
 16258 5192 9C       		.byte	0x9c
 16259 5193 0A520000 		.4byte	0x520a
 16260 5197 3B       		.uleb128 0x3b
 16261 5198 73736C00 		.ascii	"ssl\000"
 16262 519c 01       		.byte	0x1
 16263 519d 4F1C     		.2byte	0x1c4f
 16264 519f 3B0C0000 		.4byte	0xc3b
 16265 51a3 0B250000 		.4byte	.LLST195
 16266 51a7 3B       		.uleb128 0x3b
 16267 51a8 646E00   		.ascii	"dn\000"
 16268 51ab 01       		.byte	0x1
 16269 51ac 4F1C     		.2byte	0x1c4f
 16270 51ae BE000000 		.4byte	0xbe
 16271 51b2 45250000 		.4byte	.LLST196
 16272 51b6 49       		.uleb128 0x49
 16273 51b7 0C000000 		.4byte	.LBB86
 16274 51bb 04000000 		.4byte	.LBE86-.LBB86
 16275 51bf DC510000 		.4byte	0x51dc
 16276 51c3 3D       		.uleb128 0x3d
 16277 51c4 787000   		.ascii	"xp\000"
 16278 51c7 01       		.byte	0x1
 16279 51c8 531C     		.2byte	0x1c53
 16280 51ca A9000000 		.4byte	0xa9
 16281 51ce 71250000 		.4byte	.LLST197
 16282 51d2 3A       		.uleb128 0x3a
 16283 51d3 10000000 		.4byte	.LVL599
 16284 51d7 BB5C0000 		.4byte	0x5cbb
 16285 51db 00       		.byte	0
 16286 51dc 32       		.uleb128 0x32
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 492


 16287 51dd 16000000 		.4byte	.LVL600
 16288 51e1 215B0000 		.4byte	0x5b21
 16289 51e5 F0510000 		.4byte	0x51f0
 16290 51e9 33       		.uleb128 0x33
 16291 51ea 01       		.uleb128 0x1
 16292 51eb 50       		.byte	0x50
 16293 51ec 02       		.uleb128 0x2
 16294 51ed 75       		.byte	0x75
 16295 51ee 00       		.sleb128 0
 16296 51ef 00       		.byte	0
 16297 51f0 3A       		.uleb128 0x3a
 16298 51f1 1E000000 		.4byte	.LVL601
 16299 51f5 675B0000 		.4byte	0x5b67
 16300 51f9 34       		.uleb128 0x34
 16301 51fa 2C000000 		.4byte	.LVL602
 16302 51fe C15B0000 		.4byte	0x5bc1
 16303 5202 33       		.uleb128 0x33
 16304 5203 01       		.uleb128 0x1
 16305 5204 51       		.byte	0x51
 16306 5205 02       		.uleb128 0x2
 16307 5206 75       		.byte	0x75
 16308 5207 00       		.sleb128 0
 16309 5208 00       		.byte	0
 16310 5209 00       		.byte	0
 16311 520a 38       		.uleb128 0x38
 16312 520b FF1F0000 		.4byte	.LASF1047
 16313 520f 01       		.byte	0x1
 16314 5210 681C     		.2byte	0x1c68
 16315 5212 30000000 		.4byte	0x30
 16316 5216 00000000 		.4byte	.LFB90
 16317 521a 06000000 		.4byte	.LFE90-.LFB90
 16318 521e 01       		.uleb128 0x1
 16319 521f 9C       		.byte	0x9c
 16320 5220 35520000 		.4byte	0x5235
 16321 5224 3B       		.uleb128 0x3b
 16322 5225 73736C00 		.ascii	"ssl\000"
 16323 5229 01       		.byte	0x1
 16324 522a 681C     		.2byte	0x1c68
 16325 522c 3B0C0000 		.4byte	0xc3b
 16326 5230 84250000 		.4byte	.LLST198
 16327 5234 00       		.byte	0
 16328 5235 57       		.uleb128 0x57
 16329 5236 D62A0000 		.4byte	0x2ad6
 16330 523a 00000000 		.4byte	.LFB91
 16331 523e 68000000 		.4byte	.LFE91-.LFB91
 16332 5242 01       		.uleb128 0x1
 16333 5243 9C       		.byte	0x9c
 16334 5244 68530000 		.4byte	0x5368
 16335 5248 43       		.uleb128 0x43
 16336 5249 E72A0000 		.4byte	0x2ae7
 16337 524d A5250000 		.4byte	.LLST199
 16338 5251 43       		.uleb128 0x43
 16339 5252 F32A0000 		.4byte	0x2af3
 16340 5256 E7250000 		.4byte	.LLST200
 16341 525a 43       		.uleb128 0x43
 16342 525b FE2A0000 		.4byte	0x2afe
 16343 525f 1D260000 		.4byte	.LLST201
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 493


 16344 5263 43       		.uleb128 0x43
 16345 5264 092B0000 		.4byte	0x2b09
 16346 5268 5F260000 		.4byte	.LLST202
 16347 526c 49       		.uleb128 0x49
 16348 526d 14000000 		.4byte	.LBB92
 16349 5271 3E000000 		.4byte	.LBE92-.LBB92
 16350 5275 35530000 		.4byte	0x5335
 16351 5279 58       		.uleb128 0x58
 16352 527a 092B0000 		.4byte	0x2b09
 16353 527e 58       		.uleb128 0x58
 16354 527f FE2A0000 		.4byte	0x2afe
 16355 5283 58       		.uleb128 0x58
 16356 5284 F32A0000 		.4byte	0x2af3
 16357 5288 58       		.uleb128 0x58
 16358 5289 E72A0000 		.4byte	0x2ae7
 16359 528d 41       		.uleb128 0x41
 16360 528e 702B0000 		.4byte	0x2b70
 16361 5292 14000000 		.4byte	.LBB93
 16362 5296 3E000000 		.4byte	.LBE93-.LBB93
 16363 529a 01       		.byte	0x1
 16364 529b E31D     		.2byte	0x1de3
 16365 529d 58       		.uleb128 0x58
 16366 529e B02B0000 		.4byte	0x2bb0
 16367 52a2 58       		.uleb128 0x58
 16368 52a3 BC2B0000 		.4byte	0x2bbc
 16369 52a7 58       		.uleb128 0x58
 16370 52a8 A42B0000 		.4byte	0x2ba4
 16371 52ac 58       		.uleb128 0x58
 16372 52ad 992B0000 		.4byte	0x2b99
 16373 52b1 58       		.uleb128 0x58
 16374 52b2 8D2B0000 		.4byte	0x2b8d
 16375 52b6 58       		.uleb128 0x58
 16376 52b7 812B0000 		.4byte	0x2b81
 16377 52bb 44       		.uleb128 0x44
 16378 52bc 14000000 		.4byte	.LBB94
 16379 52c0 3E000000 		.4byte	.LBE94-.LBB94
 16380 52c4 45       		.uleb128 0x45
 16381 52c5 C82B0000 		.4byte	0x2bc8
 16382 52c9 99260000 		.4byte	.LLST203
 16383 52cd 45       		.uleb128 0x45
 16384 52ce D42B0000 		.4byte	0x2bd4
 16385 52d2 AC260000 		.4byte	.LLST204
 16386 52d6 45       		.uleb128 0x45
 16387 52d7 E02B0000 		.4byte	0x2be0
 16388 52db D5260000 		.4byte	.LLST205
 16389 52df 44       		.uleb128 0x44
 16390 52e0 18000000 		.4byte	.LBB95
 16391 52e4 30000000 		.4byte	.LBE95-.LBB95
 16392 52e8 59       		.uleb128 0x59
 16393 52e9 ED2B0000 		.4byte	0x2bed
 16394 52ed 02       		.uleb128 0x2
 16395 52ee 91       		.byte	0x91
 16396 52ef 64       		.sleb128 -28
 16397 52f0 34       		.uleb128 0x34
 16398 52f1 36000000 		.4byte	.LVL612
 16399 52f5 E0440000 		.4byte	0x44e0
 16400 52f9 33       		.uleb128 0x33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 494


 16401 52fa 01       		.uleb128 0x1
 16402 52fb 53       		.byte	0x53
 16403 52fc 01       		.uleb128 0x1
 16404 52fd 31       		.byte	0x31
 16405 52fe 33       		.uleb128 0x33
 16406 52ff 01       		.uleb128 0x1
 16407 5300 52       		.byte	0x52
 16408 5301 05       		.uleb128 0x5
 16409 5302 76       		.byte	0x76
 16410 5303 00       		.sleb128 0
 16411 5304 75       		.byte	0x75
 16412 5305 00       		.sleb128 0
 16413 5306 1C       		.byte	0x1c
 16414 5307 33       		.uleb128 0x33
 16415 5308 01       		.uleb128 0x1
 16416 5309 51       		.byte	0x51
 16417 530a 06       		.uleb128 0x6
 16418 530b 91       		.byte	0x91
 16419 530c 5C       		.sleb128 -36
 16420 530d 06       		.byte	0x6
 16421 530e 75       		.byte	0x75
 16422 530f 00       		.sleb128 0
 16423 5310 22       		.byte	0x22
 16424 5311 33       		.uleb128 0x33
 16425 5312 01       		.uleb128 0x1
 16426 5313 50       		.byte	0x50
 16427 5314 02       		.uleb128 0x2
 16428 5315 77       		.byte	0x77
 16429 5316 00       		.sleb128 0
 16430 5317 33       		.uleb128 0x33
 16431 5318 02       		.uleb128 0x2
 16432 5319 7D       		.byte	0x7d
 16433 531a 0C       		.sleb128 12
 16434 531b 01       		.uleb128 0x1
 16435 531c 30       		.byte	0x30
 16436 531d 33       		.uleb128 0x33
 16437 531e 02       		.uleb128 0x2
 16438 531f 7D       		.byte	0x7d
 16439 5320 08       		.sleb128 8
 16440 5321 02       		.uleb128 0x2
 16441 5322 91       		.byte	0x91
 16442 5323 64       		.sleb128 -28
 16443 5324 33       		.uleb128 0x33
 16444 5325 02       		.uleb128 0x2
 16445 5326 7D       		.byte	0x7d
 16446 5327 04       		.sleb128 4
 16447 5328 01       		.uleb128 0x1
 16448 5329 30       		.byte	0x30
 16449 532a 33       		.uleb128 0x33
 16450 532b 02       		.uleb128 0x2
 16451 532c 7D       		.byte	0x7d
 16452 532d 00       		.sleb128 0
 16453 532e 01       		.uleb128 0x1
 16454 532f 34       		.byte	0x34
 16455 5330 00       		.byte	0
 16456 5331 00       		.byte	0
 16457 5332 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 495


 16458 5333 00       		.byte	0
 16459 5334 00       		.byte	0
 16460 5335 34       		.uleb128 0x34
 16461 5336 64000000 		.4byte	.LVL620
 16462 533a E0440000 		.4byte	0x44e0
 16463 533e 33       		.uleb128 0x33
 16464 533f 01       		.uleb128 0x1
 16465 5340 52       		.byte	0x52
 16466 5341 02       		.uleb128 0x2
 16467 5342 76       		.byte	0x76
 16468 5343 00       		.sleb128 0
 16469 5344 33       		.uleb128 0x33
 16470 5345 01       		.uleb128 0x1
 16471 5346 51       		.byte	0x51
 16472 5347 03       		.uleb128 0x3
 16473 5348 91       		.byte	0x91
 16474 5349 5C       		.sleb128 -36
 16475 534a 06       		.byte	0x6
 16476 534b 33       		.uleb128 0x33
 16477 534c 02       		.uleb128 0x2
 16478 534d 7D       		.byte	0x7d
 16479 534e 0C       		.sleb128 12
 16480 534f 02       		.uleb128 0x2
 16481 5350 74       		.byte	0x74
 16482 5351 00       		.sleb128 0
 16483 5352 33       		.uleb128 0x33
 16484 5353 02       		.uleb128 0x2
 16485 5354 7D       		.byte	0x7d
 16486 5355 08       		.sleb128 8
 16487 5356 02       		.uleb128 0x2
 16488 5357 74       		.byte	0x74
 16489 5358 00       		.sleb128 0
 16490 5359 33       		.uleb128 0x33
 16491 535a 02       		.uleb128 0x2
 16492 535b 7D       		.byte	0x7d
 16493 535c 04       		.sleb128 4
 16494 535d 02       		.uleb128 0x2
 16495 535e 74       		.byte	0x74
 16496 535f 00       		.sleb128 0
 16497 5360 33       		.uleb128 0x33
 16498 5361 02       		.uleb128 0x2
 16499 5362 7D       		.byte	0x7d
 16500 5363 00       		.sleb128 0
 16501 5364 01       		.uleb128 0x1
 16502 5365 34       		.byte	0x34
 16503 5366 00       		.byte	0
 16504 5367 00       		.byte	0
 16505 5368 38       		.uleb128 0x38
 16506 5369 B7010000 		.4byte	.LASF1048
 16507 536d 01       		.byte	0x1
 16508 536e 030E     		.2byte	0xe03
 16509 5370 30000000 		.4byte	0x30
 16510 5374 00000000 		.4byte	.LFB70
 16511 5378 44000000 		.4byte	.LFE70-.LFB70
 16512 537c 01       		.uleb128 0x1
 16513 537d 9C       		.byte	0x9c
 16514 537e 47540000 		.4byte	0x5447
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 496


 16515 5382 3B       		.uleb128 0x3b
 16516 5383 636D00   		.ascii	"cm\000"
 16517 5386 01       		.byte	0x1
 16518 5387 030E     		.2byte	0xe03
 16519 5389 2E090000 		.4byte	0x92e
 16520 538d E8260000 		.4byte	.LLST206
 16521 5391 3B       		.uleb128 0x3b
 16522 5392 696E00   		.ascii	"in\000"
 16523 5395 01       		.byte	0x1
 16524 5396 040E     		.2byte	0xe04
 16525 5398 210D0000 		.4byte	0xd21
 16526 539c 2D270000 		.4byte	.LLST207
 16527 53a0 3B       		.uleb128 0x3b
 16528 53a1 737A00   		.ascii	"sz\000"
 16529 53a4 01       		.byte	0x1
 16530 53a5 040E     		.2byte	0xe04
 16531 53a7 8D000000 		.4byte	0x8d
 16532 53ab 72270000 		.4byte	.LLST208
 16533 53af 2E       		.uleb128 0x2e
 16534 53b0 6F280000 		.4byte	.LASF918
 16535 53b4 01       		.byte	0x1
 16536 53b5 040E     		.2byte	0xe04
 16537 53b7 30000000 		.4byte	0x30
 16538 53bb B7270000 		.4byte	.LLST209
 16539 53bf 3D       		.uleb128 0x3d
 16540 53c0 72657400 		.ascii	"ret\000"
 16541 53c4 01       		.byte	0x1
 16542 53c5 060E     		.2byte	0xe06
 16543 53c7 30000000 		.4byte	0x30
 16544 53cb FD270000 		.4byte	.LLST210
 16545 53cf 3D       		.uleb128 0x3d
 16546 53d0 746D7000 		.ascii	"tmp\000"
 16547 53d4 01       		.byte	0x1
 16548 53d5 070E     		.2byte	0xe07
 16549 53d7 11240000 		.4byte	0x2411
 16550 53db 28280000 		.4byte	.LLST211
 16551 53df 46       		.uleb128 0x46
 16552 53e0 162B0000 		.4byte	0x2b16
 16553 53e4 14000000 		.4byte	.LBB96
 16554 53e8 04000000 		.4byte	.LBE96-.LBB96
 16555 53ec 01       		.byte	0x1
 16556 53ed 0F0E     		.2byte	0xe0f
 16557 53ef FD530000 		.4byte	0x53fd
 16558 53f3 3A       		.uleb128 0x3a
 16559 53f4 18000000 		.4byte	.LVL626
 16560 53f8 DA5F0000 		.4byte	0x5fda
 16561 53fc 00       		.byte	0
 16562 53fd 3A       		.uleb128 0x3a
 16563 53fe 1C000000 		.4byte	.LVL627
 16564 5402 F43F0000 		.4byte	0x3ff4
 16565 5406 3A       		.uleb128 0x3a
 16566 5407 26000000 		.4byte	.LVL630
 16567 540b 5A380000 		.4byte	0x385a
 16568 540f 32       		.uleb128 0x32
 16569 5410 34000000 		.4byte	.LVL631
 16570 5414 D62A0000 		.4byte	0x2ad6
 16571 5418 36540000 		.4byte	0x5436
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 497


 16572 541c 33       		.uleb128 0x33
 16573 541d 01       		.uleb128 0x1
 16574 541e 53       		.byte	0x53
 16575 541f 03       		.uleb128 0x3
 16576 5420 91       		.byte	0x91
 16577 5421 64       		.sleb128 -28
 16578 5422 06       		.byte	0x6
 16579 5423 33       		.uleb128 0x33
 16580 5424 01       		.uleb128 0x1
 16581 5425 52       		.byte	0x52
 16582 5426 02       		.uleb128 0x2
 16583 5427 76       		.byte	0x76
 16584 5428 00       		.sleb128 0
 16585 5429 33       		.uleb128 0x33
 16586 542a 01       		.uleb128 0x1
 16587 542b 51       		.byte	0x51
 16588 542c 02       		.uleb128 0x2
 16589 542d 77       		.byte	0x77
 16590 542e 00       		.sleb128 0
 16591 542f 33       		.uleb128 0x33
 16592 5430 01       		.uleb128 0x1
 16593 5431 50       		.byte	0x50
 16594 5432 02       		.uleb128 0x2
 16595 5433 74       		.byte	0x74
 16596 5434 00       		.sleb128 0
 16597 5435 00       		.byte	0
 16598 5436 34       		.uleb128 0x34
 16599 5437 40000000 		.4byte	.LVL634
 16600 543b A82C0000 		.4byte	0x2ca8
 16601 543f 33       		.uleb128 0x33
 16602 5440 01       		.uleb128 0x1
 16603 5441 50       		.byte	0x50
 16604 5442 02       		.uleb128 0x2
 16605 5443 74       		.byte	0x74
 16606 5444 00       		.sleb128 0
 16607 5445 00       		.byte	0
 16608 5446 00       		.byte	0
 16609 5447 38       		.uleb128 0x38
 16610 5448 7F200000 		.4byte	.LASF1049
 16611 544c 01       		.byte	0x1
 16612 544d FF1D     		.2byte	0x1dff
 16613 544f 30000000 		.4byte	0x30
 16614 5453 00000000 		.4byte	.LFB92
 16615 5457 14000000 		.4byte	.LFE92-.LFB92
 16616 545b 01       		.uleb128 0x1
 16617 545c 9C       		.byte	0x9c
 16618 545d E2540000 		.4byte	0x54e2
 16619 5461 3B       		.uleb128 0x3b
 16620 5462 63747800 		.ascii	"ctx\000"
 16621 5466 01       		.byte	0x1
 16622 5467 FF1D     		.2byte	0x1dff
 16623 5469 11240000 		.4byte	0x2411
 16624 546d 46280000 		.4byte	.LLST212
 16625 5471 3B       		.uleb128 0x3b
 16626 5472 696E00   		.ascii	"in\000"
 16627 5475 01       		.byte	0x1
 16628 5476 001E     		.2byte	0x1e00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 498


 16629 5478 210D0000 		.4byte	0xd21
 16630 547c 67280000 		.4byte	.LLST213
 16631 5480 3B       		.uleb128 0x3b
 16632 5481 737A00   		.ascii	"sz\000"
 16633 5484 01       		.byte	0x1
 16634 5485 001E     		.2byte	0x1e00
 16635 5487 8D000000 		.4byte	0x8d
 16636 548b 88280000 		.4byte	.LLST214
 16637 548f 2E       		.uleb128 0x2e
 16638 5490 6F280000 		.4byte	.LASF918
 16639 5494 01       		.byte	0x1
 16640 5495 001E     		.2byte	0x1e00
 16641 5497 30000000 		.4byte	0x30
 16642 549b A9280000 		.4byte	.LLST215
 16643 549f 34       		.uleb128 0x34
 16644 54a0 10000000 		.4byte	.LVL637
 16645 54a4 E0440000 		.4byte	0x44e0
 16646 54a8 33       		.uleb128 0x33
 16647 54a9 01       		.uleb128 0x1
 16648 54aa 53       		.byte	0x53
 16649 54ab 03       		.uleb128 0x3
 16650 54ac F3       		.byte	0xf3
 16651 54ad 01       		.uleb128 0x1
 16652 54ae 53       		.byte	0x53
 16653 54af 33       		.uleb128 0x33
 16654 54b0 01       		.uleb128 0x1
 16655 54b1 52       		.byte	0x52
 16656 54b2 03       		.uleb128 0x3
 16657 54b3 F3       		.byte	0xf3
 16658 54b4 01       		.uleb128 0x1
 16659 54b5 52       		.byte	0x52
 16660 54b6 33       		.uleb128 0x33
 16661 54b7 01       		.uleb128 0x1
 16662 54b8 51       		.byte	0x51
 16663 54b9 03       		.uleb128 0x3
 16664 54ba F3       		.byte	0xf3
 16665 54bb 01       		.uleb128 0x1
 16666 54bc 51       		.byte	0x51
 16667 54bd 33       		.uleb128 0x33
 16668 54be 01       		.uleb128 0x1
 16669 54bf 50       		.byte	0x50
 16670 54c0 03       		.uleb128 0x3
 16671 54c1 F3       		.byte	0xf3
 16672 54c2 01       		.uleb128 0x1
 16673 54c3 50       		.byte	0x50
 16674 54c4 33       		.uleb128 0x33
 16675 54c5 02       		.uleb128 0x2
 16676 54c6 7D       		.byte	0x7d
 16677 54c7 0C       		.sleb128 12
 16678 54c8 02       		.uleb128 0x2
 16679 54c9 74       		.byte	0x74
 16680 54ca 00       		.sleb128 0
 16681 54cb 33       		.uleb128 0x33
 16682 54cc 02       		.uleb128 0x2
 16683 54cd 7D       		.byte	0x7d
 16684 54ce 08       		.sleb128 8
 16685 54cf 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 499


 16686 54d0 74       		.byte	0x74
 16687 54d1 00       		.sleb128 0
 16688 54d2 33       		.uleb128 0x33
 16689 54d3 02       		.uleb128 0x2
 16690 54d4 7D       		.byte	0x7d
 16691 54d5 04       		.sleb128 4
 16692 54d6 02       		.uleb128 0x2
 16693 54d7 74       		.byte	0x74
 16694 54d8 00       		.sleb128 0
 16695 54d9 33       		.uleb128 0x33
 16696 54da 02       		.uleb128 0x2
 16697 54db 7D       		.byte	0x7d
 16698 54dc 00       		.sleb128 0
 16699 54dd 02       		.uleb128 0x2
 16700 54de 74       		.byte	0x74
 16701 54df 00       		.sleb128 0
 16702 54e0 00       		.byte	0
 16703 54e1 00       		.byte	0
 16704 54e2 38       		.uleb128 0x38
 16705 54e3 7E130000 		.4byte	.LASF1050
 16706 54e7 01       		.byte	0x1
 16707 54e8 071E     		.2byte	0x1e07
 16708 54ea 30000000 		.4byte	0x30
 16709 54ee 00000000 		.4byte	.LFB93
 16710 54f2 16000000 		.4byte	.LFE93-.LFB93
 16711 54f6 01       		.uleb128 0x1
 16712 54f7 9C       		.byte	0x9c
 16713 54f8 7C550000 		.4byte	0x557c
 16714 54fc 3B       		.uleb128 0x3b
 16715 54fd 63747800 		.ascii	"ctx\000"
 16716 5501 01       		.byte	0x1
 16717 5502 071E     		.2byte	0x1e07
 16718 5504 11240000 		.4byte	0x2411
 16719 5508 CA280000 		.4byte	.LLST216
 16720 550c 3B       		.uleb128 0x3b
 16721 550d 696E00   		.ascii	"in\000"
 16722 5510 01       		.byte	0x1
 16723 5511 081E     		.2byte	0x1e08
 16724 5513 210D0000 		.4byte	0xd21
 16725 5517 EB280000 		.4byte	.LLST217
 16726 551b 3B       		.uleb128 0x3b
 16727 551c 737A00   		.ascii	"sz\000"
 16728 551f 01       		.byte	0x1
 16729 5520 081E     		.2byte	0x1e08
 16730 5522 8D000000 		.4byte	0x8d
 16731 5526 0C290000 		.4byte	.LLST218
 16732 552a 2E       		.uleb128 0x2e
 16733 552b 6F280000 		.4byte	.LASF918
 16734 552f 01       		.byte	0x1
 16735 5530 081E     		.2byte	0x1e08
 16736 5532 30000000 		.4byte	0x30
 16737 5536 2D290000 		.4byte	.LLST219
 16738 553a 34       		.uleb128 0x34
 16739 553b 12000000 		.4byte	.LVL639
 16740 553f E0440000 		.4byte	0x44e0
 16741 5543 33       		.uleb128 0x33
 16742 5544 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 500


 16743 5545 53       		.byte	0x53
 16744 5546 03       		.uleb128 0x3
 16745 5547 F3       		.byte	0xf3
 16746 5548 01       		.uleb128 0x1
 16747 5549 53       		.byte	0x53
 16748 554a 33       		.uleb128 0x33
 16749 554b 01       		.uleb128 0x1
 16750 554c 52       		.byte	0x52
 16751 554d 03       		.uleb128 0x3
 16752 554e F3       		.byte	0xf3
 16753 554f 01       		.uleb128 0x1
 16754 5550 52       		.byte	0x52
 16755 5551 33       		.uleb128 0x33
 16756 5552 01       		.uleb128 0x1
 16757 5553 51       		.byte	0x51
 16758 5554 03       		.uleb128 0x3
 16759 5555 F3       		.byte	0xf3
 16760 5556 01       		.uleb128 0x1
 16761 5557 51       		.byte	0x51
 16762 5558 33       		.uleb128 0x33
 16763 5559 01       		.uleb128 0x1
 16764 555a 50       		.byte	0x50
 16765 555b 03       		.uleb128 0x3
 16766 555c F3       		.byte	0xf3
 16767 555d 01       		.uleb128 0x1
 16768 555e 50       		.byte	0x50
 16769 555f 33       		.uleb128 0x33
 16770 5560 02       		.uleb128 0x2
 16771 5561 7D       		.byte	0x7d
 16772 5562 0C       		.sleb128 12
 16773 5563 02       		.uleb128 0x2
 16774 5564 74       		.byte	0x74
 16775 5565 00       		.sleb128 0
 16776 5566 33       		.uleb128 0x33
 16777 5567 02       		.uleb128 0x2
 16778 5568 7D       		.byte	0x7d
 16779 5569 08       		.sleb128 8
 16780 556a 02       		.uleb128 0x2
 16781 556b 74       		.byte	0x74
 16782 556c 00       		.sleb128 0
 16783 556d 33       		.uleb128 0x33
 16784 556e 02       		.uleb128 0x2
 16785 556f 7D       		.byte	0x7d
 16786 5570 04       		.sleb128 4
 16787 5571 02       		.uleb128 0x2
 16788 5572 74       		.byte	0x74
 16789 5573 00       		.sleb128 0
 16790 5574 33       		.uleb128 0x33
 16791 5575 02       		.uleb128 0x2
 16792 5576 7D       		.byte	0x7d
 16793 5577 00       		.sleb128 0
 16794 5578 01       		.uleb128 0x1
 16795 5579 31       		.byte	0x31
 16796 557a 00       		.byte	0
 16797 557b 00       		.byte	0
 16798 557c 38       		.uleb128 0x38
 16799 557d 77030000 		.4byte	.LASF1051
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 501


 16800 5581 01       		.byte	0x1
 16801 5582 0F1E     		.2byte	0x1e0f
 16802 5584 30000000 		.4byte	0x30
 16803 5588 00000000 		.4byte	.LFB94
 16804 558c 16000000 		.4byte	.LFE94-.LFB94
 16805 5590 01       		.uleb128 0x1
 16806 5591 9C       		.byte	0x9c
 16807 5592 01560000 		.4byte	0x5601
 16808 5596 3B       		.uleb128 0x3b
 16809 5597 63747800 		.ascii	"ctx\000"
 16810 559b 01       		.byte	0x1
 16811 559c 0F1E     		.2byte	0x1e0f
 16812 559e 11240000 		.4byte	0x2411
 16813 55a2 4E290000 		.4byte	.LLST220
 16814 55a6 3B       		.uleb128 0x3b
 16815 55a7 696E00   		.ascii	"in\000"
 16816 55aa 01       		.byte	0x1
 16817 55ab 101E     		.2byte	0x1e10
 16818 55ad 210D0000 		.4byte	0xd21
 16819 55b1 6F290000 		.4byte	.LLST221
 16820 55b5 3B       		.uleb128 0x3b
 16821 55b6 737A00   		.ascii	"sz\000"
 16822 55b9 01       		.byte	0x1
 16823 55ba 101E     		.2byte	0x1e10
 16824 55bc 8D000000 		.4byte	0x8d
 16825 55c0 90290000 		.4byte	.LLST222
 16826 55c4 34       		.uleb128 0x34
 16827 55c5 12000000 		.4byte	.LVL641
 16828 55c9 E0440000 		.4byte	0x44e0
 16829 55cd 33       		.uleb128 0x33
 16830 55ce 01       		.uleb128 0x1
 16831 55cf 53       		.byte	0x53
 16832 55d0 01       		.uleb128 0x1
 16833 55d1 31       		.byte	0x31
 16834 55d2 33       		.uleb128 0x33
 16835 55d3 01       		.uleb128 0x1
 16836 55d4 52       		.byte	0x52
 16837 55d5 03       		.uleb128 0x3
 16838 55d6 F3       		.byte	0xf3
 16839 55d7 01       		.uleb128 0x1
 16840 55d8 52       		.byte	0x52
 16841 55d9 33       		.uleb128 0x33
 16842 55da 01       		.uleb128 0x1
 16843 55db 51       		.byte	0x51
 16844 55dc 03       		.uleb128 0x3
 16845 55dd F3       		.byte	0xf3
 16846 55de 01       		.uleb128 0x1
 16847 55df 51       		.byte	0x51
 16848 55e0 33       		.uleb128 0x33
 16849 55e1 01       		.uleb128 0x1
 16850 55e2 50       		.byte	0x50
 16851 55e3 03       		.uleb128 0x3
 16852 55e4 F3       		.byte	0xf3
 16853 55e5 01       		.uleb128 0x1
 16854 55e6 50       		.byte	0x50
 16855 55e7 33       		.uleb128 0x33
 16856 55e8 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 502


 16857 55e9 7D       		.byte	0x7d
 16858 55ea 0C       		.sleb128 12
 16859 55eb 01       		.uleb128 0x1
 16860 55ec 31       		.byte	0x31
 16861 55ed 33       		.uleb128 0x33
 16862 55ee 02       		.uleb128 0x2
 16863 55ef 7D       		.byte	0x7d
 16864 55f0 08       		.sleb128 8
 16865 55f1 01       		.uleb128 0x1
 16866 55f2 30       		.byte	0x30
 16867 55f3 33       		.uleb128 0x33
 16868 55f4 02       		.uleb128 0x2
 16869 55f5 7D       		.byte	0x7d
 16870 55f6 04       		.sleb128 4
 16871 55f7 01       		.uleb128 0x1
 16872 55f8 30       		.byte	0x30
 16873 55f9 33       		.uleb128 0x33
 16874 55fa 02       		.uleb128 0x2
 16875 55fb 7D       		.byte	0x7d
 16876 55fc 00       		.sleb128 0
 16877 55fd 01       		.uleb128 0x1
 16878 55fe 30       		.byte	0x30
 16879 55ff 00       		.byte	0
 16880 5600 00       		.byte	0
 16881 5601 38       		.uleb128 0x38
 16882 5602 C9240000 		.4byte	.LASF1052
 16883 5606 01       		.byte	0x1
 16884 5607 731E     		.2byte	0x1e73
 16885 5609 30000000 		.4byte	0x30
 16886 560d 00000000 		.4byte	.LFB95
 16887 5611 16000000 		.4byte	.LFE95-.LFB95
 16888 5615 01       		.uleb128 0x1
 16889 5616 9C       		.byte	0x9c
 16890 5617 96560000 		.4byte	0x5696
 16891 561b 3B       		.uleb128 0x3b
 16892 561c 73736C00 		.ascii	"ssl\000"
 16893 5620 01       		.byte	0x1
 16894 5621 731E     		.2byte	0x1e73
 16895 5623 3B0C0000 		.4byte	0xc3b
 16896 5627 B1290000 		.4byte	.LLST223
 16897 562b 3B       		.uleb128 0x3b
 16898 562c 696E00   		.ascii	"in\000"
 16899 562f 01       		.byte	0x1
 16900 5630 741E     		.2byte	0x1e74
 16901 5632 210D0000 		.4byte	0xd21
 16902 5636 DE290000 		.4byte	.LLST224
 16903 563a 3B       		.uleb128 0x3b
 16904 563b 737A00   		.ascii	"sz\000"
 16905 563e 01       		.byte	0x1
 16906 563f 741E     		.2byte	0x1e74
 16907 5641 8D000000 		.4byte	0x8d
 16908 5645 FF290000 		.4byte	.LLST225
 16909 5649 2E       		.uleb128 0x2e
 16910 564a 6F280000 		.4byte	.LASF918
 16911 564e 01       		.byte	0x1
 16912 564f 741E     		.2byte	0x1e74
 16913 5651 30000000 		.4byte	0x30
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 503


 16914 5655 202A0000 		.4byte	.LLST226
 16915 5659 34       		.uleb128 0x34
 16916 565a 12000000 		.4byte	.LVL644
 16917 565e E0440000 		.4byte	0x44e0
 16918 5662 33       		.uleb128 0x33
 16919 5663 01       		.uleb128 0x1
 16920 5664 53       		.byte	0x53
 16921 5665 03       		.uleb128 0x3
 16922 5666 F3       		.byte	0xf3
 16923 5667 01       		.uleb128 0x1
 16924 5668 53       		.byte	0x53
 16925 5669 33       		.uleb128 0x33
 16926 566a 01       		.uleb128 0x1
 16927 566b 52       		.byte	0x52
 16928 566c 03       		.uleb128 0x3
 16929 566d F3       		.byte	0xf3
 16930 566e 01       		.uleb128 0x1
 16931 566f 52       		.byte	0x52
 16932 5670 33       		.uleb128 0x33
 16933 5671 01       		.uleb128 0x1
 16934 5672 51       		.byte	0x51
 16935 5673 03       		.uleb128 0x3
 16936 5674 F3       		.byte	0xf3
 16937 5675 01       		.uleb128 0x1
 16938 5676 51       		.byte	0x51
 16939 5677 33       		.uleb128 0x33
 16940 5678 02       		.uleb128 0x2
 16941 5679 7D       		.byte	0x7d
 16942 567a 0C       		.sleb128 12
 16943 567b 02       		.uleb128 0x2
 16944 567c 74       		.byte	0x74
 16945 567d 00       		.sleb128 0
 16946 567e 33       		.uleb128 0x33
 16947 567f 02       		.uleb128 0x2
 16948 5680 7D       		.byte	0x7d
 16949 5681 08       		.sleb128 8
 16950 5682 02       		.uleb128 0x2
 16951 5683 74       		.byte	0x74
 16952 5684 00       		.sleb128 0
 16953 5685 33       		.uleb128 0x33
 16954 5686 02       		.uleb128 0x2
 16955 5687 7D       		.byte	0x7d
 16956 5688 04       		.sleb128 4
 16957 5689 03       		.uleb128 0x3
 16958 568a F3       		.byte	0xf3
 16959 568b 01       		.uleb128 0x1
 16960 568c 50       		.byte	0x50
 16961 568d 33       		.uleb128 0x33
 16962 568e 02       		.uleb128 0x2
 16963 568f 7D       		.byte	0x7d
 16964 5690 00       		.sleb128 0
 16965 5691 02       		.uleb128 0x2
 16966 5692 74       		.byte	0x74
 16967 5693 00       		.sleb128 0
 16968 5694 00       		.byte	0
 16969 5695 00       		.byte	0
 16970 5696 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 504


 16971 5697 88090000 		.4byte	.LASF1053
 16972 569b 01       		.byte	0x1
 16973 569c 7B1E     		.2byte	0x1e7b
 16974 569e 30000000 		.4byte	0x30
 16975 56a2 00000000 		.4byte	.LFB96
 16976 56a6 18000000 		.4byte	.LFE96-.LFB96
 16977 56aa 01       		.uleb128 0x1
 16978 56ab 9C       		.byte	0x9c
 16979 56ac 2A570000 		.4byte	0x572a
 16980 56b0 3B       		.uleb128 0x3b
 16981 56b1 73736C00 		.ascii	"ssl\000"
 16982 56b5 01       		.byte	0x1
 16983 56b6 7B1E     		.2byte	0x1e7b
 16984 56b8 3B0C0000 		.4byte	0xc3b
 16985 56bc 412A0000 		.4byte	.LLST227
 16986 56c0 3B       		.uleb128 0x3b
 16987 56c1 696E00   		.ascii	"in\000"
 16988 56c4 01       		.byte	0x1
 16989 56c5 7C1E     		.2byte	0x1e7c
 16990 56c7 210D0000 		.4byte	0xd21
 16991 56cb 6E2A0000 		.4byte	.LLST228
 16992 56cf 3B       		.uleb128 0x3b
 16993 56d0 737A00   		.ascii	"sz\000"
 16994 56d3 01       		.byte	0x1
 16995 56d4 7C1E     		.2byte	0x1e7c
 16996 56d6 8D000000 		.4byte	0x8d
 16997 56da 8F2A0000 		.4byte	.LLST229
 16998 56de 2E       		.uleb128 0x2e
 16999 56df 6F280000 		.4byte	.LASF918
 17000 56e3 01       		.byte	0x1
 17001 56e4 7C1E     		.2byte	0x1e7c
 17002 56e6 30000000 		.4byte	0x30
 17003 56ea B02A0000 		.4byte	.LLST230
 17004 56ee 34       		.uleb128 0x34
 17005 56ef 14000000 		.4byte	.LVL647
 17006 56f3 E0440000 		.4byte	0x44e0
 17007 56f7 33       		.uleb128 0x33
 17008 56f8 01       		.uleb128 0x1
 17009 56f9 53       		.byte	0x53
 17010 56fa 03       		.uleb128 0x3
 17011 56fb F3       		.byte	0xf3
 17012 56fc 01       		.uleb128 0x1
 17013 56fd 53       		.byte	0x53
 17014 56fe 33       		.uleb128 0x33
 17015 56ff 01       		.uleb128 0x1
 17016 5700 52       		.byte	0x52
 17017 5701 03       		.uleb128 0x3
 17018 5702 F3       		.byte	0xf3
 17019 5703 01       		.uleb128 0x1
 17020 5704 52       		.byte	0x52
 17021 5705 33       		.uleb128 0x33
 17022 5706 01       		.uleb128 0x1
 17023 5707 51       		.byte	0x51
 17024 5708 03       		.uleb128 0x3
 17025 5709 F3       		.byte	0xf3
 17026 570a 01       		.uleb128 0x1
 17027 570b 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 505


 17028 570c 33       		.uleb128 0x33
 17029 570d 02       		.uleb128 0x2
 17030 570e 7D       		.byte	0x7d
 17031 570f 0C       		.sleb128 12
 17032 5710 02       		.uleb128 0x2
 17033 5711 74       		.byte	0x74
 17034 5712 00       		.sleb128 0
 17035 5713 33       		.uleb128 0x33
 17036 5714 02       		.uleb128 0x2
 17037 5715 7D       		.byte	0x7d
 17038 5716 08       		.sleb128 8
 17039 5717 02       		.uleb128 0x2
 17040 5718 74       		.byte	0x74
 17041 5719 00       		.sleb128 0
 17042 571a 33       		.uleb128 0x33
 17043 571b 02       		.uleb128 0x2
 17044 571c 7D       		.byte	0x7d
 17045 571d 04       		.sleb128 4
 17046 571e 03       		.uleb128 0x3
 17047 571f F3       		.byte	0xf3
 17048 5720 01       		.uleb128 0x1
 17049 5721 50       		.byte	0x50
 17050 5722 33       		.uleb128 0x33
 17051 5723 02       		.uleb128 0x2
 17052 5724 7D       		.byte	0x7d
 17053 5725 00       		.sleb128 0
 17054 5726 01       		.uleb128 0x1
 17055 5727 31       		.byte	0x31
 17056 5728 00       		.byte	0
 17057 5729 00       		.byte	0
 17058 572a 38       		.uleb128 0x38
 17059 572b 34370000 		.4byte	.LASF1054
 17060 572f 01       		.byte	0x1
 17061 5730 841E     		.2byte	0x1e84
 17062 5732 30000000 		.4byte	0x30
 17063 5736 00000000 		.4byte	.LFB97
 17064 573a 18000000 		.4byte	.LFE97-.LFB97
 17065 573e 01       		.uleb128 0x1
 17066 573f 9C       		.byte	0x9c
 17067 5740 AA570000 		.4byte	0x57aa
 17068 5744 3B       		.uleb128 0x3b
 17069 5745 73736C00 		.ascii	"ssl\000"
 17070 5749 01       		.byte	0x1
 17071 574a 841E     		.2byte	0x1e84
 17072 574c 3B0C0000 		.4byte	0xc3b
 17073 5750 D12A0000 		.4byte	.LLST231
 17074 5754 3B       		.uleb128 0x3b
 17075 5755 696E00   		.ascii	"in\000"
 17076 5758 01       		.byte	0x1
 17077 5759 851E     		.2byte	0x1e85
 17078 575b 210D0000 		.4byte	0xd21
 17079 575f FE2A0000 		.4byte	.LLST232
 17080 5763 3B       		.uleb128 0x3b
 17081 5764 737A00   		.ascii	"sz\000"
 17082 5767 01       		.byte	0x1
 17083 5768 851E     		.2byte	0x1e85
 17084 576a 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 506


 17085 576e 1F2B0000 		.4byte	.LLST233
 17086 5772 34       		.uleb128 0x34
 17087 5773 14000000 		.4byte	.LVL650
 17088 5777 E0440000 		.4byte	0x44e0
 17089 577b 33       		.uleb128 0x33
 17090 577c 01       		.uleb128 0x1
 17091 577d 53       		.byte	0x53
 17092 577e 01       		.uleb128 0x1
 17093 577f 31       		.byte	0x31
 17094 5780 33       		.uleb128 0x33
 17095 5781 01       		.uleb128 0x1
 17096 5782 52       		.byte	0x52
 17097 5783 03       		.uleb128 0x3
 17098 5784 F3       		.byte	0xf3
 17099 5785 01       		.uleb128 0x1
 17100 5786 52       		.byte	0x52
 17101 5787 33       		.uleb128 0x33
 17102 5788 01       		.uleb128 0x1
 17103 5789 51       		.byte	0x51
 17104 578a 03       		.uleb128 0x3
 17105 578b F3       		.byte	0xf3
 17106 578c 01       		.uleb128 0x1
 17107 578d 51       		.byte	0x51
 17108 578e 33       		.uleb128 0x33
 17109 578f 02       		.uleb128 0x2
 17110 5790 7D       		.byte	0x7d
 17111 5791 0C       		.sleb128 12
 17112 5792 01       		.uleb128 0x1
 17113 5793 31       		.byte	0x31
 17114 5794 33       		.uleb128 0x33
 17115 5795 02       		.uleb128 0x2
 17116 5796 7D       		.byte	0x7d
 17117 5797 08       		.sleb128 8
 17118 5798 01       		.uleb128 0x1
 17119 5799 30       		.byte	0x30
 17120 579a 33       		.uleb128 0x33
 17121 579b 02       		.uleb128 0x2
 17122 579c 7D       		.byte	0x7d
 17123 579d 04       		.sleb128 4
 17124 579e 03       		.uleb128 0x3
 17125 579f F3       		.byte	0xf3
 17126 57a0 01       		.uleb128 0x1
 17127 57a1 50       		.byte	0x50
 17128 57a2 33       		.uleb128 0x33
 17129 57a3 02       		.uleb128 0x2
 17130 57a4 7D       		.byte	0x7d
 17131 57a5 00       		.sleb128 0
 17132 57a6 01       		.uleb128 0x1
 17133 57a7 30       		.byte	0x30
 17134 57a8 00       		.byte	0
 17135 57a9 00       		.byte	0
 17136 57aa 38       		.uleb128 0x38
 17137 57ab 75100000 		.4byte	.LASF1055
 17138 57af 01       		.byte	0x1
 17139 57b0 8F1E     		.2byte	0x1e8f
 17140 57b2 30000000 		.4byte	0x30
 17141 57b6 00000000 		.4byte	.LFB98
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 507


 17142 57ba 54000000 		.4byte	.LFE98-.LFB98
 17143 57be 01       		.uleb128 0x1
 17144 57bf 9C       		.byte	0x9c
 17145 57c0 10580000 		.4byte	0x5810
 17146 57c4 3B       		.uleb128 0x3b
 17147 57c5 73736C00 		.ascii	"ssl\000"
 17148 57c9 01       		.byte	0x1
 17149 57ca 8F1E     		.2byte	0x1e8f
 17150 57cc 3B0C0000 		.4byte	0xc3b
 17151 57d0 402B0000 		.4byte	.LLST234
 17152 57d4 32       		.uleb128 0x32
 17153 57d5 18000000 		.4byte	.LVL653
 17154 57d9 BD370000 		.4byte	0x37bd
 17155 57dd E9570000 		.4byte	0x57e9
 17156 57e1 33       		.uleb128 0x33
 17157 57e2 01       		.uleb128 0x1
 17158 57e3 50       		.byte	0x50
 17159 57e4 03       		.uleb128 0x3
 17160 57e5 74       		.byte	0x74
 17161 57e6 9001     		.sleb128 144
 17162 57e8 00       		.byte	0
 17163 57e9 32       		.uleb128 0x32
 17164 57ea 2E000000 		.4byte	.LVL654
 17165 57ee BD370000 		.4byte	0x37bd
 17166 57f2 FE570000 		.4byte	0x57fe
 17167 57f6 33       		.uleb128 0x33
 17168 57f7 01       		.uleb128 0x1
 17169 57f8 50       		.byte	0x50
 17170 57f9 03       		.uleb128 0x3
 17171 57fa 74       		.byte	0x74
 17172 57fb 9801     		.sleb128 152
 17173 57fd 00       		.byte	0
 17174 57fe 34       		.uleb128 0x34
 17175 57ff 46000000 		.4byte	.LVL655
 17176 5803 BD370000 		.4byte	0x37bd
 17177 5807 33       		.uleb128 0x33
 17178 5808 01       		.uleb128 0x1
 17179 5809 50       		.byte	0x50
 17180 580a 03       		.uleb128 0x3
 17181 580b 74       		.byte	0x74
 17182 580c 9401     		.sleb128 148
 17183 580e 00       		.byte	0
 17184 580f 00       		.byte	0
 17185 5810 38       		.uleb128 0x38
 17186 5811 5E3A0000 		.4byte	.LASF1056
 17187 5815 01       		.byte	0x1
 17188 5816 AC1E     		.2byte	0x1eac
 17189 5818 30000000 		.4byte	0x30
 17190 581c 00000000 		.4byte	.LFB99
 17191 5820 14000000 		.4byte	.LFE99-.LFB99
 17192 5824 01       		.uleb128 0x1
 17193 5825 9C       		.byte	0x9c
 17194 5826 44580000 		.4byte	0x5844
 17195 582a 3B       		.uleb128 0x3b
 17196 582b 63747800 		.ascii	"ctx\000"
 17197 582f 01       		.byte	0x1
 17198 5830 AC1E     		.2byte	0x1eac
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 508


 17199 5832 11240000 		.4byte	0x2411
 17200 5836 772B0000 		.4byte	.LLST235
 17201 583a 3A       		.uleb128 0x3a
 17202 583b 0C000000 		.4byte	.LVL660
 17203 583f 5E390000 		.4byte	0x395e
 17204 5843 00       		.byte	0
 17205 5844 38       		.uleb128 0x38
 17206 5845 D03C0000 		.4byte	.LASF1057
 17207 5849 01       		.byte	0x1
 17208 584a 441F     		.2byte	0x1f44
 17209 584c 30000000 		.4byte	0x30
 17210 5850 00000000 		.4byte	.LFB100
 17211 5854 18000000 		.4byte	.LFE100-.LFB100
 17212 5858 01       		.uleb128 0x1
 17213 5859 9C       		.byte	0x9c
 17214 585a 6F580000 		.4byte	0x586f
 17215 585e 3B       		.uleb128 0x3b
 17216 585f 73736C00 		.ascii	"ssl\000"
 17217 5863 01       		.byte	0x1
 17218 5864 441F     		.2byte	0x1f44
 17219 5866 3B0C0000 		.4byte	0xc3b
 17220 586a B12B0000 		.4byte	.LLST236
 17221 586e 00       		.byte	0
 17222 586f 38       		.uleb128 0x38
 17223 5870 19280000 		.4byte	.LASF1058
 17224 5874 01       		.byte	0x1
 17225 5875 E128     		.2byte	0x28e1
 17226 5877 30000000 		.4byte	0x30
 17227 587b 00000000 		.4byte	.LFB101
 17228 587f 24000000 		.4byte	.LFE101-.LFB101
 17229 5883 01       		.uleb128 0x1
 17230 5884 9C       		.byte	0x9c
 17231 5885 9A580000 		.4byte	0x589a
 17232 5889 3B       		.uleb128 0x3b
 17233 588a 73736C00 		.ascii	"ssl\000"
 17234 588e 01       		.byte	0x1
 17235 588f E128     		.2byte	0x28e1
 17236 5891 2E2F0000 		.4byte	0x2f2e
 17237 5895 D22B0000 		.4byte	.LLST237
 17238 5899 00       		.byte	0
 17239 589a 38       		.uleb128 0x38
 17240 589b 3A070000 		.4byte	.LASF1059
 17241 589f 01       		.byte	0x1
 17242 58a0 EB28     		.2byte	0x28eb
 17243 58a2 30000000 		.4byte	0x30
 17244 58a6 00000000 		.4byte	.LFB102
 17245 58aa 10000000 		.4byte	.LFE102-.LFB102
 17246 58ae 01       		.uleb128 0x1
 17247 58af 9C       		.byte	0x9c
 17248 58b0 C5580000 		.4byte	0x58c5
 17249 58b4 3B       		.uleb128 0x3b
 17250 58b5 73736C00 		.ascii	"ssl\000"
 17251 58b9 01       		.byte	0x1
 17252 58ba EB28     		.2byte	0x28eb
 17253 58bc 3B0C0000 		.4byte	0xc3b
 17254 58c0 F32B0000 		.4byte	.LLST238
 17255 58c4 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 509


 17256 58c5 38       		.uleb128 0x38
 17257 58c6 98110000 		.4byte	.LASF1060
 17258 58ca 01       		.byte	0x1
 17259 58cb F828     		.2byte	0x28f8
 17260 58cd BE000000 		.4byte	0xbe
 17261 58d1 00000000 		.4byte	.LFB103
 17262 58d5 50000000 		.4byte	.LFE103-.LFB103
 17263 58d9 01       		.uleb128 0x1
 17264 58da 9C       		.byte	0x9c
 17265 58db F0580000 		.4byte	0x58f0
 17266 58df 3B       		.uleb128 0x3b
 17267 58e0 73736C00 		.ascii	"ssl\000"
 17268 58e4 01       		.byte	0x1
 17269 58e5 F828     		.2byte	0x28f8
 17270 58e7 3B0C0000 		.4byte	0xc3b
 17271 58eb 142C0000 		.4byte	.LLST239
 17272 58ef 00       		.byte	0
 17273 58f0 40       		.uleb128 0x40
 17274 58f1 8B170000 		.4byte	.LASF1062
 17275 58f5 01       		.byte	0x1
 17276 58f6 1829     		.2byte	0x2918
 17277 58f8 BE000000 		.4byte	0xbe
 17278 58fc 00000000 		.4byte	.LFB104
 17279 5900 08000000 		.4byte	.LFE104-.LFB104
 17280 5904 01       		.uleb128 0x1
 17281 5905 9C       		.byte	0x9c
 17282 5906 40       		.uleb128 0x40
 17283 5907 84330000 		.4byte	.LASF1063
 17284 590b 01       		.byte	0x1
 17285 590c 1F29     		.2byte	0x291f
 17286 590e 5B000000 		.4byte	0x5b
 17287 5912 00000000 		.4byte	.LFB105
 17288 5916 08000000 		.4byte	.LFE105-.LFB105
 17289 591a 01       		.uleb128 0x1
 17290 591b 9C       		.byte	0x9c
 17291 591c 38       		.uleb128 0x38
 17292 591d 8A230000 		.4byte	.LASF1064
 17293 5921 01       		.byte	0x1
 17294 5922 2529     		.2byte	0x2925
 17295 5924 30000000 		.4byte	0x30
 17296 5928 00000000 		.4byte	.LFB106
 17297 592c 1C000000 		.4byte	.LFE106-.LFB106
 17298 5930 01       		.uleb128 0x1
 17299 5931 9C       		.byte	0x9c
 17300 5932 47590000 		.4byte	0x5947
 17301 5936 3B       		.uleb128 0x3b
 17302 5937 73736C00 		.ascii	"ssl\000"
 17303 593b 01       		.byte	0x1
 17304 593c 2529     		.2byte	0x2925
 17305 593e 3B0C0000 		.4byte	0xc3b
 17306 5942 352C0000 		.4byte	.LLST240
 17307 5946 00       		.byte	0
 17308 5947 57       		.uleb128 0x57
 17309 5948 232B0000 		.4byte	0x2b23
 17310 594c 00000000 		.4byte	.LFB107
 17311 5950 0A000000 		.4byte	.LFE107-.LFB107
 17312 5954 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 510


 17313 5955 9C       		.byte	0x9c
 17314 5956 64590000 		.4byte	0x5964
 17315 595a 43       		.uleb128 0x43
 17316 595b 342B0000 		.4byte	0x2b34
 17317 595f 612C0000 		.4byte	.LLST241
 17318 5963 00       		.byte	0
 17319 5964 57       		.uleb128 0x57
 17320 5965 472B0000 		.4byte	0x2b47
 17321 5969 00000000 		.4byte	.LFB108
 17322 596d 08000000 		.4byte	.LFE108-.LFB108
 17323 5971 01       		.uleb128 0x1
 17324 5972 9C       		.byte	0x9c
 17325 5973 81590000 		.4byte	0x5981
 17326 5977 43       		.uleb128 0x43
 17327 5978 582B0000 		.4byte	0x2b58
 17328 597c 822C0000 		.4byte	.LLST242
 17329 5980 00       		.byte	0
 17330 5981 38       		.uleb128 0x38
 17331 5982 B4300000 		.4byte	.LASF1065
 17332 5986 01       		.byte	0x1
 17333 5987 B42A     		.2byte	0x2ab4
 17334 5989 BE000000 		.4byte	0xbe
 17335 598d 00000000 		.4byte	.LFB109
 17336 5991 08000000 		.4byte	.LFE109-.LFB109
 17337 5995 01       		.uleb128 0x1
 17338 5996 9C       		.byte	0x9c
 17339 5997 AC590000 		.4byte	0x59ac
 17340 599b 3B       		.uleb128 0x3b
 17341 599c 73736C00 		.ascii	"ssl\000"
 17342 59a0 01       		.byte	0x1
 17343 59a1 B42A     		.2byte	0x2ab4
 17344 59a3 3B0C0000 		.4byte	0xc3b
 17345 59a7 A32C0000 		.4byte	.LLST243
 17346 59ab 00       		.byte	0
 17347 59ac 1A       		.uleb128 0x1a
 17348 59ad 37000000 		.4byte	0x37
 17349 59b1 BC590000 		.4byte	0x59bc
 17350 59b5 1B       		.uleb128 0x1b
 17351 59b6 A2000000 		.4byte	0xa2
 17352 59ba 03       		.byte	0x3
 17353 59bb 00       		.byte	0
 17354 59bc 5A       		.uleb128 0x5a
 17355 59bd 97180000 		.4byte	.LASF1066
 17356 59c1 07       		.byte	0x7
 17357 59c2 EF0A     		.2byte	0xaef
 17358 59c4 CD590000 		.4byte	0x59cd
 17359 59c8 04       		.byte	0x4
 17360 59c9 43       		.byte	0x43
 17361 59ca 4C       		.byte	0x4c
 17362 59cb 4E       		.byte	0x4e
 17363 59cc 54       		.byte	0x54
 17364 59cd 07       		.uleb128 0x7
 17365 59ce AC590000 		.4byte	0x59ac
 17366 59d2 5A       		.uleb128 0x5a
 17367 59d3 D2290000 		.4byte	.LASF1067
 17368 59d7 07       		.byte	0x7
 17369 59d8 F00A     		.2byte	0xaf0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 511


 17370 59da E3590000 		.4byte	0x59e3
 17371 59de 04       		.byte	0x4
 17372 59df 53       		.byte	0x53
 17373 59e0 52       		.byte	0x52
 17374 59e1 56       		.byte	0x56
 17375 59e2 52       		.byte	0x52
 17376 59e3 07       		.uleb128 0x7
 17377 59e4 AC590000 		.4byte	0x59ac
 17378 59e8 2A       		.uleb128 0x2a
 17379 59e9 312C0000 		.4byte	.LASF1068
 17380 59ed 07       		.byte	0x7
 17381 59ee F20A     		.2byte	0xaf2
 17382 59f0 F4590000 		.4byte	0x59f4
 17383 59f4 07       		.uleb128 0x7
 17384 59f5 281C0000 		.4byte	0x1c28
 17385 59f9 2A       		.uleb128 0x2a
 17386 59fa F6240000 		.4byte	.LASF1069
 17387 59fe 07       		.byte	0x7
 17388 59ff F30A     		.2byte	0xaf3
 17389 5a01 055A0000 		.4byte	0x5a05
 17390 5a05 07       		.uleb128 0x7
 17391 5a06 281C0000 		.4byte	0x1c28
 17392 5a0a 5B       		.uleb128 0x5b
 17393 5a0b 312A0000 		.4byte	.LASF1070
 17394 5a0f 01       		.byte	0x1
 17395 5a10 99       		.byte	0x99
 17396 5a11 1B5A0000 		.4byte	0x5a1b
 17397 5a15 05       		.uleb128 0x5
 17398 5a16 03       		.byte	0x3
 17399 5a17 00000000 		.4byte	initRefCount
 17400 5a1b 4D       		.uleb128 0x4d
 17401 5a1c 30000000 		.4byte	0x30
 17402 5a20 5B       		.uleb128 0x5b
 17403 5a21 8D100000 		.4byte	.LASF1071
 17404 5a25 01       		.byte	0x1
 17405 5a26 9A       		.byte	0x9a
 17406 5a27 25000000 		.4byte	0x25
 17407 5a2b 05       		.uleb128 0x5
 17408 5a2c 03       		.byte	0x3
 17409 5a2d 04000000 		.4byte	count_mutex
 17410 5a31 5C       		.uleb128 0x5c
 17411 5a32 59130000 		.4byte	.LASF1072
 17412 5a36 0C       		.byte	0xc
 17413 5a37 FF01     		.2byte	0x1ff
 17414 5a39 BE000000 		.4byte	0xbe
 17415 5a3d 5C       		.uleb128 0x5c
 17416 5a3e 80410000 		.4byte	.LASF1073
 17417 5a42 0C       		.byte	0xc
 17418 5a43 0002     		.2byte	0x200
 17419 5a45 BE000000 		.4byte	0xbe
 17420 5a49 5C       		.uleb128 0x5c
 17421 5a4a 9C330000 		.4byte	.LASF1074
 17422 5a4e 0C       		.byte	0xc
 17423 5a4f 0102     		.2byte	0x201
 17424 5a51 BE000000 		.4byte	0xbe
 17425 5a55 5C       		.uleb128 0x5c
 17426 5a56 2C2E0000 		.4byte	.LASF1075
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 512


 17427 5a5a 0C       		.byte	0xc
 17428 5a5b 0202     		.2byte	0x202
 17429 5a5d BE000000 		.4byte	0xbe
 17430 5a61 5C       		.uleb128 0x5c
 17431 5a62 D0350000 		.4byte	.LASF1076
 17432 5a66 0C       		.byte	0xc
 17433 5a67 0302     		.2byte	0x203
 17434 5a69 BE000000 		.4byte	0xbe
 17435 5a6d 5C       		.uleb128 0x5c
 17436 5a6e 5B120000 		.4byte	.LASF1077
 17437 5a72 0C       		.byte	0xc
 17438 5a73 0402     		.2byte	0x204
 17439 5a75 BE000000 		.4byte	0xbe
 17440 5a79 5C       		.uleb128 0x5c
 17441 5a7a AA2D0000 		.4byte	.LASF1078
 17442 5a7e 0C       		.byte	0xc
 17443 5a7f 0502     		.2byte	0x205
 17444 5a81 BE000000 		.4byte	0xbe
 17445 5a85 5C       		.uleb128 0x5c
 17446 5a86 1D150000 		.4byte	.LASF1079
 17447 5a8a 0C       		.byte	0xc
 17448 5a8b 0602     		.2byte	0x206
 17449 5a8d BE000000 		.4byte	0xbe
 17450 5a91 5C       		.uleb128 0x5c
 17451 5a92 A03C0000 		.4byte	.LASF1080
 17452 5a96 0C       		.byte	0xc
 17453 5a97 0702     		.2byte	0x207
 17454 5a99 BE000000 		.4byte	0xbe
 17455 5a9d 5C       		.uleb128 0x5c
 17456 5a9e AA180000 		.4byte	.LASF1081
 17457 5aa2 0C       		.byte	0xc
 17458 5aa3 0802     		.2byte	0x208
 17459 5aa5 BE000000 		.4byte	0xbe
 17460 5aa9 5C       		.uleb128 0x5c
 17461 5aaa F0220000 		.4byte	.LASF1082
 17462 5aae 0C       		.byte	0xc
 17463 5aaf 0902     		.2byte	0x209
 17464 5ab1 BE000000 		.4byte	0xbe
 17465 5ab5 5C       		.uleb128 0x5c
 17466 5ab6 84000000 		.4byte	.LASF1083
 17467 5aba 0C       		.byte	0xc
 17468 5abb 0A02     		.2byte	0x20a
 17469 5abd BE000000 		.4byte	0xbe
 17470 5ac1 5C       		.uleb128 0x5c
 17471 5ac2 AD190000 		.4byte	.LASF1084
 17472 5ac6 0C       		.byte	0xc
 17473 5ac7 0B02     		.2byte	0x20b
 17474 5ac9 BE000000 		.4byte	0xbe
 17475 5acd 5C       		.uleb128 0x5c
 17476 5ace CA1F0000 		.4byte	.LASF1085
 17477 5ad2 0C       		.byte	0xc
 17478 5ad3 0C02     		.2byte	0x20c
 17479 5ad5 BE000000 		.4byte	0xbe
 17480 5ad9 5C       		.uleb128 0x5c
 17481 5ada 493E0000 		.4byte	.LASF1086
 17482 5ade 0C       		.byte	0xc
 17483 5adf 0D02     		.2byte	0x20d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 513


 17484 5ae1 BE000000 		.4byte	0xbe
 17485 5ae5 5C       		.uleb128 0x5c
 17486 5ae6 97240000 		.4byte	.LASF1087
 17487 5aea 0C       		.byte	0xc
 17488 5aeb 0E02     		.2byte	0x20e
 17489 5aed BE000000 		.4byte	0xbe
 17490 5af1 5C       		.uleb128 0x5c
 17491 5af2 CD2E0000 		.4byte	.LASF1088
 17492 5af6 0C       		.byte	0xc
 17493 5af7 0F02     		.2byte	0x20f
 17494 5af9 BE000000 		.4byte	0xbe
 17495 5afd 5C       		.uleb128 0x5c
 17496 5afe 5E3D0000 		.4byte	.LASF1089
 17497 5b02 0C       		.byte	0xc
 17498 5b03 1002     		.2byte	0x210
 17499 5b05 BE000000 		.4byte	0xbe
 17500 5b09 5C       		.uleb128 0x5c
 17501 5b0a 0F290000 		.4byte	.LASF1090
 17502 5b0e 0C       		.byte	0xc
 17503 5b0f 1102     		.2byte	0x211
 17504 5b11 BE000000 		.4byte	0xbe
 17505 5b15 5C       		.uleb128 0x5c
 17506 5b16 89350000 		.4byte	.LASF1091
 17507 5b1a 0C       		.byte	0xc
 17508 5b1b 1202     		.2byte	0x212
 17509 5b1d BE000000 		.4byte	0xbe
 17510 5b21 5D       		.uleb128 0x5d
 17511 5b22 032E0000 		.4byte	.LASF1092
 17512 5b26 0F       		.byte	0xf
 17513 5b27 21       		.byte	0x21
 17514 5b28 74000000 		.4byte	0x74
 17515 5b2c 365B0000 		.4byte	0x5b36
 17516 5b30 18       		.uleb128 0x18
 17517 5b31 BE000000 		.4byte	0xbe
 17518 5b35 00       		.byte	0
 17519 5b36 5D       		.uleb128 0x5d
 17520 5b37 91040000 		.4byte	.LASF1093
 17521 5b3b 0F       		.byte	0xf
 17522 5b3c 16       		.byte	0x16
 17523 5b3d 30000000 		.4byte	0x30
 17524 5b41 555B0000 		.4byte	0x5b55
 17525 5b45 18       		.uleb128 0x18
 17526 5b46 C9000000 		.4byte	0xc9
 17527 5b4a 18       		.uleb128 0x18
 17528 5b4b C9000000 		.4byte	0xc9
 17529 5b4f 18       		.uleb128 0x18
 17530 5b50 74000000 		.4byte	0x74
 17531 5b54 00       		.byte	0
 17532 5b55 5E       		.uleb128 0x5e
 17533 5b56 5D1C0000 		.4byte	.LASF1096
 17534 5b5a 07       		.byte	0x7
 17535 5b5b 8E07     		.2byte	0x78e
 17536 5b5d 675B0000 		.4byte	0x5b67
 17537 5b61 18       		.uleb128 0x18
 17538 5b62 11240000 		.4byte	0x2411
 17539 5b66 00       		.byte	0
 17540 5b67 5D       		.uleb128 0x5d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 514


 17541 5b68 C2270000 		.4byte	.LASF1094
 17542 5b6c 10       		.byte	0x10
 17543 5b6d 2F       		.byte	0x2f
 17544 5b6e A9000000 		.4byte	0xa9
 17545 5b72 7C5B0000 		.4byte	0x5b7c
 17546 5b76 18       		.uleb128 0x18
 17547 5b77 74000000 		.4byte	0x74
 17548 5b7b 00       		.byte	0
 17549 5b7c 5F       		.uleb128 0x5f
 17550 5b7d D2130000 		.4byte	.LASF1095
 17551 5b81 07       		.byte	0x7
 17552 5b82 850A     		.2byte	0xa85
 17553 5b84 30000000 		.4byte	0x30
 17554 5b88 975B0000 		.4byte	0x5b97
 17555 5b8c 18       		.uleb128 0x18
 17556 5b8d 3B0C0000 		.4byte	0xc3b
 17557 5b91 18       		.uleb128 0x18
 17558 5b92 11240000 		.4byte	0x2411
 17559 5b96 00       		.byte	0
 17560 5b97 5E       		.uleb128 0x5e
 17561 5b98 65250000 		.4byte	.LASF1097
 17562 5b9c 07       		.byte	0x7
 17563 5b9d 870A     		.2byte	0xa87
 17564 5b9f A95B0000 		.4byte	0x5ba9
 17565 5ba3 18       		.uleb128 0x18
 17566 5ba4 3B0C0000 		.4byte	0xc3b
 17567 5ba8 00       		.byte	0
 17568 5ba9 60       		.uleb128 0x60
 17569 5baa 88140000 		.4byte	.LASF1098
 17570 5bae 07       		.byte	0x7
 17571 5baf 670B     		.2byte	0xb67
 17572 5bb1 1C2E0000 		.4byte	0x2e1c
 17573 5bb5 60       		.uleb128 0x60
 17574 5bb6 BE100000 		.4byte	.LASF1099
 17575 5bba 07       		.byte	0x7
 17576 5bbb 680B     		.2byte	0xb68
 17577 5bbd 30000000 		.4byte	0x30
 17578 5bc1 5D       		.uleb128 0x5d
 17579 5bc2 FF130000 		.4byte	.LASF1100
 17580 5bc6 0F       		.byte	0xf
 17581 5bc7 24       		.byte	0x24
 17582 5bc8 B1000000 		.4byte	0xb1
 17583 5bcc E05B0000 		.4byte	0x5be0
 17584 5bd0 18       		.uleb128 0x18
 17585 5bd1 B1000000 		.4byte	0xb1
 17586 5bd5 18       		.uleb128 0x18
 17587 5bd6 BE000000 		.4byte	0xbe
 17588 5bda 18       		.uleb128 0x18
 17589 5bdb 74000000 		.4byte	0x74
 17590 5bdf 00       		.byte	0
 17591 5be0 5F       		.uleb128 0x5f
 17592 5be1 4E3C0000 		.4byte	.LASF1101
 17593 5be5 07       		.byte	0x7
 17594 5be6 FA0A     		.2byte	0xafa
 17595 5be8 30000000 		.4byte	0x30
 17596 5bec 005C0000 		.4byte	0x5c00
 17597 5bf0 18       		.uleb128 0x18
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 515


 17598 5bf1 3B0C0000 		.4byte	0xc3b
 17599 5bf5 18       		.uleb128 0x18
 17600 5bf6 C9000000 		.4byte	0xc9
 17601 5bfa 18       		.uleb128 0x18
 17602 5bfb 30000000 		.4byte	0x30
 17603 5bff 00       		.byte	0
 17604 5c00 5F       		.uleb128 0x5f
 17605 5c01 6E0A0000 		.4byte	.LASF1102
 17606 5c05 07       		.byte	0x7
 17607 5c06 000B     		.2byte	0xb00
 17608 5c08 30000000 		.4byte	0x30
 17609 5c0c 255C0000 		.4byte	0x5c25
 17610 5c10 18       		.uleb128 0x18
 17611 5c11 3B0C0000 		.4byte	0xc3b
 17612 5c15 18       		.uleb128 0x18
 17613 5c16 63130000 		.4byte	0x1363
 17614 5c1a 18       		.uleb128 0x18
 17615 5c1b 30000000 		.4byte	0x30
 17616 5c1f 18       		.uleb128 0x18
 17617 5c20 30000000 		.4byte	0x30
 17618 5c24 00       		.byte	0
 17619 5c25 5F       		.uleb128 0x5f
 17620 5c26 E8340000 		.4byte	.LASF1103
 17621 5c2a 07       		.byte	0x7
 17622 5c2b 020B     		.2byte	0xb02
 17623 5c2d 30000000 		.4byte	0x30
 17624 5c31 455C0000 		.4byte	0x5c45
 17625 5c35 18       		.uleb128 0x18
 17626 5c36 3B0C0000 		.4byte	0xc3b
 17627 5c3a 18       		.uleb128 0x18
 17628 5c3b 30000000 		.4byte	0x30
 17629 5c3f 18       		.uleb128 0x18
 17630 5c40 30000000 		.4byte	0x30
 17631 5c44 00       		.byte	0
 17632 5c45 61       		.uleb128 0x61
 17633 5c46 2A       		.uleb128 0x2a
 17634 5c47 9E       		.byte	0x9e
 17635 5c48 28       		.uleb128 0x28
 17636 5c49 50       		.byte	0x50
 17637 5c4a 6C       		.byte	0x6c
 17638 5c4b 65       		.byte	0x65
 17639 5c4c 61       		.byte	0x61
 17640 5c4d 73       		.byte	0x73
 17641 5c4e 65       		.byte	0x65
 17642 5c4f 20       		.byte	0x20
 17643 5c50 73       		.byte	0x73
 17644 5c51 75       		.byte	0x75
 17645 5c52 70       		.byte	0x70
 17646 5c53 70       		.byte	0x70
 17647 5c54 6C       		.byte	0x6c
 17648 5c55 79       		.byte	0x79
 17649 5c56 20       		.byte	0x20
 17650 5c57 61       		.byte	0x61
 17651 5c58 20       		.byte	0x20
 17652 5c59 62       		.byte	0x62
 17653 5c5a 75       		.byte	0x75
 17654 5c5b 66       		.byte	0x66
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 516


 17655 5c5c 66       		.byte	0x66
 17656 5c5d 65       		.byte	0x65
 17657 5c5e 72       		.byte	0x72
 17658 5c5f 20       		.byte	0x20
 17659 5c60 66       		.byte	0x66
 17660 5c61 6F       		.byte	0x6f
 17661 5c62 72       		.byte	0x72
 17662 5c63 20       		.byte	0x20
 17663 5c64 65       		.byte	0x65
 17664 5c65 72       		.byte	0x72
 17665 5c66 72       		.byte	0x72
 17666 5c67 6F       		.byte	0x6f
 17667 5c68 72       		.byte	0x72
 17668 5c69 20       		.byte	0x20
 17669 5c6a 73       		.byte	0x73
 17670 5c6b 74       		.byte	0x74
 17671 5c6c 72       		.byte	0x72
 17672 5c6d 69       		.byte	0x69
 17673 5c6e 6E       		.byte	0x6e
 17674 5c6f 67       		.byte	0x67
 17675 5c70 00       		.byte	0
 17676 5c71 62       		.uleb128 0x62
 17677 5c72 931D0000 		.4byte	.LASF1104
 17678 5c76 0E       		.byte	0xe
 17679 5c77 A7       		.byte	0xa7
 17680 5c78 875C0000 		.4byte	0x5c87
 17681 5c7c 18       		.uleb128 0x18
 17682 5c7d 30000000 		.4byte	0x30
 17683 5c81 18       		.uleb128 0x18
 17684 5c82 B1000000 		.4byte	0xb1
 17685 5c86 00       		.byte	0
 17686 5c87 63       		.uleb128 0x63
 17687 5c88 01080000 		.4byte	.LASF1105
 17688 5c8c A9000000 		.4byte	0xa9
 17689 5c90 A45C0000 		.4byte	0x5ca4
 17690 5c94 18       		.uleb128 0x18
 17691 5c95 A9000000 		.4byte	0xa9
 17692 5c99 18       		.uleb128 0x18
 17693 5c9a C9000000 		.4byte	0xc9
 17694 5c9e 18       		.uleb128 0x18
 17695 5c9f A2000000 		.4byte	0xa2
 17696 5ca3 00       		.byte	0
 17697 5ca4 5E       		.uleb128 0x5e
 17698 5ca5 B7180000 		.4byte	.LASF1106
 17699 5ca9 07       		.byte	0x7
 17700 5caa 2C0B     		.2byte	0xb2c
 17701 5cac BB5C0000 		.4byte	0x5cbb
 17702 5cb0 18       		.uleb128 0x18
 17703 5cb1 3B0C0000 		.4byte	0xc3b
 17704 5cb5 18       		.uleb128 0x18
 17705 5cb6 30000000 		.4byte	0x30
 17706 5cba 00       		.byte	0
 17707 5cbb 62       		.uleb128 0x62
 17708 5cbc EC210000 		.4byte	.LASF1107
 17709 5cc0 10       		.byte	0x10
 17710 5cc1 30       		.byte	0x30
 17711 5cc2 CC5C0000 		.4byte	0x5ccc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 517


 17712 5cc6 18       		.uleb128 0x18
 17713 5cc7 A9000000 		.4byte	0xa9
 17714 5ccb 00       		.byte	0
 17715 5ccc 5E       		.uleb128 0x5e
 17716 5ccd 66360000 		.4byte	.LASF1108
 17717 5cd1 0C       		.byte	0xc
 17718 5cd2 5B02     		.2byte	0x25b
 17719 5cd4 E85C0000 		.4byte	0x5ce8
 17720 5cd8 18       		.uleb128 0x18
 17721 5cd9 E85C0000 		.4byte	0x5ce8
 17722 5cdd 18       		.uleb128 0x18
 17723 5cde 30000000 		.4byte	0x30
 17724 5ce2 18       		.uleb128 0x18
 17725 5ce3 A9000000 		.4byte	0xa9
 17726 5ce7 00       		.byte	0
 17727 5ce8 06       		.uleb128 0x6
 17728 5ce9 04       		.byte	0x4
 17729 5cea 99130000 		.4byte	0x1399
 17730 5cee 5D       		.uleb128 0x5d
 17731 5cef 61050000 		.4byte	.LASF1109
 17732 5cf3 03       		.byte	0x3
 17733 5cf4 A7       		.byte	0xa7
 17734 5cf5 30000000 		.4byte	0x30
 17735 5cf9 035D0000 		.4byte	0x5d03
 17736 5cfd 18       		.uleb128 0x18
 17737 5cfe 035D0000 		.4byte	0x5d03
 17738 5d02 00       		.byte	0
 17739 5d03 06       		.uleb128 0x6
 17740 5d04 04       		.byte	0x4
 17741 5d05 25000000 		.4byte	0x25
 17742 5d09 63       		.uleb128 0x63
 17743 5d0a 55200000 		.4byte	.LASF1110
 17744 5d0e A9000000 		.4byte	0xa9
 17745 5d12 265D0000 		.4byte	0x5d26
 17746 5d16 18       		.uleb128 0x18
 17747 5d17 A9000000 		.4byte	0xa9
 17748 5d1b 18       		.uleb128 0x18
 17749 5d1c 30000000 		.4byte	0x30
 17750 5d20 18       		.uleb128 0x18
 17751 5d21 A2000000 		.4byte	0xa2
 17752 5d25 00       		.byte	0
 17753 5d26 5D       		.uleb128 0x5d
 17754 5d27 03190000 		.4byte	.LASF1111
 17755 5d2b 03       		.byte	0x3
 17756 5d2c A6       		.byte	0xa6
 17757 5d2d 30000000 		.4byte	0x30
 17758 5d31 3B5D0000 		.4byte	0x5d3b
 17759 5d35 18       		.uleb128 0x18
 17760 5d36 035D0000 		.4byte	0x5d03
 17761 5d3a 00       		.byte	0
 17762 5d3b 5D       		.uleb128 0x5d
 17763 5d3c 9D3F0000 		.4byte	.LASF1112
 17764 5d40 03       		.byte	0x3
 17765 5d41 A8       		.byte	0xa8
 17766 5d42 30000000 		.4byte	0x30
 17767 5d46 505D0000 		.4byte	0x5d50
 17768 5d4a 18       		.uleb128 0x18
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 518


 17769 5d4b 035D0000 		.4byte	0x5d03
 17770 5d4f 00       		.byte	0
 17771 5d50 5D       		.uleb128 0x5d
 17772 5d51 AF3C0000 		.4byte	.LASF1113
 17773 5d55 03       		.byte	0x3
 17774 5d56 A9       		.byte	0xa9
 17775 5d57 30000000 		.4byte	0x30
 17776 5d5b 655D0000 		.4byte	0x5d65
 17777 5d5f 18       		.uleb128 0x18
 17778 5d60 035D0000 		.4byte	0x5d03
 17779 5d64 00       		.byte	0
 17780 5d65 60       		.uleb128 0x60
 17781 5d66 A6390000 		.4byte	.LASF1114
 17782 5d6a 07       		.byte	0x7
 17783 5d6b 8404     		.2byte	0x484
 17784 5d6d F5170000 		.4byte	0x17f5
 17785 5d71 5E       		.uleb128 0x5e
 17786 5d72 AC060000 		.4byte	.LASF1115
 17787 5d76 07       		.byte	0x7
 17788 5d77 2405     		.2byte	0x524
 17789 5d79 B05D0000 		.4byte	0x5db0
 17790 5d7d 18       		.uleb128 0x18
 17791 5d7e 501C0000 		.4byte	0x1c50
 17792 5d82 18       		.uleb128 0x18
 17793 5d83 F5170000 		.4byte	0x17f5
 17794 5d87 18       		.uleb128 0x18
 17795 5d88 49000000 		.4byte	0x49
 17796 5d8c 18       		.uleb128 0x18
 17797 5d8d 49000000 		.4byte	0x49
 17798 5d91 18       		.uleb128 0x18
 17799 5d92 49000000 		.4byte	0x49
 17800 5d96 18       		.uleb128 0x18
 17801 5d97 49000000 		.4byte	0x49
 17802 5d9b 18       		.uleb128 0x18
 17803 5d9c 49000000 		.4byte	0x49
 17804 5da0 18       		.uleb128 0x18
 17805 5da1 49000000 		.4byte	0x49
 17806 5da5 18       		.uleb128 0x18
 17807 5da6 49000000 		.4byte	0x49
 17808 5daa 18       		.uleb128 0x18
 17809 5dab 30000000 		.4byte	0x30
 17810 5daf 00       		.byte	0
 17811 5db0 5E       		.uleb128 0x5e
 17812 5db1 A1410000 		.4byte	.LASF1116
 17813 5db5 0C       		.byte	0xc
 17814 5db6 5202     		.2byte	0x252
 17815 5db8 D15D0000 		.4byte	0x5dd1
 17816 5dbc 18       		.uleb128 0x18
 17817 5dbd D15D0000 		.4byte	0x5dd1
 17818 5dc1 18       		.uleb128 0x18
 17819 5dc2 63130000 		.4byte	0x1363
 17820 5dc6 18       		.uleb128 0x18
 17821 5dc7 5B000000 		.4byte	0x5b
 17822 5dcb 18       		.uleb128 0x18
 17823 5dcc A9000000 		.4byte	0xa9
 17824 5dd0 00       		.byte	0
 17825 5dd1 06       		.uleb128 0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 519


 17826 5dd2 04       		.byte	0x4
 17827 5dd3 DB0F0000 		.4byte	0xfdb
 17828 5dd7 5F       		.uleb128 0x5f
 17829 5dd8 38320000 		.4byte	.LASF1117
 17830 5ddc 0C       		.byte	0xc
 17831 5ddd 5402     		.2byte	0x254
 17832 5ddf 30000000 		.4byte	0x30
 17833 5de3 FC5D0000 		.4byte	0x5dfc
 17834 5de7 18       		.uleb128 0x18
 17835 5de8 D15D0000 		.4byte	0x5dd1
 17836 5dec 18       		.uleb128 0x18
 17837 5ded 30000000 		.4byte	0x30
 17838 5df1 18       		.uleb128 0x18
 17839 5df2 30000000 		.4byte	0x30
 17840 5df6 18       		.uleb128 0x18
 17841 5df7 A9000000 		.4byte	0xa9
 17842 5dfb 00       		.byte	0
 17843 5dfc 5F       		.uleb128 0x5f
 17844 5dfd F33B0000 		.4byte	.LASF1118
 17845 5e01 0C       		.byte	0xc
 17846 5e02 5902     		.2byte	0x259
 17847 5e04 99130000 		.4byte	0x1399
 17848 5e08 125E0000 		.4byte	0x5e12
 17849 5e0c 18       		.uleb128 0x18
 17850 5e0d A9000000 		.4byte	0xa9
 17851 5e11 00       		.byte	0
 17852 5e12 5E       		.uleb128 0x5e
 17853 5e13 113C0000 		.4byte	.LASF1119
 17854 5e17 0C       		.byte	0xc
 17855 5e18 5302     		.2byte	0x253
 17856 5e1a 245E0000 		.4byte	0x5e24
 17857 5e1e 18       		.uleb128 0x18
 17858 5e1f D15D0000 		.4byte	0x5dd1
 17859 5e23 00       		.byte	0
 17860 5e24 5E       		.uleb128 0x5e
 17861 5e25 1D350000 		.4byte	.LASF1120
 17862 5e29 0C       		.byte	0xc
 17863 5e2a 5A02     		.2byte	0x25a
 17864 5e2c 3B5E0000 		.4byte	0x5e3b
 17865 5e30 18       		.uleb128 0x18
 17866 5e31 99130000 		.4byte	0x1399
 17867 5e35 18       		.uleb128 0x18
 17868 5e36 A9000000 		.4byte	0xa9
 17869 5e3a 00       		.byte	0
 17870 5e3b 64       		.uleb128 0x64
 17871 5e3c F90C0000 		.4byte	.LASF1121
 17872 5e40 03       		.byte	0x3
 17873 5e41 AC       		.byte	0xac
 17874 5e42 30000000 		.4byte	0x30
 17875 5e46 5F       		.uleb128 0x5f
 17876 5e47 4B2E0000 		.4byte	.LASF1122
 17877 5e4b 07       		.byte	0x7
 17878 5e4c 8C07     		.2byte	0x78c
 17879 5e4e 30000000 		.4byte	0x30
 17880 5e52 615E0000 		.4byte	0x5e61
 17881 5e56 18       		.uleb128 0x18
 17882 5e57 11240000 		.4byte	0x2411
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 520


 17883 5e5b 18       		.uleb128 0x18
 17884 5e5c 441C0000 		.4byte	0x1c44
 17885 5e60 00       		.byte	0
 17886 5e61 5D       		.uleb128 0x5d
 17887 5e62 10160000 		.4byte	.LASF1123
 17888 5e66 11       		.byte	0x11
 17889 5e67 22       		.byte	0x22
 17890 5e68 30000000 		.4byte	0x30
 17891 5e6c 855E0000 		.4byte	0x5e85
 17892 5e70 18       		.uleb128 0x18
 17893 5e71 B11D0000 		.4byte	0x1db1
 17894 5e75 18       		.uleb128 0x18
 17895 5e76 5B000000 		.4byte	0x5b
 17896 5e7a 18       		.uleb128 0x18
 17897 5e7b 63130000 		.4byte	0x1363
 17898 5e7f 18       		.uleb128 0x18
 17899 5e80 855E0000 		.4byte	0x5e85
 17900 5e84 00       		.byte	0
 17901 5e85 06       		.uleb128 0x6
 17902 5e86 04       		.byte	0x4
 17903 5e87 5B000000 		.4byte	0x5b
 17904 5e8b 5F       		.uleb128 0x5f
 17905 5e8c 3E010000 		.4byte	.LASF1124
 17906 5e90 0C       		.byte	0xc
 17907 5e91 6102     		.2byte	0x261
 17908 5e93 30000000 		.4byte	0x30
 17909 5e97 A65E0000 		.4byte	0x5ea6
 17910 5e9b 18       		.uleb128 0x18
 17911 5e9c 63130000 		.4byte	0x1363
 17912 5ea0 18       		.uleb128 0x18
 17913 5ea1 5B000000 		.4byte	0x5b
 17914 5ea5 00       		.byte	0
 17915 5ea6 5E       		.uleb128 0x5e
 17916 5ea7 D60C0000 		.4byte	.LASF1125
 17917 5eab 07       		.byte	0x7
 17918 5eac 650B     		.2byte	0xb65
 17919 5eae BD5E0000 		.4byte	0x5ebd
 17920 5eb2 18       		.uleb128 0x18
 17921 5eb3 5B000000 		.4byte	0x5b
 17922 5eb7 18       		.uleb128 0x18
 17923 5eb8 63130000 		.4byte	0x1363
 17924 5ebc 00       		.byte	0
 17925 5ebd 5F       		.uleb128 0x5f
 17926 5ebe 73200000 		.4byte	.LASF1126
 17927 5ec2 0C       		.byte	0xc
 17928 5ec3 5702     		.2byte	0x257
 17929 5ec5 30000000 		.4byte	0x30
 17930 5ec9 D85E0000 		.4byte	0x5ed8
 17931 5ecd 18       		.uleb128 0x18
 17932 5ece D15D0000 		.4byte	0x5dd1
 17933 5ed2 18       		.uleb128 0x18
 17934 5ed3 30000000 		.4byte	0x30
 17935 5ed7 00       		.byte	0
 17936 5ed8 5F       		.uleb128 0x5f
 17937 5ed9 5F330000 		.4byte	.LASF1127
 17938 5edd 0C       		.byte	0xc
 17939 5ede 5602     		.2byte	0x256
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 521


 17940 5ee0 30000000 		.4byte	0x30
 17941 5ee4 FD5E0000 		.4byte	0x5efd
 17942 5ee8 18       		.uleb128 0x18
 17943 5ee9 D15D0000 		.4byte	0x5dd1
 17944 5eed 18       		.uleb128 0x18
 17945 5eee 30000000 		.4byte	0x30
 17946 5ef2 18       		.uleb128 0x18
 17947 5ef3 30000000 		.4byte	0x30
 17948 5ef7 18       		.uleb128 0x18
 17949 5ef8 A9000000 		.4byte	0xa9
 17950 5efc 00       		.byte	0
 17951 5efd 5F       		.uleb128 0x5f
 17952 5efe CF230000 		.4byte	.LASF1128
 17953 5f02 07       		.byte	0x7
 17954 5f03 2705     		.2byte	0x527
 17955 5f05 30000000 		.4byte	0x30
 17956 5f09 185F0000 		.4byte	0x5f18
 17957 5f0d 18       		.uleb128 0x18
 17958 5f0e 501C0000 		.4byte	0x1c50
 17959 5f12 18       		.uleb128 0x18
 17960 5f13 BE000000 		.4byte	0xbe
 17961 5f17 00       		.byte	0
 17962 5f18 5F       		.uleb128 0x5f
 17963 5f19 C51C0000 		.4byte	.LASF1129
 17964 5f1d 07       		.byte	0x7
 17965 5f1e FF0A     		.2byte	0xaff
 17966 5f20 30000000 		.4byte	0x30
 17967 5f24 2E5F0000 		.4byte	0x5f2e
 17968 5f28 18       		.uleb128 0x18
 17969 5f29 3B0C0000 		.4byte	0xc3b
 17970 5f2d 00       		.byte	0
 17971 5f2e 5F       		.uleb128 0x5f
 17972 5f2f 1E320000 		.4byte	.LASF1130
 17973 5f33 07       		.byte	0x7
 17974 5f34 370B     		.2byte	0xb37
 17975 5f36 30000000 		.4byte	0x30
 17976 5f3a 445F0000 		.4byte	0x5f44
 17977 5f3e 18       		.uleb128 0x18
 17978 5f3f 3B0C0000 		.4byte	0xc3b
 17979 5f43 00       		.byte	0
 17980 5f44 5F       		.uleb128 0x5f
 17981 5f45 BC240000 		.4byte	.LASF1131
 17982 5f49 07       		.byte	0x7
 17983 5f4a 030B     		.2byte	0xb03
 17984 5f4c 30000000 		.4byte	0x30
 17985 5f50 5A5F0000 		.4byte	0x5f5a
 17986 5f54 18       		.uleb128 0x18
 17987 5f55 3B0C0000 		.4byte	0xc3b
 17988 5f59 00       		.byte	0
 17989 5f5a 5F       		.uleb128 0x5f
 17990 5f5b C3380000 		.4byte	.LASF1132
 17991 5f5f 07       		.byte	0x7
 17992 5f60 FB0A     		.2byte	0xafb
 17993 5f62 30000000 		.4byte	0x30
 17994 5f66 705F0000 		.4byte	0x5f70
 17995 5f6a 18       		.uleb128 0x18
 17996 5f6b 3B0C0000 		.4byte	0xc3b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 522


 17997 5f6f 00       		.byte	0
 17998 5f70 5F       		.uleb128 0x5f
 17999 5f71 7B040000 		.4byte	.LASF1133
 18000 5f75 07       		.byte	0x7
 18001 5f76 380B     		.2byte	0xb38
 18002 5f78 30000000 		.4byte	0x30
 18003 5f7c 865F0000 		.4byte	0x5f86
 18004 5f80 18       		.uleb128 0x18
 18005 5f81 3B0C0000 		.4byte	0xc3b
 18006 5f85 00       		.byte	0
 18007 5f86 5F       		.uleb128 0x5f
 18008 5f87 B8140000 		.4byte	.LASF1134
 18009 5f8b 07       		.byte	0x7
 18010 5f8c 390B     		.2byte	0xb39
 18011 5f8e 30000000 		.4byte	0x30
 18012 5f92 9C5F0000 		.4byte	0x5f9c
 18013 5f96 18       		.uleb128 0x18
 18014 5f97 3B0C0000 		.4byte	0xc3b
 18015 5f9b 00       		.byte	0
 18016 5f9c 5F       		.uleb128 0x5f
 18017 5f9d 5E280000 		.4byte	.LASF1135
 18018 5fa1 07       		.byte	0x7
 18019 5fa2 F70A     		.2byte	0xaf7
 18020 5fa4 30000000 		.4byte	0x30
 18021 5fa8 B25F0000 		.4byte	0x5fb2
 18022 5fac 18       		.uleb128 0x18
 18023 5fad 3B0C0000 		.4byte	0xc3b
 18024 5fb1 00       		.byte	0
 18025 5fb2 5F       		.uleb128 0x5f
 18026 5fb3 1C3B0000 		.4byte	.LASF1136
 18027 5fb7 07       		.byte	0x7
 18028 5fb8 010B     		.2byte	0xb01
 18029 5fba 30000000 		.4byte	0x30
 18030 5fbe C85F0000 		.4byte	0x5fc8
 18031 5fc2 18       		.uleb128 0x18
 18032 5fc3 3B0C0000 		.4byte	0xc3b
 18033 5fc7 00       		.byte	0
 18034 5fc8 5E       		.uleb128 0x5e
 18035 5fc9 D7360000 		.4byte	.LASF1137
 18036 5fcd 07       		.byte	0x7
 18037 5fce 0F0B     		.2byte	0xb0f
 18038 5fd0 DA5F0000 		.4byte	0x5fda
 18039 5fd4 18       		.uleb128 0x18
 18040 5fd5 3B0C0000 		.4byte	0xc3b
 18041 5fd9 00       		.byte	0
 18042 5fda 64       		.uleb128 0x64
 18043 5fdb 691C0000 		.4byte	.LASF1138
 18044 5fdf 06       		.byte	0x6
 18045 5fe0 D6       		.byte	0xd6
 18046 5fe1 441C0000 		.4byte	0x1c44
 18047 5fe5 00       		.byte	0
 18048              		.section	.debug_abbrev,"",%progbits
 18049              	.Ldebug_abbrev0:
 18050 0000 01       		.uleb128 0x1
 18051 0001 11       		.uleb128 0x11
 18052 0002 01       		.byte	0x1
 18053 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 523


 18054 0004 0E       		.uleb128 0xe
 18055 0005 13       		.uleb128 0x13
 18056 0006 0B       		.uleb128 0xb
 18057 0007 03       		.uleb128 0x3
 18058 0008 0E       		.uleb128 0xe
 18059 0009 1B       		.uleb128 0x1b
 18060 000a 0E       		.uleb128 0xe
 18061 000b 55       		.uleb128 0x55
 18062 000c 17       		.uleb128 0x17
 18063 000d 11       		.uleb128 0x11
 18064 000e 01       		.uleb128 0x1
 18065 000f 10       		.uleb128 0x10
 18066 0010 17       		.uleb128 0x17
 18067 0011 00       		.byte	0
 18068 0012 00       		.byte	0
 18069 0013 02       		.uleb128 0x2
 18070 0014 16       		.uleb128 0x16
 18071 0015 00       		.byte	0
 18072 0016 03       		.uleb128 0x3
 18073 0017 0E       		.uleb128 0xe
 18074 0018 3A       		.uleb128 0x3a
 18075 0019 0B       		.uleb128 0xb
 18076 001a 3B       		.uleb128 0x3b
 18077 001b 0B       		.uleb128 0xb
 18078 001c 49       		.uleb128 0x49
 18079 001d 13       		.uleb128 0x13
 18080 001e 00       		.byte	0
 18081 001f 00       		.byte	0
 18082 0020 03       		.uleb128 0x3
 18083 0021 24       		.uleb128 0x24
 18084 0022 00       		.byte	0
 18085 0023 0B       		.uleb128 0xb
 18086 0024 0B       		.uleb128 0xb
 18087 0025 3E       		.uleb128 0x3e
 18088 0026 0B       		.uleb128 0xb
 18089 0027 03       		.uleb128 0x3
 18090 0028 08       		.uleb128 0x8
 18091 0029 00       		.byte	0
 18092 002a 00       		.byte	0
 18093 002b 04       		.uleb128 0x4
 18094 002c 24       		.uleb128 0x24
 18095 002d 00       		.byte	0
 18096 002e 0B       		.uleb128 0xb
 18097 002f 0B       		.uleb128 0xb
 18098 0030 3E       		.uleb128 0x3e
 18099 0031 0B       		.uleb128 0xb
 18100 0032 03       		.uleb128 0x3
 18101 0033 0E       		.uleb128 0xe
 18102 0034 00       		.byte	0
 18103 0035 00       		.byte	0
 18104 0036 05       		.uleb128 0x5
 18105 0037 0F       		.uleb128 0xf
 18106 0038 00       		.byte	0
 18107 0039 0B       		.uleb128 0xb
 18108 003a 0B       		.uleb128 0xb
 18109 003b 00       		.byte	0
 18110 003c 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 524


 18111 003d 06       		.uleb128 0x6
 18112 003e 0F       		.uleb128 0xf
 18113 003f 00       		.byte	0
 18114 0040 0B       		.uleb128 0xb
 18115 0041 0B       		.uleb128 0xb
 18116 0042 49       		.uleb128 0x49
 18117 0043 13       		.uleb128 0x13
 18118 0044 00       		.byte	0
 18119 0045 00       		.byte	0
 18120 0046 07       		.uleb128 0x7
 18121 0047 26       		.uleb128 0x26
 18122 0048 00       		.byte	0
 18123 0049 49       		.uleb128 0x49
 18124 004a 13       		.uleb128 0x13
 18125 004b 00       		.byte	0
 18126 004c 00       		.byte	0
 18127 004d 08       		.uleb128 0x8
 18128 004e 26       		.uleb128 0x26
 18129 004f 00       		.byte	0
 18130 0050 00       		.byte	0
 18131 0051 00       		.byte	0
 18132 0052 09       		.uleb128 0x9
 18133 0053 04       		.uleb128 0x4
 18134 0054 01       		.byte	0x1
 18135 0055 0B       		.uleb128 0xb
 18136 0056 0B       		.uleb128 0xb
 18137 0057 3A       		.uleb128 0x3a
 18138 0058 0B       		.uleb128 0xb
 18139 0059 3B       		.uleb128 0x3b
 18140 005a 0B       		.uleb128 0xb
 18141 005b 01       		.uleb128 0x1
 18142 005c 13       		.uleb128 0x13
 18143 005d 00       		.byte	0
 18144 005e 00       		.byte	0
 18145 005f 0A       		.uleb128 0xa
 18146 0060 28       		.uleb128 0x28
 18147 0061 00       		.byte	0
 18148 0062 03       		.uleb128 0x3
 18149 0063 0E       		.uleb128 0xe
 18150 0064 1C       		.uleb128 0x1c
 18151 0065 0D       		.uleb128 0xd
 18152 0066 00       		.byte	0
 18153 0067 00       		.byte	0
 18154 0068 0B       		.uleb128 0xb
 18155 0069 04       		.uleb128 0x4
 18156 006a 01       		.byte	0x1
 18157 006b 0B       		.uleb128 0xb
 18158 006c 0B       		.uleb128 0xb
 18159 006d 3A       		.uleb128 0x3a
 18160 006e 0B       		.uleb128 0xb
 18161 006f 3B       		.uleb128 0x3b
 18162 0070 05       		.uleb128 0x5
 18163 0071 01       		.uleb128 0x1
 18164 0072 13       		.uleb128 0x13
 18165 0073 00       		.byte	0
 18166 0074 00       		.byte	0
 18167 0075 0C       		.uleb128 0xc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 525


 18168 0076 13       		.uleb128 0x13
 18169 0077 01       		.byte	0x1
 18170 0078 03       		.uleb128 0x3
 18171 0079 0E       		.uleb128 0xe
 18172 007a 0B       		.uleb128 0xb
 18173 007b 05       		.uleb128 0x5
 18174 007c 3A       		.uleb128 0x3a
 18175 007d 0B       		.uleb128 0xb
 18176 007e 3B       		.uleb128 0x3b
 18177 007f 05       		.uleb128 0x5
 18178 0080 01       		.uleb128 0x1
 18179 0081 13       		.uleb128 0x13
 18180 0082 00       		.byte	0
 18181 0083 00       		.byte	0
 18182 0084 0D       		.uleb128 0xd
 18183 0085 0D       		.uleb128 0xd
 18184 0086 00       		.byte	0
 18185 0087 03       		.uleb128 0x3
 18186 0088 08       		.uleb128 0x8
 18187 0089 3A       		.uleb128 0x3a
 18188 008a 0B       		.uleb128 0xb
 18189 008b 3B       		.uleb128 0x3b
 18190 008c 05       		.uleb128 0x5
 18191 008d 49       		.uleb128 0x49
 18192 008e 13       		.uleb128 0x13
 18193 008f 38       		.uleb128 0x38
 18194 0090 0B       		.uleb128 0xb
 18195 0091 00       		.byte	0
 18196 0092 00       		.byte	0
 18197 0093 0E       		.uleb128 0xe
 18198 0094 0D       		.uleb128 0xd
 18199 0095 00       		.byte	0
 18200 0096 03       		.uleb128 0x3
 18201 0097 0E       		.uleb128 0xe
 18202 0098 3A       		.uleb128 0x3a
 18203 0099 0B       		.uleb128 0xb
 18204 009a 3B       		.uleb128 0x3b
 18205 009b 05       		.uleb128 0x5
 18206 009c 49       		.uleb128 0x49
 18207 009d 13       		.uleb128 0x13
 18208 009e 38       		.uleb128 0x38
 18209 009f 0B       		.uleb128 0xb
 18210 00a0 00       		.byte	0
 18211 00a1 00       		.byte	0
 18212 00a2 0F       		.uleb128 0xf
 18213 00a3 0D       		.uleb128 0xd
 18214 00a4 00       		.byte	0
 18215 00a5 03       		.uleb128 0x3
 18216 00a6 0E       		.uleb128 0xe
 18217 00a7 3A       		.uleb128 0x3a
 18218 00a8 0B       		.uleb128 0xb
 18219 00a9 3B       		.uleb128 0x3b
 18220 00aa 05       		.uleb128 0x5
 18221 00ab 49       		.uleb128 0x49
 18222 00ac 13       		.uleb128 0x13
 18223 00ad 38       		.uleb128 0x38
 18224 00ae 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 526


 18225 00af 00       		.byte	0
 18226 00b0 00       		.byte	0
 18227 00b1 10       		.uleb128 0x10
 18228 00b2 0D       		.uleb128 0xd
 18229 00b3 00       		.byte	0
 18230 00b4 03       		.uleb128 0x3
 18231 00b5 08       		.uleb128 0x8
 18232 00b6 3A       		.uleb128 0x3a
 18233 00b7 0B       		.uleb128 0xb
 18234 00b8 3B       		.uleb128 0x3b
 18235 00b9 05       		.uleb128 0x5
 18236 00ba 49       		.uleb128 0x49
 18237 00bb 13       		.uleb128 0x13
 18238 00bc 38       		.uleb128 0x38
 18239 00bd 05       		.uleb128 0x5
 18240 00be 00       		.byte	0
 18241 00bf 00       		.byte	0
 18242 00c0 11       		.uleb128 0x11
 18243 00c1 13       		.uleb128 0x13
 18244 00c2 01       		.byte	0x1
 18245 00c3 03       		.uleb128 0x3
 18246 00c4 0E       		.uleb128 0xe
 18247 00c5 0B       		.uleb128 0xb
 18248 00c6 0B       		.uleb128 0xb
 18249 00c7 3A       		.uleb128 0x3a
 18250 00c8 0B       		.uleb128 0xb
 18251 00c9 3B       		.uleb128 0x3b
 18252 00ca 05       		.uleb128 0x5
 18253 00cb 01       		.uleb128 0x1
 18254 00cc 13       		.uleb128 0x13
 18255 00cd 00       		.byte	0
 18256 00ce 00       		.byte	0
 18257 00cf 12       		.uleb128 0x12
 18258 00d0 13       		.uleb128 0x13
 18259 00d1 01       		.byte	0x1
 18260 00d2 03       		.uleb128 0x3
 18261 00d3 0E       		.uleb128 0xe
 18262 00d4 0B       		.uleb128 0xb
 18263 00d5 0B       		.uleb128 0xb
 18264 00d6 3A       		.uleb128 0x3a
 18265 00d7 0B       		.uleb128 0xb
 18266 00d8 3B       		.uleb128 0x3b
 18267 00d9 0B       		.uleb128 0xb
 18268 00da 01       		.uleb128 0x1
 18269 00db 13       		.uleb128 0x13
 18270 00dc 00       		.byte	0
 18271 00dd 00       		.byte	0
 18272 00de 13       		.uleb128 0x13
 18273 00df 0D       		.uleb128 0xd
 18274 00e0 00       		.byte	0
 18275 00e1 03       		.uleb128 0x3
 18276 00e2 0E       		.uleb128 0xe
 18277 00e3 3A       		.uleb128 0x3a
 18278 00e4 0B       		.uleb128 0xb
 18279 00e5 3B       		.uleb128 0x3b
 18280 00e6 0B       		.uleb128 0xb
 18281 00e7 49       		.uleb128 0x49
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 527


 18282 00e8 13       		.uleb128 0x13
 18283 00e9 38       		.uleb128 0x38
 18284 00ea 0B       		.uleb128 0xb
 18285 00eb 00       		.byte	0
 18286 00ec 00       		.byte	0
 18287 00ed 14       		.uleb128 0x14
 18288 00ee 0D       		.uleb128 0xd
 18289 00ef 00       		.byte	0
 18290 00f0 03       		.uleb128 0x3
 18291 00f1 08       		.uleb128 0x8
 18292 00f2 3A       		.uleb128 0x3a
 18293 00f3 0B       		.uleb128 0xb
 18294 00f4 3B       		.uleb128 0x3b
 18295 00f5 0B       		.uleb128 0xb
 18296 00f6 49       		.uleb128 0x49
 18297 00f7 13       		.uleb128 0x13
 18298 00f8 38       		.uleb128 0x38
 18299 00f9 0B       		.uleb128 0xb
 18300 00fa 00       		.byte	0
 18301 00fb 00       		.byte	0
 18302 00fc 15       		.uleb128 0x15
 18303 00fd 04       		.uleb128 0x4
 18304 00fe 01       		.byte	0x1
 18305 00ff 03       		.uleb128 0x3
 18306 0100 0E       		.uleb128 0xe
 18307 0101 0B       		.uleb128 0xb
 18308 0102 0B       		.uleb128 0xb
 18309 0103 3A       		.uleb128 0x3a
 18310 0104 0B       		.uleb128 0xb
 18311 0105 3B       		.uleb128 0x3b
 18312 0106 0B       		.uleb128 0xb
 18313 0107 01       		.uleb128 0x1
 18314 0108 13       		.uleb128 0x13
 18315 0109 00       		.byte	0
 18316 010a 00       		.byte	0
 18317 010b 16       		.uleb128 0x16
 18318 010c 16       		.uleb128 0x16
 18319 010d 00       		.byte	0
 18320 010e 03       		.uleb128 0x3
 18321 010f 0E       		.uleb128 0xe
 18322 0110 3A       		.uleb128 0x3a
 18323 0111 0B       		.uleb128 0xb
 18324 0112 3B       		.uleb128 0x3b
 18325 0113 05       		.uleb128 0x5
 18326 0114 49       		.uleb128 0x49
 18327 0115 13       		.uleb128 0x13
 18328 0116 00       		.byte	0
 18329 0117 00       		.byte	0
 18330 0118 17       		.uleb128 0x17
 18331 0119 15       		.uleb128 0x15
 18332 011a 01       		.byte	0x1
 18333 011b 27       		.uleb128 0x27
 18334 011c 19       		.uleb128 0x19
 18335 011d 49       		.uleb128 0x49
 18336 011e 13       		.uleb128 0x13
 18337 011f 01       		.uleb128 0x1
 18338 0120 13       		.uleb128 0x13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 528


 18339 0121 00       		.byte	0
 18340 0122 00       		.byte	0
 18341 0123 18       		.uleb128 0x18
 18342 0124 05       		.uleb128 0x5
 18343 0125 00       		.byte	0
 18344 0126 49       		.uleb128 0x49
 18345 0127 13       		.uleb128 0x13
 18346 0128 00       		.byte	0
 18347 0129 00       		.byte	0
 18348 012a 19       		.uleb128 0x19
 18349 012b 15       		.uleb128 0x15
 18350 012c 01       		.byte	0x1
 18351 012d 27       		.uleb128 0x27
 18352 012e 19       		.uleb128 0x19
 18353 012f 01       		.uleb128 0x1
 18354 0130 13       		.uleb128 0x13
 18355 0131 00       		.byte	0
 18356 0132 00       		.byte	0
 18357 0133 1A       		.uleb128 0x1a
 18358 0134 01       		.uleb128 0x1
 18359 0135 01       		.byte	0x1
 18360 0136 49       		.uleb128 0x49
 18361 0137 13       		.uleb128 0x13
 18362 0138 01       		.uleb128 0x1
 18363 0139 13       		.uleb128 0x13
 18364 013a 00       		.byte	0
 18365 013b 00       		.byte	0
 18366 013c 1B       		.uleb128 0x1b
 18367 013d 21       		.uleb128 0x21
 18368 013e 00       		.byte	0
 18369 013f 49       		.uleb128 0x49
 18370 0140 13       		.uleb128 0x13
 18371 0141 2F       		.uleb128 0x2f
 18372 0142 0B       		.uleb128 0xb
 18373 0143 00       		.byte	0
 18374 0144 00       		.byte	0
 18375 0145 1C       		.uleb128 0x1c
 18376 0146 13       		.uleb128 0x13
 18377 0147 00       		.byte	0
 18378 0148 03       		.uleb128 0x3
 18379 0149 0E       		.uleb128 0xe
 18380 014a 3C       		.uleb128 0x3c
 18381 014b 19       		.uleb128 0x19
 18382 014c 00       		.byte	0
 18383 014d 00       		.byte	0
 18384 014e 1D       		.uleb128 0x1d
 18385 014f 28       		.uleb128 0x28
 18386 0150 00       		.byte	0
 18387 0151 03       		.uleb128 0x3
 18388 0152 08       		.uleb128 0x8
 18389 0153 1C       		.uleb128 0x1c
 18390 0154 0D       		.uleb128 0xd
 18391 0155 00       		.byte	0
 18392 0156 00       		.byte	0
 18393 0157 1E       		.uleb128 0x1e
 18394 0158 04       		.uleb128 0x4
 18395 0159 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 529


 18396 015a 03       		.uleb128 0x3
 18397 015b 0E       		.uleb128 0xe
 18398 015c 0B       		.uleb128 0xb
 18399 015d 0B       		.uleb128 0xb
 18400 015e 3A       		.uleb128 0x3a
 18401 015f 0B       		.uleb128 0xb
 18402 0160 3B       		.uleb128 0x3b
 18403 0161 05       		.uleb128 0x5
 18404 0162 01       		.uleb128 0x1
 18405 0163 13       		.uleb128 0x13
 18406 0164 00       		.byte	0
 18407 0165 00       		.byte	0
 18408 0166 1F       		.uleb128 0x1f
 18409 0167 13       		.uleb128 0x13
 18410 0168 01       		.byte	0x1
 18411 0169 0B       		.uleb128 0xb
 18412 016a 0B       		.uleb128 0xb
 18413 016b 3A       		.uleb128 0x3a
 18414 016c 0B       		.uleb128 0xb
 18415 016d 3B       		.uleb128 0x3b
 18416 016e 05       		.uleb128 0x5
 18417 016f 01       		.uleb128 0x1
 18418 0170 13       		.uleb128 0x13
 18419 0171 00       		.byte	0
 18420 0172 00       		.byte	0
 18421 0173 20       		.uleb128 0x20
 18422 0174 21       		.uleb128 0x21
 18423 0175 00       		.byte	0
 18424 0176 49       		.uleb128 0x49
 18425 0177 13       		.uleb128 0x13
 18426 0178 2F       		.uleb128 0x2f
 18427 0179 05       		.uleb128 0x5
 18428 017a 00       		.byte	0
 18429 017b 00       		.byte	0
 18430 017c 21       		.uleb128 0x21
 18431 017d 0D       		.uleb128 0xd
 18432 017e 00       		.byte	0
 18433 017f 03       		.uleb128 0x3
 18434 0180 0E       		.uleb128 0xe
 18435 0181 3A       		.uleb128 0x3a
 18436 0182 0B       		.uleb128 0xb
 18437 0183 3B       		.uleb128 0x3b
 18438 0184 05       		.uleb128 0x5
 18439 0185 49       		.uleb128 0x49
 18440 0186 13       		.uleb128 0x13
 18441 0187 0B       		.uleb128 0xb
 18442 0188 0B       		.uleb128 0xb
 18443 0189 0D       		.uleb128 0xd
 18444 018a 0B       		.uleb128 0xb
 18445 018b 0C       		.uleb128 0xc
 18446 018c 0B       		.uleb128 0xb
 18447 018d 38       		.uleb128 0x38
 18448 018e 0B       		.uleb128 0xb
 18449 018f 00       		.byte	0
 18450 0190 00       		.byte	0
 18451 0191 22       		.uleb128 0x22
 18452 0192 0D       		.uleb128 0xd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 530


 18453 0193 00       		.byte	0
 18454 0194 03       		.uleb128 0x3
 18455 0195 08       		.uleb128 0x8
 18456 0196 3A       		.uleb128 0x3a
 18457 0197 0B       		.uleb128 0xb
 18458 0198 3B       		.uleb128 0x3b
 18459 0199 05       		.uleb128 0x5
 18460 019a 49       		.uleb128 0x49
 18461 019b 13       		.uleb128 0x13
 18462 019c 0B       		.uleb128 0xb
 18463 019d 0B       		.uleb128 0xb
 18464 019e 0D       		.uleb128 0xd
 18465 019f 0B       		.uleb128 0xb
 18466 01a0 0C       		.uleb128 0xc
 18467 01a1 0B       		.uleb128 0xb
 18468 01a2 38       		.uleb128 0x38
 18469 01a3 0B       		.uleb128 0xb
 18470 01a4 00       		.byte	0
 18471 01a5 00       		.byte	0
 18472 01a6 23       		.uleb128 0x23
 18473 01a7 2E       		.uleb128 0x2e
 18474 01a8 01       		.byte	0x1
 18475 01a9 03       		.uleb128 0x3
 18476 01aa 08       		.uleb128 0x8
 18477 01ab 3A       		.uleb128 0x3a
 18478 01ac 0B       		.uleb128 0xb
 18479 01ad 3B       		.uleb128 0x3b
 18480 01ae 0B       		.uleb128 0xb
 18481 01af 27       		.uleb128 0x27
 18482 01b0 19       		.uleb128 0x19
 18483 01b1 49       		.uleb128 0x49
 18484 01b2 13       		.uleb128 0x13
 18485 01b3 20       		.uleb128 0x20
 18486 01b4 0B       		.uleb128 0xb
 18487 01b5 01       		.uleb128 0x1
 18488 01b6 13       		.uleb128 0x13
 18489 01b7 00       		.byte	0
 18490 01b8 00       		.byte	0
 18491 01b9 24       		.uleb128 0x24
 18492 01ba 05       		.uleb128 0x5
 18493 01bb 00       		.byte	0
 18494 01bc 03       		.uleb128 0x3
 18495 01bd 08       		.uleb128 0x8
 18496 01be 3A       		.uleb128 0x3a
 18497 01bf 0B       		.uleb128 0xb
 18498 01c0 3B       		.uleb128 0x3b
 18499 01c1 0B       		.uleb128 0xb
 18500 01c2 49       		.uleb128 0x49
 18501 01c3 13       		.uleb128 0x13
 18502 01c4 00       		.byte	0
 18503 01c5 00       		.byte	0
 18504 01c6 25       		.uleb128 0x25
 18505 01c7 2E       		.uleb128 0x2e
 18506 01c8 01       		.byte	0x1
 18507 01c9 3F       		.uleb128 0x3f
 18508 01ca 19       		.uleb128 0x19
 18509 01cb 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 531


 18510 01cc 0E       		.uleb128 0xe
 18511 01cd 3A       		.uleb128 0x3a
 18512 01ce 0B       		.uleb128 0xb
 18513 01cf 3B       		.uleb128 0x3b
 18514 01d0 05       		.uleb128 0x5
 18515 01d1 27       		.uleb128 0x27
 18516 01d2 19       		.uleb128 0x19
 18517 01d3 49       		.uleb128 0x49
 18518 01d4 13       		.uleb128 0x13
 18519 01d5 20       		.uleb128 0x20
 18520 01d6 0B       		.uleb128 0xb
 18521 01d7 01       		.uleb128 0x1
 18522 01d8 13       		.uleb128 0x13
 18523 01d9 00       		.byte	0
 18524 01da 00       		.byte	0
 18525 01db 26       		.uleb128 0x26
 18526 01dc 05       		.uleb128 0x5
 18527 01dd 00       		.byte	0
 18528 01de 03       		.uleb128 0x3
 18529 01df 08       		.uleb128 0x8
 18530 01e0 3A       		.uleb128 0x3a
 18531 01e1 0B       		.uleb128 0xb
 18532 01e2 3B       		.uleb128 0x3b
 18533 01e3 05       		.uleb128 0x5
 18534 01e4 49       		.uleb128 0x49
 18535 01e5 13       		.uleb128 0x13
 18536 01e6 00       		.byte	0
 18537 01e7 00       		.byte	0
 18538 01e8 27       		.uleb128 0x27
 18539 01e9 05       		.uleb128 0x5
 18540 01ea 00       		.byte	0
 18541 01eb 03       		.uleb128 0x3
 18542 01ec 0E       		.uleb128 0xe
 18543 01ed 3A       		.uleb128 0x3a
 18544 01ee 0B       		.uleb128 0xb
 18545 01ef 3B       		.uleb128 0x3b
 18546 01f0 05       		.uleb128 0x5
 18547 01f1 49       		.uleb128 0x49
 18548 01f2 13       		.uleb128 0x13
 18549 01f3 00       		.byte	0
 18550 01f4 00       		.byte	0
 18551 01f5 28       		.uleb128 0x28
 18552 01f6 2E       		.uleb128 0x2e
 18553 01f7 00       		.byte	0
 18554 01f8 03       		.uleb128 0x3
 18555 01f9 0E       		.uleb128 0xe
 18556 01fa 3A       		.uleb128 0x3a
 18557 01fb 0B       		.uleb128 0xb
 18558 01fc 3B       		.uleb128 0x3b
 18559 01fd 05       		.uleb128 0x5
 18560 01fe 27       		.uleb128 0x27
 18561 01ff 19       		.uleb128 0x19
 18562 0200 49       		.uleb128 0x49
 18563 0201 13       		.uleb128 0x13
 18564 0202 20       		.uleb128 0x20
 18565 0203 0B       		.uleb128 0xb
 18566 0204 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 532


 18567 0205 00       		.byte	0
 18568 0206 29       		.uleb128 0x29
 18569 0207 2E       		.uleb128 0x2e
 18570 0208 01       		.byte	0x1
 18571 0209 03       		.uleb128 0x3
 18572 020a 0E       		.uleb128 0xe
 18573 020b 3A       		.uleb128 0x3a
 18574 020c 0B       		.uleb128 0xb
 18575 020d 3B       		.uleb128 0x3b
 18576 020e 05       		.uleb128 0x5
 18577 020f 27       		.uleb128 0x27
 18578 0210 19       		.uleb128 0x19
 18579 0211 49       		.uleb128 0x49
 18580 0212 13       		.uleb128 0x13
 18581 0213 20       		.uleb128 0x20
 18582 0214 0B       		.uleb128 0xb
 18583 0215 01       		.uleb128 0x1
 18584 0216 13       		.uleb128 0x13
 18585 0217 00       		.byte	0
 18586 0218 00       		.byte	0
 18587 0219 2A       		.uleb128 0x2a
 18588 021a 34       		.uleb128 0x34
 18589 021b 00       		.byte	0
 18590 021c 03       		.uleb128 0x3
 18591 021d 0E       		.uleb128 0xe
 18592 021e 3A       		.uleb128 0x3a
 18593 021f 0B       		.uleb128 0xb
 18594 0220 3B       		.uleb128 0x3b
 18595 0221 05       		.uleb128 0x5
 18596 0222 49       		.uleb128 0x49
 18597 0223 13       		.uleb128 0x13
 18598 0224 00       		.byte	0
 18599 0225 00       		.byte	0
 18600 0226 2B       		.uleb128 0x2b
 18601 0227 34       		.uleb128 0x34
 18602 0228 00       		.byte	0
 18603 0229 03       		.uleb128 0x3
 18604 022a 08       		.uleb128 0x8
 18605 022b 3A       		.uleb128 0x3a
 18606 022c 0B       		.uleb128 0xb
 18607 022d 3B       		.uleb128 0x3b
 18608 022e 05       		.uleb128 0x5
 18609 022f 49       		.uleb128 0x49
 18610 0230 13       		.uleb128 0x13
 18611 0231 00       		.byte	0
 18612 0232 00       		.byte	0
 18613 0233 2C       		.uleb128 0x2c
 18614 0234 0B       		.uleb128 0xb
 18615 0235 01       		.byte	0x1
 18616 0236 00       		.byte	0
 18617 0237 00       		.byte	0
 18618 0238 2D       		.uleb128 0x2d
 18619 0239 2E       		.uleb128 0x2e
 18620 023a 01       		.byte	0x1
 18621 023b 03       		.uleb128 0x3
 18622 023c 0E       		.uleb128 0xe
 18623 023d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 533


 18624 023e 0B       		.uleb128 0xb
 18625 023f 3B       		.uleb128 0x3b
 18626 0240 05       		.uleb128 0x5
 18627 0241 27       		.uleb128 0x27
 18628 0242 19       		.uleb128 0x19
 18629 0243 49       		.uleb128 0x49
 18630 0244 13       		.uleb128 0x13
 18631 0245 11       		.uleb128 0x11
 18632 0246 01       		.uleb128 0x1
 18633 0247 12       		.uleb128 0x12
 18634 0248 06       		.uleb128 0x6
 18635 0249 40       		.uleb128 0x40
 18636 024a 18       		.uleb128 0x18
 18637 024b 9742     		.uleb128 0x2117
 18638 024d 19       		.uleb128 0x19
 18639 024e 01       		.uleb128 0x1
 18640 024f 13       		.uleb128 0x13
 18641 0250 00       		.byte	0
 18642 0251 00       		.byte	0
 18643 0252 2E       		.uleb128 0x2e
 18644 0253 05       		.uleb128 0x5
 18645 0254 00       		.byte	0
 18646 0255 03       		.uleb128 0x3
 18647 0256 0E       		.uleb128 0xe
 18648 0257 3A       		.uleb128 0x3a
 18649 0258 0B       		.uleb128 0xb
 18650 0259 3B       		.uleb128 0x3b
 18651 025a 05       		.uleb128 0x5
 18652 025b 49       		.uleb128 0x49
 18653 025c 13       		.uleb128 0x13
 18654 025d 02       		.uleb128 0x2
 18655 025e 17       		.uleb128 0x17
 18656 025f 00       		.byte	0
 18657 0260 00       		.byte	0
 18658 0261 2F       		.uleb128 0x2f
 18659 0262 2E       		.uleb128 0x2e
 18660 0263 01       		.byte	0x1
 18661 0264 3F       		.uleb128 0x3f
 18662 0265 19       		.uleb128 0x19
 18663 0266 03       		.uleb128 0x3
 18664 0267 0E       		.uleb128 0xe
 18665 0268 3A       		.uleb128 0x3a
 18666 0269 0B       		.uleb128 0xb
 18667 026a 3B       		.uleb128 0x3b
 18668 026b 0B       		.uleb128 0xb
 18669 026c 27       		.uleb128 0x27
 18670 026d 19       		.uleb128 0x19
 18671 026e 49       		.uleb128 0x49
 18672 026f 13       		.uleb128 0x13
 18673 0270 11       		.uleb128 0x11
 18674 0271 01       		.uleb128 0x1
 18675 0272 12       		.uleb128 0x12
 18676 0273 06       		.uleb128 0x6
 18677 0274 40       		.uleb128 0x40
 18678 0275 18       		.uleb128 0x18
 18679 0276 9742     		.uleb128 0x2117
 18680 0278 19       		.uleb128 0x19
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 534


 18681 0279 01       		.uleb128 0x1
 18682 027a 13       		.uleb128 0x13
 18683 027b 00       		.byte	0
 18684 027c 00       		.byte	0
 18685 027d 30       		.uleb128 0x30
 18686 027e 05       		.uleb128 0x5
 18687 027f 00       		.byte	0
 18688 0280 03       		.uleb128 0x3
 18689 0281 08       		.uleb128 0x8
 18690 0282 3A       		.uleb128 0x3a
 18691 0283 0B       		.uleb128 0xb
 18692 0284 3B       		.uleb128 0x3b
 18693 0285 0B       		.uleb128 0xb
 18694 0286 49       		.uleb128 0x49
 18695 0287 13       		.uleb128 0x13
 18696 0288 02       		.uleb128 0x2
 18697 0289 17       		.uleb128 0x17
 18698 028a 00       		.byte	0
 18699 028b 00       		.byte	0
 18700 028c 31       		.uleb128 0x31
 18701 028d 34       		.uleb128 0x34
 18702 028e 00       		.byte	0
 18703 028f 03       		.uleb128 0x3
 18704 0290 0E       		.uleb128 0xe
 18705 0291 3A       		.uleb128 0x3a
 18706 0292 0B       		.uleb128 0xb
 18707 0293 3B       		.uleb128 0x3b
 18708 0294 0B       		.uleb128 0xb
 18709 0295 49       		.uleb128 0x49
 18710 0296 13       		.uleb128 0x13
 18711 0297 02       		.uleb128 0x2
 18712 0298 17       		.uleb128 0x17
 18713 0299 00       		.byte	0
 18714 029a 00       		.byte	0
 18715 029b 32       		.uleb128 0x32
 18716 029c 898201   		.uleb128 0x4109
 18717 029f 01       		.byte	0x1
 18718 02a0 11       		.uleb128 0x11
 18719 02a1 01       		.uleb128 0x1
 18720 02a2 31       		.uleb128 0x31
 18721 02a3 13       		.uleb128 0x13
 18722 02a4 01       		.uleb128 0x1
 18723 02a5 13       		.uleb128 0x13
 18724 02a6 00       		.byte	0
 18725 02a7 00       		.byte	0
 18726 02a8 33       		.uleb128 0x33
 18727 02a9 8A8201   		.uleb128 0x410a
 18728 02ac 00       		.byte	0
 18729 02ad 02       		.uleb128 0x2
 18730 02ae 18       		.uleb128 0x18
 18731 02af 9142     		.uleb128 0x2111
 18732 02b1 18       		.uleb128 0x18
 18733 02b2 00       		.byte	0
 18734 02b3 00       		.byte	0
 18735 02b4 34       		.uleb128 0x34
 18736 02b5 898201   		.uleb128 0x4109
 18737 02b8 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 535


 18738 02b9 11       		.uleb128 0x11
 18739 02ba 01       		.uleb128 0x1
 18740 02bb 31       		.uleb128 0x31
 18741 02bc 13       		.uleb128 0x13
 18742 02bd 00       		.byte	0
 18743 02be 00       		.byte	0
 18744 02bf 35       		.uleb128 0x35
 18745 02c0 2E       		.uleb128 0x2e
 18746 02c1 01       		.byte	0x1
 18747 02c2 3F       		.uleb128 0x3f
 18748 02c3 19       		.uleb128 0x19
 18749 02c4 03       		.uleb128 0x3
 18750 02c5 0E       		.uleb128 0xe
 18751 02c6 3A       		.uleb128 0x3a
 18752 02c7 0B       		.uleb128 0xb
 18753 02c8 3B       		.uleb128 0x3b
 18754 02c9 0B       		.uleb128 0xb
 18755 02ca 27       		.uleb128 0x27
 18756 02cb 19       		.uleb128 0x19
 18757 02cc 11       		.uleb128 0x11
 18758 02cd 01       		.uleb128 0x1
 18759 02ce 12       		.uleb128 0x12
 18760 02cf 06       		.uleb128 0x6
 18761 02d0 40       		.uleb128 0x40
 18762 02d1 18       		.uleb128 0x18
 18763 02d2 9742     		.uleb128 0x2117
 18764 02d4 19       		.uleb128 0x19
 18765 02d5 01       		.uleb128 0x1
 18766 02d6 13       		.uleb128 0x13
 18767 02d7 00       		.byte	0
 18768 02d8 00       		.byte	0
 18769 02d9 36       		.uleb128 0x36
 18770 02da 34       		.uleb128 0x34
 18771 02db 00       		.byte	0
 18772 02dc 03       		.uleb128 0x3
 18773 02dd 08       		.uleb128 0x8
 18774 02de 3A       		.uleb128 0x3a
 18775 02df 0B       		.uleb128 0xb
 18776 02e0 3B       		.uleb128 0x3b
 18777 02e1 0B       		.uleb128 0xb
 18778 02e2 49       		.uleb128 0x49
 18779 02e3 13       		.uleb128 0x13
 18780 02e4 02       		.uleb128 0x2
 18781 02e5 17       		.uleb128 0x17
 18782 02e6 00       		.byte	0
 18783 02e7 00       		.byte	0
 18784 02e8 37       		.uleb128 0x37
 18785 02e9 05       		.uleb128 0x5
 18786 02ea 00       		.byte	0
 18787 02eb 03       		.uleb128 0x3
 18788 02ec 08       		.uleb128 0x8
 18789 02ed 3A       		.uleb128 0x3a
 18790 02ee 0B       		.uleb128 0xb
 18791 02ef 3B       		.uleb128 0x3b
 18792 02f0 0B       		.uleb128 0xb
 18793 02f1 49       		.uleb128 0x49
 18794 02f2 13       		.uleb128 0x13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 536


 18795 02f3 02       		.uleb128 0x2
 18796 02f4 18       		.uleb128 0x18
 18797 02f5 00       		.byte	0
 18798 02f6 00       		.byte	0
 18799 02f7 38       		.uleb128 0x38
 18800 02f8 2E       		.uleb128 0x2e
 18801 02f9 01       		.byte	0x1
 18802 02fa 3F       		.uleb128 0x3f
 18803 02fb 19       		.uleb128 0x19
 18804 02fc 03       		.uleb128 0x3
 18805 02fd 0E       		.uleb128 0xe
 18806 02fe 3A       		.uleb128 0x3a
 18807 02ff 0B       		.uleb128 0xb
 18808 0300 3B       		.uleb128 0x3b
 18809 0301 05       		.uleb128 0x5
 18810 0302 27       		.uleb128 0x27
 18811 0303 19       		.uleb128 0x19
 18812 0304 49       		.uleb128 0x49
 18813 0305 13       		.uleb128 0x13
 18814 0306 11       		.uleb128 0x11
 18815 0307 01       		.uleb128 0x1
 18816 0308 12       		.uleb128 0x12
 18817 0309 06       		.uleb128 0x6
 18818 030a 40       		.uleb128 0x40
 18819 030b 18       		.uleb128 0x18
 18820 030c 9742     		.uleb128 0x2117
 18821 030e 19       		.uleb128 0x19
 18822 030f 01       		.uleb128 0x1
 18823 0310 13       		.uleb128 0x13
 18824 0311 00       		.byte	0
 18825 0312 00       		.byte	0
 18826 0313 39       		.uleb128 0x39
 18827 0314 34       		.uleb128 0x34
 18828 0315 00       		.byte	0
 18829 0316 03       		.uleb128 0x3
 18830 0317 0E       		.uleb128 0xe
 18831 0318 3A       		.uleb128 0x3a
 18832 0319 0B       		.uleb128 0xb
 18833 031a 3B       		.uleb128 0x3b
 18834 031b 05       		.uleb128 0x5
 18835 031c 49       		.uleb128 0x49
 18836 031d 13       		.uleb128 0x13
 18837 031e 02       		.uleb128 0x2
 18838 031f 17       		.uleb128 0x17
 18839 0320 00       		.byte	0
 18840 0321 00       		.byte	0
 18841 0322 3A       		.uleb128 0x3a
 18842 0323 898201   		.uleb128 0x4109
 18843 0326 00       		.byte	0
 18844 0327 11       		.uleb128 0x11
 18845 0328 01       		.uleb128 0x1
 18846 0329 31       		.uleb128 0x31
 18847 032a 13       		.uleb128 0x13
 18848 032b 00       		.byte	0
 18849 032c 00       		.byte	0
 18850 032d 3B       		.uleb128 0x3b
 18851 032e 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 537


 18852 032f 00       		.byte	0
 18853 0330 03       		.uleb128 0x3
 18854 0331 08       		.uleb128 0x8
 18855 0332 3A       		.uleb128 0x3a
 18856 0333 0B       		.uleb128 0xb
 18857 0334 3B       		.uleb128 0x3b
 18858 0335 05       		.uleb128 0x5
 18859 0336 49       		.uleb128 0x49
 18860 0337 13       		.uleb128 0x13
 18861 0338 02       		.uleb128 0x2
 18862 0339 17       		.uleb128 0x17
 18863 033a 00       		.byte	0
 18864 033b 00       		.byte	0
 18865 033c 3C       		.uleb128 0x3c
 18866 033d 34       		.uleb128 0x34
 18867 033e 00       		.byte	0
 18868 033f 03       		.uleb128 0x3
 18869 0340 0E       		.uleb128 0xe
 18870 0341 3A       		.uleb128 0x3a
 18871 0342 0B       		.uleb128 0xb
 18872 0343 3B       		.uleb128 0x3b
 18873 0344 05       		.uleb128 0x5
 18874 0345 49       		.uleb128 0x49
 18875 0346 13       		.uleb128 0x13
 18876 0347 1C       		.uleb128 0x1c
 18877 0348 0B       		.uleb128 0xb
 18878 0349 00       		.byte	0
 18879 034a 00       		.byte	0
 18880 034b 3D       		.uleb128 0x3d
 18881 034c 34       		.uleb128 0x34
 18882 034d 00       		.byte	0
 18883 034e 03       		.uleb128 0x3
 18884 034f 08       		.uleb128 0x8
 18885 0350 3A       		.uleb128 0x3a
 18886 0351 0B       		.uleb128 0xb
 18887 0352 3B       		.uleb128 0x3b
 18888 0353 05       		.uleb128 0x5
 18889 0354 49       		.uleb128 0x49
 18890 0355 13       		.uleb128 0x13
 18891 0356 02       		.uleb128 0x2
 18892 0357 17       		.uleb128 0x17
 18893 0358 00       		.byte	0
 18894 0359 00       		.byte	0
 18895 035a 3E       		.uleb128 0x3e
 18896 035b 2E       		.uleb128 0x2e
 18897 035c 01       		.byte	0x1
 18898 035d 3F       		.uleb128 0x3f
 18899 035e 19       		.uleb128 0x19
 18900 035f 03       		.uleb128 0x3
 18901 0360 0E       		.uleb128 0xe
 18902 0361 3A       		.uleb128 0x3a
 18903 0362 0B       		.uleb128 0xb
 18904 0363 3B       		.uleb128 0x3b
 18905 0364 05       		.uleb128 0x5
 18906 0365 27       		.uleb128 0x27
 18907 0366 19       		.uleb128 0x19
 18908 0367 11       		.uleb128 0x11
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 538


 18909 0368 01       		.uleb128 0x1
 18910 0369 12       		.uleb128 0x12
 18911 036a 06       		.uleb128 0x6
 18912 036b 40       		.uleb128 0x40
 18913 036c 18       		.uleb128 0x18
 18914 036d 9742     		.uleb128 0x2117
 18915 036f 19       		.uleb128 0x19
 18916 0370 01       		.uleb128 0x1
 18917 0371 13       		.uleb128 0x13
 18918 0372 00       		.byte	0
 18919 0373 00       		.byte	0
 18920 0374 3F       		.uleb128 0x3f
 18921 0375 05       		.uleb128 0x5
 18922 0376 00       		.byte	0
 18923 0377 03       		.uleb128 0x3
 18924 0378 0E       		.uleb128 0xe
 18925 0379 3A       		.uleb128 0x3a
 18926 037a 0B       		.uleb128 0xb
 18927 037b 3B       		.uleb128 0x3b
 18928 037c 05       		.uleb128 0x5
 18929 037d 49       		.uleb128 0x49
 18930 037e 13       		.uleb128 0x13
 18931 037f 02       		.uleb128 0x2
 18932 0380 18       		.uleb128 0x18
 18933 0381 00       		.byte	0
 18934 0382 00       		.byte	0
 18935 0383 40       		.uleb128 0x40
 18936 0384 2E       		.uleb128 0x2e
 18937 0385 00       		.byte	0
 18938 0386 3F       		.uleb128 0x3f
 18939 0387 19       		.uleb128 0x19
 18940 0388 03       		.uleb128 0x3
 18941 0389 0E       		.uleb128 0xe
 18942 038a 3A       		.uleb128 0x3a
 18943 038b 0B       		.uleb128 0xb
 18944 038c 3B       		.uleb128 0x3b
 18945 038d 05       		.uleb128 0x5
 18946 038e 27       		.uleb128 0x27
 18947 038f 19       		.uleb128 0x19
 18948 0390 49       		.uleb128 0x49
 18949 0391 13       		.uleb128 0x13
 18950 0392 11       		.uleb128 0x11
 18951 0393 01       		.uleb128 0x1
 18952 0394 12       		.uleb128 0x12
 18953 0395 06       		.uleb128 0x6
 18954 0396 40       		.uleb128 0x40
 18955 0397 18       		.uleb128 0x18
 18956 0398 9742     		.uleb128 0x2117
 18957 039a 19       		.uleb128 0x19
 18958 039b 00       		.byte	0
 18959 039c 00       		.byte	0
 18960 039d 41       		.uleb128 0x41
 18961 039e 1D       		.uleb128 0x1d
 18962 039f 01       		.byte	0x1
 18963 03a0 31       		.uleb128 0x31
 18964 03a1 13       		.uleb128 0x13
 18965 03a2 11       		.uleb128 0x11
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 539


 18966 03a3 01       		.uleb128 0x1
 18967 03a4 12       		.uleb128 0x12
 18968 03a5 06       		.uleb128 0x6
 18969 03a6 58       		.uleb128 0x58
 18970 03a7 0B       		.uleb128 0xb
 18971 03a8 59       		.uleb128 0x59
 18972 03a9 05       		.uleb128 0x5
 18973 03aa 00       		.byte	0
 18974 03ab 00       		.byte	0
 18975 03ac 42       		.uleb128 0x42
 18976 03ad 05       		.uleb128 0x5
 18977 03ae 00       		.byte	0
 18978 03af 31       		.uleb128 0x31
 18979 03b0 13       		.uleb128 0x13
 18980 03b1 1C       		.uleb128 0x1c
 18981 03b2 0B       		.uleb128 0xb
 18982 03b3 00       		.byte	0
 18983 03b4 00       		.byte	0
 18984 03b5 43       		.uleb128 0x43
 18985 03b6 05       		.uleb128 0x5
 18986 03b7 00       		.byte	0
 18987 03b8 31       		.uleb128 0x31
 18988 03b9 13       		.uleb128 0x13
 18989 03ba 02       		.uleb128 0x2
 18990 03bb 17       		.uleb128 0x17
 18991 03bc 00       		.byte	0
 18992 03bd 00       		.byte	0
 18993 03be 44       		.uleb128 0x44
 18994 03bf 0B       		.uleb128 0xb
 18995 03c0 01       		.byte	0x1
 18996 03c1 11       		.uleb128 0x11
 18997 03c2 01       		.uleb128 0x1
 18998 03c3 12       		.uleb128 0x12
 18999 03c4 06       		.uleb128 0x6
 19000 03c5 00       		.byte	0
 19001 03c6 00       		.byte	0
 19002 03c7 45       		.uleb128 0x45
 19003 03c8 34       		.uleb128 0x34
 19004 03c9 00       		.byte	0
 19005 03ca 31       		.uleb128 0x31
 19006 03cb 13       		.uleb128 0x13
 19007 03cc 02       		.uleb128 0x2
 19008 03cd 17       		.uleb128 0x17
 19009 03ce 00       		.byte	0
 19010 03cf 00       		.byte	0
 19011 03d0 46       		.uleb128 0x46
 19012 03d1 1D       		.uleb128 0x1d
 19013 03d2 01       		.byte	0x1
 19014 03d3 31       		.uleb128 0x31
 19015 03d4 13       		.uleb128 0x13
 19016 03d5 11       		.uleb128 0x11
 19017 03d6 01       		.uleb128 0x1
 19018 03d7 12       		.uleb128 0x12
 19019 03d8 06       		.uleb128 0x6
 19020 03d9 58       		.uleb128 0x58
 19021 03da 0B       		.uleb128 0xb
 19022 03db 59       		.uleb128 0x59
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 540


 19023 03dc 05       		.uleb128 0x5
 19024 03dd 01       		.uleb128 0x1
 19025 03de 13       		.uleb128 0x13
 19026 03df 00       		.byte	0
 19027 03e0 00       		.byte	0
 19028 03e1 47       		.uleb128 0x47
 19029 03e2 34       		.uleb128 0x34
 19030 03e3 00       		.byte	0
 19031 03e4 03       		.uleb128 0x3
 19032 03e5 08       		.uleb128 0x8
 19033 03e6 3A       		.uleb128 0x3a
 19034 03e7 0B       		.uleb128 0xb
 19035 03e8 3B       		.uleb128 0x3b
 19036 03e9 05       		.uleb128 0x5
 19037 03ea 49       		.uleb128 0x49
 19038 03eb 13       		.uleb128 0x13
 19039 03ec 02       		.uleb128 0x2
 19040 03ed 18       		.uleb128 0x18
 19041 03ee 00       		.byte	0
 19042 03ef 00       		.byte	0
 19043 03f0 48       		.uleb128 0x48
 19044 03f1 05       		.uleb128 0x5
 19045 03f2 00       		.byte	0
 19046 03f3 03       		.uleb128 0x3
 19047 03f4 08       		.uleb128 0x8
 19048 03f5 3A       		.uleb128 0x3a
 19049 03f6 0B       		.uleb128 0xb
 19050 03f7 3B       		.uleb128 0x3b
 19051 03f8 05       		.uleb128 0x5
 19052 03f9 49       		.uleb128 0x49
 19053 03fa 13       		.uleb128 0x13
 19054 03fb 02       		.uleb128 0x2
 19055 03fc 18       		.uleb128 0x18
 19056 03fd 00       		.byte	0
 19057 03fe 00       		.byte	0
 19058 03ff 49       		.uleb128 0x49
 19059 0400 0B       		.uleb128 0xb
 19060 0401 01       		.byte	0x1
 19061 0402 11       		.uleb128 0x11
 19062 0403 01       		.uleb128 0x1
 19063 0404 12       		.uleb128 0x12
 19064 0405 06       		.uleb128 0x6
 19065 0406 01       		.uleb128 0x1
 19066 0407 13       		.uleb128 0x13
 19067 0408 00       		.byte	0
 19068 0409 00       		.byte	0
 19069 040a 4A       		.uleb128 0x4a
 19070 040b 0B       		.uleb128 0xb
 19071 040c 01       		.byte	0x1
 19072 040d 55       		.uleb128 0x55
 19073 040e 17       		.uleb128 0x17
 19074 040f 00       		.byte	0
 19075 0410 00       		.byte	0
 19076 0411 4B       		.uleb128 0x4b
 19077 0412 2E       		.uleb128 0x2e
 19078 0413 01       		.byte	0x1
 19079 0414 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 541


 19080 0415 0E       		.uleb128 0xe
 19081 0416 3A       		.uleb128 0x3a
 19082 0417 0B       		.uleb128 0xb
 19083 0418 3B       		.uleb128 0x3b
 19084 0419 0B       		.uleb128 0xb
 19085 041a 27       		.uleb128 0x27
 19086 041b 19       		.uleb128 0x19
 19087 041c 20       		.uleb128 0x20
 19088 041d 0B       		.uleb128 0xb
 19089 041e 01       		.uleb128 0x1
 19090 041f 13       		.uleb128 0x13
 19091 0420 00       		.byte	0
 19092 0421 00       		.byte	0
 19093 0422 4C       		.uleb128 0x4c
 19094 0423 34       		.uleb128 0x34
 19095 0424 00       		.byte	0
 19096 0425 03       		.uleb128 0x3
 19097 0426 08       		.uleb128 0x8
 19098 0427 3A       		.uleb128 0x3a
 19099 0428 0B       		.uleb128 0xb
 19100 0429 3B       		.uleb128 0x3b
 19101 042a 0B       		.uleb128 0xb
 19102 042b 49       		.uleb128 0x49
 19103 042c 13       		.uleb128 0x13
 19104 042d 00       		.byte	0
 19105 042e 00       		.byte	0
 19106 042f 4D       		.uleb128 0x4d
 19107 0430 35       		.uleb128 0x35
 19108 0431 00       		.byte	0
 19109 0432 49       		.uleb128 0x49
 19110 0433 13       		.uleb128 0x13
 19111 0434 00       		.byte	0
 19112 0435 00       		.byte	0
 19113 0436 4E       		.uleb128 0x4e
 19114 0437 2E       		.uleb128 0x2e
 19115 0438 01       		.byte	0x1
 19116 0439 3F       		.uleb128 0x3f
 19117 043a 19       		.uleb128 0x19
 19118 043b 03       		.uleb128 0x3
 19119 043c 0E       		.uleb128 0xe
 19120 043d 3A       		.uleb128 0x3a
 19121 043e 0B       		.uleb128 0xb
 19122 043f 3B       		.uleb128 0x3b
 19123 0440 05       		.uleb128 0x5
 19124 0441 27       		.uleb128 0x27
 19125 0442 19       		.uleb128 0x19
 19126 0443 49       		.uleb128 0x49
 19127 0444 13       		.uleb128 0x13
 19128 0445 11       		.uleb128 0x11
 19129 0446 01       		.uleb128 0x1
 19130 0447 12       		.uleb128 0x12
 19131 0448 06       		.uleb128 0x6
 19132 0449 40       		.uleb128 0x40
 19133 044a 18       		.uleb128 0x18
 19134 044b 9642     		.uleb128 0x2116
 19135 044d 19       		.uleb128 0x19
 19136 044e 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 542


 19137 044f 13       		.uleb128 0x13
 19138 0450 00       		.byte	0
 19139 0451 00       		.byte	0
 19140 0452 4F       		.uleb128 0x4f
 19141 0453 1D       		.uleb128 0x1d
 19142 0454 01       		.byte	0x1
 19143 0455 31       		.uleb128 0x31
 19144 0456 13       		.uleb128 0x13
 19145 0457 52       		.uleb128 0x52
 19146 0458 01       		.uleb128 0x1
 19147 0459 55       		.uleb128 0x55
 19148 045a 17       		.uleb128 0x17
 19149 045b 58       		.uleb128 0x58
 19150 045c 0B       		.uleb128 0xb
 19151 045d 59       		.uleb128 0x59
 19152 045e 05       		.uleb128 0x5
 19153 045f 01       		.uleb128 0x1
 19154 0460 13       		.uleb128 0x13
 19155 0461 00       		.byte	0
 19156 0462 00       		.byte	0
 19157 0463 50       		.uleb128 0x50
 19158 0464 34       		.uleb128 0x34
 19159 0465 00       		.byte	0
 19160 0466 03       		.uleb128 0x3
 19161 0467 0E       		.uleb128 0xe
 19162 0468 3A       		.uleb128 0x3a
 19163 0469 0B       		.uleb128 0xb
 19164 046a 3B       		.uleb128 0x3b
 19165 046b 05       		.uleb128 0x5
 19166 046c 49       		.uleb128 0x49
 19167 046d 13       		.uleb128 0x13
 19168 046e 02       		.uleb128 0x2
 19169 046f 18       		.uleb128 0x18
 19170 0470 00       		.byte	0
 19171 0471 00       		.byte	0
 19172 0472 51       		.uleb128 0x51
 19173 0473 898201   		.uleb128 0x4109
 19174 0476 01       		.byte	0x1
 19175 0477 11       		.uleb128 0x11
 19176 0478 01       		.uleb128 0x1
 19177 0479 01       		.uleb128 0x1
 19178 047a 13       		.uleb128 0x13
 19179 047b 00       		.byte	0
 19180 047c 00       		.byte	0
 19181 047d 52       		.uleb128 0x52
 19182 047e 05       		.uleb128 0x5
 19183 047f 00       		.byte	0
 19184 0480 03       		.uleb128 0x3
 19185 0481 0E       		.uleb128 0xe
 19186 0482 3A       		.uleb128 0x3a
 19187 0483 0B       		.uleb128 0xb
 19188 0484 3B       		.uleb128 0x3b
 19189 0485 0B       		.uleb128 0xb
 19190 0486 49       		.uleb128 0x49
 19191 0487 13       		.uleb128 0x13
 19192 0488 02       		.uleb128 0x2
 19193 0489 17       		.uleb128 0x17
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 543


 19194 048a 00       		.byte	0
 19195 048b 00       		.byte	0
 19196 048c 53       		.uleb128 0x53
 19197 048d 0B       		.uleb128 0xb
 19198 048e 01       		.byte	0x1
 19199 048f 55       		.uleb128 0x55
 19200 0490 17       		.uleb128 0x17
 19201 0491 01       		.uleb128 0x1
 19202 0492 13       		.uleb128 0x13
 19203 0493 00       		.byte	0
 19204 0494 00       		.byte	0
 19205 0495 54       		.uleb128 0x54
 19206 0496 34       		.uleb128 0x34
 19207 0497 00       		.byte	0
 19208 0498 03       		.uleb128 0x3
 19209 0499 08       		.uleb128 0x8
 19210 049a 3A       		.uleb128 0x3a
 19211 049b 0B       		.uleb128 0xb
 19212 049c 3B       		.uleb128 0x3b
 19213 049d 05       		.uleb128 0x5
 19214 049e 49       		.uleb128 0x49
 19215 049f 13       		.uleb128 0x13
 19216 04a0 1C       		.uleb128 0x1c
 19217 04a1 0B       		.uleb128 0xb
 19218 04a2 00       		.byte	0
 19219 04a3 00       		.byte	0
 19220 04a4 55       		.uleb128 0x55
 19221 04a5 2E       		.uleb128 0x2e
 19222 04a6 00       		.byte	0
 19223 04a7 3F       		.uleb128 0x3f
 19224 04a8 19       		.uleb128 0x19
 19225 04a9 03       		.uleb128 0x3
 19226 04aa 0E       		.uleb128 0xe
 19227 04ab 3A       		.uleb128 0x3a
 19228 04ac 0B       		.uleb128 0xb
 19229 04ad 3B       		.uleb128 0x3b
 19230 04ae 05       		.uleb128 0x5
 19231 04af 27       		.uleb128 0x27
 19232 04b0 19       		.uleb128 0x19
 19233 04b1 11       		.uleb128 0x11
 19234 04b2 01       		.uleb128 0x1
 19235 04b3 12       		.uleb128 0x12
 19236 04b4 06       		.uleb128 0x6
 19237 04b5 40       		.uleb128 0x40
 19238 04b6 18       		.uleb128 0x18
 19239 04b7 9742     		.uleb128 0x2117
 19240 04b9 19       		.uleb128 0x19
 19241 04ba 00       		.byte	0
 19242 04bb 00       		.byte	0
 19243 04bc 56       		.uleb128 0x56
 19244 04bd 898201   		.uleb128 0x4109
 19245 04c0 01       		.byte	0x1
 19246 04c1 11       		.uleb128 0x11
 19247 04c2 01       		.uleb128 0x1
 19248 04c3 00       		.byte	0
 19249 04c4 00       		.byte	0
 19250 04c5 57       		.uleb128 0x57
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 544


 19251 04c6 2E       		.uleb128 0x2e
 19252 04c7 01       		.byte	0x1
 19253 04c8 31       		.uleb128 0x31
 19254 04c9 13       		.uleb128 0x13
 19255 04ca 11       		.uleb128 0x11
 19256 04cb 01       		.uleb128 0x1
 19257 04cc 12       		.uleb128 0x12
 19258 04cd 06       		.uleb128 0x6
 19259 04ce 40       		.uleb128 0x40
 19260 04cf 18       		.uleb128 0x18
 19261 04d0 9742     		.uleb128 0x2117
 19262 04d2 19       		.uleb128 0x19
 19263 04d3 01       		.uleb128 0x1
 19264 04d4 13       		.uleb128 0x13
 19265 04d5 00       		.byte	0
 19266 04d6 00       		.byte	0
 19267 04d7 58       		.uleb128 0x58
 19268 04d8 05       		.uleb128 0x5
 19269 04d9 00       		.byte	0
 19270 04da 31       		.uleb128 0x31
 19271 04db 13       		.uleb128 0x13
 19272 04dc 00       		.byte	0
 19273 04dd 00       		.byte	0
 19274 04de 59       		.uleb128 0x59
 19275 04df 34       		.uleb128 0x34
 19276 04e0 00       		.byte	0
 19277 04e1 31       		.uleb128 0x31
 19278 04e2 13       		.uleb128 0x13
 19279 04e3 02       		.uleb128 0x2
 19280 04e4 18       		.uleb128 0x18
 19281 04e5 00       		.byte	0
 19282 04e6 00       		.byte	0
 19283 04e7 5A       		.uleb128 0x5a
 19284 04e8 34       		.uleb128 0x34
 19285 04e9 00       		.byte	0
 19286 04ea 03       		.uleb128 0x3
 19287 04eb 0E       		.uleb128 0xe
 19288 04ec 3A       		.uleb128 0x3a
 19289 04ed 0B       		.uleb128 0xb
 19290 04ee 3B       		.uleb128 0x3b
 19291 04ef 05       		.uleb128 0x5
 19292 04f0 49       		.uleb128 0x49
 19293 04f1 13       		.uleb128 0x13
 19294 04f2 1C       		.uleb128 0x1c
 19295 04f3 0A       		.uleb128 0xa
 19296 04f4 00       		.byte	0
 19297 04f5 00       		.byte	0
 19298 04f6 5B       		.uleb128 0x5b
 19299 04f7 34       		.uleb128 0x34
 19300 04f8 00       		.byte	0
 19301 04f9 03       		.uleb128 0x3
 19302 04fa 0E       		.uleb128 0xe
 19303 04fb 3A       		.uleb128 0x3a
 19304 04fc 0B       		.uleb128 0xb
 19305 04fd 3B       		.uleb128 0x3b
 19306 04fe 0B       		.uleb128 0xb
 19307 04ff 49       		.uleb128 0x49
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 545


 19308 0500 13       		.uleb128 0x13
 19309 0501 02       		.uleb128 0x2
 19310 0502 18       		.uleb128 0x18
 19311 0503 00       		.byte	0
 19312 0504 00       		.byte	0
 19313 0505 5C       		.uleb128 0x5c
 19314 0506 34       		.uleb128 0x34
 19315 0507 00       		.byte	0
 19316 0508 03       		.uleb128 0x3
 19317 0509 0E       		.uleb128 0xe
 19318 050a 3A       		.uleb128 0x3a
 19319 050b 0B       		.uleb128 0xb
 19320 050c 3B       		.uleb128 0x3b
 19321 050d 05       		.uleb128 0x5
 19322 050e 49       		.uleb128 0x49
 19323 050f 13       		.uleb128 0x13
 19324 0510 3F       		.uleb128 0x3f
 19325 0511 19       		.uleb128 0x19
 19326 0512 3C       		.uleb128 0x3c
 19327 0513 19       		.uleb128 0x19
 19328 0514 00       		.byte	0
 19329 0515 00       		.byte	0
 19330 0516 5D       		.uleb128 0x5d
 19331 0517 2E       		.uleb128 0x2e
 19332 0518 01       		.byte	0x1
 19333 0519 3F       		.uleb128 0x3f
 19334 051a 19       		.uleb128 0x19
 19335 051b 03       		.uleb128 0x3
 19336 051c 0E       		.uleb128 0xe
 19337 051d 3A       		.uleb128 0x3a
 19338 051e 0B       		.uleb128 0xb
 19339 051f 3B       		.uleb128 0x3b
 19340 0520 0B       		.uleb128 0xb
 19341 0521 27       		.uleb128 0x27
 19342 0522 19       		.uleb128 0x19
 19343 0523 49       		.uleb128 0x49
 19344 0524 13       		.uleb128 0x13
 19345 0525 3C       		.uleb128 0x3c
 19346 0526 19       		.uleb128 0x19
 19347 0527 01       		.uleb128 0x1
 19348 0528 13       		.uleb128 0x13
 19349 0529 00       		.byte	0
 19350 052a 00       		.byte	0
 19351 052b 5E       		.uleb128 0x5e
 19352 052c 2E       		.uleb128 0x2e
 19353 052d 01       		.byte	0x1
 19354 052e 3F       		.uleb128 0x3f
 19355 052f 19       		.uleb128 0x19
 19356 0530 03       		.uleb128 0x3
 19357 0531 0E       		.uleb128 0xe
 19358 0532 3A       		.uleb128 0x3a
 19359 0533 0B       		.uleb128 0xb
 19360 0534 3B       		.uleb128 0x3b
 19361 0535 05       		.uleb128 0x5
 19362 0536 27       		.uleb128 0x27
 19363 0537 19       		.uleb128 0x19
 19364 0538 3C       		.uleb128 0x3c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 546


 19365 0539 19       		.uleb128 0x19
 19366 053a 01       		.uleb128 0x1
 19367 053b 13       		.uleb128 0x13
 19368 053c 00       		.byte	0
 19369 053d 00       		.byte	0
 19370 053e 5F       		.uleb128 0x5f
 19371 053f 2E       		.uleb128 0x2e
 19372 0540 01       		.byte	0x1
 19373 0541 3F       		.uleb128 0x3f
 19374 0542 19       		.uleb128 0x19
 19375 0543 03       		.uleb128 0x3
 19376 0544 0E       		.uleb128 0xe
 19377 0545 3A       		.uleb128 0x3a
 19378 0546 0B       		.uleb128 0xb
 19379 0547 3B       		.uleb128 0x3b
 19380 0548 05       		.uleb128 0x5
 19381 0549 27       		.uleb128 0x27
 19382 054a 19       		.uleb128 0x19
 19383 054b 49       		.uleb128 0x49
 19384 054c 13       		.uleb128 0x13
 19385 054d 3C       		.uleb128 0x3c
 19386 054e 19       		.uleb128 0x19
 19387 054f 01       		.uleb128 0x1
 19388 0550 13       		.uleb128 0x13
 19389 0551 00       		.byte	0
 19390 0552 00       		.byte	0
 19391 0553 60       		.uleb128 0x60
 19392 0554 2E       		.uleb128 0x2e
 19393 0555 00       		.byte	0
 19394 0556 3F       		.uleb128 0x3f
 19395 0557 19       		.uleb128 0x19
 19396 0558 03       		.uleb128 0x3
 19397 0559 0E       		.uleb128 0xe
 19398 055a 3A       		.uleb128 0x3a
 19399 055b 0B       		.uleb128 0xb
 19400 055c 3B       		.uleb128 0x3b
 19401 055d 05       		.uleb128 0x5
 19402 055e 27       		.uleb128 0x27
 19403 055f 19       		.uleb128 0x19
 19404 0560 49       		.uleb128 0x49
 19405 0561 13       		.uleb128 0x13
 19406 0562 3C       		.uleb128 0x3c
 19407 0563 19       		.uleb128 0x19
 19408 0564 00       		.byte	0
 19409 0565 00       		.byte	0
 19410 0566 61       		.uleb128 0x61
 19411 0567 36       		.uleb128 0x36
 19412 0568 00       		.byte	0
 19413 0569 02       		.uleb128 0x2
 19414 056a 18       		.uleb128 0x18
 19415 056b 00       		.byte	0
 19416 056c 00       		.byte	0
 19417 056d 62       		.uleb128 0x62
 19418 056e 2E       		.uleb128 0x2e
 19419 056f 01       		.byte	0x1
 19420 0570 3F       		.uleb128 0x3f
 19421 0571 19       		.uleb128 0x19
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 547


 19422 0572 03       		.uleb128 0x3
 19423 0573 0E       		.uleb128 0xe
 19424 0574 3A       		.uleb128 0x3a
 19425 0575 0B       		.uleb128 0xb
 19426 0576 3B       		.uleb128 0x3b
 19427 0577 0B       		.uleb128 0xb
 19428 0578 27       		.uleb128 0x27
 19429 0579 19       		.uleb128 0x19
 19430 057a 3C       		.uleb128 0x3c
 19431 057b 19       		.uleb128 0x19
 19432 057c 01       		.uleb128 0x1
 19433 057d 13       		.uleb128 0x13
 19434 057e 00       		.byte	0
 19435 057f 00       		.byte	0
 19436 0580 63       		.uleb128 0x63
 19437 0581 2E       		.uleb128 0x2e
 19438 0582 01       		.byte	0x1
 19439 0583 3F       		.uleb128 0x3f
 19440 0584 19       		.uleb128 0x19
 19441 0585 03       		.uleb128 0x3
 19442 0586 0E       		.uleb128 0xe
 19443 0587 27       		.uleb128 0x27
 19444 0588 19       		.uleb128 0x19
 19445 0589 49       		.uleb128 0x49
 19446 058a 13       		.uleb128 0x13
 19447 058b 34       		.uleb128 0x34
 19448 058c 19       		.uleb128 0x19
 19449 058d 3C       		.uleb128 0x3c
 19450 058e 19       		.uleb128 0x19
 19451 058f 01       		.uleb128 0x1
 19452 0590 13       		.uleb128 0x13
 19453 0591 00       		.byte	0
 19454 0592 00       		.byte	0
 19455 0593 64       		.uleb128 0x64
 19456 0594 2E       		.uleb128 0x2e
 19457 0595 00       		.byte	0
 19458 0596 3F       		.uleb128 0x3f
 19459 0597 19       		.uleb128 0x19
 19460 0598 03       		.uleb128 0x3
 19461 0599 0E       		.uleb128 0xe
 19462 059a 3A       		.uleb128 0x3a
 19463 059b 0B       		.uleb128 0xb
 19464 059c 3B       		.uleb128 0x3b
 19465 059d 0B       		.uleb128 0xb
 19466 059e 27       		.uleb128 0x27
 19467 059f 19       		.uleb128 0x19
 19468 05a0 49       		.uleb128 0x49
 19469 05a1 13       		.uleb128 0x13
 19470 05a2 3C       		.uleb128 0x3c
 19471 05a3 19       		.uleb128 0x19
 19472 05a4 00       		.byte	0
 19473 05a5 00       		.byte	0
 19474 05a6 00       		.byte	0
 19475              		.section	.debug_loc,"",%progbits
 19476              	.Ldebug_loc0:
 19477              	.LLST0:
 19478 0000 00000000 		.4byte	.LVL0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 548


 19479 0004 06000000 		.4byte	.LVL1
 19480 0008 0100     		.2byte	0x1
 19481 000a 50       		.byte	0x50
 19482 000b 06000000 		.4byte	.LVL1
 19483 000f 18000000 		.4byte	.LFE60
 19484 0013 0100     		.2byte	0x1
 19485 0015 52       		.byte	0x52
 19486 0016 00000000 		.4byte	0
 19487 001a 00000000 		.4byte	0
 19488              	.LLST1:
 19489 001e 00000000 		.4byte	.LVL2
 19490 0022 06000000 		.4byte	.LVL3
 19491 0026 0100     		.2byte	0x1
 19492 0028 50       		.byte	0x50
 19493 0029 06000000 		.4byte	.LVL3
 19494 002d 18000000 		.4byte	.LVL7
 19495 0031 0100     		.2byte	0x1
 19496 0033 55       		.byte	0x55
 19497 0034 18000000 		.4byte	.LVL7
 19498 0038 46000000 		.4byte	.LVL11
 19499 003c 0100     		.2byte	0x1
 19500 003e 54       		.byte	0x54
 19501 003f 00000000 		.4byte	0
 19502 0043 00000000 		.4byte	0
 19503              	.LLST2:
 19504 0047 00000000 		.4byte	.LVL2
 19505 004b 0D000000 		.4byte	.LVL4-1
 19506 004f 0100     		.2byte	0x1
 19507 0051 51       		.byte	0x51
 19508 0052 0D000000 		.4byte	.LVL4-1
 19509 0056 46000000 		.4byte	.LVL12
 19510 005a 0100     		.2byte	0x1
 19511 005c 56       		.byte	0x56
 19512 005d 46000000 		.4byte	.LVL12
 19513 0061 48000000 		.4byte	.LFE13
 19514 0065 0400     		.2byte	0x4
 19515 0067 F3       		.byte	0xf3
 19516 0068 01       		.uleb128 0x1
 19517 0069 51       		.byte	0x51
 19518 006a 9F       		.byte	0x9f
 19519 006b 00000000 		.4byte	0
 19520 006f 00000000 		.4byte	0
 19521              	.LLST3:
 19522 0073 00000000 		.4byte	.LVL2
 19523 0077 0D000000 		.4byte	.LVL4-1
 19524 007b 0100     		.2byte	0x1
 19525 007d 52       		.byte	0x52
 19526 007e 0D000000 		.4byte	.LVL4-1
 19527 0082 18000000 		.4byte	.LVL7
 19528 0086 0200     		.2byte	0x2
 19529 0088 91       		.byte	0x91
 19530 0089 64       		.sleb128 -28
 19531 008a 18000000 		.4byte	.LVL7
 19532 008e 46000000 		.4byte	.LVL10
 19533 0092 0A00     		.2byte	0xa
 19534 0094 75       		.byte	0x75
 19535 0095 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 549


 19536 0096 74       		.byte	0x74
 19537 0097 00       		.sleb128 0
 19538 0098 1C       		.byte	0x1c
 19539 0099 91       		.byte	0x91
 19540 009a 64       		.sleb128 -28
 19541 009b 06       		.byte	0x6
 19542 009c 22       		.byte	0x22
 19543 009d 9F       		.byte	0x9f
 19544 009e 00000000 		.4byte	0
 19545 00a2 00000000 		.4byte	0
 19546              	.LLST4:
 19547 00a6 12000000 		.4byte	.LVL5
 19548 00aa 14000000 		.4byte	.LVL6
 19549 00ae 0100     		.2byte	0x1
 19550 00b0 50       		.byte	0x50
 19551 00b1 14000000 		.4byte	.LVL6
 19552 00b5 46000000 		.4byte	.LVL13
 19553 00b9 0100     		.2byte	0x1
 19554 00bb 57       		.byte	0x57
 19555 00bc 00000000 		.4byte	0
 19556 00c0 00000000 		.4byte	0
 19557              	.LLST5:
 19558 00c4 00000000 		.4byte	.LVL14
 19559 00c8 09000000 		.4byte	.LVL15-1
 19560 00cc 0100     		.2byte	0x1
 19561 00ce 50       		.byte	0x50
 19562 00cf 09000000 		.4byte	.LVL15-1
 19563 00d3 0C000000 		.4byte	.LFE15
 19564 00d7 0400     		.2byte	0x4
 19565 00d9 F3       		.byte	0xf3
 19566 00da 01       		.uleb128 0x1
 19567 00db 50       		.byte	0x50
 19568 00dc 9F       		.byte	0x9f
 19569 00dd 00000000 		.4byte	0
 19570 00e1 00000000 		.4byte	0
 19571              	.LLST6:
 19572 00e5 00000000 		.4byte	.LVL16
 19573 00e9 0A000000 		.4byte	.LVL17
 19574 00ed 0100     		.2byte	0x1
 19575 00ef 50       		.byte	0x50
 19576 00f0 0A000000 		.4byte	.LVL17
 19577 00f4 26000000 		.4byte	.LVL23
 19578 00f8 0100     		.2byte	0x1
 19579 00fa 55       		.byte	0x55
 19580 00fb 26000000 		.4byte	.LVL23
 19581 00ff 2A000000 		.4byte	.LFE16
 19582 0103 0400     		.2byte	0x4
 19583 0105 F3       		.byte	0xf3
 19584 0106 01       		.uleb128 0x1
 19585 0107 50       		.byte	0x50
 19586 0108 9F       		.byte	0x9f
 19587 0109 00000000 		.4byte	0
 19588 010d 00000000 		.4byte	0
 19589              	.LLST7:
 19590 0111 00000000 		.4byte	.LVL16
 19591 0115 12000000 		.4byte	.LVL19
 19592 0119 0200     		.2byte	0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 550


 19593 011b 30       		.byte	0x30
 19594 011c 9F       		.byte	0x9f
 19595 011d 12000000 		.4byte	.LVL19
 19596 0121 19000000 		.4byte	.LVL20-1
 19597 0125 0100     		.2byte	0x1
 19598 0127 50       		.byte	0x50
 19599 0128 19000000 		.4byte	.LVL20-1
 19600 012c 26000000 		.4byte	.LVL23
 19601 0130 0100     		.2byte	0x1
 19602 0132 54       		.byte	0x54
 19603 0133 26000000 		.4byte	.LVL23
 19604 0137 28000000 		.4byte	.LVL24
 19605 013b 0200     		.2byte	0x2
 19606 013d 30       		.byte	0x30
 19607 013e 9F       		.byte	0x9f
 19608 013f 00000000 		.4byte	0
 19609 0143 00000000 		.4byte	0
 19610              	.LLST8:
 19611 0147 00000000 		.4byte	.LVL16
 19612 014b 1C000000 		.4byte	.LVL21
 19613 014f 0200     		.2byte	0x2
 19614 0151 30       		.byte	0x30
 19615 0152 9F       		.byte	0x9f
 19616 0153 1C000000 		.4byte	.LVL21
 19617 0157 1E000000 		.4byte	.LVL22
 19618 015b 0100     		.2byte	0x1
 19619 015d 50       		.byte	0x50
 19620 015e 1E000000 		.4byte	.LVL22
 19621 0162 25000000 		.4byte	.LVL23-1
 19622 0166 0100     		.2byte	0x1
 19623 0168 53       		.byte	0x53
 19624 0169 00000000 		.4byte	0
 19625 016d 00000000 		.4byte	0
 19626              	.LLST9:
 19627 0171 00000000 		.4byte	.LVL25
 19628 0175 09000000 		.4byte	.LVL26-1
 19629 0179 0100     		.2byte	0x1
 19630 017b 50       		.byte	0x50
 19631 017c 09000000 		.4byte	.LVL26-1
 19632 0180 0C000000 		.4byte	.LFE17
 19633 0184 0400     		.2byte	0x4
 19634 0186 F3       		.byte	0xf3
 19635 0187 01       		.uleb128 0x1
 19636 0188 50       		.byte	0x50
 19637 0189 9F       		.byte	0x9f
 19638 018a 00000000 		.4byte	0
 19639 018e 00000000 		.4byte	0
 19640              	.LLST10:
 19641 0192 00000000 		.4byte	.LVL27
 19642 0196 12000000 		.4byte	.LVL28
 19643 019a 0100     		.2byte	0x1
 19644 019c 50       		.byte	0x50
 19645 019d 12000000 		.4byte	.LVL28
 19646 01a1 14000000 		.4byte	.LFE18
 19647 01a5 0400     		.2byte	0x4
 19648 01a7 73       		.byte	0x73
 19649 01a8 DC7D     		.sleb128 -292
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 551


 19650 01aa 9F       		.byte	0x9f
 19651 01ab 00000000 		.4byte	0
 19652 01af 00000000 		.4byte	0
 19653              	.LLST11:
 19654 01b3 00000000 		.4byte	.LVL29
 19655 01b7 07000000 		.4byte	.LVL30-1
 19656 01bb 0100     		.2byte	0x1
 19657 01bd 50       		.byte	0x50
 19658 01be 07000000 		.4byte	.LVL30-1
 19659 01c2 1A000000 		.4byte	.LVL33
 19660 01c6 0100     		.2byte	0x1
 19661 01c8 54       		.byte	0x54
 19662 01c9 1A000000 		.4byte	.LVL33
 19663 01cd 20000000 		.4byte	.LFE19
 19664 01d1 0400     		.2byte	0x4
 19665 01d3 F3       		.byte	0xf3
 19666 01d4 01       		.uleb128 0x1
 19667 01d5 50       		.byte	0x50
 19668 01d6 9F       		.byte	0x9f
 19669 01d7 00000000 		.4byte	0
 19670 01db 00000000 		.4byte	0
 19671              	.LLST12:
 19672 01df 0A000000 		.4byte	.LVL31
 19673 01e3 0D000000 		.4byte	.LVL32-1
 19674 01e7 0100     		.2byte	0x1
 19675 01e9 50       		.byte	0x50
 19676 01ea 0D000000 		.4byte	.LVL32-1
 19677 01ee 1E000000 		.4byte	.LVL34
 19678 01f2 0100     		.2byte	0x1
 19679 01f4 55       		.byte	0x55
 19680 01f5 00000000 		.4byte	0
 19681 01f9 00000000 		.4byte	0
 19682              	.LLST13:
 19683 01fd 00000000 		.4byte	.LVL35
 19684 0201 0B000000 		.4byte	.LVL36-1
 19685 0205 0100     		.2byte	0x1
 19686 0207 50       		.byte	0x50
 19687 0208 0B000000 		.4byte	.LVL36-1
 19688 020c 50000000 		.4byte	.LVL47
 19689 0210 0100     		.2byte	0x1
 19690 0212 54       		.byte	0x54
 19691 0213 50000000 		.4byte	.LVL47
 19692 0217 58000000 		.4byte	.LVL48
 19693 021b 0100     		.2byte	0x1
 19694 021d 50       		.byte	0x50
 19695 021e 58000000 		.4byte	.LVL48
 19696 0222 5E000000 		.4byte	.LVL50
 19697 0226 0100     		.2byte	0x1
 19698 0228 54       		.byte	0x54
 19699 0229 66000000 		.4byte	.LVL52
 19700 022d 74000000 		.4byte	.LVL57
 19701 0231 0100     		.2byte	0x1
 19702 0233 54       		.byte	0x54
 19703 0234 00000000 		.4byte	0
 19704 0238 00000000 		.4byte	0
 19705              	.LLST14:
 19706 023c 00000000 		.4byte	.LVL35
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 552


 19707 0240 0B000000 		.4byte	.LVL36-1
 19708 0244 0100     		.2byte	0x1
 19709 0246 51       		.byte	0x51
 19710 0247 0B000000 		.4byte	.LVL36-1
 19711 024b 76000000 		.4byte	.LFE20
 19712 024f 0200     		.2byte	0x2
 19713 0251 91       		.byte	0x91
 19714 0252 64       		.sleb128 -28
 19715 0253 00000000 		.4byte	0
 19716 0257 00000000 		.4byte	0
 19717              	.LLST15:
 19718 025b 0E000000 		.4byte	.LVL37
 19719 025f 11000000 		.4byte	.LVL38-1
 19720 0263 0100     		.2byte	0x1
 19721 0265 50       		.byte	0x50
 19722 0266 11000000 		.4byte	.LVL38-1
 19723 026a 22000000 		.4byte	.LVL40
 19724 026e 0100     		.2byte	0x1
 19725 0270 55       		.byte	0x55
 19726 0271 6A000000 		.4byte	.LVL53
 19727 0275 6E000000 		.4byte	.LVL55
 19728 0279 0100     		.2byte	0x1
 19729 027b 55       		.byte	0x55
 19730 027c 00000000 		.4byte	0
 19731 0280 00000000 		.4byte	0
 19732              	.LLST16:
 19733 0284 0E000000 		.4byte	.LVL37
 19734 0288 22000000 		.4byte	.LVL40
 19735 028c 0200     		.2byte	0x2
 19736 028e 30       		.byte	0x30
 19737 028f 9F       		.byte	0x9f
 19738 0290 22000000 		.4byte	.LVL40
 19739 0294 36000000 		.4byte	.LVL42
 19740 0298 0100     		.2byte	0x1
 19741 029a 57       		.byte	0x57
 19742 029b 3A000000 		.4byte	.LVL43
 19743 029f 6A000000 		.4byte	.LVL53
 19744 02a3 0100     		.2byte	0x1
 19745 02a5 57       		.byte	0x57
 19746 02a6 6A000000 		.4byte	.LVL53
 19747 02aa 6E000000 		.4byte	.LVL55
 19748 02ae 0200     		.2byte	0x2
 19749 02b0 30       		.byte	0x30
 19750 02b1 9F       		.byte	0x9f
 19751 02b2 6E000000 		.4byte	.LVL55
 19752 02b6 70000000 		.4byte	.LVL56
 19753 02ba 0100     		.2byte	0x1
 19754 02bc 57       		.byte	0x57
 19755 02bd 00000000 		.4byte	0
 19756 02c1 00000000 		.4byte	0
 19757              	.LLST17:
 19758 02c5 0E000000 		.4byte	.LVL37
 19759 02c9 22000000 		.4byte	.LVL40
 19760 02cd 0200     		.2byte	0x2
 19761 02cf 30       		.byte	0x30
 19762 02d0 9F       		.byte	0x9f
 19763 02d1 3A000000 		.4byte	.LVL43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 553


 19764 02d5 40000000 		.4byte	.LVL44
 19765 02d9 0300     		.2byte	0x3
 19766 02db 70       		.byte	0x70
 19767 02dc 01       		.sleb128 1
 19768 02dd 9F       		.byte	0x9f
 19769 02de 40000000 		.4byte	.LVL44
 19770 02e2 45000000 		.4byte	.LVL45-1
 19771 02e6 0300     		.2byte	0x3
 19772 02e8 72       		.byte	0x72
 19773 02e9 01       		.sleb128 1
 19774 02ea 9F       		.byte	0x9f
 19775 02eb 6A000000 		.4byte	.LVL53
 19776 02ef 6E000000 		.4byte	.LVL55
 19777 02f3 0200     		.2byte	0x2
 19778 02f5 30       		.byte	0x30
 19779 02f6 9F       		.byte	0x9f
 19780 02f7 6E000000 		.4byte	.LVL55
 19781 02fb 70000000 		.4byte	.LVL56
 19782 02ff 0300     		.2byte	0x3
 19783 0301 70       		.byte	0x70
 19784 0302 01       		.sleb128 1
 19785 0303 9F       		.byte	0x9f
 19786 0304 00000000 		.4byte	0
 19787 0308 00000000 		.4byte	0
 19788              	.LLST18:
 19789 030c 14000000 		.4byte	.LVL39
 19790 0310 22000000 		.4byte	.LVL40
 19791 0314 0100     		.2byte	0x1
 19792 0316 50       		.byte	0x50
 19793 0317 22000000 		.4byte	.LVL40
 19794 031b 6A000000 		.4byte	.LVL53
 19795 031f 0200     		.2byte	0x2
 19796 0321 91       		.byte	0x91
 19797 0322 5C       		.sleb128 -36
 19798 0323 6A000000 		.4byte	.LVL53
 19799 0327 6C000000 		.4byte	.LVL54
 19800 032b 0100     		.2byte	0x1
 19801 032d 50       		.byte	0x50
 19802 032e 6C000000 		.4byte	.LVL54
 19803 0332 76000000 		.4byte	.LFE20
 19804 0336 0200     		.2byte	0x2
 19805 0338 91       		.byte	0x91
 19806 0339 5C       		.sleb128 -36
 19807 033a 00000000 		.4byte	0
 19808 033e 00000000 		.4byte	0
 19809              	.LLST19:
 19810 0342 22000000 		.4byte	.LVL40
 19811 0346 6A000000 		.4byte	.LVL53
 19812 034a 0100     		.2byte	0x1
 19813 034c 56       		.byte	0x56
 19814 034d 6E000000 		.4byte	.LVL55
 19815 0351 70000000 		.4byte	.LVL56
 19816 0355 0100     		.2byte	0x1
 19817 0357 56       		.byte	0x56
 19818 0358 00000000 		.4byte	0
 19819 035c 00000000 		.4byte	0
 19820              	.LLST20:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 554


 19821 0360 00000000 		.4byte	.LVL58
 19822 0364 02000000 		.4byte	.LVL59
 19823 0368 0100     		.2byte	0x1
 19824 036a 50       		.byte	0x50
 19825 036b 02000000 		.4byte	.LVL59
 19826 036f 04000000 		.4byte	.LVL60
 19827 0373 0400     		.2byte	0x4
 19828 0375 70       		.byte	0x70
 19829 0376 847E     		.sleb128 -252
 19830 0378 9F       		.byte	0x9f
 19831 0379 04000000 		.4byte	.LVL60
 19832 037d 06000000 		.4byte	.LFE21
 19833 0381 0400     		.2byte	0x4
 19834 0383 F3       		.byte	0xf3
 19835 0384 01       		.uleb128 0x1
 19836 0385 50       		.byte	0x50
 19837 0386 9F       		.byte	0x9f
 19838 0387 00000000 		.4byte	0
 19839 038b 00000000 		.4byte	0
 19840              	.LLST21:
 19841 038f 00000000 		.4byte	.LVL61
 19842 0393 06000000 		.4byte	.LVL62
 19843 0397 0100     		.2byte	0x1
 19844 0399 50       		.byte	0x50
 19845 039a 06000000 		.4byte	.LVL62
 19846 039e 0C000000 		.4byte	.LFE22
 19847 03a2 0400     		.2byte	0x4
 19848 03a4 F3       		.byte	0xf3
 19849 03a5 01       		.uleb128 0x1
 19850 03a6 50       		.byte	0x50
 19851 03a7 9F       		.byte	0x9f
 19852 03a8 00000000 		.4byte	0
 19853 03ac 00000000 		.4byte	0
 19854              	.LLST22:
 19855 03b0 00000000 		.4byte	.LVL63
 19856 03b4 04000000 		.4byte	.LVL64
 19857 03b8 0100     		.2byte	0x1
 19858 03ba 50       		.byte	0x50
 19859 03bb 04000000 		.4byte	.LVL64
 19860 03bf 10000000 		.4byte	.LFE23
 19861 03c3 0400     		.2byte	0x4
 19862 03c5 F3       		.byte	0xf3
 19863 03c6 01       		.uleb128 0x1
 19864 03c7 50       		.byte	0x50
 19865 03c8 9F       		.byte	0x9f
 19866 03c9 00000000 		.4byte	0
 19867 03cd 00000000 		.4byte	0
 19868              	.LLST23:
 19869 03d1 00000000 		.4byte	.LVL65
 19870 03d5 0C000000 		.4byte	.LVL67
 19871 03d9 0100     		.2byte	0x1
 19872 03db 50       		.byte	0x50
 19873 03dc 0C000000 		.4byte	.LVL67
 19874 03e0 18000000 		.4byte	.LFE24
 19875 03e4 0400     		.2byte	0x4
 19876 03e6 70       		.byte	0x70
 19877 03e7 F47B     		.sleb128 -524
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 555


 19878 03e9 9F       		.byte	0x9f
 19879 03ea 00000000 		.4byte	0
 19880 03ee 00000000 		.4byte	0
 19881              	.LLST24:
 19882 03f2 00000000 		.4byte	.LVL65
 19883 03f6 04000000 		.4byte	.LVL66
 19884 03fa 0100     		.2byte	0x1
 19885 03fc 51       		.byte	0x51
 19886 03fd 04000000 		.4byte	.LVL66
 19887 0401 18000000 		.4byte	.LFE24
 19888 0405 0400     		.2byte	0x4
 19889 0407 F3       		.byte	0xf3
 19890 0408 01       		.uleb128 0x1
 19891 0409 51       		.byte	0x51
 19892 040a 9F       		.byte	0x9f
 19893 040b 00000000 		.4byte	0
 19894 040f 00000000 		.4byte	0
 19895              	.LLST25:
 19896 0413 00000000 		.4byte	.LVL68
 19897 0417 02000000 		.4byte	.LVL69
 19898 041b 0100     		.2byte	0x1
 19899 041d 50       		.byte	0x50
 19900 041e 02000000 		.4byte	.LVL69
 19901 0422 06000000 		.4byte	.LFE25
 19902 0426 0400     		.2byte	0x4
 19903 0428 F3       		.byte	0xf3
 19904 0429 01       		.uleb128 0x1
 19905 042a 50       		.byte	0x50
 19906 042b 9F       		.byte	0x9f
 19907 042c 00000000 		.4byte	0
 19908 0430 00000000 		.4byte	0
 19909              	.LLST26:
 19910 0434 00000000 		.4byte	.LVL70
 19911 0438 02000000 		.4byte	.LVL71
 19912 043c 0100     		.2byte	0x1
 19913 043e 50       		.byte	0x50
 19914 043f 02000000 		.4byte	.LVL71
 19915 0443 06000000 		.4byte	.LFE26
 19916 0447 0400     		.2byte	0x4
 19917 0449 F3       		.byte	0xf3
 19918 044a 01       		.uleb128 0x1
 19919 044b 50       		.byte	0x50
 19920 044c 9F       		.byte	0x9f
 19921 044d 00000000 		.4byte	0
 19922 0451 00000000 		.4byte	0
 19923              	.LLST27:
 19924 0455 00000000 		.4byte	.LVL72
 19925 0459 11000000 		.4byte	.LVL73-1
 19926 045d 0100     		.2byte	0x1
 19927 045f 50       		.byte	0x50
 19928 0460 11000000 		.4byte	.LVL73-1
 19929 0464 1A000000 		.4byte	.LVL75
 19930 0468 0400     		.2byte	0x4
 19931 046a F3       		.byte	0xf3
 19932 046b 01       		.uleb128 0x1
 19933 046c 50       		.byte	0x50
 19934 046d 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 556


 19935 046e 1A000000 		.4byte	.LVL75
 19936 0472 1C000000 		.4byte	.LVL76
 19937 0476 0100     		.2byte	0x1
 19938 0478 50       		.byte	0x50
 19939 0479 1C000000 		.4byte	.LVL76
 19940 047d 20000000 		.4byte	.LFE29
 19941 0481 0400     		.2byte	0x4
 19942 0483 F3       		.byte	0xf3
 19943 0484 01       		.uleb128 0x1
 19944 0485 50       		.byte	0x50
 19945 0486 9F       		.byte	0x9f
 19946 0487 00000000 		.4byte	0
 19947 048b 00000000 		.4byte	0
 19948              	.LLST28:
 19949 048f 00000000 		.4byte	.LVL72
 19950 0493 11000000 		.4byte	.LVL73-1
 19951 0497 0100     		.2byte	0x1
 19952 0499 51       		.byte	0x51
 19953 049a 11000000 		.4byte	.LVL73-1
 19954 049e 1A000000 		.4byte	.LVL75
 19955 04a2 0400     		.2byte	0x4
 19956 04a4 F3       		.byte	0xf3
 19957 04a5 01       		.uleb128 0x1
 19958 04a6 51       		.byte	0x51
 19959 04a7 9F       		.byte	0x9f
 19960 04a8 1A000000 		.4byte	.LVL75
 19961 04ac 1C000000 		.4byte	.LVL76
 19962 04b0 0100     		.2byte	0x1
 19963 04b2 51       		.byte	0x51
 19964 04b3 1C000000 		.4byte	.LVL76
 19965 04b7 20000000 		.4byte	.LFE29
 19966 04bb 0400     		.2byte	0x4
 19967 04bd F3       		.byte	0xf3
 19968 04be 01       		.uleb128 0x1
 19969 04bf 51       		.byte	0x51
 19970 04c0 9F       		.byte	0x9f
 19971 04c1 00000000 		.4byte	0
 19972 04c5 00000000 		.4byte	0
 19973              	.LLST29:
 19974 04c9 00000000 		.4byte	.LVL72
 19975 04cd 11000000 		.4byte	.LVL73-1
 19976 04d1 0100     		.2byte	0x1
 19977 04d3 52       		.byte	0x52
 19978 04d4 11000000 		.4byte	.LVL73-1
 19979 04d8 1A000000 		.4byte	.LVL75
 19980 04dc 0400     		.2byte	0x4
 19981 04de F3       		.byte	0xf3
 19982 04df 01       		.uleb128 0x1
 19983 04e0 52       		.byte	0x52
 19984 04e1 9F       		.byte	0x9f
 19985 04e2 1A000000 		.4byte	.LVL75
 19986 04e6 1C000000 		.4byte	.LVL76
 19987 04ea 0100     		.2byte	0x1
 19988 04ec 52       		.byte	0x52
 19989 04ed 1C000000 		.4byte	.LVL76
 19990 04f1 20000000 		.4byte	.LFE29
 19991 04f5 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 557


 19992 04f7 F3       		.byte	0xf3
 19993 04f8 01       		.uleb128 0x1
 19994 04f9 52       		.byte	0x52
 19995 04fa 9F       		.byte	0x9f
 19996 04fb 00000000 		.4byte	0
 19997 04ff 00000000 		.4byte	0
 19998              	.LLST30:
 19999 0503 12000000 		.4byte	.LVL73
 20000 0507 18000000 		.4byte	.LVL74
 20001 050b 0100     		.2byte	0x1
 20002 050d 50       		.byte	0x50
 20003 050e 00000000 		.4byte	0
 20004 0512 00000000 		.4byte	0
 20005              	.LLST31:
 20006 0516 00000000 		.4byte	.LVL77
 20007 051a 1D000000 		.4byte	.LVL80-1
 20008 051e 0100     		.2byte	0x1
 20009 0520 50       		.byte	0x50
 20010 0521 1D000000 		.4byte	.LVL80-1
 20011 0525 26000000 		.4byte	.LVL82
 20012 0529 0400     		.2byte	0x4
 20013 052b F3       		.byte	0xf3
 20014 052c 01       		.uleb128 0x1
 20015 052d 50       		.byte	0x50
 20016 052e 9F       		.byte	0x9f
 20017 052f 26000000 		.4byte	.LVL82
 20018 0533 28000000 		.4byte	.LVL83
 20019 0537 0100     		.2byte	0x1
 20020 0539 50       		.byte	0x50
 20021 053a 28000000 		.4byte	.LVL83
 20022 053e 2C000000 		.4byte	.LFE31
 20023 0542 0400     		.2byte	0x4
 20024 0544 F3       		.byte	0xf3
 20025 0545 01       		.uleb128 0x1
 20026 0546 50       		.byte	0x50
 20027 0547 9F       		.byte	0x9f
 20028 0548 00000000 		.4byte	0
 20029 054c 00000000 		.4byte	0
 20030              	.LLST32:
 20031 0550 00000000 		.4byte	.LVL77
 20032 0554 1D000000 		.4byte	.LVL80-1
 20033 0558 0100     		.2byte	0x1
 20034 055a 51       		.byte	0x51
 20035 055b 1D000000 		.4byte	.LVL80-1
 20036 055f 26000000 		.4byte	.LVL82
 20037 0563 0400     		.2byte	0x4
 20038 0565 F3       		.byte	0xf3
 20039 0566 01       		.uleb128 0x1
 20040 0567 51       		.byte	0x51
 20041 0568 9F       		.byte	0x9f
 20042 0569 26000000 		.4byte	.LVL82
 20043 056d 28000000 		.4byte	.LVL83
 20044 0571 0100     		.2byte	0x1
 20045 0573 51       		.byte	0x51
 20046 0574 28000000 		.4byte	.LVL83
 20047 0578 2C000000 		.4byte	.LFE31
 20048 057c 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 558


 20049 057e F3       		.byte	0xf3
 20050 057f 01       		.uleb128 0x1
 20051 0580 51       		.byte	0x51
 20052 0581 9F       		.byte	0x9f
 20053 0582 00000000 		.4byte	0
 20054 0586 00000000 		.4byte	0
 20055              	.LLST33:
 20056 058a 00000000 		.4byte	.LVL77
 20057 058e 18000000 		.4byte	.LVL79
 20058 0592 0100     		.2byte	0x1
 20059 0594 52       		.byte	0x52
 20060 0595 18000000 		.4byte	.LVL79
 20061 0599 26000000 		.4byte	.LVL82
 20062 059d 0400     		.2byte	0x4
 20063 059f F3       		.byte	0xf3
 20064 05a0 01       		.uleb128 0x1
 20065 05a1 52       		.byte	0x52
 20066 05a2 9F       		.byte	0x9f
 20067 05a3 26000000 		.4byte	.LVL82
 20068 05a7 28000000 		.4byte	.LVL83
 20069 05ab 0100     		.2byte	0x1
 20070 05ad 52       		.byte	0x52
 20071 05ae 28000000 		.4byte	.LVL83
 20072 05b2 2C000000 		.4byte	.LFE31
 20073 05b6 0400     		.2byte	0x4
 20074 05b8 F3       		.byte	0xf3
 20075 05b9 01       		.uleb128 0x1
 20076 05ba 52       		.byte	0x52
 20077 05bb 9F       		.byte	0x9f
 20078 05bc 00000000 		.4byte	0
 20079 05c0 00000000 		.4byte	0
 20080              	.LLST37:
 20081 05c4 1E000000 		.4byte	.LVL80
 20082 05c8 24000000 		.4byte	.LVL81
 20083 05cc 0100     		.2byte	0x1
 20084 05ce 50       		.byte	0x50
 20085 05cf 00000000 		.4byte	0
 20086 05d3 00000000 		.4byte	0
 20087              	.LLST38:
 20088 05d7 0E000000 		.4byte	.LVL78
 20089 05db 26000000 		.4byte	.LVL82
 20090 05df 0400     		.2byte	0x4
 20091 05e1 0A       		.byte	0xa
 20092 05e2 0040     		.2byte	0x4000
 20093 05e4 9F       		.byte	0x9f
 20094 05e5 00000000 		.4byte	0
 20095 05e9 00000000 		.4byte	0
 20096              	.LLST39:
 20097 05ed 0E000000 		.4byte	.LVL78
 20098 05f1 18000000 		.4byte	.LVL79
 20099 05f5 0100     		.2byte	0x1
 20100 05f7 52       		.byte	0x52
 20101 05f8 18000000 		.4byte	.LVL79
 20102 05fc 26000000 		.4byte	.LVL82
 20103 0600 0400     		.2byte	0x4
 20104 0602 F3       		.byte	0xf3
 20105 0603 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 559


 20106 0604 52       		.byte	0x52
 20107 0605 9F       		.byte	0x9f
 20108 0606 00000000 		.4byte	0
 20109 060a 00000000 		.4byte	0
 20110              	.LLST40:
 20111 060e 00000000 		.4byte	.LVL84
 20112 0612 1D000000 		.4byte	.LVL87-1
 20113 0616 0100     		.2byte	0x1
 20114 0618 50       		.byte	0x50
 20115 0619 1D000000 		.4byte	.LVL87-1
 20116 061d 26000000 		.4byte	.LVL89
 20117 0621 0400     		.2byte	0x4
 20118 0623 F3       		.byte	0xf3
 20119 0624 01       		.uleb128 0x1
 20120 0625 50       		.byte	0x50
 20121 0626 9F       		.byte	0x9f
 20122 0627 26000000 		.4byte	.LVL89
 20123 062b 28000000 		.4byte	.LVL90
 20124 062f 0100     		.2byte	0x1
 20125 0631 50       		.byte	0x50
 20126 0632 28000000 		.4byte	.LVL90
 20127 0636 2C000000 		.4byte	.LFE32
 20128 063a 0400     		.2byte	0x4
 20129 063c F3       		.byte	0xf3
 20130 063d 01       		.uleb128 0x1
 20131 063e 50       		.byte	0x50
 20132 063f 9F       		.byte	0x9f
 20133 0640 00000000 		.4byte	0
 20134 0644 00000000 		.4byte	0
 20135              	.LLST41:
 20136 0648 00000000 		.4byte	.LVL84
 20137 064c 1D000000 		.4byte	.LVL87-1
 20138 0650 0100     		.2byte	0x1
 20139 0652 51       		.byte	0x51
 20140 0653 1D000000 		.4byte	.LVL87-1
 20141 0657 26000000 		.4byte	.LVL89
 20142 065b 0400     		.2byte	0x4
 20143 065d F3       		.byte	0xf3
 20144 065e 01       		.uleb128 0x1
 20145 065f 51       		.byte	0x51
 20146 0660 9F       		.byte	0x9f
 20147 0661 26000000 		.4byte	.LVL89
 20148 0665 28000000 		.4byte	.LVL90
 20149 0669 0100     		.2byte	0x1
 20150 066b 51       		.byte	0x51
 20151 066c 28000000 		.4byte	.LVL90
 20152 0670 2C000000 		.4byte	.LFE32
 20153 0674 0400     		.2byte	0x4
 20154 0676 F3       		.byte	0xf3
 20155 0677 01       		.uleb128 0x1
 20156 0678 51       		.byte	0x51
 20157 0679 9F       		.byte	0x9f
 20158 067a 00000000 		.4byte	0
 20159 067e 00000000 		.4byte	0
 20160              	.LLST42:
 20161 0682 00000000 		.4byte	.LVL84
 20162 0686 18000000 		.4byte	.LVL86
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 560


 20163 068a 0100     		.2byte	0x1
 20164 068c 52       		.byte	0x52
 20165 068d 18000000 		.4byte	.LVL86
 20166 0691 26000000 		.4byte	.LVL89
 20167 0695 0400     		.2byte	0x4
 20168 0697 F3       		.byte	0xf3
 20169 0698 01       		.uleb128 0x1
 20170 0699 52       		.byte	0x52
 20171 069a 9F       		.byte	0x9f
 20172 069b 26000000 		.4byte	.LVL89
 20173 069f 28000000 		.4byte	.LVL90
 20174 06a3 0100     		.2byte	0x1
 20175 06a5 52       		.byte	0x52
 20176 06a6 28000000 		.4byte	.LVL90
 20177 06aa 2C000000 		.4byte	.LFE32
 20178 06ae 0400     		.2byte	0x4
 20179 06b0 F3       		.byte	0xf3
 20180 06b1 01       		.uleb128 0x1
 20181 06b2 52       		.byte	0x52
 20182 06b3 9F       		.byte	0x9f
 20183 06b4 00000000 		.4byte	0
 20184 06b8 00000000 		.4byte	0
 20185              	.LLST46:
 20186 06bc 1E000000 		.4byte	.LVL87
 20187 06c0 24000000 		.4byte	.LVL88
 20188 06c4 0100     		.2byte	0x1
 20189 06c6 50       		.byte	0x50
 20190 06c7 00000000 		.4byte	0
 20191 06cb 00000000 		.4byte	0
 20192              	.LLST47:
 20193 06cf 0E000000 		.4byte	.LVL85
 20194 06d3 26000000 		.4byte	.LVL89
 20195 06d7 0400     		.2byte	0x4
 20196 06d9 0A       		.byte	0xa
 20197 06da 0040     		.2byte	0x4000
 20198 06dc 9F       		.byte	0x9f
 20199 06dd 00000000 		.4byte	0
 20200 06e1 00000000 		.4byte	0
 20201              	.LLST48:
 20202 06e5 0E000000 		.4byte	.LVL85
 20203 06e9 18000000 		.4byte	.LVL86
 20204 06ed 0100     		.2byte	0x1
 20205 06ef 52       		.byte	0x52
 20206 06f0 18000000 		.4byte	.LVL86
 20207 06f4 26000000 		.4byte	.LVL89
 20208 06f8 0400     		.2byte	0x4
 20209 06fa F3       		.byte	0xf3
 20210 06fb 01       		.uleb128 0x1
 20211 06fc 52       		.byte	0x52
 20212 06fd 9F       		.byte	0x9f
 20213 06fe 00000000 		.4byte	0
 20214 0702 00000000 		.4byte	0
 20215              	.LLST49:
 20216 0706 00000000 		.4byte	.LVL91
 20217 070a 19000000 		.4byte	.LVL93-1
 20218 070e 0100     		.2byte	0x1
 20219 0710 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 561


 20220 0711 19000000 		.4byte	.LVL93-1
 20221 0715 1E000000 		.4byte	.LVL94
 20222 0719 0400     		.2byte	0x4
 20223 071b 74       		.byte	0x74
 20224 071c 847E     		.sleb128 -252
 20225 071e 9F       		.byte	0x9f
 20226 071f 1E000000 		.4byte	.LVL94
 20227 0723 20000000 		.4byte	.LVL95
 20228 0727 0100     		.2byte	0x1
 20229 0729 50       		.byte	0x50
 20230 072a 20000000 		.4byte	.LVL95
 20231 072e 24000000 		.4byte	.LFE33
 20232 0732 0400     		.2byte	0x4
 20233 0734 F3       		.byte	0xf3
 20234 0735 01       		.uleb128 0x1
 20235 0736 50       		.byte	0x50
 20236 0737 9F       		.byte	0x9f
 20237 0738 00000000 		.4byte	0
 20238 073c 00000000 		.4byte	0
 20239              	.LLST50:
 20240 0740 00000000 		.4byte	.LVL91
 20241 0744 19000000 		.4byte	.LVL93-1
 20242 0748 0100     		.2byte	0x1
 20243 074a 51       		.byte	0x51
 20244 074b 19000000 		.4byte	.LVL93-1
 20245 074f 1E000000 		.4byte	.LVL94
 20246 0753 0400     		.2byte	0x4
 20247 0755 F3       		.byte	0xf3
 20248 0756 01       		.uleb128 0x1
 20249 0757 51       		.byte	0x51
 20250 0758 9F       		.byte	0x9f
 20251 0759 1E000000 		.4byte	.LVL94
 20252 075d 22000000 		.4byte	.LVL96
 20253 0761 0100     		.2byte	0x1
 20254 0763 51       		.byte	0x51
 20255 0764 22000000 		.4byte	.LVL96
 20256 0768 24000000 		.4byte	.LFE33
 20257 076c 0400     		.2byte	0x4
 20258 076e F3       		.byte	0xf3
 20259 076f 01       		.uleb128 0x1
 20260 0770 51       		.byte	0x51
 20261 0771 9F       		.byte	0x9f
 20262 0772 00000000 		.4byte	0
 20263 0776 00000000 		.4byte	0
 20264              	.LLST51:
 20265 077a 00000000 		.4byte	.LVL91
 20266 077e 19000000 		.4byte	.LVL93-1
 20267 0782 0100     		.2byte	0x1
 20268 0784 52       		.byte	0x52
 20269 0785 19000000 		.4byte	.LVL93-1
 20270 0789 1E000000 		.4byte	.LVL94
 20271 078d 0400     		.2byte	0x4
 20272 078f F3       		.byte	0xf3
 20273 0790 01       		.uleb128 0x1
 20274 0791 52       		.byte	0x52
 20275 0792 9F       		.byte	0x9f
 20276 0793 1E000000 		.4byte	.LVL94
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 562


 20277 0797 22000000 		.4byte	.LVL96
 20278 079b 0100     		.2byte	0x1
 20279 079d 52       		.byte	0x52
 20280 079e 22000000 		.4byte	.LVL96
 20281 07a2 24000000 		.4byte	.LFE33
 20282 07a6 0400     		.2byte	0x4
 20283 07a8 F3       		.byte	0xf3
 20284 07a9 01       		.uleb128 0x1
 20285 07aa 52       		.byte	0x52
 20286 07ab 9F       		.byte	0x9f
 20287 07ac 00000000 		.4byte	0
 20288 07b0 00000000 		.4byte	0
 20289              	.LLST52:
 20290 07b4 00000000 		.4byte	.LVL91
 20291 07b8 19000000 		.4byte	.LVL93-1
 20292 07bc 0100     		.2byte	0x1
 20293 07be 53       		.byte	0x53
 20294 07bf 19000000 		.4byte	.LVL93-1
 20295 07c3 1E000000 		.4byte	.LVL94
 20296 07c7 0400     		.2byte	0x4
 20297 07c9 F3       		.byte	0xf3
 20298 07ca 01       		.uleb128 0x1
 20299 07cb 53       		.byte	0x53
 20300 07cc 9F       		.byte	0x9f
 20301 07cd 1E000000 		.4byte	.LVL94
 20302 07d1 22000000 		.4byte	.LVL96
 20303 07d5 0100     		.2byte	0x1
 20304 07d7 53       		.byte	0x53
 20305 07d8 22000000 		.4byte	.LVL96
 20306 07dc 24000000 		.4byte	.LFE33
 20307 07e0 0400     		.2byte	0x4
 20308 07e2 F3       		.byte	0xf3
 20309 07e3 01       		.uleb128 0x1
 20310 07e4 53       		.byte	0x53
 20311 07e5 9F       		.byte	0x9f
 20312 07e6 00000000 		.4byte	0
 20313 07ea 00000000 		.4byte	0
 20314              	.LLST53:
 20315 07ee 1A000000 		.4byte	.LVL93
 20316 07f2 1E000000 		.4byte	.LVL94
 20317 07f6 0100     		.2byte	0x1
 20318 07f8 50       		.byte	0x50
 20319 07f9 00000000 		.4byte	0
 20320 07fd 00000000 		.4byte	0
 20321              	.LLST54:
 20322 0801 14000000 		.4byte	.LVL92
 20323 0805 1E000000 		.4byte	.LVL94
 20324 0809 0100     		.2byte	0x1
 20325 080b 55       		.byte	0x55
 20326 080c 00000000 		.4byte	0
 20327 0810 00000000 		.4byte	0
 20328              	.LLST55:
 20329 0814 00000000 		.4byte	.LVL97
 20330 0818 19000000 		.4byte	.LVL99-1
 20331 081c 0100     		.2byte	0x1
 20332 081e 50       		.byte	0x50
 20333 081f 19000000 		.4byte	.LVL99-1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 563


 20334 0823 1E000000 		.4byte	.LVL100
 20335 0827 0400     		.2byte	0x4
 20336 0829 74       		.byte	0x74
 20337 082a 847E     		.sleb128 -252
 20338 082c 9F       		.byte	0x9f
 20339 082d 1E000000 		.4byte	.LVL100
 20340 0831 20000000 		.4byte	.LVL101
 20341 0835 0100     		.2byte	0x1
 20342 0837 50       		.byte	0x50
 20343 0838 20000000 		.4byte	.LVL101
 20344 083c 24000000 		.4byte	.LFE34
 20345 0840 0400     		.2byte	0x4
 20346 0842 F3       		.byte	0xf3
 20347 0843 01       		.uleb128 0x1
 20348 0844 50       		.byte	0x50
 20349 0845 9F       		.byte	0x9f
 20350 0846 00000000 		.4byte	0
 20351 084a 00000000 		.4byte	0
 20352              	.LLST56:
 20353 084e 00000000 		.4byte	.LVL97
 20354 0852 19000000 		.4byte	.LVL99-1
 20355 0856 0100     		.2byte	0x1
 20356 0858 51       		.byte	0x51
 20357 0859 19000000 		.4byte	.LVL99-1
 20358 085d 1E000000 		.4byte	.LVL100
 20359 0861 0400     		.2byte	0x4
 20360 0863 F3       		.byte	0xf3
 20361 0864 01       		.uleb128 0x1
 20362 0865 51       		.byte	0x51
 20363 0866 9F       		.byte	0x9f
 20364 0867 1E000000 		.4byte	.LVL100
 20365 086b 22000000 		.4byte	.LVL102
 20366 086f 0100     		.2byte	0x1
 20367 0871 51       		.byte	0x51
 20368 0872 22000000 		.4byte	.LVL102
 20369 0876 24000000 		.4byte	.LFE34
 20370 087a 0400     		.2byte	0x4
 20371 087c F3       		.byte	0xf3
 20372 087d 01       		.uleb128 0x1
 20373 087e 51       		.byte	0x51
 20374 087f 9F       		.byte	0x9f
 20375 0880 00000000 		.4byte	0
 20376 0884 00000000 		.4byte	0
 20377              	.LLST57:
 20378 0888 00000000 		.4byte	.LVL97
 20379 088c 19000000 		.4byte	.LVL99-1
 20380 0890 0100     		.2byte	0x1
 20381 0892 52       		.byte	0x52
 20382 0893 19000000 		.4byte	.LVL99-1
 20383 0897 1E000000 		.4byte	.LVL100
 20384 089b 0400     		.2byte	0x4
 20385 089d F3       		.byte	0xf3
 20386 089e 01       		.uleb128 0x1
 20387 089f 52       		.byte	0x52
 20388 08a0 9F       		.byte	0x9f
 20389 08a1 1E000000 		.4byte	.LVL100
 20390 08a5 22000000 		.4byte	.LVL102
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 564


 20391 08a9 0100     		.2byte	0x1
 20392 08ab 52       		.byte	0x52
 20393 08ac 22000000 		.4byte	.LVL102
 20394 08b0 24000000 		.4byte	.LFE34
 20395 08b4 0400     		.2byte	0x4
 20396 08b6 F3       		.byte	0xf3
 20397 08b7 01       		.uleb128 0x1
 20398 08b8 52       		.byte	0x52
 20399 08b9 9F       		.byte	0x9f
 20400 08ba 00000000 		.4byte	0
 20401 08be 00000000 		.4byte	0
 20402              	.LLST58:
 20403 08c2 00000000 		.4byte	.LVL97
 20404 08c6 19000000 		.4byte	.LVL99-1
 20405 08ca 0100     		.2byte	0x1
 20406 08cc 53       		.byte	0x53
 20407 08cd 19000000 		.4byte	.LVL99-1
 20408 08d1 1E000000 		.4byte	.LVL100
 20409 08d5 0400     		.2byte	0x4
 20410 08d7 F3       		.byte	0xf3
 20411 08d8 01       		.uleb128 0x1
 20412 08d9 53       		.byte	0x53
 20413 08da 9F       		.byte	0x9f
 20414 08db 1E000000 		.4byte	.LVL100
 20415 08df 22000000 		.4byte	.LVL102
 20416 08e3 0100     		.2byte	0x1
 20417 08e5 53       		.byte	0x53
 20418 08e6 22000000 		.4byte	.LVL102
 20419 08ea 24000000 		.4byte	.LFE34
 20420 08ee 0400     		.2byte	0x4
 20421 08f0 F3       		.byte	0xf3
 20422 08f1 01       		.uleb128 0x1
 20423 08f2 53       		.byte	0x53
 20424 08f3 9F       		.byte	0x9f
 20425 08f4 00000000 		.4byte	0
 20426 08f8 00000000 		.4byte	0
 20427              	.LLST59:
 20428 08fc 1A000000 		.4byte	.LVL99
 20429 0900 1E000000 		.4byte	.LVL100
 20430 0904 0100     		.2byte	0x1
 20431 0906 50       		.byte	0x50
 20432 0907 00000000 		.4byte	0
 20433 090b 00000000 		.4byte	0
 20434              	.LLST60:
 20435 090f 14000000 		.4byte	.LVL98
 20436 0913 1E000000 		.4byte	.LVL100
 20437 0917 0100     		.2byte	0x1
 20438 0919 55       		.byte	0x55
 20439 091a 00000000 		.4byte	0
 20440 091e 00000000 		.4byte	0
 20441              	.LLST61:
 20442 0922 00000000 		.4byte	.LVL103
 20443 0926 06000000 		.4byte	.LVL104
 20444 092a 0100     		.2byte	0x1
 20445 092c 50       		.byte	0x50
 20446 092d 06000000 		.4byte	.LVL104
 20447 0931 0C000000 		.4byte	.LVL105
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 565


 20448 0935 0400     		.2byte	0x4
 20449 0937 F3       		.byte	0xf3
 20450 0938 01       		.uleb128 0x1
 20451 0939 50       		.byte	0x50
 20452 093a 9F       		.byte	0x9f
 20453 093b 0C000000 		.4byte	.LVL105
 20454 093f 2D000000 		.4byte	.LVL106-1
 20455 0943 0100     		.2byte	0x1
 20456 0945 50       		.byte	0x50
 20457 0946 2D000000 		.4byte	.LVL106-1
 20458 094a 40000000 		.4byte	.LVL107
 20459 094e 0100     		.2byte	0x1
 20460 0950 54       		.byte	0x54
 20461 0951 40000000 		.4byte	.LVL107
 20462 0955 4E000000 		.4byte	.LVL108
 20463 0959 0400     		.2byte	0x4
 20464 095b 74       		.byte	0x74
 20465 095c F47B     		.sleb128 -524
 20466 095e 9F       		.byte	0x9f
 20467 095f 4E000000 		.4byte	.LVL108
 20468 0963 63000000 		.4byte	.LVL109-1
 20469 0967 0100     		.2byte	0x1
 20470 0969 50       		.byte	0x50
 20471 096a 63000000 		.4byte	.LVL109-1
 20472 096e 72000000 		.4byte	.LVL110
 20473 0972 0100     		.2byte	0x1
 20474 0974 54       		.byte	0x54
 20475 0975 72000000 		.4byte	.LVL110
 20476 0979 74000000 		.4byte	.LVL111
 20477 097d 0400     		.2byte	0x4
 20478 097f 74       		.byte	0x74
 20479 0980 847E     		.sleb128 -252
 20480 0982 9F       		.byte	0x9f
 20481 0983 74000000 		.4byte	.LVL111
 20482 0987 7C000000 		.4byte	.LFE35
 20483 098b 0400     		.2byte	0x4
 20484 098d F3       		.byte	0xf3
 20485 098e 01       		.uleb128 0x1
 20486 098f 50       		.byte	0x50
 20487 0990 9F       		.byte	0x9f
 20488 0991 00000000 		.4byte	0
 20489 0995 00000000 		.4byte	0
 20490              	.LLST62:
 20491 0999 00000000 		.4byte	.LVL103
 20492 099d 06000000 		.4byte	.LVL104
 20493 09a1 0300     		.2byte	0x3
 20494 09a3 09       		.byte	0x9
 20495 09a4 FF       		.byte	0xff
 20496 09a5 9F       		.byte	0x9f
 20497 09a6 0C000000 		.4byte	.LVL105
 20498 09aa 64000000 		.4byte	.LVL109
 20499 09ae 0300     		.2byte	0x3
 20500 09b0 09       		.byte	0x9
 20501 09b1 FF       		.byte	0xff
 20502 09b2 9F       		.byte	0x9f
 20503 09b3 64000000 		.4byte	.LVL109
 20504 09b7 74000000 		.4byte	.LVL111
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 566


 20505 09bb 0100     		.2byte	0x1
 20506 09bd 50       		.byte	0x50
 20507 09be 74000000 		.4byte	.LVL111
 20508 09c2 76000000 		.4byte	.LVL112
 20509 09c6 0200     		.2byte	0x2
 20510 09c8 31       		.byte	0x31
 20511 09c9 9F       		.byte	0x9f
 20512 09ca 00000000 		.4byte	0
 20513 09ce 00000000 		.4byte	0
 20514              	.LLST63:
 20515 09d2 00000000 		.4byte	.LVL113
 20516 09d6 0C000000 		.4byte	.LVL114
 20517 09da 0100     		.2byte	0x1
 20518 09dc 50       		.byte	0x50
 20519 09dd 0C000000 		.4byte	.LVL114
 20520 09e1 24000000 		.4byte	.LVL115
 20521 09e5 0400     		.2byte	0x4
 20522 09e7 70       		.byte	0x70
 20523 09e8 847E     		.sleb128 -252
 20524 09ea 9F       		.byte	0x9f
 20525 09eb 24000000 		.4byte	.LVL115
 20526 09ef 2A000000 		.4byte	.LVL116
 20527 09f3 0100     		.2byte	0x1
 20528 09f5 50       		.byte	0x50
 20529 09f6 2A000000 		.4byte	.LVL116
 20530 09fa 30000000 		.4byte	.LVL117
 20531 09fe 0400     		.2byte	0x4
 20532 0a00 70       		.byte	0x70
 20533 0a01 847E     		.sleb128 -252
 20534 0a03 9F       		.byte	0x9f
 20535 0a04 30000000 		.4byte	.LVL117
 20536 0a08 40000000 		.4byte	.LFE36
 20537 0a0c 0400     		.2byte	0x4
 20538 0a0e F3       		.byte	0xf3
 20539 0a0f 01       		.uleb128 0x1
 20540 0a10 50       		.byte	0x50
 20541 0a11 9F       		.byte	0x9f
 20542 0a12 00000000 		.4byte	0
 20543 0a16 00000000 		.4byte	0
 20544              	.LLST64:
 20545 0a1a 00000000 		.4byte	.LVL118
 20546 0a1e 0E000000 		.4byte	.LVL119
 20547 0a22 0100     		.2byte	0x1
 20548 0a24 50       		.byte	0x50
 20549 0a25 0E000000 		.4byte	.LVL119
 20550 0a29 10000000 		.4byte	.LVL120
 20551 0a2d 0300     		.2byte	0x3
 20552 0a2f 70       		.byte	0x70
 20553 0a30 73       		.sleb128 -13
 20554 0a31 9F       		.byte	0x9f
 20555 0a32 10000000 		.4byte	.LVL120
 20556 0a36 14000000 		.4byte	.LVL121
 20557 0a3a 0400     		.2byte	0x4
 20558 0a3c 70       		.byte	0x70
 20559 0a3d F47D     		.sleb128 -268
 20560 0a3f 9F       		.byte	0x9f
 20561 0a40 14000000 		.4byte	.LVL121
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 567


 20562 0a44 18000000 		.4byte	.LVL122
 20563 0a48 0400     		.2byte	0x4
 20564 0a4a 70       		.byte	0x70
 20565 0a4b E87D     		.sleb128 -280
 20566 0a4d 9F       		.byte	0x9f
 20567 0a4e 18000000 		.4byte	.LVL122
 20568 0a52 1C000000 		.4byte	.LFE37
 20569 0a56 0400     		.2byte	0x4
 20570 0a58 F3       		.byte	0xf3
 20571 0a59 01       		.uleb128 0x1
 20572 0a5a 50       		.byte	0x50
 20573 0a5b 9F       		.byte	0x9f
 20574 0a5c 00000000 		.4byte	0
 20575 0a60 00000000 		.4byte	0
 20576              	.LLST65:
 20577 0a64 00000000 		.4byte	.LVL118
 20578 0a68 14000000 		.4byte	.LVL121
 20579 0a6c 0100     		.2byte	0x1
 20580 0a6e 51       		.byte	0x51
 20581 0a6f 14000000 		.4byte	.LVL121
 20582 0a73 18000000 		.4byte	.LVL122
 20583 0a77 0300     		.2byte	0x3
 20584 0a79 73       		.byte	0x73
 20585 0a7a 74       		.sleb128 -12
 20586 0a7b 9F       		.byte	0x9f
 20587 0a7c 18000000 		.4byte	.LVL122
 20588 0a80 1C000000 		.4byte	.LFE37
 20589 0a84 0400     		.2byte	0x4
 20590 0a86 F3       		.byte	0xf3
 20591 0a87 01       		.uleb128 0x1
 20592 0a88 51       		.byte	0x51
 20593 0a89 9F       		.byte	0x9f
 20594 0a8a 00000000 		.4byte	0
 20595 0a8e 00000000 		.4byte	0
 20596              	.LLST66:
 20597 0a92 00000000 		.4byte	.LVL123
 20598 0a96 02000000 		.4byte	.LVL124
 20599 0a9a 0100     		.2byte	0x1
 20600 0a9c 50       		.byte	0x50
 20601 0a9d 02000000 		.4byte	.LVL124
 20602 0aa1 04000000 		.4byte	.LVL125
 20603 0aa5 0400     		.2byte	0x4
 20604 0aa7 70       		.byte	0x70
 20605 0aa8 847E     		.sleb128 -252
 20606 0aaa 9F       		.byte	0x9f
 20607 0aab 04000000 		.4byte	.LVL125
 20608 0aaf 0E000000 		.4byte	.LFE38
 20609 0ab3 0400     		.2byte	0x4
 20610 0ab5 F3       		.byte	0xf3
 20611 0ab6 01       		.uleb128 0x1
 20612 0ab7 50       		.byte	0x50
 20613 0ab8 9F       		.byte	0x9f
 20614 0ab9 00000000 		.4byte	0
 20615 0abd 00000000 		.4byte	0
 20616              	.LLST67:
 20617 0ac1 00000000 		.4byte	.LVL126
 20618 0ac5 02000000 		.4byte	.LVL127
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 568


 20619 0ac9 0100     		.2byte	0x1
 20620 0acb 50       		.byte	0x50
 20621 0acc 02000000 		.4byte	.LVL127
 20622 0ad0 04000000 		.4byte	.LVL128
 20623 0ad4 0400     		.2byte	0x4
 20624 0ad6 70       		.byte	0x70
 20625 0ad7 847E     		.sleb128 -252
 20626 0ad9 9F       		.byte	0x9f
 20627 0ada 04000000 		.4byte	.LVL128
 20628 0ade 0E000000 		.4byte	.LFE39
 20629 0ae2 0400     		.2byte	0x4
 20630 0ae4 F3       		.byte	0xf3
 20631 0ae5 01       		.uleb128 0x1
 20632 0ae6 50       		.byte	0x50
 20633 0ae7 9F       		.byte	0x9f
 20634 0ae8 00000000 		.4byte	0
 20635 0aec 00000000 		.4byte	0
 20636              	.LLST68:
 20637 0af0 00000000 		.4byte	.LVL129
 20638 0af4 0D000000 		.4byte	.LVL130-1
 20639 0af8 0100     		.2byte	0x1
 20640 0afa 50       		.byte	0x50
 20641 0afb 0D000000 		.4byte	.LVL130-1
 20642 0aff 18000000 		.4byte	.LFE40
 20643 0b03 0400     		.2byte	0x4
 20644 0b05 F3       		.byte	0xf3
 20645 0b06 01       		.uleb128 0x1
 20646 0b07 50       		.byte	0x50
 20647 0b08 9F       		.byte	0x9f
 20648 0b09 00000000 		.4byte	0
 20649 0b0d 00000000 		.4byte	0
 20650              	.LLST69:
 20651 0b11 00000000 		.4byte	.LVL129
 20652 0b15 0D000000 		.4byte	.LVL130-1
 20653 0b19 0100     		.2byte	0x1
 20654 0b1b 51       		.byte	0x51
 20655 0b1c 0D000000 		.4byte	.LVL130-1
 20656 0b20 0E000000 		.4byte	.LVL130
 20657 0b24 0100     		.2byte	0x1
 20658 0b26 54       		.byte	0x54
 20659 0b27 0E000000 		.4byte	.LVL130
 20660 0b2b 18000000 		.4byte	.LFE40
 20661 0b2f 0400     		.2byte	0x4
 20662 0b31 F3       		.byte	0xf3
 20663 0b32 01       		.uleb128 0x1
 20664 0b33 51       		.byte	0x51
 20665 0b34 9F       		.byte	0x9f
 20666 0b35 00000000 		.4byte	0
 20667 0b39 00000000 		.4byte	0
 20668              	.LLST70:
 20669 0b3d 00000000 		.4byte	.LVL131
 20670 0b41 0F000000 		.4byte	.LVL132-1
 20671 0b45 0100     		.2byte	0x1
 20672 0b47 50       		.byte	0x50
 20673 0b48 0F000000 		.4byte	.LVL132-1
 20674 0b4c 12000000 		.4byte	.LVL133
 20675 0b50 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 569


 20676 0b52 F3       		.byte	0xf3
 20677 0b53 01       		.uleb128 0x1
 20678 0b54 50       		.byte	0x50
 20679 0b55 9F       		.byte	0x9f
 20680 0b56 12000000 		.4byte	.LVL133
 20681 0b5a 1D000000 		.4byte	.LVL135-1
 20682 0b5e 0100     		.2byte	0x1
 20683 0b60 50       		.byte	0x50
 20684 0b61 1D000000 		.4byte	.LVL135-1
 20685 0b65 30000000 		.4byte	.LFE41
 20686 0b69 0400     		.2byte	0x4
 20687 0b6b F3       		.byte	0xf3
 20688 0b6c 01       		.uleb128 0x1
 20689 0b6d 50       		.byte	0x50
 20690 0b6e 9F       		.byte	0x9f
 20691 0b6f 00000000 		.4byte	0
 20692 0b73 00000000 		.4byte	0
 20693              	.LLST71:
 20694 0b77 00000000 		.4byte	.LVL131
 20695 0b7b 0F000000 		.4byte	.LVL132-1
 20696 0b7f 0100     		.2byte	0x1
 20697 0b81 51       		.byte	0x51
 20698 0b82 0F000000 		.4byte	.LVL132-1
 20699 0b86 12000000 		.4byte	.LVL133
 20700 0b8a 0100     		.2byte	0x1
 20701 0b8c 55       		.byte	0x55
 20702 0b8d 12000000 		.4byte	.LVL133
 20703 0b91 18000000 		.4byte	.LVL134
 20704 0b95 0100     		.2byte	0x1
 20705 0b97 51       		.byte	0x51
 20706 0b98 18000000 		.4byte	.LVL134
 20707 0b9c 2E000000 		.4byte	.LVL138
 20708 0ba0 0100     		.2byte	0x1
 20709 0ba2 55       		.byte	0x55
 20710 0ba3 2E000000 		.4byte	.LVL138
 20711 0ba7 30000000 		.4byte	.LFE41
 20712 0bab 0400     		.2byte	0x4
 20713 0bad F3       		.byte	0xf3
 20714 0bae 01       		.uleb128 0x1
 20715 0baf 51       		.byte	0x51
 20716 0bb0 9F       		.byte	0x9f
 20717 0bb1 00000000 		.4byte	0
 20718 0bb5 00000000 		.4byte	0
 20719              	.LLST72:
 20720 0bb9 00000000 		.4byte	.LVL131
 20721 0bbd 0F000000 		.4byte	.LVL132-1
 20722 0bc1 0100     		.2byte	0x1
 20723 0bc3 52       		.byte	0x52
 20724 0bc4 0F000000 		.4byte	.LVL132-1
 20725 0bc8 12000000 		.4byte	.LVL133
 20726 0bcc 0100     		.2byte	0x1
 20727 0bce 54       		.byte	0x54
 20728 0bcf 12000000 		.4byte	.LVL133
 20729 0bd3 1D000000 		.4byte	.LVL135-1
 20730 0bd7 0100     		.2byte	0x1
 20731 0bd9 52       		.byte	0x52
 20732 0bda 1D000000 		.4byte	.LVL135-1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 570


 20733 0bde 2C000000 		.4byte	.LVL137
 20734 0be2 0300     		.2byte	0x3
 20735 0be4 74       		.byte	0x74
 20736 0be5 01       		.sleb128 1
 20737 0be6 9F       		.byte	0x9f
 20738 0be7 2C000000 		.4byte	.LVL137
 20739 0beb 30000000 		.4byte	.LFE41
 20740 0bef 0400     		.2byte	0x4
 20741 0bf1 F3       		.byte	0xf3
 20742 0bf2 01       		.uleb128 0x1
 20743 0bf3 52       		.byte	0x52
 20744 0bf4 9F       		.byte	0x9f
 20745 0bf5 00000000 		.4byte	0
 20746 0bf9 00000000 		.4byte	0
 20747              	.LLST73:
 20748 0bfd 00000000 		.4byte	.LVL139
 20749 0c01 0C000000 		.4byte	.LVL140
 20750 0c05 0100     		.2byte	0x1
 20751 0c07 50       		.byte	0x50
 20752 0c08 0C000000 		.4byte	.LVL140
 20753 0c0c 12000000 		.4byte	.LVL141
 20754 0c10 0400     		.2byte	0x4
 20755 0c12 70       		.byte	0x70
 20756 0c13 F47B     		.sleb128 -524
 20757 0c15 9F       		.byte	0x9f
 20758 0c16 12000000 		.4byte	.LVL141
 20759 0c1a 14000000 		.4byte	.LFE42
 20760 0c1e 0400     		.2byte	0x4
 20761 0c20 F3       		.byte	0xf3
 20762 0c21 01       		.uleb128 0x1
 20763 0c22 50       		.byte	0x50
 20764 0c23 9F       		.byte	0x9f
 20765 0c24 00000000 		.4byte	0
 20766 0c28 00000000 		.4byte	0
 20767              	.LLST74:
 20768 0c2c 00000000 		.4byte	.LVL142
 20769 0c30 21000000 		.4byte	.LVL143-1
 20770 0c34 0100     		.2byte	0x1
 20771 0c36 50       		.byte	0x50
 20772 0c37 21000000 		.4byte	.LVL143-1
 20773 0c3b 28000000 		.4byte	.LFE43
 20774 0c3f 0400     		.2byte	0x4
 20775 0c41 F3       		.byte	0xf3
 20776 0c42 01       		.uleb128 0x1
 20777 0c43 50       		.byte	0x50
 20778 0c44 9F       		.byte	0x9f
 20779 0c45 00000000 		.4byte	0
 20780 0c49 00000000 		.4byte	0
 20781              	.LLST75:
 20782 0c4d 00000000 		.4byte	.LVL144
 20783 0c51 22000000 		.4byte	.LVL145
 20784 0c55 0100     		.2byte	0x1
 20785 0c57 50       		.byte	0x50
 20786 0c58 22000000 		.4byte	.LVL145
 20787 0c5c 24000000 		.4byte	.LFE44
 20788 0c60 0400     		.2byte	0x4
 20789 0c62 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 571


 20790 0c63 01       		.uleb128 0x1
 20791 0c64 50       		.byte	0x50
 20792 0c65 9F       		.byte	0x9f
 20793 0c66 00000000 		.4byte	0
 20794 0c6a 00000000 		.4byte	0
 20795              	.LLST76:
 20796 0c6e 00000000 		.4byte	.LVL146
 20797 0c72 14000000 		.4byte	.LVL149
 20798 0c76 0100     		.2byte	0x1
 20799 0c78 50       		.byte	0x50
 20800 0c79 14000000 		.4byte	.LVL149
 20801 0c7d 3A000000 		.4byte	.LVL154
 20802 0c81 0100     		.2byte	0x1
 20803 0c83 56       		.byte	0x56
 20804 0c84 3A000000 		.4byte	.LVL154
 20805 0c88 3C000000 		.4byte	.LVL155
 20806 0c8c 0100     		.2byte	0x1
 20807 0c8e 50       		.byte	0x50
 20808 0c8f 3C000000 		.4byte	.LVL155
 20809 0c93 40000000 		.4byte	.LVL156
 20810 0c97 0400     		.2byte	0x4
 20811 0c99 F3       		.byte	0xf3
 20812 0c9a 01       		.uleb128 0x1
 20813 0c9b 50       		.byte	0x50
 20814 0c9c 9F       		.byte	0x9f
 20815 0c9d 40000000 		.4byte	.LVL156
 20816 0ca1 42000000 		.4byte	.LVL157
 20817 0ca5 0100     		.2byte	0x1
 20818 0ca7 56       		.byte	0x56
 20819 0ca8 42000000 		.4byte	.LVL157
 20820 0cac 4C000000 		.4byte	.LFE45
 20821 0cb0 0400     		.2byte	0x4
 20822 0cb2 F3       		.byte	0xf3
 20823 0cb3 01       		.uleb128 0x1
 20824 0cb4 50       		.byte	0x50
 20825 0cb5 9F       		.byte	0x9f
 20826 0cb6 00000000 		.4byte	0
 20827 0cba 00000000 		.4byte	0
 20828              	.LLST77:
 20829 0cbe 00000000 		.4byte	.LVL146
 20830 0cc2 1F000000 		.4byte	.LVL150-1
 20831 0cc6 0100     		.2byte	0x1
 20832 0cc8 51       		.byte	0x51
 20833 0cc9 1F000000 		.4byte	.LVL150-1
 20834 0ccd 3A000000 		.4byte	.LVL154
 20835 0cd1 0100     		.2byte	0x1
 20836 0cd3 55       		.byte	0x55
 20837 0cd4 3A000000 		.4byte	.LVL154
 20838 0cd8 40000000 		.4byte	.LVL156
 20839 0cdc 0100     		.2byte	0x1
 20840 0cde 51       		.byte	0x51
 20841 0cdf 40000000 		.4byte	.LVL156
 20842 0ce3 42000000 		.4byte	.LVL157
 20843 0ce7 0100     		.2byte	0x1
 20844 0ce9 55       		.byte	0x55
 20845 0cea 42000000 		.4byte	.LVL157
 20846 0cee 4C000000 		.4byte	.LFE45
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 572


 20847 0cf2 0400     		.2byte	0x4
 20848 0cf4 F3       		.byte	0xf3
 20849 0cf5 01       		.uleb128 0x1
 20850 0cf6 51       		.byte	0x51
 20851 0cf7 9F       		.byte	0x9f
 20852 0cf8 00000000 		.4byte	0
 20853 0cfc 00000000 		.4byte	0
 20854              	.LLST78:
 20855 0d00 00000000 		.4byte	.LVL146
 20856 0d04 1F000000 		.4byte	.LVL150-1
 20857 0d08 0100     		.2byte	0x1
 20858 0d0a 52       		.byte	0x52
 20859 0d0b 1F000000 		.4byte	.LVL150-1
 20860 0d0f 3A000000 		.4byte	.LVL154
 20861 0d13 0100     		.2byte	0x1
 20862 0d15 54       		.byte	0x54
 20863 0d16 3A000000 		.4byte	.LVL154
 20864 0d1a 40000000 		.4byte	.LVL156
 20865 0d1e 0100     		.2byte	0x1
 20866 0d20 52       		.byte	0x52
 20867 0d21 40000000 		.4byte	.LVL156
 20868 0d25 42000000 		.4byte	.LVL157
 20869 0d29 0100     		.2byte	0x1
 20870 0d2b 54       		.byte	0x54
 20871 0d2c 42000000 		.4byte	.LVL157
 20872 0d30 4C000000 		.4byte	.LFE45
 20873 0d34 0400     		.2byte	0x4
 20874 0d36 F3       		.byte	0xf3
 20875 0d37 01       		.uleb128 0x1
 20876 0d38 52       		.byte	0x52
 20877 0d39 9F       		.byte	0x9f
 20878 0d3a 00000000 		.4byte	0
 20879 0d3e 00000000 		.4byte	0
 20880              	.LLST79:
 20881 0d42 00000000 		.4byte	.LVL146
 20882 0d46 1F000000 		.4byte	.LVL150-1
 20883 0d4a 0100     		.2byte	0x1
 20884 0d4c 53       		.byte	0x53
 20885 0d4d 1F000000 		.4byte	.LVL150-1
 20886 0d51 3A000000 		.4byte	.LVL154
 20887 0d55 0200     		.2byte	0x2
 20888 0d57 91       		.byte	0x91
 20889 0d58 64       		.sleb128 -28
 20890 0d59 3A000000 		.4byte	.LVL154
 20891 0d5d 40000000 		.4byte	.LVL156
 20892 0d61 0100     		.2byte	0x1
 20893 0d63 53       		.byte	0x53
 20894 0d64 40000000 		.4byte	.LVL156
 20895 0d68 42000000 		.4byte	.LVL157
 20896 0d6c 0200     		.2byte	0x2
 20897 0d6e 91       		.byte	0x91
 20898 0d6f 64       		.sleb128 -28
 20899 0d70 42000000 		.4byte	.LVL157
 20900 0d74 4C000000 		.4byte	.LFE45
 20901 0d78 0400     		.2byte	0x4
 20902 0d7a F3       		.byte	0xf3
 20903 0d7b 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 573


 20904 0d7c 53       		.byte	0x53
 20905 0d7d 9F       		.byte	0x9f
 20906 0d7e 00000000 		.4byte	0
 20907 0d82 00000000 		.4byte	0
 20908              	.LLST80:
 20909 0d86 00000000 		.4byte	.LVL146
 20910 0d8a 36000000 		.4byte	.LVL152
 20911 0d8e 0400     		.2byte	0x4
 20912 0d90 0B       		.byte	0xb
 20913 0d91 53FF     		.2byte	0xff53
 20914 0d93 9F       		.byte	0x9f
 20915 0d94 36000000 		.4byte	.LVL152
 20916 0d98 3A000000 		.4byte	.LVL154
 20917 0d9c 0200     		.2byte	0x2
 20918 0d9e 30       		.byte	0x30
 20919 0d9f 9F       		.byte	0x9f
 20920 0da0 3A000000 		.4byte	.LVL154
 20921 0da4 42000000 		.4byte	.LVL157
 20922 0da8 0400     		.2byte	0x4
 20923 0daa 0B       		.byte	0xb
 20924 0dab 53FF     		.2byte	0xff53
 20925 0dad 9F       		.byte	0x9f
 20926 0dae 00000000 		.4byte	0
 20927 0db2 00000000 		.4byte	0
 20928              	.LLST81:
 20929 0db6 06000000 		.4byte	.LVL147
 20930 0dba 12000000 		.4byte	.LVL148
 20931 0dbe 0200     		.2byte	0x2
 20932 0dc0 30       		.byte	0x30
 20933 0dc1 9F       		.byte	0x9f
 20934 0dc2 12000000 		.4byte	.LVL148
 20935 0dc6 3A000000 		.4byte	.LVL154
 20936 0dca 0100     		.2byte	0x1
 20937 0dcc 57       		.byte	0x57
 20938 0dcd 40000000 		.4byte	.LVL156
 20939 0dd1 42000000 		.4byte	.LVL157
 20940 0dd5 0100     		.2byte	0x1
 20941 0dd7 57       		.byte	0x57
 20942 0dd8 00000000 		.4byte	0
 20943 0ddc 00000000 		.4byte	0
 20944              	.LLST82:
 20945 0de0 26000000 		.4byte	.LVL151
 20946 0de4 38000000 		.4byte	.LVL153
 20947 0de8 0100     		.2byte	0x1
 20948 0dea 50       		.byte	0x50
 20949 0deb 38000000 		.4byte	.LVL153
 20950 0def 3A000000 		.4byte	.LVL154
 20951 0df3 0300     		.2byte	0x3
 20952 0df5 73       		.byte	0x73
 20953 0df6 6C       		.sleb128 -20
 20954 0df7 9F       		.byte	0x9f
 20955 0df8 00000000 		.4byte	0
 20956 0dfc 00000000 		.4byte	0
 20957              	.LLST83:
 20958 0e00 00000000 		.4byte	.LVL158
 20959 0e04 1C000000 		.4byte	.LVL161
 20960 0e08 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 574


 20961 0e0a 50       		.byte	0x50
 20962 0e0b 1C000000 		.4byte	.LVL161
 20963 0e0f 24000000 		.4byte	.LVL163
 20964 0e13 0100     		.2byte	0x1
 20965 0e15 54       		.byte	0x54
 20966 0e16 24000000 		.4byte	.LVL163
 20967 0e1a 36000000 		.4byte	.LVL168
 20968 0e1e 0100     		.2byte	0x1
 20969 0e20 50       		.byte	0x50
 20970 0e21 36000000 		.4byte	.LVL168
 20971 0e25 38000000 		.4byte	.LFE46
 20972 0e29 0400     		.2byte	0x4
 20973 0e2b F3       		.byte	0xf3
 20974 0e2c 01       		.uleb128 0x1
 20975 0e2d 50       		.byte	0x50
 20976 0e2e 9F       		.byte	0x9f
 20977 0e2f 00000000 		.4byte	0
 20978 0e33 00000000 		.4byte	0
 20979              	.LLST84:
 20980 0e37 0C000000 		.4byte	.LVL159
 20981 0e3b 1F000000 		.4byte	.LVL162-1
 20982 0e3f 0100     		.2byte	0x1
 20983 0e41 53       		.byte	0x53
 20984 0e42 24000000 		.4byte	.LVL163
 20985 0e46 36000000 		.4byte	.LVL168
 20986 0e4a 0100     		.2byte	0x1
 20987 0e4c 53       		.byte	0x53
 20988 0e4d 00000000 		.4byte	0
 20989 0e51 00000000 		.4byte	0
 20990              	.LLST85:
 20991 0e55 1A000000 		.4byte	.LVL160
 20992 0e59 1F000000 		.4byte	.LVL162-1
 20993 0e5d 0100     		.2byte	0x1
 20994 0e5f 53       		.byte	0x53
 20995 0e60 00000000 		.4byte	0
 20996 0e64 00000000 		.4byte	0
 20997              	.LLST86:
 20998 0e68 26000000 		.4byte	.LVL164
 20999 0e6c 2A000000 		.4byte	.LVL165
 21000 0e70 0200     		.2byte	0x2
 21001 0e72 73       		.byte	0x73
 21002 0e73 08       		.sleb128 8
 21003 0e74 00000000 		.4byte	0
 21004 0e78 00000000 		.4byte	0
 21005              	.LLST87:
 21006 0e7c 26000000 		.4byte	.LVL164
 21007 0e80 2A000000 		.4byte	.LVL165
 21008 0e84 0100     		.2byte	0x1
 21009 0e86 52       		.byte	0x52
 21010 0e87 00000000 		.4byte	0
 21011 0e8b 00000000 		.4byte	0
 21012              	.LLST88:
 21013 0e8f 26000000 		.4byte	.LVL164
 21014 0e93 2E000000 		.4byte	.LVL166
 21015 0e97 0100     		.2byte	0x1
 21016 0e99 52       		.byte	0x52
 21017 0e9a 2E000000 		.4byte	.LVL166
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 575


 21018 0e9e 34000000 		.4byte	.LVL167
 21019 0ea2 0300     		.2byte	0x3
 21020 0ea4 72       		.byte	0x72
 21021 0ea5 01       		.sleb128 1
 21022 0ea6 9F       		.byte	0x9f
 21023 0ea7 34000000 		.4byte	.LVL167
 21024 0eab 36000000 		.4byte	.LVL168
 21025 0eaf 0100     		.2byte	0x1
 21026 0eb1 52       		.byte	0x52
 21027 0eb2 00000000 		.4byte	0
 21028 0eb6 00000000 		.4byte	0
 21029              	.LLST89:
 21030 0eba 00000000 		.4byte	.LVL169
 21031 0ebe 0F000000 		.4byte	.LVL170-1
 21032 0ec2 0100     		.2byte	0x1
 21033 0ec4 50       		.byte	0x50
 21034 0ec5 0F000000 		.4byte	.LVL170-1
 21035 0ec9 1E000000 		.4byte	.LVL172
 21036 0ecd 0100     		.2byte	0x1
 21037 0ecf 54       		.byte	0x54
 21038 0ed0 1E000000 		.4byte	.LVL172
 21039 0ed4 20000000 		.4byte	.LFE48
 21040 0ed8 0400     		.2byte	0x4
 21041 0eda F3       		.byte	0xf3
 21042 0edb 01       		.uleb128 0x1
 21043 0edc 50       		.byte	0x50
 21044 0edd 9F       		.byte	0x9f
 21045 0ede 00000000 		.4byte	0
 21046 0ee2 00000000 		.4byte	0
 21047              	.LLST90:
 21048 0ee6 18000000 		.4byte	.LVL171
 21049 0eea 1E000000 		.4byte	.LVL172
 21050 0eee 0100     		.2byte	0x1
 21051 0ef0 54       		.byte	0x54
 21052 0ef1 00000000 		.4byte	0
 21053 0ef5 00000000 		.4byte	0
 21054              	.LLST91:
 21055 0ef9 00000000 		.4byte	.LVL173
 21056 0efd 0A000000 		.4byte	.LVL175
 21057 0f01 0200     		.2byte	0x2
 21058 0f03 30       		.byte	0x30
 21059 0f04 9F       		.byte	0x9f
 21060 0f05 0A000000 		.4byte	.LVL175
 21061 0f09 13000000 		.4byte	.LVL176-1
 21062 0f0d 0100     		.2byte	0x1
 21063 0f0f 50       		.byte	0x50
 21064 0f10 13000000 		.4byte	.LVL176-1
 21065 0f14 2A000000 		.4byte	.LVL179
 21066 0f18 0100     		.2byte	0x1
 21067 0f1a 54       		.byte	0x54
 21068 0f1b 00000000 		.4byte	0
 21069 0f1f 00000000 		.4byte	0
 21070              	.LLST92:
 21071 0f23 00000000 		.4byte	.LVL180
 21072 0f27 0E000000 		.4byte	.LVL181
 21073 0f2b 0100     		.2byte	0x1
 21074 0f2d 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 576


 21075 0f2e 0E000000 		.4byte	.LVL181
 21076 0f32 28000000 		.4byte	.LVL185
 21077 0f36 0100     		.2byte	0x1
 21078 0f38 54       		.byte	0x54
 21079 0f39 28000000 		.4byte	.LVL185
 21080 0f3d 2A000000 		.4byte	.LVL186
 21081 0f41 0100     		.2byte	0x1
 21082 0f43 50       		.byte	0x50
 21083 0f44 2A000000 		.4byte	.LVL186
 21084 0f48 2C000000 		.4byte	.LVL187
 21085 0f4c 0400     		.2byte	0x4
 21086 0f4e F3       		.byte	0xf3
 21087 0f4f 01       		.uleb128 0x1
 21088 0f50 50       		.byte	0x50
 21089 0f51 9F       		.byte	0x9f
 21090 0f52 2C000000 		.4byte	.LVL187
 21091 0f56 2E000000 		.4byte	.LVL188
 21092 0f5a 0100     		.2byte	0x1
 21093 0f5c 54       		.byte	0x54
 21094 0f5d 2E000000 		.4byte	.LVL188
 21095 0f61 32000000 		.4byte	.LFE49
 21096 0f65 0400     		.2byte	0x4
 21097 0f67 F3       		.byte	0xf3
 21098 0f68 01       		.uleb128 0x1
 21099 0f69 50       		.byte	0x50
 21100 0f6a 9F       		.byte	0x9f
 21101 0f6b 00000000 		.4byte	0
 21102 0f6f 00000000 		.4byte	0
 21103              	.LLST93:
 21104 0f73 00000000 		.4byte	.LVL189
 21105 0f77 02000000 		.4byte	.LVL190
 21106 0f7b 0100     		.2byte	0x1
 21107 0f7d 50       		.byte	0x50
 21108 0f7e 02000000 		.4byte	.LVL190
 21109 0f82 04000000 		.4byte	.LVL191
 21110 0f86 0300     		.2byte	0x3
 21111 0f88 70       		.byte	0x70
 21112 0f89 7C       		.sleb128 -4
 21113 0f8a 9F       		.byte	0x9f
 21114 0f8b 04000000 		.4byte	.LVL191
 21115 0f8f 06000000 		.4byte	.LFE52
 21116 0f93 0400     		.2byte	0x4
 21117 0f95 F3       		.byte	0xf3
 21118 0f96 01       		.uleb128 0x1
 21119 0f97 50       		.byte	0x50
 21120 0f98 9F       		.byte	0x9f
 21121 0f99 00000000 		.4byte	0
 21122 0f9d 00000000 		.4byte	0
 21123              	.LLST94:
 21124 0fa1 00000000 		.4byte	.LVL192
 21125 0fa5 08000000 		.4byte	.LVL193
 21126 0fa9 0100     		.2byte	0x1
 21127 0fab 50       		.byte	0x50
 21128 0fac 08000000 		.4byte	.LVL193
 21129 0fb0 0A000000 		.4byte	.LVL194
 21130 0fb4 0100     		.2byte	0x1
 21131 0fb6 53       		.byte	0x53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 577


 21132 0fb7 0A000000 		.4byte	.LVL194
 21133 0fbb 0E000000 		.4byte	.LVL195
 21134 0fbf 0300     		.2byte	0x3
 21135 0fc1 73       		.byte	0x73
 21136 0fc2 4D       		.sleb128 -51
 21137 0fc3 9F       		.byte	0x9f
 21138 0fc4 0E000000 		.4byte	.LVL195
 21139 0fc8 10000000 		.4byte	.LVL196
 21140 0fcc 0100     		.2byte	0x1
 21141 0fce 50       		.byte	0x50
 21142 0fcf 10000000 		.4byte	.LVL196
 21143 0fd3 14000000 		.4byte	.LFE53
 21144 0fd7 0400     		.2byte	0x4
 21145 0fd9 F3       		.byte	0xf3
 21146 0fda 01       		.uleb128 0x1
 21147 0fdb 50       		.byte	0x50
 21148 0fdc 9F       		.byte	0x9f
 21149 0fdd 00000000 		.4byte	0
 21150 0fe1 00000000 		.4byte	0
 21151              	.LLST95:
 21152 0fe5 00000000 		.4byte	.LVL197
 21153 0fe9 0C000000 		.4byte	.LVL198
 21154 0fed 0100     		.2byte	0x1
 21155 0fef 50       		.byte	0x50
 21156 0ff0 0C000000 		.4byte	.LVL198
 21157 0ff4 14000000 		.4byte	.LVL199
 21158 0ff8 0400     		.2byte	0x4
 21159 0ffa 70       		.byte	0x70
 21160 0ffb F47B     		.sleb128 -524
 21161 0ffd 9F       		.byte	0x9f
 21162 0ffe 14000000 		.4byte	.LVL199
 21163 1002 16000000 		.4byte	.LVL200
 21164 1006 0400     		.2byte	0x4
 21165 1008 F3       		.byte	0xf3
 21166 1009 01       		.uleb128 0x1
 21167 100a 50       		.byte	0x50
 21168 100b 9F       		.byte	0x9f
 21169 100c 16000000 		.4byte	.LVL200
 21170 1010 18000000 		.4byte	.LVL201
 21171 1014 0100     		.2byte	0x1
 21172 1016 50       		.byte	0x50
 21173 1017 18000000 		.4byte	.LVL201
 21174 101b 1C000000 		.4byte	.LFE55
 21175 101f 0400     		.2byte	0x4
 21176 1021 F3       		.byte	0xf3
 21177 1022 01       		.uleb128 0x1
 21178 1023 50       		.byte	0x50
 21179 1024 9F       		.byte	0x9f
 21180 1025 00000000 		.4byte	0
 21181 1029 00000000 		.4byte	0
 21182              	.LLST96:
 21183 102d 00000000 		.4byte	.LVL202
 21184 1031 0A000000 		.4byte	.LVL204
 21185 1035 0100     		.2byte	0x1
 21186 1037 50       		.byte	0x50
 21187 1038 0A000000 		.4byte	.LVL204
 21188 103c 0E000000 		.4byte	.LVL205
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 578


 21189 1040 0300     		.2byte	0x3
 21190 1042 70       		.byte	0x70
 21191 1043 4C       		.sleb128 -52
 21192 1044 9F       		.byte	0x9f
 21193 1045 0E000000 		.4byte	.LVL205
 21194 1049 10000000 		.4byte	.LVL206
 21195 104d 0400     		.2byte	0x4
 21196 104f F3       		.byte	0xf3
 21197 1050 01       		.uleb128 0x1
 21198 1051 50       		.byte	0x50
 21199 1052 9F       		.byte	0x9f
 21200 1053 10000000 		.4byte	.LVL206
 21201 1057 12000000 		.4byte	.LVL207
 21202 105b 0100     		.2byte	0x1
 21203 105d 50       		.byte	0x50
 21204 105e 12000000 		.4byte	.LVL207
 21205 1062 16000000 		.4byte	.LFE57
 21206 1066 0400     		.2byte	0x4
 21207 1068 F3       		.byte	0xf3
 21208 1069 01       		.uleb128 0x1
 21209 106a 50       		.byte	0x50
 21210 106b 9F       		.byte	0x9f
 21211 106c 00000000 		.4byte	0
 21212 1070 00000000 		.4byte	0
 21213              	.LLST97:
 21214 1074 04000000 		.4byte	.LVL203
 21215 1078 10000000 		.4byte	.LVL206
 21216 107c 0100     		.2byte	0x1
 21217 107e 51       		.byte	0x51
 21218 107f 00000000 		.4byte	0
 21219 1083 00000000 		.4byte	0
 21220              	.LLST98:
 21221 1087 04000000 		.4byte	.LVL203
 21222 108b 0A000000 		.4byte	.LVL204
 21223 108f 0300     		.2byte	0x3
 21224 1091 70       		.byte	0x70
 21225 1092 34       		.sleb128 52
 21226 1093 9F       		.byte	0x9f
 21227 1094 0A000000 		.4byte	.LVL204
 21228 1098 0E000000 		.4byte	.LVL205
 21229 109c 0100     		.2byte	0x1
 21230 109e 50       		.byte	0x50
 21231 109f 0E000000 		.4byte	.LVL205
 21232 10a3 10000000 		.4byte	.LVL206
 21233 10a7 0600     		.2byte	0x6
 21234 10a9 F3       		.byte	0xf3
 21235 10aa 01       		.uleb128 0x1
 21236 10ab 50       		.byte	0x50
 21237 10ac 23       		.byte	0x23
 21238 10ad 34       		.uleb128 0x34
 21239 10ae 9F       		.byte	0x9f
 21240 10af 00000000 		.4byte	0
 21241 10b3 00000000 		.4byte	0
 21242              	.LLST99:
 21243 10b7 00000000 		.4byte	.LVL208
 21244 10bb 10000000 		.4byte	.LVL210
 21245 10bf 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 579


 21246 10c1 50       		.byte	0x50
 21247 10c2 10000000 		.4byte	.LVL210
 21248 10c6 12000000 		.4byte	.LVL211
 21249 10ca 0400     		.2byte	0x4
 21250 10cc F3       		.byte	0xf3
 21251 10cd 01       		.uleb128 0x1
 21252 10ce 50       		.byte	0x50
 21253 10cf 9F       		.byte	0x9f
 21254 10d0 12000000 		.4byte	.LVL211
 21255 10d4 14000000 		.4byte	.LVL212
 21256 10d8 0100     		.2byte	0x1
 21257 10da 50       		.byte	0x50
 21258 10db 14000000 		.4byte	.LVL212
 21259 10df 18000000 		.4byte	.LFE58
 21260 10e3 0400     		.2byte	0x4
 21261 10e5 F3       		.byte	0xf3
 21262 10e6 01       		.uleb128 0x1
 21263 10e7 50       		.byte	0x50
 21264 10e8 9F       		.byte	0x9f
 21265 10e9 00000000 		.4byte	0
 21266 10ed 00000000 		.4byte	0
 21267              	.LLST100:
 21268 10f1 04000000 		.4byte	.LVL209
 21269 10f5 12000000 		.4byte	.LVL211
 21270 10f9 0100     		.2byte	0x1
 21271 10fb 51       		.byte	0x51
 21272 10fc 00000000 		.4byte	0
 21273 1100 00000000 		.4byte	0
 21274              	.LLST101:
 21275 1104 04000000 		.4byte	.LVL209
 21276 1108 10000000 		.4byte	.LVL210
 21277 110c 0400     		.2byte	0x4
 21278 110e 70       		.byte	0x70
 21279 110f 9804     		.sleb128 536
 21280 1111 9F       		.byte	0x9f
 21281 1112 10000000 		.4byte	.LVL210
 21282 1116 12000000 		.4byte	.LVL211
 21283 111a 0700     		.2byte	0x7
 21284 111c F3       		.byte	0xf3
 21285 111d 01       		.uleb128 0x1
 21286 111e 50       		.byte	0x50
 21287 111f 23       		.byte	0x23
 21288 1120 9804     		.uleb128 0x218
 21289 1122 9F       		.byte	0x9f
 21290 1123 00000000 		.4byte	0
 21291 1127 00000000 		.4byte	0
 21292              	.LLST102:
 21293 112b 00000000 		.4byte	.LVL213
 21294 112f 11000000 		.4byte	.LVL214-1
 21295 1133 0100     		.2byte	0x1
 21296 1135 50       		.byte	0x50
 21297 1136 11000000 		.4byte	.LVL214-1
 21298 113a 58000000 		.4byte	.LVL217
 21299 113e 0100     		.2byte	0x1
 21300 1140 54       		.byte	0x54
 21301 1141 58000000 		.4byte	.LVL217
 21302 1145 5A000000 		.4byte	.LVL218
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 580


 21303 1149 0100     		.2byte	0x1
 21304 114b 50       		.byte	0x50
 21305 114c 5A000000 		.4byte	.LVL218
 21306 1150 68000000 		.4byte	.LFE59
 21307 1154 0400     		.2byte	0x4
 21308 1156 F3       		.byte	0xf3
 21309 1157 01       		.uleb128 0x1
 21310 1158 50       		.byte	0x50
 21311 1159 9F       		.byte	0x9f
 21312 115a 00000000 		.4byte	0
 21313 115e 00000000 		.4byte	0
 21314              	.LLST103:
 21315 1162 00000000 		.4byte	.LVL213
 21316 1166 11000000 		.4byte	.LVL214-1
 21317 116a 0100     		.2byte	0x1
 21318 116c 51       		.byte	0x51
 21319 116d 11000000 		.4byte	.LVL214-1
 21320 1171 58000000 		.4byte	.LVL217
 21321 1175 0400     		.2byte	0x4
 21322 1177 F3       		.byte	0xf3
 21323 1178 01       		.uleb128 0x1
 21324 1179 51       		.byte	0x51
 21325 117a 9F       		.byte	0x9f
 21326 117b 58000000 		.4byte	.LVL217
 21327 117f 5C000000 		.4byte	.LVL219
 21328 1183 0100     		.2byte	0x1
 21329 1185 51       		.byte	0x51
 21330 1186 5C000000 		.4byte	.LVL219
 21331 118a 68000000 		.4byte	.LFE59
 21332 118e 0400     		.2byte	0x4
 21333 1190 F3       		.byte	0xf3
 21334 1191 01       		.uleb128 0x1
 21335 1192 51       		.byte	0x51
 21336 1193 9F       		.byte	0x9f
 21337 1194 00000000 		.4byte	0
 21338 1198 00000000 		.4byte	0
 21339              	.LLST104:
 21340 119c 00000000 		.4byte	.LVL213
 21341 11a0 18000000 		.4byte	.LVL215
 21342 11a4 0200     		.2byte	0x2
 21343 11a6 31       		.byte	0x31
 21344 11a7 9F       		.byte	0x9f
 21345 11a8 18000000 		.4byte	.LVL215
 21346 11ac 58000000 		.4byte	.LVL217
 21347 11b0 0200     		.2byte	0x2
 21348 11b2 30       		.byte	0x30
 21349 11b3 9F       		.byte	0x9f
 21350 11b4 58000000 		.4byte	.LVL217
 21351 11b8 5C000000 		.4byte	.LVL219
 21352 11bc 0200     		.2byte	0x2
 21353 11be 31       		.byte	0x31
 21354 11bf 9F       		.byte	0x9f
 21355 11c0 00000000 		.4byte	0
 21356 11c4 00000000 		.4byte	0
 21357              	.LLST105:
 21358 11c8 00000000 		.4byte	.LVL220
 21359 11cc 06000000 		.4byte	.LVL221
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 581


 21360 11d0 0100     		.2byte	0x1
 21361 11d2 50       		.byte	0x50
 21362 11d3 06000000 		.4byte	.LVL221
 21363 11d7 4C000000 		.4byte	.LVL233
 21364 11db 0100     		.2byte	0x1
 21365 11dd 56       		.byte	0x56
 21366 11de 4C000000 		.4byte	.LVL233
 21367 11e2 4E000000 		.4byte	.LFE62
 21368 11e6 0400     		.2byte	0x4
 21369 11e8 F3       		.byte	0xf3
 21370 11e9 01       		.uleb128 0x1
 21371 11ea 50       		.byte	0x50
 21372 11eb 9F       		.byte	0x9f
 21373 11ec 00000000 		.4byte	0
 21374 11f0 00000000 		.4byte	0
 21375              	.LLST106:
 21376 11f4 00000000 		.4byte	.LVL220
 21377 11f8 0D000000 		.4byte	.LVL222-1
 21378 11fc 0100     		.2byte	0x1
 21379 11fe 51       		.byte	0x51
 21380 11ff 0D000000 		.4byte	.LVL222-1
 21381 1203 4C000000 		.4byte	.LVL234
 21382 1207 0100     		.2byte	0x1
 21383 1209 57       		.byte	0x57
 21384 120a 4C000000 		.4byte	.LVL234
 21385 120e 4E000000 		.4byte	.LFE62
 21386 1212 0400     		.2byte	0x4
 21387 1214 F3       		.byte	0xf3
 21388 1215 01       		.uleb128 0x1
 21389 1216 51       		.byte	0x51
 21390 1217 9F       		.byte	0x9f
 21391 1218 00000000 		.4byte	0
 21392 121c 00000000 		.4byte	0
 21393              	.LLST107:
 21394 1220 2A000000 		.4byte	.LVL225
 21395 1224 44000000 		.4byte	.LVL231
 21396 1228 0100     		.2byte	0x1
 21397 122a 54       		.byte	0x54
 21398 122b 00000000 		.4byte	0
 21399 122f 00000000 		.4byte	0
 21400              	.LLST108:
 21401 1233 00000000 		.4byte	.LVL220
 21402 1237 44000000 		.4byte	.LVL231
 21403 123b 0200     		.2byte	0x2
 21404 123d 30       		.byte	0x30
 21405 123e 9F       		.byte	0x9f
 21406 123f 44000000 		.4byte	.LVL231
 21407 1243 4A000000 		.4byte	.LVL232
 21408 1247 0100     		.2byte	0x1
 21409 1249 54       		.byte	0x54
 21410 124a 00000000 		.4byte	0
 21411 124e 00000000 		.4byte	0
 21412              	.LLST110:
 21413 1252 2E000000 		.4byte	.LVL226
 21414 1256 34000000 		.4byte	.LVL227
 21415 125a 0300     		.2byte	0x3
 21416 125c 74       		.byte	0x74
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 582


 21417 125d 20       		.sleb128 32
 21418 125e 9F       		.byte	0x9f
 21419 125f 34000000 		.4byte	.LVL227
 21420 1263 39000000 		.4byte	.LVL228-1
 21421 1267 0100     		.2byte	0x1
 21422 1269 51       		.byte	0x51
 21423 126a 39000000 		.4byte	.LVL228-1
 21424 126e 40000000 		.4byte	.LVL229
 21425 1272 0300     		.2byte	0x3
 21426 1274 74       		.byte	0x74
 21427 1275 20       		.sleb128 32
 21428 1276 9F       		.byte	0x9f
 21429 1277 42000000 		.4byte	.LVL230
 21430 127b 44000000 		.4byte	.LVL231
 21431 127f 0300     		.2byte	0x3
 21432 1281 74       		.byte	0x74
 21433 1282 20       		.sleb128 32
 21434 1283 9F       		.byte	0x9f
 21435 1284 00000000 		.4byte	0
 21436 1288 00000000 		.4byte	0
 21437              	.LLST111:
 21438 128c 00000000 		.4byte	.LVL235
 21439 1290 06000000 		.4byte	.LVL237
 21440 1294 0100     		.2byte	0x1
 21441 1296 50       		.byte	0x50
 21442 1297 06000000 		.4byte	.LVL237
 21443 129b 2E000000 		.4byte	.LVL241
 21444 129f 0100     		.2byte	0x1
 21445 12a1 54       		.byte	0x54
 21446 12a2 2E000000 		.4byte	.LVL241
 21447 12a6 4E000000 		.4byte	.LVL248
 21448 12aa 0400     		.2byte	0x4
 21449 12ac 75       		.byte	0x75
 21450 12ad B07F     		.sleb128 -80
 21451 12af 9F       		.byte	0x9f
 21452 12b0 4E000000 		.4byte	.LVL248
 21453 12b4 50000000 		.4byte	.LFE63
 21454 12b8 0400     		.2byte	0x4
 21455 12ba F3       		.byte	0xf3
 21456 12bb 01       		.uleb128 0x1
 21457 12bc 50       		.byte	0x50
 21458 12bd 9F       		.byte	0x9f
 21459 12be 00000000 		.4byte	0
 21460 12c2 00000000 		.4byte	0
 21461              	.LLST112:
 21462 12c6 00000000 		.4byte	.LVL235
 21463 12ca 0B000000 		.4byte	.LVL238-1
 21464 12ce 0100     		.2byte	0x1
 21465 12d0 51       		.byte	0x51
 21466 12d1 0B000000 		.4byte	.LVL238-1
 21467 12d5 4E000000 		.4byte	.LVL249
 21468 12d9 0100     		.2byte	0x1
 21469 12db 56       		.byte	0x56
 21470 12dc 4E000000 		.4byte	.LVL249
 21471 12e0 50000000 		.4byte	.LFE63
 21472 12e4 0400     		.2byte	0x4
 21473 12e6 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 583


 21474 12e7 01       		.uleb128 0x1
 21475 12e8 51       		.byte	0x51
 21476 12e9 9F       		.byte	0x9f
 21477 12ea 00000000 		.4byte	0
 21478 12ee 00000000 		.4byte	0
 21479              	.LLST113:
 21480 12f2 04000000 		.4byte	.LVL236
 21481 12f6 06000000 		.4byte	.LVL237
 21482 12fa 0100     		.2byte	0x1
 21483 12fc 50       		.byte	0x50
 21484 12fd 06000000 		.4byte	.LVL237
 21485 1301 2E000000 		.4byte	.LVL241
 21486 1305 0100     		.2byte	0x1
 21487 1307 54       		.byte	0x54
 21488 1308 2E000000 		.4byte	.LVL241
 21489 130c 4E000000 		.4byte	.LVL248
 21490 1310 0400     		.2byte	0x4
 21491 1312 75       		.byte	0x75
 21492 1313 B07F     		.sleb128 -80
 21493 1315 9F       		.byte	0x9f
 21494 1316 4E000000 		.4byte	.LVL248
 21495 131a 50000000 		.4byte	.LFE63
 21496 131e 0400     		.2byte	0x4
 21497 1320 F3       		.byte	0xf3
 21498 1321 01       		.uleb128 0x1
 21499 1322 50       		.byte	0x50
 21500 1323 9F       		.byte	0x9f
 21501 1324 00000000 		.4byte	0
 21502 1328 00000000 		.4byte	0
 21503              	.LLST114:
 21504 132c 04000000 		.4byte	.LVL236
 21505 1330 46000000 		.4byte	.LVL246
 21506 1334 0200     		.2byte	0x2
 21507 1336 30       		.byte	0x30
 21508 1337 9F       		.byte	0x9f
 21509 1338 46000000 		.4byte	.LVL246
 21510 133c 4E000000 		.4byte	.LVL248
 21511 1340 0100     		.2byte	0x1
 21512 1342 54       		.byte	0x54
 21513 1343 00000000 		.4byte	0
 21514 1347 00000000 		.4byte	0
 21515              	.LLST115:
 21516 134b 2E000000 		.4byte	.LVL241
 21517 134f 4E000000 		.4byte	.LVL248
 21518 1353 0100     		.2byte	0x1
 21519 1355 54       		.byte	0x54
 21520 1356 00000000 		.4byte	0
 21521 135a 00000000 		.4byte	0
 21522              	.LLST116:
 21523 135e 04000000 		.4byte	.LVL236
 21524 1362 0B000000 		.4byte	.LVL238-1
 21525 1366 0100     		.2byte	0x1
 21526 1368 51       		.byte	0x51
 21527 1369 0B000000 		.4byte	.LVL238-1
 21528 136d 4E000000 		.4byte	.LVL249
 21529 1371 0100     		.2byte	0x1
 21530 1373 56       		.byte	0x56
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 584


 21531 1374 4E000000 		.4byte	.LVL249
 21532 1378 50000000 		.4byte	.LFE63
 21533 137c 0400     		.2byte	0x4
 21534 137e F3       		.byte	0xf3
 21535 137f 01       		.uleb128 0x1
 21536 1380 51       		.byte	0x51
 21537 1381 9F       		.byte	0x9f
 21538 1382 00000000 		.4byte	0
 21539 1386 00000000 		.4byte	0
 21540              	.LLST117:
 21541 138a 32000000 		.4byte	.LVL242
 21542 138e 38000000 		.4byte	.LVL243
 21543 1392 0300     		.2byte	0x3
 21544 1394 74       		.byte	0x74
 21545 1395 20       		.sleb128 32
 21546 1396 9F       		.byte	0x9f
 21547 1397 38000000 		.4byte	.LVL243
 21548 139b 3D000000 		.4byte	.LVL244-1
 21549 139f 0100     		.2byte	0x1
 21550 13a1 51       		.byte	0x51
 21551 13a2 3D000000 		.4byte	.LVL244-1
 21552 13a6 44000000 		.4byte	.LVL245
 21553 13aa 0300     		.2byte	0x3
 21554 13ac 74       		.byte	0x74
 21555 13ad 20       		.sleb128 32
 21556 13ae 9F       		.byte	0x9f
 21557 13af 00000000 		.4byte	0
 21558 13b3 00000000 		.4byte	0
 21559              	.LLST118:
 21560 13b7 00000000 		.4byte	.LVL250
 21561 13bb 12000000 		.4byte	.LVL252
 21562 13bf 0100     		.2byte	0x1
 21563 13c1 50       		.byte	0x50
 21564 13c2 12000000 		.4byte	.LVL252
 21565 13c6 26010000 		.4byte	.LVL283
 21566 13ca 0100     		.2byte	0x1
 21567 13cc 55       		.byte	0x55
 21568 13cd 26010000 		.4byte	.LVL283
 21569 13d1 44010000 		.4byte	.LFE64
 21570 13d5 0400     		.2byte	0x4
 21571 13d7 F3       		.byte	0xf3
 21572 13d8 01       		.uleb128 0x1
 21573 13d9 50       		.byte	0x50
 21574 13da 9F       		.byte	0x9f
 21575 13db 00000000 		.4byte	0
 21576 13df 00000000 		.4byte	0
 21577              	.LLST119:
 21578 13e3 00000000 		.4byte	.LVL250
 21579 13e7 14000000 		.4byte	.LVL253
 21580 13eb 0100     		.2byte	0x1
 21581 13ed 51       		.byte	0x51
 21582 13ee 14000000 		.4byte	.LVL253
 21583 13f2 44010000 		.4byte	.LFE64
 21584 13f6 0300     		.2byte	0x3
 21585 13f8 91       		.byte	0x91
 21586 13f9 D079     		.sleb128 -816
 21587 13fb 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 585


 21588 13ff 00000000 		.4byte	0
 21589              	.LLST120:
 21590 1403 00000000 		.4byte	.LVL250
 21591 1407 16000000 		.4byte	.LVL254
 21592 140b 0100     		.2byte	0x1
 21593 140d 52       		.byte	0x52
 21594 140e 16000000 		.4byte	.LVL254
 21595 1412 44010000 		.4byte	.LFE64
 21596 1416 0300     		.2byte	0x3
 21597 1418 91       		.byte	0x91
 21598 1419 C879     		.sleb128 -824
 21599 141b 00000000 		.4byte	0
 21600 141f 00000000 		.4byte	0
 21601              	.LLST121:
 21602 1423 00000000 		.4byte	.LVL250
 21603 1427 18000000 		.4byte	.LVL255
 21604 142b 0100     		.2byte	0x1
 21605 142d 53       		.byte	0x53
 21606 142e 18000000 		.4byte	.LVL255
 21607 1432 6C000000 		.4byte	.LVL265
 21608 1436 0100     		.2byte	0x1
 21609 1438 54       		.byte	0x54
 21610 1439 6C000000 		.4byte	.LVL265
 21611 143d 44010000 		.4byte	.LFE64
 21612 1441 0400     		.2byte	0x4
 21613 1443 F3       		.byte	0xf3
 21614 1444 01       		.uleb128 0x1
 21615 1445 53       		.byte	0x53
 21616 1446 9F       		.byte	0x9f
 21617 1447 00000000 		.4byte	0
 21618 144b 00000000 		.4byte	0
 21619              	.LLST122:
 21620 144f 2A000000 		.4byte	.LVL258
 21621 1453 54000000 		.4byte	.LVL259
 21622 1457 0100     		.2byte	0x1
 21623 1459 50       		.byte	0x50
 21624 145a 54000000 		.4byte	.LVL259
 21625 145e 60000000 		.4byte	.LVL262
 21626 1462 0100     		.2byte	0x1
 21627 1464 56       		.byte	0x56
 21628 1465 60000000 		.4byte	.LVL262
 21629 1469 64000000 		.4byte	.LVL263
 21630 146d 0100     		.2byte	0x1
 21631 146f 50       		.byte	0x50
 21632 1470 64000000 		.4byte	.LVL263
 21633 1474 0E010000 		.4byte	.LVL278
 21634 1478 0100     		.2byte	0x1
 21635 147a 56       		.byte	0x56
 21636 147b 0E010000 		.4byte	.LVL278
 21637 147f 1C010000 		.4byte	.LVL280
 21638 1483 0300     		.2byte	0x3
 21639 1485 09       		.byte	0x9
 21640 1486 96       		.byte	0x96
 21641 1487 9F       		.byte	0x9f
 21642 1488 1C010000 		.4byte	.LVL280
 21643 148c 1E010000 		.4byte	.LVL281
 21644 1490 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 586


 21645 1492 56       		.byte	0x56
 21646 1493 20010000 		.4byte	.LVL282
 21647 1497 26010000 		.4byte	.LVL284
 21648 149b 0100     		.2byte	0x1
 21649 149d 56       		.byte	0x56
 21650 149e 00000000 		.4byte	0
 21651 14a2 00000000 		.4byte	0
 21652              	.LLST123:
 21653 14a6 00000000 		.4byte	.LVL250
 21654 14aa 6C000000 		.4byte	.LVL265
 21655 14ae 0200     		.2byte	0x2
 21656 14b0 30       		.byte	0x30
 21657 14b1 9F       		.byte	0x9f
 21658 14b2 6C000000 		.4byte	.LVL265
 21659 14b6 7A000000 		.4byte	.LVL266
 21660 14ba 0100     		.2byte	0x1
 21661 14bc 50       		.byte	0x50
 21662 14bd 7A000000 		.4byte	.LVL266
 21663 14c1 F4000000 		.4byte	.LVL274
 21664 14c5 0100     		.2byte	0x1
 21665 14c7 54       		.byte	0x54
 21666 14c8 0A010000 		.4byte	.LVL277
 21667 14cc 1C010000 		.4byte	.LVL280
 21668 14d0 0100     		.2byte	0x1
 21669 14d2 54       		.byte	0x54
 21670 14d3 1C010000 		.4byte	.LVL280
 21671 14d7 20010000 		.4byte	.LVL282
 21672 14db 0100     		.2byte	0x1
 21673 14dd 50       		.byte	0x50
 21674 14de 00000000 		.4byte	0
 21675 14e2 00000000 		.4byte	0
 21676              	.LLST124:
 21677 14e6 2A000000 		.4byte	.LVL258
 21678 14ea 56000000 		.4byte	.LVL260
 21679 14ee 0400     		.2byte	0x4
 21680 14f0 91       		.byte	0x91
 21681 14f1 8C7A     		.sleb128 -756
 21682 14f3 9F       		.byte	0x9f
 21683 14f4 56000000 		.4byte	.LVL260
 21684 14f8 59000000 		.4byte	.LVL261-1
 21685 14fc 0100     		.2byte	0x1
 21686 14fe 51       		.byte	0x51
 21687 14ff 59000000 		.4byte	.LVL261-1
 21688 1503 80000000 		.4byte	.LVL267
 21689 1507 0400     		.2byte	0x4
 21690 1509 91       		.byte	0x91
 21691 150a 8C7A     		.sleb128 -756
 21692 150c 9F       		.byte	0x9f
 21693 150d 80000000 		.4byte	.LVL267
 21694 1511 97000000 		.4byte	.LVL268-1
 21695 1515 0100     		.2byte	0x1
 21696 1517 51       		.byte	0x51
 21697 1518 97000000 		.4byte	.LVL268-1
 21698 151c 44010000 		.4byte	.LFE64
 21699 1520 0400     		.2byte	0x4
 21700 1522 91       		.byte	0x91
 21701 1523 8C7A     		.sleb128 -756
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 587


 21702 1525 9F       		.byte	0x9f
 21703 1526 00000000 		.4byte	0
 21704 152a 00000000 		.4byte	0
 21705              	.LLST125:
 21706 152e 0C000000 		.4byte	.LVL251
 21707 1532 26010000 		.4byte	.LVL285
 21708 1536 0100     		.2byte	0x1
 21709 1538 57       		.byte	0x57
 21710 1539 00000000 		.4byte	0
 21711 153d 00000000 		.4byte	0
 21712              	.LLST126:
 21713 1541 B8000000 		.4byte	.LVL269
 21714 1545 BB000000 		.4byte	.LVL270-1
 21715 1549 0100     		.2byte	0x1
 21716 154b 50       		.byte	0x50
 21717 154c BB000000 		.4byte	.LVL270-1
 21718 1550 F4000000 		.4byte	.LVL274
 21719 1554 0300     		.2byte	0x3
 21720 1556 74       		.byte	0x74
 21721 1557 20       		.sleb128 32
 21722 1558 9F       		.byte	0x9f
 21723 1559 0E010000 		.4byte	.LVL278
 21724 155d 1C010000 		.4byte	.LVL280
 21725 1561 0300     		.2byte	0x3
 21726 1563 74       		.byte	0x74
 21727 1564 20       		.sleb128 32
 21728 1565 9F       		.byte	0x9f
 21729 1566 00000000 		.4byte	0
 21730 156a 00000000 		.4byte	0
 21731              	.LLST127:
 21732 156e 00000000 		.4byte	.LVL290
 21733 1572 0C000000 		.4byte	.LVL291
 21734 1576 0100     		.2byte	0x1
 21735 1578 50       		.byte	0x50
 21736 1579 0C000000 		.4byte	.LVL291
 21737 157d 12000000 		.4byte	.LVL292
 21738 1581 0100     		.2byte	0x1
 21739 1583 55       		.byte	0x55
 21740 1584 12000000 		.4byte	.LVL292
 21741 1588 15000000 		.4byte	.LVL293-1
 21742 158c 0100     		.2byte	0x1
 21743 158e 50       		.byte	0x50
 21744 158f 15000000 		.4byte	.LVL293-1
 21745 1593 44000000 		.4byte	.LVL303
 21746 1597 0100     		.2byte	0x1
 21747 1599 55       		.byte	0x55
 21748 159a 44000000 		.4byte	.LVL303
 21749 159e 4C000000 		.4byte	.LFE14
 21750 15a2 0400     		.2byte	0x4
 21751 15a4 F3       		.byte	0xf3
 21752 15a5 01       		.uleb128 0x1
 21753 15a6 50       		.byte	0x50
 21754 15a7 9F       		.byte	0x9f
 21755 15a8 00000000 		.4byte	0
 21756 15ac 00000000 		.4byte	0
 21757              	.LLST128:
 21758 15b0 00000000 		.4byte	.LVL290
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 588


 21759 15b4 24000000 		.4byte	.LVL296
 21760 15b8 0200     		.2byte	0x2
 21761 15ba 30       		.byte	0x30
 21762 15bb 9F       		.byte	0x9f
 21763 15bc 24000000 		.4byte	.LVL296
 21764 15c0 2B000000 		.4byte	.LVL297-1
 21765 15c4 0100     		.2byte	0x1
 21766 15c6 50       		.byte	0x50
 21767 15c7 2B000000 		.4byte	.LVL297-1
 21768 15cb 38000000 		.4byte	.LVL298
 21769 15cf 0100     		.2byte	0x1
 21770 15d1 54       		.byte	0x54
 21771 15d2 38000000 		.4byte	.LVL298
 21772 15d6 3C000000 		.4byte	.LVL299
 21773 15da 0200     		.2byte	0x2
 21774 15dc 30       		.byte	0x30
 21775 15dd 9F       		.byte	0x9f
 21776 15de 3C000000 		.4byte	.LVL299
 21777 15e2 3E000000 		.4byte	.LVL300
 21778 15e6 0100     		.2byte	0x1
 21779 15e8 50       		.byte	0x50
 21780 15e9 3E000000 		.4byte	.LVL300
 21781 15ed 44000000 		.4byte	.LVL302
 21782 15f1 0100     		.2byte	0x1
 21783 15f3 54       		.byte	0x54
 21784 15f4 00000000 		.4byte	0
 21785 15f8 00000000 		.4byte	0
 21786              	.LLST129:
 21787 15fc 16000000 		.4byte	.LVL293
 21788 1600 1C000000 		.4byte	.LVL294
 21789 1604 0100     		.2byte	0x1
 21790 1606 50       		.byte	0x50
 21791 1607 00000000 		.4byte	0
 21792 160b 00000000 		.4byte	0
 21793              	.LLST130:
 21794 160f 3C000000 		.4byte	.LVL299
 21795 1613 44000000 		.4byte	.LVL302
 21796 1617 0100     		.2byte	0x1
 21797 1619 55       		.byte	0x55
 21798 161a 00000000 		.4byte	0
 21799 161e 00000000 		.4byte	0
 21800              	.LLST131:
 21801 1622 00000000 		.4byte	.LVL304
 21802 1626 16000000 		.4byte	.LVL309
 21803 162a 0100     		.2byte	0x1
 21804 162c 50       		.byte	0x50
 21805 162d 16000000 		.4byte	.LVL309
 21806 1631 30020000 		.4byte	.LFE66
 21807 1635 0300     		.2byte	0x3
 21808 1637 91       		.byte	0x91
 21809 1638 B47F     		.sleb128 -76
 21810 163a 00000000 		.4byte	0
 21811 163e 00000000 		.4byte	0
 21812              	.LLST132:
 21813 1642 00000000 		.4byte	.LVL304
 21814 1646 9E000000 		.4byte	.LVL329
 21815 164a 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 589


 21816 164c 51       		.byte	0x51
 21817 164d 9E000000 		.4byte	.LVL329
 21818 1651 30020000 		.4byte	.LFE66
 21819 1655 0300     		.2byte	0x3
 21820 1657 91       		.byte	0x91
 21821 1658 B87F     		.sleb128 -72
 21822 165a 00000000 		.4byte	0
 21823 165e 00000000 		.4byte	0
 21824              	.LLST133:
 21825 1662 00000000 		.4byte	.LVL304
 21826 1666 2C000000 		.4byte	.LVL310
 21827 166a 0100     		.2byte	0x1
 21828 166c 52       		.byte	0x52
 21829 166d 2C000000 		.4byte	.LVL310
 21830 1671 58000000 		.4byte	.LVL322
 21831 1675 0100     		.2byte	0x1
 21832 1677 50       		.byte	0x50
 21833 1678 58000000 		.4byte	.LVL322
 21834 167c 90000000 		.4byte	.LVL324
 21835 1680 0300     		.2byte	0x3
 21836 1682 91       		.byte	0x91
 21837 1683 BC7F     		.sleb128 -68
 21838 1685 90000000 		.4byte	.LVL324
 21839 1689 98000000 		.4byte	.LVL326
 21840 168d 0100     		.2byte	0x1
 21841 168f 50       		.byte	0x50
 21842 1690 98000000 		.4byte	.LVL326
 21843 1694 9C000000 		.4byte	.LVL328
 21844 1698 0100     		.2byte	0x1
 21845 169a 52       		.byte	0x52
 21846 169b 9C000000 		.4byte	.LVL328
 21847 169f 30020000 		.4byte	.LFE66
 21848 16a3 0300     		.2byte	0x3
 21849 16a5 91       		.byte	0x91
 21850 16a6 BC7F     		.sleb128 -68
 21851 16a8 00000000 		.4byte	0
 21852 16ac 00000000 		.4byte	0
 21853              	.LLST134:
 21854 16b0 00000000 		.4byte	.LVL304
 21855 16b4 10000000 		.4byte	.LVL308
 21856 16b8 0100     		.2byte	0x1
 21857 16ba 53       		.byte	0x53
 21858 16bb 10000000 		.4byte	.LVL308
 21859 16bf 30020000 		.4byte	.LFE66
 21860 16c3 0200     		.2byte	0x2
 21861 16c5 91       		.byte	0x91
 21862 16c6 4C       		.sleb128 -52
 21863 16c7 00000000 		.4byte	0
 21864 16cb 00000000 		.4byte	0
 21865              	.LLST135:
 21866 16cf 00000000 		.4byte	.LVL304
 21867 16d3 2E000000 		.4byte	.LVL311
 21868 16d7 0200     		.2byte	0x2
 21869 16d9 30       		.byte	0x30
 21870 16da 9F       		.byte	0x9f
 21871 16db 2E000000 		.4byte	.LVL311
 21872 16df 32000000 		.4byte	.LVL312
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 590


 21873 16e3 0100     		.2byte	0x1
 21874 16e5 56       		.byte	0x56
 21875 16e6 32000000 		.4byte	.LVL312
 21876 16ea 36000000 		.4byte	.LVL313
 21877 16ee 0200     		.2byte	0x2
 21878 16f0 30       		.byte	0x30
 21879 16f1 9F       		.byte	0x9f
 21880 16f2 36000000 		.4byte	.LVL313
 21881 16f6 3A000000 		.4byte	.LVL314
 21882 16fa 0100     		.2byte	0x1
 21883 16fc 56       		.byte	0x56
 21884 16fd 3A000000 		.4byte	.LVL314
 21885 1701 3E000000 		.4byte	.LVL315
 21886 1705 0200     		.2byte	0x2
 21887 1707 30       		.byte	0x30
 21888 1708 9F       		.byte	0x9f
 21889 1709 3E000000 		.4byte	.LVL315
 21890 170d 42000000 		.4byte	.LVL316
 21891 1711 0100     		.2byte	0x1
 21892 1713 56       		.byte	0x56
 21893 1714 42000000 		.4byte	.LVL316
 21894 1718 46000000 		.4byte	.LVL317
 21895 171c 0200     		.2byte	0x2
 21896 171e 30       		.byte	0x30
 21897 171f 9F       		.byte	0x9f
 21898 1720 46000000 		.4byte	.LVL317
 21899 1724 4A000000 		.4byte	.LVL318
 21900 1728 0100     		.2byte	0x1
 21901 172a 56       		.byte	0x56
 21902 172b 4A000000 		.4byte	.LVL318
 21903 172f 4E000000 		.4byte	.LVL319
 21904 1733 0200     		.2byte	0x2
 21905 1735 30       		.byte	0x30
 21906 1736 9F       		.byte	0x9f
 21907 1737 4E000000 		.4byte	.LVL319
 21908 173b 52000000 		.4byte	.LVL320
 21909 173f 0100     		.2byte	0x1
 21910 1741 56       		.byte	0x56
 21911 1742 52000000 		.4byte	.LVL320
 21912 1746 56000000 		.4byte	.LVL321
 21913 174a 0200     		.2byte	0x2
 21914 174c 30       		.byte	0x30
 21915 174d 9F       		.byte	0x9f
 21916 174e 56000000 		.4byte	.LVL321
 21917 1752 90000000 		.4byte	.LVL324
 21918 1756 0100     		.2byte	0x1
 21919 1758 56       		.byte	0x56
 21920 1759 90000000 		.4byte	.LVL324
 21921 175d 94000000 		.4byte	.LVL325
 21922 1761 0200     		.2byte	0x2
 21923 1763 30       		.byte	0x30
 21924 1764 9F       		.byte	0x9f
 21925 1765 94000000 		.4byte	.LVL325
 21926 1769 98000000 		.4byte	.LVL326
 21927 176d 0100     		.2byte	0x1
 21928 176f 56       		.byte	0x56
 21929 1770 98000000 		.4byte	.LVL326
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 591


 21930 1774 9A000000 		.4byte	.LVL327
 21931 1778 0200     		.2byte	0x2
 21932 177a 30       		.byte	0x30
 21933 177b 9F       		.byte	0x9f
 21934 177c 9A000000 		.4byte	.LVL327
 21935 1780 C8000000 		.4byte	.LVL335
 21936 1784 0100     		.2byte	0x1
 21937 1786 56       		.byte	0x56
 21938 1787 CA000000 		.4byte	.LVL336
 21939 178b D4000000 		.4byte	.LVL338
 21940 178f 0100     		.2byte	0x1
 21941 1791 56       		.byte	0x56
 21942 1792 D6000000 		.4byte	.LVL339
 21943 1796 E0000000 		.4byte	.LVL341
 21944 179a 0100     		.2byte	0x1
 21945 179c 56       		.byte	0x56
 21946 179d E2000000 		.4byte	.LVL342
 21947 17a1 D8010000 		.4byte	.LVL375
 21948 17a5 0100     		.2byte	0x1
 21949 17a7 56       		.byte	0x56
 21950 17a8 00000000 		.4byte	0
 21951 17ac 00000000 		.4byte	0
 21952              	.LLST136:
 21953 17b0 00000000 		.4byte	.LVL304
 21954 17b4 5C000000 		.4byte	.LVL323
 21955 17b8 0200     		.2byte	0x2
 21956 17ba 30       		.byte	0x30
 21957 17bb 9F       		.byte	0x9f
 21958 17bc 5C000000 		.4byte	.LVL323
 21959 17c0 90000000 		.4byte	.LVL324
 21960 17c4 0100     		.2byte	0x1
 21961 17c6 55       		.byte	0x55
 21962 17c7 90000000 		.4byte	.LVL324
 21963 17cb 9E000000 		.4byte	.LVL329
 21964 17cf 0200     		.2byte	0x2
 21965 17d1 30       		.byte	0x30
 21966 17d2 9F       		.byte	0x9f
 21967 17d3 9E000000 		.4byte	.LVL329
 21968 17d7 AC000000 		.4byte	.LVL330
 21969 17db 0100     		.2byte	0x1
 21970 17dd 55       		.byte	0x55
 21971 17de AE000000 		.4byte	.LVL331
 21972 17e2 C6000000 		.4byte	.LVL334
 21973 17e6 0100     		.2byte	0x1
 21974 17e8 55       		.byte	0x55
 21975 17e9 CA000000 		.4byte	.LVL336
 21976 17ed D2000000 		.4byte	.LVL337
 21977 17f1 0100     		.2byte	0x1
 21978 17f3 55       		.byte	0x55
 21979 17f4 D6000000 		.4byte	.LVL339
 21980 17f8 DE000000 		.4byte	.LVL340
 21981 17fc 0100     		.2byte	0x1
 21982 17fe 55       		.byte	0x55
 21983 17ff E2000000 		.4byte	.LVL342
 21984 1803 E4000000 		.4byte	.LVL343
 21985 1807 0100     		.2byte	0x1
 21986 1809 55       		.byte	0x55
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 592


 21987 180a E6000000 		.4byte	.LVL344
 21988 180e 16010000 		.4byte	.LVL353
 21989 1812 0100     		.2byte	0x1
 21990 1814 55       		.byte	0x55
 21991 1815 1C010000 		.4byte	.LVL354
 21992 1819 A0010000 		.4byte	.LVL368
 21993 181d 0100     		.2byte	0x1
 21994 181f 55       		.byte	0x55
 21995 1820 00000000 		.4byte	0
 21996 1824 00000000 		.4byte	0
 21997              	.LLST137:
 21998 1828 9E000000 		.4byte	.LVL329
 21999 182c AE000000 		.4byte	.LVL331
 22000 1830 0100     		.2byte	0x1
 22001 1832 50       		.byte	0x50
 22002 1833 BA000000 		.4byte	.LVL333
 22003 1837 E8000000 		.4byte	.LVL345
 22004 183b 0100     		.2byte	0x1
 22005 183d 50       		.byte	0x50
 22006 183e E8000000 		.4byte	.LVL345
 22007 1842 02010000 		.4byte	.LVL348
 22008 1846 0100     		.2byte	0x1
 22009 1848 54       		.byte	0x54
 22010 1849 02010000 		.4byte	.LVL348
 22011 184d 04010000 		.4byte	.LVL349
 22012 1851 0100     		.2byte	0x1
 22013 1853 53       		.byte	0x53
 22014 1854 04010000 		.4byte	.LVL349
 22015 1858 0A010000 		.4byte	.LVL350
 22016 185c 0200     		.2byte	0x2
 22017 185e 91       		.byte	0x91
 22018 185f 40       		.sleb128 -64
 22019 1860 0A010000 		.4byte	.LVL350
 22020 1864 12010000 		.4byte	.LVL351
 22021 1868 0100     		.2byte	0x1
 22022 186a 54       		.byte	0x54
 22023 186b 12010000 		.4byte	.LVL351
 22024 186f 14010000 		.4byte	.LVL352
 22025 1873 0300     		.2byte	0x3
 22026 1875 74       		.byte	0x74
 22027 1876 7E       		.sleb128 -2
 22028 1877 9F       		.byte	0x9f
 22029 1878 1C010000 		.4byte	.LVL354
 22030 187c D4010000 		.4byte	.LVL374
 22031 1880 0200     		.2byte	0x2
 22032 1882 91       		.byte	0x91
 22033 1883 40       		.sleb128 -64
 22034 1884 00000000 		.4byte	0
 22035 1888 00000000 		.4byte	0
 22036              	.LLST138:
 22037 188c 3A010000 		.4byte	.LVL356
 22038 1890 48010000 		.4byte	.LVL357
 22039 1894 0100     		.2byte	0x1
 22040 1896 50       		.byte	0x50
 22041 1897 48010000 		.4byte	.LVL357
 22042 189b 88010000 		.4byte	.LVL366
 22043 189f 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 593


 22044 18a1 54       		.byte	0x54
 22045 18a2 00000000 		.4byte	0
 22046 18a6 00000000 		.4byte	0
 22047              	.LLST139:
 22048 18aa 52010000 		.4byte	.LVL359
 22049 18ae 74010000 		.4byte	.LVL362
 22050 18b2 0100     		.2byte	0x1
 22051 18b4 50       		.byte	0x50
 22052 18b5 74010000 		.4byte	.LVL362
 22053 18b9 76010000 		.4byte	.LVL363
 22054 18bd 0300     		.2byte	0x3
 22055 18bf 70       		.byte	0x70
 22056 18c0 7E       		.sleb128 -2
 22057 18c1 9F       		.byte	0x9f
 22058 18c2 7A010000 		.4byte	.LVL364
 22059 18c6 82010000 		.4byte	.LVL365
 22060 18ca 0100     		.2byte	0x1
 22061 18cc 50       		.byte	0x50
 22062 18cd 00000000 		.4byte	0
 22063 18d1 00000000 		.4byte	0
 22064              	.LLST140:
 22065 18d5 04000000 		.4byte	.LVL305
 22066 18d9 08000000 		.4byte	.LVL306
 22067 18dd 0A00     		.2byte	0xa
 22068 18df 91       		.byte	0x91
 22069 18e0 B47F     		.sleb128 -76
 22070 18e2 06       		.byte	0x6
 22071 18e3 91       		.byte	0x91
 22072 18e4 B87F     		.sleb128 -72
 22073 18e6 06       		.byte	0x6
 22074 18e7 22       		.byte	0x22
 22075 18e8 9F       		.byte	0x9f
 22076 18e9 00000000 		.4byte	0
 22077 18ed 00000000 		.4byte	0
 22078              	.LLST141:
 22079 18f1 88010000 		.4byte	.LVL366
 22080 18f5 D4010000 		.4byte	.LVL374
 22081 18f9 0100     		.2byte	0x1
 22082 18fb 54       		.byte	0x54
 22083 18fc 00000000 		.4byte	0
 22084 1900 00000000 		.4byte	0
 22085              	.LLST142:
 22086 1904 04000000 		.4byte	.LVL305
 22087 1908 16010000 		.4byte	.LVL353
 22088 190c 0200     		.2byte	0x2
 22089 190e 30       		.byte	0x30
 22090 190f 9F       		.byte	0x9f
 22091 1910 1C010000 		.4byte	.LVL354
 22092 1914 9E010000 		.4byte	.LVL367
 22093 1918 0200     		.2byte	0x2
 22094 191a 30       		.byte	0x30
 22095 191b 9F       		.byte	0x9f
 22096 191c 9E010000 		.4byte	.LVL367
 22097 1920 A6010000 		.4byte	.LVL369
 22098 1924 0100     		.2byte	0x1
 22099 1926 50       		.byte	0x50
 22100 1927 A6010000 		.4byte	.LVL369
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 594


 22101 192b BC010000 		.4byte	.LVL372
 22102 192f 0100     		.2byte	0x1
 22103 1931 55       		.byte	0x55
 22104 1932 CA010000 		.4byte	.LVL373
 22105 1936 D4010000 		.4byte	.LVL374
 22106 193a 0100     		.2byte	0x1
 22107 193c 50       		.byte	0x50
 22108 193d 00000000 		.4byte	0
 22109 1941 00000000 		.4byte	0
 22110              	.LLST143:
 22111 1945 04000000 		.4byte	.LVL305
 22112 1949 0A000000 		.4byte	.LVL307
 22113 194d 0300     		.2byte	0x3
 22114 194f 91       		.byte	0x91
 22115 1950 B87F     		.sleb128 -72
 22116 1952 00000000 		.4byte	0
 22117 1956 00000000 		.4byte	0
 22118              	.LLST144:
 22119 195a A8010000 		.4byte	.LVL370
 22120 195e D4010000 		.4byte	.LVL374
 22121 1962 0100     		.2byte	0x1
 22122 1964 57       		.byte	0x57
 22123 1965 00000000 		.4byte	0
 22124 1969 00000000 		.4byte	0
 22125              	.LLST145:
 22126 196d 00000000 		.4byte	.LVL376
 22127 1971 43000000 		.4byte	.LVL379-1
 22128 1975 0100     		.2byte	0x1
 22129 1977 50       		.byte	0x50
 22130 1978 43000000 		.4byte	.LVL379-1
 22131 197c 6A000000 		.4byte	.LVL387
 22132 1980 0400     		.2byte	0x4
 22133 1982 F3       		.byte	0xf3
 22134 1983 01       		.uleb128 0x1
 22135 1984 50       		.byte	0x50
 22136 1985 9F       		.byte	0x9f
 22137 1986 6A000000 		.4byte	.LVL387
 22138 198a 6C000000 		.4byte	.LVL388
 22139 198e 0100     		.2byte	0x1
 22140 1990 50       		.byte	0x50
 22141 1991 6C000000 		.4byte	.LVL388
 22142 1995 72000000 		.4byte	.LFE50
 22143 1999 0400     		.2byte	0x4
 22144 199b F3       		.byte	0xf3
 22145 199c 01       		.uleb128 0x1
 22146 199d 50       		.byte	0x50
 22147 199e 9F       		.byte	0x9f
 22148 199f 00000000 		.4byte	0
 22149 19a3 00000000 		.4byte	0
 22150              	.LLST146:
 22151 19a7 00000000 		.4byte	.LVL376
 22152 19ab 43000000 		.4byte	.LVL379-1
 22153 19af 0100     		.2byte	0x1
 22154 19b1 51       		.byte	0x51
 22155 19b2 43000000 		.4byte	.LVL379-1
 22156 19b6 6A000000 		.4byte	.LVL387
 22157 19ba 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 595


 22158 19bc F3       		.byte	0xf3
 22159 19bd 01       		.uleb128 0x1
 22160 19be 51       		.byte	0x51
 22161 19bf 9F       		.byte	0x9f
 22162 19c0 6A000000 		.4byte	.LVL387
 22163 19c4 6E000000 		.4byte	.LVL389
 22164 19c8 0100     		.2byte	0x1
 22165 19ca 51       		.byte	0x51
 22166 19cb 6E000000 		.4byte	.LVL389
 22167 19cf 72000000 		.4byte	.LFE50
 22168 19d3 0400     		.2byte	0x4
 22169 19d5 F3       		.byte	0xf3
 22170 19d6 01       		.uleb128 0x1
 22171 19d7 51       		.byte	0x51
 22172 19d8 9F       		.byte	0x9f
 22173 19d9 00000000 		.4byte	0
 22174 19dd 00000000 		.4byte	0
 22175              	.LLST147:
 22176 19e1 00000000 		.4byte	.LVL376
 22177 19e5 38000000 		.4byte	.LVL378
 22178 19e9 0100     		.2byte	0x1
 22179 19eb 52       		.byte	0x52
 22180 19ec 38000000 		.4byte	.LVL378
 22181 19f0 6A000000 		.4byte	.LVL387
 22182 19f4 0100     		.2byte	0x1
 22183 19f6 55       		.byte	0x55
 22184 19f7 6A000000 		.4byte	.LVL387
 22185 19fb 6E000000 		.4byte	.LVL389
 22186 19ff 0100     		.2byte	0x1
 22187 1a01 52       		.byte	0x52
 22188 1a02 6E000000 		.4byte	.LVL389
 22189 1a06 72000000 		.4byte	.LFE50
 22190 1a0a 0400     		.2byte	0x4
 22191 1a0c F3       		.byte	0xf3
 22192 1a0d 01       		.uleb128 0x1
 22193 1a0e 52       		.byte	0x52
 22194 1a0f 9F       		.byte	0x9f
 22195 1a10 00000000 		.4byte	0
 22196 1a14 00000000 		.4byte	0
 22197              	.LLST148:
 22198 1a18 00000000 		.4byte	.LVL376
 22199 1a1c 28000000 		.4byte	.LVL377
 22200 1a20 0100     		.2byte	0x1
 22201 1a22 53       		.byte	0x53
 22202 1a23 28000000 		.4byte	.LVL377
 22203 1a27 6A000000 		.4byte	.LVL387
 22204 1a2b 0100     		.2byte	0x1
 22205 1a2d 56       		.byte	0x56
 22206 1a2e 6A000000 		.4byte	.LVL387
 22207 1a32 6E000000 		.4byte	.LVL389
 22208 1a36 0100     		.2byte	0x1
 22209 1a38 53       		.byte	0x53
 22210 1a39 6E000000 		.4byte	.LVL389
 22211 1a3d 72000000 		.4byte	.LFE50
 22212 1a41 0400     		.2byte	0x4
 22213 1a43 F3       		.byte	0xf3
 22214 1a44 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 596


 22215 1a45 53       		.byte	0x53
 22216 1a46 9F       		.byte	0x9f
 22217 1a47 00000000 		.4byte	0
 22218 1a4b 00000000 		.4byte	0
 22219              	.LLST149:
 22220 1a4f 46000000 		.4byte	.LVL380
 22221 1a53 54000000 		.4byte	.LVL381
 22222 1a57 0100     		.2byte	0x1
 22223 1a59 50       		.byte	0x50
 22224 1a5a 5A000000 		.4byte	.LVL383
 22225 1a5e 5C000000 		.4byte	.LVL384
 22226 1a62 0100     		.2byte	0x1
 22227 1a64 54       		.byte	0x54
 22228 1a65 5C000000 		.4byte	.LVL384
 22229 1a69 60000000 		.4byte	.LVL385
 22230 1a6d 0100     		.2byte	0x1
 22231 1a6f 50       		.byte	0x50
 22232 1a70 60000000 		.4byte	.LVL385
 22233 1a74 6A000000 		.4byte	.LVL387
 22234 1a78 0100     		.2byte	0x1
 22235 1a7a 54       		.byte	0x54
 22236 1a7b 00000000 		.4byte	0
 22237 1a7f 00000000 		.4byte	0
 22238              	.LLST150:
 22239 1a83 00000000 		.4byte	.LVL390
 22240 1a87 33000000 		.4byte	.LVL393-1
 22241 1a8b 0100     		.2byte	0x1
 22242 1a8d 50       		.byte	0x50
 22243 1a8e 33000000 		.4byte	.LVL393-1
 22244 1a92 66000000 		.4byte	.LVL403
 22245 1a96 0400     		.2byte	0x4
 22246 1a98 F3       		.byte	0xf3
 22247 1a99 01       		.uleb128 0x1
 22248 1a9a 50       		.byte	0x50
 22249 1a9b 9F       		.byte	0x9f
 22250 1a9c 66000000 		.4byte	.LVL403
 22251 1aa0 68000000 		.4byte	.LVL404
 22252 1aa4 0100     		.2byte	0x1
 22253 1aa6 50       		.byte	0x50
 22254 1aa7 68000000 		.4byte	.LVL404
 22255 1aab 6E000000 		.4byte	.LFE51
 22256 1aaf 0400     		.2byte	0x4
 22257 1ab1 F3       		.byte	0xf3
 22258 1ab2 01       		.uleb128 0x1
 22259 1ab3 50       		.byte	0x50
 22260 1ab4 9F       		.byte	0x9f
 22261 1ab5 00000000 		.4byte	0
 22262 1ab9 00000000 		.4byte	0
 22263              	.LLST151:
 22264 1abd 00000000 		.4byte	.LVL390
 22265 1ac1 33000000 		.4byte	.LVL393-1
 22266 1ac5 0100     		.2byte	0x1
 22267 1ac7 51       		.byte	0x51
 22268 1ac8 33000000 		.4byte	.LVL393-1
 22269 1acc 66000000 		.4byte	.LVL403
 22270 1ad0 0400     		.2byte	0x4
 22271 1ad2 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 597


 22272 1ad3 01       		.uleb128 0x1
 22273 1ad4 51       		.byte	0x51
 22274 1ad5 9F       		.byte	0x9f
 22275 1ad6 66000000 		.4byte	.LVL403
 22276 1ada 6A000000 		.4byte	.LVL405
 22277 1ade 0100     		.2byte	0x1
 22278 1ae0 51       		.byte	0x51
 22279 1ae1 6A000000 		.4byte	.LVL405
 22280 1ae5 6E000000 		.4byte	.LFE51
 22281 1ae9 0400     		.2byte	0x4
 22282 1aeb F3       		.byte	0xf3
 22283 1aec 01       		.uleb128 0x1
 22284 1aed 51       		.byte	0x51
 22285 1aee 9F       		.byte	0x9f
 22286 1aef 00000000 		.4byte	0
 22287 1af3 00000000 		.4byte	0
 22288              	.LLST152:
 22289 1af7 00000000 		.4byte	.LVL390
 22290 1afb 2A000000 		.4byte	.LVL392
 22291 1aff 0100     		.2byte	0x1
 22292 1b01 52       		.byte	0x52
 22293 1b02 2A000000 		.4byte	.LVL392
 22294 1b06 66000000 		.4byte	.LVL403
 22295 1b0a 0100     		.2byte	0x1
 22296 1b0c 55       		.byte	0x55
 22297 1b0d 66000000 		.4byte	.LVL403
 22298 1b11 6A000000 		.4byte	.LVL405
 22299 1b15 0100     		.2byte	0x1
 22300 1b17 52       		.byte	0x52
 22301 1b18 6A000000 		.4byte	.LVL405
 22302 1b1c 6E000000 		.4byte	.LFE51
 22303 1b20 0400     		.2byte	0x4
 22304 1b22 F3       		.byte	0xf3
 22305 1b23 01       		.uleb128 0x1
 22306 1b24 52       		.byte	0x52
 22307 1b25 9F       		.byte	0x9f
 22308 1b26 00000000 		.4byte	0
 22309 1b2a 00000000 		.4byte	0
 22310              	.LLST153:
 22311 1b2e 00000000 		.4byte	.LVL390
 22312 1b32 1A000000 		.4byte	.LVL391
 22313 1b36 0100     		.2byte	0x1
 22314 1b38 53       		.byte	0x53
 22315 1b39 1A000000 		.4byte	.LVL391
 22316 1b3d 66000000 		.4byte	.LVL403
 22317 1b41 0100     		.2byte	0x1
 22318 1b43 56       		.byte	0x56
 22319 1b44 66000000 		.4byte	.LVL403
 22320 1b48 6A000000 		.4byte	.LVL405
 22321 1b4c 0100     		.2byte	0x1
 22322 1b4e 53       		.byte	0x53
 22323 1b4f 6A000000 		.4byte	.LVL405
 22324 1b53 6E000000 		.4byte	.LFE51
 22325 1b57 0400     		.2byte	0x4
 22326 1b59 F3       		.byte	0xf3
 22327 1b5a 01       		.uleb128 0x1
 22328 1b5b 53       		.byte	0x53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 598


 22329 1b5c 9F       		.byte	0x9f
 22330 1b5d 00000000 		.4byte	0
 22331 1b61 00000000 		.4byte	0
 22332              	.LLST154:
 22333 1b65 36000000 		.4byte	.LVL394
 22334 1b69 38000000 		.4byte	.LVL395
 22335 1b6d 0100     		.2byte	0x1
 22336 1b6f 50       		.byte	0x50
 22337 1b70 38000000 		.4byte	.LVL395
 22338 1b74 46000000 		.4byte	.LVL397
 22339 1b78 0100     		.2byte	0x1
 22340 1b7a 54       		.byte	0x54
 22341 1b7b 56000000 		.4byte	.LVL399
 22342 1b7f 58000000 		.4byte	.LVL400
 22343 1b83 0100     		.2byte	0x1
 22344 1b85 54       		.byte	0x54
 22345 1b86 5C000000 		.4byte	.LVL401
 22346 1b8a 66000000 		.4byte	.LVL403
 22347 1b8e 0100     		.2byte	0x1
 22348 1b90 54       		.byte	0x54
 22349 1b91 00000000 		.4byte	0
 22350 1b95 00000000 		.4byte	0
 22351              	.LLST155:
 22352 1b99 00000000 		.4byte	.LVL406
 22353 1b9d 6A000000 		.4byte	.LVL412
 22354 1ba1 0100     		.2byte	0x1
 22355 1ba3 50       		.byte	0x50
 22356 1ba4 6A000000 		.4byte	.LVL412
 22357 1ba8 3A020000 		.4byte	.LVL464
 22358 1bac 0100     		.2byte	0x1
 22359 1bae 55       		.byte	0x55
 22360 1baf 3A020000 		.4byte	.LVL464
 22361 1bb3 3C020000 		.4byte	.LVL465
 22362 1bb7 0100     		.2byte	0x1
 22363 1bb9 50       		.byte	0x50
 22364 1bba 3C020000 		.4byte	.LVL465
 22365 1bbe EA020000 		.4byte	.LVL481
 22366 1bc2 0100     		.2byte	0x1
 22367 1bc4 55       		.byte	0x55
 22368 1bc5 EA020000 		.4byte	.LVL481
 22369 1bc9 10030000 		.4byte	.LVL485
 22370 1bcd 0400     		.2byte	0x4
 22371 1bcf F3       		.byte	0xf3
 22372 1bd0 01       		.uleb128 0x1
 22373 1bd1 50       		.byte	0x50
 22374 1bd2 9F       		.byte	0x9f
 22375 1bd3 10030000 		.4byte	.LVL485
 22376 1bd7 16030000 		.4byte	.LVL486
 22377 1bdb 0100     		.2byte	0x1
 22378 1bdd 55       		.byte	0x55
 22379 1bde 16030000 		.4byte	.LVL486
 22380 1be2 28030000 		.4byte	.LVL489
 22381 1be6 0300     		.2byte	0x3
 22382 1be8 75       		.byte	0x75
 22383 1be9 6C       		.sleb128 -20
 22384 1bea 9F       		.byte	0x9f
 22385 1beb 28030000 		.4byte	.LVL489
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 599


 22386 1bef 32030000 		.4byte	.LVL492
 22387 1bf3 0100     		.2byte	0x1
 22388 1bf5 55       		.byte	0x55
 22389 1bf6 32030000 		.4byte	.LVL492
 22390 1bfa 36030000 		.4byte	.LVL493
 22391 1bfe 0100     		.2byte	0x1
 22392 1c00 50       		.byte	0x50
 22393 1c01 36030000 		.4byte	.LVL493
 22394 1c05 44030000 		.4byte	.LVL494
 22395 1c09 0400     		.2byte	0x4
 22396 1c0b F3       		.byte	0xf3
 22397 1c0c 01       		.uleb128 0x1
 22398 1c0d 50       		.byte	0x50
 22399 1c0e 9F       		.byte	0x9f
 22400 1c0f 44030000 		.4byte	.LVL494
 22401 1c13 8E030000 		.4byte	.LVL498
 22402 1c17 0100     		.2byte	0x1
 22403 1c19 55       		.byte	0x55
 22404 1c1a 8E030000 		.4byte	.LVL498
 22405 1c1e 90030000 		.4byte	.LVL499
 22406 1c22 0300     		.2byte	0x3
 22407 1c24 75       		.byte	0x75
 22408 1c25 51       		.sleb128 -47
 22409 1c26 9F       		.byte	0x9f
 22410 1c27 90030000 		.4byte	.LVL499
 22411 1c2b C8030000 		.4byte	.LFE67
 22412 1c2f 0400     		.2byte	0x4
 22413 1c31 F3       		.byte	0xf3
 22414 1c32 01       		.uleb128 0x1
 22415 1c33 50       		.byte	0x50
 22416 1c34 9F       		.byte	0x9f
 22417 1c35 00000000 		.4byte	0
 22418 1c39 00000000 		.4byte	0
 22419              	.LLST156:
 22420 1c3d 00000000 		.4byte	.LVL406
 22421 1c41 4E000000 		.4byte	.LVL410
 22422 1c45 0100     		.2byte	0x1
 22423 1c47 51       		.byte	0x51
 22424 1c48 4E000000 		.4byte	.LVL410
 22425 1c4c 32030000 		.4byte	.LVL492
 22426 1c50 0300     		.2byte	0x3
 22427 1c52 91       		.byte	0x91
 22428 1c53 D076     		.sleb128 -1200
 22429 1c55 32030000 		.4byte	.LVL492
 22430 1c59 36030000 		.4byte	.LVL493
 22431 1c5d 0100     		.2byte	0x1
 22432 1c5f 51       		.byte	0x51
 22433 1c60 36030000 		.4byte	.LVL493
 22434 1c64 44030000 		.4byte	.LVL494
 22435 1c68 0400     		.2byte	0x4
 22436 1c6a F3       		.byte	0xf3
 22437 1c6b 01       		.uleb128 0x1
 22438 1c6c 51       		.byte	0x51
 22439 1c6d 9F       		.byte	0x9f
 22440 1c6e 44030000 		.4byte	.LVL494
 22441 1c72 AE030000 		.4byte	.LVL500
 22442 1c76 0300     		.2byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 600


 22443 1c78 91       		.byte	0x91
 22444 1c79 D076     		.sleb128 -1200
 22445 1c7b AE030000 		.4byte	.LVL500
 22446 1c7f C8030000 		.4byte	.LFE67
 22447 1c83 0400     		.2byte	0x4
 22448 1c85 F3       		.byte	0xf3
 22449 1c86 01       		.uleb128 0x1
 22450 1c87 51       		.byte	0x51
 22451 1c88 9F       		.byte	0x9f
 22452 1c89 00000000 		.4byte	0
 22453 1c8d 00000000 		.4byte	0
 22454              	.LLST157:
 22455 1c91 00000000 		.4byte	.LVL406
 22456 1c95 4A000000 		.4byte	.LVL409
 22457 1c99 0100     		.2byte	0x1
 22458 1c9b 52       		.byte	0x52
 22459 1c9c 4A000000 		.4byte	.LVL409
 22460 1ca0 32030000 		.4byte	.LVL492
 22461 1ca4 0300     		.2byte	0x3
 22462 1ca6 91       		.byte	0x91
 22463 1ca7 C076     		.sleb128 -1216
 22464 1ca9 32030000 		.4byte	.LVL492
 22465 1cad 36030000 		.4byte	.LVL493
 22466 1cb1 0100     		.2byte	0x1
 22467 1cb3 52       		.byte	0x52
 22468 1cb4 36030000 		.4byte	.LVL493
 22469 1cb8 44030000 		.4byte	.LVL494
 22470 1cbc 0400     		.2byte	0x4
 22471 1cbe F3       		.byte	0xf3
 22472 1cbf 01       		.uleb128 0x1
 22473 1cc0 52       		.byte	0x52
 22474 1cc1 9F       		.byte	0x9f
 22475 1cc2 44030000 		.4byte	.LVL494
 22476 1cc6 AE030000 		.4byte	.LVL500
 22477 1cca 0300     		.2byte	0x3
 22478 1ccc 91       		.byte	0x91
 22479 1ccd C076     		.sleb128 -1216
 22480 1ccf AE030000 		.4byte	.LVL500
 22481 1cd3 C8030000 		.4byte	.LFE67
 22482 1cd7 0400     		.2byte	0x4
 22483 1cd9 F3       		.byte	0xf3
 22484 1cda 01       		.uleb128 0x1
 22485 1cdb 52       		.byte	0x52
 22486 1cdc 9F       		.byte	0x9f
 22487 1cdd 00000000 		.4byte	0
 22488 1ce1 00000000 		.4byte	0
 22489              	.LLST158:
 22490 1ce5 00000000 		.4byte	.LVL406
 22491 1ce9 60000000 		.4byte	.LVL411
 22492 1ced 0100     		.2byte	0x1
 22493 1cef 53       		.byte	0x53
 22494 1cf0 60000000 		.4byte	.LVL411
 22495 1cf4 3A020000 		.4byte	.LVL464
 22496 1cf8 0400     		.2byte	0x4
 22497 1cfa F3       		.byte	0xf3
 22498 1cfb 01       		.uleb128 0x1
 22499 1cfc 53       		.byte	0x53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 601


 22500 1cfd 9F       		.byte	0x9f
 22501 1cfe 3A020000 		.4byte	.LVL464
 22502 1d02 42020000 		.4byte	.LVL466
 22503 1d06 0100     		.2byte	0x1
 22504 1d08 53       		.byte	0x53
 22505 1d09 42020000 		.4byte	.LVL466
 22506 1d0d 32030000 		.4byte	.LVL492
 22507 1d11 0400     		.2byte	0x4
 22508 1d13 F3       		.byte	0xf3
 22509 1d14 01       		.uleb128 0x1
 22510 1d15 53       		.byte	0x53
 22511 1d16 9F       		.byte	0x9f
 22512 1d17 32030000 		.4byte	.LVL492
 22513 1d1b 36030000 		.4byte	.LVL493
 22514 1d1f 0100     		.2byte	0x1
 22515 1d21 53       		.byte	0x53
 22516 1d22 36030000 		.4byte	.LVL493
 22517 1d26 C8030000 		.4byte	.LFE67
 22518 1d2a 0400     		.2byte	0x4
 22519 1d2c F3       		.byte	0xf3
 22520 1d2d 01       		.uleb128 0x1
 22521 1d2e 53       		.byte	0x53
 22522 1d2f 9F       		.byte	0x9f
 22523 1d30 00000000 		.4byte	0
 22524 1d34 00000000 		.4byte	0
 22525              	.LLST159:
 22526 1d38 7C000000 		.4byte	.LVL414
 22527 1d3c BC000000 		.4byte	.LVL416
 22528 1d40 0100     		.2byte	0x1
 22529 1d42 50       		.byte	0x50
 22530 1d43 CE000000 		.4byte	.LVL420
 22531 1d47 D6000000 		.4byte	.LVL422
 22532 1d4b 0100     		.2byte	0x1
 22533 1d4d 50       		.byte	0x50
 22534 1d4e E6000000 		.4byte	.LVL427
 22535 1d52 EC000000 		.4byte	.LVL428
 22536 1d56 0100     		.2byte	0x1
 22537 1d58 50       		.byte	0x50
 22538 1d59 EC000000 		.4byte	.LVL428
 22539 1d5d 34010000 		.4byte	.LVL434
 22540 1d61 0300     		.2byte	0x3
 22541 1d63 91       		.byte	0x91
 22542 1d64 C476     		.sleb128 -1212
 22543 1d66 70010000 		.4byte	.LVL438
 22544 1d6a 76010000 		.4byte	.LVL439
 22545 1d6e 0100     		.2byte	0x1
 22546 1d70 50       		.byte	0x50
 22547 1d71 76010000 		.4byte	.LVL439
 22548 1d75 7C010000 		.4byte	.LVL440
 22549 1d79 0300     		.2byte	0x3
 22550 1d7b 91       		.byte	0x91
 22551 1d7c C476     		.sleb128 -1212
 22552 1d7e 7C010000 		.4byte	.LVL440
 22553 1d82 80010000 		.4byte	.LVL441
 22554 1d86 0400     		.2byte	0x4
 22555 1d88 0B       		.byte	0xb
 22556 1d89 7CFF     		.2byte	0xff7c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 602


 22557 1d8b 9F       		.byte	0x9f
 22558 1d8c 9A010000 		.4byte	.LVL446
 22559 1d90 D2010000 		.4byte	.LVL450
 22560 1d94 0200     		.2byte	0x2
 22561 1d96 30       		.byte	0x30
 22562 1d97 9F       		.byte	0x9f
 22563 1d98 D2010000 		.4byte	.LVL450
 22564 1d9c DC010000 		.4byte	.LVL451
 22565 1da0 0100     		.2byte	0x1
 22566 1da2 50       		.byte	0x50
 22567 1da3 DC010000 		.4byte	.LVL451
 22568 1da7 F0010000 		.4byte	.LVL453
 22569 1dab 0100     		.2byte	0x1
 22570 1dad 54       		.byte	0x54
 22571 1dae F0010000 		.4byte	.LVL453
 22572 1db2 10020000 		.4byte	.LVL457
 22573 1db6 0200     		.2byte	0x2
 22574 1db8 30       		.byte	0x30
 22575 1db9 9F       		.byte	0x9f
 22576 1dba 10020000 		.4byte	.LVL457
 22577 1dbe 1A020000 		.4byte	.LVL458
 22578 1dc2 0100     		.2byte	0x1
 22579 1dc4 50       		.byte	0x50
 22580 1dc5 1A020000 		.4byte	.LVL458
 22581 1dc9 20020000 		.4byte	.LVL459
 22582 1dcd 0100     		.2byte	0x1
 22583 1dcf 54       		.byte	0x54
 22584 1dd0 20020000 		.4byte	.LVL459
 22585 1dd4 28020000 		.4byte	.LVL460
 22586 1dd8 0200     		.2byte	0x2
 22587 1dda 30       		.byte	0x30
 22588 1ddb 9F       		.byte	0x9f
 22589 1ddc 46020000 		.4byte	.LVL467
 22590 1de0 52020000 		.4byte	.LVL468
 22591 1de4 0100     		.2byte	0x1
 22592 1de6 50       		.byte	0x50
 22593 1de7 52020000 		.4byte	.LVL468
 22594 1deb 7C020000 		.4byte	.LVL472
 22595 1def 0100     		.2byte	0x1
 22596 1df1 54       		.byte	0x54
 22597 1df2 7E020000 		.4byte	.LVL473
 22598 1df6 82020000 		.4byte	.LVL474
 22599 1dfa 0100     		.2byte	0x1
 22600 1dfc 54       		.byte	0x54
 22601 1dfd D2020000 		.4byte	.LVL479
 22602 1e01 D6020000 		.4byte	.LVL480
 22603 1e05 0100     		.2byte	0x1
 22604 1e07 50       		.byte	0x50
 22605 1e08 D6020000 		.4byte	.LVL480
 22606 1e0c F2020000 		.4byte	.LVL482
 22607 1e10 0100     		.2byte	0x1
 22608 1e12 54       		.byte	0x54
 22609 1e13 10030000 		.4byte	.LVL485
 22610 1e17 30030000 		.4byte	.LVL491
 22611 1e1b 0100     		.2byte	0x1
 22612 1e1d 54       		.byte	0x54
 22613 1e1e 44030000 		.4byte	.LVL494
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 603


 22614 1e22 4E030000 		.4byte	.LVL495
 22615 1e26 0100     		.2byte	0x1
 22616 1e28 50       		.byte	0x50
 22617 1e29 00000000 		.4byte	0
 22618 1e2d 00000000 		.4byte	0
 22619              	.LLST160:
 22620 1e31 1C000000 		.4byte	.LVL408
 22621 1e35 AE030000 		.4byte	.LVL500
 22622 1e39 0300     		.2byte	0x3
 22623 1e3b 91       		.byte	0x91
 22624 1e3c BC76     		.sleb128 -1220
 22625 1e3e 00000000 		.4byte	0
 22626 1e42 00000000 		.4byte	0
 22627              	.LLST161:
 22628 1e46 B0000000 		.4byte	.LVL415
 22629 1e4a C4000000 		.4byte	.LVL419
 22630 1e4e 0400     		.2byte	0x4
 22631 1e50 91       		.byte	0x91
 22632 1e51 E877     		.sleb128 -1048
 22633 1e53 9F       		.byte	0x9f
 22634 1e54 C4000000 		.4byte	.LVL419
 22635 1e58 CE000000 		.4byte	.LVL420
 22636 1e5c 0100     		.2byte	0x1
 22637 1e5e 50       		.byte	0x50
 22638 1e5f CE000000 		.4byte	.LVL420
 22639 1e63 D2000000 		.4byte	.LVL421
 22640 1e67 0400     		.2byte	0x4
 22641 1e69 91       		.byte	0x91
 22642 1e6a E877     		.sleb128 -1048
 22643 1e6c 9F       		.byte	0x9f
 22644 1e6d D2000000 		.4byte	.LVL421
 22645 1e71 D6000000 		.4byte	.LVL422
 22646 1e75 0100     		.2byte	0x1
 22647 1e77 53       		.byte	0x53
 22648 1e78 D6000000 		.4byte	.LVL422
 22649 1e7c DC000000 		.4byte	.LVL423
 22650 1e80 0300     		.2byte	0x3
 22651 1e82 91       		.byte	0x91
 22652 1e83 B876     		.sleb128 -1224
 22653 1e85 DC000000 		.4byte	.LVL423
 22654 1e89 DE000000 		.4byte	.LVL424
 22655 1e8d 0100     		.2byte	0x1
 22656 1e8f 50       		.byte	0x50
 22657 1e90 DE000000 		.4byte	.LVL424
 22658 1e94 32020000 		.4byte	.LVL462
 22659 1e98 0300     		.2byte	0x3
 22660 1e9a 91       		.byte	0x91
 22661 1e9b B876     		.sleb128 -1224
 22662 1e9d 44030000 		.4byte	.LVL494
 22663 1ea1 4E030000 		.4byte	.LVL495
 22664 1ea5 0300     		.2byte	0x3
 22665 1ea7 91       		.byte	0x91
 22666 1ea8 B876     		.sleb128 -1224
 22667 1eaa 00000000 		.4byte	0
 22668 1eae 00000000 		.4byte	0
 22669              	.LLST162:
 22670 1eb2 B0000000 		.4byte	.LVL415
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 604


 22671 1eb6 D6000000 		.4byte	.LVL422
 22672 1eba 0200     		.2byte	0x2
 22673 1ebc 30       		.byte	0x30
 22674 1ebd 9F       		.byte	0x9f
 22675 1ebe D6000000 		.4byte	.LVL422
 22676 1ec2 DC000000 		.4byte	.LVL423
 22677 1ec6 0300     		.2byte	0x3
 22678 1ec8 91       		.byte	0x91
 22679 1ec9 C876     		.sleb128 -1208
 22680 1ecb DC000000 		.4byte	.LVL423
 22681 1ecf E6000000 		.4byte	.LVL427
 22682 1ed3 0200     		.2byte	0x2
 22683 1ed5 30       		.byte	0x30
 22684 1ed6 9F       		.byte	0x9f
 22685 1ed7 E6000000 		.4byte	.LVL427
 22686 1edb 32020000 		.4byte	.LVL462
 22687 1edf 0300     		.2byte	0x3
 22688 1ee1 91       		.byte	0x91
 22689 1ee2 C876     		.sleb128 -1208
 22690 1ee4 44030000 		.4byte	.LVL494
 22691 1ee8 4E030000 		.4byte	.LVL495
 22692 1eec 0300     		.2byte	0x3
 22693 1eee 91       		.byte	0x91
 22694 1eef C876     		.sleb128 -1208
 22695 1ef1 00000000 		.4byte	0
 22696 1ef5 00000000 		.4byte	0
 22697              	.LLST163:
 22698 1ef9 B0000000 		.4byte	.LVL415
 22699 1efd BE000000 		.4byte	.LVL417
 22700 1f01 0400     		.2byte	0x4
 22701 1f03 0A       		.byte	0xa
 22702 1f04 0004     		.2byte	0x400
 22703 1f06 9F       		.byte	0x9f
 22704 1f07 BE000000 		.4byte	.LVL417
 22705 1f0b C1000000 		.4byte	.LVL418-1
 22706 1f0f 0100     		.2byte	0x1
 22707 1f11 50       		.byte	0x50
 22708 1f12 C1000000 		.4byte	.LVL418-1
 22709 1f16 CE000000 		.4byte	.LVL420
 22710 1f1a 0300     		.2byte	0x3
 22711 1f1c 91       		.byte	0x91
 22712 1f1d CC76     		.sleb128 -1204
 22713 1f1f CE000000 		.4byte	.LVL420
 22714 1f23 D6000000 		.4byte	.LVL422
 22715 1f27 0400     		.2byte	0x4
 22716 1f29 0A       		.byte	0xa
 22717 1f2a 0004     		.2byte	0x400
 22718 1f2c 9F       		.byte	0x9f
 22719 1f2d D6000000 		.4byte	.LVL422
 22720 1f31 32020000 		.4byte	.LVL462
 22721 1f35 0300     		.2byte	0x3
 22722 1f37 91       		.byte	0x91
 22723 1f38 CC76     		.sleb128 -1204
 22724 1f3a 44030000 		.4byte	.LVL494
 22725 1f3e 4E030000 		.4byte	.LVL495
 22726 1f42 0300     		.2byte	0x3
 22727 1f44 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 605


 22728 1f45 CC76     		.sleb128 -1204
 22729 1f47 00000000 		.4byte	0
 22730 1f4b 00000000 		.4byte	0
 22731              	.LLST164:
 22732 1f4f B0000000 		.4byte	.LVL415
 22733 1f53 E4000000 		.4byte	.LVL426
 22734 1f57 0100     		.2byte	0x1
 22735 1f59 54       		.byte	0x54
 22736 1f5a E6000000 		.4byte	.LVL427
 22737 1f5e 98010000 		.4byte	.LVL445
 22738 1f62 0100     		.2byte	0x1
 22739 1f64 54       		.byte	0x54
 22740 1f65 9A010000 		.4byte	.LVL446
 22741 1f69 D2010000 		.4byte	.LVL450
 22742 1f6d 0100     		.2byte	0x1
 22743 1f6f 54       		.byte	0x54
 22744 1f70 F0010000 		.4byte	.LVL453
 22745 1f74 F6010000 		.4byte	.LVL454
 22746 1f78 0100     		.2byte	0x1
 22747 1f7a 54       		.byte	0x54
 22748 1f7b 00000000 		.4byte	0
 22749 1f7f 00000000 		.4byte	0
 22750              	.LLST165:
 22751 1f83 B0000000 		.4byte	.LVL415
 22752 1f87 E6000000 		.4byte	.LVL427
 22753 1f8b 0200     		.2byte	0x2
 22754 1f8d 30       		.byte	0x30
 22755 1f8e 9F       		.byte	0x9f
 22756 1f8f E6000000 		.4byte	.LVL427
 22757 1f93 32020000 		.4byte	.LVL462
 22758 1f97 0100     		.2byte	0x1
 22759 1f99 56       		.byte	0x56
 22760 1f9a 44030000 		.4byte	.LVL494
 22761 1f9e 4E030000 		.4byte	.LVL495
 22762 1fa2 0100     		.2byte	0x1
 22763 1fa4 56       		.byte	0x56
 22764 1fa5 00000000 		.4byte	0
 22765 1fa9 00000000 		.4byte	0
 22766              	.LLST166:
 22767 1fad B0000000 		.4byte	.LVL415
 22768 1fb1 E6000000 		.4byte	.LVL427
 22769 1fb5 0200     		.2byte	0x2
 22770 1fb7 30       		.byte	0x30
 22771 1fb8 9F       		.byte	0x9f
 22772 1fb9 E6000000 		.4byte	.LVL427
 22773 1fbd 34010000 		.4byte	.LVL434
 22774 1fc1 0200     		.2byte	0x2
 22775 1fc3 31       		.byte	0x31
 22776 1fc4 9F       		.byte	0x9f
 22777 1fc5 34010000 		.4byte	.LVL434
 22778 1fc9 76010000 		.4byte	.LVL439
 22779 1fcd 0100     		.2byte	0x1
 22780 1fcf 57       		.byte	0x57
 22781 1fd0 76010000 		.4byte	.LVL439
 22782 1fd4 80010000 		.4byte	.LVL441
 22783 1fd8 0200     		.2byte	0x2
 22784 1fda 31       		.byte	0x31
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 606


 22785 1fdb 9F       		.byte	0x9f
 22786 1fdc 80010000 		.4byte	.LVL441
 22787 1fe0 B6010000 		.4byte	.LVL447
 22788 1fe4 0100     		.2byte	0x1
 22789 1fe6 57       		.byte	0x57
 22790 1fe7 F0010000 		.4byte	.LVL453
 22791 1feb 20020000 		.4byte	.LVL459
 22792 1fef 0100     		.2byte	0x1
 22793 1ff1 57       		.byte	0x57
 22794 1ff2 00000000 		.4byte	0
 22795 1ff6 00000000 		.4byte	0
 22796              	.LLST167:
 22797 1ffa 8A010000 		.4byte	.LVL442
 22798 1ffe 90010000 		.4byte	.LVL443
 22799 2002 0300     		.2byte	0x3
 22800 2004 91       		.byte	0x91
 22801 2005 B876     		.sleb128 -1224
 22802 2007 00000000 		.4byte	0
 22803 200b 00000000 		.4byte	0
 22804              	.LLST168:
 22805 200f 28020000 		.4byte	.LVL460
 22806 2013 2E020000 		.4byte	.LVL461
 22807 2017 0300     		.2byte	0x3
 22808 2019 91       		.byte	0x91
 22809 201a B876     		.sleb128 -1224
 22810 201c 00000000 		.4byte	0
 22811 2020 00000000 		.4byte	0
 22812              	.LLST169:
 22813 2024 00000000 		.4byte	.LVL502
 22814 2028 04000000 		.4byte	.LVL503
 22815 202c 0100     		.2byte	0x1
 22816 202e 50       		.byte	0x50
 22817 202f 04000000 		.4byte	.LVL503
 22818 2033 08000000 		.4byte	.LFE71
 22819 2037 0400     		.2byte	0x4
 22820 2039 F3       		.byte	0xf3
 22821 203a 01       		.uleb128 0x1
 22822 203b 50       		.byte	0x50
 22823 203c 9F       		.byte	0x9f
 22824 203d 00000000 		.4byte	0
 22825 2041 00000000 		.4byte	0
 22826              	.LLST170:
 22827 2045 00000000 		.4byte	.LVL504
 22828 2049 08000000 		.4byte	.LVL505
 22829 204d 0100     		.2byte	0x1
 22830 204f 50       		.byte	0x50
 22831 2050 08000000 		.4byte	.LVL505
 22832 2054 0C000000 		.4byte	.LVL506
 22833 2058 0400     		.2byte	0x4
 22834 205a 70       		.byte	0x70
 22835 205b AC7F     		.sleb128 -84
 22836 205d 9F       		.byte	0x9f
 22837 205e 0C000000 		.4byte	.LVL506
 22838 2062 0E000000 		.4byte	.LVL507
 22839 2066 0400     		.2byte	0x4
 22840 2068 F3       		.byte	0xf3
 22841 2069 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 607


 22842 206a 50       		.byte	0x50
 22843 206b 9F       		.byte	0x9f
 22844 206c 0E000000 		.4byte	.LVL507
 22845 2070 10000000 		.4byte	.LVL508
 22846 2074 0100     		.2byte	0x1
 22847 2076 50       		.byte	0x50
 22848 2077 10000000 		.4byte	.LVL508
 22849 207b 14000000 		.4byte	.LFE72
 22850 207f 0400     		.2byte	0x4
 22851 2081 F3       		.byte	0xf3
 22852 2082 01       		.uleb128 0x1
 22853 2083 50       		.byte	0x50
 22854 2084 9F       		.byte	0x9f
 22855 2085 00000000 		.4byte	0
 22856 2089 00000000 		.4byte	0
 22857              	.LLST171:
 22858 208d 00000000 		.4byte	.LVL509
 22859 2091 12000000 		.4byte	.LVL510
 22860 2095 0100     		.2byte	0x1
 22861 2097 50       		.byte	0x50
 22862 2098 12000000 		.4byte	.LVL510
 22863 209c 48000000 		.4byte	.LVL518
 22864 20a0 0100     		.2byte	0x1
 22865 20a2 55       		.byte	0x55
 22866 20a3 48000000 		.4byte	.LVL518
 22867 20a7 4A000000 		.4byte	.LVL519
 22868 20ab 0100     		.2byte	0x1
 22869 20ad 50       		.byte	0x50
 22870 20ae 4A000000 		.4byte	.LVL519
 22871 20b2 78000000 		.4byte	.LVL527
 22872 20b6 0100     		.2byte	0x1
 22873 20b8 55       		.byte	0x55
 22874 20b9 78000000 		.4byte	.LVL527
 22875 20bd 80000000 		.4byte	.LFE73
 22876 20c1 0400     		.2byte	0x4
 22877 20c3 F3       		.byte	0xf3
 22878 20c4 01       		.uleb128 0x1
 22879 20c5 50       		.byte	0x50
 22880 20c6 9F       		.byte	0x9f
 22881 20c7 00000000 		.4byte	0
 22882 20cb 00000000 		.4byte	0
 22883              	.LLST172:
 22884 20cf 00000000 		.4byte	.LVL509
 22885 20d3 26000000 		.4byte	.LVL512
 22886 20d7 0100     		.2byte	0x1
 22887 20d9 51       		.byte	0x51
 22888 20da 26000000 		.4byte	.LVL512
 22889 20de 31000000 		.4byte	.LVL514-1
 22890 20e2 0100     		.2byte	0x1
 22891 20e4 50       		.byte	0x50
 22892 20e5 31000000 		.4byte	.LVL514-1
 22893 20e9 48000000 		.4byte	.LVL518
 22894 20ed 0400     		.2byte	0x4
 22895 20ef F3       		.byte	0xf3
 22896 20f0 01       		.uleb128 0x1
 22897 20f1 51       		.byte	0x51
 22898 20f2 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 608


 22899 20f3 48000000 		.4byte	.LVL518
 22900 20f7 4F000000 		.4byte	.LVL521-1
 22901 20fb 0100     		.2byte	0x1
 22902 20fd 51       		.byte	0x51
 22903 20fe 4F000000 		.4byte	.LVL521-1
 22904 2102 80000000 		.4byte	.LFE73
 22905 2106 0400     		.2byte	0x4
 22906 2108 F3       		.byte	0xf3
 22907 2109 01       		.uleb128 0x1
 22908 210a 51       		.byte	0x51
 22909 210b 9F       		.byte	0x9f
 22910 210c 00000000 		.4byte	0
 22911 2110 00000000 		.4byte	0
 22912              	.LLST173:
 22913 2114 00000000 		.4byte	.LVL509
 22914 2118 28000000 		.4byte	.LVL513
 22915 211c 0100     		.2byte	0x1
 22916 211e 52       		.byte	0x52
 22917 211f 28000000 		.4byte	.LVL513
 22918 2123 31000000 		.4byte	.LVL514-1
 22919 2127 0100     		.2byte	0x1
 22920 2129 51       		.byte	0x51
 22921 212a 31000000 		.4byte	.LVL514-1
 22922 212e 48000000 		.4byte	.LVL518
 22923 2132 0400     		.2byte	0x4
 22924 2134 F3       		.byte	0xf3
 22925 2135 01       		.uleb128 0x1
 22926 2136 52       		.byte	0x52
 22927 2137 9F       		.byte	0x9f
 22928 2138 48000000 		.4byte	.LVL518
 22929 213c 4F000000 		.4byte	.LVL521-1
 22930 2140 0100     		.2byte	0x1
 22931 2142 52       		.byte	0x52
 22932 2143 4F000000 		.4byte	.LVL521-1
 22933 2147 80000000 		.4byte	.LFE73
 22934 214b 0400     		.2byte	0x4
 22935 214d F3       		.byte	0xf3
 22936 214e 01       		.uleb128 0x1
 22937 214f 52       		.byte	0x52
 22938 2150 9F       		.byte	0x9f
 22939 2151 00000000 		.4byte	0
 22940 2155 00000000 		.4byte	0
 22941              	.LLST174:
 22942 2159 00000000 		.4byte	.LVL509
 22943 215d 16000000 		.4byte	.LVL511
 22944 2161 0100     		.2byte	0x1
 22945 2163 53       		.byte	0x53
 22946 2164 16000000 		.4byte	.LVL511
 22947 2168 48000000 		.4byte	.LVL518
 22948 216c 0400     		.2byte	0x4
 22949 216e F3       		.byte	0xf3
 22950 216f 01       		.uleb128 0x1
 22951 2170 53       		.byte	0x53
 22952 2171 9F       		.byte	0x9f
 22953 2172 48000000 		.4byte	.LVL518
 22954 2176 4C000000 		.4byte	.LVL520
 22955 217a 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 609


 22956 217c 53       		.byte	0x53
 22957 217d 4C000000 		.4byte	.LVL520
 22958 2181 80000000 		.4byte	.LFE73
 22959 2185 0400     		.2byte	0x4
 22960 2187 F3       		.byte	0xf3
 22961 2188 01       		.uleb128 0x1
 22962 2189 53       		.byte	0x53
 22963 218a 9F       		.byte	0x9f
 22964 218b 00000000 		.4byte	0
 22965 218f 00000000 		.4byte	0
 22966              	.LLST175:
 22967 2193 00000000 		.4byte	.LVL509
 22968 2197 36000000 		.4byte	.LVL515
 22969 219b 0200     		.2byte	0x2
 22970 219d 30       		.byte	0x30
 22971 219e 9F       		.byte	0x9f
 22972 219f 36000000 		.4byte	.LVL515
 22973 21a3 3C000000 		.4byte	.LVL516
 22974 21a7 0100     		.2byte	0x1
 22975 21a9 50       		.byte	0x50
 22976 21aa 3C000000 		.4byte	.LVL516
 22977 21ae 48000000 		.4byte	.LVL518
 22978 21b2 0100     		.2byte	0x1
 22979 21b4 54       		.byte	0x54
 22980 21b5 48000000 		.4byte	.LVL518
 22981 21b9 50000000 		.4byte	.LVL521
 22982 21bd 0200     		.2byte	0x2
 22983 21bf 30       		.byte	0x30
 22984 21c0 9F       		.byte	0x9f
 22985 21c1 5E000000 		.4byte	.LVL523
 22986 21c5 78000000 		.4byte	.LVL526
 22987 21c9 0100     		.2byte	0x1
 22988 21cb 54       		.byte	0x54
 22989 21cc 00000000 		.4byte	0
 22990 21d0 00000000 		.4byte	0
 22991              	.LLST176:
 22992 21d4 00000000 		.4byte	.LVL528
 22993 21d8 04000000 		.4byte	.LVL529
 22994 21dc 0100     		.2byte	0x1
 22995 21de 50       		.byte	0x50
 22996 21df 04000000 		.4byte	.LVL529
 22997 21e3 08000000 		.4byte	.LFE74
 22998 21e7 0400     		.2byte	0x4
 22999 21e9 F3       		.byte	0xf3
 23000 21ea 01       		.uleb128 0x1
 23001 21eb 50       		.byte	0x50
 23002 21ec 9F       		.byte	0x9f
 23003 21ed 00000000 		.4byte	0
 23004 21f1 00000000 		.4byte	0
 23005              	.LLST177:
 23006 21f5 00000000 		.4byte	.LVL530
 23007 21f9 08000000 		.4byte	.LVL531
 23008 21fd 0100     		.2byte	0x1
 23009 21ff 50       		.byte	0x50
 23010 2200 08000000 		.4byte	.LVL531
 23011 2204 0C000000 		.4byte	.LVL532
 23012 2208 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 610


 23013 220a 70       		.byte	0x70
 23014 220b AA7F     		.sleb128 -86
 23015 220d 9F       		.byte	0x9f
 23016 220e 0C000000 		.4byte	.LVL532
 23017 2212 0E000000 		.4byte	.LVL533
 23018 2216 0400     		.2byte	0x4
 23019 2218 F3       		.byte	0xf3
 23020 2219 01       		.uleb128 0x1
 23021 221a 50       		.byte	0x50
 23022 221b 9F       		.byte	0x9f
 23023 221c 0E000000 		.4byte	.LVL533
 23024 2220 10000000 		.4byte	.LVL534
 23025 2224 0100     		.2byte	0x1
 23026 2226 50       		.byte	0x50
 23027 2227 10000000 		.4byte	.LVL534
 23028 222b 14000000 		.4byte	.LFE75
 23029 222f 0400     		.2byte	0x4
 23030 2231 F3       		.byte	0xf3
 23031 2232 01       		.uleb128 0x1
 23032 2233 50       		.byte	0x50
 23033 2234 9F       		.byte	0x9f
 23034 2235 00000000 		.4byte	0
 23035 2239 00000000 		.4byte	0
 23036              	.LLST178:
 23037 223d 00000000 		.4byte	.LVL535
 23038 2241 04000000 		.4byte	.LVL536
 23039 2245 0100     		.2byte	0x1
 23040 2247 50       		.byte	0x50
 23041 2248 04000000 		.4byte	.LVL536
 23042 224c 08000000 		.4byte	.LFE76
 23043 2250 0400     		.2byte	0x4
 23044 2252 F3       		.byte	0xf3
 23045 2253 01       		.uleb128 0x1
 23046 2254 50       		.byte	0x50
 23047 2255 9F       		.byte	0x9f
 23048 2256 00000000 		.4byte	0
 23049 225a 00000000 		.4byte	0
 23050              	.LLST179:
 23051 225e 00000000 		.4byte	.LVL537
 23052 2262 30000000 		.4byte	.LVL538
 23053 2266 0100     		.2byte	0x1
 23054 2268 51       		.byte	0x51
 23055 2269 30000000 		.4byte	.LVL538
 23056 226d 3E000000 		.4byte	.LFE77
 23057 2271 0400     		.2byte	0x4
 23058 2273 F3       		.byte	0xf3
 23059 2274 01       		.uleb128 0x1
 23060 2275 51       		.byte	0x51
 23061 2276 9F       		.byte	0x9f
 23062 2277 00000000 		.4byte	0
 23063 227b 00000000 		.4byte	0
 23064              	.LLST180:
 23065 227f 00000000 		.4byte	.LVL539
 23066 2283 40000000 		.4byte	.LVL540
 23067 2287 0100     		.2byte	0x1
 23068 2289 51       		.byte	0x51
 23069 228a 40000000 		.4byte	.LVL540
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 611


 23070 228e 58000000 		.4byte	.LFE78
 23071 2292 0400     		.2byte	0x4
 23072 2294 F3       		.byte	0xf3
 23073 2295 01       		.uleb128 0x1
 23074 2296 51       		.byte	0x51
 23075 2297 9F       		.byte	0x9f
 23076 2298 00000000 		.4byte	0
 23077 229c 00000000 		.4byte	0
 23078              	.LLST181:
 23079 22a0 00000000 		.4byte	.LVL544
 23080 22a4 0E000000 		.4byte	.LVL545
 23081 22a8 0100     		.2byte	0x1
 23082 22aa 50       		.byte	0x50
 23083 22ab 0E000000 		.4byte	.LVL545
 23084 22af 34000000 		.4byte	.LVL549
 23085 22b3 0100     		.2byte	0x1
 23086 22b5 54       		.byte	0x54
 23087 22b6 34000000 		.4byte	.LVL549
 23088 22ba 36000000 		.4byte	.LFE83
 23089 22be 0400     		.2byte	0x4
 23090 22c0 F3       		.byte	0xf3
 23091 22c1 01       		.uleb128 0x1
 23092 22c2 50       		.byte	0x50
 23093 22c3 9F       		.byte	0x9f
 23094 22c4 00000000 		.4byte	0
 23095 22c8 00000000 		.4byte	0
 23096              	.LLST182:
 23097 22cc 00000000 		.4byte	.LVL544
 23098 22d0 13000000 		.4byte	.LVL546-1
 23099 22d4 0100     		.2byte	0x1
 23100 22d6 51       		.byte	0x51
 23101 22d7 13000000 		.4byte	.LVL546-1
 23102 22db 34000000 		.4byte	.LVL550
 23103 22df 0100     		.2byte	0x1
 23104 22e1 56       		.byte	0x56
 23105 22e2 34000000 		.4byte	.LVL550
 23106 22e6 36000000 		.4byte	.LFE83
 23107 22ea 0400     		.2byte	0x4
 23108 22ec F3       		.byte	0xf3
 23109 22ed 01       		.uleb128 0x1
 23110 22ee 51       		.byte	0x51
 23111 22ef 9F       		.byte	0x9f
 23112 22f0 00000000 		.4byte	0
 23113 22f4 00000000 		.4byte	0
 23114              	.LLST183:
 23115 22f8 00000000 		.4byte	.LVL551
 23116 22fc 04000000 		.4byte	.LVL552
 23117 2300 0100     		.2byte	0x1
 23118 2302 50       		.byte	0x50
 23119 2303 04000000 		.4byte	.LVL552
 23120 2307 0E000000 		.4byte	.LFE84
 23121 230b 0400     		.2byte	0x4
 23122 230d F3       		.byte	0xf3
 23123 230e 01       		.uleb128 0x1
 23124 230f 50       		.byte	0x50
 23125 2310 9F       		.byte	0x9f
 23126 2311 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 612


 23127 2315 00000000 		.4byte	0
 23128              	.LLST184:
 23129 2319 00000000 		.4byte	.LVL551
 23130 231d 07000000 		.4byte	.LVL553-1
 23131 2321 0100     		.2byte	0x1
 23132 2323 51       		.byte	0x51
 23133 2324 07000000 		.4byte	.LVL553-1
 23134 2328 0E000000 		.4byte	.LFE84
 23135 232c 0400     		.2byte	0x4
 23136 232e F3       		.byte	0xf3
 23137 232f 01       		.uleb128 0x1
 23138 2330 51       		.byte	0x51
 23139 2331 9F       		.byte	0x9f
 23140 2332 00000000 		.4byte	0
 23141 2336 00000000 		.4byte	0
 23142              	.LLST185:
 23143 233a 00000000 		.4byte	.LVL554
 23144 233e 19000000 		.4byte	.LVL555-1
 23145 2342 0100     		.2byte	0x1
 23146 2344 50       		.byte	0x50
 23147 2345 19000000 		.4byte	.LVL555-1
 23148 2349 6C010000 		.4byte	.LVL570
 23149 234d 0100     		.2byte	0x1
 23150 234f 54       		.byte	0x54
 23151 2350 6C010000 		.4byte	.LVL570
 23152 2354 70010000 		.4byte	.LVL571
 23153 2358 0400     		.2byte	0x4
 23154 235a 74       		.byte	0x74
 23155 235b 847E     		.sleb128 -252
 23156 235d 9F       		.byte	0x9f
 23157 235e 70010000 		.4byte	.LVL571
 23158 2362 82010000 		.4byte	.LVL573
 23159 2366 0100     		.2byte	0x1
 23160 2368 54       		.byte	0x54
 23161 2369 82010000 		.4byte	.LVL573
 23162 236d 90010000 		.4byte	.LFE85
 23163 2371 0400     		.2byte	0x4
 23164 2373 F3       		.byte	0xf3
 23165 2374 01       		.uleb128 0x1
 23166 2375 50       		.byte	0x50
 23167 2376 9F       		.byte	0x9f
 23168 2377 00000000 		.4byte	0
 23169 237b 00000000 		.4byte	0
 23170              	.LLST186:
 23171 237f 6E000000 		.4byte	.LVL557
 23172 2383 94000000 		.4byte	.LVL559
 23173 2387 0100     		.2byte	0x1
 23174 2389 56       		.byte	0x56
 23175 238a 94000000 		.4byte	.LVL559
 23176 238e 9A000000 		.4byte	.LVL560
 23177 2392 0300     		.2byte	0x3
 23178 2394 76       		.byte	0x76
 23179 2395 01       		.sleb128 1
 23180 2396 9F       		.byte	0x9f
 23181 2397 9A000000 		.4byte	.LVL560
 23182 239b 9C000000 		.4byte	.LVL561
 23183 239f 0300     		.2byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 613


 23184 23a1 76       		.byte	0x76
 23185 23a2 05       		.sleb128 5
 23186 23a3 9F       		.byte	0x9f
 23187 23a4 9C000000 		.4byte	.LVL561
 23188 23a8 A0000000 		.4byte	.LVL562
 23189 23ac 0100     		.2byte	0x1
 23190 23ae 56       		.byte	0x56
 23191 23af 00000000 		.4byte	0
 23192 23b3 00000000 		.4byte	0
 23193              	.LLST187:
 23194 23b7 66010000 		.4byte	.LVL569
 23195 23bb 70010000 		.4byte	.LVL571
 23196 23bf 0100     		.2byte	0x1
 23197 23c1 50       		.byte	0x50
 23198 23c2 00000000 		.4byte	0
 23199 23c6 00000000 		.4byte	0
 23200              	.LLST188:
 23201 23ca 00000000 		.4byte	.LVL574
 23202 23ce 0F000000 		.4byte	.LVL575-1
 23203 23d2 0100     		.2byte	0x1
 23204 23d4 50       		.byte	0x50
 23205 23d5 0F000000 		.4byte	.LVL575-1
 23206 23d9 12000000 		.4byte	.LVL576
 23207 23dd 0400     		.2byte	0x4
 23208 23df F3       		.byte	0xf3
 23209 23e0 01       		.uleb128 0x1
 23210 23e1 50       		.byte	0x50
 23211 23e2 9F       		.byte	0x9f
 23212 23e3 12000000 		.4byte	.LVL576
 23213 23e7 14000000 		.4byte	.LVL577
 23214 23eb 0100     		.2byte	0x1
 23215 23ed 50       		.byte	0x50
 23216 23ee 14000000 		.4byte	.LVL577
 23217 23f2 18000000 		.4byte	.LFE27
 23218 23f6 0400     		.2byte	0x4
 23219 23f8 F3       		.byte	0xf3
 23220 23f9 01       		.uleb128 0x1
 23221 23fa 50       		.byte	0x50
 23222 23fb 9F       		.byte	0x9f
 23223 23fc 00000000 		.4byte	0
 23224 2400 00000000 		.4byte	0
 23225              	.LLST189:
 23226 2404 00000000 		.4byte	.LVL574
 23227 2408 10000000 		.4byte	.LVL575
 23228 240c 0300     		.2byte	0x3
 23229 240e 09       		.byte	0x9
 23230 240f FF       		.byte	0xff
 23231 2410 9F       		.byte	0x9f
 23232 2411 10000000 		.4byte	.LVL575
 23233 2415 12000000 		.4byte	.LVL576
 23234 2419 0100     		.2byte	0x1
 23235 241b 50       		.byte	0x50
 23236 241c 12000000 		.4byte	.LVL576
 23237 2420 16000000 		.4byte	.LVL578
 23238 2424 0300     		.2byte	0x3
 23239 2426 09       		.byte	0x9
 23240 2427 FF       		.byte	0xff
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 614


 23241 2428 9F       		.byte	0x9f
 23242 2429 16000000 		.4byte	.LVL578
 23243 242d 18000000 		.4byte	.LFE27
 23244 2431 0100     		.2byte	0x1
 23245 2433 50       		.byte	0x50
 23246 2434 00000000 		.4byte	0
 23247 2438 00000000 		.4byte	0
 23248              	.LLST190:
 23249 243c 00000000 		.4byte	.LVL579
 23250 2440 17000000 		.4byte	.LVL580-1
 23251 2444 0100     		.2byte	0x1
 23252 2446 50       		.byte	0x50
 23253 2447 17000000 		.4byte	.LVL580-1
 23254 244b 1E000000 		.4byte	.LVL581
 23255 244f 0400     		.2byte	0x4
 23256 2451 74       		.byte	0x74
 23257 2452 F47B     		.sleb128 -524
 23258 2454 9F       		.byte	0x9f
 23259 2455 1E000000 		.4byte	.LVL581
 23260 2459 20000000 		.4byte	.LFE54
 23261 245d 0400     		.2byte	0x4
 23262 245f F3       		.byte	0xf3
 23263 2460 01       		.uleb128 0x1
 23264 2461 50       		.byte	0x50
 23265 2462 9F       		.byte	0x9f
 23266 2463 00000000 		.4byte	0
 23267 2467 00000000 		.4byte	0
 23268              	.LLST191:
 23269 246b 18000000 		.4byte	.LVL580
 23270 246f 1E000000 		.4byte	.LVL581
 23271 2473 0100     		.2byte	0x1
 23272 2475 50       		.byte	0x50
 23273 2476 00000000 		.4byte	0
 23274 247a 00000000 		.4byte	0
 23275              	.LLST192:
 23276 247e 00000000 		.4byte	.LVL582
 23277 2482 0A000000 		.4byte	.LVL583
 23278 2486 0100     		.2byte	0x1
 23279 2488 50       		.byte	0x50
 23280 2489 0A000000 		.4byte	.LVL583
 23281 248d 0C000000 		.4byte	.LVL584
 23282 2491 0400     		.2byte	0x4
 23283 2493 F3       		.byte	0xf3
 23284 2494 01       		.uleb128 0x1
 23285 2495 50       		.byte	0x50
 23286 2496 9F       		.byte	0x9f
 23287 2497 0C000000 		.4byte	.LVL584
 23288 249b 0E000000 		.4byte	.LVL585
 23289 249f 0100     		.2byte	0x1
 23290 24a1 50       		.byte	0x50
 23291 24a2 0E000000 		.4byte	.LVL585
 23292 24a6 12000000 		.4byte	.LFE86
 23293 24aa 0400     		.2byte	0x4
 23294 24ac F3       		.byte	0xf3
 23295 24ad 01       		.uleb128 0x1
 23296 24ae 50       		.byte	0x50
 23297 24af 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 615


 23298 24b0 00000000 		.4byte	0
 23299 24b4 00000000 		.4byte	0
 23300              	.LLST193:
 23301 24b8 00000000 		.4byte	.LVL586
 23302 24bc 0A000000 		.4byte	.LVL587
 23303 24c0 0200     		.2byte	0x2
 23304 24c2 30       		.byte	0x30
 23305 24c3 9F       		.byte	0x9f
 23306 24c4 0E000000 		.4byte	.LVL588
 23307 24c8 1E000000 		.4byte	.LVL590
 23308 24cc 0200     		.2byte	0x2
 23309 24ce 30       		.byte	0x30
 23310 24cf 9F       		.byte	0x9f
 23311 24d0 1E000000 		.4byte	.LVL590
 23312 24d4 3C000000 		.4byte	.LVL593
 23313 24d8 0800     		.2byte	0x8
 23314 24da 75       		.byte	0x75
 23315 24db 00       		.sleb128 0
 23316 24dc 31       		.byte	0x31
 23317 24dd 29       		.byte	0x29
 23318 24de 08       		.byte	0x8
 23319 24df FF       		.byte	0xff
 23320 24e0 1A       		.byte	0x1a
 23321 24e1 9F       		.byte	0x9f
 23322 24e2 00000000 		.4byte	0
 23323 24e6 00000000 		.4byte	0
 23324              	.LLST194:
 23325 24ea 00000000 		.4byte	.LVL594
 23326 24ee 02000000 		.4byte	.LVL595
 23327 24f2 0100     		.2byte	0x1
 23328 24f4 50       		.byte	0x50
 23329 24f5 02000000 		.4byte	.LVL595
 23330 24f9 04000000 		.4byte	.LFE88
 23331 24fd 0400     		.2byte	0x4
 23332 24ff F3       		.byte	0xf3
 23333 2500 01       		.uleb128 0x1
 23334 2501 50       		.byte	0x50
 23335 2502 9F       		.byte	0x9f
 23336 2503 00000000 		.4byte	0
 23337 2507 00000000 		.4byte	0
 23338              	.LLST195:
 23339 250b 00000000 		.4byte	.LVL596
 23340 250f 06000000 		.4byte	.LVL597
 23341 2513 0100     		.2byte	0x1
 23342 2515 50       		.byte	0x50
 23343 2516 06000000 		.4byte	.LVL597
 23344 251a 34000000 		.4byte	.LVL603
 23345 251e 0100     		.2byte	0x1
 23346 2520 54       		.byte	0x54
 23347 2521 34000000 		.4byte	.LVL603
 23348 2525 36000000 		.4byte	.LVL604
 23349 2529 0400     		.2byte	0x4
 23350 252b 74       		.byte	0x74
 23351 252c 847E     		.sleb128 -252
 23352 252e 9F       		.byte	0x9f
 23353 252f 36000000 		.4byte	.LVL604
 23354 2533 3C000000 		.4byte	.LFE89
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 616


 23355 2537 0400     		.2byte	0x4
 23356 2539 F3       		.byte	0xf3
 23357 253a 01       		.uleb128 0x1
 23358 253b 50       		.byte	0x50
 23359 253c 9F       		.byte	0x9f
 23360 253d 00000000 		.4byte	0
 23361 2541 00000000 		.4byte	0
 23362              	.LLST196:
 23363 2545 00000000 		.4byte	.LVL596
 23364 2549 0F000000 		.4byte	.LVL599-1
 23365 254d 0100     		.2byte	0x1
 23366 254f 51       		.byte	0x51
 23367 2550 0F000000 		.4byte	.LVL599-1
 23368 2554 36000000 		.4byte	.LVL605
 23369 2558 0100     		.2byte	0x1
 23370 255a 55       		.byte	0x55
 23371 255b 36000000 		.4byte	.LVL605
 23372 255f 3C000000 		.4byte	.LFE89
 23373 2563 0400     		.2byte	0x4
 23374 2565 F3       		.byte	0xf3
 23375 2566 01       		.uleb128 0x1
 23376 2567 51       		.byte	0x51
 23377 2568 9F       		.byte	0x9f
 23378 2569 00000000 		.4byte	0
 23379 256d 00000000 		.4byte	0
 23380              	.LLST197:
 23381 2571 0C000000 		.4byte	.LVL598
 23382 2575 0F000000 		.4byte	.LVL599-1
 23383 2579 0100     		.2byte	0x1
 23384 257b 50       		.byte	0x50
 23385 257c 00000000 		.4byte	0
 23386 2580 00000000 		.4byte	0
 23387              	.LLST198:
 23388 2584 00000000 		.4byte	.LVL606
 23389 2588 02000000 		.4byte	.LVL607
 23390 258c 0100     		.2byte	0x1
 23391 258e 50       		.byte	0x50
 23392 258f 02000000 		.4byte	.LVL607
 23393 2593 06000000 		.4byte	.LFE90
 23394 2597 0400     		.2byte	0x4
 23395 2599 F3       		.byte	0xf3
 23396 259a 01       		.uleb128 0x1
 23397 259b 50       		.byte	0x50
 23398 259c 9F       		.byte	0x9f
 23399 259d 00000000 		.4byte	0
 23400 25a1 00000000 		.4byte	0
 23401              	.LLST199:
 23402 25a5 00000000 		.4byte	.LVL608
 23403 25a9 14000000 		.4byte	.LVL610
 23404 25ad 0100     		.2byte	0x1
 23405 25af 50       		.byte	0x50
 23406 25b0 14000000 		.4byte	.LVL610
 23407 25b4 52000000 		.4byte	.LVL617
 23408 25b8 0100     		.2byte	0x1
 23409 25ba 57       		.byte	0x57
 23410 25bb 52000000 		.4byte	.LVL617
 23411 25bf 63000000 		.4byte	.LVL620-1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 617


 23412 25c3 0100     		.2byte	0x1
 23413 25c5 50       		.byte	0x50
 23414 25c6 63000000 		.4byte	.LVL620-1
 23415 25ca 66000000 		.4byte	.LVL622
 23416 25ce 0100     		.2byte	0x1
 23417 25d0 57       		.byte	0x57
 23418 25d1 66000000 		.4byte	.LVL622
 23419 25d5 68000000 		.4byte	.LFE91
 23420 25d9 0400     		.2byte	0x4
 23421 25db F3       		.byte	0xf3
 23422 25dc 01       		.uleb128 0x1
 23423 25dd 50       		.byte	0x50
 23424 25de 9F       		.byte	0x9f
 23425 25df 00000000 		.4byte	0
 23426 25e3 00000000 		.4byte	0
 23427              	.LLST200:
 23428 25e7 00000000 		.4byte	.LVL608
 23429 25eb 14000000 		.4byte	.LVL610
 23430 25ef 0100     		.2byte	0x1
 23431 25f1 51       		.byte	0x51
 23432 25f2 14000000 		.4byte	.LVL610
 23433 25f6 52000000 		.4byte	.LVL617
 23434 25fa 0200     		.2byte	0x2
 23435 25fc 91       		.byte	0x91
 23436 25fd 5C       		.sleb128 -36
 23437 25fe 52000000 		.4byte	.LVL617
 23438 2602 5E000000 		.4byte	.LVL619
 23439 2606 0100     		.2byte	0x1
 23440 2608 51       		.byte	0x51
 23441 2609 5E000000 		.4byte	.LVL619
 23442 260d 68000000 		.4byte	.LFE91
 23443 2611 0200     		.2byte	0x2
 23444 2613 91       		.byte	0x91
 23445 2614 5C       		.sleb128 -36
 23446 2615 00000000 		.4byte	0
 23447 2619 00000000 		.4byte	0
 23448              	.LLST201:
 23449 261d 00000000 		.4byte	.LVL608
 23450 2621 14000000 		.4byte	.LVL610
 23451 2625 0100     		.2byte	0x1
 23452 2627 52       		.byte	0x52
 23453 2628 14000000 		.4byte	.LVL610
 23454 262c 52000000 		.4byte	.LVL617
 23455 2630 0100     		.2byte	0x1
 23456 2632 56       		.byte	0x56
 23457 2633 52000000 		.4byte	.LVL617
 23458 2637 54000000 		.4byte	.LVL618
 23459 263b 0100     		.2byte	0x1
 23460 263d 52       		.byte	0x52
 23461 263e 54000000 		.4byte	.LVL618
 23462 2642 66000000 		.4byte	.LVL621
 23463 2646 0100     		.2byte	0x1
 23464 2648 56       		.byte	0x56
 23465 2649 66000000 		.4byte	.LVL621
 23466 264d 68000000 		.4byte	.LFE91
 23467 2651 0400     		.2byte	0x4
 23468 2653 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 618


 23469 2654 01       		.uleb128 0x1
 23470 2655 52       		.byte	0x52
 23471 2656 9F       		.byte	0x9f
 23472 2657 00000000 		.4byte	0
 23473 265b 00000000 		.4byte	0
 23474              	.LLST202:
 23475 265f 00000000 		.4byte	.LVL608
 23476 2663 12000000 		.4byte	.LVL609
 23477 2667 0100     		.2byte	0x1
 23478 2669 53       		.byte	0x53
 23479 266a 12000000 		.4byte	.LVL609
 23480 266e 52000000 		.4byte	.LVL617
 23481 2672 0400     		.2byte	0x4
 23482 2674 F3       		.byte	0xf3
 23483 2675 01       		.uleb128 0x1
 23484 2676 53       		.byte	0x53
 23485 2677 9F       		.byte	0x9f
 23486 2678 52000000 		.4byte	.LVL617
 23487 267c 63000000 		.4byte	.LVL620-1
 23488 2680 0100     		.2byte	0x1
 23489 2682 53       		.byte	0x53
 23490 2683 63000000 		.4byte	.LVL620-1
 23491 2687 68000000 		.4byte	.LFE91
 23492 268b 0400     		.2byte	0x4
 23493 268d F3       		.byte	0xf3
 23494 268e 01       		.uleb128 0x1
 23495 268f 53       		.byte	0x53
 23496 2690 9F       		.byte	0x9f
 23497 2691 00000000 		.4byte	0
 23498 2695 00000000 		.4byte	0
 23499              	.LLST203:
 23500 2699 14000000 		.4byte	.LVL610
 23501 269d 52000000 		.4byte	.LVL617
 23502 26a1 0100     		.2byte	0x1
 23503 26a3 55       		.byte	0x55
 23504 26a4 00000000 		.4byte	0
 23505 26a8 00000000 		.4byte	0
 23506              	.LLST204:
 23507 26ac 14000000 		.4byte	.LVL610
 23508 26b0 1C000000 		.4byte	.LVL611
 23509 26b4 0100     		.2byte	0x1
 23510 26b6 53       		.byte	0x53
 23511 26b7 3A000000 		.4byte	.LVL613
 23512 26bb 48000000 		.4byte	.LVL616
 23513 26bf 0100     		.2byte	0x1
 23514 26c1 50       		.byte	0x50
 23515 26c2 48000000 		.4byte	.LVL616
 23516 26c6 52000000 		.4byte	.LVL617
 23517 26ca 0100     		.2byte	0x1
 23518 26cc 53       		.byte	0x53
 23519 26cd 00000000 		.4byte	0
 23520 26d1 00000000 		.4byte	0
 23521              	.LLST205:
 23522 26d5 14000000 		.4byte	.LVL610
 23523 26d9 52000000 		.4byte	.LVL617
 23524 26dd 0100     		.2byte	0x1
 23525 26df 54       		.byte	0x54
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 619


 23526 26e0 00000000 		.4byte	0
 23527 26e4 00000000 		.4byte	0
 23528              	.LLST206:
 23529 26e8 00000000 		.4byte	.LVL623
 23530 26ec 06000000 		.4byte	.LVL624
 23531 26f0 0100     		.2byte	0x1
 23532 26f2 50       		.byte	0x50
 23533 26f3 06000000 		.4byte	.LVL624
 23534 26f7 0C000000 		.4byte	.LVL625
 23535 26fb 0400     		.2byte	0x4
 23536 26fd F3       		.byte	0xf3
 23537 26fe 01       		.uleb128 0x1
 23538 26ff 50       		.byte	0x50
 23539 2700 9F       		.byte	0x9f
 23540 2701 0C000000 		.4byte	.LVL625
 23541 2705 17000000 		.4byte	.LVL626-1
 23542 2709 0100     		.2byte	0x1
 23543 270b 50       		.byte	0x50
 23544 270c 17000000 		.4byte	.LVL626-1
 23545 2710 38000000 		.4byte	.LVL632
 23546 2714 0100     		.2byte	0x1
 23547 2716 55       		.byte	0x55
 23548 2717 38000000 		.4byte	.LVL632
 23549 271b 44000000 		.4byte	.LFE70
 23550 271f 0400     		.2byte	0x4
 23551 2721 F3       		.byte	0xf3
 23552 2722 01       		.uleb128 0x1
 23553 2723 50       		.byte	0x50
 23554 2724 9F       		.byte	0x9f
 23555 2725 00000000 		.4byte	0
 23556 2729 00000000 		.4byte	0
 23557              	.LLST207:
 23558 272d 00000000 		.4byte	.LVL623
 23559 2731 06000000 		.4byte	.LVL624
 23560 2735 0100     		.2byte	0x1
 23561 2737 51       		.byte	0x51
 23562 2738 06000000 		.4byte	.LVL624
 23563 273c 0C000000 		.4byte	.LVL625
 23564 2740 0400     		.2byte	0x4
 23565 2742 F3       		.byte	0xf3
 23566 2743 01       		.uleb128 0x1
 23567 2744 51       		.byte	0x51
 23568 2745 9F       		.byte	0x9f
 23569 2746 0C000000 		.4byte	.LVL625
 23570 274a 17000000 		.4byte	.LVL626-1
 23571 274e 0100     		.2byte	0x1
 23572 2750 51       		.byte	0x51
 23573 2751 17000000 		.4byte	.LVL626-1
 23574 2755 42000000 		.4byte	.LVL635
 23575 2759 0100     		.2byte	0x1
 23576 275b 57       		.byte	0x57
 23577 275c 42000000 		.4byte	.LVL635
 23578 2760 44000000 		.4byte	.LFE70
 23579 2764 0400     		.2byte	0x4
 23580 2766 F3       		.byte	0xf3
 23581 2767 01       		.uleb128 0x1
 23582 2768 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 620


 23583 2769 9F       		.byte	0x9f
 23584 276a 00000000 		.4byte	0
 23585 276e 00000000 		.4byte	0
 23586              	.LLST208:
 23587 2772 00000000 		.4byte	.LVL623
 23588 2776 06000000 		.4byte	.LVL624
 23589 277a 0100     		.2byte	0x1
 23590 277c 52       		.byte	0x52
 23591 277d 06000000 		.4byte	.LVL624
 23592 2781 0C000000 		.4byte	.LVL625
 23593 2785 0400     		.2byte	0x4
 23594 2787 F3       		.byte	0xf3
 23595 2788 01       		.uleb128 0x1
 23596 2789 52       		.byte	0x52
 23597 278a 9F       		.byte	0x9f
 23598 278b 0C000000 		.4byte	.LVL625
 23599 278f 17000000 		.4byte	.LVL626-1
 23600 2793 0100     		.2byte	0x1
 23601 2795 52       		.byte	0x52
 23602 2796 17000000 		.4byte	.LVL626-1
 23603 279a 42000000 		.4byte	.LVL635
 23604 279e 0100     		.2byte	0x1
 23605 27a0 56       		.byte	0x56
 23606 27a1 42000000 		.4byte	.LVL635
 23607 27a5 44000000 		.4byte	.LFE70
 23608 27a9 0400     		.2byte	0x4
 23609 27ab F3       		.byte	0xf3
 23610 27ac 01       		.uleb128 0x1
 23611 27ad 52       		.byte	0x52
 23612 27ae 9F       		.byte	0x9f
 23613 27af 00000000 		.4byte	0
 23614 27b3 00000000 		.4byte	0
 23615              	.LLST209:
 23616 27b7 00000000 		.4byte	.LVL623
 23617 27bb 06000000 		.4byte	.LVL624
 23618 27bf 0100     		.2byte	0x1
 23619 27c1 53       		.byte	0x53
 23620 27c2 06000000 		.4byte	.LVL624
 23621 27c6 0C000000 		.4byte	.LVL625
 23622 27ca 0400     		.2byte	0x4
 23623 27cc F3       		.byte	0xf3
 23624 27cd 01       		.uleb128 0x1
 23625 27ce 53       		.byte	0x53
 23626 27cf 9F       		.byte	0x9f
 23627 27d0 0C000000 		.4byte	.LVL625
 23628 27d4 17000000 		.4byte	.LVL626-1
 23629 27d8 0100     		.2byte	0x1
 23630 27da 53       		.byte	0x53
 23631 27db 17000000 		.4byte	.LVL626-1
 23632 27df 42000000 		.4byte	.LVL635
 23633 27e3 0200     		.2byte	0x2
 23634 27e5 91       		.byte	0x91
 23635 27e6 64       		.sleb128 -28
 23636 27e7 42000000 		.4byte	.LVL635
 23637 27eb 44000000 		.4byte	.LFE70
 23638 27ef 0400     		.2byte	0x4
 23639 27f1 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 621


 23640 27f2 01       		.uleb128 0x1
 23641 27f3 53       		.byte	0x53
 23642 27f4 9F       		.byte	0x9f
 23643 27f5 00000000 		.4byte	0
 23644 27f9 00000000 		.4byte	0
 23645              	.LLST210:
 23646 27fd 00000000 		.4byte	.LVL623
 23647 2801 38000000 		.4byte	.LVL632
 23648 2805 0300     		.2byte	0x3
 23649 2807 09       		.byte	0x9
 23650 2808 FF       		.byte	0xff
 23651 2809 9F       		.byte	0x9f
 23652 280a 38000000 		.4byte	.LVL632
 23653 280e 3C000000 		.4byte	.LVL633
 23654 2812 0100     		.2byte	0x1
 23655 2814 50       		.byte	0x50
 23656 2815 3C000000 		.4byte	.LVL633
 23657 2819 42000000 		.4byte	.LVL635
 23658 281d 0100     		.2byte	0x1
 23659 281f 55       		.byte	0x55
 23660 2820 00000000 		.4byte	0
 23661 2824 00000000 		.4byte	0
 23662              	.LLST211:
 23663 2828 1E000000 		.4byte	.LVL628
 23664 282c 22000000 		.4byte	.LVL629
 23665 2830 0100     		.2byte	0x1
 23666 2832 50       		.byte	0x50
 23667 2833 22000000 		.4byte	.LVL629
 23668 2837 42000000 		.4byte	.LVL635
 23669 283b 0100     		.2byte	0x1
 23670 283d 54       		.byte	0x54
 23671 283e 00000000 		.4byte	0
 23672 2842 00000000 		.4byte	0
 23673              	.LLST212:
 23674 2846 00000000 		.4byte	.LVL636
 23675 284a 0F000000 		.4byte	.LVL637-1
 23676 284e 0100     		.2byte	0x1
 23677 2850 50       		.byte	0x50
 23678 2851 0F000000 		.4byte	.LVL637-1
 23679 2855 14000000 		.4byte	.LFE92
 23680 2859 0400     		.2byte	0x4
 23681 285b F3       		.byte	0xf3
 23682 285c 01       		.uleb128 0x1
 23683 285d 50       		.byte	0x50
 23684 285e 9F       		.byte	0x9f
 23685 285f 00000000 		.4byte	0
 23686 2863 00000000 		.4byte	0
 23687              	.LLST213:
 23688 2867 00000000 		.4byte	.LVL636
 23689 286b 0F000000 		.4byte	.LVL637-1
 23690 286f 0100     		.2byte	0x1
 23691 2871 51       		.byte	0x51
 23692 2872 0F000000 		.4byte	.LVL637-1
 23693 2876 14000000 		.4byte	.LFE92
 23694 287a 0400     		.2byte	0x4
 23695 287c F3       		.byte	0xf3
 23696 287d 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 622


 23697 287e 51       		.byte	0x51
 23698 287f 9F       		.byte	0x9f
 23699 2880 00000000 		.4byte	0
 23700 2884 00000000 		.4byte	0
 23701              	.LLST214:
 23702 2888 00000000 		.4byte	.LVL636
 23703 288c 0F000000 		.4byte	.LVL637-1
 23704 2890 0100     		.2byte	0x1
 23705 2892 52       		.byte	0x52
 23706 2893 0F000000 		.4byte	.LVL637-1
 23707 2897 14000000 		.4byte	.LFE92
 23708 289b 0400     		.2byte	0x4
 23709 289d F3       		.byte	0xf3
 23710 289e 01       		.uleb128 0x1
 23711 289f 52       		.byte	0x52
 23712 28a0 9F       		.byte	0x9f
 23713 28a1 00000000 		.4byte	0
 23714 28a5 00000000 		.4byte	0
 23715              	.LLST215:
 23716 28a9 00000000 		.4byte	.LVL636
 23717 28ad 0F000000 		.4byte	.LVL637-1
 23718 28b1 0100     		.2byte	0x1
 23719 28b3 53       		.byte	0x53
 23720 28b4 0F000000 		.4byte	.LVL637-1
 23721 28b8 14000000 		.4byte	.LFE92
 23722 28bc 0400     		.2byte	0x4
 23723 28be F3       		.byte	0xf3
 23724 28bf 01       		.uleb128 0x1
 23725 28c0 53       		.byte	0x53
 23726 28c1 9F       		.byte	0x9f
 23727 28c2 00000000 		.4byte	0
 23728 28c6 00000000 		.4byte	0
 23729              	.LLST216:
 23730 28ca 00000000 		.4byte	.LVL638
 23731 28ce 11000000 		.4byte	.LVL639-1
 23732 28d2 0100     		.2byte	0x1
 23733 28d4 50       		.byte	0x50
 23734 28d5 11000000 		.4byte	.LVL639-1
 23735 28d9 16000000 		.4byte	.LFE93
 23736 28dd 0400     		.2byte	0x4
 23737 28df F3       		.byte	0xf3
 23738 28e0 01       		.uleb128 0x1
 23739 28e1 50       		.byte	0x50
 23740 28e2 9F       		.byte	0x9f
 23741 28e3 00000000 		.4byte	0
 23742 28e7 00000000 		.4byte	0
 23743              	.LLST217:
 23744 28eb 00000000 		.4byte	.LVL638
 23745 28ef 11000000 		.4byte	.LVL639-1
 23746 28f3 0100     		.2byte	0x1
 23747 28f5 51       		.byte	0x51
 23748 28f6 11000000 		.4byte	.LVL639-1
 23749 28fa 16000000 		.4byte	.LFE93
 23750 28fe 0400     		.2byte	0x4
 23751 2900 F3       		.byte	0xf3
 23752 2901 01       		.uleb128 0x1
 23753 2902 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 623


 23754 2903 9F       		.byte	0x9f
 23755 2904 00000000 		.4byte	0
 23756 2908 00000000 		.4byte	0
 23757              	.LLST218:
 23758 290c 00000000 		.4byte	.LVL638
 23759 2910 11000000 		.4byte	.LVL639-1
 23760 2914 0100     		.2byte	0x1
 23761 2916 52       		.byte	0x52
 23762 2917 11000000 		.4byte	.LVL639-1
 23763 291b 16000000 		.4byte	.LFE93
 23764 291f 0400     		.2byte	0x4
 23765 2921 F3       		.byte	0xf3
 23766 2922 01       		.uleb128 0x1
 23767 2923 52       		.byte	0x52
 23768 2924 9F       		.byte	0x9f
 23769 2925 00000000 		.4byte	0
 23770 2929 00000000 		.4byte	0
 23771              	.LLST219:
 23772 292d 00000000 		.4byte	.LVL638
 23773 2931 11000000 		.4byte	.LVL639-1
 23774 2935 0100     		.2byte	0x1
 23775 2937 53       		.byte	0x53
 23776 2938 11000000 		.4byte	.LVL639-1
 23777 293c 16000000 		.4byte	.LFE93
 23778 2940 0400     		.2byte	0x4
 23779 2942 F3       		.byte	0xf3
 23780 2943 01       		.uleb128 0x1
 23781 2944 53       		.byte	0x53
 23782 2945 9F       		.byte	0x9f
 23783 2946 00000000 		.4byte	0
 23784 294a 00000000 		.4byte	0
 23785              	.LLST220:
 23786 294e 00000000 		.4byte	.LVL640
 23787 2952 11000000 		.4byte	.LVL641-1
 23788 2956 0100     		.2byte	0x1
 23789 2958 50       		.byte	0x50
 23790 2959 11000000 		.4byte	.LVL641-1
 23791 295d 16000000 		.4byte	.LFE94
 23792 2961 0400     		.2byte	0x4
 23793 2963 F3       		.byte	0xf3
 23794 2964 01       		.uleb128 0x1
 23795 2965 50       		.byte	0x50
 23796 2966 9F       		.byte	0x9f
 23797 2967 00000000 		.4byte	0
 23798 296b 00000000 		.4byte	0
 23799              	.LLST221:
 23800 296f 00000000 		.4byte	.LVL640
 23801 2973 11000000 		.4byte	.LVL641-1
 23802 2977 0100     		.2byte	0x1
 23803 2979 51       		.byte	0x51
 23804 297a 11000000 		.4byte	.LVL641-1
 23805 297e 16000000 		.4byte	.LFE94
 23806 2982 0400     		.2byte	0x4
 23807 2984 F3       		.byte	0xf3
 23808 2985 01       		.uleb128 0x1
 23809 2986 51       		.byte	0x51
 23810 2987 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 624


 23811 2988 00000000 		.4byte	0
 23812 298c 00000000 		.4byte	0
 23813              	.LLST222:
 23814 2990 00000000 		.4byte	.LVL640
 23815 2994 11000000 		.4byte	.LVL641-1
 23816 2998 0100     		.2byte	0x1
 23817 299a 52       		.byte	0x52
 23818 299b 11000000 		.4byte	.LVL641-1
 23819 299f 16000000 		.4byte	.LFE94
 23820 29a3 0400     		.2byte	0x4
 23821 29a5 F3       		.byte	0xf3
 23822 29a6 01       		.uleb128 0x1
 23823 29a7 52       		.byte	0x52
 23824 29a8 9F       		.byte	0x9f
 23825 29a9 00000000 		.4byte	0
 23826 29ad 00000000 		.4byte	0
 23827              	.LLST223:
 23828 29b1 00000000 		.4byte	.LVL642
 23829 29b5 0E000000 		.4byte	.LVL643
 23830 29b9 0100     		.2byte	0x1
 23831 29bb 50       		.byte	0x50
 23832 29bc 0E000000 		.4byte	.LVL643
 23833 29c0 11000000 		.4byte	.LVL644-1
 23834 29c4 0200     		.2byte	0x2
 23835 29c6 91       		.byte	0x91
 23836 29c7 6C       		.sleb128 -20
 23837 29c8 11000000 		.4byte	.LVL644-1
 23838 29cc 16000000 		.4byte	.LFE95
 23839 29d0 0400     		.2byte	0x4
 23840 29d2 F3       		.byte	0xf3
 23841 29d3 01       		.uleb128 0x1
 23842 29d4 50       		.byte	0x50
 23843 29d5 9F       		.byte	0x9f
 23844 29d6 00000000 		.4byte	0
 23845 29da 00000000 		.4byte	0
 23846              	.LLST224:
 23847 29de 00000000 		.4byte	.LVL642
 23848 29e2 11000000 		.4byte	.LVL644-1
 23849 29e6 0100     		.2byte	0x1
 23850 29e8 51       		.byte	0x51
 23851 29e9 11000000 		.4byte	.LVL644-1
 23852 29ed 16000000 		.4byte	.LFE95
 23853 29f1 0400     		.2byte	0x4
 23854 29f3 F3       		.byte	0xf3
 23855 29f4 01       		.uleb128 0x1
 23856 29f5 51       		.byte	0x51
 23857 29f6 9F       		.byte	0x9f
 23858 29f7 00000000 		.4byte	0
 23859 29fb 00000000 		.4byte	0
 23860              	.LLST225:
 23861 29ff 00000000 		.4byte	.LVL642
 23862 2a03 11000000 		.4byte	.LVL644-1
 23863 2a07 0100     		.2byte	0x1
 23864 2a09 52       		.byte	0x52
 23865 2a0a 11000000 		.4byte	.LVL644-1
 23866 2a0e 16000000 		.4byte	.LFE95
 23867 2a12 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 625


 23868 2a14 F3       		.byte	0xf3
 23869 2a15 01       		.uleb128 0x1
 23870 2a16 52       		.byte	0x52
 23871 2a17 9F       		.byte	0x9f
 23872 2a18 00000000 		.4byte	0
 23873 2a1c 00000000 		.4byte	0
 23874              	.LLST226:
 23875 2a20 00000000 		.4byte	.LVL642
 23876 2a24 11000000 		.4byte	.LVL644-1
 23877 2a28 0100     		.2byte	0x1
 23878 2a2a 53       		.byte	0x53
 23879 2a2b 11000000 		.4byte	.LVL644-1
 23880 2a2f 16000000 		.4byte	.LFE95
 23881 2a33 0400     		.2byte	0x4
 23882 2a35 F3       		.byte	0xf3
 23883 2a36 01       		.uleb128 0x1
 23884 2a37 53       		.byte	0x53
 23885 2a38 9F       		.byte	0x9f
 23886 2a39 00000000 		.4byte	0
 23887 2a3d 00000000 		.4byte	0
 23888              	.LLST227:
 23889 2a41 00000000 		.4byte	.LVL645
 23890 2a45 10000000 		.4byte	.LVL646
 23891 2a49 0100     		.2byte	0x1
 23892 2a4b 50       		.byte	0x50
 23893 2a4c 10000000 		.4byte	.LVL646
 23894 2a50 13000000 		.4byte	.LVL647-1
 23895 2a54 0200     		.2byte	0x2
 23896 2a56 91       		.byte	0x91
 23897 2a57 6C       		.sleb128 -20
 23898 2a58 13000000 		.4byte	.LVL647-1
 23899 2a5c 18000000 		.4byte	.LFE96
 23900 2a60 0400     		.2byte	0x4
 23901 2a62 F3       		.byte	0xf3
 23902 2a63 01       		.uleb128 0x1
 23903 2a64 50       		.byte	0x50
 23904 2a65 9F       		.byte	0x9f
 23905 2a66 00000000 		.4byte	0
 23906 2a6a 00000000 		.4byte	0
 23907              	.LLST228:
 23908 2a6e 00000000 		.4byte	.LVL645
 23909 2a72 13000000 		.4byte	.LVL647-1
 23910 2a76 0100     		.2byte	0x1
 23911 2a78 51       		.byte	0x51
 23912 2a79 13000000 		.4byte	.LVL647-1
 23913 2a7d 18000000 		.4byte	.LFE96
 23914 2a81 0400     		.2byte	0x4
 23915 2a83 F3       		.byte	0xf3
 23916 2a84 01       		.uleb128 0x1
 23917 2a85 51       		.byte	0x51
 23918 2a86 9F       		.byte	0x9f
 23919 2a87 00000000 		.4byte	0
 23920 2a8b 00000000 		.4byte	0
 23921              	.LLST229:
 23922 2a8f 00000000 		.4byte	.LVL645
 23923 2a93 13000000 		.4byte	.LVL647-1
 23924 2a97 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 626


 23925 2a99 52       		.byte	0x52
 23926 2a9a 13000000 		.4byte	.LVL647-1
 23927 2a9e 18000000 		.4byte	.LFE96
 23928 2aa2 0400     		.2byte	0x4
 23929 2aa4 F3       		.byte	0xf3
 23930 2aa5 01       		.uleb128 0x1
 23931 2aa6 52       		.byte	0x52
 23932 2aa7 9F       		.byte	0x9f
 23933 2aa8 00000000 		.4byte	0
 23934 2aac 00000000 		.4byte	0
 23935              	.LLST230:
 23936 2ab0 00000000 		.4byte	.LVL645
 23937 2ab4 13000000 		.4byte	.LVL647-1
 23938 2ab8 0100     		.2byte	0x1
 23939 2aba 53       		.byte	0x53
 23940 2abb 13000000 		.4byte	.LVL647-1
 23941 2abf 18000000 		.4byte	.LFE96
 23942 2ac3 0400     		.2byte	0x4
 23943 2ac5 F3       		.byte	0xf3
 23944 2ac6 01       		.uleb128 0x1
 23945 2ac7 53       		.byte	0x53
 23946 2ac8 9F       		.byte	0x9f
 23947 2ac9 00000000 		.4byte	0
 23948 2acd 00000000 		.4byte	0
 23949              	.LLST231:
 23950 2ad1 00000000 		.4byte	.LVL648
 23951 2ad5 10000000 		.4byte	.LVL649
 23952 2ad9 0100     		.2byte	0x1
 23953 2adb 50       		.byte	0x50
 23954 2adc 10000000 		.4byte	.LVL649
 23955 2ae0 13000000 		.4byte	.LVL650-1
 23956 2ae4 0200     		.2byte	0x2
 23957 2ae6 91       		.byte	0x91
 23958 2ae7 6C       		.sleb128 -20
 23959 2ae8 13000000 		.4byte	.LVL650-1
 23960 2aec 18000000 		.4byte	.LFE97
 23961 2af0 0400     		.2byte	0x4
 23962 2af2 F3       		.byte	0xf3
 23963 2af3 01       		.uleb128 0x1
 23964 2af4 50       		.byte	0x50
 23965 2af5 9F       		.byte	0x9f
 23966 2af6 00000000 		.4byte	0
 23967 2afa 00000000 		.4byte	0
 23968              	.LLST232:
 23969 2afe 00000000 		.4byte	.LVL648
 23970 2b02 13000000 		.4byte	.LVL650-1
 23971 2b06 0100     		.2byte	0x1
 23972 2b08 51       		.byte	0x51
 23973 2b09 13000000 		.4byte	.LVL650-1
 23974 2b0d 18000000 		.4byte	.LFE97
 23975 2b11 0400     		.2byte	0x4
 23976 2b13 F3       		.byte	0xf3
 23977 2b14 01       		.uleb128 0x1
 23978 2b15 51       		.byte	0x51
 23979 2b16 9F       		.byte	0x9f
 23980 2b17 00000000 		.4byte	0
 23981 2b1b 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 627


 23982              	.LLST233:
 23983 2b1f 00000000 		.4byte	.LVL648
 23984 2b23 13000000 		.4byte	.LVL650-1
 23985 2b27 0100     		.2byte	0x1
 23986 2b29 52       		.byte	0x52
 23987 2b2a 13000000 		.4byte	.LVL650-1
 23988 2b2e 18000000 		.4byte	.LFE97
 23989 2b32 0400     		.2byte	0x4
 23990 2b34 F3       		.byte	0xf3
 23991 2b35 01       		.uleb128 0x1
 23992 2b36 52       		.byte	0x52
 23993 2b37 9F       		.byte	0x9f
 23994 2b38 00000000 		.4byte	0
 23995 2b3c 00000000 		.4byte	0
 23996              	.LLST234:
 23997 2b40 00000000 		.4byte	.LVL651
 23998 2b44 14000000 		.4byte	.LVL652
 23999 2b48 0100     		.2byte	0x1
 24000 2b4a 50       		.byte	0x50
 24001 2b4b 14000000 		.4byte	.LVL652
 24002 2b4f 4C000000 		.4byte	.LVL656
 24003 2b53 0100     		.2byte	0x1
 24004 2b55 54       		.byte	0x54
 24005 2b56 4C000000 		.4byte	.LVL656
 24006 2b5a 50000000 		.4byte	.LVL657
 24007 2b5e 0100     		.2byte	0x1
 24008 2b60 50       		.byte	0x50
 24009 2b61 50000000 		.4byte	.LVL657
 24010 2b65 54000000 		.4byte	.LFE98
 24011 2b69 0400     		.2byte	0x4
 24012 2b6b F3       		.byte	0xf3
 24013 2b6c 01       		.uleb128 0x1
 24014 2b6d 50       		.byte	0x50
 24015 2b6e 9F       		.byte	0x9f
 24016 2b6f 00000000 		.4byte	0
 24017 2b73 00000000 		.4byte	0
 24018              	.LLST235:
 24019 2b77 00000000 		.4byte	.LVL658
 24020 2b7b 08000000 		.4byte	.LVL659
 24021 2b7f 0100     		.2byte	0x1
 24022 2b81 50       		.byte	0x50
 24023 2b82 08000000 		.4byte	.LVL659
 24024 2b86 0E000000 		.4byte	.LVL661
 24025 2b8a 0400     		.2byte	0x4
 24026 2b8c F3       		.byte	0xf3
 24027 2b8d 01       		.uleb128 0x1
 24028 2b8e 50       		.byte	0x50
 24029 2b8f 9F       		.byte	0x9f
 24030 2b90 0E000000 		.4byte	.LVL661
 24031 2b94 10000000 		.4byte	.LVL662
 24032 2b98 0100     		.2byte	0x1
 24033 2b9a 50       		.byte	0x50
 24034 2b9b 10000000 		.4byte	.LVL662
 24035 2b9f 14000000 		.4byte	.LFE99
 24036 2ba3 0400     		.2byte	0x4
 24037 2ba5 F3       		.byte	0xf3
 24038 2ba6 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 628


 24039 2ba7 50       		.byte	0x50
 24040 2ba8 9F       		.byte	0x9f
 24041 2ba9 00000000 		.4byte	0
 24042 2bad 00000000 		.4byte	0
 24043              	.LLST236:
 24044 2bb1 00000000 		.4byte	.LVL663
 24045 2bb5 0E000000 		.4byte	.LVL664
 24046 2bb9 0100     		.2byte	0x1
 24047 2bbb 50       		.byte	0x50
 24048 2bbc 0E000000 		.4byte	.LVL664
 24049 2bc0 18000000 		.4byte	.LFE100
 24050 2bc4 0400     		.2byte	0x4
 24051 2bc6 F3       		.byte	0xf3
 24052 2bc7 01       		.uleb128 0x1
 24053 2bc8 50       		.byte	0x50
 24054 2bc9 9F       		.byte	0x9f
 24055 2bca 00000000 		.4byte	0
 24056 2bce 00000000 		.4byte	0
 24057              	.LLST237:
 24058 2bd2 00000000 		.4byte	.LVL665
 24059 2bd6 1E000000 		.4byte	.LVL666
 24060 2bda 0100     		.2byte	0x1
 24061 2bdc 50       		.byte	0x50
 24062 2bdd 1E000000 		.4byte	.LVL666
 24063 2be1 24000000 		.4byte	.LFE101
 24064 2be5 0400     		.2byte	0x4
 24065 2be7 F3       		.byte	0xf3
 24066 2be8 01       		.uleb128 0x1
 24067 2be9 50       		.byte	0x50
 24068 2bea 9F       		.byte	0x9f
 24069 2beb 00000000 		.4byte	0
 24070 2bef 00000000 		.4byte	0
 24071              	.LLST238:
 24072 2bf3 00000000 		.4byte	.LVL667
 24073 2bf7 04000000 		.4byte	.LVL668
 24074 2bfb 0100     		.2byte	0x1
 24075 2bfd 50       		.byte	0x50
 24076 2bfe 04000000 		.4byte	.LVL668
 24077 2c02 10000000 		.4byte	.LFE102
 24078 2c06 0400     		.2byte	0x4
 24079 2c08 F3       		.byte	0xf3
 24080 2c09 01       		.uleb128 0x1
 24081 2c0a 50       		.byte	0x50
 24082 2c0b 9F       		.byte	0x9f
 24083 2c0c 00000000 		.4byte	0
 24084 2c10 00000000 		.4byte	0
 24085              	.LLST239:
 24086 2c14 00000000 		.4byte	.LVL669
 24087 2c18 3C000000 		.4byte	.LVL670
 24088 2c1c 0100     		.2byte	0x1
 24089 2c1e 50       		.byte	0x50
 24090 2c1f 3C000000 		.4byte	.LVL670
 24091 2c23 50000000 		.4byte	.LFE103
 24092 2c27 0400     		.2byte	0x4
 24093 2c29 F3       		.byte	0xf3
 24094 2c2a 01       		.uleb128 0x1
 24095 2c2b 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 629


 24096 2c2c 9F       		.byte	0x9f
 24097 2c2d 00000000 		.4byte	0
 24098 2c31 00000000 		.4byte	0
 24099              	.LLST240:
 24100 2c35 00000000 		.4byte	.LVL671
 24101 2c39 08000000 		.4byte	.LVL672
 24102 2c3d 0100     		.2byte	0x1
 24103 2c3f 50       		.byte	0x50
 24104 2c40 08000000 		.4byte	.LVL672
 24105 2c44 0E000000 		.4byte	.LVL673
 24106 2c48 0100     		.2byte	0x1
 24107 2c4a 53       		.byte	0x53
 24108 2c4b 0E000000 		.4byte	.LVL673
 24109 2c4f 1C000000 		.4byte	.LFE106
 24110 2c53 0400     		.2byte	0x4
 24111 2c55 F3       		.byte	0xf3
 24112 2c56 01       		.uleb128 0x1
 24113 2c57 50       		.byte	0x50
 24114 2c58 9F       		.byte	0x9f
 24115 2c59 00000000 		.4byte	0
 24116 2c5d 00000000 		.4byte	0
 24117              	.LLST241:
 24118 2c61 00000000 		.4byte	.LVL674
 24119 2c65 08000000 		.4byte	.LVL675
 24120 2c69 0100     		.2byte	0x1
 24121 2c6b 50       		.byte	0x50
 24122 2c6c 08000000 		.4byte	.LVL675
 24123 2c70 0A000000 		.4byte	.LFE107
 24124 2c74 0400     		.2byte	0x4
 24125 2c76 F3       		.byte	0xf3
 24126 2c77 01       		.uleb128 0x1
 24127 2c78 50       		.byte	0x50
 24128 2c79 9F       		.byte	0x9f
 24129 2c7a 00000000 		.4byte	0
 24130 2c7e 00000000 		.4byte	0
 24131              	.LLST242:
 24132 2c82 00000000 		.4byte	.LVL676
 24133 2c86 02000000 		.4byte	.LVL677
 24134 2c8a 0100     		.2byte	0x1
 24135 2c8c 50       		.byte	0x50
 24136 2c8d 02000000 		.4byte	.LVL677
 24137 2c91 08000000 		.4byte	.LFE108
 24138 2c95 0400     		.2byte	0x4
 24139 2c97 F3       		.byte	0xf3
 24140 2c98 01       		.uleb128 0x1
 24141 2c99 50       		.byte	0x50
 24142 2c9a 9F       		.byte	0x9f
 24143 2c9b 00000000 		.4byte	0
 24144 2c9f 00000000 		.4byte	0
 24145              	.LLST243:
 24146 2ca3 00000000 		.4byte	.LVL678
 24147 2ca7 02000000 		.4byte	.LVL679
 24148 2cab 0100     		.2byte	0x1
 24149 2cad 50       		.byte	0x50
 24150 2cae 02000000 		.4byte	.LVL679
 24151 2cb2 08000000 		.4byte	.LFE109
 24152 2cb6 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 630


 24153 2cb8 F3       		.byte	0xf3
 24154 2cb9 01       		.uleb128 0x1
 24155 2cba 50       		.byte	0x50
 24156 2cbb 9F       		.byte	0x9f
 24157 2cbc 00000000 		.4byte	0
 24158 2cc0 00000000 		.4byte	0
 24159              		.section	.debug_aranges,"",%progbits
 24160 0000 F4020000 		.4byte	0x2f4
 24161 0004 0200     		.2byte	0x2
 24162 0006 00000000 		.4byte	.Ldebug_info0
 24163 000a 04       		.byte	0x4
 24164 000b 00       		.byte	0
 24165 000c 0000     		.2byte	0
 24166 000e 0000     		.2byte	0
 24167 0010 00000000 		.4byte	.LFB60
 24168 0014 18000000 		.4byte	.LFE60-.LFB60
 24169 0018 00000000 		.4byte	.LFB13
 24170 001c 48000000 		.4byte	.LFE13-.LFB13
 24171 0020 00000000 		.4byte	.LFB15
 24172 0024 0C000000 		.4byte	.LFE15-.LFB15
 24173 0028 00000000 		.4byte	.LFB16
 24174 002c 2A000000 		.4byte	.LFE16-.LFB16
 24175 0030 00000000 		.4byte	.LFB17
 24176 0034 0C000000 		.4byte	.LFE17-.LFB17
 24177 0038 00000000 		.4byte	.LFB18
 24178 003c 14000000 		.4byte	.LFE18-.LFB18
 24179 0040 00000000 		.4byte	.LFB19
 24180 0044 20000000 		.4byte	.LFE19-.LFB19
 24181 0048 00000000 		.4byte	.LFB20
 24182 004c 76000000 		.4byte	.LFE20-.LFB20
 24183 0050 00000000 		.4byte	.LFB21
 24184 0054 06000000 		.4byte	.LFE21-.LFB21
 24185 0058 00000000 		.4byte	.LFB22
 24186 005c 0C000000 		.4byte	.LFE22-.LFB22
 24187 0060 00000000 		.4byte	.LFB23
 24188 0064 10000000 		.4byte	.LFE23-.LFB23
 24189 0068 00000000 		.4byte	.LFB24
 24190 006c 18000000 		.4byte	.LFE24-.LFB24
 24191 0070 00000000 		.4byte	.LFB25
 24192 0074 06000000 		.4byte	.LFE25-.LFB25
 24193 0078 00000000 		.4byte	.LFB26
 24194 007c 06000000 		.4byte	.LFE26-.LFB26
 24195 0080 00000000 		.4byte	.LFB28
 24196 0084 06000000 		.4byte	.LFE28-.LFB28
 24197 0088 00000000 		.4byte	.LFB29
 24198 008c 20000000 		.4byte	.LFE29-.LFB29
 24199 0090 00000000 		.4byte	.LFB31
 24200 0094 2C000000 		.4byte	.LFE31-.LFB31
 24201 0098 00000000 		.4byte	.LFB32
 24202 009c 2C000000 		.4byte	.LFE32-.LFB32
 24203 00a0 00000000 		.4byte	.LFB33
 24204 00a4 24000000 		.4byte	.LFE33-.LFB33
 24205 00a8 00000000 		.4byte	.LFB34
 24206 00ac 24000000 		.4byte	.LFE34-.LFB34
 24207 00b0 00000000 		.4byte	.LFB35
 24208 00b4 7C000000 		.4byte	.LFE35-.LFB35
 24209 00b8 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 631


 24210 00bc 40000000 		.4byte	.LFE36-.LFB36
 24211 00c0 00000000 		.4byte	.LFB37
 24212 00c4 1C000000 		.4byte	.LFE37-.LFB37
 24213 00c8 00000000 		.4byte	.LFB38
 24214 00cc 0E000000 		.4byte	.LFE38-.LFB38
 24215 00d0 00000000 		.4byte	.LFB39
 24216 00d4 0E000000 		.4byte	.LFE39-.LFB39
 24217 00d8 00000000 		.4byte	.LFB40
 24218 00dc 18000000 		.4byte	.LFE40-.LFB40
 24219 00e0 00000000 		.4byte	.LFB41
 24220 00e4 30000000 		.4byte	.LFE41-.LFB41
 24221 00e8 00000000 		.4byte	.LFB42
 24222 00ec 14000000 		.4byte	.LFE42-.LFB42
 24223 00f0 00000000 		.4byte	.LFB43
 24224 00f4 28000000 		.4byte	.LFE43-.LFB43
 24225 00f8 00000000 		.4byte	.LFB44
 24226 00fc 24000000 		.4byte	.LFE44-.LFB44
 24227 0100 00000000 		.4byte	.LFB45
 24228 0104 4C000000 		.4byte	.LFE45-.LFB45
 24229 0108 00000000 		.4byte	.LFB46
 24230 010c 38000000 		.4byte	.LFE46-.LFB46
 24231 0110 00000000 		.4byte	.LFB48
 24232 0114 20000000 		.4byte	.LFE48-.LFB48
 24233 0118 00000000 		.4byte	.LFB47
 24234 011c 2C000000 		.4byte	.LFE47-.LFB47
 24235 0120 00000000 		.4byte	.LFB49
 24236 0124 32000000 		.4byte	.LFE49-.LFB49
 24237 0128 00000000 		.4byte	.LFB52
 24238 012c 06000000 		.4byte	.LFE52-.LFB52
 24239 0130 00000000 		.4byte	.LFB53
 24240 0134 14000000 		.4byte	.LFE53-.LFB53
 24241 0138 00000000 		.4byte	.LFB55
 24242 013c 1C000000 		.4byte	.LFE55-.LFB55
 24243 0140 00000000 		.4byte	.LFB57
 24244 0144 16000000 		.4byte	.LFE57-.LFB57
 24245 0148 00000000 		.4byte	.LFB58
 24246 014c 18000000 		.4byte	.LFE58-.LFB58
 24247 0150 00000000 		.4byte	.LFB59
 24248 0154 68000000 		.4byte	.LFE59-.LFB59
 24249 0158 00000000 		.4byte	.LFB62
 24250 015c 4E000000 		.4byte	.LFE62-.LFB62
 24251 0160 00000000 		.4byte	.LFB63
 24252 0164 50000000 		.4byte	.LFE63-.LFB63
 24253 0168 00000000 		.4byte	.LFB64
 24254 016c 44010000 		.4byte	.LFE64-.LFB64
 24255 0170 00000000 		.4byte	.LFB65
 24256 0174 48000000 		.4byte	.LFE65-.LFB65
 24257 0178 00000000 		.4byte	.LFB14
 24258 017c 4C000000 		.4byte	.LFE14-.LFB14
 24259 0180 00000000 		.4byte	.LFB66
 24260 0184 30020000 		.4byte	.LFE66-.LFB66
 24261 0188 00000000 		.4byte	.LFB50
 24262 018c 72000000 		.4byte	.LFE50-.LFB50
 24263 0190 00000000 		.4byte	.LFB51
 24264 0194 6E000000 		.4byte	.LFE51-.LFB51
 24265 0198 00000000 		.4byte	.LFB67
 24266 019c C8030000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 632


 24267 01a0 00000000 		.4byte	.LFB71
 24268 01a4 08000000 		.4byte	.LFE71-.LFB71
 24269 01a8 00000000 		.4byte	.LFB72
 24270 01ac 14000000 		.4byte	.LFE72-.LFB72
 24271 01b0 00000000 		.4byte	.LFB73
 24272 01b4 80000000 		.4byte	.LFE73-.LFB73
 24273 01b8 00000000 		.4byte	.LFB74
 24274 01bc 08000000 		.4byte	.LFE74-.LFB74
 24275 01c0 00000000 		.4byte	.LFB75
 24276 01c4 14000000 		.4byte	.LFE75-.LFB75
 24277 01c8 00000000 		.4byte	.LFB76
 24278 01cc 08000000 		.4byte	.LFE76-.LFB76
 24279 01d0 00000000 		.4byte	.LFB77
 24280 01d4 3E000000 		.4byte	.LFE77-.LFB77
 24281 01d8 00000000 		.4byte	.LFB78
 24282 01dc 58000000 		.4byte	.LFE78-.LFB78
 24283 01e0 00000000 		.4byte	.LFB79
 24284 01e4 08000000 		.4byte	.LFE79-.LFB79
 24285 01e8 00000000 		.4byte	.LFB80
 24286 01ec 0E000000 		.4byte	.LFE80-.LFB80
 24287 01f0 00000000 		.4byte	.LFB81
 24288 01f4 02000000 		.4byte	.LFE81-.LFB81
 24289 01f8 00000000 		.4byte	.LFB82
 24290 01fc 10000000 		.4byte	.LFE82-.LFB82
 24291 0200 00000000 		.4byte	.LFB83
 24292 0204 36000000 		.4byte	.LFE83-.LFB83
 24293 0208 00000000 		.4byte	.LFB84
 24294 020c 0E000000 		.4byte	.LFE84-.LFB84
 24295 0210 00000000 		.4byte	.LFB85
 24296 0214 90010000 		.4byte	.LFE85-.LFB85
 24297 0218 00000000 		.4byte	.LFB27
 24298 021c 18000000 		.4byte	.LFE27-.LFB27
 24299 0220 00000000 		.4byte	.LFB54
 24300 0224 20000000 		.4byte	.LFE54-.LFB54
 24301 0228 00000000 		.4byte	.LFB86
 24302 022c 12000000 		.4byte	.LFE86-.LFB86
 24303 0230 00000000 		.4byte	.LFB87
 24304 0234 48000000 		.4byte	.LFE87-.LFB87
 24305 0238 00000000 		.4byte	.LFB88
 24306 023c 04000000 		.4byte	.LFE88-.LFB88
 24307 0240 00000000 		.4byte	.LFB89
 24308 0244 3C000000 		.4byte	.LFE89-.LFB89
 24309 0248 00000000 		.4byte	.LFB90
 24310 024c 06000000 		.4byte	.LFE90-.LFB90
 24311 0250 00000000 		.4byte	.LFB91
 24312 0254 68000000 		.4byte	.LFE91-.LFB91
 24313 0258 00000000 		.4byte	.LFB70
 24314 025c 44000000 		.4byte	.LFE70-.LFB70
 24315 0260 00000000 		.4byte	.LFB92
 24316 0264 14000000 		.4byte	.LFE92-.LFB92
 24317 0268 00000000 		.4byte	.LFB93
 24318 026c 16000000 		.4byte	.LFE93-.LFB93
 24319 0270 00000000 		.4byte	.LFB94
 24320 0274 16000000 		.4byte	.LFE94-.LFB94
 24321 0278 00000000 		.4byte	.LFB95
 24322 027c 16000000 		.4byte	.LFE95-.LFB95
 24323 0280 00000000 		.4byte	.LFB96
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 633


 24324 0284 18000000 		.4byte	.LFE96-.LFB96
 24325 0288 00000000 		.4byte	.LFB97
 24326 028c 18000000 		.4byte	.LFE97-.LFB97
 24327 0290 00000000 		.4byte	.LFB98
 24328 0294 54000000 		.4byte	.LFE98-.LFB98
 24329 0298 00000000 		.4byte	.LFB99
 24330 029c 14000000 		.4byte	.LFE99-.LFB99
 24331 02a0 00000000 		.4byte	.LFB100
 24332 02a4 18000000 		.4byte	.LFE100-.LFB100
 24333 02a8 00000000 		.4byte	.LFB101
 24334 02ac 24000000 		.4byte	.LFE101-.LFB101
 24335 02b0 00000000 		.4byte	.LFB102
 24336 02b4 10000000 		.4byte	.LFE102-.LFB102
 24337 02b8 00000000 		.4byte	.LFB103
 24338 02bc 50000000 		.4byte	.LFE103-.LFB103
 24339 02c0 00000000 		.4byte	.LFB104
 24340 02c4 08000000 		.4byte	.LFE104-.LFB104
 24341 02c8 00000000 		.4byte	.LFB105
 24342 02cc 08000000 		.4byte	.LFE105-.LFB105
 24343 02d0 00000000 		.4byte	.LFB106
 24344 02d4 1C000000 		.4byte	.LFE106-.LFB106
 24345 02d8 00000000 		.4byte	.LFB107
 24346 02dc 0A000000 		.4byte	.LFE107-.LFB107
 24347 02e0 00000000 		.4byte	.LFB108
 24348 02e4 08000000 		.4byte	.LFE108-.LFB108
 24349 02e8 00000000 		.4byte	.LFB109
 24350 02ec 08000000 		.4byte	.LFE109-.LFB109
 24351 02f0 00000000 		.4byte	0
 24352 02f4 00000000 		.4byte	0
 24353              		.section	.debug_ranges,"",%progbits
 24354              	.Ldebug_ranges0:
 24355 0000 12000000 		.4byte	.LBB28
 24356 0004 3A000000 		.4byte	.LBE28
 24357 0008 40000000 		.4byte	.LBB29
 24358 000c 42000000 		.4byte	.LBE29
 24359 0010 00000000 		.4byte	0
 24360 0014 00000000 		.4byte	0
 24361 0018 04000000 		.4byte	.LBB50
 24362 001c 06000000 		.4byte	.LBE50
 24363 0020 0A000000 		.4byte	.LBB55
 24364 0024 0E000000 		.4byte	.LBE55
 24365 0028 10000000 		.4byte	.LBB56
 24366 002c 12000000 		.4byte	.LBE56
 24367 0030 1E000000 		.4byte	.LBB57
 24368 0034 26000000 		.4byte	.LBE57
 24369 0038 00000000 		.4byte	0
 24370 003c 00000000 		.4byte	0
 24371 0040 04000000 		.4byte	.LBB62
 24372 0044 06000000 		.4byte	.LBE62
 24373 0048 08000000 		.4byte	.LBB65
 24374 004c 14000000 		.4byte	.LBE65
 24375 0050 00000000 		.4byte	0
 24376 0054 00000000 		.4byte	0
 24377 0058 B8000000 		.4byte	.LBB69
 24378 005c BC000000 		.4byte	.LBE69
 24379 0060 C0000000 		.4byte	.LBB73
 24380 0064 C2000000 		.4byte	.LBE73
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 634


 24381 0068 CE000000 		.4byte	.LBB74
 24382 006c DA000000 		.4byte	.LBE74
 24383 0070 00000000 		.4byte	0
 24384 0074 00000000 		.4byte	0
 24385 0078 B0000000 		.4byte	.LBB77
 24386 007c 3A020000 		.4byte	.LBE77
 24387 0080 44030000 		.4byte	.LBB82
 24388 0084 4E030000 		.4byte	.LBE82
 24389 0088 00000000 		.4byte	0
 24390 008c 00000000 		.4byte	0
 24391 0090 E6000000 		.4byte	.LBB78
 24392 0094 48010000 		.4byte	.LBE78
 24393 0098 4E010000 		.4byte	.LBB80
 24394 009c 9A010000 		.4byte	.LBE80
 24395 00a0 00000000 		.4byte	0
 24396 00a4 00000000 		.4byte	0
 24397 00a8 00000000 		.4byte	.LFB60
 24398 00ac 18000000 		.4byte	.LFE60
 24399 00b0 00000000 		.4byte	.LFB13
 24400 00b4 48000000 		.4byte	.LFE13
 24401 00b8 00000000 		.4byte	.LFB15
 24402 00bc 0C000000 		.4byte	.LFE15
 24403 00c0 00000000 		.4byte	.LFB16
 24404 00c4 2A000000 		.4byte	.LFE16
 24405 00c8 00000000 		.4byte	.LFB17
 24406 00cc 0C000000 		.4byte	.LFE17
 24407 00d0 00000000 		.4byte	.LFB18
 24408 00d4 14000000 		.4byte	.LFE18
 24409 00d8 00000000 		.4byte	.LFB19
 24410 00dc 20000000 		.4byte	.LFE19
 24411 00e0 00000000 		.4byte	.LFB20
 24412 00e4 76000000 		.4byte	.LFE20
 24413 00e8 00000000 		.4byte	.LFB21
 24414 00ec 06000000 		.4byte	.LFE21
 24415 00f0 00000000 		.4byte	.LFB22
 24416 00f4 0C000000 		.4byte	.LFE22
 24417 00f8 00000000 		.4byte	.LFB23
 24418 00fc 10000000 		.4byte	.LFE23
 24419 0100 00000000 		.4byte	.LFB24
 24420 0104 18000000 		.4byte	.LFE24
 24421 0108 00000000 		.4byte	.LFB25
 24422 010c 06000000 		.4byte	.LFE25
 24423 0110 00000000 		.4byte	.LFB26
 24424 0114 06000000 		.4byte	.LFE26
 24425 0118 00000000 		.4byte	.LFB28
 24426 011c 06000000 		.4byte	.LFE28
 24427 0120 00000000 		.4byte	.LFB29
 24428 0124 20000000 		.4byte	.LFE29
 24429 0128 00000000 		.4byte	.LFB31
 24430 012c 2C000000 		.4byte	.LFE31
 24431 0130 00000000 		.4byte	.LFB32
 24432 0134 2C000000 		.4byte	.LFE32
 24433 0138 00000000 		.4byte	.LFB33
 24434 013c 24000000 		.4byte	.LFE33
 24435 0140 00000000 		.4byte	.LFB34
 24436 0144 24000000 		.4byte	.LFE34
 24437 0148 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 635


 24438 014c 7C000000 		.4byte	.LFE35
 24439 0150 00000000 		.4byte	.LFB36
 24440 0154 40000000 		.4byte	.LFE36
 24441 0158 00000000 		.4byte	.LFB37
 24442 015c 1C000000 		.4byte	.LFE37
 24443 0160 00000000 		.4byte	.LFB38
 24444 0164 0E000000 		.4byte	.LFE38
 24445 0168 00000000 		.4byte	.LFB39
 24446 016c 0E000000 		.4byte	.LFE39
 24447 0170 00000000 		.4byte	.LFB40
 24448 0174 18000000 		.4byte	.LFE40
 24449 0178 00000000 		.4byte	.LFB41
 24450 017c 30000000 		.4byte	.LFE41
 24451 0180 00000000 		.4byte	.LFB42
 24452 0184 14000000 		.4byte	.LFE42
 24453 0188 00000000 		.4byte	.LFB43
 24454 018c 28000000 		.4byte	.LFE43
 24455 0190 00000000 		.4byte	.LFB44
 24456 0194 24000000 		.4byte	.LFE44
 24457 0198 00000000 		.4byte	.LFB45
 24458 019c 4C000000 		.4byte	.LFE45
 24459 01a0 00000000 		.4byte	.LFB46
 24460 01a4 38000000 		.4byte	.LFE46
 24461 01a8 00000000 		.4byte	.LFB48
 24462 01ac 20000000 		.4byte	.LFE48
 24463 01b0 00000000 		.4byte	.LFB47
 24464 01b4 2C000000 		.4byte	.LFE47
 24465 01b8 00000000 		.4byte	.LFB49
 24466 01bc 32000000 		.4byte	.LFE49
 24467 01c0 00000000 		.4byte	.LFB52
 24468 01c4 06000000 		.4byte	.LFE52
 24469 01c8 00000000 		.4byte	.LFB53
 24470 01cc 14000000 		.4byte	.LFE53
 24471 01d0 00000000 		.4byte	.LFB55
 24472 01d4 1C000000 		.4byte	.LFE55
 24473 01d8 00000000 		.4byte	.LFB57
 24474 01dc 16000000 		.4byte	.LFE57
 24475 01e0 00000000 		.4byte	.LFB58
 24476 01e4 18000000 		.4byte	.LFE58
 24477 01e8 00000000 		.4byte	.LFB59
 24478 01ec 68000000 		.4byte	.LFE59
 24479 01f0 00000000 		.4byte	.LFB62
 24480 01f4 4E000000 		.4byte	.LFE62
 24481 01f8 00000000 		.4byte	.LFB63
 24482 01fc 50000000 		.4byte	.LFE63
 24483 0200 00000000 		.4byte	.LFB64
 24484 0204 44010000 		.4byte	.LFE64
 24485 0208 00000000 		.4byte	.LFB65
 24486 020c 48000000 		.4byte	.LFE65
 24487 0210 00000000 		.4byte	.LFB14
 24488 0214 4C000000 		.4byte	.LFE14
 24489 0218 00000000 		.4byte	.LFB66
 24490 021c 30020000 		.4byte	.LFE66
 24491 0220 00000000 		.4byte	.LFB50
 24492 0224 72000000 		.4byte	.LFE50
 24493 0228 00000000 		.4byte	.LFB51
 24494 022c 6E000000 		.4byte	.LFE51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 636


 24495 0230 00000000 		.4byte	.LFB67
 24496 0234 C8030000 		.4byte	.LFE67
 24497 0238 00000000 		.4byte	.LFB71
 24498 023c 08000000 		.4byte	.LFE71
 24499 0240 00000000 		.4byte	.LFB72
 24500 0244 14000000 		.4byte	.LFE72
 24501 0248 00000000 		.4byte	.LFB73
 24502 024c 80000000 		.4byte	.LFE73
 24503 0250 00000000 		.4byte	.LFB74
 24504 0254 08000000 		.4byte	.LFE74
 24505 0258 00000000 		.4byte	.LFB75
 24506 025c 14000000 		.4byte	.LFE75
 24507 0260 00000000 		.4byte	.LFB76
 24508 0264 08000000 		.4byte	.LFE76
 24509 0268 00000000 		.4byte	.LFB77
 24510 026c 3E000000 		.4byte	.LFE77
 24511 0270 00000000 		.4byte	.LFB78
 24512 0274 58000000 		.4byte	.LFE78
 24513 0278 00000000 		.4byte	.LFB79
 24514 027c 08000000 		.4byte	.LFE79
 24515 0280 00000000 		.4byte	.LFB80
 24516 0284 0E000000 		.4byte	.LFE80
 24517 0288 00000000 		.4byte	.LFB81
 24518 028c 02000000 		.4byte	.LFE81
 24519 0290 00000000 		.4byte	.LFB82
 24520 0294 10000000 		.4byte	.LFE82
 24521 0298 00000000 		.4byte	.LFB83
 24522 029c 36000000 		.4byte	.LFE83
 24523 02a0 00000000 		.4byte	.LFB84
 24524 02a4 0E000000 		.4byte	.LFE84
 24525 02a8 00000000 		.4byte	.LFB85
 24526 02ac 90010000 		.4byte	.LFE85
 24527 02b0 00000000 		.4byte	.LFB27
 24528 02b4 18000000 		.4byte	.LFE27
 24529 02b8 00000000 		.4byte	.LFB54
 24530 02bc 20000000 		.4byte	.LFE54
 24531 02c0 00000000 		.4byte	.LFB86
 24532 02c4 12000000 		.4byte	.LFE86
 24533 02c8 00000000 		.4byte	.LFB87
 24534 02cc 48000000 		.4byte	.LFE87
 24535 02d0 00000000 		.4byte	.LFB88
 24536 02d4 04000000 		.4byte	.LFE88
 24537 02d8 00000000 		.4byte	.LFB89
 24538 02dc 3C000000 		.4byte	.LFE89
 24539 02e0 00000000 		.4byte	.LFB90
 24540 02e4 06000000 		.4byte	.LFE90
 24541 02e8 00000000 		.4byte	.LFB91
 24542 02ec 68000000 		.4byte	.LFE91
 24543 02f0 00000000 		.4byte	.LFB70
 24544 02f4 44000000 		.4byte	.LFE70
 24545 02f8 00000000 		.4byte	.LFB92
 24546 02fc 14000000 		.4byte	.LFE92
 24547 0300 00000000 		.4byte	.LFB93
 24548 0304 16000000 		.4byte	.LFE93
 24549 0308 00000000 		.4byte	.LFB94
 24550 030c 16000000 		.4byte	.LFE94
 24551 0310 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 637


 24552 0314 16000000 		.4byte	.LFE95
 24553 0318 00000000 		.4byte	.LFB96
 24554 031c 18000000 		.4byte	.LFE96
 24555 0320 00000000 		.4byte	.LFB97
 24556 0324 18000000 		.4byte	.LFE97
 24557 0328 00000000 		.4byte	.LFB98
 24558 032c 54000000 		.4byte	.LFE98
 24559 0330 00000000 		.4byte	.LFB99
 24560 0334 14000000 		.4byte	.LFE99
 24561 0338 00000000 		.4byte	.LFB100
 24562 033c 18000000 		.4byte	.LFE100
 24563 0340 00000000 		.4byte	.LFB101
 24564 0344 24000000 		.4byte	.LFE101
 24565 0348 00000000 		.4byte	.LFB102
 24566 034c 10000000 		.4byte	.LFE102
 24567 0350 00000000 		.4byte	.LFB103
 24568 0354 50000000 		.4byte	.LFE103
 24569 0358 00000000 		.4byte	.LFB104
 24570 035c 08000000 		.4byte	.LFE104
 24571 0360 00000000 		.4byte	.LFB105
 24572 0364 08000000 		.4byte	.LFE105
 24573 0368 00000000 		.4byte	.LFB106
 24574 036c 1C000000 		.4byte	.LFE106
 24575 0370 00000000 		.4byte	.LFB107
 24576 0374 0A000000 		.4byte	.LFE107
 24577 0378 00000000 		.4byte	.LFB108
 24578 037c 08000000 		.4byte	.LFE108
 24579 0380 00000000 		.4byte	.LFB109
 24580 0384 08000000 		.4byte	.LFE109
 24581 0388 00000000 		.4byte	0
 24582 038c 00000000 		.4byte	0
 24583              		.section	.debug_line,"",%progbits
 24584              	.Ldebug_line0:
 24585 0000 590E0000 		.section	.debug_str,"MS",%progbits,1
 24585      02004D02 
 24585      00000201 
 24585      FB0E0D00 
 24585      01010101 
 24586              	.LASF413:
 24587 0000 4D41585F 		.ascii	"MAX_STR_VERSION\000"
 24587      5354525F 
 24587      56455253 
 24587      494F4E00 
 24588              	.LASF932:
 24589 0010 776F6C66 		.ascii	"wolfSSL_set_fd\000"
 24589      53534C5F 
 24589      7365745F 
 24589      666400
 24590              	.LASF462:
 24591 001f 44544C53 		.ascii	"DTLS_HANDSHAKE_FRAG_SZ\000"
 24591      5F48414E 
 24591      44534841 
 24591      4B455F46 
 24591      5241475F 
 24592              	.LASF34:
 24593 0036 44594E41 		.ascii	"DYNAMIC_TYPE_WRITEV\000"
 24593      4D49435F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 638


 24593      54595045 
 24593      5F575249 
 24593      54455600 
 24594              	.LASF409:
 24595 004a 4D41585F 		.ascii	"MAX_COMP_EXTRA\000"
 24595      434F4D50 
 24595      5F455854 
 24595      524100
 24596              	.LASF253:
 24597 0059 53534C5F 		.ascii	"SSL_ERROR_WANT_X509_LOOKUP\000"
 24597      4552524F 
 24597      525F5741 
 24597      4E545F58 
 24597      3530395F 
 24598              	.LASF820:
 24599 0074 494E434F 		.ascii	"INCOMPLETE_DATA\000"
 24599      4D504C45 
 24599      54455F44 
 24599      41544100 
 24600              	.LASF1083:
 24601 0084 454E445F 		.ascii	"END_PRIV_KEY\000"
 24601      50524956 
 24601      5F4B4559 
 24601      00
 24602              	.LASF537:
 24603 0091 53455256 		.ascii	"SERVER_HELLO_COMPLETE\000"
 24603      45525F48 
 24603      454C4C4F 
 24603      5F434F4D 
 24603      504C4554 
 24604              	.LASF559:
 24605 00a7 68617368 		.ascii	"hashSigAlgoSz\000"
 24605      53696741 
 24605      6C676F53 
 24605      7A00
 24606              	.LASF880:
 24607 00b5 53554954 		.ascii	"SUITES_ERROR\000"
 24607      45535F45 
 24607      52524F52 
 24607      00
 24608              	.LASF36:
 24609 00c2 44594E41 		.ascii	"DYNAMIC_TYPE_DSA\000"
 24609      4D49435F 
 24609      54595045 
 24609      5F445341 
 24609      00
 24610              	.LASF109:
 24611 00d3 69644C65 		.ascii	"idLen\000"
 24611      6E00
 24612              	.LASF259:
 24613 00d9 53534C5F 		.ascii	"SSL_OP_NO_SSLv2\000"
 24613      4F505F4E 
 24613      4F5F5353 
 24613      4C763200 
 24614              	.LASF950:
 24615 00e9 776F6C66 		.ascii	"wolfSSL_write\000"
 24615      53534C5F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 639


 24615      77726974 
 24615      6500
 24616              	.LASF331:
 24617 00f7 4465636F 		.ascii	"DecodedCert\000"
 24617      64656443 
 24617      65727400 
 24618              	.LASF668:
 24619 0103 70656E64 		.ascii	"pendingMsgOffset\000"
 24619      696E674D 
 24619      73674F66 
 24619      66736574 
 24619      00
 24620              	.LASF887:
 24621 0114 4E4F5F50 		.ascii	"NO_PEER_VERIFY\000"
 24621      4545525F 
 24621      56455249 
 24621      465900
 24622              	.LASF781:
 24623 0123 4145535F 		.ascii	"AES_KAT_FIPS_E\000"
 24623      4B41545F 
 24623      46495053 
 24623      5F4500
 24624              	.LASF264:
 24625 0132 50454D5F 		.ascii	"PEM_BUFSIZE\000"
 24625      42554653 
 24625      495A4500 
 24626              	.LASF1124:
 24627 013e 546F5472 		.ascii	"ToTraditional\000"
 24627      61646974 
 24627      696F6E61 
 24627      6C00
 24628              	.LASF1035:
 24629 014c 776F6C66 		.ascii	"wolfSSL_set_cipher_list\000"
 24629      53534C5F 
 24629      7365745F 
 24629      63697068 
 24629      65725F6C 
 24630              	.LASF316:
 24631 0164 4354435F 		.ascii	"CTC_MD2wRSA\000"
 24631      4D443277 
 24631      52534100 
 24632              	.LASF689:
 24633 0170 676F745F 		.ascii	"got_finished\000"
 24633      66696E69 
 24633      73686564 
 24633      00
 24634              	.LASF497:
 24635 017d 43414D45 		.ascii	"CAMELLIA_192_KEY_SIZE\000"
 24635      4C4C4941 
 24635      5F313932 
 24635      5F4B4559 
 24635      5F53495A 
 24636              	.LASF230:
 24637 0193 53534C5F 		.ascii	"SSL_NOT_IMPLEMENTED\000"
 24637      4E4F545F 
 24637      494D504C 
 24637      454D454E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 640


 24637      54454400 
 24638              	.LASF430:
 24639 01a7 53455353 		.ascii	"SESSION_HINT_SZ\000"
 24639      494F4E5F 
 24639      48494E54 
 24639      5F535A00 
 24640              	.LASF1048:
 24641 01b7 776F6C66 		.ascii	"wolfSSL_CertManagerLoadCABuffer\000"
 24641      53534C5F 
 24641      43657274 
 24641      4D616E61 
 24641      6765724C 
 24642              	.LASF377:
 24643 01d7 5369676E 		.ascii	"Signer\000"
 24643      657200
 24644              	.LASF107:
 24645 01de 73657373 		.ascii	"sessionIDSz\000"
 24645      696F6E49 
 24645      44537A00 
 24646              	.LASF1016:
 24647 01ea 7273614B 		.ascii	"rsaKey\000"
 24647      657900
 24648              	.LASF884:
 24649 01f1 53414E49 		.ascii	"SANITY_CIPHER_E\000"
 24649      54595F43 
 24649      49504845 
 24649      525F4500 
 24650              	.LASF766:
 24651 0201 41534E5F 		.ascii	"ASN_CRL_CONFIRM_E\000"
 24651      43524C5F 
 24651      434F4E46 
 24651      49524D5F 
 24651      4500
 24652              	.LASF510:
 24653 0213 4D41585F 		.ascii	"MAX_EXPORT_ECC_SZ\000"
 24653      4558504F 
 24653      52545F45 
 24653      43435F53 
 24653      5A00
 24654              	.LASF489:
 24655 0225 41455347 		.ascii	"AESGCM_NONCE_SZ\000"
 24655      434D5F4E 
 24655      4F4E4345 
 24655      5F535A00 
 24656              	.LASF644:
 24657 0235 73656E74 		.ascii	"sentNotify\000"
 24657      4E6F7469 
 24657      667900
 24658              	.LASF503:
 24659 0240 504F4C59 		.ascii	"POLY1305_AUTH_SZ\000"
 24659      31333035 
 24659      5F415554 
 24659      485F535A 
 24659      00
 24660              	.LASF327:
 24661 0251 6E657874 		.ascii	"next\000"
 24661      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 641


 24662              	.LASF619:
 24663 0256 46495253 		.ascii	"FIRST_REPLY_FIRST\000"
 24663      545F5245 
 24663      504C595F 
 24663      46495253 
 24663      5400
 24664              	.LASF194:
 24665 0268 6572726F 		.ascii	"error_depth\000"
 24665      725F6465 
 24665      70746800 
 24666              	.LASF449:
 24667 0274 5245515F 		.ascii	"REQ_HEADER_SZ\000"
 24667      48454144 
 24667      45525F53 
 24667      5A00
 24668              	.LASF468:
 24669 0282 4D41585F 		.ascii	"MAX_PRF_HALF\000"
 24669      5052465F 
 24669      48414C46 
 24669      00
 24670              	.LASF272:
 24671 028f 574F4C46 		.ascii	"WOLFSSL_CHAIN_CA\000"
 24671      53534C5F 
 24671      43484149 
 24671      4E5F4341 
 24671      00
 24672              	.LASF328:
 24673 02a0 42617365 		.ascii	"Base_entry\000"
 24673      5F656E74 
 24673      727900
 24674              	.LASF123:
 24675 02ab 6661696C 		.ascii	"failNoCert\000"
 24675      4E6F4365 
 24675      727400
 24676              	.LASF260:
 24677 02b6 53534C5F 		.ascii	"SSL_R_SSL_HANDSHAKE_FAILURE\000"
 24677      525F5353 
 24677      4C5F4841 
 24677      4E445348 
 24677      414B455F 
 24678              	.LASF426:
 24679 02d2 414C4552 		.ascii	"ALERT_SIZE\000"
 24679      545F5349 
 24679      5A4500
 24680              	.LASF777:
 24681 02dd 484D4143 		.ascii	"HMAC_MIN_KEYLEN_E\000"
 24681      5F4D494E 
 24681      5F4B4559 
 24681      4C454E5F 
 24681      4500
 24682              	.LASF105:
 24683 02ef 626F726E 		.ascii	"bornOn\000"
 24683      4F6E00
 24684              	.LASF478:
 24685 02f6 4145535F 		.ascii	"AES_192_KEY_SIZE\000"
 24685      3139325F 
 24685      4B45595F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 642


 24685      53495A45 
 24685      00
 24686              	.LASF621:
 24687 0307 46495253 		.ascii	"FIRST_REPLY_THIRD\000"
 24687      545F5245 
 24687      504C595F 
 24687      54484952 
 24687      4400
 24688              	.LASF763:
 24689 0319 4445434F 		.ascii	"DECOMPRESS_E\000"
 24689      4D505245 
 24689      53535F45 
 24689      00
 24690              	.LASF493:
 24691 0326 4145535F 		.ascii	"AES_GCM_AUTH_SZ\000"
 24691      47434D5F 
 24691      41555448 
 24691      5F535A00 
 24692              	.LASF104:
 24693 0336 574F4C46 		.ascii	"WOLFSSL_SESSION\000"
 24693      53534C5F 
 24693      53455353 
 24693      494F4E00 
 24694              	.LASF265:
 24695 0346 43616C6C 		.ascii	"CallbackIORecv\000"
 24695      6261636B 
 24695      494F5265 
 24695      637600
 24696              	.LASF245:
 24697 0355 53534C5F 		.ascii	"SSL_SESS_CACHE_BOTH\000"
 24697      53455353 
 24697      5F434143 
 24697      48455F42 
 24697      4F544800 
 24698              	.LASF603:
 24699 0369 6D61635F 		.ascii	"mac_algorithm\000"
 24699      616C676F 
 24699      72697468 
 24699      6D00
 24700              	.LASF1051:
 24701 0377 776F6C66 		.ascii	"wolfSSL_CTX_use_certificate_chain_buffer\000"
 24701      53534C5F 
 24701      4354585F 
 24701      7573655F 
 24701      63657274 
 24702              	.LASF595:
 24703 03a0 64656372 		.ascii	"decryptedCur\000"
 24703      79707465 
 24703      64437572 
 24703      00
 24704              	.LASF938:
 24705 03ad 73746570 		.ascii	"step\000"
 24705      00
 24706              	.LASF527:
 24707 03b2 4D41585F 		.ascii	"MAX_NTRU_BITS\000"
 24707      4E545255 
 24707      5F424954 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 643


 24707      5300
 24708              	.LASF916:
 24709 03c0 554E5355 		.ascii	"UNSUPPORTED_SUITE\000"
 24709      50504F52 
 24709      5445445F 
 24709      53554954 
 24709      4500
 24710              	.LASF671:
 24711 03d2 7072654D 		.ascii	"preMasterSecret\000"
 24711      61737465 
 24711      72536563 
 24711      72657400 
 24712              	.LASF312:
 24713 03e2 4543435F 		.ascii	"ECC_PUBLICKEY_TYPE\000"
 24713      5055424C 
 24713      49434B45 
 24713      595F5459 
 24713      504500
 24714              	.LASF386:
 24715 03f5 5153485F 		.ascii	"QSH_BYTE\000"
 24715      42595445 
 24715      00
 24716              	.LASF722:
 24717 03fe 5055424C 		.ascii	"PUBLIC_KEY_E\000"
 24717      49435F4B 
 24717      45595F45 
 24717      00
 24718              	.LASF212:
 24719 040b 756E7265 		.ascii	"unrecognized_name\000"
 24719      636F676E 
 24719      697A6564 
 24719      5F6E616D 
 24719      6500
 24720              	.LASF214:
 24721 041d 6E6F5F61 		.ascii	"no_application_protocol\000"
 24721      70706C69 
 24721      63617469 
 24721      6F6E5F70 
 24721      726F746F 
 24722              	.LASF26:
 24723 0435 44594E41 		.ascii	"DYNAMIC_TYPE_METHOD\000"
 24723      4D49435F 
 24723      54595045 
 24723      5F4D4554 
 24723      484F4400 
 24724              	.LASF672:
 24725 0449 70656E64 		.ascii	"pendingMsgType\000"
 24725      696E674D 
 24725      73675479 
 24725      706500
 24726              	.LASF756:
 24727 0458 414C545F 		.ascii	"ALT_NAME_E\000"
 24727      4E414D45 
 24727      5F4500
 24728              	.LASF549:
 24729 0463 6C656E67 		.ascii	"length\000"
 24729      746800
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 644


 24730              	.LASF711:
 24731 046a 4D505F4D 		.ascii	"MP_MUL_E\000"
 24731      554C5F45 
 24731      00
 24732              	.LASF87:
 24733 0473 64656372 		.ascii	"decrypt\000"
 24733      79707400 
 24734              	.LASF1133:
 24735 047b 53656E64 		.ascii	"SendClientKeyExchange\000"
 24735      436C6965 
 24735      6E744B65 
 24735      79457863 
 24735      68616E67 
 24736              	.LASF1093:
 24737 0491 6D656D63 		.ascii	"memcmp\000"
 24737      6D7000
 24738              	.LASF418:
 24739 0498 434F4D50 		.ascii	"COMPRESS_CONSTANT\000"
 24739      52455353 
 24739      5F434F4E 
 24739      5354414E 
 24739      5400
 24740              	.LASF425:
 24741 04aa 42595445 		.ascii	"BYTE3_LEN\000"
 24741      335F4C45 
 24741      4E00
 24742              	.LASF343:
 24743 04b4 7375626A 		.ascii	"subjectHash\000"
 24743      65637448 
 24743      61736800 
 24744              	.LASF522:
 24745 04c0 43455254 		.ascii	"CERT_MIN_SIZE\000"
 24745      5F4D494E 
 24745      5F53495A 
 24745      4500
 24746              	.LASF649:
 24747 04ce 7573696E 		.ascii	"usingPSK_cipher\000"
 24747      6750534B 
 24747      5F636970 
 24747      68657200 
 24748              	.LASF271:
 24749 04de 574F4C46 		.ascii	"WOLFSSL_USER_CA\000"
 24749      53534C5F 
 24749      55534552 
 24749      5F434100 
 24750              	.LASF382:
 24751 04ee 44524247 		.ascii	"DRBG\000"
 24751      00
 24752              	.LASF249:
 24753 04f3 53534C5F 		.ascii	"SSL_ERROR_WANT_WRITE\000"
 24753      4552524F 
 24753      525F5741 
 24753      4E545F57 
 24753      52495445 
 24754              	.LASF847:
 24755 0508 47455454 		.ascii	"GETTIME_ERROR\000"
 24755      494D455F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 645


 24755      4552524F 
 24755      5200
 24756              	.LASF727:
 24757 0516 45585445 		.ascii	"EXTENSIONS_E\000"
 24757      4E53494F 
 24757      4E535F45 
 24757      00
 24758              	.LASF574:
 24759 0523 6E657874 		.ascii	"nextDateFormat\000"
 24759      44617465 
 24759      466F726D 
 24759      617400
 24760              	.LASF196:
 24761 0532 636C6F73 		.ascii	"close_notify\000"
 24761      655F6E6F 
 24761      74696679 
 24761      00
 24762              	.LASF247:
 24763 053f 53534C5F 		.ascii	"SSL_SESS_CACHE_NO_INTERNAL_LOOKUP\000"
 24763      53455353 
 24763      5F434143 
 24763      48455F4E 
 24763      4F5F494E 
 24764              	.LASF1109:
 24765 0561 46726565 		.ascii	"FreeMutex\000"
 24765      4D757465 
 24765      7800
 24766              	.LASF939:
 24767 056b 64656C69 		.ascii	"delim\000"
 24767      6D00
 24768              	.LASF670:
 24769 0571 73657276 		.ascii	"serverRandom\000"
 24769      65725261 
 24769      6E646F6D 
 24769      00
 24770              	.LASF303:
 24771 057e 43415F54 		.ascii	"CA_TYPE\000"
 24771      59504500 
 24772              	.LASF1005:
 24773 0586 62756666 		.ascii	"bufferEnd\000"
 24773      6572456E 
 24773      6400
 24774              	.LASF48:
 24775 0590 44594E41 		.ascii	"DYNAMIC_TYPE_ARRAYS\000"
 24775      4D49435F 
 24775      54595045 
 24775      5F415252 
 24775      41595300 
 24776              	.LASF761:
 24777 05a4 434F4D50 		.ascii	"COMPRESS_E\000"
 24777      52455353 
 24777      5F4500
 24778              	.LASF68:
 24779 05af 44594E41 		.ascii	"DYNAMIC_TYPE_X509_CTX\000"
 24779      4D49435F 
 24779      54595045 
 24779      5F583530 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 646


 24779      395F4354 
 24780              	.LASF740:
 24781 05c5 41534E5F 		.ascii	"ASN_SIG_OID_E\000"
 24781      5349475F 
 24781      4F49445F 
 24781      4500
 24782              	.LASF902:
 24783 05d3 53414E49 		.ascii	"SANITY_MSG_E\000"
 24783      54595F4D 
 24783      53475F45 
 24783      00
 24784              	.LASF558:
 24785 05e0 73756974 		.ascii	"suiteSz\000"
 24785      65537A00 
 24786              	.LASF700:
 24787 05e8 52454144 		.ascii	"READ_RAN_E\000"
 24787      5F52414E 
 24787      5F4500
 24788              	.LASF122:
 24789 05f3 76657269 		.ascii	"verifyNone\000"
 24789      66794E6F 
 24789      6E6500
 24790              	.LASF458:
 24791 05fe 44544C53 		.ascii	"DTLS_RECORD_HEADER_SZ\000"
 24791      5F524543 
 24791      4F52445F 
 24791      48454144 
 24791      45525F53 
 24792              	.LASF403:
 24793 0614 53454352 		.ascii	"SECRET_LEN\000"
 24793      45545F4C 
 24793      454E00
 24794              	.LASF554:
 24795 061f 64796E61 		.ascii	"dynamicFlag\000"
 24795      6D696346 
 24795      6C616700 
 24796              	.LASF29:
 24797 062b 44594E41 		.ascii	"DYNAMIC_TYPE_INFO\000"
 24797      4D49435F 
 24797      54595045 
 24797      5F494E46 
 24797      4F00
 24798              	.LASF996:
 24799 063d 50656D54 		.ascii	"PemToDer\000"
 24799      6F446572 
 24799      00
 24800              	.LASF665:
 24801 0646 70656E64 		.ascii	"pendingMsg\000"
 24801      696E674D 
 24801      736700
 24802              	.LASF937:
 24803 0651 746F7461 		.ascii	"totalInc\000"
 24803      6C496E63 
 24803      00
 24804              	.LASF809:
 24805 065a 4D494E5F 		.ascii	"MIN_CODE_E\000"
 24805      434F4445 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 647


 24805      5F4500
 24806              	.LASF177:
 24807 0665 6F637370 		.ascii	"ocspUseOverrideURL\000"
 24807      5573654F 
 24807      76657272 
 24807      69646555 
 24807      524C00
 24808              	.LASF322:
 24809 0678 4354435F 		.ascii	"CTC_SHA384wRSA\000"
 24809      53484133 
 24809      38347752 
 24809      534100
 24810              	.LASF42:
 24811 0687 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_STATUS\000"
 24811      4D49435F 
 24811      54595045 
 24811      5F4F4353 
 24811      505F5354 
 24812              	.LASF395:
 24813 06a0 544C5376 		.ascii	"TLSv1_MINOR\000"
 24813      315F4D49 
 24813      4E4F5200 
 24814              	.LASF1115:
 24815 06ac 496E6974 		.ascii	"InitSuites\000"
 24815      53756974 
 24815      657300
 24816              	.LASF256:
 24817 06b7 53534C5F 		.ascii	"SSL_SENT_SHUTDOWN\000"
 24817      53454E54 
 24817      5F534855 
 24817      54444F57 
 24817      4E00
 24818              	.LASF757:
 24819 06c9 4145535F 		.ascii	"AES_GCM_AUTH_E\000"
 24819      47434D5F 
 24819      41555448 
 24819      5F4500
 24820              	.LASF39:
 24821 06d8 44594E41 		.ascii	"DYNAMIC_TYPE_CRL_ENTRY\000"
 24821      4D49435F 
 24821      54595045 
 24821      5F43524C 
 24821      5F454E54 
 24822              	.LASF868:
 24823 06ef 4241445F 		.ascii	"BAD_CERT_MANAGER_ERROR\000"
 24823      43455254 
 24823      5F4D414E 
 24823      41474552 
 24823      5F455252 
 24824              	.LASF630:
 24825 0706 70726576 		.ascii	"prevSent\000"
 24825      53656E74 
 24825      00
 24826              	.LASF623:
 24827 070f 46494E49 		.ascii	"FINISHED_DONE\000"
 24827      53484544 
 24827      5F444F4E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 648


 24827      4500
 24828              	.LASF769:
 24829 071d 4241445F 		.ascii	"BAD_ENC_STATE_E\000"
 24829      454E435F 
 24829      53544154 
 24829      455F4500 
 24830              	.LASF360:
 24831 072d 65787453 		.ascii	"extSubjKeyId\000"
 24831      75626A4B 
 24831      65794964 
 24831      00
 24832              	.LASF1059:
 24833 073a 776F6C66 		.ascii	"wolfSSL_session_reused\000"
 24833      53534C5F 
 24833      73657373 
 24833      696F6E5F 
 24833      72657573 
 24834              	.LASF387:
 24835 0751 43484143 		.ascii	"CHACHA_BYTE\000"
 24835      48415F42 
 24835      59544500 
 24836              	.LASF520:
 24837 075d 4D41585F 		.ascii	"MAX_WOLFSSL_FILE_SIZE\000"
 24837      574F4C46 
 24837      53534C5F 
 24837      46494C45 
 24837      5F53495A 
 24838              	.LASF912:
 24839 0773 48414E44 		.ascii	"HANDSHAKE_SIZE_ERROR\000"
 24839      5348414B 
 24839      455F5349 
 24839      5A455F45 
 24839      52524F52 
 24840              	.LASF246:
 24841 0788 53534C5F 		.ascii	"SSL_SESS_CACHE_NO_AUTO_CLEAR\000"
 24841      53455353 
 24841      5F434143 
 24841      48455F4E 
 24841      4F5F4155 
 24842              	.LASF1013:
 24843 07a5 4D616B65 		.ascii	"MakeWordFromHash\000"
 24843      576F7264 
 24843      46726F6D 
 24843      48617368 
 24843      00
 24844              	.LASF428:
 24845 07b6 4558545F 		.ascii	"EXT_ID_SZ\000"
 24845      49445F53 
 24845      5A00
 24846              	.LASF848:
 24847 07c0 47455449 		.ascii	"GETITIMER_ERROR\000"
 24847      54494D45 
 24847      525F4552 
 24847      524F5200 
 24848              	.LASF436:
 24849 07d0 434F4F4B 		.ascii	"COOKIE_SZ\000"
 24849      49455F53 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 649


 24849      5A00
 24850              	.LASF721:
 24851 07da 414C474F 		.ascii	"ALGO_ID_E\000"
 24851      5F49445F 
 24851      4500
 24852              	.LASF399:
 24853 07e4 494E5641 		.ascii	"INVALID_BYTE\000"
 24853      4C49445F 
 24853      42595445 
 24853      00
 24854              	.LASF348:
 24855 07f1 7375626A 		.ascii	"subjectCNStored\000"
 24855      65637443 
 24855      4E53746F 
 24855      72656400 
 24856              	.LASF1105:
 24857 0801 6D656D63 		.ascii	"memcpy\000"
 24857      707900
 24858              	.LASF320:
 24859 0808 4354435F 		.ascii	"CTC_SHA256wRSA\000"
 24859      53484132 
 24859      35367752 
 24859      534100
 24860              	.LASF1030:
 24861 0817 776F6C66 		.ascii	"wolfSSL_SetCertCbCtx\000"
 24861      53534C5F 
 24861      53657443 
 24861      65727443 
 24861      62437478 
 24862              	.LASF203:
 24863 082c 6261645F 		.ascii	"bad_certificate\000"
 24863      63657274 
 24863      69666963 
 24863      61746500 
 24864              	.LASF548:
 24865 083c 6D696E6F 		.ascii	"minor\000"
 24865      7200
 24866              	.LASF237:
 24867 0842 53534C5F 		.ascii	"SSL_VERIFY_NONE\000"
 24867      56455249 
 24867      46595F4E 
 24867      4F4E4500 
 24868              	.LASF365:
 24869 0852 69734341 		.ascii	"isCA\000"
 24869      00
 24870              	.LASF324:
 24871 0857 4354435F 		.ascii	"CTC_SHA512wRSA\000"
 24871      53484135 
 24871      31327752 
 24871      534100
 24872              	.LASF481:
 24873 0866 41454144 		.ascii	"AEAD_SEQ_OFFSET\000"
 24873      5F534551 
 24873      5F4F4646 
 24873      53455400 
 24874              	.LASF349:
 24875 0876 76657269 		.ascii	"verify\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 650


 24875      667900
 24876              	.LASF350:
 24877 087d 736F7572 		.ascii	"source\000"
 24877      636500
 24878              	.LASF157:
 24879 0884 69734361 		.ascii	"isCa\000"
 24879      00
 24880              	.LASF945:
 24881 0889 6E6F6E62 		.ascii	"nonblock\000"
 24881      6C6F636B 
 24881      00
 24882              	.LASF59:
 24883 0892 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP\000"
 24883      4D49435F 
 24883      54595045 
 24883      5F4F4353 
 24883      5000
 24884              	.LASF499:
 24885 08a4 43414D45 		.ascii	"CAMELLIA_IV_SIZE\000"
 24885      4C4C4941 
 24885      5F49565F 
 24885      53495A45 
 24885      00
 24886              	.LASF862:
 24887 08b5 4543435F 		.ascii	"ECC_PEERKEY_ERROR\000"
 24887      50454552 
 24887      4B45595F 
 24887      4552524F 
 24887      5200
 24888              	.LASF232:
 24889 08c7 53534C5F 		.ascii	"SSL_FATAL_ERROR\000"
 24889      46415441 
 24889      4C5F4552 
 24889      524F5200 
 24890              	.LASF990:
 24891 08d7 47657443 		.ascii	"GetCA\000"
 24891      4100
 24892              	.LASF193:
 24893 08dd 75736572 		.ascii	"userCtx\000"
 24893      43747800 
 24894              	.LASF879:
 24895 08e5 53455155 		.ascii	"SEQUENCE_ERROR\000"
 24895      454E4345 
 24895      5F455252 
 24895      4F5200
 24896              	.LASF1:
 24897 08f4 62797465 		.ascii	"byte\000"
 24897      00
 24898              	.LASF930:
 24899 08f9 776F6C66 		.ascii	"wolfSSL_CTX_free\000"
 24899      53534C5F 
 24899      4354585F 
 24899      66726565 
 24899      00
 24900              	.LASF379:
 24901 090a 6E616D65 		.ascii	"nameLen\000"
 24901      4C656E00 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 651


 24902              	.LASF480:
 24903 0912 4145535F 		.ascii	"AES_128_KEY_SIZE\000"
 24903      3132385F 
 24903      4B45595F 
 24903      53495A45 
 24903      00
 24904              	.LASF28:
 24905 0923 44594E41 		.ascii	"DYNAMIC_TYPE_IN_BUFFER\000"
 24905      4D49435F 
 24905      54595045 
 24905      5F494E5F 
 24905      42554646 
 24906              	.LASF849:
 24907 093a 53494741 		.ascii	"SIGACT_ERROR\000"
 24907      43545F45 
 24907      52524F52 
 24907      00
 24908              	.LASF49:
 24909 0947 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_POOL\000"
 24909      4D49435F 
 24909      54595045 
 24909      5F44544C 
 24909      535F504F 
 24910              	.LASF442:
 24911 095e 4F504151 		.ascii	"OPAQUE32_LEN\000"
 24911      55453332 
 24911      5F4C454E 
 24911      00
 24912              	.LASF787:
 24913 096b 41455347 		.ascii	"AESGCM_KAT_FIPS_E\000"
 24913      434D5F4B 
 24913      41545F46 
 24913      4950535F 
 24913      4500
 24914              	.LASF390:
 24915 097d 44544C53 		.ascii	"DTLS_MAJOR\000"
 24915      5F4D414A 
 24915      4F5200
 24916              	.LASF1053:
 24917 0988 776F6C66 		.ascii	"wolfSSL_use_PrivateKey_buffer\000"
 24917      53534C5F 
 24917      7573655F 
 24917      50726976 
 24917      6174654B 
 24918              	.LASF1139:
 24919 09a6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 24919      4320342E 
 24919      392E3320 
 24919      32303135 
 24919      30333033 
 24920 09d9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 24920      20726576 
 24920      6973696F 
 24920      6E203232 
 24920      31323230 
 24921 0a0c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 24921      66756E63 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 652


 24921      74696F6E 
 24921      2D736563 
 24921      74696F6E 
 24922              	.LASF625:
 24923 0a34 42756666 		.ascii	"Buffers\000"
 24923      65727300 
 24924              	.LASF828:
 24925 0a3c 5253415F 		.ascii	"RSA_PRIVATE_ERROR\000"
 24925      50524956 
 24925      4154455F 
 24925      4552524F 
 24925      5200
 24926              	.LASF755:
 24927 0a4e 4E4F5F50 		.ascii	"NO_PASSWORD\000"
 24927      41535357 
 24927      4F524400 
 24928              	.LASF710:
 24929 0a5a 4D505F41 		.ascii	"MP_ADD_E\000"
 24929      44445F45 
 24929      00
 24930              	.LASF1045:
 24931 0a63 47657453 		.ascii	"GetSession\000"
 24931      65737369 
 24931      6F6E00
 24932              	.LASF1102:
 24933 0a6e 52656365 		.ascii	"ReceiveData\000"
 24933      69766544 
 24933      61746100 
 24934              	.LASF746:
 24935 0a7a 41534E5F 		.ascii	"ASN_DH_KEY_E\000"
 24935      44485F4B 
 24935      45595F45 
 24935      00
 24936              	.LASF601:
 24937 0a87 62756C6B 		.ascii	"bulk_cipher_algorithm\000"
 24937      5F636970 
 24937      6865725F 
 24937      616C676F 
 24937      72697468 
 24938              	.LASF627:
 24939 0a9d 6F757470 		.ascii	"outputBuffer\000"
 24939      75744275 
 24939      66666572 
 24939      00
 24940              	.LASF760:
 24941 0aaa 434F4D50 		.ascii	"COMPRESS_INIT_E\000"
 24941      52455353 
 24941      5F494E49 
 24941      545F4500 
 24942              	.LASF599:
 24943 0aba 626C6F63 		.ascii	"block_size\000"
 24943      6B5F7369 
 24943      7A6500
 24944              	.LASF806:
 24945 0ac5 4241445F 		.ascii	"BAD_COND_E\000"
 24945      434F4E44 
 24945      5F4500
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 653


 24946              	.LASF301:
 24947 0ad0 44485F50 		.ascii	"DH_PARAM_TYPE\000"
 24947      4152414D 
 24947      5F545950 
 24947      4500
 24948              	.LASF984:
 24949 0ade 776F6C66 		.ascii	"wolfSSL_SetVersion\000"
 24949      53534C5F 
 24949      53657456 
 24949      65727369 
 24949      6F6E00
 24950              	.LASF815:
 24951 0af1 56455249 		.ascii	"VERIFY_MAC_ERROR\000"
 24951      46595F4D 
 24951      41435F45 
 24951      52524F52 
 24951      00
 24952              	.LASF255:
 24953 0b02 53534C5F 		.ascii	"SSL_ERROR_SSL\000"
 24953      4552524F 
 24953      525F5353 
 24953      4C00
 24954              	.LASF475:
 24955 0b10 44455333 		.ascii	"DES3_KEY_SIZE\000"
 24955      5F4B4559 
 24955      5F53495A 
 24955      4500
 24956              	.LASF509:
 24957 0b1e 45434448 		.ascii	"ECDHE_SIZE\000"
 24957      455F5349 
 24957      5A4500
 24958              	.LASF443:
 24959 0b29 434F4D50 		.ascii	"COMP_LEN\000"
 24959      5F4C454E 
 24959      00
 24960              	.LASF726:
 24961 0b32 43415F54 		.ascii	"CA_TRUE_E\000"
 24961      5255455F 
 24961      4500
 24962              	.LASF406:
 24963 0b3c 46494E49 		.ascii	"FINISHED_SZ\000"
 24963      53484544 
 24963      5F535A00 
 24964              	.LASF96:
 24965 0b48 63757253 		.ascii	"curSize\000"
 24965      697A6500 
 24966              	.LASF780:
 24967 0b50 494E5F43 		.ascii	"IN_CORE_FIPS_E\000"
 24967      4F52455F 
 24967      46495053 
 24967      5F4500
 24968              	.LASF858:
 24969 0b5f 4E545255 		.ascii	"NTRU_ENCRYPT_ERROR\000"
 24969      5F454E43 
 24969      52595054 
 24969      5F455252 
 24969      4F5200
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 654


 24970              	.LASF178:
 24971 0b72 6F637370 		.ascii	"ocspStaplingEnabled\000"
 24971      53746170 
 24971      6C696E67 
 24971      456E6162 
 24971      6C656400 
 24972              	.LASF867:
 24973 0b86 4241445F 		.ascii	"BAD_PATH_ERROR\000"
 24973      50415448 
 24973      5F455252 
 24973      4F5200
 24974              	.LASF684:
 24975 0b95 676F745F 		.ascii	"got_server_key_exchange\000"
 24975      73657276 
 24975      65725F6B 
 24975      65795F65 
 24975      78636861 
 24976              	.LASF402:
 24977 0bad 48454C4C 		.ascii	"HELLO_EXT_SIG_ALGO\000"
 24977      4F5F4558 
 24977      545F5349 
 24977      475F414C 
 24977      474F00
 24978              	.LASF733:
 24979 0bc0 41534E5F 		.ascii	"ASN_TAG_NULL_E\000"
 24979      5441475F 
 24979      4E554C4C 
 24979      5F4500
 24980              	.LASF356:
 24981 0bcf 65787441 		.ascii	"extAuthInfo\000"
 24981      75746849 
 24981      6E666F00 
 24982              	.LASF267:
 24983 0bdb 574F4C46 		.ascii	"WOLFSSL_SSLV3\000"
 24983      53534C5F 
 24983      53534C56 
 24983      3300
 24984              	.LASF986:
 24985 0be9 48617368 		.ascii	"HashSigner\000"
 24985      5369676E 
 24985      657200
 24986              	.LASF980:
 24987 0bf4 5365744D 		.ascii	"SetMinVersionHelper\000"
 24987      696E5665 
 24987      7273696F 
 24987      6E48656C 
 24987      70657200 
 24988              	.LASF1144:
 24989 0c08 776F6C66 		.ascii	"wolfSSL_load_error_strings\000"
 24989      53534C5F 
 24989      6C6F6164 
 24989      5F657272 
 24989      6F725F73 
 24990              	.LASF609:
 24991 0c23 73657475 		.ascii	"setup\000"
 24991      7000
 24992              	.LASF812:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 655


 24993 0c29 50524546 		.ascii	"PREFIX_ERROR\000"
 24993      49585F45 
 24993      52524F52 
 24993      00
 24994              	.LASF565:
 24995 0c36 69737375 		.ascii	"issuerKeyHash\000"
 24995      65724B65 
 24995      79486173 
 24995      6800
 24996              	.LASF690:
 24997 0c44 676F745F 		.ascii	"got_change_cipher\000"
 24997      6368616E 
 24997      67655F63 
 24997      69706865 
 24997      7200
 24998              	.LASF845:
 24999 0c56 5A4C4942 		.ascii	"ZLIB_COMPRESS_ERROR\000"
 24999      5F434F4D 
 24999      50524553 
 24999      535F4552 
 24999      524F5200 
 25000              	.LASF988:
 25001 0c6a 416C7265 		.ascii	"AlreadySigner\000"
 25001      61647953 
 25001      69676E65 
 25001      7200
 25002              	.LASF171:
 25003 0c78 63614C6F 		.ascii	"caLock\000"
 25003      636B00
 25004              	.LASF1024:
 25005 0c7f 776F6C66 		.ascii	"wolfSSL_CertManagerEnableOCSP\000"
 25005      53534C5F 
 25005      43657274 
 25005      4D616E61 
 25005      67657245 
 25006              	.LASF330:
 25007 0c9d 74797065 		.ascii	"type\000"
 25007      00
 25008              	.LASF1039:
 25009 0ca2 776F6C66 		.ascii	"wolfSSL_negotiate\000"
 25009      53534C5F 
 25009      6E65676F 
 25009      74696174 
 25009      6500
 25010              	.LASF153:
 25011 0cb4 64657243 		.ascii	"derCert\000"
 25011      65727400 
 25012              	.LASF801:
 25013 0cbc 414B4944 		.ascii	"AKID_E\000"
 25013      5F4500
 25014              	.LASF454:
 25015 0cc3 48454C4C 		.ascii	"HELLO_EXT_LEN\000"
 25015      4F5F4558 
 25015      545F4C45 
 25015      4E00
 25016              	.LASF583:
 25017 0cd1 4B657973 		.ascii	"Keys\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 656


 25017      00
 25018              	.LASF1125:
 25019 0cd6 63333274 		.ascii	"c32to24\000"
 25019      6F323400 
 25020              	.LASF653:
 25021 0cde 7573696E 		.ascii	"usingNonblock\000"
 25021      674E6F6E 
 25021      626C6F63 
 25021      6B00
 25022              	.LASF140:
 25023 0cec 574F4C46 		.ascii	"WOLFSSL_X509\000"
 25023      53534C5F 
 25023      58353039 
 25023      00
 25024              	.LASF1121:
 25025 0cf9 776F6C66 		.ascii	"wolfCrypt_Init\000"
 25025      43727970 
 25025      745F496E 
 25025      697400
 25026              	.LASF800:
 25027 0d08 534B4944 		.ascii	"SKID_E\000"
 25027      5F4500
 25028              	.LASF814:
 25029 0d0f 56455249 		.ascii	"VERIFY_FINISHED_ERROR\000"
 25029      46595F46 
 25029      494E4953 
 25029      4845445F 
 25029      4552524F 
 25030              	.LASF310:
 25031 0d25 5055424C 		.ascii	"PUBLICKEY_TYPE\000"
 25031      49434B45 
 25031      595F5459 
 25031      504500
 25032              	.LASF663:
 25033 0d34 61636365 		.ascii	"acceptState\000"
 25033      70745374 
 25033      61746500 
 25034              	.LASF197:
 25035 0d40 756E6578 		.ascii	"unexpected_message\000"
 25035      70656374 
 25035      65645F6D 
 25035      65737361 
 25035      676500
 25036              	.LASF881:
 25037 0d53 53534C5F 		.ascii	"SSL_NO_PEM_HEADER\000"
 25037      4E4F5F50 
 25037      454D5F48 
 25037      45414445 
 25037      5200
 25038              	.LASF594:
 25039 0d65 656E6372 		.ascii	"encryptionOn\000"
 25039      79707469 
 25039      6F6E4F6E 
 25039      00
 25040              	.LASF795:
 25041 0d72 5352505F 		.ascii	"SRP_VERIFY_E\000"
 25041      56455249 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 657


 25041      46595F45 
 25041      00
 25042              	.LASF507:
 25043 0d7f 52414242 		.ascii	"RABBIT_IV_SIZE\000"
 25043      49545F49 
 25043      565F5349 
 25043      5A4500
 25044              	.LASF678:
 25045 0d8e 676F745F 		.ascii	"got_client_hello\000"
 25045      636C6965 
 25045      6E745F68 
 25045      656C6C6F 
 25045      00
 25046              	.LASF584:
 25047 0d9f 636C6965 		.ascii	"client_write_MAC_secret\000"
 25047      6E745F77 
 25047      72697465 
 25047      5F4D4143 
 25047      5F736563 
 25048              	.LASF149:
 25049 0db7 6E6F7441 		.ascii	"notAfter\000"
 25049      66746572 
 25049      00
 25050              	.LASF1025:
 25051 0dc0 776F6C66 		.ascii	"wolfSSL_CertManagerDisableOCSP\000"
 25051      53534C5F 
 25051      43657274 
 25051      4D616E61 
 25051      67657244 
 25052              	.LASF285:
 25053 0ddf 62756666 		.ascii	"buffLen\000"
 25053      4C656E00 
 25054              	.LASF992:
 25055 0de7 7369676E 		.ascii	"signer\000"
 25055      657200
 25056              	.LASF622:
 25057 0dee 46495253 		.ascii	"FIRST_REPLY_FOURTH\000"
 25057      545F5245 
 25057      504C595F 
 25057      464F5552 
 25057      544800
 25058              	.LASF530:
 25059 0e01 48415348 		.ascii	"HASH_SIG_SIZE\000"
 25059      5F534947 
 25059      5F53495A 
 25059      4500
 25060              	.LASF248:
 25061 0e0f 53534C5F 		.ascii	"SSL_ERROR_WANT_READ\000"
 25061      4552524F 
 25061      525F5741 
 25061      4E545F52 
 25061      45414400 
 25062              	.LASF421:
 25063 0e23 50454D5F 		.ascii	"PEM_LINE_LEN\000"
 25063      4C494E45 
 25063      5F4C454E 
 25063      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 658


 25064              	.LASF596:
 25065 0e30 43697068 		.ascii	"CipherSpecs\000"
 25065      65725370 
 25065      65637300 
 25066              	.LASF906:
 25067 0e3c 4241445F 		.ascii	"BAD_TICKET_KEY_CB_SZ\000"
 25067      5449434B 
 25067      45545F4B 
 25067      45595F43 
 25067      425F535A 
 25068              	.LASF998:
 25069 0e51 696E666F 		.ascii	"info\000"
 25069      00
 25070              	.LASF20:
 25071 0e56 44594E41 		.ascii	"DYNAMIC_TYPE_SUBJECT_CN\000"
 25071      4D49435F 
 25071      54595045 
 25071      5F535542 
 25071      4A454354 
 25072              	.LASF926:
 25073 0e6e 68617368 		.ascii	"hashID\000"
 25073      494400
 25074              	.LASF346:
 25075 0e75 7375626A 		.ascii	"subjectCNLen\000"
 25075      65637443 
 25075      4E4C656E 
 25075      00
 25076              	.LASF16:
 25077 0e82 44594E41 		.ascii	"DYNAMIC_TYPE_CA\000"
 25077      4D49435F 
 25077      54595045 
 25077      5F434100 
 25078              	.LASF963:
 25079 0e92 776F6C66 		.ascii	"wolfSSL_want_read\000"
 25079      53534C5F 
 25079      77616E74 
 25079      5F726561 
 25079      6400
 25080              	.LASF825:
 25081 0ea4 46524541 		.ascii	"FREAD_ERROR\000"
 25081      445F4552 
 25081      524F5200 
 25082              	.LASF773:
 25083 0eb0 504B4353 		.ascii	"PKCS7_RECIP_E\000"
 25083      375F5245 
 25083      4349505F 
 25083      4500
 25084              	.LASF223:
 25085 0ebe 53534C5F 		.ascii	"SSL_SHUTDOWN_NOT_DONE\000"
 25085      53485554 
 25085      444F574E 
 25085      5F4E4F54 
 25085      5F444F4E 
 25086              	.LASF513:
 25087 0ed4 434C4945 		.ascii	"CLIENT_HELLO_FIRST\000"
 25087      4E545F48 
 25087      454C4C4F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 659


 25087      5F464952 
 25087      535400
 25088              	.LASF2:
 25089 0ee7 756E7369 		.ascii	"unsigned char\000"
 25089      676E6564 
 25089      20636861 
 25089      7200
 25090              	.LASF797:
 25091 0ef5 41534E5F 		.ascii	"ASN_NO_SKID\000"
 25091      4E4F5F53 
 25091      4B494400 
 25092              	.LASF613:
 25093 0f01 436F6E6E 		.ascii	"ConnectState\000"
 25093      65637453 
 25093      74617465 
 25093      00
 25094              	.LASF735:
 25095 0f0e 41534E5F 		.ascii	"ASN_BITSTR_E\000"
 25095      42495453 
 25095      54525F45 
 25095      00
 25096              	.LASF785:
 25097 0f1b 44524247 		.ascii	"DRBG_KAT_FIPS_E\000"
 25097      5F4B4154 
 25097      5F464950 
 25097      535F4500 
 25098              	.LASF699:
 25099 0f2b 4F50454E 		.ascii	"OPEN_RAN_E\000"
 25099      5F52414E 
 25099      5F4500
 25100              	.LASF874:
 25101 0f36 4F435350 		.ascii	"OCSP_NEED_URL\000"
 25101      5F4E4545 
 25101      445F5552 
 25101      4C00
 25102              	.LASF180:
 25103 0f44 574F4C46 		.ascii	"WOLFSSL_X509_STORE\000"
 25103      53534C5F 
 25103      58353039 
 25103      5F53544F 
 25103      524500
 25104              	.LASF229:
 25105 0f57 53534C5F 		.ascii	"SSL_BAD_FILE\000"
 25105      4241445F 
 25105      46494C45 
 25105      00
 25106              	.LASF110:
 25107 0f64 73657276 		.ascii	"serverID\000"
 25107      65724944 
 25107      00
 25108              	.LASF27:
 25109 0f6d 44594E41 		.ascii	"DYNAMIC_TYPE_OUT_BUFFER\000"
 25109      4D49435F 
 25109      54595045 
 25109      5F4F5554 
 25109      5F425546 
 25110              	.LASF355:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 660


 25111 0f85 65787465 		.ascii	"extensionsIdx\000"
 25111      6E73696F 
 25111      6E734964 
 25111      7800
 25112              	.LASF799:
 25113 0f93 41534E5F 		.ascii	"ASN_NO_KEYUSAGE\000"
 25113      4E4F5F4B 
 25113      45595553 
 25113      41474500 
 25114              	.LASF287:
 25115 0fa3 68694C65 		.ascii	"hiLen\000"
 25115      6E00
 25116              	.LASF857:
 25117 0fa9 4E545255 		.ascii	"NTRU_DRBG_ERROR\000"
 25117      5F445242 
 25117      475F4552 
 25117      524F5200 
 25118              	.LASF1007:
 25119 0fb9 656E6372 		.ascii	"encrypted_key\000"
 25119      79707465 
 25119      645F6B65 
 25119      7900
 25120              	.LASF742:
 25121 0fc7 41534E5F 		.ascii	"ASN_INPUT_E\000"
 25121      494E5055 
 25121      545F4500 
 25122              	.LASF658:
 25123 0fd3 73657276 		.ascii	"serverState\000"
 25123      65725374 
 25123      61746500 
 25124              	.LASF401:
 25125 0fdf 5A4C4942 		.ascii	"ZLIB_COMPRESSION\000"
 25125      5F434F4D 
 25125      50524553 
 25125      53494F4E 
 25125      00
 25126              	.LASF30:
 25127 0ff0 44594E41 		.ascii	"DYNAMIC_TYPE_DH\000"
 25127      4D49435F 
 25127      54595045 
 25127      5F444800 
 25128              	.LASF158:
 25129 1000 574F4C46 		.ascii	"WOLFSSL_X509_NAME\000"
 25129      53534C5F 
 25129      58353039 
 25129      5F4E414D 
 25129      4500
 25130              	.LASF286:
 25131 1012 6C6F4C65 		.ascii	"loLen\000"
 25131      6E00
 25132              	.LASF202:
 25133 1018 6E6F5F63 		.ascii	"no_certificate\000"
 25133      65727469 
 25133      66696361 
 25133      746500
 25134              	.LASF258:
 25135 1027 53534C5F 		.ascii	"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 661


 25135      4D4F4445 
 25135      5F414343 
 25135      4550545F 
 25135      4D4F5649 
 25136              	.LASF137:
 25137 104b 6D696E44 		.ascii	"minDowngrade\000"
 25137      6F776E67 
 25137      72616465 
 25137      00
 25138              	.LASF231:
 25139 1058 53534C5F 		.ascii	"SSL_UNKNOWN\000"
 25139      554E4B4E 
 25139      4F574E00 
 25140              	.LASF718:
 25141 1064 5253415F 		.ascii	"RSA_WRONG_TYPE_E\000"
 25141      57524F4E 
 25141      475F5459 
 25141      50455F45 
 25141      00
 25142              	.LASF1055:
 25143 1075 776F6C66 		.ascii	"wolfSSL_UnloadCertsKeys\000"
 25143      53534C5F 
 25143      556E6C6F 
 25143      61644365 
 25143      7274734B 
 25144              	.LASF1071:
 25145 108d 636F756E 		.ascii	"count_mutex\000"
 25145      745F6D75 
 25145      74657800 
 25146              	.LASF438:
 25147 1099 454E554D 		.ascii	"ENUM_LEN\000"
 25147      5F4C454E 
 25147      00
 25148              	.LASF345:
 25149 10a2 7369676E 		.ascii	"signature\000"
 25149      61747572 
 25149      6500
 25150              	.LASF19:
 25151 10ac 44594E41 		.ascii	"DYNAMIC_TYPE_FILE\000"
 25151      4D49435F 
 25151      54595045 
 25151      5F46494C 
 25151      4500
 25152              	.LASF1099:
 25153 10be 47657443 		.ascii	"GetCipherNamesSize\000"
 25153      69706865 
 25153      724E616D 
 25153      65735369 
 25153      7A6500
 25154              	.LASF150:
 25155 10d1 7369674F 		.ascii	"sigOID\000"
 25155      494400
 25156              	.LASF146:
 25157 10d8 6E6F7442 		.ascii	"notBeforeSz\000"
 25157      65666F72 
 25157      65537A00 
 25158              	.LASF431:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 662


 25159 10e4 52414E5F 		.ascii	"RAN_LEN\000"
 25159      4C454E00 
 25160              	.LASF556:
 25161 10ec 62756666 		.ascii	"bufferStatic\000"
 25161      65725374 
 25161      61746963 
 25161      00
 25162              	.LASF275:
 25163 10f9 43624F43 		.ascii	"CbOCSPIO\000"
 25163      5350494F 
 25163      00
 25164              	.LASF427:
 25165 1102 56455249 		.ascii	"VERIFY_HEADER\000"
 25165      46595F48 
 25165      45414445 
 25165      5200
 25166              	.LASF1042:
 25167 1110 75736572 		.ascii	"user_ctx\000"
 25167      5F637478 
 25167      00
 25168              	.LASF165:
 25169 1119 6F637370 		.ascii	"ocspOverrideURL\000"
 25169      4F766572 
 25169      72696465 
 25169      55524C00 
 25170              	.LASF106:
 25171 1129 73657373 		.ascii	"sessionID\000"
 25171      696F6E49 
 25171      4400
 25172              	.LASF682:
 25173 1133 676F745F 		.ascii	"got_certificate\000"
 25173      63657274 
 25173      69666963 
 25173      61746500 
 25174              	.LASF827:
 25175 1143 4E4F5F50 		.ascii	"NO_PRIVATE_KEY\000"
 25175      52495641 
 25175      54455F4B 
 25175      455900
 25176              	.LASF779:
 25177 1152 4C454E47 		.ascii	"LENGTH_ONLY_E\000"
 25177      54485F4F 
 25177      4E4C595F 
 25177      4500
 25178              	.LASF294:
 25179 1160 73746174 		.ascii	"status\000"
 25179      757300
 25180              	.LASF632:
 25181 1167 77654F77 		.ascii	"weOwnCert\000"
 25181      6E436572 
 25181      7400
 25182              	.LASF274:
 25183 1171 43624D69 		.ascii	"CbMissingCRL\000"
 25183      7373696E 
 25183      6743524C 
 25183      00
 25184              	.LASF94:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 663


 25185 117e 74696D65 		.ascii	"timeout\000"
 25185      6F757400 
 25186              	.LASF164:
 25187 1186 6F637370 		.ascii	"ocsp\000"
 25187      00
 25188              	.LASF416:
 25189 118b 4D41585F 		.ascii	"MAX_PAD_SIZE\000"
 25189      5041445F 
 25189      53495A45 
 25189      00
 25190              	.LASF1060:
 25191 1198 776F6C66 		.ascii	"wolfSSL_get_version\000"
 25191      53534C5F 
 25191      6765745F 
 25191      76657273 
 25191      696F6E00 
 25192              	.LASF875:
 25193 11ac 4F435350 		.ascii	"OCSP_CERT_UNKNOWN\000"
 25193      5F434552 
 25193      545F554E 
 25193      4B4E4F57 
 25193      4E00
 25194              	.LASF896:
 25195 11be 53454355 		.ascii	"SECURE_RENEGOTIATION_E\000"
 25195      52455F52 
 25195      454E4547 
 25195      4F544941 
 25195      54494F4E 
 25196              	.LASF127:
 25197 11d5 73656E64 		.ascii	"sendVerify\000"
 25197      56657269 
 25197      667900
 25198              	.LASF204:
 25199 11e0 756E7375 		.ascii	"unsupported_certificate\000"
 25199      70706F72 
 25199      7465645F 
 25199      63657274 
 25199      69666963 
 25200              	.LASF891:
 25201 11f8 554E4B4E 		.ascii	"UNKNOWN_MAX_FRAG_LEN_E\000"
 25201      4F574E5F 
 25201      4D41585F 
 25201      46524147 
 25201      5F4C454E 
 25202              	.LASF855:
 25203 120f 4E4F5F50 		.ascii	"NO_PEER_CERT\000"
 25203      4545525F 
 25203      43455254 
 25203      00
 25204              	.LASF47:
 25205 121c 44594E41 		.ascii	"DYNAMIC_TYPE_RNG\000"
 25205      4D49435F 
 25205      54595045 
 25205      5F524E47 
 25205      00
 25206              	.LASF655:
 25207 122d 70726F63 		.ascii	"processReply\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 664


 25207      65737352 
 25207      65706C79 
 25207      00
 25208              	.LASF768:
 25209 123a 41534E5F 		.ascii	"ASN_OCSP_CONFIRM_E\000"
 25209      4F435350 
 25209      5F434F4E 
 25209      4649524D 
 25209      5F4500
 25210              	.LASF521:
 25211 124d 4D41585F 		.ascii	"MAX_X509_SIZE\000"
 25211      58353039 
 25211      5F53495A 
 25211      4500
 25212              	.LASF1077:
 25213 125b 454E445F 		.ascii	"END_DH_PARAM\000"
 25213      44485F50 
 25213      4152414D 
 25213      00
 25214              	.LASF534:
 25215 1268 73746174 		.ascii	"states\000"
 25215      657300
 25216              	.LASF1040:
 25217 126f 776F6C66 		.ascii	"wolfSSL_connect_cert\000"
 25217      53534C5F 
 25217      636F6E6E 
 25217      6563745F 
 25217      63657274 
 25218              	.LASF592:
 25219 1284 656E6372 		.ascii	"encryptSz\000"
 25219      79707453 
 25219      7A00
 25220              	.LASF681:
 25221 128e 676F745F 		.ascii	"got_session_ticket\000"
 25221      73657373 
 25221      696F6E5F 
 25221      7469636B 
 25221      657400
 25222              	.LASF824:
 25223 12a1 454E4352 		.ascii	"ENCRYPT_ERROR\000"
 25223      5950545F 
 25223      4552524F 
 25223      5200
 25224              	.LASF717:
 25225 12af 4D454D4F 		.ascii	"MEMORY_E\000"
 25225      52595F45 
 25225      00
 25226              	.LASF35:
 25227 12b8 44594E41 		.ascii	"DYNAMIC_TYPE_OPENSSL\000"
 25227      4D49435F 
 25227      54595045 
 25227      5F4F5045 
 25227      4E53534C 
 25228              	.LASF77:
 25229 12cd 494F4342 		.ascii	"IOCB_ReadCtx\000"
 25229      5F526561 
 25229      64437478 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 665


 25229      00
 25230              	.LASF943:
 25231 12da 776F6C66 		.ascii	"wolfSSL_dtls\000"
 25231      53534C5F 
 25231      64746C73 
 25231      00
 25232              	.LASF563:
 25233 12e7 73696741 		.ascii	"sigAlgo\000"
 25233      6C676F00 
 25234              	.LASF958:
 25235 12ef 6F6C6446 		.ascii	"oldFlags\000"
 25235      6C616773 
 25235      00
 25236              	.LASF864:
 25237 12f8 4543435F 		.ascii	"ECC_EXPORT_ERROR\000"
 25237      4558504F 
 25237      52545F45 
 25237      52524F52 
 25237      00
 25238              	.LASF860:
 25239 1309 4543435F 		.ascii	"ECC_CURVETYPE_ERROR\000"
 25239      43555256 
 25239      45545950 
 25239      455F4552 
 25239      524F5200 
 25240              	.LASF833:
 25241 131d 57414E54 		.ascii	"WANT_READ\000"
 25241      5F524541 
 25241      4400
 25242              	.LASF652:
 25243 1327 63657274 		.ascii	"certOnly\000"
 25243      4F6E6C79 
 25243      00
 25244              	.LASF659:
 25245 1330 636C6965 		.ascii	"clientState\000"
 25245      6E745374 
 25245      61746500 
 25246              	.LASF866:
 25247 133c 4E4F545F 		.ascii	"NOT_CA_ERROR\000"
 25247      43415F45 
 25247      52524F52 
 25247      00
 25248              	.LASF1028:
 25249 1349 6D6F6465 		.ascii	"mode\000"
 25249      00
 25250              	.LASF802:
 25251 134e 4B455955 		.ascii	"KEYUSAGE_E\000"
 25251      53414745 
 25251      5F4500
 25252              	.LASF1072:
 25253 1359 42454749 		.ascii	"BEGIN_CERT\000"
 25253      4E5F4345 
 25253      525400
 25254              	.LASF816:
 25255 1364 50415253 		.ascii	"PARSE_ERROR\000"
 25255      455F4552 
 25255      524F5200 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 666


 25256              	.LASF78:
 25257 1370 494F4342 		.ascii	"IOCB_WriteCtx\000"
 25257      5F577269 
 25257      74654374 
 25257      7800
 25258              	.LASF1050:
 25259 137e 776F6C66 		.ascii	"wolfSSL_CTX_use_PrivateKey_buffer\000"
 25259      53534C5F 
 25259      4354585F 
 25259      7573655F 
 25259      50726976 
 25260              	.LASF336:
 25261 13a0 73696749 		.ascii	"sigIndex\000"
 25261      6E646578 
 25261      00
 25262              	.LASF50:
 25263 13a9 44594E41 		.ascii	"DYNAMIC_TYPE_SOCKADDR\000"
 25263      4D49435F 
 25263      54595045 
 25263      5F534F43 
 25263      4B414444 
 25264              	.LASF1037:
 25265 13bf 6E656564 		.ascii	"neededState\000"
 25265      65645374 
 25265      61746500 
 25266              	.LASF130:
 25267 13cb 68617665 		.ascii	"haveDH\000"
 25267      444800
 25268              	.LASF1095:
 25269 13d2 496E6974 		.ascii	"InitSSL\000"
 25269      53534C00 
 25270              	.LASF928:
 25271 13da 776F6C66 		.ascii	"wolfSSL_new\000"
 25271      53534C5F 
 25271      6E657700 
 25272              	.LASF612:
 25273 13e6 686D6163 		.ascii	"hmacfp\000"
 25273      667000
 25274              	.LASF842:
 25275 13ed 53455256 		.ascii	"SERVER_HINT_ERROR\000"
 25275      45525F48 
 25275      494E545F 
 25275      4552524F 
 25275      5200
 25276              	.LASF1100:
 25277 13ff 7374726E 		.ascii	"strncpy\000"
 25277      63707900 
 25278              	.LASF794:
 25279 1407 5352505F 		.ascii	"SRP_CALL_ORDER_E\000"
 25279      43414C4C 
 25279      5F4F5244 
 25279      45525F45 
 25279      00
 25280              	.LASF714:
 25281 1418 4D505F49 		.ascii	"MP_INVMOD_E\000"
 25281      4E564D4F 
 25281      445F4500 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 667


 25282              	.LASF155:
 25283 1424 616C744E 		.ascii	"altNamesNext\000"
 25283      616D6573 
 25283      4E657874 
 25283      00
 25284              	.LASF633:
 25285 1431 77654F77 		.ascii	"weOwnCertChain\000"
 25285      6E436572 
 25285      74436861 
 25285      696E00
 25286              	.LASF432:
 25287 1440 53454544 		.ascii	"SEED_LEN\000"
 25287      5F4C454E 
 25287      00
 25288              	.LASF308:
 25289 1449 4543435F 		.ascii	"ECC_TYPE\000"
 25289      54595045 
 25289      00
 25290              	.LASF921:
 25291 1452 776F6C66 		.ascii	"wolfSSL_CIPHER_get_name\000"
 25291      53534C5F 
 25291      43495048 
 25291      45525F67 
 25291      65745F6E 
 25292              	.LASF731:
 25293 146a 41534E5F 		.ascii	"ASN_RSA_KEY_E\000"
 25293      5253415F 
 25293      4B45595F 
 25293      4500
 25294              	.LASF1034:
 25295 1478 6C697374 		.ascii	"list\000"
 25295      00
 25296              	.LASF698:
 25297 147d 4D41585F 		.ascii	"MAX_CODE_E\000"
 25297      434F4445 
 25297      5F4500
 25298              	.LASF1098:
 25299 1488 47657443 		.ascii	"GetCipherNames\000"
 25299      69706865 
 25299      724E616D 
 25299      657300
 25300              	.LASF850:
 25301 1497 53455449 		.ascii	"SETITIMER_ERROR\000"
 25301      54494D45 
 25301      525F4552 
 25301      524F5200 
 25302              	.LASF477:
 25303 14a7 4145535F 		.ascii	"AES_256_KEY_SIZE\000"
 25303      3235365F 
 25303      4B45595F 
 25303      53495A45 
 25303      00
 25304              	.LASF1134:
 25305 14b8 53656E64 		.ascii	"SendCertificateVerify\000"
 25305      43657274 
 25305      69666963 
 25305      61746556 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 668


 25305      65726966 
 25306              	.LASF435:
 25307 14ce 4D41585F 		.ascii	"MAX_COOKIE_LEN\000"
 25307      434F4F4B 
 25307      49455F4C 
 25307      454E00
 25308              	.LASF1009:
 25309 14dd 70656D53 		.ascii	"pemSz\000"
 25309      7A00
 25310              	.LASF818:
 25311 14e3 534F434B 		.ascii	"SOCKET_ERROR_E\000"
 25311      45545F45 
 25311      52524F52 
 25311      5F4500
 25312              	.LASF469:
 25313 14f2 4D41585F 		.ascii	"MAX_PRF_LABSEED\000"
 25313      5052465F 
 25313      4C414253 
 25313      45454400 
 25314              	.LASF940:
 25315 1502 73697A65 		.ascii	"size\000"
 25315      00
 25316              	.LASF631:
 25317 1507 706C6169 		.ascii	"plainSz\000"
 25317      6E537A00 
 25318              	.LASF357:
 25319 150f 65787441 		.ascii	"extAuthInfoSz\000"
 25319      75746849 
 25319      6E666F53 
 25319      7A00
 25320              	.LASF1079:
 25321 151d 454E445F 		.ascii	"END_X509_CRL\000"
 25321      58353039 
 25321      5F43524C 
 25321      00
 25322              	.LASF311:
 25323 152a 5253415F 		.ascii	"RSA_PUBLICKEY_TYPE\000"
 25323      5055424C 
 25323      49434B45 
 25323      595F5459 
 25323      504500
 25324              	.LASF281:
 25325 153d 574F4C46 		.ascii	"WOLFSSL_AEAD_TYPE\000"
 25325      53534C5F 
 25325      41454144 
 25325      5F545950 
 25325      4500
 25326              	.LASF693:
 25327 154f 63657274 		.ascii	"certHashes\000"
 25327      48617368 
 25327      657300
 25328              	.LASF161:
 25329 155a 64796E61 		.ascii	"dynamicName\000"
 25329      6D69634E 
 25329      616D6500 
 25330              	.LASF969:
 25331 1566 776F6C66 		.ascii	"wolfSSL_FreeArrays\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 669


 25331      53534C5F 
 25331      46726565 
 25331      41727261 
 25331      797300
 25332              	.LASF71:
 25333 1579 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_BUFFER\000"
 25333      4D49435F 
 25333      54595045 
 25333      5F44544C 
 25333      535F4255 
 25334              	.LASF142:
 25335 1592 7375626A 		.ascii	"subject\000"
 25335      65637400 
 25336              	.LASF21:
 25337 159a 44594E41 		.ascii	"DYNAMIC_TYPE_PUBLIC_KEY\000"
 25337      4D49435F 
 25337      54595045 
 25337      5F505542 
 25337      4C49435F 
 25338              	.LASF680:
 25339 15b2 676F745F 		.ascii	"got_hello_verify_request\000"
 25339      68656C6C 
 25339      6F5F7665 
 25339      72696679 
 25339      5F726571 
 25340              	.LASF772:
 25341 15cb 504B4353 		.ascii	"PKCS7_OID_E\000"
 25341      375F4F49 
 25341      445F4500 
 25342              	.LASF611:
 25343 15d7 73686132 		.ascii	"sha256\000"
 25343      353600
 25344              	.LASF344:
 25345 15de 69737375 		.ascii	"issuerHash\000"
 25345      65724861 
 25345      736800
 25346              	.LASF683:
 25347 15e9 676F745F 		.ascii	"got_certificate_status\000"
 25347      63657274 
 25347      69666963 
 25347      6174655F 
 25347      73746174 
 25348              	.LASF977:
 25349 1600 776F6C66 		.ascii	"wolfSSL_pending\000"
 25349      53534C5F 
 25349      70656E64 
 25349      696E6700 
 25350              	.LASF1123:
 25351 1610 42617365 		.ascii	"Base64_Decode\000"
 25351      36345F44 
 25351      65636F64 
 25351      6500
 25352              	.LASF244:
 25353 161e 53534C5F 		.ascii	"SSL_SESS_CACHE_SERVER\000"
 25353      53455353 
 25353      5F434143 
 25353      48455F53 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 670


 25353      45525645 
 25354              	.LASF614:
 25355 1634 434F4E4E 		.ascii	"CONNECT_BEGIN\000"
 25355      4543545F 
 25355      42454749 
 25355      4E00
 25356              	.LASF91:
 25357 1642 6572726F 		.ascii	"error\000"
 25357      7200
 25358              	.LASF8:
 25359 1648 73697A65 		.ascii	"size_t\000"
 25359      5F7400
 25360              	.LASF66:
 25361 164f 44594E41 		.ascii	"DYNAMIC_TYPE_X509_EXT\000"
 25361      4D49435F 
 25361      54595045 
 25361      5F583530 
 25361      395F4558 
 25362              	.LASF504:
 25363 1665 48435F31 		.ascii	"HC_128_KEY_SIZE\000"
 25363      32385F4B 
 25363      45595F53 
 25363      495A4500 
 25364              	.LASF903:
 25365 1675 4455504C 		.ascii	"DUPLICATE_MSG_E\000"
 25365      49434154 
 25365      455F4D53 
 25365      475F4500 
 25366              	.LASF44:
 25367 1685 44594E41 		.ascii	"DYNAMIC_TYPE_ALTNAME\000"
 25367      4D49435F 
 25367      54595045 
 25367      5F414C54 
 25367      4E414D45 
 25368              	.LASF965:
 25369 169a 776F6C66 		.ascii	"wolfSSL_ERR_error_string\000"
 25369      53534C5F 
 25369      4552525F 
 25369      6572726F 
 25369      725F7374 
 25370              	.LASF220:
 25371 16b3 53534C5F 		.ascii	"SSL_ERROR_NONE\000"
 25371      4552524F 
 25371      525F4E4F 
 25371      4E4500
 25372              	.LASF339:
 25373 16c2 6B65794F 		.ascii	"keyOID\000"
 25373      494400
 25374              	.LASF124:
 25375 16c9 6661696C 		.ascii	"failNoCertxPSK\000"
 25375      4E6F4365 
 25375      72747850 
 25375      534B00
 25376              	.LASF719:
 25377 16d8 5253415F 		.ascii	"RSA_BUFFER_E\000"
 25377      42554646 
 25377      45525F45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 671


 25377      00
 25378              	.LASF456:
 25379 16e5 48454C4C 		.ascii	"HELLO_EXT_SIGALGO_MAX\000"
 25379      4F5F4558 
 25379      545F5349 
 25379      47414C47 
 25379      4F5F4D41 
 25380              	.LASF374:
 25381 16fb 61667465 		.ascii	"afterDateLen\000"
 25381      72446174 
 25381      654C656E 
 25381      00
 25382              	.LASF118:
 25383 1708 63657274 		.ascii	"certificate\000"
 25383      69666963 
 25383      61746500 
 25384              	.LASF732:
 25385 1714 41534E5F 		.ascii	"ASN_OBJECT_ID_E\000"
 25385      4F424A45 
 25385      43545F49 
 25385      445F4500 
 25386              	.LASF208:
 25387 1724 696C6C65 		.ascii	"illegal_parameter\000"
 25387      67616C5F 
 25387      70617261 
 25387      6D657465 
 25387      7200
 25388              	.LASF172:
 25389 1736 63726C45 		.ascii	"crlEnabled\000"
 25389      6E61626C 
 25389      656400
 25390              	.LASF692:
 25391 1741 76657269 		.ascii	"verifyHashes\000"
 25391      66794861 
 25391      73686573 
 25391      00
 25392              	.LASF25:
 25393 174e 44594E41 		.ascii	"DYNAMIC_TYPE_RSA\000"
 25393      4D49435F 
 25393      54595045 
 25393      5F525341 
 25393      00
 25394              	.LASF519:
 25395 175f 4D41585F 		.ascii	"MAX_PSK_KEY_LEN\000"
 25395      50534B5F 
 25395      4B45595F 
 25395      4C454E00 
 25396              	.LASF419:
 25397 176f 434F4D50 		.ascii	"COMPRESS_UPPER\000"
 25397      52455353 
 25397      5F555050 
 25397      455200
 25398              	.LASF362:
 25399 177e 65787441 		.ascii	"extAuthKeyId\000"
 25399      7574684B 
 25399      65794964 
 25399      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 672


 25400              	.LASF1062:
 25401 178b 776F6C66 		.ascii	"wolfSSL_lib_version\000"
 25401      53534C5F 
 25401      6C69625F 
 25401      76657273 
 25401      696F6E00 
 25402              	.LASF846:
 25403 179f 5A4C4942 		.ascii	"ZLIB_DECOMPRESS_ERROR\000"
 25403      5F444543 
 25403      4F4D5052 
 25403      4553535F 
 25403      4552524F 
 25404              	.LASF192:
 25405 17b5 65785F64 		.ascii	"ex_data\000"
 25405      61746100 
 25406              	.LASF80:
 25407 17bd 76657269 		.ascii	"verifyCallback\000"
 25407      66794361 
 25407      6C6C6261 
 25407      636B00
 25408              	.LASF370:
 25409 17cc 65787445 		.ascii	"extExtKeyUsage\000"
 25409      78744B65 
 25409      79557361 
 25409      676500
 25410              	.LASF61:
 25411 17db 44594E41 		.ascii	"DYNAMIC_TYPE_HASHES\000"
 25411      4D49435F 
 25411      54595045 
 25411      5F484153 
 25411      48455300 
 25412              	.LASF749:
 25413 17ef 4543435F 		.ascii	"ECC_BAD_ARG_E\000"
 25413      4241445F 
 25413      4152475F 
 25413      4500
 25414              	.LASF369:
 25415 17fd 65787445 		.ascii	"extExtKeyUsageSet\000"
 25415      78744B65 
 25415      79557361 
 25415      67655365 
 25415      7400
 25416              	.LASF791:
 25417 180f 49535F50 		.ascii	"IS_POINT_E\000"
 25417      4F494E54 
 25417      5F4500
 25418              	.LASF450:
 25419 181a 48494E54 		.ascii	"HINT_LEN_SZ\000"
 25419      5F4C454E 
 25419      5F535A00 
 25420              	.LASF676:
 25421 1826 4D736773 		.ascii	"MsgsReceived\000"
 25421      52656365 
 25421      69766564 
 25421      00
 25422              	.LASF126:
 25423 1833 73657373 		.ascii	"sessionCacheFlushOff\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 673


 25423      696F6E43 
 25423      61636865 
 25423      466C7573 
 25423      684F6666 
 25424              	.LASF590:
 25425 1848 70656572 		.ascii	"peer_sequence_number\000"
 25425      5F736571 
 25425      75656E63 
 25425      655F6E75 
 25425      6D626572 
 25426              	.LASF642:
 25427 185d 6973436C 		.ascii	"isClosed\000"
 25427      6F736564 
 25427      00
 25428              	.LASF915:
 25429 1866 4F435350 		.ascii	"OCSP_INVALID_STATUS\000"
 25429      5F494E56 
 25429      414C4944 
 25429      5F535441 
 25429      54555300 
 25430              	.LASF72:
 25431 187a 574F4C46 		.ascii	"WOLFSSL_MAX_ERROR_SZ\000"
 25431      53534C5F 
 25431      4D41585F 
 25431      4552524F 
 25431      525F535A 
 25432              	.LASF551:
 25433 188f 64796E54 		.ascii	"dynType\000"
 25433      79706500 
 25434              	.LASF1066:
 25435 1897 636C6965 		.ascii	"client\000"
 25435      6E7400
 25436              	.LASF853:
 25437 189e 5A45524F 		.ascii	"ZERO_RETURN\000"
 25437      5F524554 
 25437      55524E00 
 25438              	.LASF1081:
 25439 18aa 454E445F 		.ascii	"END_RSA_PRIV\000"
 25439      5253415F 
 25439      50524956 
 25439      00
 25440              	.LASF1106:
 25441 18b7 46726565 		.ascii	"FreeArrays\000"
 25441      41727261 
 25441      797300
 25442              	.LASF985:
 25443 18c2 68617665 		.ascii	"havePSK\000"
 25443      50534B00 
 25444              	.LASF856:
 25445 18ca 4E545255 		.ascii	"NTRU_KEY_ERROR\000"
 25445      5F4B4559 
 25445      5F455252 
 25445      4F5200
 25446              	.LASF913:
 25447 18d9 554E4B4E 		.ascii	"UNKNOWN_ALPN_PROTOCOL_NAME_E\000"
 25447      4F574E5F 
 25447      414C504E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 674


 25447      5F50524F 
 25447      544F434F 
 25448              	.LASF956:
 25449 18f6 776F6C66 		.ascii	"wolfSSL_send\000"
 25449      53534C5F 
 25449      73656E64 
 25449      00
 25450              	.LASF1111:
 25451 1903 496E6974 		.ascii	"InitMutex\000"
 25451      4D757465 
 25451      7800
 25452              	.LASF198:
 25453 190d 6261645F 		.ascii	"bad_record_mac\000"
 25453      7265636F 
 25453      72645F6D 
 25453      616300
 25454              	.LASF113:
 25455 191c 646F776E 		.ascii	"downgrade\000"
 25455      67726164 
 25455      6500
 25456              	.LASF758:
 25457 1926 4145535F 		.ascii	"AES_CCM_AUTH_E\000"
 25457      43434D5F 
 25457      41555448 
 25457      5F4500
 25458              	.LASF570:
 25459 1935 43524C5F 		.ascii	"CRL_Entry\000"
 25459      456E7472 
 25459      7900
 25460              	.LASF121:
 25461 193f 76657269 		.ascii	"verifyPeer\000"
 25461      66795065 
 25461      657200
 25462              	.LASF70:
 25463 194a 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_FRAG\000"
 25463      4D49435F 
 25463      54595045 
 25463      5F44544C 
 25463      535F4652 
 25464              	.LASF185:
 25465 1961 574F4C46 		.ascii	"WOLFSSL_ALERT_HISTORY\000"
 25465      53534C5F 
 25465      414C4552 
 25465      545F4849 
 25465      53544F52 
 25466              	.LASF982:
 25467 1977 776F6C66 		.ascii	"wolfSSL_CTX_SetMinVersion\000"
 25467      53534C5F 
 25467      4354585F 
 25467      5365744D 
 25467      696E5665 
 25468              	.LASF512:
 25469 1991 4D41585F 		.ascii	"MAX_CERT_VERIFY_SZ\000"
 25469      43455254 
 25469      5F564552 
 25469      4946595F 
 25469      535A00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 675


 25470              	.LASF154:
 25471 19a4 616C744E 		.ascii	"altNames\000"
 25471      616D6573 
 25471      00
 25472              	.LASF1084:
 25473 19ad 42454749 		.ascii	"BEGIN_ENC_PRIV_KEY\000"
 25473      4E5F454E 
 25473      435F5052 
 25473      49565F4B 
 25473      455900
 25474              	.LASF545:
 25475 19c0 48414E44 		.ascii	"HANDSHAKE_DONE\000"
 25475      5348414B 
 25475      455F444F 
 25475      4E4500
 25476              	.LASF978:
 25477 19cf 776F6C66 		.ascii	"wolfSSL_CTX_set_group_messages\000"
 25477      53534C5F 
 25477      4354585F 
 25477      7365745F 
 25477      67726F75 
 25478              	.LASF183:
 25479 19ee 636F6465 		.ascii	"code\000"
 25479      00
 25480              	.LASF453:
 25481 19f3 48454C4C 		.ascii	"HELLO_EXT_SZ\000"
 25481      4F5F4558 
 25481      545F535A 
 25481      00
 25482              	.LASF226:
 25483 1a00 53534C5F 		.ascii	"SSL_BAD_STAT\000"
 25483      4241445F 
 25483      53544154 
 25483      00
 25484              	.LASF391:
 25485 1a0d 44544C53 		.ascii	"DTLS_MINOR\000"
 25485      5F4D494E 
 25485      4F5200
 25486              	.LASF691:
 25487 1a18 48535F48 		.ascii	"HS_Hashes\000"
 25487      61736865 
 25487      7300
 25488              	.LASF713:
 25489 1a22 4D505F4D 		.ascii	"MP_MOD_E\000"
 25489      4F445F45 
 25489      00
 25490              	.LASF117:
 25491 1a2b 72656643 		.ascii	"refCount\000"
 25491      6F756E74 
 25491      00
 25492              	.LASF524:
 25493 1a34 46494C45 		.ascii	"FILE_BUFFER_SIZE\000"
 25493      5F425546 
 25493      4645525F 
 25493      53495A45 
 25493      00
 25494              	.LASF704:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 676


 25495 1a45 4241445F 		.ascii	"BAD_MUTEX_E\000"
 25495      4D555445 
 25495      585F4500 
 25496              	.LASF882:
 25497 1a51 4F55545F 		.ascii	"OUT_OF_ORDER_E\000"
 25497      4F465F4F 
 25497      52444552 
 25497      5F4500
 25498              	.LASF1011:
 25499 1a60 776F6C66 		.ascii	"wolfSSL_KeyPemToDer\000"
 25499      53534C5F 
 25499      4B657950 
 25499      656D546F 
 25499      44657200 
 25500              	.LASF667:
 25501 1a74 70656E64 		.ascii	"pendingMsgSz\000"
 25501      696E674D 
 25501      7367537A 
 25501      00
 25502              	.LASF837:
 25503 1a81 57414E54 		.ascii	"WANT_WRITE\000"
 25503      5F575249 
 25503      544500
 25504              	.LASF573:
 25505 1a8c 6C617374 		.ascii	"lastDateFormat\000"
 25505      44617465 
 25505      466F726D 
 25505      617400
 25506              	.LASF523:
 25507 1a9b 4D41585F 		.ascii	"MAX_FILENAME_SZ\000"
 25507      46494C45 
 25507      4E414D45 
 25507      5F535A00 
 25508              	.LASF269:
 25509 1aab 574F4C46 		.ascii	"WOLFSSL_TLSV1_1\000"
 25509      53534C5F 
 25509      544C5356 
 25509      315F3100 
 25510              	.LASF270:
 25511 1abb 574F4C46 		.ascii	"WOLFSSL_TLSV1_2\000"
 25511      53534C5F 
 25511      544C5356 
 25511      315F3200 
 25512              	.LASF835:
 25513 1acb 504D535F 		.ascii	"PMS_VERSION_ERROR\000"
 25513      56455253 
 25513      494F4E5F 
 25513      4552524F 
 25513      5200
 25514              	.LASF580:
 25515 1add 63726C4C 		.ascii	"crlList\000"
 25515      69737400 
 25516              	.LASF218:
 25517 1ae5 616C6572 		.ascii	"alert_fatal\000"
 25517      745F6661 
 25517      74616C00 
 25518              	.LASF725:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 677


 25519 1af1 49535355 		.ascii	"ISSUER_E\000"
 25519      45525F45 
 25519      00
 25520              	.LASF955:
 25521 1afa 776F6C66 		.ascii	"wolfSSL_read\000"
 25521      53534C5F 
 25521      72656164 
 25521      00
 25522              	.LASF999:
 25523 1b07 6563634B 		.ascii	"eccKey\000"
 25523      657900
 25524              	.LASF1140:
 25525 1b0e 2E2E5C61 		.ascii	"..\\acn-sdk-c\\src\\wolfSSL\\src\\ssl.c\000"
 25525      636E2D73 
 25525      646B2D63 
 25525      5C737263 
 25525      5C776F6C 
 25526              	.LASF973:
 25527 1b31 46726565 		.ascii	"FreeDer\000"
 25527      44657200 
 25528              	.LASF92:
 25529 1b39 72666C61 		.ascii	"rflags\000"
 25529      677300
 25530              	.LASF648:
 25531 1b40 68617665 		.ascii	"havePeerVerify\000"
 25531      50656572 
 25531      56657269 
 25531      667900
 25532              	.LASF826:
 25533 1b4f 4E4F5F50 		.ascii	"NO_PEER_KEY\000"
 25533      4545525F 
 25533      4B455900 
 25534              	.LASF372:
 25535 1b5b 6265666F 		.ascii	"beforeDateLen\000"
 25535      72654461 
 25535      74654C65 
 25535      6E00
 25536              	.LASF1031:
 25537 1b69 776F6C66 		.ascii	"wolfSSL_CTX_SetCACb\000"
 25537      53534C5F 
 25537      4354585F 
 25537      53657443 
 25537      41436200 
 25538              	.LASF437:
 25539 1b7d 53554954 		.ascii	"SUITE_LEN\000"
 25539      455F4C45 
 25539      4E00
 25540              	.LASF1006:
 25541 1b87 6E656564 		.ascii	"neededSz\000"
 25541      6564537A 
 25541      00
 25542              	.LASF508:
 25543 1b90 4556505F 		.ascii	"EVP_SALT_SIZE\000"
 25543      53414C54 
 25543      5F53495A 
 25543      4500
 25544              	.LASF1061:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 678


 25545 1b9e 776F6C66 		.ascii	"wolfSSL_GetObjectSize\000"
 25545      53534C5F 
 25545      4765744F 
 25545      626A6563 
 25545      7453697A 
 25546              	.LASF368:
 25547 1bb4 6578744B 		.ascii	"extKeyUsage\000"
 25547      65795573 
 25547      61676500 
 25548              	.LASF890:
 25549 1bc0 554E4B4E 		.ascii	"UNKNOWN_SNI_HOST_NAME_E\000"
 25549      4F574E5F 
 25549      534E495F 
 25549      484F5354 
 25549      5F4E414D 
 25550              	.LASF1010:
 25551 1bd8 62756666 		.ascii	"buffSz\000"
 25551      537A00
 25552              	.LASF162:
 25553 1bdf 574F4C46 		.ascii	"WOLFSSL_CERT_MANAGER\000"
 25553      53534C5F 
 25553      43455254 
 25553      5F4D414E 
 25553      41474552 
 25554              	.LASF58:
 25555 1bf4 44594E41 		.ascii	"DYNAMIC_TYPE_TLSX\000"
 25555      4D49435F 
 25555      54595045 
 25555      5F544C53 
 25555      5800
 25556              	.LASF941:
 25557 1c06 776F6C66 		.ascii	"wolfSSL_get_fd\000"
 25557      53534C5F 
 25557      6765745F 
 25557      666400
 25558              	.LASF836:
 25559 1c15 56455253 		.ascii	"VERSION_ERROR\000"
 25559      494F4E5F 
 25559      4552524F 
 25559      5200
 25560              	.LASF125:
 25561 1c23 73657373 		.ascii	"sessionCacheOff\000"
 25561      696F6E43 
 25561      61636865 
 25561      4F666600 
 25562              	.LASF334:
 25563 1c33 7075624B 		.ascii	"pubKeyStored\000"
 25563      65795374 
 25563      6F726564 
 25563      00
 25564              	.LASF415:
 25565 1c40 5041445F 		.ascii	"PAD_SHA\000"
 25565      53484100 
 25566              	.LASF284:
 25567 1c48 53686132 		.ascii	"Sha256\000"
 25567      353600
 25568              	.LASF182:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 679


 25569 1c4f 574F4C46 		.ascii	"WOLFSSL_ALERT\000"
 25569      53534C5F 
 25569      414C4552 
 25569      5400
 25570              	.LASF1096:
 25571 1c5d 46726565 		.ascii	"FreeSSL_Ctx\000"
 25571      53534C5F 
 25571      43747800 
 25572              	.LASF1138:
 25573 1c69 776F6C66 		.ascii	"wolfTLSv1_2_client_method\000"
 25573      544C5376 
 25573      315F325F 
 25573      636C6965 
 25573      6E745F6D 
 25574              	.LASF440:
 25575 1c83 4F504151 		.ascii	"OPAQUE16_LEN\000"
 25575      55453136 
 25575      5F4C454E 
 25575      00
 25576              	.LASF283:
 25577 1c90 48616E64 		.ascii	"HandShakeDoneCb\000"
 25577      5368616B 
 25577      65446F6E 
 25577      65436200 
 25578              	.LASF525:
 25579 1ca0 4D41585F 		.ascii	"MAX_NTRU_PUB_KEY_SZ\000"
 25579      4E545255 
 25579      5F505542 
 25579      5F4B4559 
 25579      5F535A00 
 25580              	.LASF488:
 25581 1cb4 41455347 		.ascii	"AESGCM_EXP_IV_SZ\000"
 25581      434D5F45 
 25581      58505F49 
 25581      565F535A 
 25581      00
 25582              	.LASF1129:
 25583 1cc5 53656E64 		.ascii	"SendBuffered\000"
 25583      42756666 
 25583      65726564 
 25583      00
 25584              	.LASF647:
 25585 1cd2 68617665 		.ascii	"havePeerCert\000"
 25585      50656572 
 25585      43657274 
 25585      00
 25586              	.LASF502:
 25587 1cdf 43484143 		.ascii	"CHACHA20_IV_SIZE\000"
 25587      48413230 
 25587      5F49565F 
 25587      53495A45 
 25587      00
 25588              	.LASF1004:
 25589 1cf0 636F6E73 		.ascii	"consumedEnd\000"
 25589      756D6564 
 25589      456E6400 
 25590              	.LASF876:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 680


 25591 1cfc 4F435350 		.ascii	"OCSP_LOOKUP_FAIL\000"
 25591      5F4C4F4F 
 25591      4B55505F 
 25591      4641494C 
 25591      00
 25592              	.LASF168:
 25593 1d0d 63624D69 		.ascii	"cbMissingCRL\000"
 25593      7373696E 
 25593      6743524C 
 25593      00
 25594              	.LASF483:
 25595 1d1a 41454144 		.ascii	"AEAD_VMAJ_OFFSET\000"
 25595      5F564D41 
 25595      4A5F4F46 
 25595      46534554 
 25595      00
 25596              	.LASF373:
 25597 1d2b 61667465 		.ascii	"afterDate\000"
 25597      72446174 
 25597      6500
 25598              	.LASF974:
 25599 1d35 776F6C66 		.ascii	"wolfSSL_CertManagerFree\000"
 25599      53534C5F 
 25599      43657274 
 25599      4D616E61 
 25599      67657246 
 25600              	.LASF572:
 25601 1d4d 6E657874 		.ascii	"nextDate\000"
 25601      44617465 
 25601      00
 25602              	.LASF129:
 25603 1d56 68617665 		.ascii	"haveECC\000"
 25603      45434300 
 25604              	.LASF778:
 25605 1d5e 5253415F 		.ascii	"RSA_PAD_E\000"
 25605      5041445F 
 25605      4500
 25606              	.LASF62:
 25607 1d68 44594E41 		.ascii	"DYNAMIC_TYPE_SRP\000"
 25607      4D49435F 
 25607      54595045 
 25607      5F535250 
 25607      00
 25608              	.LASF674:
 25609 1d79 70764D61 		.ascii	"pvMajor\000"
 25609      6A6F7200 
 25610              	.LASF351:
 25611 1d81 73726349 		.ascii	"srcIdx\000"
 25611      647800
 25612              	.LASF807:
 25613 1d88 5349475F 		.ascii	"SIG_TYPE_E\000"
 25613      54595045 
 25613      5F4500
 25614              	.LASF1104:
 25615 1d93 53657445 		.ascii	"SetErrorString\000"
 25615      72726F72 
 25615      53747269 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 681


 25615      6E6700
 25616              	.LASF959:
 25617 1da2 776F6C66 		.ascii	"wolfSSL_recv\000"
 25617      53534C5F 
 25617      72656376 
 25617      00
 25618              	.LASF753:
 25619 1daf 4E4F545F 		.ascii	"NOT_COMPILED_IN\000"
 25619      434F4D50 
 25619      494C4544 
 25619      5F494E00 
 25620              	.LASF636:
 25621 1dbf 4F707469 		.ascii	"Options\000"
 25621      6F6E7300 
 25622              	.LASF354:
 25623 1dc7 65787465 		.ascii	"extensionsSz\000"
 25623      6E73696F 
 25623      6E73537A 
 25623      00
 25624              	.LASF776:
 25625 1dd4 524E475F 		.ascii	"RNG_FAILURE_E\000"
 25625      4641494C 
 25625      5552455F 
 25625      4500
 25626              	.LASF384:
 25627 1de2 4D697363 		.ascii	"Misc\000"
 25627      00
 25628              	.LASF209:
 25629 1de7 64656372 		.ascii	"decrypt_error\000"
 25629      7970745F 
 25629      6572726F 
 25629      7200
 25630              	.LASF724:
 25631 1df5 5355424A 		.ascii	"SUBJECT_E\000"
 25631      4543545F 
 25631      4500
 25632              	.LASF315:
 25633 1dff 4354435F 		.ascii	"CTC_SHAwDSA\000"
 25633      53484177 
 25633      44534100 
 25634              	.LASF375:
 25635 1e0b 7375626A 		.ascii	"subjectRaw\000"
 25635      65637452 
 25635      617700
 25636              	.LASF981:
 25637 1e16 6D696E56 		.ascii	"minVersion\000"
 25637      65727369 
 25637      6F6E00
 25638              	.LASF74:
 25639 1e21 73756974 		.ascii	"suites\000"
 25639      657300
 25640              	.LASF405:
 25641 1e28 53495A45 		.ascii	"SIZEOF_SENDER\000"
 25641      4F465F53 
 25641      454E4445 
 25641      5200
 25642              	.LASF147:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 682


 25643 1e36 6E6F7442 		.ascii	"notBefore\000"
 25643      65666F72 
 25643      6500
 25644              	.LASF18:
 25645 1e40 44594E41 		.ascii	"DYNAMIC_TYPE_KEY\000"
 25645      4D49435F 
 25645      54595045 
 25645      5F4B4559 
 25645      00
 25646              	.LASF216:
 25647 1e51 416C6572 		.ascii	"AlertLevel\000"
 25647      744C6576 
 25647      656C00
 25648              	.LASF319:
 25649 1e5c 4354435F 		.ascii	"CTC_SHAwECDSA\000"
 25649      53484177 
 25649      45434453 
 25649      4100
 25650              	.LASF32:
 25651 1e6a 44594E41 		.ascii	"DYNAMIC_TYPE_SSL\000"
 25651      4D49435F 
 25651      54595045 
 25651      5F53534C 
 25651      00
 25652              	.LASF211:
 25653 1e7b 6E6F5F72 		.ascii	"no_renegotiation\000"
 25653      656E6567 
 25653      6F746961 
 25653      74696F6E 
 25653      00
 25654              	.LASF207:
 25655 1e8c 63657274 		.ascii	"certificate_unknown\000"
 25655      69666963 
 25655      6174655F 
 25655      756E6B6E 
 25655      6F776E00 
 25656              	.LASF352:
 25657 1ea0 6D617849 		.ascii	"maxIdx\000"
 25657      647800
 25658              	.LASF340:
 25659 1ea7 616C7445 		.ascii	"altEmailNames\000"
 25659      6D61696C 
 25659      4E616D65 
 25659      7300
 25660              	.LASF86:
 25661 1eb5 656E6372 		.ascii	"encrypt\000"
 25661      79707400 
 25662              	.LASF904:
 25663 1ebd 534E495F 		.ascii	"SNI_UNSUPPORTED\000"
 25663      554E5355 
 25663      50504F52 
 25663      54454400 
 25664              	.LASF715:
 25665 1ecd 4D505F43 		.ascii	"MP_CMP_E\000"
 25665      4D505F45 
 25665      00
 25666              	.LASF490:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 683


 25667 1ed6 43484143 		.ascii	"CHACHA20_IMP_IV_SZ\000"
 25667      48413230 
 25667      5F494D50 
 25667      5F49565F 
 25667      535A00
 25668              	.LASF883:
 25669 1ee9 4241445F 		.ascii	"BAD_KEA_TYPE_E\000"
 25669      4B45415F 
 25669      54595045 
 25669      5F4500
 25670              	.LASF392:
 25671 1ef8 44544C53 		.ascii	"DTLSv1_2_MINOR\000"
 25671      76315F32 
 25671      5F4D494E 
 25671      4F5200
 25672              	.LASF278:
 25673 1f07 574F4C46 		.ascii	"WOLFSSL_CLIENT_END\000"
 25673      53534C5F 
 25673      434C4945 
 25673      4E545F45 
 25673      4E4400
 25674              	.LASF43:
 25675 1f1a 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_ENTRY\000"
 25675      4D49435F 
 25675      54595045 
 25675      5F4F4353 
 25675      505F454E 
 25676              	.LASF290:
 25677 1f32 4F535F53 		.ascii	"OS_Seed\000"
 25677      65656400 
 25678              	.LASF962:
 25679 1f3a 776F6C66 		.ascii	"wolfSSL_get_alert_history\000"
 25679      53534C5F 
 25679      6765745F 
 25679      616C6572 
 25679      745F6869 
 25680              	.LASF410:
 25681 1f54 4D41585F 		.ascii	"MAX_MTU\000"
 25681      4D545500 
 25682              	.LASF695:
 25683 1f5c 456E6372 		.ascii	"EncryptedInfo\000"
 25683      79707465 
 25683      64496E66 
 25683      6F00
 25684              	.LASF486:
 25685 1f6a 41454144 		.ascii	"AEAD_AUTH_DATA_SZ\000"
 25685      5F415554 
 25685      485F4441 
 25685      54415F53 
 25685      5A00
 25686              	.LASF298:
 25687 1f7c 43657274 		.ascii	"CertType\000"
 25687      54797065 
 25687      00
 25688              	.LASF333:
 25689 1f85 7075624B 		.ascii	"pubKeySize\000"
 25689      65795369 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 684


 25689      7A6500
 25690              	.LASF304:
 25691 1f90 4543435F 		.ascii	"ECC_PRIVATEKEY_TYPE\000"
 25691      50524956 
 25691      4154454B 
 25691      45595F54 
 25691      59504500 
 25692              	.LASF750:
 25693 1fa4 41534E5F 		.ascii	"ASN_ECC_KEY_E\000"
 25693      4543435F 
 25693      4B45595F 
 25693      4500
 25694              	.LASF166:
 25695 1fb2 6F637370 		.ascii	"ocspIOCtx\000"
 25695      494F4374 
 25695      7800
 25696              	.LASF737:
 25697 1fbc 41534E5F 		.ascii	"ASN_DATE_SZ_E\000"
 25697      44415445 
 25697      5F535A5F 
 25697      4500
 25698              	.LASF1085:
 25699 1fca 454E445F 		.ascii	"END_ENC_PRIV_KEY\000"
 25699      454E435F 
 25699      50524956 
 25699      5F4B4559 
 25699      00
 25700              	.LASF156:
 25701 1fdb 64796E61 		.ascii	"dynamicMemory\000"
 25701      6D69634D 
 25701      656D6F72 
 25701      7900
 25702              	.LASF561:
 25703 1fe9 73657453 		.ascii	"setSuites\000"
 25703      75697465 
 25703      7300
 25704              	.LASF383:
 25705 1ff3 5265766F 		.ascii	"RevokedCert\000"
 25705      6B656443 
 25705      65727400 
 25706              	.LASF1047:
 25707 1fff 776F6C66 		.ascii	"wolfSSL_set_compression\000"
 25707      53534C5F 
 25707      7365745F 
 25707      636F6D70 
 25707      72657373 
 25708              	.LASF589:
 25709 2017 73657276 		.ascii	"server_write_IV\000"
 25709      65725F77 
 25709      72697465 
 25709      5F495600 
 25710              	.LASF660:
 25711 2027 68616E64 		.ascii	"handShakeState\000"
 25711      5368616B 
 25711      65537461 
 25711      746500
 25712              	.LASF1017:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 685


 25713 2036 63686169 		.ascii	"chainBuffer\000"
 25713      6E427566 
 25713      66657200 
 25714              	.LASF788:
 25715 2042 54485245 		.ascii	"THREAD_STORE_KEY_E\000"
 25715      41445F53 
 25715      544F5245 
 25715      5F4B4559 
 25715      5F4500
 25716              	.LASF1110:
 25717 2055 6D656D73 		.ascii	"memset\000"
 25717      657400
 25718              	.LASF531:
 25719 205c 4E4F5F43 		.ascii	"NO_CAVIUM_DEVICE\000"
 25719      41564955 
 25719      4D5F4445 
 25719      56494345 
 25719      00
 25720              	.LASF184:
 25721 206d 6C657665 		.ascii	"level\000"
 25721      6C00
 25722              	.LASF1126:
 25723 2073 4465636F 		.ascii	"DecodeToKey\000"
 25723      6465546F 
 25723      4B657900 
 25724              	.LASF1049:
 25725 207f 776F6C66 		.ascii	"wolfSSL_CTX_use_certificate_buffer\000"
 25725      53534C5F 
 25725      4354585F 
 25725      7573655F 
 25725      63657274 
 25726              	.LASF40:
 25727 20a2 44594E41 		.ascii	"DYNAMIC_TYPE_CERT_MANAGER\000"
 25727      4D49435F 
 25727      54595045 
 25727      5F434552 
 25727      545F4D41 
 25728              	.LASF679:
 25729 20bc 676F745F 		.ascii	"got_server_hello\000"
 25729      73657276 
 25729      65725F68 
 25729      656C6C6F 
 25729      00
 25730              	.LASF159:
 25731 20cd 6E616D65 		.ascii	"name\000"
 25731      00
 25732              	.LASF784:
 25733 20d2 5253415F 		.ascii	"RSA_KAT_FIPS_E\000"
 25733      4B41545F 
 25733      46495053 
 25733      5F4500
 25734              	.LASF353:
 25735 20e1 65787465 		.ascii	"extensions\000"
 25735      6E73696F 
 25735      6E7300
 25736              	.LASF640:
 25737 20ec 64746C73 		.ascii	"dtls\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 686


 25737      00
 25738              	.LASF971:
 25739 20f1 416C6C6F 		.ascii	"AllocDer\000"
 25739      63446572 
 25739      00
 25740              	.LASF250:
 25741 20fa 53534C5F 		.ascii	"SSL_ERROR_WANT_CONNECT\000"
 25741      4552524F 
 25741      525F5741 
 25741      4E545F43 
 25741      4F4E4E45 
 25742              	.LASF851:
 25743 2111 4C454E47 		.ascii	"LENGTH_ERROR\000"
 25743      54485F45 
 25743      52524F52 
 25743      00
 25744              	.LASF116:
 25745 211e 636F756E 		.ascii	"countMutex\000"
 25745      744D7574 
 25745      657800
 25746              	.LASF134:
 25747 2129 70617274 		.ascii	"partialWrite\000"
 25747      69616C57 
 25747      72697465 
 25747      00
 25748              	.LASF989:
 25749 2136 7369676E 		.ascii	"signers\000"
 25749      65727300 
 25750              	.LASF821:
 25751 213e 554E4B4E 		.ascii	"UNKNOWN_RECORD_TYPE\000"
 25751      4F574E5F 
 25751      5245434F 
 25751      52445F54 
 25751      59504500 
 25752              	.LASF871:
 25753 2152 43524C5F 		.ascii	"CRL_MISSING\000"
 25753      4D495353 
 25753      494E4700 
 25754              	.LASF723:
 25755 215e 44415445 		.ascii	"DATE_E\000"
 25755      5F4500
 25756              	.LASF834:
 25757 2165 4E4F545F 		.ascii	"NOT_READY_ERROR\000"
 25757      52454144 
 25757      595F4552 
 25757      524F5200 
 25758              	.LASF839:
 25759 2175 56455249 		.ascii	"VERIFY_CERT_ERROR\000"
 25759      46595F43 
 25759      4552545F 
 25759      4552524F 
 25759      5200
 25760              	.LASF789:
 25761 2187 54485245 		.ascii	"THREAD_STORE_SET_E\000"
 25761      41445F53 
 25761      544F5245 
 25761      5F534554 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 687


 25761      5F4500
 25762              	.LASF579:
 25763 219a 574F4C46 		.ascii	"WOLFSSL_CRL\000"
 25763      53534C5F 
 25763      43524C00 
 25764              	.LASF888:
 25765 21a6 46575249 		.ascii	"FWRITE_ERROR\000"
 25765      54455F45 
 25765      52524F52 
 25765      00
 25766              	.LASF471:
 25767 21b3 4D41585F 		.ascii	"MAX_REQUEST_SZ\000"
 25767      52455155 
 25767      4553545F 
 25767      535A00
 25768              	.LASF473:
 25769 21c2 5243345F 		.ascii	"RC4_KEY_SIZE\000"
 25769      4B45595F 
 25769      53495A45 
 25769      00
 25770              	.LASF783:
 25771 21cf 484D4143 		.ascii	"HMAC_KAT_FIPS_E\000"
 25771      5F4B4154 
 25771      5F464950 
 25771      535F4500 
 25772              	.LASF954:
 25773 21df 776F6C66 		.ascii	"wolfSSL_peek\000"
 25773      53534C5F 
 25773      7065656B 
 25773      00
 25774              	.LASF1107:
 25775 21ec 776F6C66 		.ascii	"wolfSSL_Free\000"
 25775      53534C5F 
 25775      46726565 
 25775      00
 25776              	.LASF494:
 25777 21f9 4145535F 		.ascii	"AES_CCM_16_AUTH_SZ\000"
 25777      43434D5F 
 25777      31365F41 
 25777      5554485F 
 25777      535A00
 25778              	.LASF782:
 25779 220c 44455333 		.ascii	"DES3_KAT_FIPS_E\000"
 25779      5F4B4154 
 25779      5F464950 
 25779      535F4500 
 25780              	.LASF585:
 25781 221c 73657276 		.ascii	"server_write_MAC_secret\000"
 25781      65725F77 
 25781      72697465 
 25781      5F4D4143 
 25781      5F736563 
 25782              	.LASF314:
 25783 2234 4374635F 		.ascii	"Ctc_SigType\000"
 25783      53696754 
 25783      79706500 
 25784              	.LASF628:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 688


 25785 2240 646F6D61 		.ascii	"domainName\000"
 25785      696E4E61 
 25785      6D6500
 25786              	.LASF332:
 25787 224b 7075626C 		.ascii	"publicKey\000"
 25787      69634B65 
 25787      7900
 25788              	.LASF979:
 25789 2255 776F6C66 		.ascii	"wolfSSL_set_group_messages\000"
 25789      53534C5F 
 25789      7365745F 
 25789      67726F75 
 25789      705F6D65 
 25790              	.LASF774:
 25791 2270 46495053 		.ascii	"FIPS_NOT_ALLOWED_E\000"
 25791      5F4E4F54 
 25791      5F414C4C 
 25791      4F574544 
 25791      5F4500
 25792              	.LASF215:
 25793 2283 416C6572 		.ascii	"AlertDescription\000"
 25793      74446573 
 25793      63726970 
 25793      74696F6E 
 25793      00
 25794              	.LASF618:
 25795 2294 46495253 		.ascii	"FIRST_REPLY_DONE\000"
 25795      545F5245 
 25795      504C595F 
 25795      444F4E45 
 25795      00
 25796              	.LASF14:
 25797 22a5 73697A65 		.ascii	"sizetype\000"
 25797      74797065 
 25797      00
 25798              	.LASF617:
 25799 22ae 48454C4C 		.ascii	"HELLO_AGAIN_REPLY\000"
 25799      4F5F4147 
 25799      41494E5F 
 25799      5245504C 
 25799      5900
 25800              	.LASF972:
 25801 22c0 70446572 		.ascii	"pDer\000"
 25801      00
 25802              	.LASF804:
 25803 22c5 57435F49 		.ascii	"WC_INIT_E\000"
 25803      4E49545F 
 25803      4500
 25804              	.LASF412:
 25805 22cf 4D41585F 		.ascii	"MAX_DH_SZ\000"
 25805      44485F53 
 25805      5A00
 25806              	.LASF17:
 25807 22d9 44594E41 		.ascii	"DYNAMIC_TYPE_CERT\000"
 25807      4D49435F 
 25807      54595045 
 25807      5F434552 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 689


 25807      5400
 25808              	.LASF923:
 25809 22eb 62756666 		.ascii	"buff\000"
 25809      00
 25810              	.LASF1082:
 25811 22f0 42454749 		.ascii	"BEGIN_PRIV_KEY\000"
 25811      4E5F5052 
 25811      49565F4B 
 25811      455900
 25812              	.LASF808:
 25813 22ff 48415348 		.ascii	"HASH_TYPE_E\000"
 25813      5F545950 
 25813      455F4500 
 25814              	.LASF927:
 25815 230b 6D797374 		.ascii	"mystrnstr\000"
 25815      726E7374 
 25815      7200
 25816              	.LASF575:
 25817 2315 63657274 		.ascii	"certs\000"
 25817      7300
 25818              	.LASF342:
 25819 231b 6578636C 		.ascii	"excludedNames\000"
 25819      75646564 
 25819      4E616D65 
 25819      7300
 25820              	.LASF4:
 25821 2329 73686F72 		.ascii	"short unsigned int\000"
 25821      7420756E 
 25821      7369676E 
 25821      65642069 
 25821      6E7400
 25822              	.LASF73:
 25823 233c 574F4C46 		.ascii	"WOLFSSL\000"
 25823      53534C00 
 25824              	.LASF9:
 25825 2344 7369676E 		.ascii	"signed char\000"
 25825      65642063 
 25825      68617200 
 25826              	.LASF67:
 25827 2350 44594E41 		.ascii	"DYNAMIC_TYPE_X509_STORE\000"
 25827      4D49435F 
 25827      54595045 
 25827      5F583530 
 25827      395F5354 
 25828              	.LASF257:
 25829 2368 53534C5F 		.ascii	"SSL_RECEIVED_SHUTDOWN\000"
 25829      52454345 
 25829      49564544 
 25829      5F534855 
 25829      54444F57 
 25830              	.LASF602:
 25831 237e 63697068 		.ascii	"cipher_type\000"
 25831      65725F74 
 25831      79706500 
 25832              	.LASF1064:
 25833 238a 776F6C66 		.ascii	"wolfSSL_get_current_cipher_suite\000"
 25833      53534C5F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 690


 25833      6765745F 
 25833      63757272 
 25833      656E745F 
 25834              	.LASF533:
 25835 23ab 434F5059 		.ascii	"COPY\000"
 25835      00
 25836              	.LASF518:
 25837 23b0 4D41585F 		.ascii	"MAX_PSK_ID_LEN\000"
 25837      50534B5F 
 25837      49445F4C 
 25837      454E00
 25838              	.LASF273:
 25839 23bf 43616C6C 		.ascii	"CallbackCACache\000"
 25839      6261636B 
 25839      43414361 
 25839      63686500 
 25840              	.LASF1128:
 25841 23cf 53657443 		.ascii	"SetCipherList\000"
 25841      69706865 
 25841      724C6973 
 25841      7400
 25842              	.LASF98:
 25843 23dd 6D736773 		.ascii	"msgsReceived\000"
 25843      52656365 
 25843      69766564 
 25843      00
 25844              	.LASF288:
 25845 23ea 64696765 		.ascii	"digest\000"
 25845      737400
 25846              	.LASF970:
 25847 23f1 776F6C66 		.ascii	"wolfSSL_GetMacSecret\000"
 25847      53534C5F 
 25847      4765744D 
 25847      61635365 
 25847      63726574 
 25848              	.LASF464:
 25849 2406 46494E49 		.ascii	"FINISHED_LABEL_SZ\000"
 25849      53484544 
 25849      5F4C4142 
 25849      454C5F53 
 25849      5A00
 25850              	.LASF995:
 25851 2418 776F6C66 		.ascii	"wolfSSL_CTX_new\000"
 25851      53534C5F 
 25851      4354585F 
 25851      6E657700 
 25852              	.LASF24:
 25853 2428 44594E41 		.ascii	"DYNAMIC_TYPE_BIGINT\000"
 25853      4D49435F 
 25853      54595045 
 25853      5F424947 
 25853      494E5400 
 25854              	.LASF889:
 25855 243c 43414348 		.ascii	"CACHE_MATCH_ERROR\000"
 25855      455F4D41 
 25855      5443485F 
 25855      4552524F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 691


 25855      5200
 25856              	.LASF57:
 25857 244e 44594E41 		.ascii	"DYNAMIC_TYPE_X509\000"
 25857      4D49435F 
 25857      54595045 
 25857      5F583530 
 25857      3900
 25858              	.LASF1020:
 25859 2460 70617274 		.ascii	"part\000"
 25859      00
 25860              	.LASF114:
 25861 2465 574F4C46 		.ascii	"WOLFSSL_CTX\000"
 25861      53534C5F 
 25861      43545800 
 25862              	.LASF210:
 25863 2471 70726F74 		.ascii	"protocol_version\000"
 25863      6F636F6C 
 25863      5F766572 
 25863      73696F6E 
 25863      00
 25864              	.LASF538:
 25865 2482 53455256 		.ascii	"SERVER_CERT_COMPLETE\000"
 25865      45525F43 
 25865      4552545F 
 25865      434F4D50 
 25865      4C455445 
 25866              	.LASF1087:
 25867 2497 454E445F 		.ascii	"END_EC_PRIV\000"
 25867      45435F50 
 25867      52495600 
 25868              	.LASF544:
 25869 24a3 434C4945 		.ascii	"CLIENT_FINISHED_COMPLETE\000"
 25869      4E545F46 
 25869      494E4953 
 25869      4845445F 
 25869      434F4D50 
 25870              	.LASF1131:
 25871 24bc 50726F63 		.ascii	"ProcessReply\000"
 25871      65737352 
 25871      65706C79 
 25871      00
 25872              	.LASF1052:
 25873 24c9 776F6C66 		.ascii	"wolfSSL_use_certificate_buffer\000"
 25873      53534C5F 
 25873      7573655F 
 25873      63657274 
 25873      69666963 
 25874              	.LASF217:
 25875 24e8 616C6572 		.ascii	"alert_warning\000"
 25875      745F7761 
 25875      726E696E 
 25875      6700
 25876              	.LASF1069:
 25877 24f6 746C735F 		.ascii	"tls_server\000"
 25877      73657276 
 25877      657200
 25878              	.LASF1142:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 692


 25879 2501 636D5F70 		.ascii	"cm_pick_method\000"
 25879      69636B5F 
 25879      6D657468 
 25879      6F6400
 25880              	.LASF1041:
 25881 2510 776F6C66 		.ascii	"wolfSSL_SetHsDoneCb\000"
 25881      53534C5F 
 25881      53657448 
 25881      73446F6E 
 25881      65436200 
 25882              	.LASF736:
 25883 2524 41534E5F 		.ascii	"ASN_UNKNOWN_OID_E\000"
 25883      554E4B4E 
 25883      4F574E5F 
 25883      4F49445F 
 25883      4500
 25884              	.LASF798:
 25885 2536 41534E5F 		.ascii	"ASN_NO_AKID\000"
 25885      4E4F5F41 
 25885      4B494400 
 25886              	.LASF501:
 25887 2542 43484143 		.ascii	"CHACHA20_128_KEY_SIZE\000"
 25887      48413230 
 25887      5F313238 
 25887      5F4B4559 
 25887      5F53495A 
 25888              	.LASF878:
 25889 2558 434F4F4B 		.ascii	"COOKIE_ERROR\000"
 25889      49455F45 
 25889      52524F52 
 25889      00
 25890              	.LASF1097:
 25891 2565 46726565 		.ascii	"FreeSSL\000"
 25891      53534C00 
 25892              	.LASF45:
 25893 256d 44594E41 		.ascii	"DYNAMIC_TYPE_SUITES\000"
 25893      4D49435F 
 25893      54595045 
 25893      5F535549 
 25893      54455300 
 25894              	.LASF1012:
 25895 2581 70617373 		.ascii	"pass\000"
 25895      00
 25896              	.LASF1036:
 25897 2586 776F6C66 		.ascii	"wolfSSL_connect\000"
 25897      53534C5F 
 25897      636F6E6E 
 25897      65637400 
 25898              	.LASF840:
 25899 2596 56455249 		.ascii	"VERIFY_SIGN_ERROR\000"
 25899      46595F53 
 25899      49474E5F 
 25899      4552524F 
 25899      5200
 25900              	.LASF85:
 25901 25a8 686D6163 		.ascii	"hmac\000"
 25901      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 693


 25902              	.LASF174:
 25903 25ad 6F637370 		.ascii	"ocspEnabled\000"
 25903      456E6162 
 25903      6C656400 
 25904              	.LASF1019:
 25905 25b9 62756666 		.ascii	"bufferSz\000"
 25905      6572537A 
 25905      00
 25906              	.LASF677:
 25907 25c2 676F745F 		.ascii	"got_hello_request\000"
 25907      68656C6C 
 25907      6F5F7265 
 25907      71756573 
 25907      7400
 25908              	.LASF615:
 25909 25d4 434C4945 		.ascii	"CLIENT_HELLO_SENT\000"
 25909      4E545F48 
 25909      454C4C4F 
 25909      5F53454E 
 25909      5400
 25910              	.LASF474:
 25911 25e6 4445535F 		.ascii	"DES_KEY_SIZE\000"
 25911      4B45595F 
 25911      53495A45 
 25911      00
 25912              	.LASF587:
 25913 25f3 73657276 		.ascii	"server_write_key\000"
 25913      65725F77 
 25913      72697465 
 25913      5F6B6579 
 25913      00
 25914              	.LASF966:
 25915 2604 6572724E 		.ascii	"errNumber\000"
 25915      756D6265 
 25915      7200
 25916              	.LASF262:
 25917 260e 53534C5F 		.ascii	"SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN\000"
 25917      525F5353 
 25917      4C56335F 
 25917      414C4552 
 25917      545F4345 
 25918              	.LASF329:
 25919 2634 6E616D65 		.ascii	"nameSz\000"
 25919      537A00
 25920              	.LASF620:
 25921 263b 46495253 		.ascii	"FIRST_REPLY_SECOND\000"
 25921      545F5245 
 25921      504C595F 
 25921      5345434F 
 25921      4E4400
 25922              	.LASF578:
 25923 264e 70617468 		.ascii	"path\000"
 25923      00
 25924              	.LASF254:
 25925 2653 53534C5F 		.ascii	"SSL_ERROR_ZERO_RETURN\000"
 25925      4552524F 
 25925      525F5A45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 694


 25925      524F5F52 
 25925      45545552 
 25926              	.LASF325:
 25927 2669 4354435F 		.ascii	"CTC_SHA512wECDSA\000"
 25927      53484135 
 25927      31327745 
 25927      43445341 
 25927      00
 25928              	.LASF76:
 25929 267a 68734861 		.ascii	"hsHashes\000"
 25929      73686573 
 25929      00
 25930              	.LASF139:
 25931 2683 4342494F 		.ascii	"CBIOSend\000"
 25931      53656E64 
 25931      00
 25932              	.LASF754:
 25933 268c 554E4943 		.ascii	"UNICODE_SIZE_E\000"
 25933      4F44455F 
 25933      53495A45 
 25933      5F4500
 25934              	.LASF911:
 25935 269b 5253415F 		.ascii	"RSA_SIGN_FAULT\000"
 25935      5349474E 
 25935      5F464155 
 25935      4C5400
 25936              	.LASF38:
 25937 26aa 44594E41 		.ascii	"DYNAMIC_TYPE_REVOKED\000"
 25937      4D49435F 
 25937      54595045 
 25937      5F524556 
 25937      4F4B4544 
 25938              	.LASF935:
 25939 26bf 63697068 		.ascii	"ciphers\000"
 25939      65727300 
 25940              	.LASF626:
 25941 26c7 696E7075 		.ascii	"inputBuffer\000"
 25941      74427566 
 25941      66657200 
 25942              	.LASF908:
 25943 26d3 4241445F 		.ascii	"BAD_TICKET_ENCRYPT\000"
 25943      5449434B 
 25943      45545F45 
 25943      4E435259 
 25943      505400
 25944              	.LASF95:
 25945 26e6 66726167 		.ascii	"fragOffset\000"
 25945      4F666673 
 25945      657400
 25946              	.LASF83:
 25947 26f1 6873446F 		.ascii	"hsDoneCtx\000"
 25947      6E654374 
 25947      7800
 25948              	.LASF557:
 25949 26fb 53756974 		.ascii	"Suites\000"
 25949      657300
 25950              	.LASF767:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 695


 25951 2702 41534E5F 		.ascii	"ASN_CRL_NO_SIGNER_E\000"
 25951      43524C5F 
 25951      4E4F5F53 
 25951      49474E45 
 25951      525F4500 
 25952              	.LASF539:
 25953 2716 53455256 		.ascii	"SERVER_KEYEXCHANGE_COMPLETE\000"
 25953      45525F4B 
 25953      45594558 
 25953      4348414E 
 25953      47455F43 
 25954              	.LASF100:
 25955 2732 63685665 		.ascii	"chVersion\000"
 25955      7273696F 
 25955      6E00
 25956              	.LASF148:
 25957 273c 6E6F7441 		.ascii	"notAfterSz\000"
 25957      66746572 
 25957      537A00
 25958              	.LASF697:
 25959 2747 636F6E73 		.ascii	"consumed\000"
 25959      756D6564 
 25959      00
 25960              	.LASF479:
 25961 2750 4145535F 		.ascii	"AES_IV_SIZE\000"
 25961      49565F53 
 25961      495A4500 
 25962              	.LASF323:
 25963 275c 4354435F 		.ascii	"CTC_SHA384wECDSA\000"
 25963      53484133 
 25963      38347745 
 25963      43445341 
 25963      00
 25964              	.LASF666:
 25965 276d 7072654D 		.ascii	"preMasterSz\000"
 25965      61737465 
 25965      72537A00 
 25966              	.LASF120:
 25967 2779 70726976 		.ascii	"privateKey\000"
 25967      6174654B 
 25967      657900
 25968              	.LASF1026:
 25969 2784 776F6C66 		.ascii	"wolfSSL_CertManagerEnableOCSPStapling\000"
 25969      53534C5F 
 25969      43657274 
 25969      4D616E61 
 25969      67657245 
 25970              	.LASF53:
 25971 27aa 44594E41 		.ascii	"DYNAMIC_TYPE_TMP_BUFFER\000"
 25971      4D49435F 
 25971      54595045 
 25971      5F544D50 
 25971      5F425546 
 25972              	.LASF1094:
 25973 27c2 776F6C66 		.ascii	"wolfSSL_Malloc\000"
 25973      53534C5F 
 25973      4D616C6C 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 696


 25973      6F6300
 25974              	.LASF810:
 25975 27d1 776F6C66 		.ascii	"wolfSSL_ErrorCodes\000"
 25975      53534C5F 
 25975      4572726F 
 25975      72436F64 
 25975      657300
 25976              	.LASF235:
 25977 27e4 53534C5F 		.ascii	"SSL_FILETYPE_DEFAULT\000"
 25977      46494C45 
 25977      54595045 
 25977      5F444546 
 25977      41554C54 
 25978              	.LASF293:
 25979 27f9 73656564 		.ascii	"seed\000"
 25979      00
 25980              	.LASF702:
 25981 27fe 43525950 		.ascii	"CRYPTGEN_E\000"
 25981      5447454E 
 25981      5F4500
 25982              	.LASF568:
 25983 2809 6F637370 		.ascii	"ocspList\000"
 25983      4C697374 
 25983      00
 25984              	.LASF424:
 25985 2812 5345515F 		.ascii	"SEQ_SZ\000"
 25985      535A00
 25986              	.LASF1058:
 25987 2819 776F6C66 		.ascii	"wolfSSL_get_shutdown\000"
 25987      53534C5F 
 25987      6765745F 
 25987      73687574 
 25987      646F776E 
 25988              	.LASF300:
 25989 282e 50524956 		.ascii	"PRIVATEKEY_TYPE\000"
 25989      4154454B 
 25989      45595F54 
 25989      59504500 
 25990              	.LASF11:
 25991 283e 6C6F6E67 		.ascii	"long int\000"
 25991      20696E74 
 25991      00
 25992              	.LASF470:
 25993 2847 4D41585F 		.ascii	"MAX_PRF_DIG\000"
 25993      5052465F 
 25993      44494700 
 25994              	.LASF371:
 25995 2853 6265666F 		.ascii	"beforeDate\000"
 25995      72654461 
 25995      746500
 25996              	.LASF1135:
 25997 285e 53656E64 		.ascii	"SendChangeCipher\000"
 25997      4368616E 
 25997      67654369 
 25997      70686572 
 25997      00
 25998              	.LASF918:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 697


 25999 286f 666F726D 		.ascii	"format\000"
 25999      617400
 26000              	.LASF1015:
 26001 2876 75736572 		.ascii	"userChain\000"
 26001      43686169 
 26001      6E00
 26002              	.LASF389:
 26003 2880 53454E44 		.ascii	"SEND_BLANK_CERT\000"
 26003      5F424C41 
 26003      4E4B5F43 
 26003      45525400 
 26004              	.LASF638:
 26005 2890 68617665 		.ascii	"haveSessionId\000"
 26005      53657373 
 26005      696F6E49 
 26005      6400
 26006              	.LASF359:
 26007 289e 65787443 		.ascii	"extCrlInfoSz\000"
 26007      726C496E 
 26007      666F537A 
 26007      00
 26008              	.LASF179:
 26009 28ab 574F4C46 		.ascii	"WOLFSSL_CIPHER\000"
 26009      53534C5F 
 26009      43495048 
 26009      455200
 26010              	.LASF706:
 26011 28ba 4D505F52 		.ascii	"MP_READ_E\000"
 26011      4541445F 
 26011      4500
 26012              	.LASF907:
 26013 28c4 4241445F 		.ascii	"BAD_TICKET_MSG_SZ\000"
 26013      5449434B 
 26013      45545F4D 
 26013      53475F53 
 26013      5A00
 26014              	.LASF686:
 26015 28d6 676F745F 		.ascii	"got_server_hello_done\000"
 26015      73657276 
 26015      65725F68 
 26015      656C6C6F 
 26015      5F646F6E 
 26016              	.LASF111:
 26017 28ec 574F4C46 		.ascii	"WOLFSSL_METHOD\000"
 26017      53534C5F 
 26017      4D455448 
 26017      4F4400
 26018              	.LASF46:
 26019 28fb 44594E41 		.ascii	"DYNAMIC_TYPE_CIPHER\000"
 26019      4D49435F 
 26019      54595045 
 26019      5F434950 
 26019      48455200 
 26020              	.LASF1090:
 26021 290f 42454749 		.ascii	"BEGIN_PUB_KEY\000"
 26021      4E5F5055 
 26021      425F4B45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 698


 26021      5900
 26022              	.LASF89:
 26023 291d 73657373 		.ascii	"session\000"
 26023      696F6E00 
 26024              	.LASF411:
 26025 2925 4D41585F 		.ascii	"MAX_UDP_SIZE\000"
 26025      5544505F 
 26025      53495A45 
 26025      00
 26026              	.LASF859:
 26027 2932 4E545255 		.ascii	"NTRU_DECRYPT_ERROR\000"
 26027      5F444543 
 26027      52595054 
 26027      5F455252 
 26027      4F5200
 26028              	.LASF1043:
 26029 2945 776F6C66 		.ascii	"wolfSSL_Cleanup\000"
 26029      53534C5F 
 26029      436C6561 
 26029      6E757000 
 26030              	.LASF263:
 26031 2955 53534C5F 		.ascii	"SSL_R_SSLV3_ALERT_BAD_CERTIFICATE\000"
 26031      525F5353 
 26031      4C56335F 
 26031      414C4552 
 26031      545F4241 
 26032              	.LASF948:
 26033 2977 70656572 		.ascii	"peerSz\000"
 26033      537A00
 26034              	.LASF102:
 26035 297e 6B657973 		.ascii	"keys\000"
 26035      00
 26036              	.LASF376:
 26037 2983 7375626A 		.ascii	"subjectRawLen\000"
 26037      65637452 
 26037      61774C65 
 26037      6E00
 26038              	.LASF743:
 26039 2991 41534E5F 		.ascii	"ASN_SIG_CONFIRM_E\000"
 26039      5349475F 
 26039      434F4E46 
 26039      49524D5F 
 26039      4500
 26040              	.LASF69:
 26041 29a3 44594E41 		.ascii	"DYNAMIC_TYPE_URL\000"
 26041      4D49435F 
 26041      54595045 
 26041      5F55524C 
 26041      00
 26042              	.LASF173:
 26043 29b4 63726C43 		.ascii	"crlCheckAll\000"
 26043      6865636B 
 26043      416C6C00 
 26044              	.LASF961:
 26045 29c0 776F6C66 		.ascii	"wolfSSL_get_error\000"
 26045      53534C5F 
 26045      6765745F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 699


 26045      6572726F 
 26045      7200
 26046              	.LASF1067:
 26047 29d2 73657276 		.ascii	"server\000"
 26047      657200
 26048              	.LASF452:
 26049 29d9 48454C4C 		.ascii	"HELLO_EXT_TYPE_SZ\000"
 26049      4F5F4558 
 26049      545F5459 
 26049      50455F53 
 26049      5A00
 26050              	.LASF811:
 26051 29eb 494E5055 		.ascii	"INPUT_CASE_ERROR\000"
 26051      545F4341 
 26051      53455F45 
 26051      52524F52 
 26051      00
 26052              	.LASF552:
 26053 29fc 73746174 		.ascii	"staticBuffer\000"
 26053      69634275 
 26053      66666572 
 26053      00
 26054              	.LASF994:
 26055 2a09 776F6C66 		.ascii	"wolfSSL_Init\000"
 26055      53534C5F 
 26055      496E6974 
 26055      00
 26056              	.LASF716:
 26057 2a16 4D505F5A 		.ascii	"MP_ZERO_E\000"
 26057      45524F5F 
 26057      4500
 26058              	.LASF739:
 26059 2a20 41534E5F 		.ascii	"ASN_AFTER_DATE_E\000"
 26059      41465445 
 26059      525F4441 
 26059      54455F45 
 26059      00
 26060              	.LASF1070:
 26061 2a31 696E6974 		.ascii	"initRefCount\000"
 26061      52656643 
 26061      6F756E74 
 26061      00
 26062              	.LASF673:
 26063 2a3e 5265636F 		.ascii	"RecordLayerHeader\000"
 26063      72644C61 
 26063      79657248 
 26063      65616465 
 26063      7200
 26064              	.LASF841:
 26065 2a50 434C4945 		.ascii	"CLIENT_ID_ERROR\000"
 26065      4E545F49 
 26065      445F4552 
 26065      524F5200 
 26066              	.LASF1029:
 26067 2a60 776F6C66 		.ascii	"wolfSSL_set_verify\000"
 26067      53534C5F 
 26067      7365745F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 700


 26067      76657269 
 26067      667900
 26068              	.LASF393:
 26069 2a73 53534C76 		.ascii	"SSLv3_MAJOR\000"
 26069      335F4D41 
 26069      4A4F5200 
 26070              	.LASF831:
 26071 2a7f 4241445F 		.ascii	"BAD_HELLO\000"
 26071      48454C4C 
 26071      4F00
 26072              	.LASF775:
 26073 2a89 41534E5F 		.ascii	"ASN_NAME_INVALID_E\000"
 26073      4E414D45 
 26073      5F494E56 
 26073      414C4944 
 26073      5F4500
 26074              	.LASF200:
 26075 2a9c 6465636F 		.ascii	"decompression_failure\000"
 26075      6D707265 
 26075      7373696F 
 26075      6E5F6661 
 26075      696C7572 
 26076              	.LASF302:
 26077 2ab2 43524C5F 		.ascii	"CRL_TYPE\000"
 26077      54595045 
 26077      00
 26078              	.LASF144:
 26079 2abb 73657269 		.ascii	"serial\000"
 26079      616C00
 26080              	.LASF543:
 26081 2ac2 434C4945 		.ascii	"CLIENT_KEYEXCHANGE_COMPLETE\000"
 26081      4E545F4B 
 26081      45594558 
 26081      4348414E 
 26081      47455F43 
 26082              	.LASF12:
 26083 2ade 6C6F6E67 		.ascii	"long unsigned int\000"
 26083      20756E73 
 26083      69676E65 
 26083      6420696E 
 26083      7400
 26084              	.LASF817:
 26085 2af0 554E4B4E 		.ascii	"UNKNOWN_HANDSHAKE_TYPE\000"
 26085      4F574E5F 
 26085      48414E44 
 26085      5348414B 
 26085      455F5459 
 26086              	.LASF463:
 26087 2b07 44544C53 		.ascii	"DTLS_POOL_SZ\000"
 26087      5F504F4F 
 26087      4C5F535A 
 26087      00
 26088              	.LASF451:
 26089 2b14 5452554E 		.ascii	"TRUNCATED_HMAC_SZ\000"
 26089      43415445 
 26089      445F484D 
 26089      41435F53 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 701


 26089      5A00
 26090              	.LASF764:
 26091 2b26 4241445F 		.ascii	"BAD_ALIGN_E\000"
 26091      414C4947 
 26091      4E5F4500 
 26092              	.LASF588:
 26093 2b32 636C6965 		.ascii	"client_write_IV\000"
 26093      6E745F77 
 26093      72697465 
 26093      5F495600 
 26094              	.LASF535:
 26095 2b42 4E554C4C 		.ascii	"NULL_STATE\000"
 26095      5F535441 
 26095      544500
 26096              	.LASF993:
 26097 2b4d 63657274 		.ascii	"cert\000"
 26097      00
 26098              	.LASF199:
 26099 2b52 7265636F 		.ascii	"record_overflow\000"
 26099      72645F6F 
 26099      76657266 
 26099      6C6F7700 
 26100              	.LASF997:
 26101 2b62 6C6F6E67 		.ascii	"longSz\000"
 26101      537A00
 26102              	.LASF705:
 26103 2b69 4D505F49 		.ascii	"MP_INIT_E\000"
 26103      4E49545F 
 26103      4500
 26104              	.LASF730:
 26105 2b73 41534E5F 		.ascii	"ASN_GETINT_E\000"
 26105      47455449 
 26105      4E545F45 
 26105      00
 26106              	.LASF707:
 26107 2b80 4D505F45 		.ascii	"MP_EXPTMOD_E\000"
 26107      5850544D 
 26107      4F445F45 
 26107      00
 26108              	.LASF378:
 26109 2b8d 6B657955 		.ascii	"keyUsage\000"
 26109      73616765 
 26109      00
 26110              	.LASF64:
 26111 2b96 44594E41 		.ascii	"DYNAMIC_TYPE_USER_CRYPTO\000"
 26111      4D49435F 
 26111      54595045 
 26111      5F555345 
 26111      525F4352 
 26112              	.LASF1032:
 26113 2baf 776F6C66 		.ascii	"wolfSSL_library_init\000"
 26113      53534C5F 
 26113      6C696272 
 26113      6172795F 
 26113      696E6974 
 26114              	.LASF934:
 26115 2bc4 7072696F 		.ascii	"priority\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 702


 26115      72697479 
 26115      00
 26116              	.LASF830:
 26117 2bcd 4255494C 		.ascii	"BUILD_MSG_ERROR\000"
 26117      445F4D53 
 26117      475F4552 
 26117      524F5200 
 26118              	.LASF56:
 26119 2bdd 44594E41 		.ascii	"DYNAMIC_TYPE_CAVIUM_RSA\000"
 26119      4D49435F 
 26119      54595045 
 26119      5F434156 
 26119      49554D5F 
 26120              	.LASF651:
 26121 2bf5 73656E64 		.ascii	"sendAlertState\000"
 26121      416C6572 
 26121      74537461 
 26121      746500
 26122              	.LASF546:
 26123 2c04 50726F74 		.ascii	"ProtocolVersion\000"
 26123      6F636F6C 
 26123      56657273 
 26123      696F6E00 
 26124              	.LASF15:
 26125 2c14 63686172 		.ascii	"char\000"
 26125      00
 26126              	.LASF560:
 26127 2c19 68617368 		.ascii	"hashSigAlgo\000"
 26127      53696741 
 26127      6C676F00 
 26128              	.LASF79:
 26129 2c25 76657269 		.ascii	"verifyCbCtx\000"
 26129      66794362 
 26129      43747800 
 26130              	.LASF1068:
 26131 2c31 746C735F 		.ascii	"tls_client\000"
 26131      636C6965 
 26131      6E7400
 26132              	.LASF482:
 26133 2c3c 41454144 		.ascii	"AEAD_TYPE_OFFSET\000"
 26133      5F545950 
 26133      455F4F46 
 26133      46534554 
 26133      00
 26134              	.LASF605:
 26135 2c4d 68617368 		.ascii	"hash_size\000"
 26135      5F73697A 
 26135      6500
 26136              	.LASF960:
 26137 2c57 776F6C66 		.ascii	"wolfSSL_shutdown\000"
 26137      53534C5F 
 26137      73687574 
 26137      646F776E 
 26137      00
 26138              	.LASF364:
 26139 2c68 6578744E 		.ascii	"extNameConstraintSet\000"
 26139      616D6543 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 703


 26139      6F6E7374 
 26139      7261696E 
 26139      74536574 
 26140              	.LASF528:
 26141 2c7d 4E4F5F53 		.ascii	"NO_SNIFF\000"
 26141      4E494646 
 26141      00
 26142              	.LASF650:
 26143 2c86 7573696E 		.ascii	"usingAnon_cipher\000"
 26143      67416E6F 
 26143      6E5F6369 
 26143      70686572 
 26143      00
 26144              	.LASF97:
 26145 2c97 63757252 		.ascii	"curRL\000"
 26145      4C00
 26146              	.LASF338:
 26147 2c9d 7369676E 		.ascii	"signatureOID\000"
 26147      61747572 
 26147      654F4944 
 26147      00
 26148              	.LASF133:
 26149 2caa 68617665 		.ascii	"haveStaticECC\000"
 26149      53746174 
 26149      69634543 
 26149      4300
 26150              	.LASF447:
 26151 2cb8 5245434F 		.ascii	"RECORD_HEADER_SZ\000"
 26151      52445F48 
 26151      45414445 
 26151      525F535A 
 26151      00
 26152              	.LASF917:
 26153 2cc9 4D415443 		.ascii	"MATCH_SUITE_ERROR\000"
 26153      485F5355 
 26153      4954455F 
 26153      4552524F 
 26153      5200
 26154              	.LASF829:
 26155 2cdb 4E4F5F44 		.ascii	"NO_DH_PARAMS\000"
 26155      485F5041 
 26155      52414D53 
 26155      00
 26156              	.LASF532:
 26157 2ce8 4E4F5F43 		.ascii	"NO_COPY\000"
 26157      4F505900 
 26158              	.LASF266:
 26159 2cf0 43616C6C 		.ascii	"CallbackIOSend\000"
 26159      6261636B 
 26159      494F5365 
 26159      6E6400
 26160              	.LASF675:
 26161 2cff 70764D69 		.ascii	"pvMinor\000"
 26161      6E6F7200 
 26162              	.LASF429:
 26163 2d07 4D41585F 		.ascii	"MAX_DH_SIZE\000"
 26163      44485F53 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 704


 26163      495A4500 
 26164              	.LASF160:
 26165 2d13 73746174 		.ascii	"staticName\000"
 26165      69634E61 
 26165      6D6500
 26166              	.LASF813:
 26167 2d1e 4D454D4F 		.ascii	"MEMORY_ERROR\000"
 26167      52595F45 
 26167      52524F52 
 26167      00
 26168              	.LASF279:
 26169 2d2b 574F4C46 		.ascii	"WOLFSSL_BLOCK_TYPE\000"
 26169      53534C5F 
 26169      424C4F43 
 26169      4B5F5459 
 26169      504500
 26170              	.LASF496:
 26171 2d3e 43414D45 		.ascii	"CAMELLIA_128_KEY_SIZE\000"
 26171      4C4C4941 
 26171      5F313238 
 26171      5F4B4559 
 26171      5F53495A 
 26172              	.LASF696:
 26173 2d54 6976537A 		.ascii	"ivSz\000"
 26173      00
 26174              	.LASF991:
 26175 2d59 41646443 		.ascii	"AddCA\000"
 26175      4100
 26176              	.LASF529:
 26177 2d5f 534E4946 		.ascii	"SNIFF\000"
 26177      4600
 26178              	.LASF762:
 26179 2d65 4445434F 		.ascii	"DECOMPRESS_INIT_E\000"
 26179      4D505245 
 26179      53535F49 
 26179      4E49545F 
 26179      4500
 26180              	.LASF869:
 26181 2d77 4F435350 		.ascii	"OCSP_CERT_REVOKED\000"
 26181      5F434552 
 26181      545F5245 
 26181      564F4B45 
 26181      4400
 26182              	.LASF347:
 26183 2d89 7375626A 		.ascii	"subjectCNEnc\000"
 26183      65637443 
 26183      4E456E63 
 26183      00
 26184              	.LASF276:
 26185 2d96 43624F43 		.ascii	"CbOCSPRespFree\000"
 26185      53505265 
 26185      73704672 
 26185      656500
 26186              	.LASF987:
 26187 2da5 68617368 		.ascii	"hash\000"
 26187      00
 26188              	.LASF1078:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 705


 26189 2daa 42454749 		.ascii	"BEGIN_X509_CRL\000"
 26189      4E5F5835 
 26189      30395F43 
 26189      524C00
 26190              	.LASF145:
 26191 2db9 7375626A 		.ascii	"subjectCN\000"
 26191      65637443 
 26191      4E00
 26192              	.LASF467:
 26193 2dc3 4B45595F 		.ascii	"KEY_LABEL_SZ\000"
 26193      4C414245 
 26193      4C5F535A 
 26193      00
 26194              	.LASF136:
 26195 2dd0 67726F75 		.ascii	"groupMessages\000"
 26195      704D6573 
 26195      73616765 
 26195      7300
 26196              	.LASF526:
 26197 2dde 4D41585F 		.ascii	"MAX_NTRU_ENCRYPT_SZ\000"
 26197      4E545255 
 26197      5F454E43 
 26197      52595054 
 26197      5F535A00 
 26198              	.LASF228:
 26199 2df2 53534C5F 		.ascii	"SSL_BAD_FILETYPE\000"
 26199      4241445F 
 26199      46494C45 
 26199      54595045 
 26199      00
 26200              	.LASF1092:
 26201 2e03 7374726C 		.ascii	"strlen\000"
 26201      656E00
 26202              	.LASF280:
 26203 2e0a 574F4C46 		.ascii	"WOLFSSL_STREAM_TYPE\000"
 26203      53534C5F 
 26203      53545245 
 26203      414D5F54 
 26203      59504500 
 26204              	.LASF135:
 26205 2e1e 71756965 		.ascii	"quietShutdown\000"
 26205      74536875 
 26205      74646F77 
 26205      6E00
 26206              	.LASF1075:
 26207 2e2c 454E445F 		.ascii	"END_CERT_REQ\000"
 26207      43455254 
 26207      5F524551 
 26207      00
 26208              	.LASF233:
 26209 2e39 53534C5F 		.ascii	"SSL_FILETYPE_ASN1\000"
 26209      46494C45 
 26209      54595045 
 26209      5F41534E 
 26209      3100
 26210              	.LASF1122:
 26211 2e4b 496E6974 		.ascii	"InitSSL_Ctx\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 706


 26211      53534C5F 
 26211      43747800 
 26212              	.LASF176:
 26213 2e57 6F637370 		.ascii	"ocspSendNonce\000"
 26213      53656E64 
 26213      4E6F6E63 
 26213      6500
 26214              	.LASF289:
 26215 2e65 62756666 		.ascii	"buffer\000"
 26215      657200
 26216              	.LASF832:
 26217 2e6c 444F4D41 		.ascii	"DOMAIN_NAME_MISMATCH\000"
 26217      494E5F4E 
 26217      414D455F 
 26217      4D49534D 
 26217      41544348 
 26218              	.LASF819:
 26219 2e81 534F434B 		.ascii	"SOCKET_NODATA\000"
 26219      45545F4E 
 26219      4F444154 
 26219      4100
 26220              	.LASF175:
 26221 2e8f 6F637370 		.ascii	"ocspCheckAll\000"
 26221      43686563 
 26221      6B416C6C 
 26221      00
 26222              	.LASF910:
 26223 2e9c 534E495F 		.ascii	"SNI_ABSENT_ERROR\000"
 26223      41425345 
 26223      4E545F45 
 26223      52524F52 
 26223      00
 26224              	.LASF953:
 26225 2ead 7065656B 		.ascii	"peek\000"
 26225      00
 26226              	.LASF947:
 26227 2eb2 70656572 		.ascii	"peer\000"
 26227      00
 26228              	.LASF152:
 26229 2eb7 7075624B 		.ascii	"pubKey\000"
 26229      657900
 26230              	.LASF748:
 26231 2ebe 41534E5F 		.ascii	"ASN_CRIT_EXT_E\000"
 26231      43524954 
 26231      5F455854 
 26231      5F4500
 26232              	.LASF1088:
 26233 2ecd 42454749 		.ascii	"BEGIN_DSA_PRIV\000"
 26233      4E5F4453 
 26233      415F5052 
 26233      495600
 26234              	.LASF517:
 26235 2edc 44544C53 		.ascii	"DTLS_TIMEOUT_MULTIPLIER\000"
 26235      5F54494D 
 26235      454F5554 
 26235      5F4D554C 
 26235      5449504C 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 707


 26236              	.LASF385:
 26237 2ef4 4543435F 		.ascii	"ECC_BYTE\000"
 26237      42595445 
 26237      00
 26238              	.LASF476:
 26239 2efd 4445535F 		.ascii	"DES_IV_SIZE\000"
 26239      49565F53 
 26239      495A4500 
 26240              	.LASF305:
 26241 2f09 4453415F 		.ascii	"DSA_PRIVATEKEY_TYPE\000"
 26241      50524956 
 26241      4154454B 
 26241      45595F54 
 26241      59504500 
 26242              	.LASF396:
 26243 2f1d 544C5376 		.ascii	"TLSv1_1_MINOR\000"
 26243      315F315F 
 26243      4D494E4F 
 26243      5200
 26244              	.LASF581:
 26245 2f2b 63726C4C 		.ascii	"crlLock\000"
 26245      6F636B00 
 26246              	.LASF712:
 26247 2f33 4D505F4D 		.ascii	"MP_MULMOD_E\000"
 26247      554C4D4F 
 26247      445F4500 
 26248              	.LASF870:
 26249 2f3f 43524C5F 		.ascii	"CRL_CERT_REVOKED\000"
 26249      43455254 
 26249      5F524556 
 26249      4F4B4544 
 26249      00
 26250              	.LASF604:
 26251 2f50 7369675F 		.ascii	"sig_algo\000"
 26251      616C676F 
 26251      00
 26252              	.LASF381:
 26253 2f59 43657274 		.ascii	"CertStatus\000"
 26253      53746174 
 26253      757300
 26254              	.LASF23:
 26255 2f64 44594E41 		.ascii	"DYNAMIC_TYPE_NONE\000"
 26255      4D49435F 
 26255      54595045 
 26255      5F4E4F4E 
 26255      4500
 26256              	.LASF790:
 26257 2f76 4D41435F 		.ascii	"MAC_CMP_FAILED_E\000"
 26257      434D505F 
 26257      4641494C 
 26257      45445F45 
 26257      00
 26258              	.LASF459:
 26259 2f87 44544C53 		.ascii	"DTLS_HANDSHAKE_EXTRA\000"
 26259      5F48414E 
 26259      44534841 
 26259      4B455F45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 708


 26259      58545241 
 26260              	.LASF307:
 26261 2f9c 4453415F 		.ascii	"DSA_TYPE\000"
 26261      54595045 
 26261      00
 26262              	.LASF195:
 26263 2fa5 64697363 		.ascii	"discardSessionCerts\000"
 26263      61726453 
 26263      65737369 
 26263      6F6E4365 
 26263      72747300 
 26264              	.LASF500:
 26265 2fb9 43484143 		.ascii	"CHACHA20_256_KEY_SIZE\000"
 26265      48413230 
 26265      5F323536 
 26265      5F4B4559 
 26265      5F53495A 
 26266              	.LASF420:
 26267 2fcf 434F4D50 		.ascii	"COMPRESS_LOWER\000"
 26267      52455353 
 26267      5F4C4F57 
 26267      455200
 26268              	.LASF900:
 26269 2fde 53455353 		.ascii	"SESSION_SECRET_CB_E\000"
 26269      494F4E5F 
 26269      53454352 
 26269      45545F43 
 26269      425F4500 
 26270              	.LASF805:
 26271 2ff2 5349475F 		.ascii	"SIG_VERIFY_E\000"
 26271      56455249 
 26271      46595F45 
 26271      00
 26272              	.LASF41:
 26273 2fff 44594E41 		.ascii	"DYNAMIC_TYPE_CRL_MONITOR\000"
 26273      4D49435F 
 26273      54595045 
 26273      5F43524C 
 26273      5F4D4F4E 
 26274              	.LASF591:
 26275 3018 73657175 		.ascii	"sequence_number\000"
 26275      656E6365 
 26275      5F6E756D 
 26275      62657200 
 26276              	.LASF188:
 26277 3028 574F4C46 		.ascii	"WOLFSSL_X509_STORE_CTX\000"
 26277      53534C5F 
 26277      58353039 
 26277      5F53544F 
 26277      52455F43 
 26278              	.LASF744:
 26279 303f 41534E5F 		.ascii	"ASN_SIG_HASH_E\000"
 26279      5349475F 
 26279      48415348 
 26279      5F4500
 26280              	.LASF423:
 26281 304e 56455253 		.ascii	"VERSION_SZ\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 709


 26281      494F4E5F 
 26281      535A00
 26282              	.LASF571:
 26283 3059 6C617374 		.ascii	"lastDate\000"
 26283      44617465 
 26283      00
 26284              	.LASF243:
 26285 3062 53534C5F 		.ascii	"SSL_SESS_CACHE_CLIENT\000"
 26285      53455353 
 26285      5F434143 
 26285      48455F43 
 26285      4C49454E 
 26286              	.LASF516:
 26287 3078 44544C53 		.ascii	"DTLS_TIMEOUT_MAX\000"
 26287      5F54494D 
 26287      454F5554 
 26287      5F4D4158 
 26287      00
 26288              	.LASF445:
 26289 3089 53455256 		.ascii	"SERVER_ID_LEN\000"
 26289      45525F49 
 26289      445F4C45 
 26289      4E00
 26290              	.LASF566:
 26291 3097 746F7461 		.ascii	"totalStatus\000"
 26291      6C537461 
 26291      74757300 
 26292              	.LASF865:
 26293 30a3 4543435F 		.ascii	"ECC_SHARED_ERROR\000"
 26293      53484152 
 26293      45445F45 
 26293      52524F52 
 26293      00
 26294              	.LASF1065:
 26295 30b4 776F6C66 		.ascii	"wolfSSL_get_cipher\000"
 26295      53534C5F 
 26295      6765745F 
 26295      63697068 
 26295      657200
 26296              	.LASF101:
 26297 30c7 73706563 		.ascii	"specs\000"
 26297      7300
 26298              	.LASF897:
 26299 30cd 53455353 		.ascii	"SESSION_TICKET_LEN_E\000"
 26299      494F4E5F 
 26299      5449434B 
 26299      45545F4C 
 26299      454E5F45 
 26300              	.LASF550:
 26301 30e2 44657242 		.ascii	"DerBuffer\000"
 26301      75666665 
 26301      7200
 26302              	.LASF688:
 26303 30ec 676F745F 		.ascii	"got_client_key_exchange\000"
 26303      636C6965 
 26303      6E745F6B 
 26303      65795F65 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 710


 26303      78636861 
 26304              	.LASF933:
 26305 3104 776F6C66 		.ascii	"wolfSSL_get_cipher_list\000"
 26305      53534C5F 
 26305      6765745F 
 26305      63697068 
 26305      65725F6C 
 26306              	.LASF892:
 26307 311c 4B455955 		.ascii	"KEYUSE_SIGNATURE_E\000"
 26307      53455F53 
 26307      49474E41 
 26307      54555245 
 26307      5F4500
 26308              	.LASF495:
 26309 312f 4145535F 		.ascii	"AES_CCM_8_AUTH_SZ\000"
 26309      43434D5F 
 26309      385F4155 
 26309      54485F53 
 26309      5A00
 26310              	.LASF786:
 26311 3141 44524247 		.ascii	"DRBG_CONT_FIPS_E\000"
 26311      5F434F4E 
 26311      545F4649 
 26311      50535F45 
 26311      00
 26312              	.LASF863:
 26313 3152 4543435F 		.ascii	"ECC_MAKEKEY_ERROR\000"
 26313      4D414B45 
 26313      4B45595F 
 26313      4552524F 
 26313      5200
 26314              	.LASF734:
 26315 3164 41534E5F 		.ascii	"ASN_EXPECT_0_E\000"
 26315      45585045 
 26315      43545F30 
 26315      5F4500
 26316              	.LASF944:
 26317 3173 776F6C66 		.ascii	"wolfSSL_set_using_nonblock\000"
 26317      53534C5F 
 26317      7365745F 
 26317      7573696E 
 26317      675F6E6F 
 26318              	.LASF729:
 26319 318e 41534E5F 		.ascii	"ASN_VERSION_E\000"
 26319      56455253 
 26319      494F4E5F 
 26319      4500
 26320              	.LASF793:
 26321 319c 4543435F 		.ascii	"ECC_PRIV_KEY_E\000"
 26321      50524956 
 26321      5F4B4559 
 26321      5F4500
 26322              	.LASF222:
 26323 31ab 53534C5F 		.ascii	"SSL_SUCCESS\000"
 26323      53554343 
 26323      45535300 
 26324              	.LASF487:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 711


 26325 31b7 41455347 		.ascii	"AESGCM_IMP_IV_SZ\000"
 26325      434D5F49 
 26325      4D505F49 
 26325      565F535A 
 26325      00
 26326              	.LASF607:
 26327 31c8 73746174 		.ascii	"static_ecdh\000"
 26327      69635F65 
 26327      63646800 
 26328              	.LASF1044:
 26329 31d4 72656C65 		.ascii	"release\000"
 26329      61736500 
 26330              	.LASF191:
 26331 31dc 646F6D61 		.ascii	"domain\000"
 26331      696E00
 26332              	.LASF899:
 26333 31e3 5343525F 		.ascii	"SCR_DIFFERENT_CERT_E\000"
 26333      44494646 
 26333      4552454E 
 26333      545F4345 
 26333      52545F45 
 26334              	.LASF514:
 26335 31f8 4D41585F 		.ascii	"MAX_SUITE_NAME\000"
 26335      53554954 
 26335      455F4E41 
 26335      4D4500
 26336              	.LASF291:
 26337 3207 57435F52 		.ascii	"WC_RNG\000"
 26337      4E4700
 26338              	.LASF296:
 26339 320e 5348415F 		.ascii	"SHA_DIGEST_SIZE\000"
 26339      44494745 
 26339      53545F53 
 26339      495A4500 
 26340              	.LASF1130:
 26341 321e 53656E64 		.ascii	"SendClientHello\000"
 26341      436C6965 
 26341      6E744865 
 26341      6C6C6F00 
 26342              	.LASF299:
 26343 322e 43455254 		.ascii	"CERT_TYPE\000"
 26343      5F545950 
 26343      4500
 26344              	.LASF1117:
 26345 3238 50617273 		.ascii	"ParseCert\000"
 26345      65436572 
 26345      7400
 26346              	.LASF313:
 26347 3242 54525553 		.ascii	"TRUSTED_PEER_TYPE\000"
 26347      5445445F 
 26347      50454552 
 26347      5F545950 
 26347      4500
 26348              	.LASF63:
 26349 3254 44594E41 		.ascii	"DYNAMIC_TYPE_COOKIE_PWD\000"
 26349      4D49435F 
 26349      54595045 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 712


 26349      5F434F4F 
 26349      4B49455F 
 26350              	.LASF55:
 26351 326c 44594E41 		.ascii	"DYNAMIC_TYPE_CAVIUM_TMP\000"
 26351      4D49435F 
 26351      54595045 
 26351      5F434156 
 26351      49554D5F 
 26352              	.LASF1143:
 26353 3284 466F7263 		.ascii	"ForceZero\000"
 26353      655A6572 
 26353      6F00
 26354              	.LASF643:
 26355 328e 636C6F73 		.ascii	"closeNotify\000"
 26355      654E6F74 
 26355      69667900 
 26356              	.LASF439:
 26357 329a 4F504151 		.ascii	"OPAQUE8_LEN\000"
 26357      5545385F 
 26357      4C454E00 
 26358              	.LASF1033:
 26359 32a6 776F6C66 		.ascii	"wolfSSL_CTX_set_cipher_list\000"
 26359      53534C5F 
 26359      4354585F 
 26359      7365745F 
 26359      63697068 
 26360              	.LASF657:
 26361 32c2 63697068 		.ascii	"cipherSuite\000"
 26361      65725375 
 26361      69746500 
 26362              	.LASF297:
 26363 32ce 5348415F 		.ascii	"SHA_PAD_SIZE\000"
 26363      5041445F 
 26363      53495A45 
 26363      00
 26364              	.LASF93:
 26365 32db 77666C61 		.ascii	"wflags\000"
 26365      677300
 26366              	.LASF414:
 26367 32e2 5041445F 		.ascii	"PAD_MD5\000"
 26367      4D443500 
 26368              	.LASF983:
 26369 32ea 776F6C66 		.ascii	"wolfSSL_SetMinVersion\000"
 26369      53534C5F 
 26369      5365744D 
 26369      696E5665 
 26369      7273696F 
 26370              	.LASF661:
 26371 3300 68616E64 		.ascii	"handShakeDone\000"
 26371      5368616B 
 26371      65446F6E 
 26371      6500
 26372              	.LASF919:
 26373 330e 776F6C66 		.ascii	"wolfSSL_CTX_load_verify_buffer\000"
 26373      53534C5F 
 26373      4354585F 
 26373      6C6F6164 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 713


 26373      5F766572 
 26374              	.LASF738:
 26375 332d 41534E5F 		.ascii	"ASN_BEFORE_DATE_E\000"
 26375      4245464F 
 26375      52455F44 
 26375      4154455F 
 26375      4500
 26376              	.LASF422:
 26377 333f 4C454E47 		.ascii	"LENGTH_SZ\000"
 26377      54485F53 
 26377      5A00
 26378              	.LASF593:
 26379 3349 70616453 		.ascii	"padSz\000"
 26379      7A00
 26380              	.LASF861:
 26381 334f 4543435F 		.ascii	"ECC_CURVE_ERROR\000"
 26381      43555256 
 26381      455F4552 
 26381      524F5200 
 26382              	.LASF1127:
 26383 335f 50617273 		.ascii	"ParseCertRelative\000"
 26383      65436572 
 26383      7452656C 
 26383      61746976 
 26383      6500
 26384              	.LASF277:
 26385 3371 574F4C46 		.ascii	"WOLFSSL_SERVER_END\000"
 26385      53534C5F 
 26385      53455256 
 26385      45525F45 
 26385      4E4400
 26386              	.LASF1063:
 26387 3384 776F6C66 		.ascii	"wolfSSL_lib_version_hex\000"
 26387      53534C5F 
 26387      6C69625F 
 26387      76657273 
 26387      696F6E5F 
 26388              	.LASF1074:
 26389 339c 42454749 		.ascii	"BEGIN_CERT_REQ\000"
 26389      4E5F4345 
 26389      52545F52 
 26389      455100
 26390              	.LASF951:
 26391 33ab 64617461 		.ascii	"data\000"
 26391      00
 26392              	.LASF366:
 26393 33b0 77654F77 		.ascii	"weOwnAltNames\000"
 26393      6E416C74 
 26393      4E616D65 
 26393      7300
 26394              	.LASF448:
 26395 33be 43455254 		.ascii	"CERT_HEADER_SZ\000"
 26395      5F484541 
 26395      4445525F 
 26395      535A00
 26396              	.LASF586:
 26397 33cd 636C6965 		.ascii	"client_write_key\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 714


 26397      6E745F77 
 26397      72697465 
 26397      5F6B6579 
 26397      00
 26398              	.LASF610:
 26399 33de 48617368 		.ascii	"Hashes\000"
 26399      657300
 26400              	.LASF367:
 26401 33e5 6578744B 		.ascii	"extKeyUsageSet\000"
 26401      65795573 
 26401      61676553 
 26401      657400
 26402              	.LASF823:
 26403 33f4 46415441 		.ascii	"FATAL_ERROR\000"
 26403      4C5F4552 
 26403      524F5200 
 26404              	.LASF838:
 26405 3400 42554646 		.ascii	"BUFFER_ERROR\000"
 26405      45525F45 
 26405      52524F52 
 26405      00
 26406              	.LASF441:
 26407 340d 4F504151 		.ascii	"OPAQUE24_LEN\000"
 26407      55453234 
 26407      5F4C454E 
 26407      00
 26408              	.LASF268:
 26409 341a 574F4C46 		.ascii	"WOLFSSL_TLSV1\000"
 26409      53534C5F 
 26409      544C5356 
 26409      3100
 26410              	.LASF81:
 26411 3428 68656170 		.ascii	"heap\000"
 26411      00
 26412              	.LASF536:
 26413 342d 53455256 		.ascii	"SERVER_HELLOVERIFYREQUEST_COMPLETE\000"
 26413      45525F48 
 26413      454C4C4F 
 26413      56455249 
 26413      46595245 
 26414              	.LASF872:
 26415 3450 4D4F4E49 		.ascii	"MONITOR_SETUP_E\000"
 26415      544F525F 
 26415      53455455 
 26415      505F4500 
 26416              	.LASF567:
 26417 3460 574F4C46 		.ascii	"WOLFSSL_OCSP\000"
 26417      53534C5F 
 26417      4F435350 
 26417      00
 26418              	.LASF905:
 26419 346d 534F434B 		.ascii	"SOCKET_PEER_CLOSED_E\000"
 26419      45545F50 
 26419      4545525F 
 26419      434C4F53 
 26419      45445F45 
 26420              	.LASF976:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 715


 26421 3482 776F6C66 		.ascii	"wolfSSL_CertManagerUnloadCAs\000"
 26421      53534C5F 
 26421      43657274 
 26421      4D616E61 
 26421      67657255 
 26422              	.LASF564:
 26423 349f 4F637370 		.ascii	"OcspEntry\000"
 26423      456E7472 
 26423      7900
 26424              	.LASF1046:
 26425 34a9 776F6C66 		.ascii	"wolfSSL_check_domain_name\000"
 26425      53534C5F 
 26425      63686563 
 26425      6B5F646F 
 26425      6D61696E 
 26426              	.LASF843:
 26427 34c3 50534B5F 		.ascii	"PSK_KEY_ERROR\000"
 26427      4B45595F 
 26427      4552524F 
 26427      5200
 26428              	.LASF60:
 26429 34d1 44594E41 		.ascii	"DYNAMIC_TYPE_SIGNATURE\000"
 26429      4D49435F 
 26429      54595045 
 26429      5F534947 
 26429      4E415455 
 26430              	.LASF1103:
 26431 34e8 53656E64 		.ascii	"SendAlert\000"
 26431      416C6572 
 26431      7400
 26432              	.LASF759:
 26433 34f2 43415649 		.ascii	"CAVIUM_INIT_E\000"
 26433      554D5F49 
 26433      4E49545F 
 26433      4500
 26434              	.LASF485:
 26435 3500 41454144 		.ascii	"AEAD_LEN_OFFSET\000"
 26435      5F4C454E 
 26435      5F4F4646 
 26435      53455400 
 26436              	.LASF669:
 26437 3510 636C6965 		.ascii	"clientRandom\000"
 26437      6E745261 
 26437      6E646F6D 
 26437      00
 26438              	.LASF1120:
 26439 351d 46726565 		.ascii	"FreeSigner\000"
 26439      5369676E 
 26439      657200
 26440              	.LASF771:
 26441 3528 5245515F 		.ascii	"REQ_ATTRIBUTE_E\000"
 26441      41545452 
 26441      49425554 
 26441      455F4500 
 26442              	.LASF461:
 26443 3538 44544C53 		.ascii	"DTLS_HANDSHAKE_SEQ_SZ\000"
 26443      5F48414E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 716


 26443      44534841 
 26443      4B455F53 
 26443      45515F53 
 26444              	.LASF433:
 26445 354e 49445F4C 		.ascii	"ID_LEN\000"
 26445      454E00
 26446              	.LASF361:
 26447 3555 65787453 		.ascii	"extSubjKeyIdSet\000"
 26447      75626A4B 
 26447      65794964 
 26447      53657400 
 26448              	.LASF741:
 26449 3565 41534E5F 		.ascii	"ASN_TIME_E\000"
 26449      54494D45 
 26449      5F4500
 26450              	.LASF318:
 26451 3570 4354435F 		.ascii	"CTC_SHAwRSA\000"
 26451      53484177 
 26451      52534100 
 26452              	.LASF752:
 26453 357c 4241445F 		.ascii	"BAD_FUNC_ARG\000"
 26453      46554E43 
 26453      5F415247 
 26453      00
 26454              	.LASF1091:
 26455 3589 454E445F 		.ascii	"END_PUB_KEY\000"
 26455      5055425F 
 26455      4B455900 
 26456              	.LASF624:
 26457 3595 5345434F 		.ascii	"SECOND_REPLY_DONE\000"
 26457      4E445F52 
 26457      45504C59 
 26457      5F444F4E 
 26457      4500
 26458              	.LASF922:
 26459 35a7 50726F63 		.ascii	"ProcessChainBuffer\000"
 26459      65737343 
 26459      6861696E 
 26459      42756666 
 26459      657200
 26460              	.LASF703:
 26461 35ba 52414E5F 		.ascii	"RAN_BLOCK_E\000"
 26461      424C4F43 
 26461      4B5F4500 
 26462              	.LASF335:
 26463 35c6 63657274 		.ascii	"certBegin\000"
 26463      42656769 
 26463      6E00
 26464              	.LASF1076:
 26465 35d0 42454749 		.ascii	"BEGIN_DH_PARAM\000"
 26465      4E5F4448 
 26465      5F504152 
 26465      414D00
 26466              	.LASF326:
 26467 35df 444E535F 		.ascii	"DNS_entry\000"
 26467      656E7472 
 26467      7900
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 717


 26468              	.LASF292:
 26469 35e9 64726267 		.ascii	"drbg\000"
 26469      00
 26470              	.LASF685:
 26471 35ee 676F745F 		.ascii	"got_certificate_request\000"
 26471      63657274 
 26471      69666963 
 26471      6174655F 
 26471      72657175 
 26472              	.LASF242:
 26473 3606 53534C5F 		.ascii	"SSL_SESS_CACHE_OFF\000"
 26473      53455353 
 26473      5F434143 
 26473      48455F4F 
 26473      464600
 26474              	.LASF417:
 26475 3619 434F4D50 		.ascii	"COMPRESS_DUMMY_SIZE\000"
 26475      52455353 
 26475      5F44554D 
 26475      4D595F53 
 26475      495A4500 
 26476              	.LASF634:
 26477 362d 77654F77 		.ascii	"weOwnKey\000"
 26477      6E4B6579 
 26477      00
 26478              	.LASF234:
 26479 3636 53534C5F 		.ascii	"SSL_FILETYPE_PEM\000"
 26479      46494C45 
 26479      54595045 
 26479      5F50454D 
 26479      00
 26480              	.LASF854:
 26481 3647 53494445 		.ascii	"SIDE_ERROR\000"
 26481      5F455252 
 26481      4F5200
 26482              	.LASF22:
 26483 3652 44594E41 		.ascii	"DYNAMIC_TYPE_SIGNER\000"
 26483      4D49435F 
 26483      54595045 
 26483      5F534947 
 26483      4E455200 
 26484              	.LASF1108:
 26485 3666 46726565 		.ascii	"FreeSignerTable\000"
 26485      5369676E 
 26485      65725461 
 26485      626C6500 
 26486              	.LASF398:
 26487 3676 4F4C445F 		.ascii	"OLD_HELLO_ID\000"
 26487      48454C4C 
 26487      4F5F4944 
 26487      00
 26488              	.LASF895:
 26489 3683 53454E44 		.ascii	"SEND_OOB_READ_E\000"
 26489      5F4F4F42 
 26489      5F524541 
 26489      445F4500 
 26490              	.LASF728:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 718


 26491 3693 41534E5F 		.ascii	"ASN_PARSE_E\000"
 26491      50415253 
 26491      455F4500 
 26492              	.LASF606:
 26493 369f 7061645F 		.ascii	"pad_size\000"
 26493      73697A65 
 26493      00
 26494              	.LASF457:
 26495 36a8 44544C53 		.ascii	"DTLS_HANDSHAKE_HEADER_SZ\000"
 26495      5F48414E 
 26495      44534841 
 26495      4B455F48 
 26495      45414445 
 26496              	.LASF949:
 26497 36c1 776F6C66 		.ascii	"wolfSSL_dtls_get_peer\000"
 26497      53534C5F 
 26497      64746C73 
 26497      5F676574 
 26497      5F706565 
 26498              	.LASF1137:
 26499 36d7 46726565 		.ascii	"FreeHandshakeResources\000"
 26499      48616E64 
 26499      7368616B 
 26499      65526573 
 26499      6F757263 
 26500              	.LASF65:
 26501 36ee 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_REQUEST\000"
 26501      4D49435F 
 26501      54595045 
 26501      5F4F4353 
 26501      505F5245 
 26502              	.LASF964:
 26503 3708 776F6C66 		.ascii	"wolfSSL_want_write\000"
 26503      53534C5F 
 26503      77616E74 
 26503      5F777269 
 26503      746500
 26504              	.LASF132:
 26505 371b 68617665 		.ascii	"haveECDSAsig\000"
 26505      45434453 
 26505      41736967 
 26505      00
 26506              	.LASF616:
 26507 3728 48454C4C 		.ascii	"HELLO_AGAIN\000"
 26507      4F5F4147 
 26507      41494E00 
 26508              	.LASF1054:
 26509 3734 776F6C66 		.ascii	"wolfSSL_use_certificate_chain_buffer\000"
 26509      53534C5F 
 26509      7573655F 
 26509      63657274 
 26509      69666963 
 26510              	.LASF7:
 26511 3759 6C6F6E67 		.ascii	"long long unsigned int\000"
 26511      206C6F6E 
 26511      6720756E 
 26511      7369676E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 719


 26511      65642069 
 26512              	.LASF555:
 26513 3770 6F666673 		.ascii	"offset\000"
 26513      657400
 26514              	.LASF1002:
 26515 3777 68656164 		.ascii	"headerEnd\000"
 26515      6572456E 
 26515      6400
 26516              	.LASF645:
 26517 3781 7573696E 		.ascii	"usingCompression\000"
 26517      67436F6D 
 26517      70726573 
 26517      73696F6E 
 26517      00
 26518              	.LASF225:
 26519 3792 53534C5F 		.ascii	"SSL_BAD_CERTTYPE\000"
 26519      4241445F 
 26519      43455254 
 26519      54595045 
 26519      00
 26520              	.LASF143:
 26521 37a3 73657269 		.ascii	"serialSz\000"
 26521      616C537A 
 26521      00
 26522              	.LASF967:
 26523 37ac 776F6C66 		.ascii	"wolfSSL_ERR_error_string_n\000"
 26523      53534C5F 
 26523      4552525F 
 26523      6572726F 
 26523      725F7374 
 26524              	.LASF582:
 26525 37c7 6D6F6E69 		.ascii	"monitors\000"
 26525      746F7273 
 26525      00
 26526              	.LASF1038:
 26527 37d0 63627265 		.ascii	"cbret\000"
 26527      7400
 26528              	.LASF52:
 26529 37d6 44594E41 		.ascii	"DYNAMIC_TYPE_ECC\000"
 26529      4D49435F 
 26529      54595045 
 26529      5F454343 
 26529      00
 26530              	.LASF239:
 26531 37e7 53534C5F 		.ascii	"SSL_VERIFY_FAIL_IF_NO_PEER_CERT\000"
 26531      56455249 
 26531      46595F46 
 26531      41494C5F 
 26531      49465F4E 
 26532              	.LASF898:
 26533 3807 53455353 		.ascii	"SESSION_TICKET_EXPECT_E\000"
 26533      494F4E5F 
 26533      5449434B 
 26533      45545F45 
 26533      58504543 
 26534              	.LASF975:
 26535 381f 776F6C66 		.ascii	"wolfSSL_CertManagerNew\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 720


 26535      53534C5F 
 26535      43657274 
 26535      4D616E61 
 26535      6765724E 
 26536              	.LASF88:
 26537 3836 62756666 		.ascii	"buffers\000"
 26537      65727300 
 26538              	.LASF163:
 26539 383e 63615461 		.ascii	"caTable\000"
 26539      626C6500 
 26540              	.LASF639:
 26541 3846 746C7331 		.ascii	"tls1_1\000"
 26541      5F3100
 26542              	.LASF460:
 26543 384d 44544C53 		.ascii	"DTLS_RECORD_EXTRA\000"
 26543      5F524543 
 26543      4F52445F 
 26543      45585452 
 26543      4100
 26544              	.LASF251:
 26545 385f 53534C5F 		.ascii	"SSL_ERROR_WANT_ACCEPT\000"
 26545      4552524F 
 26545      525F5741 
 26545      4E545F41 
 26545      43434550 
 26546              	.LASF282:
 26547 3875 574F4C46 		.ascii	"WOLFSSL_TLS_HMAC_INNER_SZ\000"
 26547      53534C5F 
 26547      544C535F 
 26547      484D4143 
 26547      5F494E4E 
 26548              	.LASF306:
 26549 388f 43455254 		.ascii	"CERTREQ_TYPE\000"
 26549      5245515F 
 26549      54595045 
 26549      00
 26550              	.LASF169:
 26551 389c 6F637370 		.ascii	"ocspIOCb\000"
 26551      494F4362 
 26551      00
 26552              	.LASF909:
 26553 38a5 44485F4B 		.ascii	"DH_KEY_SIZE_E\000"
 26553      45595F53 
 26553      495A455F 
 26553      4500
 26554              	.LASF844:
 26555 38b3 5A4C4942 		.ascii	"ZLIB_INIT_ERROR\000"
 26555      5F494E49 
 26555      545F4552 
 26555      524F5200 
 26556              	.LASF1132:
 26557 38c3 53656E64 		.ascii	"SendCertificate\000"
 26557      43657274 
 26557      69666963 
 26557      61746500 
 26558              	.LASF400:
 26559 38d3 4E4F5F43 		.ascii	"NO_COMPRESSION\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 721


 26559      4F4D5052 
 26559      45535349 
 26559      4F4E00
 26560              	.LASF465:
 26561 38e2 544C535F 		.ascii	"TLS_FINISHED_SZ\000"
 26561      46494E49 
 26561      53484544 
 26561      5F535A00 
 26562              	.LASF914:
 26563 38f2 4241445F 		.ascii	"BAD_CERTIFICATE_STATUS_ERROR\000"
 26563      43455254 
 26563      49464943 
 26563      4154455F 
 26563      53544154 
 26564              	.LASF511:
 26565 390f 4D41585F 		.ascii	"MAX_HELLO_SZ\000"
 26565      48454C4C 
 26565      4F5F535A 
 26565      00
 26566              	.LASF885:
 26567 391c 52454356 		.ascii	"RECV_OVERFLOW_E\000"
 26567      5F4F5645 
 26567      52464C4F 
 26567      575F4500 
 26568              	.LASF167:
 26569 392c 63614361 		.ascii	"caCacheCallback\000"
 26569      63686543 
 26569      616C6C62 
 26569      61636B00 
 26570              	.LASF1022:
 26571 393c 776F6C66 		.ascii	"wolfSSL_CertManagerDisableCRL\000"
 26571      53534C5F 
 26571      43657274 
 26571      4D616E61 
 26571      67657244 
 26572              	.LASF434:
 26573 395a 434F4F4B 		.ascii	"COOKIE_SECRET_SZ\000"
 26573      49455F53 
 26573      45435245 
 26573      545F535A 
 26573      00
 26574              	.LASF54:
 26575 396b 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_MSG\000"
 26575      4D49435F 
 26575      54595045 
 26575      5F44544C 
 26575      535F4D53 
 26576              	.LASF562:
 26577 3981 68617368 		.ascii	"hashAlgo\000"
 26577      416C676F 
 26577      00
 26578              	.LASF629:
 26579 398a 636C6561 		.ascii	"clearOutputBuffer\000"
 26579      724F7574 
 26579      70757442 
 26579      75666665 
 26579      7200
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 722


 26580              	.LASF1003:
 26581 399c 666F6F74 		.ascii	"footerEnd\000"
 26581      6572456E 
 26581      6400
 26582              	.LASF1114:
 26583 39a6 4D616B65 		.ascii	"MakeTLSv1_2\000"
 26583      544C5376 
 26583      315F3200 
 26584              	.LASF31:
 26585 39b2 44594E41 		.ascii	"DYNAMIC_TYPE_DOMAIN\000"
 26585      4D49435F 
 26585      54595045 
 26585      5F444F4D 
 26585      41494E00 
 26586              	.LASF646:
 26587 39c6 68617665 		.ascii	"haveQSH\000"
 26587      51534800 
 26588              	.LASF893:
 26589 39ce 4B455955 		.ascii	"KEYUSE_ENCIPHER_E\000"
 26589      53455F45 
 26589      4E434950 
 26589      4845525F 
 26589      4500
 26590              	.LASF803:
 26591 39e0 43455254 		.ascii	"CERTPOLICIES_E\000"
 26591      504F4C49 
 26591      43494553 
 26591      5F4500
 26592              	.LASF925:
 26593 39ef 676F744F 		.ascii	"gotOne\000"
 26593      6E6500
 26594              	.LASF455:
 26595 39f6 48454C4C 		.ascii	"HELLO_EXT_SIGALGO_SZ\000"
 26595      4F5F4558 
 26595      545F5349 
 26595      47414C47 
 26595      4F5F535A 
 26596              	.LASF498:
 26597 3a0b 43414D45 		.ascii	"CAMELLIA_256_KEY_SIZE\000"
 26597      4C4C4941 
 26597      5F323536 
 26597      5F4B4559 
 26597      5F53495A 
 26598              	.LASF1027:
 26599 3a21 776F6C66 		.ascii	"wolfSSL_CTX_set_verify\000"
 26599      53534C5F 
 26599      4354585F 
 26599      7365745F 
 26599      76657269 
 26600              	.LASF506:
 26601 3a38 52414242 		.ascii	"RABBIT_KEY_SIZE\000"
 26601      49545F4B 
 26601      45595F53 
 26601      495A4500 
 26602              	.LASF952:
 26603 3a48 776F6C66 		.ascii	"wolfSSL_read_internal\000"
 26603      53534C5F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 723


 26603      72656164 
 26603      5F696E74 
 26603      65726E61 
 26604              	.LASF1056:
 26605 3a5e 776F6C66 		.ascii	"wolfSSL_CTX_UnloadCAs\000"
 26605      53534C5F 
 26605      4354585F 
 26605      556E6C6F 
 26605      61644341 
 26606              	.LASF852:
 26607 3a74 50454552 		.ascii	"PEER_KEY_ERROR\000"
 26607      5F4B4559 
 26607      5F455252 
 26607      4F5200
 26608              	.LASF547:
 26609 3a83 6D616A6F 		.ascii	"major\000"
 26609      7200
 26610              	.LASF1018:
 26611 3a89 64796E61 		.ascii	"dynamicBuffer\000"
 26611      6D696342 
 26611      75666665 
 26611      7200
 26612              	.LASF341:
 26613 3a97 7065726D 		.ascii	"permittedNames\000"
 26613      69747465 
 26613      644E616D 
 26613      657300
 26614              	.LASF201:
 26615 3aa6 68616E64 		.ascii	"handshake_failure\000"
 26615      7368616B 
 26615      655F6661 
 26615      696C7572 
 26615      6500
 26616              	.LASF765:
 26617 3ab8 41534E5F 		.ascii	"ASN_NO_SIGNER_E\000"
 26617      4E4F5F53 
 26617      49474E45 
 26617      525F4500 
 26618              	.LASF3:
 26619 3ac8 776F7264 		.ascii	"word16\000"
 26619      313600
 26620              	.LASF82:
 26621 3acf 6873446F 		.ascii	"hsDoneCb\000"
 26621      6E654362 
 26621      00
 26622              	.LASF1000:
 26623 3ad8 68656164 		.ascii	"header\000"
 26623      657200
 26624              	.LASF205:
 26625 3adf 63657274 		.ascii	"certificate_revoked\000"
 26625      69666963 
 26625      6174655F 
 26625      7265766F 
 26625      6B656400 
 26626              	.LASF597:
 26627 3af3 6B65795F 		.ascii	"key_size\000"
 26627      73697A65 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 724


 26627      00
 26628              	.LASF186:
 26629 3afc 6C617374 		.ascii	"last_rx\000"
 26629      5F727800 
 26630              	.LASF189:
 26631 3b04 73746F72 		.ascii	"store\000"
 26631      6500
 26632              	.LASF252:
 26633 3b0a 53534C5F 		.ascii	"SSL_ERROR_SYSCALL\000"
 26633      4552524F 
 26633      525F5359 
 26633      5343414C 
 26633      4C00
 26634              	.LASF1136:
 26635 3b1c 53656E64 		.ascii	"SendFinished\000"
 26635      46696E69 
 26635      73686564 
 26635      00
 26636              	.LASF608:
 26637 3b29 43697068 		.ascii	"Ciphers\000"
 26637      65727300 
 26638              	.LASF694:
 26639 3b31 68617368 		.ascii	"hashSha256\000"
 26639      53686132 
 26639      353600
 26640              	.LASF394:
 26641 3b3c 53534C76 		.ascii	"SSLv3_MINOR\000"
 26641      335F4D49 
 26641      4E4F5200 
 26642              	.LASF219:
 26643 3b48 56657269 		.ascii	"VerifyCallback\000"
 26643      66794361 
 26643      6C6C6261 
 26643      636B00
 26644              	.LASF37:
 26645 3b57 44594E41 		.ascii	"DYNAMIC_TYPE_CRL\000"
 26645      4D49435F 
 26645      54595045 
 26645      5F43524C 
 26645      00
 26646              	.LASF151:
 26647 3b68 7075624B 		.ascii	"pubKeyOID\000"
 26647      65794F49 
 26647      4400
 26648              	.LASF1141:
 26649 3b72 433A5C55 		.ascii	"C:\\Users\\ddemidov\\Documents\\PSoC Creator\\BLE_F"
 26649      73657273 
 26649      5C646465 
 26649      6D69646F 
 26649      765C446F 
 26650 3ba0 696E644D 		.ascii	"indMe01\\SenseAbility.cydsn\000"
 26650      6530315C 
 26650      53656E73 
 26650      65416269 
 26650      6C697479 
 26651              	.LASF542:
 26652 3bbb 434C4945 		.ascii	"CLIENT_HELLO_COMPLETE\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 725


 26652      4E545F48 
 26652      454C4C4F 
 26652      5F434F4D 
 26652      504C4554 
 26653              	.LASF13:
 26654 3bd1 6C6F6E67 		.ascii	"long long int\000"
 26654      206C6F6E 
 26654      6720696E 
 26654      7400
 26655              	.LASF936:
 26656 3bdf 776F6C66 		.ascii	"wolfSSL_get_ciphers\000"
 26656      53534C5F 
 26656      6765745F 
 26656      63697068 
 26656      65727300 
 26657              	.LASF1118:
 26658 3bf3 4D616B65 		.ascii	"MakeSigner\000"
 26658      5369676E 
 26658      657200
 26659              	.LASF708:
 26660 3bfe 4D505F54 		.ascii	"MP_TO_E\000"
 26660      4F5F4500 
 26661              	.LASF576:
 26662 3c06 746F7461 		.ascii	"totalCerts\000"
 26662      6C436572 
 26662      747300
 26663              	.LASF1119:
 26664 3c11 46726565 		.ascii	"FreeDecodedCert\000"
 26664      4465636F 
 26664      64656443 
 26664      65727400 
 26665              	.LASF877:
 26666 3c21 4D41585F 		.ascii	"MAX_CHAIN_ERROR\000"
 26666      43484149 
 26666      4E5F4552 
 26666      524F5200 
 26667              	.LASF358:
 26668 3c31 65787443 		.ascii	"extCrlInfo\000"
 26668      726C496E 
 26668      666F00
 26669              	.LASF635:
 26670 3c3c 77654F77 		.ascii	"weOwnDH\000"
 26670      6E444800 
 26671              	.LASF388:
 26672 3c44 53454E44 		.ascii	"SEND_CERT\000"
 26672      5F434552 
 26672      5400
 26673              	.LASF1101:
 26674 3c4e 53656E64 		.ascii	"SendData\000"
 26674      44617461 
 26674      00
 26675              	.LASF213:
 26676 3c57 6261645F 		.ascii	"bad_certificate_status_response\000"
 26676      63657274 
 26676      69666963 
 26676      6174655F 
 26676      73746174 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 726


 26677              	.LASF1001:
 26678 3c77 666F6F74 		.ascii	"footer\000"
 26678      657200
 26679              	.LASF492:
 26680 3c7e 43484143 		.ascii	"CHACHA20_OLD_OFFSET\000"
 26680      48413230 
 26680      5F4F4C44 
 26680      5F4F4646 
 26680      53455400 
 26681              	.LASF408:
 26682 3c92 4D41585F 		.ascii	"MAX_MSG_EXTRA\000"
 26682      4D53475F 
 26682      45585452 
 26682      4100
 26683              	.LASF1080:
 26684 3ca0 42454749 		.ascii	"BEGIN_RSA_PRIV\000"
 26684      4E5F5253 
 26684      415F5052 
 26684      495600
 26685              	.LASF1113:
 26686 3caf 556E4C6F 		.ascii	"UnLockMutex\000"
 26686      636B4D75 
 26686      74657800 
 26687              	.LASF600:
 26688 3cbb 61656164 		.ascii	"aead_mac_size\000"
 26688      5F6D6163 
 26688      5F73697A 
 26688      6500
 26689              	.LASF5:
 26690 3cc9 776F7264 		.ascii	"word32\000"
 26690      333200
 26691              	.LASF1057:
 26692 3cd0 776F6C66 		.ascii	"wolfSSL_is_init_finished\000"
 26692      53534C5F 
 26692      69735F69 
 26692      6E69745F 
 26692      66696E69 
 26693              	.LASF751:
 26694 3ce9 4543435F 		.ascii	"ECC_CURVE_OID_E\000"
 26694      43555256 
 26694      455F4F49 
 26694      445F4500 
 26695              	.LASF598:
 26696 3cf9 69765F73 		.ascii	"iv_size\000"
 26696      697A6500 
 26697              	.LASF131:
 26698 3d01 68617665 		.ascii	"haveNTRU\000"
 26698      4E545255 
 26698      00
 26699              	.LASF553:
 26700 3d0a 62756666 		.ascii	"bufferSize\000"
 26700      65725369 
 26700      7A6500
 26701              	.LASF924:
 26702 3d15 75736564 		.ascii	"used\000"
 26702      00
 26703              	.LASF138:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 727


 26704 3d1a 4342494F 		.ascii	"CBIORecv\000"
 26704      52656376 
 26704      00
 26705              	.LASF569:
 26706 3d23 6F637370 		.ascii	"ocspLock\000"
 26706      4C6F636B 
 26706      00
 26707              	.LASF187:
 26708 3d2c 6C617374 		.ascii	"last_tx\000"
 26708      5F747800 
 26709              	.LASF295:
 26710 3d34 5348415F 		.ascii	"SHA_BLOCK_SIZE\000"
 26710      424C4F43 
 26710      4B5F5349 
 26710      5A4500
 26711              	.LASF491:
 26712 3d43 43484143 		.ascii	"CHACHA20_NONCE_SZ\000"
 26712      48413230 
 26712      5F4E4F4E 
 26712      43455F53 
 26712      5A00
 26713              	.LASF309:
 26714 3d55 5253415F 		.ascii	"RSA_TYPE\000"
 26714      54595045 
 26714      00
 26715              	.LASF1089:
 26716 3d5e 454E445F 		.ascii	"END_DSA_PRIV\000"
 26716      4453415F 
 26716      50524956 
 26716      00
 26717              	.LASF190:
 26718 3d6b 63757272 		.ascii	"current_cert\000"
 26718      656E745F 
 26718      63657274 
 26718      00
 26719              	.LASF404:
 26720 3d78 454E4352 		.ascii	"ENCRYPT_LEN\000"
 26720      5950545F 
 26720      4C454E00 
 26721              	.LASF1023:
 26722 3d84 776F6C66 		.ascii	"wolfSSL_CertManagerVerifyBuffer\000"
 26722      53534C5F 
 26722      43657274 
 26722      4D616E61 
 26722      67657256 
 26723              	.LASF170:
 26724 3da4 6F637370 		.ascii	"ocspRespFreeCb\000"
 26724      52657370 
 26724      46726565 
 26724      436200
 26725              	.LASF505:
 26726 3db3 48435F31 		.ascii	"HC_128_IV_SIZE\000"
 26726      32385F49 
 26726      565F5349 
 26726      5A4500
 26727              	.LASF380:
 26728 3dc2 7375626A 		.ascii	"subjectNameHash\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 728


 26728      6563744E 
 26728      616D6548 
 26728      61736800 
 26729              	.LASF1008:
 26730 3dd2 776F6C66 		.ascii	"wolfSSL_CertPemToDer\000"
 26730      53534C5F 
 26730      43657274 
 26730      50656D54 
 26730      6F446572 
 26731              	.LASF687:
 26732 3de7 676F745F 		.ascii	"got_certificate_verify\000"
 26732      63657274 
 26732      69666963 
 26732      6174655F 
 26732      76657269 
 26733              	.LASF261:
 26734 3dfe 53534C5F 		.ascii	"SSL_R_TLSV1_ALERT_UNKNOWN_CA\000"
 26734      525F544C 
 26734      5356315F 
 26734      414C4552 
 26734      545F554E 
 26735              	.LASF637:
 26736 3e1b 72657375 		.ascii	"resuming\000"
 26736      6D696E67 
 26736      00
 26737              	.LASF33:
 26738 3e24 44594E41 		.ascii	"DYNAMIC_TYPE_CTX\000"
 26738      4D49435F 
 26738      54595045 
 26738      5F435458 
 26738      00
 26739              	.LASF206:
 26740 3e35 63657274 		.ascii	"certificate_expired\000"
 26740      69666963 
 26740      6174655F 
 26740      65787069 
 26740      72656400 
 26741              	.LASF1086:
 26742 3e49 42454749 		.ascii	"BEGIN_EC_PRIV\000"
 26742      4E5F4543 
 26742      5F505249 
 26742      5600
 26743              	.LASF397:
 26744 3e57 544C5376 		.ascii	"TLSv1_2_MINOR\000"
 26744      315F325F 
 26744      4D494E4F 
 26744      5200
 26745              	.LASF224:
 26746 3e65 53534C5F 		.ascii	"SSL_ALPN_NOT_FOUND\000"
 26746      414C504E 
 26746      5F4E4F54 
 26746      5F464F55 
 26746      4E4400
 26747              	.LASF745:
 26748 3e78 41534E5F 		.ascii	"ASN_SIG_KEY_E\000"
 26748      5349475F 
 26748      4B45595F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 729


 26748      4500
 26749              	.LASF227:
 26750 3e86 53534C5F 		.ascii	"SSL_BAD_PATH\000"
 26750      4241445F 
 26750      50415448 
 26750      00
 26751              	.LASF541:
 26752 3e93 53455256 		.ascii	"SERVER_FINISHED_COMPLETE\000"
 26752      45525F46 
 26752      494E4953 
 26752      4845445F 
 26752      434F4D50 
 26753              	.LASF641:
 26754 3eac 636F6E6E 		.ascii	"connReset\000"
 26754      52657365 
 26754      7400
 26755              	.LASF662:
 26756 3eb6 636F6E6E 		.ascii	"connectState\000"
 26756      65637453 
 26756      74617465 
 26756      00
 26757              	.LASF654:
 26758 3ec3 73617665 		.ascii	"saveArrays\000"
 26758      41727261 
 26758      797300
 26759              	.LASF444:
 26760 3ece 43555256 		.ascii	"CURVE_LEN\000"
 26760      455F4C45 
 26760      4E00
 26761              	.LASF321:
 26762 3ed8 4354435F 		.ascii	"CTC_SHA256wECDSA\000"
 26762      53484132 
 26762      35367745 
 26762      43445341 
 26762      00
 26763              	.LASF886:
 26764 3ee9 47454E5F 		.ascii	"GEN_COOKIE_E\000"
 26764      434F4F4B 
 26764      49455F45 
 26764      00
 26765              	.LASF931:
 26766 3ef6 776F6C66 		.ascii	"wolfSSL_free\000"
 26766      53534C5F 
 26766      66726565 
 26766      00
 26767              	.LASF236:
 26768 3f03 53534C5F 		.ascii	"SSL_FILETYPE_RAW\000"
 26768      46494C45 
 26768      54595045 
 26768      5F524157 
 26768      00
 26769              	.LASF472:
 26770 3f14 53455353 		.ascii	"SESSION_FLUSH_COUNT\000"
 26770      494F4E5F 
 26770      464C5553 
 26770      485F434F 
 26770      554E5400 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 730


 26771              	.LASF920:
 26772 3f28 776F6C66 		.ascii	"wolfSSL_get_current_cipher\000"
 26772      53534C5F 
 26772      6765745F 
 26772      63757272 
 26772      656E745F 
 26773              	.LASF181:
 26774 3f43 63616368 		.ascii	"cache\000"
 26774      6500
 26775              	.LASF873:
 26776 3f49 54485245 		.ascii	"THREAD_CREATE_E\000"
 26776      41445F43 
 26776      52454154 
 26776      455F4500 
 26777              	.LASF942:
 26778 3f59 776F6C66 		.ascii	"wolfSSL_get_using_nonblock\000"
 26778      53534C5F 
 26778      6765745F 
 26778      7573696E 
 26778      675F6E6F 
 26779              	.LASF317:
 26780 3f74 4354435F 		.ascii	"CTC_MD5wRSA\000"
 26780      4D443577 
 26780      52534100 
 26781              	.LASF1021:
 26782 3f80 776F6C66 		.ascii	"wolfSSL_CertManagerEnableCRL\000"
 26782      53534C5F 
 26782      43657274 
 26782      4D616E61 
 26782      67657245 
 26783              	.LASF1112:
 26784 3f9d 4C6F636B 		.ascii	"LockMutex\000"
 26784      4D757465 
 26784      7800
 26785              	.LASF99:
 26786 3fa7 76657273 		.ascii	"version\000"
 26786      696F6E00 
 26787              	.LASF84:
 26788 3faf 63697068 		.ascii	"cipher\000"
 26788      657200
 26789              	.LASF747:
 26790 3fb6 41534E5F 		.ascii	"ASN_NTRU_KEY_E\000"
 26790      4E545255 
 26790      5F4B4559 
 26790      5F4500
 26791              	.LASF115:
 26792 3fc5 6D657468 		.ascii	"method\000"
 26792      6F6400
 26793              	.LASF6:
 26794 3fcc 756E7369 		.ascii	"unsigned int\000"
 26794      676E6564 
 26794      20696E74 
 26794      00
 26795              	.LASF141:
 26796 3fd9 69737375 		.ascii	"issuer\000"
 26796      657200
 26797              	.LASF128:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 731


 26798 3fe0 68617665 		.ascii	"haveRSA\000"
 26798      52534100 
 26799              	.LASF240:
 26800 3fe8 53534C5F 		.ascii	"SSL_VERIFY_CLIENT_ONCE\000"
 26800      56455249 
 26800      46595F43 
 26800      4C49454E 
 26800      545F4F4E 
 26801              	.LASF515:
 26802 3fff 44544C53 		.ascii	"DTLS_TIMEOUT_INIT\000"
 26802      5F54494D 
 26802      454F5554 
 26802      5F494E49 
 26802      5400
 26803              	.LASF664:
 26804 4011 41727261 		.ascii	"Arrays\000"
 26804      797300
 26805              	.LASF701:
 26806 4018 57494E43 		.ascii	"WINCRYPT_E\000"
 26806      52595054 
 26806      5F4500
 26807              	.LASF770:
 26808 4023 4241445F 		.ascii	"BAD_PADDING_E\000"
 26808      50414444 
 26808      494E475F 
 26808      4500
 26809              	.LASF221:
 26810 4031 53534C5F 		.ascii	"SSL_FAILURE\000"
 26810      4641494C 
 26810      55524500 
 26811              	.LASF822:
 26812 403d 44454352 		.ascii	"DECRYPT_ERROR\000"
 26812      5950545F 
 26812      4552524F 
 26812      5200
 26813              	.LASF108:
 26814 404b 6D617374 		.ascii	"masterSecret\000"
 26814      65725365 
 26814      63726574 
 26814      00
 26815              	.LASF112:
 26816 4058 73696465 		.ascii	"side\000"
 26816      00
 26817              	.LASF90:
 26818 405d 616C6572 		.ascii	"alert_history\000"
 26818      745F6869 
 26818      73746F72 
 26818      7900
 26819              	.LASF363:
 26820 406b 65787441 		.ascii	"extAuthKeyIdSet\000"
 26820      7574684B 
 26820      65794964 
 26820      53657400 
 26821              	.LASF901:
 26822 407b 4E4F5F43 		.ascii	"NO_CHANGE_CIPHER_E\000"
 26822      48414E47 
 26822      455F4349 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 732


 26822      50484552 
 26822      5F4500
 26823              	.LASF10:
 26824 408e 73686F72 		.ascii	"short int\000"
 26824      7420696E 
 26824      7400
 26825              	.LASF946:
 26826 4098 776F6C66 		.ascii	"wolfSSL_dtls_set_peer\000"
 26826      53534C5F 
 26826      64746C73 
 26826      5F736574 
 26826      5F706565 
 26827              	.LASF656:
 26828 40ae 63697068 		.ascii	"cipherSuite0\000"
 26828      65725375 
 26828      69746530 
 26828      00
 26829              	.LASF1014:
 26830 40bb 50726F63 		.ascii	"ProcessBuffer\000"
 26830      65737342 
 26830      75666665 
 26830      7200
 26831              	.LASF241:
 26832 40c9 53534C5F 		.ascii	"SSL_VERIFY_FAIL_EXCEPT_PSK\000"
 26832      56455249 
 26832      46595F46 
 26832      41494C5F 
 26832      45584345 
 26833              	.LASF577:
 26834 40e4 43524C5F 		.ascii	"CRL_Monitor\000"
 26834      4D6F6E69 
 26834      746F7200 
 26835              	.LASF337:
 26836 40f0 7369674C 		.ascii	"sigLength\000"
 26836      656E6774 
 26836      6800
 26837              	.LASF709:
 26838 40fa 4D505F53 		.ascii	"MP_SUB_E\000"
 26838      55425F45 
 26838      00
 26839              	.LASF238:
 26840 4103 53534C5F 		.ascii	"SSL_VERIFY_PEER\000"
 26840      56455249 
 26840      46595F50 
 26840      45455200 
 26841              	.LASF792:
 26842 4113 4543435F 		.ascii	"ECC_INF_E\000"
 26842      494E465F 
 26842      4500
 26843              	.LASF466:
 26844 411d 4D415354 		.ascii	"MASTER_LABEL_SZ\000"
 26844      45525F4C 
 26844      4142454C 
 26844      5F535A00 
 26845              	.LASF75:
 26846 412d 61727261 		.ascii	"arrays\000"
 26846      797300
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 733


 26847              	.LASF968:
 26848 4134 776F6C66 		.ascii	"wolfSSL_KeepArrays\000"
 26848      53534C5F 
 26848      4B656570 
 26848      41727261 
 26848      797300
 26849              	.LASF720:
 26850 4147 42554646 		.ascii	"BUFFER_E\000"
 26850      45525F45 
 26850      00
 26851              	.LASF540:
 26852 4150 53455256 		.ascii	"SERVER_HELLODONE_COMPLETE\000"
 26852      45525F48 
 26852      454C4C4F 
 26852      444F4E45 
 26852      5F434F4D 
 26853              	.LASF0:
 26854 416a 776F6C66 		.ascii	"wolfSSL_Mutex\000"
 26854      53534C5F 
 26854      4D757465 
 26854      7800
 26855              	.LASF103:
 26856 4178 6F707469 		.ascii	"options\000"
 26856      6F6E7300 
 26857              	.LASF1073:
 26858 4180 454E445F 		.ascii	"END_CERT\000"
 26858      43455254 
 26858      00
 26859              	.LASF484:
 26860 4189 41454144 		.ascii	"AEAD_VMIN_OFFSET\000"
 26860      5F564D49 
 26860      4E5F4F46 
 26860      46534554 
 26860      00
 26861              	.LASF929:
 26862 419a 73325F6C 		.ascii	"s2_len\000"
 26862      656E00
 26863              	.LASF1116:
 26864 41a1 496E6974 		.ascii	"InitDecodedCert\000"
 26864      4465636F 
 26864      64656443 
 26864      65727400 
 26865              	.LASF957:
 26866 41b1 666C6167 		.ascii	"flags\000"
 26866      7300
 26867              	.LASF407:
 26868 41b7 4D41585F 		.ascii	"MAX_RECORD_SIZE\000"
 26868      5245434F 
 26868      52445F53 
 26868      495A4500 
 26869              	.LASF894:
 26870 41c7 4558544B 		.ascii	"EXTKEYUSE_AUTH_E\000"
 26870      45595553 
 26870      455F4155 
 26870      54485F45 
 26870      00
 26871              	.LASF119:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccuLpBns.s 			page 734


 26872 41d8 63657274 		.ascii	"certChain\000"
 26872      43686169 
 26872      6E00
 26873              	.LASF796:
 26874 41e2 5352505F 		.ascii	"SRP_BAD_KEY_E\000"
 26874      4241445F 
 26874      4B45595F 
 26874      4500
 26875              	.LASF446:
 26876 41f0 48414E44 		.ascii	"HANDSHAKE_HEADER_SZ\000"
 26876      5348414B 
 26876      455F4845 
 26876      41444552 
 26876      5F535A00 
 26877              	.LASF51:
 26878 4204 44594E41 		.ascii	"DYNAMIC_TYPE_LIBZ\000"
 26878      4D49435F 
 26878      54595045 
 26878      5F4C4942 
 26878      5A00
 26879              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
