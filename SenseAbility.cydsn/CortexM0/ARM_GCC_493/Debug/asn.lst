ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"asn.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.GetTime,"ax",%progbits
  18              		.align	1
  19              		.code	16
  20              		.thumb_func
  21              		.type	GetTime, %function
  22              	GetTime:
  23              	.LFB13:
  24              		.file 1 "..\\acn-sdk-c\\src\\wolfSSL\\wolfcrypt\\src\\asn.c"
   1:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* asn.c
   2:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *
   3:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * Copyright (C) 2006-2016 wolfSSL Inc.
   4:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *
   5:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * This file is part of wolfSSL.
   6:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *
   7:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * wolfSSL is free software; you can redistribute it and/or modify
   8:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * it under the terms of the GNU General Public License as published by
   9:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * (at your option) any later version.
  11:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *
  12:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * wolfSSL is distributed in the hope that it will be useful,
  13:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * GNU General Public License for more details.
  16:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *
  17:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * You should have received a copy of the GNU General Public License
  18:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * along with this program; if not, write to the Free Software
  19:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA
  20:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  */
  21:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  22:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  23:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_CONFIG_H
  24:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <config.h>
  25:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  26:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  27:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/settings.h>
  28:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  29:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /*
  30:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** ASN Options:
  31:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * NO_ASN_TIME: Disables time parts of the ASN code for systems without an RTC
  32:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     or wishing to save space.
  33:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * IGNORE_NAME_CONSTRAINTS: Skip ASN name checks.
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 2


  34:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** */
  35:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  36:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN
  37:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  38:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_RTP_SYS
  39:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include "os.h"           /* dc_rtc_api needs    */
  40:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include "dc_rtc_api.h"   /* to get current time */
  41:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  42:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  43:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/asn.h>
  44:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/coding.h>
  45:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/md2.h>
  46:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/hmac.h>
  47:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/error-crypt.h>
  48:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/pwdbased.h>
  49:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/des3.h>
  50:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/logging.h>
  51:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  52:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/random.h>
  53:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include <wolfssl/wolfcrypt/hash.h>
  54:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef NO_INLINE
  55:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <wolfssl/wolfcrypt/misc.h>
  56:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
  57:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <wolfcrypt/src/misc.c>
  58:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  59:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  60:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RC4
  61:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <wolfssl/wolfcrypt/arc4.h>
  62:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  63:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  64:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
  65:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include "libntruencrypt/ntru_crypto.h"
  66:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  67:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  68:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SHA512) || defined(WOLFSSL_SHA384)
  69:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <wolfssl/wolfcrypt/sha512.h>
  70:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  71:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  72:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_SHA256
  73:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <wolfssl/wolfcrypt/sha256.h>
  74:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  75:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  76:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
  77:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <wolfssl/wolfcrypt/ecc.h>
  78:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  79:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  80:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_DEBUG_ENCODING
  81:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(FREESCALE_MQX) || defined(FREESCALE_KSDK_MQX)
  82:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #if MQX_USE_IO_OLD
  83:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             #include <fio.h>
  84:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #else
  85:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             #include <nio.h>
  86:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif
  87:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
  88:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #include <stdio.h>
  89:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
  90:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 3


  91:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  92:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef _MSC_VER
  93:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* 4996 warning to use MS extensions e.g., strcpy_s instead of XSTRNCPY */
  94:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #pragma warning(disable: 4996)
  95:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
  96:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  97:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
  98:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef TRUE
  99:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define TRUE  1
 100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef FALSE
 102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define FALSE 0
 103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
 106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_RTP_SYS)
 107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* uses parital <time.h> structures */
 108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(tl)       (0)
 109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XGMTIME(c, t)   rtpsys_gmtime((c))
 110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(MICRIUM)
 112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if (NET_SECURE_MGR_CFG_EN == DEF_ENABLED)
 113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define XVALIDATE_DATE(d, f, t) NetSecure_ValidateDateHandler((d), (f), (t))
 114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
 115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define XVALIDATE_DATE(d, f, t) (0)
 116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
 117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define NO_TIME_H
 118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* since Micrium not defining XTIME or XGMTIME, CERT_GEN not available */
 119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(MICROCHIP_TCPIP_V5) || defined(MICROCHIP_TCPIP)
 121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <time.h>
 122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(t1)       pic32_time((t1))
 123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XGMTIME(c, t)   gmtime((c))
 124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(FREESCALE_MQX) || defined(FREESCALE_KSDK_MQX)
 126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(t1)       mqx_time((t1))
 127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define HAVE_GMTIME_R
 128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(FREESCALE_KSDK_BM) || defined(FREESCALE_FREE_RTOS)
 130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <time.h>
 131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(t1)       ksdk_time((t1))
 132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XGMTIME(c, t)   gmtime((c))
 133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(USER_TIME)
 135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* user time, and gmtime compatible functions, there is a gmtime
 136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        implementation here that WINCE uses, so really just need some ticks
 137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        since the EPOCH
 138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     */
 139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define WOLFSSL_GMTIME
 140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define USE_WOLF_TM
 141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define USE_WOLF_TIME_T
 142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(TIME_OVERRIDES)
 144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* user would like to override time() and gmtime() functionality */
 145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef HAVE_TIME_T_TYPE
 146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define USE_WOLF_TIME_T
 147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 4


 148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef HAVE_TM_TYPE
 149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define USE_WOLF_TM
 150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
 151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define NEED_TMP_TIME
 152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(IDIRECT_DEV_TIME)
 154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /*Gets the timestamp from cloak software owned by VT iDirect
 155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     in place of time() from <time.h> */
 156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <time.h>
 157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(t1)       idirect_time((t1))
 158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XGMTIME(c, t)   gmtime((c))
 159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(_WIN32_WCE)
 161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <windows.h>
 162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(t1)       windows_time((t1))
 163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define WOLFSSL_GMTIME
 164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
 166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* default */
 167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* uses complete <time.h> facility */
 168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #include <time.h>
 169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Map default time functions */
 173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if !defined(XTIME) && !defined(TIME_OVERRIDES) && !defined(USER_TIME)
 174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XTIME(tl)       time((tl))
 175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if !defined(XGMTIME) && !defined(TIME_OVERRIDES)
 177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(WOLFSSL_GMTIME) || !defined(HAVE_GMTIME_R)
 178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define XGMTIME(c, t)   gmtime((c))
 179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
 180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define XGMTIME(c, t)   gmtime_r((c), (t))
 181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define NEED_TMP_TIME
 182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
 183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if !defined(XVALIDATE_DATE) && !defined(HAVE_VALIDATE_DATE)
 185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define USE_WOLF_VALIDDATE
 186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define XVALIDATE_DATE(d, f, t) ValidateDate((d), (f), (t))
 187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* wolf struct tm and time_t */
 190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(USE_WOLF_TM)
 191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm {
 192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_sec;     /* seconds after the minute [0-60] */
 193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_min;     /* minutes after the hour [0-59] */
 194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_hour;    /* hours since midnight [0-23] */
 195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_mday;    /* day of the month [1-31] */
 196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_mon;     /* months since January [0-11] */
 197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_year;    /* years since 1900 */
 198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_wday;    /* days since Sunday [0-6] */
 199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_yday;    /* days since January 1 [0-365] */
 200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  tm_isdst;   /* Daylight Savings Time flag */
 201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         long tm_gmtoff;  /* offset from CUT in seconds */
 202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         char *tm_zone;   /* timezone abbreviation */
 203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     };
 204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* USE_WOLF_TM */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 5


 205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(USE_WOLF_TIME_T)
 206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     typedef long time_t;
 207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* forward declarations */
 210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(USER_TIME)
 211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* gmtime(const time_t* timer);
 212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     extern time_t XTIME(time_t * timer);
 213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef STACK_TRAP
 215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* for stack trap tracking, don't call os gmtime on OS X/linux,
 216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****            uses a lot of stack spce */
 217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         extern time_t time(time_t * timer);
 218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #define XTIME(tl)  time((tl))
 219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* STACK_TRAP */
 220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #elif defined(TIME_OVERRIDES)
 222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     extern time_t XTIME(time_t * timer);
 223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     extern struct tm* XGMTIME(const time_t* timer, struct tm* tmp);
 224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(_WIN32_WCE)
 228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** time_t windows_time(time_t* timer)
 229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     SYSTEMTIME     sysTime;
 231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FILETIME       fTime;
 232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ULARGE_INTEGER intTime;
 233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t         localTime;
 234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (timer == NULL)
 236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         timer = &localTime;
 237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetSystemTime(&sysTime);
 239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     SystemTimeToFileTime(&sysTime, &fTime);
 240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&intTime, &fTime, sizeof(FILETIME));
 242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* subtract EPOCH */
 243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     intTime.QuadPart -= 0x19db1ded53e8000;
 244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* to secs */
 245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     intTime.QuadPart /= 10000000;
 246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *timer = (time_t)intTime.QuadPart;
 247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *timer;
 249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /*  _WIN32_WCE */
 251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_GMTIME)
 253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** struct tm* gmtime(const time_t* timer)
 254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define YEAR0          1900
 256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define EPOCH_YEAR     1970
 257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define SECS_DAY       (24L * 60L * 60L)
 258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define LEAPYEAR(year) (!((year) % 4) && (((year) % 100) || !((year) %400)))
 259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #define YEARSIZE(year) (LEAPYEAR(year) ? 366 : 365)
 260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const int _ytab[2][12] =
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 6


 262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
 263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
 264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
 265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     };
 266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static struct tm st_time;
 268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* ret = &st_time;
 269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t secs = *timer;
 270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     unsigned long dayclock, dayno;
 271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int year = EPOCH_YEAR;
 272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     dayclock = (unsigned long)secs % SECS_DAY;
 274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     dayno    = (unsigned long)secs / SECS_DAY;
 275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_sec  = (int) dayclock % 60;
 277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_min  = (int)(dayclock % 3600) / 60;
 278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_hour = (int) dayclock / 3600;
 279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_wday = (int) (dayno + 4) % 7;        /* day 0 a Thursday */
 280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while(dayno >= (unsigned long)YEARSIZE(year)) {
 282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         dayno -= YEARSIZE(year);
 283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         year++;
 284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_year = year - YEAR0;
 287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_yday = (int)dayno;
 288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_mon  = 0;
 289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while(dayno >= (unsigned long)_ytab[LEAPYEAR(year)][ret->tm_mon]) {
 291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         dayno -= _ytab[LEAPYEAR(year)][ret->tm_mon];
 292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret->tm_mon++;
 293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_mday  = (int)++dayno;
 296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_isdst = 0;
 297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
 299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_GMTIME */
 301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_RTP_SYS)
 304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #define YEAR0          1900
 305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** struct tm* rtpsys_gmtime(const time_t* timer)       /* has a gmtime() but hangs */
 307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static struct tm st_time;
 309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* ret = &st_time;
 310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DC_RTC_CALENDAR cal;
 312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     dc_rtc_time_get(&cal, TRUE);
 313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_year  = cal.year - YEAR0;       /* gm starts at 1900 */
 315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_mon   = cal.month - 1;          /* gm starts at 0 */
 316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_mday  = cal.day;
 317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_hour  = cal.hour;
 318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_min   = cal.minute;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 7


 319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret->tm_sec   = cal.second;
 320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
 322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_RTP_SYS */
 325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(MICROCHIP_TCPIP_V5) || defined(MICROCHIP_TCPIP)
 328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /*
 330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * time() is just a stub in Microchip libraries. We need our own
 331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * implementation. Use SNTP client to get seconds since epoch.
 332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  */
 333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** time_t pic32_time(time_t* timer)
 334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef MICROCHIP_TCPIP_V5
 336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DWORD sec = 0;
 337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
 338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     uint32_t sec = 0;
 339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t localTime;
 341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (timer == NULL)
 343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         timer = &localTime;
 344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef MICROCHIP_MPLAB_HARMONY
 346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sec = TCPIP_SNTP_UTCSecondsGet();
 347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
 348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sec = SNTPGetUTCSeconds();
 349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *timer = (time_t) sec;
 351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *timer;
 353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* MICROCHIP_TCPIP */
 356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(FREESCALE_MQX) || defined(FREESCALE_KSDK_MQX)
 359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** time_t mqx_time(time_t* timer)
 361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t localTime;
 363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     TIME_STRUCT time_s;
 364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (timer == NULL)
 366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         timer = &localTime;
 367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     _time_get(&time_s);
 369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *timer = (time_t) time_s.SECONDS;
 370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *timer;
 372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* FREESCALE_MQX */
 375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 8


 376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(FREESCALE_KSDK_BM) || defined(FREESCALE_FREE_RTOS)
 377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #include "fsl_pit_driver.h"
 379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** time_t ksdk_time(time_t* timer)
 381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t localTime;
 383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (timer == NULL)
 385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         timer = &localTime;
 386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *timer = (PIT_DRV_ReadTimerUs(PIT_INSTANCE, PIT_CHANNEL)) / 1000000;
 388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *timer;
 389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* FREESCALE_KSDK_BM */
 392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_TIRTOS)
 394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** time_t XTIME(time_t * timer)
 396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t sec = 0;
 398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sec = (time_t) Seconds_get();
 400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (timer != NULL)
 402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *timer = sec;
 403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return sec;
 405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_TIRTOS */
 408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static INLINE word32 btoi(byte b)
 411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return b - 0x30;
 413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* two byte date/time, add to value */
 417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static INLINE void GetTime(int* value, const byte* date, int* idx)
 418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
  25              		.loc 1 418 0
  26              		.cfi_startproc
  27              	.LVL0:
  28 0000 30B5     		push	{r4, r5, lr}
  29              		.cfi_def_cfa_offset 12
  30              		.cfi_offset 4, -12
  31              		.cfi_offset 5, -8
  32              		.cfi_offset 14, -4
 419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i = *idx;
 420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]) * 10;
  33              		.loc 1 421 0
  34 0002 0A24     		mov	r4, #10
 419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i = *idx;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 9


  35              		.loc 1 419 0
  36 0004 1368     		ldr	r3, [r2]
  37              	.LVL1:
 422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]);
 423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *idx = i;
 425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
  38              		.loc 1 425 0
  39              		@ sp needed
  40              	.LBB21:
  41              	.LBB22:
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
  42              		.loc 1 412 0
  43 0006 CD5C     		ldrb	r5, [r1, r3]
  44              	.LBE22:
  45              	.LBE21:
 422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]);
  46              		.loc 1 422 0
  47 0008 C918     		add	r1, r1, r3
  48              	.LVL2:
  49              	.LBB24:
  50              	.LBB23:
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
  51              		.loc 1 412 0
  52 000a 303D     		sub	r5, r5, #48
  53              	.LBE23:
  54              	.LBE24:
 421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]);
  55              		.loc 1 421 0
  56 000c 6543     		mul	r5, r4
  57 000e 0468     		ldr	r4, [r0]
 422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]);
  58              		.loc 1 422 0
  59 0010 0233     		add	r3, r3, #2
  60              	.LVL3:
 421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]);
  61              		.loc 1 421 0
  62 0012 2D19     		add	r5, r5, r4
  63 0014 0560     		str	r5, [r0]
  64              	.LVL4:
  65              	.LBB25:
  66              	.LBB26:
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
  67              		.loc 1 412 0
  68 0016 4C78     		ldrb	r4, [r1, #1]
  69 0018 303C     		sub	r4, r4, #48
  70              	.LBE26:
  71              	.LBE25:
 422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value += btoi(date[i++]);
  72              		.loc 1 422 0
  73 001a 2919     		add	r1, r5, r4
  74 001c 0160     		str	r1, [r0]
 424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
  75              		.loc 1 424 0
  76 001e 1360     		str	r3, [r2]
  77              		.loc 1 425 0
  78 0020 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 10


  79              		.cfi_endproc
  80              	.LFE13:
  81              		.size	GetTime, .-GetTime
  82              		.section	.text.OidFromId,"ax",%progbits
  83              		.align	1
  84              		.code	16
  85              		.thumb_func
  86              		.type	OidFromId, %function
  87              	OidFromId:
  88              	.LFB20:
 426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(MICRIUM)
 429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** CPU_INT32S NetSecure_ValidateDateHandler(CPU_INT08U *date, CPU_INT08U format,
 431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          CPU_INT08U dateType)
 432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_BOOLEAN  rtn_code;
 434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT32S   i;
 435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT32S   val;
 436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT16U   year;
 437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT08U   month;
 438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT16U   day;
 439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT08U   hour;
 440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT08U   min;
 441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CPU_INT08U   sec;
 442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     i    = 0;
 444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     year = 0u;
 445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (format == ASN_UTC_TIME) {
 447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (btoi(date[0]) >= 5)
 448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             year = 1900;
 449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
 450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             year = 2000;
 451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else  { /* format == GENERALIZED_TIME */
 453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         year += btoi(date[i++]) * 1000;
 454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         year += btoi(date[i++]) * 100;
 455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = year;
 458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime(&val, date, &i);
 459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     year = (CPU_INT16U)val;
 460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = 0;
 462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime(&val, date, &i);
 463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     month = (CPU_INT08U)val;
 464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = 0;
 466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime(&val, date, &i);
 467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     day = (CPU_INT16U)val;
 468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = 0;
 470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime(&val, date, &i);
 471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     hour = (CPU_INT08U)val;
 472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 11


 473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = 0;
 474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime(&val, date, &i);
 475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     min = (CPU_INT08U)val;
 476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = 0;
 478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime(&val, date, &i);
 479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sec = (CPU_INT08U)val;
 480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return NetSecure_ValidateDate(year, month, day, hour, min, sec, dateType);
 482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* MICRIUM */
 485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(IDIRECT_DEV_TIME)
 487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** extern time_t getTimestamp();
 489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** time_t idirect_time(time_t * timer)
 491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t sec = getTimestamp();
 493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (timer != NULL)
 495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *timer = sec;
 496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return sec;
 498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IDIRECT_DEV_TIME */
 501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
 503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetLength(const byte* input, word32* inOutIdx, int* len,
 505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                            word32 maxIdx)
 506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int     length = 0;
 508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32  i = *inOutIdx;
 509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte    b;
 510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *len = 0;    /* default length */
 512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (i+1) > maxIdx) {   /* for first read */
 514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("GetLength bad index on input");
 515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
 516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[i++];
 519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b >= ASN_LONG_LENGTH) {
 520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 bytes = b & 0x7F;
 521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ( (i+bytes) > maxIdx) {   /* for reading bytes */
 523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("GetLength bad long length");
 524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return BUFFER_E;
 525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (bytes--) {
 528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[i++];
 529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length = (length << 8) | b;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 12


 530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         length = b;
 534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (i+length) > maxIdx) {   /* for user of length */
 536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("GetLength value exceeds buffer length");
 537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
 538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = i;
 541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > 0)
 542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *len = length;
 543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return length;
 545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetSequence(const byte* input, word32* inOutIdx, int* len,
 549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                            word32 maxIdx)
 550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length = -1;
 552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx    = *inOutIdx;
 553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != (ASN_SEQUENCE | ASN_CONSTRUCTED) ||
 555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             GetLength(input, &idx, &length, maxIdx) < 0)
 556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *len      = length;
 559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return length;
 562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetSet(const byte* input, word32* inOutIdx, int* len,
 566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         word32 maxIdx)
 567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length = -1;
 569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx    = *inOutIdx;
 570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != (ASN_SET | ASN_CONSTRUCTED) ||
 572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             GetLength(input, &idx, &length, maxIdx) < 0)
 573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *len      = length;
 576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return length;
 579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Windows header clash for WinCE using GetVersion */
 583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetMyVersion(const byte* input, word32* inOutIdx,
 584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                int* version)
 585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *inOutIdx;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 13


 587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetMyVersion");
 589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_INTEGER)
 591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != 0x01)
 594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_VERSION_E;
 595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *version  = input[idx++];
 597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *version;
 600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_PWDBASED
 604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Get small count integer, 32 bits or less */
 605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetShortInt(const byte* input, word32* inOutIdx, int* number)
 606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *inOutIdx;
 608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 len;
 609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *number = 0;
 611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_INTEGER)
 613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     len = input[idx++];
 616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (len > 4)
 617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (len--) {
 620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *number  = *number << 8 | input[idx++];
 621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *number;
 626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_PWDBASED */
 628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
 630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* May not have one, not an error */
 631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetExplicitVersion(const byte* input, word32* inOutIdx, int* version)
 632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *inOutIdx;
 634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetExplicitVersion");
 636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED)) {
 637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *inOutIdx = ++idx;  /* eat header */
 638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return GetMyVersion(input, inOutIdx, version);
 639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* go back as is */
 642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *version = 0;
 643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 14


 644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
 645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
 647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetInt(mp_int* mpi, const byte* input, word32* inOutIdx,
 649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                   word32 maxIdx)
 650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = *inOutIdx;
 652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b = input[i++];
 653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_INTEGER)
 656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &i, &length, maxIdx) < 0)
 659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (b = input[i++]) == 0x00)
 662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         length--;
 663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i--;
 665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mp_init(mpi) != MP_OKAY)
 667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MP_INIT_E;
 668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mp_read_unsigned_bin(mpi, (byte*)input + i, length) != 0) {
 670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_clear(mpi);
 671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_GETINT_E;
 672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = i + length;
 675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
 676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* hashType */
 680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte hashMd2hOid[] = {42, 134, 72, 134, 247, 13, 2, 2};
 681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte hashMd5hOid[] = {42, 134, 72, 134, 247, 13, 2, 5};
 682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte hashSha1hOid[] = {43, 14, 3, 2, 26};
 683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte hashSha256hOid[] = {96, 134, 72, 1, 101, 3, 4, 2, 1};
 684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte hashSha384hOid[] = {96, 134, 72, 1, 101, 3, 4, 2, 2};
 685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte hashSha512hOid[] = {96, 134, 72, 1, 101, 3, 4, 2, 3};
 686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* sigType */
 688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_DSA
 689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha1wDsaOid[] = {42, 134, 72, 206, 56, 4, 3};
 690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_DSA */
 691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RSA
 692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigMd2wRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1, 2};
 693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigMd5wRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1, 4};
 694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha1wRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1, 5};
 695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha256wRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1,11};
 696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha384wRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1,12};
 697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha512wRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1,13};
 698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_RSA */
 699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
 700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha1wEcdsaOid[] = {42, 134, 72, 206, 61, 4, 1};
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 15


 701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha256wEcdsaOid[] = {42, 134, 72, 206, 61, 4, 3, 2};
 702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha384wEcdsaOid[] = {42, 134, 72, 206, 61, 4, 3, 3};
 703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte sigSha512wEcdsaOid[] = {42, 134, 72, 206, 61, 4, 3, 4};
 704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
 705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* keyType */
 707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_DSA
 708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte keyDsaOid[] = {42, 134, 72, 206, 56, 4, 1};
 709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_DSA */
 710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RSA
 711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte keyRsaOid[] = {42, 134, 72, 134, 247, 13, 1, 1, 1};
 712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_RSA */
 713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
 714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte keyNtruOid[] = {43, 6, 1, 4, 1, 193, 22, 1, 1, 1, 1};
 715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_NTRU */
 716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
 717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte keyEcdsaOid[] = {42, 134, 72, 206, 61, 2, 1};
 718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
 719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* curveType */
 721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
 722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC192)
 723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         static const byte curve192v1Oid[] = {42, 134, 72, 206, 61, 3, 1, 1};
 724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ALL_CURVES || HAVE_ECC192 */
 725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(HAVE_ALL_CURVES) || !defined(NO_ECC256)
 726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         static const byte curve256v1Oid[] = {42, 134, 72, 206, 61, 3, 1, 7};
 727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ALL_CURVES || HAVE_ECC256 */
 728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC160)
 729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         static const byte curve160r1Oid[] = {43, 129, 4, 0, 2};
 730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ALL_CURVES || HAVE_ECC160 */
 731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC224)
 732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         static const byte curve224r1Oid[] = {43, 129, 4, 0, 33};
 733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ALL_CURVES || HAVE_ECC224 */
 734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC384)
 735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         static const byte curve384r1Oid[] = {43, 129, 4, 0, 34};
 736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ALL_CURVES || HAVE_ECC384 */
 737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC521)
 738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         static const byte curve521r1Oid[] = {43, 129, 4, 0, 35};
 739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ALL_CURVES || HAVE_ECC521 */
 740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
 741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* blkType */
 743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte blkDesCbcOid[]  = {43, 14, 3, 2, 7};
 744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte blkDes3CbcOid[] = {42, 134, 72, 134, 247, 13, 3, 7};
 745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* ocspType */
 747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_OCSP
 748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ocspBasicOid[] = {43, 6, 1, 5, 5, 7, 48, 1, 1};
 749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ocspNonceOid[] = {43, 6, 1, 5, 5, 7, 48, 1, 2};
 750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_OCSP */
 751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* certExtType */
 753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extBasicCaOid[] = {85, 29, 19};
 754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extAltNamesOid[] = {85, 29, 17};
 755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extCrlDistOid[] = {85, 29, 31};
 756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extAuthInfoOid[] = {43, 6, 1, 5, 5, 7, 1, 1};
 757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extAuthKeyOid[] = {85, 29, 35};
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 16


 758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extSubjKeyOid[] = {85, 29, 14};
 759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extCertPolicyOid[] = {85, 29, 32};
 760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extKeyUsageOid[] = {85, 29, 15};
 761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extInhibitAnyOid[] = {85, 29, 54};
 762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extExtKeyUsageOid[] = {85, 29, 37};
 763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extNameConsOid[] = {85, 29, 30};
 764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* certAuthInfoType */
 766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extAuthInfoOcspOid[] = {43, 6, 1, 5, 5, 7, 48, 1};
 767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extAuthInfoCaIssuerOid[] = {43, 6, 1, 5, 5, 7, 48, 2};
 768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* certPolicyType */
 770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extCertPolicyAnyOid[] = {85, 29, 32, 0};
 771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* certKeyUseType */
 773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extAltNamesHwNameOid[] = {43, 6, 1, 5, 5, 7, 8, 4};
 774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* certKeyUseType */
 776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extExtKeyUsageAnyOid[] = {85, 29, 37, 0};
 777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extExtKeyUsageServerAuthOid[] = {43, 6, 1, 5, 5, 7, 3, 1};
 778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extExtKeyUsageClientAuthOid[] = {43, 6, 1, 5, 5, 7, 3, 2};
 779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte extExtKeyUsageOcspSignOid[] = {43, 6, 1, 5, 5, 7, 3, 9};
 780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* kdfType */
 782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte pbkdf2Oid[] = {42, 134, 72, 134, 247, 13, 1, 5, 12};
 783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const byte* OidFromId(word32 id, word32 type, word32* oidSz)
 785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
  89              		.loc 1 785 0
  90              		.cfi_startproc
  91              	.LVL5:
  92 0000 031C     		mov	r3, r0
 786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const byte* oid = NULL;
 787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *oidSz = 0;
  93              		.loc 1 788 0
  94 0002 0020     		mov	r0, #0
  95              	.LVL6:
 785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const byte* oid = NULL;
  96              		.loc 1 785 0
  97 0004 00B5     		push	{lr}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 14, -4
 100              		.loc 1 788 0
 101 0006 1060     		str	r0, [r2]
 789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (type) {
 102              		.loc 1 790 0
 103 0008 0B29     		cmp	r1, #11
 104 000a 00D9     		bls	.LCB72
 105 000c DAE0     		b	.L59	@long jump
 106              	.LCB72:
 107 000e 081C     		mov	r0, r1
 108 0010 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 109              	.L5:
 110 0014 06       		.byte	(.L4-.L5)/2
 111 0015 D8       		.byte	(.L59-.L5)/2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 17


 112 0016 D8       		.byte	(.L59-.L5)/2
 113 0017 D8       		.byte	(.L59-.L5)/2
 114 0018 37       		.byte	(.L6-.L5)/2
 115 0019 D8       		.byte	(.L59-.L5)/2
 116 001a 47       		.byte	(.L7-.L5)/2
 117 001b 98       		.byte	(.L8-.L5)/2
 118 001c A4       		.byte	(.L9-.L5)/2
 119 001d AA       		.byte	(.L10-.L5)/2
 120 001e B1       		.byte	(.L11-.L5)/2
 121 001f CF       		.byte	(.L12-.L5)/2
 122              		.p2align 1
 123              	.L4:
 791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case hashType:
 793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 124              		.loc 1 793 0
 125 0020 A021     		mov	r1, #160
 126              	.LVL7:
 127 0022 FF31     		add	r1, r1, #255
 128 0024 8B42     		cmp	r3, r1
 129 0026 27D0     		beq	.L13
 130 0028 0AD8     		bhi	.L14
 131 002a 582B     		cmp	r3, #88
 132 002c 1FD0     		beq	.L15
 133 002e 0139     		sub	r1, r1, #1
 134 0030 8B42     		cmp	r3, r1
 135 0032 00D0     		beq	.LCB91
 136 0034 C6E0     		b	.L59	@long jump
 137              	.LCB91:
 138              	.LVL8:
 794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case MD2h:
 795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = hashMd2hOid;
 796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashMd2hOid);
 797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case MD5h:
 799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = hashMd5hOid;
 800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashMd5hOid);
 801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SHAh:
 803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = hashSha1hOid;
 804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha1hOid);
 805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SHA256h:
 807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = hashSha256hOid;
 808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha256hOid);
 139              		.loc 1 808 0
 140 0036 0923     		mov	r3, #9
 141              	.LVL9:
 807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha256hOid);
 142              		.loc 1 807 0
 143 0038 6348     		ldr	r0, .L65
 144              	.LVL10:
 145              		.loc 1 808 0
 146 003a 1360     		str	r3, [r2]
 807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha256hOid);
 147              		.loc 1 807 0
 148 003c 4730     		add	r0, r0, #71
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 18


 809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 149              		.loc 1 809 0
 150 003e C2E0     		b	.L3
 151              	.LVL11:
 152              	.L14:
 793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case MD2h:
 153              		.loc 1 793 0
 154 0040 6249     		ldr	r1, .L65+4
 155 0042 8B42     		cmp	r3, r1
 156 0044 0BD0     		beq	.L17
 157 0046 6249     		ldr	r1, .L65+8
 158 0048 8B42     		cmp	r3, r1
 159 004a 0CD0     		beq	.L18
 160 004c E939     		sub	r1, r1, #233
 161 004e 8B42     		cmp	r3, r1
 162 0050 00D0     		beq	.LCB115
 163 0052 B7E0     		b	.L59	@long jump
 164              	.LCB115:
 165              	.LVL12:
 810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SHA384h:
 811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = hashSha384hOid;
 812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha384hOid);
 813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SHA512h:
 815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = hashSha512hOid;
 816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha512hOid);
 166              		.loc 1 816 0
 167 0054 0923     		mov	r3, #9
 168              	.LVL13:
 815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha512hOid);
 169              		.loc 1 815 0
 170 0056 5C48     		ldr	r0, .L65
 171              	.LVL14:
 172              		.loc 1 816 0
 173 0058 1360     		str	r3, [r2]
 815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha512hOid);
 174              		.loc 1 815 0
 175 005a 3530     		add	r0, r0, #53
 817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 176              		.loc 1 817 0
 177 005c B3E0     		b	.L3
 178              	.LVL15:
 179              	.L17:
 796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 180              		.loc 1 796 0
 181 005e 0823     		mov	r3, #8
 182              	.LVL16:
 795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashMd2hOid);
 183              		.loc 1 795 0
 184 0060 5948     		ldr	r0, .L65
 185              	.LVL17:
 796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 186              		.loc 1 796 0
 187 0062 1360     		str	r3, [r2]
 797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case MD5h:
 188              		.loc 1 797 0
 189 0064 AFE0     		b	.L3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 19


 190              	.LVL18:
 191              	.L18:
 800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 192              		.loc 1 800 0
 193 0066 0823     		mov	r3, #8
 194              	.LVL19:
 799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashMd5hOid);
 195              		.loc 1 799 0
 196 0068 5748     		ldr	r0, .L65
 197              	.LVL20:
 800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 198              		.loc 1 800 0
 199 006a 1360     		str	r3, [r2]
 200 006c 9FE0     		b	.L61
 201              	.LVL21:
 202              	.L15:
 804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 203              		.loc 1 804 0
 204 006e 0523     		mov	r3, #5
 205              	.LVL22:
 803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha1hOid);
 206              		.loc 1 803 0
 207 0070 5548     		ldr	r0, .L65
 208              	.LVL23:
 804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 209              		.loc 1 804 0
 210 0072 1360     		str	r3, [r2]
 803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha1hOid);
 211              		.loc 1 803 0
 212 0074 5030     		add	r0, r0, #80
 805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SHA256h:
 213              		.loc 1 805 0
 214 0076 A6E0     		b	.L3
 215              	.LVL24:
 216              	.L13:
 812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 217              		.loc 1 812 0
 218 0078 0923     		mov	r3, #9
 219              	.LVL25:
 811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha384hOid);
 220              		.loc 1 811 0
 221 007a 5348     		ldr	r0, .L65
 222              	.LVL26:
 812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 223              		.loc 1 812 0
 224 007c 1360     		str	r3, [r2]
 811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(hashSha384hOid);
 225              		.loc 1 811 0
 226 007e 3E30     		add	r0, r0, #62
 813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SHA512h:
 227              		.loc 1 813 0
 228 0080 A1E0     		b	.L3
 229              	.LVL27:
 230              	.L6:
 818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 20


 821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case sigType:
 822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifndef NO_DSA
 824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHAwDSA:
 825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha1wDsaOid;
 826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha1wDsaOid);
 827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* NO_DSA */
 829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifndef NO_RSA
 830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_MD2wRSA:
 831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigMd2wRsaOid;
 832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigMd2wRsaOid);
 833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_MD5wRSA:
 835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigMd5wRsaOid;
 836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigMd5wRsaOid);
 837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHAwRSA:
 839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha1wRsaOid;
 840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha1wRsaOid);
 841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHA256wRSA:
 843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha256wRsaOid;
 844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha256wRsaOid);
 845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHA384wRSA:
 847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha384wRsaOid;
 848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha384wRsaOid);
 849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHA512wRSA:
 851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha512wRsaOid;
 852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha512wRsaOid);
 853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* NO_RSA */
 855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef HAVE_ECC
 856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHAwECDSA:
 857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha1wEcdsaOid;
 858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha1wEcdsaOid);
 859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHA256wECDSA:
 861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha256wEcdsaOid;
 862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha256wEcdsaOid);
 863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHA384wECDSA:
 865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha384wEcdsaOid;
 866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha384wEcdsaOid);
 867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CTC_SHA512wECDSA:
 869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = sigSha512wEcdsaOid;
 870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(sigSha512wEcdsaOid);
 871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ECC */
 873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 default:
 874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 21


 878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case keyType:
 879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifndef NO_DSA
 881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case DSAk:
 882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = keyDsaOid;
 883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(keyDsaOid);
 884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* NO_DSA */
 886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifndef NO_RSA
 887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case RSAk:
 888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = keyRsaOid;
 889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(keyRsaOid);
 890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* NO_RSA */
 892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef HAVE_NTRU
 893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case NTRUk:
 894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = keyNtruOid;
 895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(keyNtruOid);
 896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_NTRU */
 898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef HAVE_ECC
 899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECDSAk:
 900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = keyEcdsaOid;
 901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(keyEcdsaOid);
 902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ECC */
 904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 default:
 905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifdef HAVE_ECC
 910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case curveType:
 911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(HAVE_ALL_CURVES) || !defined(NO_ECC256)
 913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECC_256R1:
 914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = curve256v1Oid;
 915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(curve256v1Oid);
 916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ALL_CURVES || HAVE_ECC256 */
 918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC384)
 919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECC_384R1:
 920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = curve384r1Oid;
 921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(curve384r1Oid);
 922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ALL_CURVES || HAVE_ECC384 */
 924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC521)
 925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECC_521R1:
 926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = curve521r1Oid;
 927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(curve521r1Oid);
 928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ALL_CURVES || HAVE_ECC521 */
 930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC160)
 931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECC_160R1:
 932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = curve160r1Oid;
 933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(curve160r1Oid);
 934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 22


 935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ALL_CURVES || HAVE_ECC160 */
 936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC192)
 937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECC_192R1:
 938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = curve192v1Oid;
 939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(curve192v1Oid);
 940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ALL_CURVES || HAVE_ECC192 */
 942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC224)
 943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ECC_224R1:
 944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = curve224r1Oid;
 945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(curve224r1Oid);
 946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* HAVE_ALL_CURVES || HAVE_ECC224 */
 948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 default:
 949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif /* HAVE_ECC */
 953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case blkType:
 955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 231              		.loc 1 955 0
 232 0082 452B     		cmp	r3, #69
 233 0084 09D0     		beq	.L20
 234 0086 A321     		mov	r1, #163
 235 0088 8900     		lsl	r1, r1, #2
 236 008a 8B42     		cmp	r3, r1
 237 008c 00D0     		beq	.LCB194
 238 008e 99E0     		b	.L59	@long jump
 239              	.LCB194:
 240              	.LVL28:
 956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case DESb:
 957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = blkDesCbcOid;
 958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(blkDesCbcOid);
 959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case DES3b:
 961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = blkDes3CbcOid;
 962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(blkDes3CbcOid);
 241              		.loc 1 962 0
 242 0090 0823     		mov	r3, #8
 243              	.LVL29:
 961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(blkDes3CbcOid);
 244              		.loc 1 961 0
 245 0092 4D48     		ldr	r0, .L65
 246              	.LVL30:
 247              		.loc 1 962 0
 248 0094 1360     		str	r3, [r2]
 961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(blkDes3CbcOid);
 249              		.loc 1 961 0
 250 0096 5530     		add	r0, r0, #85
 963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 251              		.loc 1 963 0
 252 0098 95E0     		b	.L3
 253              	.LVL31:
 254              	.L20:
 958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 255              		.loc 1 958 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 23


 256 009a 0523     		mov	r3, #5
 257              	.LVL32:
 957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(blkDesCbcOid);
 258              		.loc 1 957 0
 259 009c 4A48     		ldr	r0, .L65
 260              	.LVL33:
 958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 261              		.loc 1 958 0
 262 009e 1360     		str	r3, [r2]
 263 00a0 80E0     		b	.L63
 264              	.LVL34:
 265              	.L7:
 964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifdef HAVE_OCSP
 968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case ocspType:
 969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case OCSP_BASIC_OID:
 971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = ocspBasicOid;
 972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(ocspBasicOid);
 973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case OCSP_NONCE_OID:
 975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = ocspNonceOid;
 976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(ocspNonceOid);
 977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif /* HAVE_OCSP */
 981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case certExtType:
 983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 266              		.loc 1 983 0
 267 00a2 902B     		cmp	r3, #144
 268 00a4 49D0     		beq	.L22
 269 00a6 15D8     		bhi	.L23
 270 00a8 812B     		cmp	r3, #129
 271 00aa 3CD0     		beq	.L24
 272 00ac 09D8     		bhi	.L25
 273 00ae 452B     		cmp	r3, #69
 274 00b0 2FD0     		beq	.L26
 275 00b2 802B     		cmp	r3, #128
 276 00b4 00D0     		beq	.LCB235
 277 00b6 85E0     		b	.L59	@long jump
 278              	.LCB235:
 279              	.LVL35:
 984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case BASIC_CA_OID:
 985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extBasicCaOid;
 986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extBasicCaOid);
 987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ALT_NAMES_OID:
 989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extAltNamesOid;
 990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAltNamesOid);
 991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CRL_DIST_OID:
 993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extCrlDistOid;
 994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCrlDistOid);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 24


 995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case AUTH_INFO_OID:
 997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extAuthInfoOid;
 998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoOid);
 999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
1000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case AUTH_KEY_OID:
1001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extAuthKeyOid;
1002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthKeyOid);
1003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
1004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SUBJ_KEY_OID:
1005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extSubjKeyOid;
1006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extSubjKeyOid);
 280              		.loc 1 1006 0
 281 00b8 0323     		mov	r3, #3
 282              	.LVL36:
1005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extSubjKeyOid);
 283              		.loc 1 1005 0
 284 00ba 4348     		ldr	r0, .L65
 285              	.LVL37:
 286              		.loc 1 1006 0
 287 00bc 1360     		str	r3, [r2]
1005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extSubjKeyOid);
 288              		.loc 1 1005 0
 289 00be 6C30     		add	r0, r0, #108
1007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 290              		.loc 1 1007 0
 291 00c0 81E0     		b	.L3
 292              	.LVL38:
 293              	.L25:
 983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case BASIC_CA_OID:
 294              		.loc 1 983 0
 295 00c2 832B     		cmp	r3, #131
 296 00c4 1BD0     		beq	.L28
 297 00c6 852B     		cmp	r3, #133
 298 00c8 7CD1     		bne	.L59
 299              	.LVL39:
 986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 300              		.loc 1 986 0
 301 00ca 0323     		mov	r3, #3
 302              	.LVL40:
 985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extBasicCaOid);
 303              		.loc 1 985 0
 304 00cc 3E48     		ldr	r0, .L65
 305              	.LVL41:
 986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 306              		.loc 1 986 0
 307 00ce 1360     		str	r3, [r2]
 985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extBasicCaOid);
 308              		.loc 1 985 0
 309 00d0 1530     		add	r0, r0, #21
 987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case ALT_NAMES_OID:
 310              		.loc 1 987 0
 311 00d2 78E0     		b	.L3
 312              	.LVL42:
 313              	.L23:
 983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case BASIC_CA_OID:
 314              		.loc 1 983 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 25


 315 00d4 952B     		cmp	r3, #149
 316 00d6 21D0     		beq	.L30
 317 00d8 08D8     		bhi	.L31
 318 00da 912B     		cmp	r3, #145
 319 00dc 14D0     		beq	.L32
 320 00de 922B     		cmp	r3, #146
 321 00e0 70D1     		bne	.L59
 322              	.LVL43:
1008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CERT_POLICY_OID:
1009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extCertPolicyOid;
1010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCertPolicyOid);
 323              		.loc 1 1010 0
 324 00e2 0323     		mov	r3, #3
 325              	.LVL44:
1009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCertPolicyOid);
 326              		.loc 1 1009 0
 327 00e4 3848     		ldr	r0, .L65
 328              	.LVL45:
 329              		.loc 1 1010 0
 330 00e6 1360     		str	r3, [r2]
1009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCertPolicyOid);
 331              		.loc 1 1009 0
 332 00e8 6930     		add	r0, r0, #105
1011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 333              		.loc 1 1011 0
 334 00ea 6CE0     		b	.L3
 335              	.LVL46:
 336              	.L31:
 983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case BASIC_CA_OID:
 337              		.loc 1 983 0
 338 00ec 972B     		cmp	r3, #151
 339 00ee 1FD0     		beq	.L34
 340 00f0 A82B     		cmp	r3, #168
 341 00f2 67D1     		bne	.L59
 342              	.LVL47:
1012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case KEY_USAGE_OID:
1013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extKeyUsageOid;
1014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extKeyUsageOid);
1015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
1016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case INHIBIT_ANY_OID:
1017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extInhibitAnyOid;
1018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extInhibitAnyOid);
 343              		.loc 1 1018 0
 344 00f4 0323     		mov	r3, #3
 345              	.LVL48:
1017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extInhibitAnyOid);
 346              		.loc 1 1017 0
 347 00f6 3448     		ldr	r0, .L65
 348              	.LVL49:
 349              		.loc 1 1018 0
 350 00f8 1360     		str	r3, [r2]
1017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extInhibitAnyOid);
 351              		.loc 1 1017 0
 352 00fa 6330     		add	r0, r0, #99
1019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 353              		.loc 1 1019 0
 354 00fc 63E0     		b	.L3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 26


 355              	.LVL50:
 356              	.L28:
 990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 357              		.loc 1 990 0
 358 00fe 0323     		mov	r3, #3
 359              	.LVL51:
 989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAltNamesOid);
 360              		.loc 1 989 0
 361 0100 3148     		ldr	r0, .L65
 362              	.LVL52:
 990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 363              		.loc 1 990 0
 364 0102 1360     		str	r3, [r2]
 989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAltNamesOid);
 365              		.loc 1 989 0
 366 0104 7D30     		add	r0, r0, #125
 991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CRL_DIST_OID:
 367              		.loc 1 991 0
 368 0106 5EE0     		b	.L3
 369              	.LVL53:
 370              	.L32:
 994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 371              		.loc 1 994 0
 372 0108 0323     		mov	r3, #3
 373              	.LVL54:
 993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCrlDistOid);
 374              		.loc 1 993 0
 375 010a 2F48     		ldr	r0, .L65
 376              	.LVL55:
 994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 377              		.loc 1 994 0
 378 010c 1360     		str	r3, [r2]
 993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCrlDistOid);
 379              		.loc 1 993 0
 380 010e 7A30     		add	r0, r0, #122
 995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case AUTH_INFO_OID:
 381              		.loc 1 995 0
 382 0110 59E0     		b	.L3
 383              	.LVL56:
 384              	.L26:
 998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 385              		.loc 1 998 0
 386 0112 0823     		mov	r3, #8
 387              	.LVL57:
 997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoOid);
 388              		.loc 1 997 0
 389 0114 2C48     		ldr	r0, .L65
 390              	.LVL58:
 998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 391              		.loc 1 998 0
 392 0116 1360     		str	r3, [r2]
 997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoOid);
 393              		.loc 1 997 0
 394 0118 7230     		add	r0, r0, #114
 999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case AUTH_KEY_OID:
 395              		.loc 1 999 0
 396 011a 54E0     		b	.L3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 27


 397              	.LVL59:
 398              	.L30:
1002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 399              		.loc 1 1002 0
 400 011c 0323     		mov	r3, #3
 401              	.LVL60:
1001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthKeyOid);
 402              		.loc 1 1001 0
 403 011e 2A48     		ldr	r0, .L65
 404              	.LVL61:
1002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 405              		.loc 1 1002 0
 406 0120 1360     		str	r3, [r2]
1001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthKeyOid);
 407              		.loc 1 1001 0
 408 0122 6F30     		add	r0, r0, #111
1003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case SUBJ_KEY_OID:
 409              		.loc 1 1003 0
 410 0124 4FE0     		b	.L3
 411              	.LVL62:
 412              	.L24:
1014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 413              		.loc 1 1014 0
 414 0126 0323     		mov	r3, #3
 415              	.LVL63:
1013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extKeyUsageOid);
 416              		.loc 1 1013 0
 417 0128 2748     		ldr	r0, .L65
 418              	.LVL64:
1014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 419              		.loc 1 1014 0
 420 012a 1360     		str	r3, [r2]
1013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extKeyUsageOid);
 421              		.loc 1 1013 0
 422 012c 6630     		add	r0, r0, #102
1015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case INHIBIT_ANY_OID:
 423              		.loc 1 1015 0
 424 012e 4AE0     		b	.L3
 425              	.LVL65:
 426              	.L34:
1020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EXT_KEY_USAGE_OID:
1021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extExtKeyUsageOid;
1022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageOid);
 427              		.loc 1 1022 0
 428 0130 0323     		mov	r3, #3
 429              	.LVL66:
1021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageOid);
 430              		.loc 1 1021 0
 431 0132 2548     		ldr	r0, .L65
 432              	.LVL67:
 433              		.loc 1 1022 0
 434 0134 1360     		str	r3, [r2]
1021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageOid);
 435              		.loc 1 1021 0
 436 0136 6030     		add	r0, r0, #96
1023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 437              		.loc 1 1023 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 28


 438 0138 45E0     		b	.L3
 439              	.LVL68:
 440              	.L22:
1024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case NAME_CONS_OID:
1025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extNameConsOid;
1026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extNameConsOid);
 441              		.loc 1 1026 0
 442 013a 0323     		mov	r3, #3
 443              	.LVL69:
1025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extNameConsOid);
 444              		.loc 1 1025 0
 445 013c 2248     		ldr	r0, .L65
 446              	.LVL70:
 447              		.loc 1 1026 0
 448 013e 1360     		str	r3, [r2]
1025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extNameConsOid);
 449              		.loc 1 1025 0
 450 0140 5D30     		add	r0, r0, #93
1027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 451              		.loc 1 1027 0
 452 0142 40E0     		b	.L3
 453              	.LVL71:
 454              	.L8:
1028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case certAuthInfoType:
1032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 455              		.loc 1 1032 0
 456 0144 742B     		cmp	r3, #116
 457 0146 05D0     		beq	.L36
 458 0148 752B     		cmp	r3, #117
 459 014a 3BD1     		bne	.L59
 460              	.LVL72:
1033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case AIA_OCSP_OID:
1034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extAuthInfoOcspOid;
1035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoOcspOid);
1036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
1037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case AIA_CA_ISSUER_OID:
1038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extAuthInfoCaIssuerOid;
1039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoCaIssuerOid);
 461              		.loc 1 1039 0
 462 014c 0823     		mov	r3, #8
 463              	.LVL73:
1038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoCaIssuerOid);
 464              		.loc 1 1038 0
 465 014e 2148     		ldr	r0, .L65+12
 466              	.LVL74:
 467              		.loc 1 1039 0
 468 0150 1360     		str	r3, [r2]
1040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 469              		.loc 1 1040 0
 470 0152 38E0     		b	.L3
 471              	.LVL75:
 472              	.L36:
1035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 473              		.loc 1 1035 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 29


 474 0154 0823     		mov	r3, #8
 475              	.LVL76:
1034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAuthInfoOcspOid);
 476              		.loc 1 1034 0
 477 0156 1C48     		ldr	r0, .L65
 478              	.LVL77:
1035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 479              		.loc 1 1035 0
 480 0158 1360     		str	r3, [r2]
 481 015a 1EE0     		b	.L62
 482              	.LVL78:
 483              	.L9:
1041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case certPolicyType:
1045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 484              		.loc 1 1045 0
 485 015c 922B     		cmp	r3, #146
 486 015e 31D1     		bne	.L59
 487              	.LVL79:
1046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case CP_ANY_OID:
1047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extCertPolicyAnyOid;
1048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCertPolicyAnyOid);
 488              		.loc 1 1048 0
 489 0160 8E3B     		sub	r3, r3, #142
 490              	.LVL80:
 491 0162 1360     		str	r3, [r2]
1047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extCertPolicyAnyOid);
 492              		.loc 1 1047 0
 493 0164 1848     		ldr	r0, .L65
 494              	.LVL81:
 495 0166 16E0     		b	.L60
 496              	.LVL82:
 497              	.L10:
1049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
1050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case certAltNameType:
1054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 498              		.loc 1 1054 0
 499 0168 4F2B     		cmp	r3, #79
 500 016a 2BD1     		bne	.L59
 501              	.LVL83:
1055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case HW_NAME_OID:
1056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extAltNamesHwNameOid;
 502              		.loc 1 1056 0
 503 016c 1648     		ldr	r0, .L65
 504              	.LVL84:
1057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAltNamesHwNameOid);
 505              		.loc 1 1057 0
 506 016e 473B     		sub	r3, r3, #71
 507              	.LVL85:
 508 0170 1360     		str	r3, [r2]
1056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extAltNamesHwNameOid);
 509              		.loc 1 1056 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 30


 510 0172 2430     		add	r0, r0, #36
1058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 511              		.loc 1 1058 0
 512 0174 27E0     		b	.L3
 513              	.LVL86:
 514              	.L11:
1059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case certKeyUseType:
1063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 515              		.loc 1 1063 0
 516 0176 482B     		cmp	r3, #72
 517 0178 11D0     		beq	.L40
 518 017a 05D8     		bhi	.L41
 519 017c 472B     		cmp	r3, #71
 520 017e 18D1     		bne	.L12
 521              	.LVL87:
1064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EKU_ANY_OID:
1065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extExtKeyUsageAnyOid;
1066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageAnyOid);
1067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
1068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EKU_SERVER_AUTH_OID:
1069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extExtKeyUsageServerAuthOid;
1070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageServerAuthOid);
 522              		.loc 1 1070 0
 523 0180 0823     		mov	r3, #8
 524              	.LVL88:
1069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageServerAuthOid);
 525              		.loc 1 1069 0
 526 0182 1448     		ldr	r0, .L65+12
 527              	.LVL89:
 528              		.loc 1 1070 0
 529 0184 1360     		str	r3, [r2]
 530 0186 08E0     		b	.L62
 531              	.LVL90:
 532              	.L41:
1063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EKU_ANY_OID:
 533              		.loc 1 1063 0
 534 0188 4F2B     		cmp	r3, #79
 535 018a 0DD0     		beq	.L43
 536 018c 972B     		cmp	r3, #151
 537 018e 10D1     		bne	.L12
 538              	.LVL91:
1066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 539              		.loc 1 1066 0
 540 0190 933B     		sub	r3, r3, #147
 541              	.LVL92:
1065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageAnyOid);
 542              		.loc 1 1065 0
 543 0192 1048     		ldr	r0, .L65+12
 544              	.LVL93:
1066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 545              		.loc 1 1066 0
 546 0194 1360     		str	r3, [r2]
 547              	.LVL94:
 548              	.L60:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 31


1065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageAnyOid);
 549              		.loc 1 1065 0
 550 0196 2030     		add	r0, r0, #32
1067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EKU_SERVER_AUTH_OID:
 551              		.loc 1 1067 0
 552 0198 15E0     		b	.L3
 553              	.L62:
1069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageServerAuthOid);
 554              		.loc 1 1069 0
 555 019a 1830     		add	r0, r0, #24
1071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 556              		.loc 1 1071 0
 557 019c 13E0     		b	.L3
 558              	.LVL95:
 559              	.L40:
1072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EKU_CLIENT_AUTH_OID:
1073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extExtKeyUsageClientAuthOid;
1074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageClientAuthOid);
 560              		.loc 1 1074 0
 561 019e 0823     		mov	r3, #8
 562              	.LVL96:
1073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageClientAuthOid);
 563              		.loc 1 1073 0
 564 01a0 0C48     		ldr	r0, .L65+12
 565              	.LVL97:
 566              		.loc 1 1074 0
 567 01a2 1360     		str	r3, [r2]
 568              	.LVL98:
 569              	.L63:
1073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageClientAuthOid);
 570              		.loc 1 1073 0
 571 01a4 1030     		add	r0, r0, #16
1075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 572              		.loc 1 1075 0
 573 01a6 0EE0     		b	.L3
 574              	.LVL99:
 575              	.L43:
1076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case EKU_OCSP_SIGN_OID:
1077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = extExtKeyUsageOcspSignOid;
1078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageOcspSignOid);
 576              		.loc 1 1078 0
 577 01a8 0823     		mov	r3, #8
 578              	.LVL100:
1077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageOcspSignOid);
 579              		.loc 1 1077 0
 580 01aa 0A48     		ldr	r0, .L65+12
 581              	.LVL101:
 582              		.loc 1 1078 0
 583 01ac 1360     		str	r3, [r2]
 584              	.LVL102:
 585              	.L61:
1077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(extExtKeyUsageOcspSignOid);
 586              		.loc 1 1077 0
 587 01ae C018     		add	r0, r0, r3
1079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 588              		.loc 1 1079 0
 589 01b0 09E0     		b	.L3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 32


 590              	.LVL103:
 591              	.L12:
1080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case kdfType:
1083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             switch (id) {
 592              		.loc 1 1083 0
 593 01b2 A521     		mov	r1, #165
 594 01b4 8900     		lsl	r1, r1, #2
 595 01b6 8B42     		cmp	r3, r1
 596 01b8 04D1     		bne	.L59
 597              	.LVL104:
1084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case PBKDF2_OID:
1085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid = pbkdf2Oid;
1086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(pbkdf2Oid);
 598              		.loc 1 1086 0
 599 01ba 0923     		mov	r3, #9
 600              	.LVL105:
1085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(pbkdf2Oid);
 601              		.loc 1 1085 0
 602 01bc 0248     		ldr	r0, .L65
 603              	.LVL106:
 604              		.loc 1 1086 0
 605 01be 1360     		str	r3, [r2]
1085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *oidSz = sizeof(pbkdf2Oid);
 606              		.loc 1 1085 0
 607 01c0 2C30     		add	r0, r0, #44
1087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
 608              		.loc 1 1087 0
 609 01c2 00E0     		b	.L3
 610              	.LVL107:
 611              	.L59:
1083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 case PBKDF2_OID:
 612              		.loc 1 1083 0
 613 01c4 0020     		mov	r0, #0
 614              	.LVL108:
 615              	.L3:
1088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case ignoreType:
1092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
1093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return oid;
1097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 616              		.loc 1 1097 0
 617              		@ sp needed
 618 01c6 00BD     		pop	{pc}
 619              	.L66:
 620              		.align	2
 621              	.L65:
 622 01c8 00000000 		.word	.LANCHOR0
 623 01cc 86020000 		.word	646
 624 01d0 89020000 		.word	649
 625 01d4 80000000 		.word	.LANCHOR1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 33


 626              		.cfi_endproc
 627              	.LFE20:
 628              		.size	OidFromId, .-OidFromId
 629              		.section	.text.DateGreaterThan,"ax",%progbits
 630              		.align	1
 631              		.code	16
 632              		.thumb_func
 633              		.type	DateGreaterThan, %function
 634              	DateGreaterThan:
 635              	.LFB31:
1098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetObjectId(const byte* input, word32* inOutIdx, word32* oid,
1101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               word32 oidType, word32 maxIdx)
1102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = *inOutIdx;
1105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_VERIFY_OID
1106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 actualOidSz = 0;
1107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const byte* actualOid;
1108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_VERIFY_OID */
1109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
1110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)oidType;
1112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetObjectId()");
1113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *oid = 0;
1114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[i++];
1116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_OBJECT_ID)
1117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_OBJECT_ID_E;
1118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &i, &length, maxIdx) < 0)
1120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_VERIFY_OID
1123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     actualOid = &input[i];
1124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > 0)
1125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         actualOidSz = (word32)length;
1126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_VERIFY_OID */
1127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while(length--) {
1129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* odd HC08 compiler behavior here when input[i++] */
1130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *oid += input[i];
1131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i++;
1132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* just sum it up for now */
1134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = i;
1136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_VERIFY_OID
1138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
1139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         const byte* checkOid = NULL;
1140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 checkOidSz;
1141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (oidType != ignoreType) {
1143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             checkOid = OidFromId(*oid, oidType, &checkOidSz);
1144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 34


1145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (checkOid != NULL &&
1146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 (checkOidSz != actualOidSz ||
1147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  XMEMCMP(actualOid, checkOid, checkOidSz) != 0)) {
1148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("OID Check Failed");
1150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_UNKNOWN_OID_E;
1151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_VERIFY_OID */
1155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RSA
1161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef HAVE_USER_RSA
1162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(OPENSSL_EXTRA) || defined(RSA_DECODE_EXTRA)
1163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SkipObjectId(const byte* input, word32* inOutIdx, word32 maxIdx)
1164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[(*inOutIdx)++] != ASN_OBJECT_ID)
1168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_OBJECT_ID_E;
1169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, inOutIdx, &length, maxIdx) < 0)
1171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx += length;
1174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA || RSA_DECODE_EXTRA */
1178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !HAVE_USER_RSA */
1179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_RSA */
1180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetAlgoId(const byte* input, word32* inOutIdx, word32* oid,
1182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                      word32 oidType, word32 maxIdx)
1183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = *inOutIdx;
1186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
1187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *oid = 0;
1188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetAlgoId");
1190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &i, &length, maxIdx) < 0)
1192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetObjectId(input, &i, oid, oidType, maxIdx) < 0)
1195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_OBJECT_ID_E;
1196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* could have NULL tag and 0 terminator, but may not */
1198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[i];
1199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b == ASN_TAG_NULL) {
1201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i++;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 35


1202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[i++];
1203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != 0)
1204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_EXPECT_0_E;
1205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = i;
1208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RSA
1213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_CAVIUM
1216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetCaviumInt(byte** buff, word16* buffSz, const byte* input,
1218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         word32* inOutIdx, word32 maxIdx, void* heap)
1219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = *inOutIdx;
1221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b = input[i++];
1222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_INTEGER)
1225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &i, &length, maxIdx) < 0)
1228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (b = input[i++]) == 0x00)
1231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         length--;
1232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
1233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i--;
1234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *buffSz = (word16)length;
1236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *buff   = XMALLOC(*buffSz, heap, DYNAMIC_TYPE_CAVIUM_RSA);
1237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (*buff == NULL)
1238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
1239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(*buff, input + i, *buffSz);
1241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = i + length;
1243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int CaviumRsaPrivateKeyDecode(const byte* input, word32* inOutIdx,
1247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      RsaKey* key, word32 inSz)
1248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int   version, length;
1250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     void* h = key->heap;
1251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetMyVersion(input, inOutIdx, &version) < 0)
1256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key->type = RSA_PRIVATE;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 36


1259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetCaviumInt(&key->c_n,  &key->c_nSz,   input, inOutIdx, inSz, h) < 0 ||
1261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_e,  &key->c_eSz,   input, inOutIdx, inSz, h) < 0 ||
1262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_d,  &key->c_dSz,   input, inOutIdx, inSz, h) < 0 ||
1263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_p,  &key->c_pSz,   input, inOutIdx, inSz, h) < 0 ||
1264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_q,  &key->c_qSz,   input, inOutIdx, inSz, h) < 0 ||
1265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_dP, &key->c_dP_Sz, input, inOutIdx, inSz, h) < 0 ||
1266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_dQ, &key->c_dQ_Sz, input, inOutIdx, inSz, h) < 0 ||
1267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetCaviumInt(&key->c_u,  &key->c_uSz,   input, inOutIdx, inSz, h) < 0 )
1268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_RSA_KEY_E;
1269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_CAVIUM */
1275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef HAVE_USER_RSA
1277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_RsaPrivateKeyDecode(const byte* input, word32* inOutIdx, RsaKey* key,
1278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         word32 inSz)
1279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    version, length;
1281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_CAVIUM
1283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (key->magic == WOLFSSL_RSA_CAVIUM_MAGIC)
1284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return CaviumRsaPrivateKeyDecode(input, inOutIdx, key, inSz);
1285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetMyVersion(input, inOutIdx, &version) < 0)
1291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key->type = RSA_PRIVATE;
1294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(&key->n,  input, inOutIdx, inSz) < 0 ||
1296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->e,  input, inOutIdx, inSz) < 0 ||
1297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->d,  input, inOutIdx, inSz) < 0 ||
1298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->p,  input, inOutIdx, inSz) < 0 ||
1299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->q,  input, inOutIdx, inSz) < 0 ||
1300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->dP, input, inOutIdx, inSz) < 0 ||
1301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->dQ, input, inOutIdx, inSz) < 0 ||
1302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->u,  input, inOutIdx, inSz) < 0 )  return ASN_RSA_KEY_E;
1303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_USER_RSA */
1307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_RSA */
1308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Remove PKCS8 header, move beginning of traditional to beginning of input */
1310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int ToTraditional(byte* input, word32 sz)
1311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 inOutIdx = 0, oid;
1313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    version, length;
1314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &inOutIdx, &length, sz) < 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 37


1316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetMyVersion(input, &inOutIdx, &version) < 0)
1319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetAlgoId(input, &inOutIdx, &oid, sigType, sz) < 0)
1322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[inOutIdx] == ASN_OBJECT_ID) {
1325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* pkcs8 ecc uses slightly different format */
1326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         inOutIdx++;  /* past id */
1327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &inOutIdx, &length, sz) < 0)
1328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         inOutIdx += length;  /* over sub id, key input will verify */
1330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[inOutIdx++] != ASN_OCTET_STRING)
1333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &inOutIdx, &length, sz) < 0)
1336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMMOVE(input, input + inOutIdx, length);
1339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return length;
1341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_PWDBASED
1345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Check To see if PKCS version algo is supported, set id if it is return 0
1347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    < 0 on error */
1348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int CheckAlgo(int first, int second, int* id, int* version)
1349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *id      = ALGO_ID_E;
1351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *version = PKCS5;   /* default */
1352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (first == 1) {
1354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         switch (second) {
1355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 1:
1356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *id = PBE_SHA1_RC4_128;
1357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *version = PKCS12;
1358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
1359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 3:
1360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *id = PBE_SHA1_DES3;
1361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *version = PKCS12;
1362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
1363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
1364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ALGO_ID_E;
1365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (first != PKCS5)
1369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_INPUT_E;  /* VERSION ERROR */
1370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (second == PBES2) {
1372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *version = PKCS5v2;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 38


1373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
1374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (second) {
1377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 3:                   /* see RFC 2898 for ids */
1378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *id = PBE_MD5_DES;
1379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
1380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 10:
1381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *id = PBE_SHA1_DES;
1382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
1383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     default:
1384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ALGO_ID_E;
1385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Check To see if PKCS v2 algo is supported, set id if it is return 0
1391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    < 0 on error */
1392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int CheckAlgoV2(int oid, int* id)
1393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (oid) {
1395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 69:
1396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *id = PBE_SHA1_DES;
1397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
1398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 652:
1399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *id = PBE_SHA1_DES3;
1400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
1401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     default:
1402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ALGO_ID_E;
1403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Decrypt input in place from parameters based on id */
1409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecryptKey(const char* password, int passwordSz, byte* salt,
1410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                       int saltSz, int iterations, int id, byte* input,
1411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                       int length, int version, byte* cbcIv)
1412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int typeH;
1414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int derivedLen;
1415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int decryptionType;
1416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret = 0;
1417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* key;
1419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
1420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte key[MAX_KEY_SIZE];
1421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)input;
1424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)length;
1425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (id) {
1427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case PBE_MD5_DES:
1428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH = MD5;
1429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             derivedLen = 16;           /* may need iv for v1.5 */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 39


1430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             decryptionType = DES_TYPE;
1431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case PBE_SHA1_DES:
1434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH = SHA;
1435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             derivedLen = 16;           /* may need iv for v1.5 */
1436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             decryptionType = DES_TYPE;
1437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case PBE_SHA1_DES3:
1440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH = SHA;
1441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             derivedLen = 32;           /* may need iv for v1.5 */
1442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             decryptionType = DES3_TYPE;
1443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case PBE_SHA1_RC4_128:
1446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH = SHA;
1447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             derivedLen = 16;
1448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             decryptionType = RC4_TYPE;
1449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
1452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ALGO_ID_E;
1453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key = (byte*)XMALLOC(MAX_KEY_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (key == NULL)
1458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
1459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (version == PKCS5v2)
1462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_PBKDF2(key, (byte*)password, passwordSz,
1463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         salt, saltSz, iterations, derivedLen, typeH);
1464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_SHA
1465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (version == PKCS5)
1466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_PBKDF1(key, (byte*)password, passwordSz,
1467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         salt, saltSz, iterations, derivedLen, typeH);
1468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (version == PKCS12) {
1470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  i, idx = 0;
1471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte unicodePasswd[MAX_UNICODE_SZ];
1472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ( (passwordSz * 2 + 2) > (int)sizeof(unicodePasswd)) {
1474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return UNICODE_SIZE_E;
1478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         for (i = 0; i < passwordSz; i++) {
1481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             unicodePasswd[idx++] = 0x00;
1482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             unicodePasswd[idx++] = (byte)password[i];
1483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* add trailing NULL */
1485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         unicodePasswd[idx++] = 0x00;
1486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         unicodePasswd[idx++] = 0x00;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 40


1487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret =  wc_PKCS12_PBKDF(key, unicodePasswd, idx, salt, saltSz,
1489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             iterations, derivedLen, typeH, 1);
1490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decryptionType != RC4_TYPE)
1491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret += wc_PKCS12_PBKDF(cbcIv, unicodePasswd, idx, salt, saltSz,
1492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 iterations, 8, typeH, 2);
1493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
1495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ALGO_ID_E;
1499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
1502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
1506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (decryptionType) {
1509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_DES3
1510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case DES_TYPE:
1511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
1512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             Des    dec;
1513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte*  desIv = key + 8;
1514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (version == PKCS5v2 || version == PKCS12)
1516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 desIv = cbcIv;
1517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_Des_SetKey(&dec, key, desIv, DES_DECRYPTION);
1519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret != 0) {
1520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ret;
1524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_Des_CbcDecrypt(&dec, input, input, length);
1527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case DES3_TYPE:
1531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
1532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             Des3   dec;
1533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte*  desIv = key + 24;
1534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (version == PKCS5v2 || version == PKCS12)
1536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 desIv = cbcIv;
1537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_Des3_SetKey(&dec, key, desIv, DES_DECRYPTION);
1538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret != 0) {
1539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ret;
1543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 41


1544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_Des3_CbcDecrypt(&dec, input, input, length);
1545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret != 0) {
1546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ret;
1550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
1551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RC4
1555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case RC4_TYPE:
1556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
1557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             Arc4    dec;
1558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_Arc4SetKey(&dec, key, derivedLen);
1560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_Arc4Process(&dec, input, input, length);
1561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
1566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ALGO_ID_E;
1570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(key, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Remove Encrypted PKCS8 header, move beginning of traditional to beginning
1581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    of input */
1582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int ToTraditionalEnc(byte* input, word32 sz,const char* password,int passwordSz)
1583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 inOutIdx = 0, oid;
1585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    first, second, length, version, saltSz, id;
1586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    iterations = 0;
1587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*  salt = NULL;
1589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*  cbcIv = NULL;
1590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
1591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   salt[MAX_SALT_SIZE];
1592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   cbcIv[MAX_IV_SIZE];
1593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &inOutIdx, &length, sz) < 0)
1596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetAlgoId(input, &inOutIdx, &oid, sigType, sz) < 0)
1599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 42


1601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     first  = input[inOutIdx - 2];   /* PKCS version always 2nd to last byte */
1602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     second = input[inOutIdx - 1];   /* version.algo, algo id last byte */
1603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (CheckAlgo(first, second, &id, &version) < 0)
1605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_INPUT_E;  /* Algo ID error */
1606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (version == PKCS5v2) {
1608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, &inOutIdx, &length, sz) < 0)
1610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetAlgoId(input, &inOutIdx, &oid, kdfType, sz) < 0)
1613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (oid != PBKDF2_OID)
1616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &inOutIdx, &length, sz) < 0)
1620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[inOutIdx++] != ASN_OCTET_STRING)
1623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &inOutIdx, &saltSz, sz) < 0)
1626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (saltSz > MAX_SALT_SIZE)
1629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     salt = (byte*)XMALLOC(MAX_SALT_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (salt == NULL)
1634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
1635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(salt, &input[inOutIdx], saltSz);
1638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     inOutIdx += saltSz;
1639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetShortInt(input, &inOutIdx, &iterations) < 0) {
1641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cbcIv = (byte*)XMALLOC(MAX_IV_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cbcIv == NULL) {
1650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
1652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (version == PKCS5v2) {
1656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* get encryption algo */
1657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* JOHN: New type. Need a little more research. */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 43


1658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetAlgoId(input, &inOutIdx, &oid, blkType, sz) < 0) {
1659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (CheckAlgoV2(oid, &id) < 0) {
1667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;  /* PKCS v2 algo id error */
1672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[inOutIdx++] != ASN_OCTET_STRING) {
1675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &inOutIdx, &length, sz) < 0) {
1683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cbcIv, &input[inOutIdx], length);
1691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         inOutIdx += length;
1692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[inOutIdx++] != ASN_OCTET_STRING) {
1695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &inOutIdx, &length, sz) < 0) {
1703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (DecryptKey(password, passwordSz, salt, saltSz, iterations, id,
1711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    input + inOutIdx, length, version, cbcIv) < 0) {
1712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 44


1715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_INPUT_E;  /* decrypt failure */
1717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
1720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(salt,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
1721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(cbcIv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMMOVE(input, input + inOutIdx, length);
1725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ToTraditional(input, length);
1726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_PWDBASED */
1729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RSA
1731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef HAVE_USER_RSA
1733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_RsaPublicKeyDecode(const byte* input, word32* inOutIdx, RsaKey* key,
1734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                        word32 inSz)
1735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key->type = RSA_PUBLIC;
1742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(OPENSSL_EXTRA) || defined(RSA_DECODE_EXTRA)
1744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
1745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte b = input[*inOutIdx];
1746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_INTEGER) {
1747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* not from decoded cert, will have algo id, skip past */
1748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (SkipObjectId(input, inOutIdx, inSz) < 0)
1752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* could have NULL tag and 0 terminator, but may not */
1755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[(*inOutIdx)++];
1756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b == ASN_TAG_NULL) {
1758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[(*inOutIdx)++];
1759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != 0)
1760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_EXPECT_0_E;
1761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
1763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* go back, didn't have it */
1764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             (*inOutIdx)--;
1765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* should have bit tag length and seq next */
1767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[(*inOutIdx)++];
1768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != ASN_BIT_STRING)
1769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_BITSTR_E;
1770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, inOutIdx, &length, inSz) < 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 45


1772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* could have 0 */
1775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[(*inOutIdx)++];
1776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != 0)
1777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             (*inOutIdx)--;
1778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
1781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }  /* end if */
1782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }  /* openssl var block */
1783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA */
1784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(&key->n,  input, inOutIdx, inSz) < 0 ||
1786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->e,  input, inOutIdx, inSz) < 0 )  return ASN_RSA_KEY_E;
1787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* import RSA public key elements (n, e) into RsaKey structure (key) */
1792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_RsaPublicKeyDecodeRaw(const byte* n, word32 nSz, const byte* e,
1793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                              word32 eSz, RsaKey* key)
1794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (n == NULL || e == NULL || key == NULL)
1796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
1797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key->type = RSA_PUBLIC;
1799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mp_init(&key->n) != MP_OKAY)
1801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MP_INIT_E;
1802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mp_read_unsigned_bin(&key->n, n, nSz) != 0) {
1804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_clear(&key->n);
1805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_GETINT_E;
1806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mp_init(&key->e) != MP_OKAY) {
1809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_clear(&key->n);
1810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MP_INIT_E;
1811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mp_read_unsigned_bin(&key->e, e, eSz) != 0) {
1814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_clear(&key->n);
1815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_clear(&key->e);
1816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_GETINT_E;
1817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_USER_RSA */
1822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
1823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_DH
1825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_DhKeyDecode(const byte* input, word32* inOutIdx, DhKey* key, word32 inSz)
1827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 46


1829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(&key->p,  input, inOutIdx, inSz) < 0 ||
1834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->g,  input, inOutIdx, inSz) < 0 )  return ASN_DH_KEY_E;
1835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_DhParamsLoad(const byte* input, word32 inSz, byte* p, word32* pInOutSz,
1841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  byte* g, word32* gInOutSz)
1842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = 0;
1844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
1845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &i, &length, inSz) < 0)
1848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[i++];
1851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_INTEGER)
1852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &i, &length, inSz) < 0)
1855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (b = input[i++]) == 0x00)
1858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         length--;
1859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
1860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i--;
1861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length <= (int)*pInOutSz) {
1863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(p, &input[i], length);
1864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *pInOutSz = length;
1865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
1867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
1868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     i += length;
1870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[i++];
1872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_INTEGER)
1873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &i, &length, inSz) < 0)
1876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length <= (int)*gInOutSz) {
1879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(g, &input[i], length);
1880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *gInOutSz = length;
1881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
1882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
1883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
1884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 47


1886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_DH */
1889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_DSA
1892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int DsaPublicKeyDecode(const byte* input, word32* inOutIdx, DsaKey* key,
1894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         word32 inSz)
1895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
1897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(&key->p,  input, inOutIdx, inSz) < 0 ||
1902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->q,  input, inOutIdx, inSz) < 0 ||
1903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->g,  input, inOutIdx, inSz) < 0 ||
1904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->y,  input, inOutIdx, inSz) < 0 )
1905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_DH_KEY_E;
1906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key->type = DSA_PUBLIC;
1908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int DsaPrivateKeyDecode(const byte* input, word32* inOutIdx, DsaKey* key,
1913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         word32 inSz)
1914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length, version;
1916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
1918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetMyVersion(input, inOutIdx, &version) < 0)
1921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
1922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(&key->p,  input, inOutIdx, inSz) < 0 ||
1924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->q,  input, inOutIdx, inSz) < 0 ||
1925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->g,  input, inOutIdx, inSz) < 0 ||
1926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->y,  input, inOutIdx, inSz) < 0 ||
1927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetInt(&key->x,  input, inOutIdx, inSz) < 0 )
1928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_DH_KEY_E;
1929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     key->type = DSA_PRIVATE;
1931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
1932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static mp_int* GetDsaInt(DsaKey* key, int idx)
1935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 0)
1937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->p;
1938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 1)
1939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->q;
1940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 2)
1941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->g;
1942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 3)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 48


1943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->y;
1944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 4)
1945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->x;
1946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return NULL;
1948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Release Tmp DSA resources */
1951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static INLINE void FreeTmpDsas(byte** tmps)
1952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
1954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < DSA_INTS; i++)
1956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(tmps[i], NULL, DYNAMIC_TYPE_DSA);
1957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
1958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Convert DsaKey key to DER format, write to output (inLen), return bytes
1960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  written */
1961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_DsaKeyToDer(DsaKey* key, byte* output, word32 inLen)
1962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
1963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 seqSz, verSz, rawLen, intTotalLen = 0;
1964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 sizes[DSA_INTS];
1965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    i, j, outLen, ret = 0, lbit;
1966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte  seq[MAX_SEQ_SZ];
1968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte  ver[MAX_VERSION_SZ];
1969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* tmps[DSA_INTS];
1970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!key || !output)
1972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
1973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (key->type != DSA_PRIVATE)
1975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
1976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < DSA_INTS; i++)
1978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         tmps[i] = NULL;
1979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* write all big ints from key to DER tmps */
1981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < DSA_INTS; i++) {
1982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_int* keyInt = GetDsaInt(key, i);
1983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* leading zero */
1985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         lbit = mp_leading_bit(keyInt);
1986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         rawLen = mp_unsigned_bin_size(keyInt) + lbit;
1987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         tmps[i] = (byte*)XMALLOC(rawLen + MAX_SEQ_SZ, NULL, DYNAMIC_TYPE_DSA);
1989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (tmps[i] == NULL) {
1990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = MEMORY_E;
1991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
1992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
1993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         tmps[i][0] = ASN_INTEGER;
1995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sizes[i] = SetLength(rawLen, tmps[i] + 1) + 1 + lbit; /* tag & lbit */
1996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
1997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (sizes[i] <= MAX_SEQ_SZ) {
1998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int err;
1999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 49


2000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* leading zero */
2001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (lbit)
2002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 tmps[i][sizes[i]-1] = 0x00;
2003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             err = mp_to_unsigned_bin(keyInt, tmps[i] + sizes[i]);
2005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (err == MP_OKAY) {
2006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 sizes[i] += (rawLen-lbit); /* lbit included in rawLen */
2007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 intTotalLen += sizes[i];
2008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
2010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = err;
2011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
2012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
2015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_INPUT_E;
2016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
2017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
2021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeTmpDsas(tmps);
2022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
2023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* make headers */
2026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     verSz = SetMyVersion(0, ver, FALSE);
2027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(verSz + intTotalLen, seq);
2028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     outLen = seqSz + verSz + intTotalLen;
2030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outLen > (int)inLen)
2031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
2032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* write to output */
2034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output, seq, seqSz);
2035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     j = seqSz;
2036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + j, ver, verSz);
2037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     j += verSz;
2038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < DSA_INTS; i++) {
2040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + j, tmps[i], sizes[i]);
2041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         j += sizes[i];
2042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FreeTmpDsas(tmps);
2044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return outLen;
2046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_DSA */
2049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void InitDecodedCert(DecodedCert* cert, byte* source, word32 inSz, void* heap)
2052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->publicKey       = 0;
2054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pubKeySize      = 0;
2055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pubKeyStored    = 0;
2056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->version         = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 50


2057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->signature       = 0;
2058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCN       = 0;
2059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNLen    = 0;
2060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNEnc    = CTC_UTF8;
2061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNStored = 0;
2062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->weOwnAltNames   = 0;
2063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->altNames        = NULL;
2064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
2065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->altEmailNames   = NULL;
2066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->permittedNames  = NULL;
2067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->excludedNames   = NULL;
2068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
2069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer[0]       = '\0';
2070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject[0]      = '\0';
2071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->source          = source;  /* don't own */
2072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx          = 0;
2073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->maxIdx          = inSz;    /* can't go over this index */
2074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->heap            = heap;
2075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->serial, 0, EXTERNAL_SERIAL_SIZE);
2076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->serialSz        = 0;
2077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extensions      = 0;
2078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extensionsSz    = 0;
2079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extensionsIdx   = 0;
2080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthInfo     = NULL;
2081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthInfoSz   = 0;
2082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extCrlInfo      = NULL;
2083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extCrlInfoSz    = 0;
2084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->extSubjKeyId, 0, KEYID_SIZE);
2085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjKeyIdSet = 0;
2086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->extAuthKeyId, 0, KEYID_SIZE);
2087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthKeyIdSet = 0;
2088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsageSet  = 0;
2089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsage     = 0;
2090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsageSet = 0;
2091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsage    = 0;
2092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->isCA            = 0;
2093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_PKCS7
2094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuerRaw       = NULL;
2095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuerRawLen    = 0;
2096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_GEN
2098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectSN       = 0;
2099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectSNLen    = 0;
2100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectSNEnc    = CTC_UTF8;
2101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectC        = 0;
2102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCLen     = 0;
2103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCEnc     = CTC_PRINTABLE;
2104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectL        = 0;
2105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectLLen     = 0;
2106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectLEnc     = CTC_UTF8;
2107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectST       = 0;
2108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectSTLen    = 0;
2109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectSTEnc    = CTC_UTF8;
2110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectO        = 0;
2111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectOLen     = 0;
2112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectOEnc     = CTC_UTF8;
2113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectOU       = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 51


2114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectOULen    = 0;
2115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectOUEnc    = CTC_UTF8;
2116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectEmail    = 0;
2117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectEmailLen = 0;
2118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_GEN */
2119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->beforeDate      = NULL;
2120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->beforeDateLen   = 0;
2121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->afterDate       = NULL;
2122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->afterDateLen    = 0;
2123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef OPENSSL_EXTRA
2124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(&cert->issuerName, 0, sizeof(DecodedName));
2125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(&cert->subjectName, 0, sizeof(DecodedName));
2126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extBasicConstSet = 0;
2127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extBasicConstCrit = 0;
2128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extBasicConstPlSet = 0;
2129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pathLength = 0;
2130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjAltNameSet = 0;
2131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjAltNameCrit = 0;
2132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthKeyIdCrit = 0;
2133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjKeyIdCrit = 0;
2134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsageCrit = 0;
2135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsageCrit = 0;
2136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsageSrc = NULL;
2137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsageSz = 0;
2138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsageCount = 0;
2139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthKeyIdSrc = NULL;
2140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthKeyIdSz = 0;
2141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjKeyIdSrc = NULL;
2142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjKeyIdSz = 0;
2143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA */
2144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(OPENSSL_EXTRA) || !defined(IGNORE_NAME_CONSTRAINTS)
2145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extNameConstraintSet = 0;
2146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA || !IGNORE_NAME_CONSTRAINTS */
2147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
2148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pkCurveOID = 0;
2149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
2150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SEP
2151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->deviceTypeSz = 0;
2152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->deviceType = NULL;
2153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->hwTypeSz = 0;
2154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->hwType = NULL;
2155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->hwSerialNumSz = 0;
2156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->hwSerialNum = NULL;
2157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
2158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extCertPolicySet = 0;
2159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extCertPolicyCrit = 0;
2160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* OPENSSL_EXTRA */
2161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_SEP */
2162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
2163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->extCertPolicies, 0, MAX_CERTPOL_NB*MAX_CERTPOL_SZ);
2164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extCertPoliciesNb = 0;
2165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeAltNames(DNS_entry* altNames, void* heap)
2170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 52


2171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
2172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (altNames) {
2174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         DNS_entry* tmp = altNames->next;
2175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(altNames->name, heap, DYNAMIC_TYPE_ALTNAME);
2177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(altNames,       heap, DYNAMIC_TYPE_ALTNAME);
2178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         altNames = tmp;
2179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
2183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeNameSubtrees(Base_entry* names, void* heap)
2185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
2187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (names) {
2189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry* tmp = names->next;
2190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(names->name, heap, DYNAMIC_TYPE_ALTNAME);
2192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(names,       heap, DYNAMIC_TYPE_ALTNAME);
2193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         names = tmp;
2194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
2198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeDecodedCert(DecodedCert* cert)
2200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->subjectCNStored == 1)
2202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->subjectCN, cert->heap, DYNAMIC_TYPE_SUBJECT_CN);
2203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->pubKeyStored == 1)
2204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->publicKey, cert->heap, DYNAMIC_TYPE_PUBLIC_KEY);
2205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->weOwnAltNames && cert->altNames)
2206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeAltNames(cert->altNames, cert->heap);
2207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
2208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->altEmailNames)
2209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeAltNames(cert->altEmailNames, cert->heap);
2210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->permittedNames)
2211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeNameSubtrees(cert->permittedNames, cert->heap);
2212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->excludedNames)
2213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeNameSubtrees(cert->excludedNames, cert->heap);
2214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
2215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SEP
2216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(cert->deviceType, cert->heap, DYNAMIC_TYPE_X509_EXT);
2217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(cert->hwType, cert->heap, DYNAMIC_TYPE_X509_EXT);
2218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(cert->hwSerialNum, cert->heap, DYNAMIC_TYPE_X509_EXT);
2219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_SEP */
2220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef OPENSSL_EXTRA
2221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->issuerName.fullName != NULL)
2222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->issuerName.fullName, NULL, DYNAMIC_TYPE_X509);
2223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->subjectName.fullName != NULL)
2224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->subjectName.fullName, NULL, DYNAMIC_TYPE_X509);
2225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA */
2226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 53


2228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
2229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetCertHeader(DecodedCert* cert)
2230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret = 0, len;
2232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte serialTmp[EXTERNAL_SERIAL_SIZE];
2233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SMALL_STACK) && defined(USE_FAST_MATH)
2234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     mp_int* mpi = NULL;
2235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
2236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     mp_int stack_mpi;
2237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     mp_int* mpi = &stack_mpi;
2238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &len, cert->maxIdx) < 0)
2241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->certBegin = cert->srcIdx;
2244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &len, cert->maxIdx) < 0)
2246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->sigIndex = len + cert->srcIdx;
2248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetExplicitVersion(cert->source, &cert->srcIdx, &cert->version) < 0)
2250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SMALL_STACK) && defined(USE_FAST_MATH)
2253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     mpi = (mp_int*)XMALLOC(sizeof(mp_int), NULL, DYNAMIC_TYPE_TMP_BUFFER);
2254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (mpi == NULL)
2255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
2256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(mpi, cert->source, &cert->srcIdx, cert->maxIdx) < 0) {
2259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SMALL_STACK) && defined(USE_FAST_MATH)
2260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(mpi, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     len = mp_unsigned_bin_size(mpi);
2266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (len < (int)sizeof(serialTmp)) {
2267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ( (ret = mp_to_unsigned_bin(mpi, serialTmp)) == MP_OKAY) {
2268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(cert->serial, serialTmp, len);
2269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->serialSz = len;
2270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     mp_clear(mpi);
2273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SMALL_STACK) && defined(USE_FAST_MATH)
2275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(mpi, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
2279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if !defined(NO_RSA)
2282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Store Rsa Key, may save later, Dsa could use in future */
2283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int StoreRsaKey(DecodedCert* cert)
2284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 54


2285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
2286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 recvd = cert->srcIdx;
2287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
2289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     recvd = cert->srcIdx - recvd;
2292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     length += recvd;
2293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (recvd--)
2295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        cert->srcIdx--;
2296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pubKeySize = length;
2298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->publicKey = cert->source + cert->srcIdx;
2299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx += length;
2300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
2302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
2305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
2308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* return 0 on success if the ECC curve oid sum is supported */
2310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static int CheckCurve(word32 oid)
2311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
2312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int ret = 0;
2313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         switch (oid) {
2315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC160)
2316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ECC_160R1:
2317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC192)
2319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ECC_192R1:
2320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC224)
2322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ECC_224R1:
2323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || !defined(NO_ECC256)
2325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ECC_256R1:
2326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC384)
2328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ECC_384R1:
2329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC521)
2331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ECC_521R1:
2332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
2334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             default:
2336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ALGO_ID_E;
2337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
2340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 55


2342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
2343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
2345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetKey(DecodedCert* cert)
2346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
2348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
2349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int tmpIdx = cert->srcIdx;
2350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
2353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetAlgoId(cert->source, &cert->srcIdx,
2356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                   &cert->keyOID, keyType, cert->maxIdx) < 0)
2357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (cert->keyOID) {
2360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    #ifndef NO_RSA
2361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case RSAk:
2362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
2363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte b = cert->source[cert->srcIdx++];
2364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_BIT_STRING)
2365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_BITSTR_E;
2366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(cert->source,&cert->srcIdx,&length,cert->maxIdx) < 0)
2368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
2369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = cert->source[cert->srcIdx++];
2370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != 0x00)
2371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_EXPECT_0_E;
2372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return StoreRsaKey(cert);
2374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* NO_RSA */
2377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef HAVE_NTRU
2378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case NTRUk:
2379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
2380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             const byte* key = &cert->source[tmpIdx];
2381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte*       next = (byte*)key;
2382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word16      keyLen;
2383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32      rc;
2384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32      remaining = cert->maxIdx - cert->srcIdx;
2385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
2386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte*       keyBlob = NULL;
2387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
2388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte        keyBlob[MAX_NTRU_KEY_SZ];
2389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             rc = ntru_crypto_ntru_encrypt_subjectPublicKeyInfo2PublicKey(key,
2391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &keyLen, NULL, &next, &remaining);
2392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (rc != NTRU_OK)
2393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_NTRU_KEY_E;
2394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (keyLen > MAX_NTRU_KEY_SZ)
2395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_NTRU_KEY_E;
2396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
2398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             keyBlob = (byte*)XMALLOC(MAX_NTRU_KEY_SZ, NULL,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 56


2399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      DYNAMIC_TYPE_TMP_BUFFER);
2400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (keyBlob == NULL)
2401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
2402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             rc = ntru_crypto_ntru_encrypt_subjectPublicKeyInfo2PublicKey(key,
2405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &keyLen, keyBlob, &next, &remaining);
2406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (rc != NTRU_OK) {
2407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
2408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(keyBlob, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_NTRU_KEY_E;
2411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if ( (next - key) < 0) {
2414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
2415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(keyBlob, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_NTRU_KEY_E;
2418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->srcIdx = tmpIdx + (int)(next - key);
2421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->publicKey = (byte*) XMALLOC(keyLen, cert->heap,
2423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               DYNAMIC_TYPE_PUBLIC_KEY);
2424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (cert->publicKey == NULL) {
2425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
2426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(keyBlob, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
2429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(cert->publicKey, keyBlob, keyLen);
2431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->pubKeyStored = 1;
2432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->pubKeySize   = keyLen;
2433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
2435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(keyBlob, NULL, DYNAMIC_TYPE_TMP_BUFFER);
2436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
2439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_NTRU */
2441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef HAVE_ECC
2442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case ECDSAk:
2443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
2444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte b;
2445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetObjectId(cert->source, &cert->srcIdx,
2447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             &cert->pkCurveOID, curveType, cert->maxIdx) < 0)
2448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
2449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (CheckCurve(cert->pkCurveOID) < 0)
2451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ECC_CURVE_OID_E;
2452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* key header */
2454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = cert->source[cert->srcIdx++];
2455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_BIT_STRING)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 57


2456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_BITSTR_E;
2457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(cert->source,&cert->srcIdx,&length,cert->maxIdx) < 0)
2459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
2460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = cert->source[cert->srcIdx++];
2461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != 0x00)
2462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_EXPECT_0_E;
2463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* actual key, use length - 1 since ate preceding 0 */
2465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= 1;
2466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->publicKey = (byte*) XMALLOC(length, cert->heap,
2468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               DYNAMIC_TYPE_PUBLIC_KEY);
2469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (cert->publicKey == NULL)
2470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
2471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(cert->publicKey, &cert->source[cert->srcIdx], length);
2472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->pubKeyStored = 1;
2473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->pubKeySize   = length;
2474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->srcIdx += length;
2476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
2478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ECC */
2480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
2481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_UNKNOWN_OID_E;
2482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* process NAME, either issuer or subject */
2487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetName(DecodedCert* cert, int nameType)
2488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;  /* length of all distinguished names */
2490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    dummy;
2491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    ret;
2492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char*  full;
2493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*  hash;
2494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx;
2495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
2496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         DecodedName* dName =
2497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                   (nameType == ISSUER) ? &cert->issuerName : &cert->subjectName;
2498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* OPENSSL_EXTRA */
2499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_MSG("Getting Cert Name");
2501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (nameType == ISSUER) {
2503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         full = cert->issuer;
2504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         hash = cert->issuerHash;
2505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
2507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         full = cert->subject;
2508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         hash = cert->subjectHash;
2509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->source[cert->srcIdx] == ASN_OBJECT_ID) {
2512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Trying optional prefix...");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 58


2513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
2515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
2516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->srcIdx += length;
2518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Got optional prefix");
2519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* For OCSP, RFC2560 section 4.1.1 states the issuer hash should be
2522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * calculated over the entire DER encoding of the Name field, including
2523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * the tag and length. */
2524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = cert->srcIdx;
2525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
2526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
2527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef NO_SHA
2529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_Sha256Hash(&cert->source[idx], length + cert->srcIdx - idx, hash);
2530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
2531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_ShaHash(&cert->source[idx], length + cert->srcIdx - idx, hash);
2532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0)
2534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
2535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     length += cert->srcIdx;
2537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = 0;
2538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_PKCS7
2540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* store pointer to raw issuer */
2541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (nameType == ISSUER) {
2542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->issuerRaw = &cert->source[cert->srcIdx];
2543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->issuerRawLen = length - cert->srcIdx;
2544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
2547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (nameType == SUBJECT) {
2548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectRaw = &cert->source[cert->srcIdx];
2549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectRawLen = length - cert->srcIdx;
2550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
2552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (cert->srcIdx < (word32)length) {
2554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte   b;
2555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte   joint[2];
2556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte   tooBig = FALSE;
2557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int    oidSz;
2558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSet(cert->source, &cert->srcIdx, &dummy, cert->maxIdx) < 0) {
2560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("Cert name lacks set header, trying sequence");
2561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(cert->source, &cert->srcIdx, &dummy, cert->maxIdx) < 0)
2564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
2565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = cert->source[cert->srcIdx++];
2567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != ASN_OBJECT_ID)
2568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_OBJECT_ID_E;
2569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 59


2570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(cert->source, &cert->srcIdx, &oidSz, cert->maxIdx) < 0)
2571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
2572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(joint, &cert->source[cert->srcIdx], sizeof(joint));
2574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* v1 name types */
2576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (joint[0] == 0x55 && joint[1] == 0x04) {
2577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte   id;
2578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte   copy = FALSE;
2579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int    strLen;
2580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->srcIdx += 2;
2582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             id = cert->source[cert->srcIdx++];
2583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b  = cert->source[cert->srcIdx++]; /* encoding */
2584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(cert->source, &cert->srcIdx, &strLen,
2586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           cert->maxIdx) < 0)
2587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
2588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if ( (strLen + 14) > (int)(ASN_NAME_MAX - idx)) {
2590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* include biggest pre fix header too 4 = "/serialNumber=" */
2591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("ASN Name too big, skipping");
2592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 tooBig = TRUE;
2593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (id == ASN_COMMON_NAME) {
2596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (nameType == SUBJECT) {
2597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCN = (char *)&cert->source[cert->srcIdx];
2598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCNLen = strLen;
2599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCNEnc = b;
2600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/CN=", 4);
2604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
2605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->cnIdx = cert->srcIdx;
2609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->cnLen = strLen;
2610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_SUR_NAME) {
2613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/SN=", 4);
2615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
2616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectSN = (char*)&cert->source[cert->srcIdx];
2621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectSNLen = strLen;
2622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectSNEnc = b;
2623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->snIdx = cert->srcIdx;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 60


2627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->snLen = strLen;
2628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_COUNTRY_NAME) {
2631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/C=", 3);
2633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 3;
2634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectC = (char*)&cert->source[cert->srcIdx];
2639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectCLen = strLen;
2640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectCEnc = b;
2641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->cIdx = cert->srcIdx;
2645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->cLen = strLen;
2646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_LOCALITY_NAME) {
2649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/L=", 3);
2651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 3;
2652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectL = (char*)&cert->source[cert->srcIdx];
2657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectLLen = strLen;
2658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectLEnc = b;
2659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->lIdx = cert->srcIdx;
2663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->lLen = strLen;
2664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_STATE_NAME) {
2667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/ST=", 4);
2669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
2670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectST = (char*)&cert->source[cert->srcIdx];
2675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectSTLen = strLen;
2676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectSTEnc = b;
2677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->stIdx = cert->srcIdx;
2681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->stLen = strLen;
2682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 61


2684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_ORG_NAME) {
2685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/O=", 3);
2687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 3;
2688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectO = (char*)&cert->source[cert->srcIdx];
2693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectOLen = strLen;
2694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectOEnc = b;
2695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->oIdx = cert->srcIdx;
2699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->oLen = strLen;
2700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_ORGUNIT_NAME) {
2703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/OU=", 4);
2705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
2706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
2707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectOU = (char*)&cert->source[cert->srcIdx];
2711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectOULen = strLen;
2712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectOUEnc = b;
2713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->ouIdx = cert->srcIdx;
2717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->ouLen = strLen;
2718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (id == ASN_SERIAL_NUMBER) {
2721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    XMEMCPY(&full[idx], "/serialNumber=", 14);
2723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    idx += 14;
2724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    copy = TRUE;
2725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->snIdx = cert->srcIdx;
2728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->snLen = strLen;
2729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (copy && !tooBig) {
2733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&full[idx], &cert->source[cert->srcIdx], strLen);
2734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += strLen;
2735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->srcIdx += strLen;
2738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
2740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* skip */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 62


2741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte email = FALSE;
2742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte uid   = FALSE;
2743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int  adv;
2744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (joint[0] == 0x2a && joint[1] == 0x86)  /* email id hdr */
2746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 email = TRUE;
2747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (joint[0] == 0x9  && joint[1] == 0x92)  /* uid id hdr */
2749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 uid = TRUE;
2750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->srcIdx += oidSz + 1;
2752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(cert->source, &cert->srcIdx, &adv, cert->maxIdx) < 0)
2754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
2755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (adv > (int)(ASN_NAME_MAX - idx)) {
2757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("ASN name too big, skipping");
2758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 tooBig = TRUE;
2759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (email) {
2762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if ( (14 + adv) > (int)(ASN_NAME_MAX - idx)) {
2763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("ASN name too big, skipping");
2764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     tooBig = TRUE;
2765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/emailAddress=", 14);
2768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 14;
2769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_CERT_GEN
2772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (nameType == SUBJECT) {
2773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectEmail = (char*)&cert->source[cert->srcIdx];
2774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->subjectEmailLen = adv;
2775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* WOLFSSL_CERT_GEN */
2777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->emailIdx = cert->srcIdx;
2779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->emailLen = adv;
2780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifndef IGNORE_NAME_CONSTRAINTS
2782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     {
2783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         DNS_entry* emailName = NULL;
2784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         emailName = (DNS_entry*)XMALLOC(sizeof(DNS_entry),
2786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               cert->heap, DYNAMIC_TYPE_ALTNAME);
2787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         if (emailName == NULL) {
2788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             WOLFSSL_MSG("\tOut of Memory");
2789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             return MEMORY_E;
2790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         }
2791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         emailName->name = (char*)XMALLOC(adv + 1,
2792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               cert->heap, DYNAMIC_TYPE_ALTNAME);
2793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         if (emailName->name == NULL) {
2794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             WOLFSSL_MSG("\tOut of Memory");
2795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             XFREE(emailName, cert->heap, DYNAMIC_TYPE_ALTNAME);
2796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             return MEMORY_E;
2797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 63


2798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         XMEMCPY(emailName->name,
2799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               &cert->source[cert->srcIdx], adv);
2800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         emailName->name[adv] = 0;
2801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         emailName->next = cert->altEmailNames;
2803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->altEmailNames = emailName;
2804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
2805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* IGNORE_NAME_CONSTRAINTS */
2806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], &cert->source[cert->srcIdx], adv);
2808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += adv;
2809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (uid) {
2813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if ( (5 + adv) > (int)(ASN_NAME_MAX - idx)) {
2814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("ASN name too big, skipping");
2815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     tooBig = TRUE;
2816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
2818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/UID=", 5);
2819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 5;
2820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], &cert->source[cert->srcIdx], adv);
2822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += adv;
2823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
2824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
2825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->uidIdx = cert->srcIdx;
2826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     dName->uidLen = adv;
2827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif /* OPENSSL_EXTRA */
2828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->srcIdx += adv;
2831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     full[idx++] = 0;
2834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
2836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
2837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int totalLen = 0;
2838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->cnLen != 0)
2840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->cnLen + 4;
2841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->snLen != 0)
2842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->snLen + 4;
2843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->cLen != 0)
2844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->cLen + 3;
2845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->lLen != 0)
2846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->lLen + 3;
2847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->stLen != 0)
2848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->stLen + 4;
2849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->oLen != 0)
2850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->oLen + 3;
2851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->ouLen != 0)
2852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->ouLen + 4;
2853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->emailLen != 0)
2854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->emailLen + 14;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 64


2855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->uidLen != 0)
2856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->uidLen + 5;
2857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->serialLen != 0)
2858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalLen += dName->serialLen + 14;
2859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         dName->fullName = (char*)XMALLOC(totalLen + 1, NULL, DYNAMIC_TYPE_X509);
2861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dName->fullName != NULL) {
2862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx = 0;
2863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->cnLen != 0) {
2865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/CN=", 4);
2867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 4;
2868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      &cert->source[dName->cnIdx], dName->cnLen);
2870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->cnIdx = idx;
2871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->cnLen;
2872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->snLen != 0) {
2874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/SN=", 4);
2876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 4;
2877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      &cert->source[dName->snIdx], dName->snLen);
2879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->snIdx = idx;
2880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->snLen;
2881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->cLen != 0) {
2883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/C=", 3);
2885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 3;
2886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                        &cert->source[dName->cIdx], dName->cLen);
2888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->cIdx = idx;
2889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->cLen;
2890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->lLen != 0) {
2892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/L=", 3);
2894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 3;
2895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                        &cert->source[dName->lIdx], dName->lLen);
2897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->lIdx = idx;
2898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->lLen;
2899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->stLen != 0) {
2901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/ST=", 4);
2903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 4;
2904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      &cert->source[dName->stIdx], dName->stLen);
2906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->stIdx = idx;
2907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->stLen;
2908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->oLen != 0) {
2910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/O=", 3);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 65


2912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 3;
2913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                        &cert->source[dName->oIdx], dName->oLen);
2915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->oIdx = idx;
2916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->oLen;
2917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->ouLen != 0) {
2919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/OU=", 4);
2921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 4;
2922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      &cert->source[dName->ouIdx], dName->ouLen);
2924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->ouIdx = idx;
2925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->ouLen;
2926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->emailLen != 0) {
2928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/emailAddress=", 14);
2930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 14;
2931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                &cert->source[dName->emailIdx], dName->emailLen);
2933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->emailIdx = idx;
2934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->emailLen;
2935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->uidLen != 0) {
2937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/UID=", 5);
2939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 5;
2940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                    &cert->source[dName->uidIdx], dName->uidLen);
2942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->uidIdx = idx;
2943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->uidLen;
2944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dName->serialLen != 0) {
2946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->entryCount++;
2947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx], "/serialNumber=", 14);
2948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += 14;
2949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(&dName->fullName[idx],
2950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                              &cert->source[dName->serialIdx], dName->serialLen);
2951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 dName->serialIdx = idx;
2952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += dName->serialLen;
2953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
2954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dName->fullName[idx] = '\0';
2955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dName->fullNameLen = totalLen;
2956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
2957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
2958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* OPENSSL_EXTRA */
2959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
2961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
2962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if !defined(NO_TIME_H) && defined(USE_WOLF_VALIDDATE)
2965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* to the second */
2967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DateGreaterThan(const struct tm* a, const struct tm* b)
2968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 66


 636              		.loc 1 2968 0
 637              		.cfi_startproc
 638              	.LVL109:
 639 0000 30B5     		push	{r4, r5, lr}
 640              		.cfi_def_cfa_offset 12
 641              		.cfi_offset 4, -12
 642              		.cfi_offset 5, -8
 643              		.cfi_offset 14, -4
2969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year > b->tm_year)
 644              		.loc 1 2969 0
 645 0002 4A69     		ldr	r2, [r1, #20]
 646 0004 4469     		ldr	r4, [r0, #20]
2970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 647              		.loc 1 2970 0
 648 0006 0123     		mov	r3, #1
2969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year > b->tm_year)
 649              		.loc 1 2969 0
 650 0008 9442     		cmp	r4, r2
 651 000a 33DC     		bgt	.L68
2971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year == b->tm_year && a->tm_mon > b->tm_mon)
2973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
2974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year == b->tm_year && a->tm_mon == b->tm_mon &&
2976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****            a->tm_mday > b->tm_mday)
2977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
2978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year == b->tm_year && a->tm_mon == b->tm_mon &&
2980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_mday == b->tm_mday && a->tm_hour > b->tm_hour)
2981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
2982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year == b->tm_year && a->tm_mon == b->tm_mon &&
2984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_mday == b->tm_mday && a->tm_hour == b->tm_hour &&
2985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min > b->tm_min)
2986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
2987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (a->tm_year == b->tm_year && a->tm_mon == b->tm_mon &&
2989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_mday == b->tm_mday && a->tm_hour == b->tm_hour &&
2990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min  == b->tm_min  && a->tm_sec > b->tm_sec)
2991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
2992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0; /* false */
 652              		.loc 1 2993 0
 653 000c 0023     		mov	r3, #0
2972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 654              		.loc 1 2972 0
 655 000e 9442     		cmp	r4, r2
 656 0010 30D1     		bne	.L68
2972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 657              		.loc 1 2972 0 is_stmt 0 discriminator 1
 658 0012 0469     		ldr	r4, [r0, #16]
 659 0014 0A69     		ldr	r2, [r1, #16]
2970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 660              		.loc 1 2970 0 is_stmt 1 discriminator 1
 661 0016 0133     		add	r3, r3, #1
2972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 662              		.loc 1 2972 0 discriminator 1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 67


 663 0018 9442     		cmp	r4, r2
 664 001a 2BDC     		bgt	.L68
 665              		.loc 1 2993 0 discriminator 1
 666 001c 0023     		mov	r3, #0
2975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****            a->tm_mday > b->tm_mday)
 667              		.loc 1 2975 0 discriminator 1
 668 001e 9442     		cmp	r4, r2
 669 0020 28D1     		bne	.L68
2975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****            a->tm_mday > b->tm_mday)
 670              		.loc 1 2975 0 is_stmt 0 discriminator 2
 671 0022 C468     		ldr	r4, [r0, #12]
 672 0024 CA68     		ldr	r2, [r1, #12]
2970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 673              		.loc 1 2970 0 is_stmt 1 discriminator 2
 674 0026 0133     		add	r3, r3, #1
2975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****            a->tm_mday > b->tm_mday)
 675              		.loc 1 2975 0 discriminator 2
 676 0028 9442     		cmp	r4, r2
 677 002a 23DC     		bgt	.L68
2979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_mday == b->tm_mday && a->tm_hour > b->tm_hour)
 678              		.loc 1 2979 0 discriminator 2
 679 002c 04D1     		bne	.L69
2980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 680              		.loc 1 2980 0
 681 002e 8568     		ldr	r5, [r0, #8]
 682 0030 AC46     		mov	ip, r5
 683 0032 8D68     		ldr	r5, [r1, #8]
 684 0034 AC45     		cmp	ip, r5
 685 0036 1DDC     		bgt	.L68
 686              	.L69:
2983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_mday == b->tm_mday && a->tm_hour == b->tm_hour &&
 687              		.loc 1 2983 0 discriminator 2
 688 0038 9442     		cmp	r4, r2
 689 003a 09D1     		bne	.L70
2984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min > b->tm_min)
 690              		.loc 1 2984 0
 691 003c 8368     		ldr	r3, [r0, #8]
 692 003e 8D68     		ldr	r5, [r1, #8]
 693 0040 AB42     		cmp	r3, r5
 694 0042 05D1     		bne	.L70
2984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min > b->tm_min)
 695              		.loc 1 2984 0 is_stmt 0 discriminator 1
 696 0044 4568     		ldr	r5, [r0, #4]
2970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 697              		.loc 1 2970 0 is_stmt 1 discriminator 1
 698 0046 0123     		mov	r3, #1
2984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min > b->tm_min)
 699              		.loc 1 2984 0 discriminator 1
 700 0048 AC46     		mov	ip, r5
 701 004a 4D68     		ldr	r5, [r1, #4]
 702 004c AC45     		cmp	ip, r5
 703 004e 11DC     		bgt	.L68
 704              	.L70:
 705              		.loc 1 2993 0 discriminator 2
 706 0050 0023     		mov	r3, #0
2988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_mday == b->tm_mday && a->tm_hour == b->tm_hour &&
 707              		.loc 1 2988 0 discriminator 2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 68


 708 0052 9442     		cmp	r4, r2
 709 0054 0ED1     		bne	.L68
2989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min  == b->tm_min  && a->tm_sec > b->tm_sec)
 710              		.loc 1 2989 0
 711 0056 8268     		ldr	r2, [r0, #8]
 712 0058 8C68     		ldr	r4, [r1, #8]
 713 005a A242     		cmp	r2, r4
 714 005c 0AD1     		bne	.L68
2989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         a->tm_min  == b->tm_min  && a->tm_sec > b->tm_sec)
 715              		.loc 1 2989 0 is_stmt 0 discriminator 1
 716 005e 4268     		ldr	r2, [r0, #4]
 717 0060 4C68     		ldr	r4, [r1, #4]
 718 0062 A242     		cmp	r2, r4
 719 0064 06D1     		bne	.L68
2990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
 720              		.loc 1 2990 0 is_stmt 1
 721 0066 0068     		ldr	r0, [r0]
 722              	.LVL110:
 723 0068 0968     		ldr	r1, [r1]
 724              	.LVL111:
 725 006a 0122     		mov	r2, #1
 726 006c 8842     		cmp	r0, r1
 727 006e 00DC     		bgt	.L71
 728 0070 1A1C     		mov	r2, r3
 729              	.L71:
2970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 730              		.loc 1 2970 0
 731 0072 131C     		mov	r3, r2
 732              	.L68:
2994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 733              		.loc 1 2994 0
 734 0074 181C     		mov	r0, r3
 735              		@ sp needed
 736 0076 30BD     		pop	{r4, r5, pc}
 737              		.cfi_endproc
 738              	.LFE31:
 739              		.size	DateGreaterThan, .-DateGreaterThan
 740              		.section	.text.MatchBaseName,"ax",%progbits
 741              		.align	1
 742              		.code	16
 743              		.thumb_func
 744              		.type	MatchBaseName, %function
 745              	MatchBaseName:
 746              	.LFB50:
2995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
2997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static INLINE int DateLessThan(const struct tm* a, const struct tm* b)
2998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
2999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return DateGreaterThan(b,a);
3000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* like atoi but only use first byte */
3003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Make sure before and after dates are valid */
3004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int ValidateDate(const byte* date, byte format, int dateType)
3005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t ltime;
3007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm  certTime;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 69


3008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* localTime;
3009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* tmpTime = NULL;
3010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    i = 0;
3011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    timeDiff = 0 ;
3012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    diffHH = 0 ; int diffMM = 0 ;
3013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    diffSign = 0 ;
3014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(NEED_TMP_TIME)
3016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm tmpTimeStorage;
3017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     tmpTime = &tmpTimeStorage;
3018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
3019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)tmpTime;
3020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ltime = XTIME(0);
3023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(&certTime, 0, sizeof(certTime));
3024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (format == ASN_UTC_TIME) {
3026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (btoi(date[0]) >= 5)
3027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             certTime.tm_year = 1900;
3028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
3029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             certTime.tm_year = 2000;
3030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else  { /* format == GENERALIZED_TIME */
3032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         certTime.tm_year += btoi(date[i++]) * 1000;
3033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         certTime.tm_year += btoi(date[i++]) * 100;
3034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* adjust tm_year, tm_mon */
3037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_year, date, &i); certTime.tm_year -= 1900;
3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mon,  date, &i); certTime.tm_mon  -= 1;
3039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
3040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_hour, date, &i);
3041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_min,  date, &i);
3042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_sec,  date, &i);
3043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((date[i] == '+') || (date[i] == '-')) {
3045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Using time differential, not Zulu") ;
3046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         diffSign = date[i++] == '+' ? 1 : -1 ;
3047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetTime(&diffHH, date, &i);
3048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetTime(&diffMM, date, &i);
3049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         timeDiff = diffSign * (diffHH*60 + diffMM) * 60 ;
3050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     } else if (date[i] != 'Z') {
3051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("UTCtime, niether Zulu or time differential") ;
3052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
3053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ltime -= (time_t)timeDiff ;
3056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     localTime = XGMTIME(&ltime, tmpTime);
3057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (localTime == NULL) {
3059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("XGMTIME failed");
3060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
3061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (dateType == BEFORE) {
3064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (DateLessThan(localTime, &certTime))
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 70


3065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
3066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
3068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (DateGreaterThan(localTime, &certTime))
3069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
3070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 1;
3072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_TIME_H && USE_WOLF_VALIDDATE */
3074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetDate(DecodedCert* cert, int dateType)
3077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
3079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   date[MAX_DATE_SIZE];
3080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
3081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 startIdx = 0;
3082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (dateType == BEFORE)
3084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->beforeDate = &cert->source[cert->srcIdx];
3085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
3086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->afterDate = &cert->source[cert->srcIdx];
3087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     startIdx = cert->srcIdx;
3088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = cert->source[cert->srcIdx++];
3090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_UTC_TIME && b != ASN_GENERALIZED_TIME)
3091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_TIME_E;
3092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
3094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
3095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > MAX_DATE_SIZE || length < MIN_DATE_SIZE)
3097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_DATE_SZ_E;
3098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(date, &cert->source[cert->srcIdx], length);
3100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx += length;
3101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (dateType == BEFORE)
3103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->beforeDateLen = cert->srcIdx - startIdx;
3104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
3105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->afterDateLen  = cert->srcIdx - startIdx;
3106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!XVALIDATE_DATE(date, b, dateType)) {
3108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dateType == BEFORE)
3109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_BEFORE_DATE_E;
3110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
3111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_AFTER_DATE_E;
3112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
3115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetValidity(DecodedCert* cert, int verify)
3119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
3121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int badDate = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 71


3122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
3124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
3125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetDate(cert, BEFORE) < 0 && verify)
3127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         badDate = ASN_BEFORE_DATE_E;           /* continue parsing */
3128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetDate(cert, AFTER) < 0 && verify)
3130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_AFTER_DATE_E;
3131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (badDate != 0)
3133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return badDate;
3134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
3136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int DecodeToKey(DecodedCert* cert, int verify)
3140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int badDate = 0;
3142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
3143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (ret = GetCertHeader(cert)) < 0)
3145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
3146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_MSG("Got Cert Header");
3148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (ret = GetAlgoId(cert->source, &cert->srcIdx, &cert->signatureOID,
3150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           sigType, cert->maxIdx)) < 0)
3151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
3152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_MSG("Got Algo ID");
3154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (ret = GetName(cert, ISSUER)) < 0)
3156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
3157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (ret = GetValidity(cert, verify)) < 0)
3159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         badDate = ret;
3160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (ret = GetName(cert, SUBJECT)) < 0)
3162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
3163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_MSG("Got Subject Name");
3165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (ret = GetKey(cert)) < 0)
3167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
3168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_MSG("Got Key");
3170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (badDate != 0)
3172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return badDate;
3173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
3175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetSignature(DecodedCert* cert)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 72


3179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
3181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b = cert->source[cert->srcIdx++];
3182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_BIT_STRING)
3184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_BITSTR_E;
3185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
3187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
3188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->sigLength = length;
3190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = cert->source[cert->srcIdx++];
3192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != 0x00)
3193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_EXPECT_0_E;
3194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->sigLength--;
3196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->signature = &cert->source[cert->srcIdx];
3197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx += cert->sigLength;
3198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
3200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
3202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static word32 SetDigest(const byte* digest, word32 digSz, byte* output)
3204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_OCTET_STRING;
3206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[1] = (byte)digSz;
3207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&output[2], digest, digSz);
3208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return digSz + 2;
3210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static word32 BytePrecision(word32 value)
3214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i;
3216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = sizeof(value); i; --i)
3217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (value >> ((i - 1) * WOLFSSL_BIT_SIZE))
3218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return i;
3221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetLength(word32 length, byte* output)
3225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = 0, j;
3227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length < ASN_LONG_LENGTH)
3229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[i++] = (byte)length;
3230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
3231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[i++] = (byte)(BytePrecision(length) | ASN_LONG_LENGTH);
3232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         for (j = BytePrecision(length); j; --j) {
3234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             output[i] = (byte)(length >> ((j - 1) * WOLFSSL_BIT_SIZE));
3235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             i++;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 73


3236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return i;
3240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetSequence(word32 len, byte* output)
3244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_SEQUENCE | ASN_CONSTRUCTED;
3246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
3247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetOctetString(word32 len, byte* output)
3250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_OCTET_STRING;
3252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
3253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Write a set header to output */
3256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetSet(word32 len, byte* output)
3257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_SET | ASN_CONSTRUCTED;
3259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
3260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetImplicit(byte tag, byte number, word32 len, byte* output)
3263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ((tag == ASN_SEQUENCE || tag == ASN_SET) ? ASN_CONSTRUCTED : 0)
3266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     | ASN_CONTEXT_SPECIFIC | number;
3267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
3268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetExplicit(byte number, word32 len, byte* output)
3271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | number;
3273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
3274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ECC) && (defined(WOLFSSL_CERT_GEN) || defined(WOLFSSL_KEY_GEN))
3278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetCurve(ecc_key* key, byte* output)
3280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* curve types */
3283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC192)
3284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ECC_192v1_AlgoID[] = { 0x2a, 0x86, 0x48, 0xCE, 0x3d,
3285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                              0x03, 0x01, 0x01};
3286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || !defined(NO_ECC256)
3288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ECC_256v1_AlgoID[] = { 0x2a, 0x86, 0x48, 0xCE, 0x3d,
3289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                             0x03, 0x01, 0x07};
3290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC160)
3292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ECC_160r1_AlgoID[] = { 0x2b, 0x81, 0x04, 0x00,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 74


3293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                              0x02};
3294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC224)
3296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ECC_224r1_AlgoID[] = { 0x2b, 0x81, 0x04, 0x00,
3297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                              0x21};
3298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC384)
3300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ECC_384r1_AlgoID[] = { 0x2b, 0x81, 0x04, 0x00,
3301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                              0x22};
3302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC521)
3304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ECC_521r1_AlgoID[] = { 0x2b, 0x81, 0x04, 0x00,
3305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                              0x23};
3306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    oidSz = 0;
3309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    idx = 0;
3310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    lenSz = 0;
3311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const  byte* oid = 0;
3312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_OBJECT_ID;
3314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx++;
3315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (key->dp->size) {
3317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC160)
3318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 20:
3319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oidSz = sizeof(ECC_160r1_AlgoID);
3320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid   =        ECC_160r1_AlgoID;
3321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC192)
3325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 24:
3326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oidSz = sizeof(ECC_192v1_AlgoID);
3327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid   =        ECC_192v1_AlgoID;
3328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC224)
3332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 28:
3333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oidSz = sizeof(ECC_224r1_AlgoID);
3334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid   =        ECC_224r1_AlgoID;
3335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || !defined(NO_ECC256)
3339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 32:
3340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oidSz = sizeof(ECC_256v1_AlgoID);
3341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid   =        ECC_256v1_AlgoID;
3342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC384)
3346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 48:
3347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oidSz = sizeof(ECC_384r1_AlgoID);
3348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid   =        ECC_384r1_AlgoID;
3349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 75


3350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC521)
3353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case 66:
3354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oidSz = sizeof(ECC_521r1_AlgoID);
3355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid   =        ECC_521r1_AlgoID;
3356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
3360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_UNKNOWN_OID_E;
3361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     lenSz = SetLength(oidSz, output+idx);
3363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += lenSz;
3364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output+idx, oid, oidSz);
3366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += oidSz;
3367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
3369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC && WOLFSSL_CERT_GEN */
3372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL word32 SetAlgoID(int algoOID, byte* output, int type, int curveSz)
3375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 tagSz, idSz, seqSz, algoSz = 0;
3377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const  byte* algoName = 0;
3378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   ID_Length[MAX_LENGTH_SZ];
3379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   seqArray[MAX_SEQ_SZ + 1];  /* add object_id to end */
3380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     tagSz = (type == hashType || type == sigType ||
3382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              (type == keyType && algoOID == RSAk)) ? 2 : 0;
3383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     algoName = OidFromId(algoOID, type, &algoSz);
3385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (algoName == NULL) {
3387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Unknown Algorithm");
3388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
3389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idSz  = SetLength(algoSz, ID_Length);
3392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(idSz + algoSz + 1 + tagSz + curveSz, seqArray);
3393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  /* +1 for object id, curveID of curveSz follows for ecc */
3394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqArray[seqSz++] = ASN_OBJECT_ID;
3395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output, seqArray, seqSz);
3397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz, ID_Length, idSz);
3398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz + idSz, algoName, algoSz);
3399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (tagSz == 2) {
3400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[seqSz + idSz + algoSz] = ASN_TAG_NULL;
3401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[seqSz + idSz + algoSz + 1] = 0;
3402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return seqSz + idSz + algoSz + tagSz;
3405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 76


3407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** word32 wc_EncodeSignature(byte* out, const byte* digest, word32 digSz,
3410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           int hashOID)
3411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digArray[MAX_ENCODED_DIG_SZ];
3413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte algoArray[MAX_ALGO_SZ];
3414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte seqArray[MAX_SEQ_SZ];
3415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 encDigSz, algoSz, seqSz;
3416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     encDigSz = SetDigest(digest, digSz, digArray);
3418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     algoSz   = SetAlgoID(hashOID, algoArray, hashType, 0);
3419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz    = SetSequence(encDigSz + algoSz, seqArray);
3420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out, seqArray, seqSz);
3422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out + seqSz, algoArray, algoSz);
3423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out + seqSz + algoSz, digArray, encDigSz);
3424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return encDigSz + algoSz + seqSz;
3426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_GetCTC_HashOID(int type)
3430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (type) {
3432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_MD2
3433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case MD2:
3434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MD2h;
3435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_MD5
3437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case MD5:
3438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MD5h;
3439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_SHA
3441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case SHA:
3442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SHAh;
3443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_SHA256
3445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case SHA256:
3446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SHA256h;
3447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SHA384
3449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case SHA384:
3450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SHA384h;
3451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SHA512
3453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case SHA512:
3454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SHA512h;
3455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
3457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
3458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     };
3459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
3462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* return true (1) or false (0) for Confirmation */
3463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int ConfirmSignature(const byte* buf, word32 bufSz,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 77


3464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const byte* key, word32 keySz, word32 keyOID,
3465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const byte* sig, word32 sigSz, word32 sigOID,
3466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     void* heap)
3467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  typeH = 0, digestSz = 0, ret = 0;
3469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* digest;
3471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
3472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digest[MAX_DIGEST_SIZE];
3473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     digest = (byte*)XMALLOC(MAX_DIGEST_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (digest == NULL)
3478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0; /* not confirmed */
3479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)key;
3482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)keySz;
3483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)sig;
3484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)sigSz;
3485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
3486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (sigOID) {
3488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_MD5
3489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_MD5wRSA:
3490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_Md5Hash(buf, bufSz, digest) == 0) {
3491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = MD5h;
3492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = MD5_DIGEST_SIZE;
3493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
3495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
3496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(WOLFSSL_MD2)
3497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_MD2wRSA:
3498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_Md2Hash(buf, bufSz, digest) == 0) {
3499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = MD2h;
3500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = MD2_DIGEST_SIZE;
3501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
3503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
3504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_SHA
3505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHAwRSA:
3506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHAwDSA:
3507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHAwECDSA:
3508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_ShaHash(buf, bufSz, digest) == 0) {
3509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHAh;
3510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA_DIGEST_SIZE;
3511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
3513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
3514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_SHA256
3515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA256wRSA:
3516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA256wECDSA:
3517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_Sha256Hash(buf, bufSz, digest) == 0) {
3518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHA256h;
3519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA256_DIGEST_SIZE;
3520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 78


3521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
3522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
3523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef WOLFSSL_SHA512
3524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA512wRSA:
3525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA512wECDSA:
3526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_Sha512Hash(buf, bufSz, digest) == 0) {
3527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHA512h;
3528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA512_DIGEST_SIZE;
3529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
3531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
3532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef WOLFSSL_SHA384
3533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA384wRSA:
3534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA384wECDSA:
3535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_Sha384Hash(buf, bufSz, digest) == 0) {
3536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHA384h;
3537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA384_DIGEST_SIZE;
3538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
3540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
3541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
3542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("Verify Signature has unsupported type");
3543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (typeH == 0) {
3546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(digest, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0; /* not confirmed */
3550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (keyOID) {
3553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_RSA
3554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case RSAk:
3555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
3556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 idx = 0;
3557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int    encodedSigSz, verifySz;
3558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte*  out;
3559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             RsaKey* pubKey;
3561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte* plain;
3562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte* encodedSig;
3563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
3564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             RsaKey pubKey[1];
3565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte plain[MAX_ENCODED_SIG_SZ];
3566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte encodedSig[MAX_ENCODED_SIG_SZ];
3567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             pubKey = (RsaKey*)XMALLOC(sizeof(RsaKey), NULL,
3571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
3572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             plain = (byte*)XMALLOC(MAX_ENCODED_SIG_SZ, NULL,
3573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
3574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             encodedSig = (byte*)XMALLOC(MAX_ENCODED_SIG_SZ, NULL,
3575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
3576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (pubKey == NULL || plain == NULL || encodedSig == NULL) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 79


3578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Failed to allocate memory at ConfirmSignature");
3579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (pubKey)
3581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XFREE(pubKey, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (plain)
3583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XFREE(plain, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (encodedSig)
3585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XFREE(encodedSig, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break; /* not confirmed */
3588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (wc_InitRsaKey(pubKey, heap) != 0) {
3591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("InitRsaKey failed");
3592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (sigSz > MAX_ENCODED_SIG_SZ) {
3594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Verify Signature is too big");
3595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (wc_RsaPublicKeyDecode(key, &idx, pubKey, keySz) < 0) {
3597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("ASN Key decode error RSA");
3598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
3600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(plain, sig, sigSz);
3601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if ((verifySz = wc_RsaSSL_VerifyInline(plain, sigSz, &out,
3603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                                  pubKey)) < 0) {
3604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("Rsa SSL verify error");
3605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 else {
3607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     /* make sure we're right justified */
3608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     encodedSigSz =
3609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         wc_EncodeSignature(encodedSig, digest, digestSz, typeH);
3610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (encodedSigSz != verifySz ||
3611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 XMEMCMP(out, encodedSig, encodedSigSz) != 0) {
3612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         WOLFSSL_MSG("Rsa SSL verify match encode error");
3613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
3614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     else
3615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         ret = 1; /* match */
3616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     #ifdef WOLFSSL_DEBUG_ENCODING
3618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     {
3619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         int x;
3620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         printf("wolfssl encodedSig:\n");
3622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         for (x = 0; x < encodedSigSz; x++) {
3624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             printf("%02x ", encodedSig[x]);
3625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             if ( (x % 16) == 15)
3626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 printf("\n");
3627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         }
3628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         printf("\n");
3630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         printf("actual digest:\n");
3631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         for (x = 0; x < verifySz; x++) {
3633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             printf("%02x ", out[x]);
3634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             if ( (x % 16) == 15)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 80


3635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 printf("\n");
3636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         }
3637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         printf("\n");
3639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
3640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     #endif /* WOLFSSL_DEBUG_ENCODING */
3641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_FreeRsaKey(pubKey);
3647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(pubKey,     NULL, DYNAMIC_TYPE_TMP_BUFFER);
3650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(plain,      NULL, DYNAMIC_TYPE_TMP_BUFFER);
3651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(encodedSig, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* NO_RSA */
3657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef HAVE_ECC
3658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case ECDSAk:
3659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
3660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int verify = 0;
3661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ecc_key* pubKey;
3663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
3664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ecc_key pubKey[1];
3665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             pubKey = (ecc_key*)XMALLOC(sizeof(ecc_key), NULL,
3669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
3670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (pubKey == NULL) {
3671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Failed to allocate pubKey");
3672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break; /* not confirmed */
3673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (wc_ecc_init(pubKey) < 0) {
3677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Failed to initialize key");
3678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break; /* not confirmed */
3679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (wc_ecc_import_x963(key, keySz, pubKey) < 0) {
3681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("ASN Key import error ECC");
3682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
3684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (wc_ecc_verify_hash(sig, sigSz, digest, digestSz, &verify,
3685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                                 pubKey) != 0) {
3686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("ECC verify hash error");
3687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 else if (1 != verify) {
3689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("ECC Verify didn't match");
3690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 } else
3691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ret = 1; /* match */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 81


3692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_ecc_free(pubKey);
3695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(pubKey, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
3700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* HAVE_ECC */
3702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
3703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("Verify Key type unknown");
3704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
3707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(digest, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
3709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
3711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
3715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int MatchBaseName(int type, const char* name, int nameSz,
3717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          const char* base, int baseSz)
3718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 747              		.loc 1 3718 0
 748              		.cfi_startproc
 749              	.LVL112:
 750 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 751              		.cfi_def_cfa_offset 32
 752              		.cfi_offset 0, -32
 753              		.cfi_offset 1, -28
 754              		.cfi_offset 2, -24
 755              		.cfi_offset 4, -20
 756              		.cfi_offset 5, -16
 757              		.cfi_offset 6, -12
 758              		.cfi_offset 7, -8
 759              		.cfi_offset 14, -4
 760              		.loc 1 3718 0
 761 0002 089C     		ldr	r4, [sp, #32]
 762 0004 051C     		mov	r5, r0
3719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (base == NULL || baseSz <= 0 || name == NULL || nameSz <= 0 ||
3720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             name[0] == '.' || nameSz < baseSz ||
3721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             (type != ASN_RFC822_TYPE && type != ASN_DNS_TYPE))
3722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
 763              		.loc 1 3722 0
 764 0006 181E     		sub	r0, r3, #0
 765              	.LVL113:
3719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (base == NULL || baseSz <= 0 || name == NULL || nameSz <= 0 ||
 766              		.loc 1 3719 0
 767 0008 53D0     		beq	.L109
 768              		.loc 1 3722 0 discriminator 1
 769 000a 0020     		mov	r0, #0
3719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (base == NULL || baseSz <= 0 || name == NULL || nameSz <= 0 ||
 770              		.loc 1 3719 0 discriminator 1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 82


 771 000c 8442     		cmp	r4, r0
 772 000e 50DD     		ble	.L109
 773              		.loc 1 3722 0 discriminator 2
 774 0010 081E     		sub	r0, r1, #0
3719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (base == NULL || baseSz <= 0 || name == NULL || nameSz <= 0 ||
 775              		.loc 1 3719 0 discriminator 2
 776 0012 4ED0     		beq	.L109
 777              		.loc 1 3722 0 discriminator 3
 778 0014 0020     		mov	r0, #0
3719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (base == NULL || baseSz <= 0 || name == NULL || nameSz <= 0 ||
 779              		.loc 1 3719 0 discriminator 3
 780 0016 8242     		cmp	r2, r0
 781 0018 4BDD     		ble	.L109
3719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (base == NULL || baseSz <= 0 || name == NULL || nameSz <= 0 ||
 782              		.loc 1 3719 0 is_stmt 0 discriminator 4
 783 001a 0E78     		ldrb	r6, [r1]
 784 001c 2E2E     		cmp	r6, #46
 785 001e 48D0     		beq	.L109
3720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             (type != ASN_RFC822_TYPE && type != ASN_DNS_TYPE))
 786              		.loc 1 3720 0 is_stmt 1
 787 0020 A242     		cmp	r2, r4
 788 0022 46DB     		blt	.L109
 789              	.LVL114:
 790              	.LBB33:
 791              	.LBB34:
3721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
 792              		.loc 1 3721 0
 793 0024 6E1E     		sub	r6, r5, #1
3720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             (type != ASN_RFC822_TYPE && type != ASN_DNS_TYPE))
 794              		.loc 1 3720 0
 795 0026 012E     		cmp	r6, #1
 796 0028 43D8     		bhi	.L109
 797 002a 1E78     		ldrb	r6, [r3]
3723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* If an email type, handle special cases where the base is only
3725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * a domain, or is an email address itself. */
3726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (type == ASN_RFC822_TYPE) {
 798              		.loc 1 3726 0
 799 002c 012D     		cmp	r5, #1
 800 002e 1BD1     		bne	.L84
 801              	.LVL115:
 802              	.LBB35:
3727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         const char* p = NULL;
3728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int count = 0;
3729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (base[0] != '.') {
 803              		.loc 1 3730 0
 804 0030 2E2E     		cmp	r6, #46
 805 0032 08D0     		beq	.L86
 806              	.LVL116:
 807              	.L85:
3731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             p = base;
3732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             count = 0;
3733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* find the '@' in the base */
3735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (*p != '@' && count < baseSz) {
 808              		.loc 1 3735 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 83


 809 0034 1D5C     		ldrb	r5, [r3, r0]
 810 0036 402D     		cmp	r5, #64
 811 0038 03D0     		beq	.L87
 812 003a A042     		cmp	r0, r4
 813 003c 03D0     		beq	.L86
3736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 count++;
 814              		.loc 1 3736 0
 815 003e 0130     		add	r0, r0, #1
 816              	.LVL117:
 817 0040 F8E7     		b	.L85
 818              	.L87:
3737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 p++;
3738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* No '@' in base, reset p to NULL */
3741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (count >= baseSz)
 819              		.loc 1 3741 0
 820 0042 A042     		cmp	r0, r4
 821 0044 10DB     		blt	.L84
 822              	.LVL118:
 823              	.L86:
 824 0046 0819     		add	r0, r1, r4
 825 0048 0190     		str	r0, [sp, #4]
3730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             p = base;
 826              		.loc 1 3730 0
 827 004a 081C     		mov	r0, r1
 828 004c 03E0     		b	.L89
 829              	.LVL119:
 830              	.L110:
3742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 p = NULL;
3743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (p == NULL) {
3746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* Base isn't an email address, it is a domain name,
3747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              * wind the name forward one character past its '@'. */
3748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             p = name;
3749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             count = 0;
3750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (*p != '@' && count < baseSz) {
 831              		.loc 1 3750 0
 832 004e 019D     		ldr	r5, [sp, #4]
 833              	.LVL120:
 834 0050 A842     		cmp	r0, r5
 835 0052 09D0     		beq	.L84
 836              	.LVL121:
3751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 count++;
3752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 p++;
 837              		.loc 1 3752 0
 838 0054 0130     		add	r0, r0, #1
 839              	.LVL122:
 840              	.L89:
3750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 count++;
 841              		.loc 1 3750 0
 842 0056 0778     		ldrb	r7, [r0]
 843 0058 451A     		sub	r5, r0, r1
 844              	.LVL123:
 845 005a 402F     		cmp	r7, #64
 846 005c F7D1     		bne	.L110
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 84


3753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (count < baseSz && *p == '@') {
 847              		.loc 1 3755 0
 848 005e A542     		cmp	r5, r4
 849 0060 02DA     		bge	.L84
3756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 name = p + 1;
3757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 nameSz -= count + 1;
 850              		.loc 1 3757 0
 851 0062 ED43     		mvn	r5, r5
 852              	.LVL124:
3756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 name = p + 1;
 853              		.loc 1 3756 0
 854 0064 411C     		add	r1, r0, #1
 855              	.LVL125:
 856              		.loc 1 3757 0
 857 0066 5219     		add	r2, r2, r5
 858              	.LVL126:
 859              	.L84:
 860              	.LBE35:
3758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((type == ASN_DNS_TYPE || type == ASN_RFC822_TYPE) && base[0] == '.') {
 861              		.loc 1 3762 0
 862 0068 2E2E     		cmp	r6, #46
 863 006a 02D1     		bne	.L92
 864              	.LVL127:
 865              	.LBB36:
3763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int szAdjust = nameSz - baseSz;
 866              		.loc 1 3763 0
 867 006c 121B     		sub	r2, r2, r4
 868              	.LVL128:
3764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         name += szAdjust;
 869              		.loc 1 3764 0
 870 006e 8918     		add	r1, r1, r2
 871              	.LVL129:
 872 0070 221C     		mov	r2, r4
 873              	.LVL130:
 874              	.L92:
 875              	.LBE36:
 876              	.LBB37:
3765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         nameSz -= szAdjust;
3766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (nameSz > 0) {
3769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (XTOLOWER((unsigned char)*name++) !=
 877              		.loc 1 3769 0
 878 0072 0025     		mov	r5, #0
 879 0074 0F48     		ldr	r0, .L112
 880 0076 0768     		ldr	r7, [r0]
 881              	.LVL131:
 882              	.L93:
 883 0078 501B     		sub	r0, r2, r5
 884              	.LVL132:
 885              	.LBE37:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 85


3768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (XTOLOWER((unsigned char)*name++) !=
 886              		.loc 1 3768 0
 887 007a 0028     		cmp	r0, #0
 888 007c 18DD     		ble	.L111
 889              	.LVL133:
 890              	.LBB38:
 891              		.loc 1 3769 0
 892 007e 4C5D     		ldrb	r4, [r1, r5]
 893              	.LVL134:
 894 0080 3819     		add	r0, r7, r4
 895              	.LVL135:
 896 0082 4678     		ldrb	r6, [r0, #1]
 897 0084 0320     		mov	r0, #3
 898 0086 3040     		and	r0, r6
 899 0088 0128     		cmp	r0, #1
 900 008a 00D1     		bne	.L95
 901 008c 2034     		add	r4, r4, #32
 902              	.LVL136:
 903              	.L95:
 904              	.LBE38:
 905              	.LBB39:
3770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                XTOLOWER((unsigned char)*base++))
 906              		.loc 1 3770 0
 907 008e 585D     		ldrb	r0, [r3, r5]
 908 0090 3E18     		add	r6, r7, r0
 909 0092 7678     		ldrb	r6, [r6, #1]
 910 0094 0190     		str	r0, [sp, #4]
 911              	.LVL137:
 912 0096 B446     		mov	ip, r6
 913 0098 0326     		mov	r6, #3
 914 009a 6046     		mov	r0, ip
 915 009c 0640     		and	r6, r0
 916 009e 0198     		ldr	r0, [sp, #4]
 917 00a0 012E     		cmp	r6, #1
 918 00a2 00D1     		bne	.L97
 919 00a4 2030     		add	r0, r0, #32
 920              	.L97:
 921 00a6 0135     		add	r5, r5, #1
 922              	.LVL138:
 923              	.LBE39:
3769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                XTOLOWER((unsigned char)*base++))
 924              		.loc 1 3769 0
 925 00a8 8442     		cmp	r4, r0
 926 00aa E5D0     		beq	.L93
 927              	.LBE34:
 928              	.LBE33:
3722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 929              		.loc 1 3722 0
 930 00ac 0020     		mov	r0, #0
 931 00ae 00E0     		b	.L109
 932              	.LVL139:
 933              	.L111:
 934              	.LBB41:
 935              	.LBB40:
3771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
3772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         nameSz--;
3773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 86


3774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 1;
 936              		.loc 1 3775 0
 937 00b0 0120     		mov	r0, #1
 938              	.LVL140:
 939              	.L109:
 940              	.LBE40:
 941              	.LBE41:
3776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 942              		.loc 1 3776 0
 943              		@ sp needed
 944 00b2 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 945              	.L113:
 946              		.align	2
 947              	.L112:
 948 00b4 00000000 		.word	__ctype_ptr__
 949              		.cfi_endproc
 950              	.LFE50:
 951              		.size	MatchBaseName, .-MatchBaseName
 952              		.section	.text.GetLength,"ax",%progbits
 953              		.align	1
 954              		.global	GetLength
 955              		.code	16
 956              		.thumb_func
 957              		.type	GetLength, %function
 958              	GetLength:
 959              	.LFB14:
 506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int     length = 0;
 960              		.loc 1 506 0
 961              		.cfi_startproc
 962              	.LVL141:
 963 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 964              		.cfi_def_cfa_offset 20
 965              		.cfi_offset 4, -20
 966              		.cfi_offset 5, -16
 967              		.cfi_offset 6, -12
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 970              		.loc 1 511 0
 971 0002 0026     		mov	r6, #0
 508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte    b;
 972              		.loc 1 508 0
 973 0004 0C68     		ldr	r4, [r1]
 974              	.LVL142:
 511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 975              		.loc 1 511 0
 976 0006 1660     		str	r6, [r2]
 513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("GetLength bad index on input");
 977              		.loc 1 513 0
 978 0008 651C     		add	r5, r4, #1
 979 000a 9D42     		cmp	r5, r3
 980 000c 19D8     		bhi	.L122
 981              	.LVL143:
 518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b >= ASN_LONG_LENGTH) {
 982              		.loc 1 518 0
 983 000e 0019     		add	r0, r0, r4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 87


 984              	.LVL144:
 985 0010 0478     		ldrb	r4, [r0]
 986              	.LVL145:
 519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 bytes = b & 0x7F;
 987              		.loc 1 519 0
 988 0012 67B2     		sxtb	r7, r4
 989 0014 B742     		cmp	r7, r6
 990 0016 0CDA     		bge	.L119
 991              	.LBB42:
 520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 992              		.loc 1 520 0
 993 0018 7F27     		mov	r7, #127
 994 001a 2740     		and	r7, r4
 995              	.LVL146:
 522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("GetLength bad long length");
 996              		.loc 1 522 0
 997 001c ED19     		add	r5, r5, r7
 998              	.LVL147:
 999 001e 341C     		mov	r4, r6
 1000              	.LVL148:
 1001 0020 9D42     		cmp	r5, r3
 1002 0022 0ED8     		bhi	.L122
 1003              	.LVL149:
 1004              	.L117:
 1005 0024 0130     		add	r0, r0, #1
 1006              	.LVL150:
 527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[i++];
 1007              		.loc 1 527 0
 1008 0026 013F     		sub	r7, r7, #1
 1009 0028 03D3     		bcc	.L119
 1010              	.LVL151:
 529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 1011              		.loc 1 529 0
 1012 002a 0678     		ldrb	r6, [r0]
 1013 002c 2402     		lsl	r4, r4, #8
 1014              	.LVL152:
 1015 002e 3443     		orr	r4, r6
 1016              	.LVL153:
 1017 0030 F8E7     		b	.L117
 1018              	.LVL154:
 1019              	.L119:
 1020              	.LBE42:
 535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("GetLength value exceeds buffer length");
 1021              		.loc 1 535 0
 1022 0032 6019     		add	r0, r4, r5
 1023 0034 9842     		cmp	r0, r3
 1024 0036 04D8     		bhi	.L122
 540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > 0)
 1025              		.loc 1 540 0
 1026 0038 0D60     		str	r5, [r1]
 1027 003a 201E     		sub	r0, r4, #0
 541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *len = length;
 1028              		.loc 1 541 0
 1029 003c 03DD     		ble	.L115
 542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1030              		.loc 1 542 0
 1031 003e 1460     		str	r4, [r2]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 88


 1032 0040 01E0     		b	.L115
 1033              	.LVL155:
 1034              	.L122:
 515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 1035              		.loc 1 515 0
 1036 0042 8420     		mov	r0, #132
 1037 0044 4042     		neg	r0, r0
 1038              	.L115:
 545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1039              		.loc 1 545 0
 1040              		@ sp needed
 1041 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 1042              		.cfi_endproc
 1043              	.LFE14:
 1044              		.size	GetLength, .-GetLength
 1045              		.section	.text.GetSequence,"ax",%progbits
 1046              		.align	1
 1047              		.global	GetSequence
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	GetSequence, %function
 1051              	GetSequence:
 1052              	.LFB15:
 550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length = -1;
 1053              		.loc 1 550 0
 1054              		.cfi_startproc
 1055              	.LVL156:
 1056 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1057              		.cfi_def_cfa_offset 24
 1058              		.cfi_offset 0, -24
 1059              		.cfi_offset 1, -20
 1060              		.cfi_offset 2, -16
 1061              		.cfi_offset 4, -12
 1062              		.cfi_offset 5, -8
 1063              		.cfi_offset 14, -4
 551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx    = *inOutIdx;
 1064              		.loc 1 551 0
 1065 0002 0124     		mov	r4, #1
 1066 0004 6442     		neg	r4, r4
 1067 0006 0094     		str	r4, [sp]
 552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1068              		.loc 1 552 0
 1069 0008 0C68     		ldr	r4, [r1]
 554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             GetLength(input, &idx, &length, maxIdx) < 0)
 1070              		.loc 1 554 0
 1071 000a 651C     		add	r5, r4, #1
 1072 000c 045D     		ldrb	r4, [r0, r4]
 1073 000e 0195     		str	r5, [sp, #4]
 1074 0010 302C     		cmp	r4, #48
 1075 0012 02D0     		beq	.L125
 1076              	.LVL157:
 1077              	.L127:
 556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1078              		.loc 1 556 0
 1079 0014 8C20     		mov	r0, #140
 1080 0016 4042     		neg	r0, r0
 1081 0018 0BE0     		b	.L126
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 89


 1082              	.LVL158:
 1083              	.L125:
 1084 001a 151C     		mov	r5, r2
 1085 001c 0C1C     		mov	r4, r1
 555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 1086              		.loc 1 555 0 discriminator 1
 1087 001e 6A46     		mov	r2, sp
 1088              	.LVL159:
 1089 0020 01A9     		add	r1, sp, #4
 1090              	.LVL160:
 1091 0022 FFF7FEFF 		bl	GetLength
 1092              	.LVL161:
 554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             GetLength(input, &idx, &length, maxIdx) < 0)
 1093              		.loc 1 554 0 discriminator 1
 1094 0026 0028     		cmp	r0, #0
 1095 0028 F4DB     		blt	.L127
 558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 1096              		.loc 1 558 0
 1097 002a 0098     		ldr	r0, [sp]
 559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1098              		.loc 1 559 0
 1099 002c 019B     		ldr	r3, [sp, #4]
 558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 1100              		.loc 1 558 0
 1101 002e 2860     		str	r0, [r5]
 559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1102              		.loc 1 559 0
 1103 0030 2360     		str	r3, [r4]
 1104              	.LVL162:
 1105              	.L126:
 562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1106              		.loc 1 562 0
 1107              		@ sp needed
 1108 0032 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1109              		.cfi_endproc
 1110              	.LFE15:
 1111              		.size	GetSequence, .-GetSequence
 1112              		.section	.text.GetSet,"ax",%progbits
 1113              		.align	1
 1114              		.global	GetSet
 1115              		.code	16
 1116              		.thumb_func
 1117              		.type	GetSet, %function
 1118              	GetSet:
 1119              	.LFB16:
 567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length = -1;
 1120              		.loc 1 567 0
 1121              		.cfi_startproc
 1122              	.LVL163:
 1123 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1124              		.cfi_def_cfa_offset 24
 1125              		.cfi_offset 0, -24
 1126              		.cfi_offset 1, -20
 1127              		.cfi_offset 2, -16
 1128              		.cfi_offset 4, -12
 1129              		.cfi_offset 5, -8
 1130              		.cfi_offset 14, -4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 90


 568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx    = *inOutIdx;
 1131              		.loc 1 568 0
 1132 0002 0124     		mov	r4, #1
 1133 0004 6442     		neg	r4, r4
 1134 0006 0094     		str	r4, [sp]
 569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1135              		.loc 1 569 0
 1136 0008 0C68     		ldr	r4, [r1]
 571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             GetLength(input, &idx, &length, maxIdx) < 0)
 1137              		.loc 1 571 0
 1138 000a 651C     		add	r5, r4, #1
 1139 000c 045D     		ldrb	r4, [r0, r4]
 1140 000e 0195     		str	r5, [sp, #4]
 1141 0010 312C     		cmp	r4, #49
 1142 0012 02D0     		beq	.L129
 1143              	.LVL164:
 1144              	.L131:
 573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1145              		.loc 1 573 0
 1146 0014 8C20     		mov	r0, #140
 1147 0016 4042     		neg	r0, r0
 1148 0018 0BE0     		b	.L130
 1149              	.LVL165:
 1150              	.L129:
 1151 001a 151C     		mov	r5, r2
 1152 001c 0C1C     		mov	r4, r1
 572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 1153              		.loc 1 572 0 discriminator 1
 1154 001e 6A46     		mov	r2, sp
 1155              	.LVL166:
 1156 0020 01A9     		add	r1, sp, #4
 1157              	.LVL167:
 1158 0022 FFF7FEFF 		bl	GetLength
 1159              	.LVL168:
 571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             GetLength(input, &idx, &length, maxIdx) < 0)
 1160              		.loc 1 571 0 discriminator 1
 1161 0026 0028     		cmp	r0, #0
 1162 0028 F4DB     		blt	.L131
 575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 1163              		.loc 1 575 0
 1164 002a 0098     		ldr	r0, [sp]
 576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1165              		.loc 1 576 0
 1166 002c 019B     		ldr	r3, [sp, #4]
 575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 1167              		.loc 1 575 0
 1168 002e 2860     		str	r0, [r5]
 576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1169              		.loc 1 576 0
 1170 0030 2360     		str	r3, [r4]
 1171              	.LVL169:
 1172              	.L130:
 579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1173              		.loc 1 579 0
 1174              		@ sp needed
 1175 0032 3EBD     		pop	{r1, r2, r3, r4, r5, pc}
 1176              		.cfi_endproc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 91


 1177              	.LFE16:
 1178              		.size	GetSet, .-GetSet
 1179              		.section	.text.GetName,"ax",%progbits
 1180              		.align	1
 1181              		.code	16
 1182              		.thumb_func
 1183              		.type	GetName, %function
 1184              	GetName:
 1185              	.LFB30:
2488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;  /* length of all distinguished names */
 1186              		.loc 1 2488 0
 1187              		.cfi_startproc
 1188              	.LVL170:
 1189 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1190              		.cfi_def_cfa_offset 20
 1191              		.cfi_offset 4, -20
 1192              		.cfi_offset 5, -16
 1193              		.cfi_offset 6, -12
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 8BB0     		sub	sp, sp, #44
 1197              		.cfi_def_cfa_offset 64
2488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;  /* length of all distinguished names */
 1198              		.loc 1 2488 0
 1199 0004 041C     		mov	r4, r0
 1200 0006 0391     		str	r1, [sp, #12]
2502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         full = cert->issuer;
 1201              		.loc 1 2502 0
 1202 0008 0029     		cmp	r1, #0
 1203 000a 05D1     		bne	.L133
2503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         hash = cert->issuerHash;
 1204              		.loc 1 2503 0
 1205 000c 031C     		mov	r3, r0
2504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 1206              		.loc 1 2504 0
 1207 000e 071C     		mov	r7, r0
2503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         hash = cert->issuerHash;
 1208              		.loc 1 2503 0
 1209 0010 7033     		add	r3, r3, #112
 1210 0012 0093     		str	r3, [sp]
 1211              	.LVL171:
2504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 1212              		.loc 1 2504 0
 1213 0014 4837     		add	r7, r7, #72
 1214              	.LVL172:
 1215 0016 05E0     		b	.L134
 1216              	.LVL173:
 1217              	.L133:
2507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         hash = cert->subjectHash;
 1218              		.loc 1 2507 0
 1219 0018 031C     		mov	r3, r0
2508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 1220              		.loc 1 2508 0
 1221 001a 071C     		mov	r7, r0
2507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         hash = cert->subjectHash;
 1222              		.loc 1 2507 0
 1223 001c 7133     		add	r3, r3, #113
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 92


 1224 001e FF33     		add	r3, r3, #255
 1225 0020 0093     		str	r3, [sp]
 1226              	.LVL174:
2508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 1227              		.loc 1 2508 0
 1228 0022 3437     		add	r7, r7, #52
 1229              	.LVL175:
 1230              	.L134:
2511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Trying optional prefix...");
 1231              		.loc 1 2511 0
 1232 0024 9D23     		mov	r3, #157
 1233 0026 9E25     		mov	r5, #158
 1234 0028 9B00     		lsl	r3, r3, #2
 1235 002a AD00     		lsl	r5, r5, #2
 1236 002c E058     		ldr	r0, [r4, r3]
 1237              	.LVL176:
 1238 002e 6359     		ldr	r3, [r4, r5]
 1239 0030 C35C     		ldrb	r3, [r0, r3]
 1240 0032 062B     		cmp	r3, #6
 1241 0034 0DD1     		bne	.L135
2514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 1242              		.loc 1 2514 0
 1243 0036 2B1C     		mov	r3, r5
 1244 0038 0433     		add	r3, r3, #4
 1245 003a 6119     		add	r1, r4, r5
 1246              	.LVL177:
 1247 003c 06AA     		add	r2, sp, #24
 1248 003e E358     		ldr	r3, [r4, r3]
 1249 0040 FFF7FEFF 		bl	GetLength
 1250              	.LVL178:
 1251 0044 0028     		cmp	r0, #0
 1252 0046 00DA     		bge	.LCB1295
 1253 0048 A8E0     		b	.L141	@long jump
 1254              	.LCB1295:
2517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Got optional prefix");
 1255              		.loc 1 2517 0
 1256 004a 6259     		ldr	r2, [r4, r5]
 1257 004c 069B     		ldr	r3, [sp, #24]
 1258 004e 9B18     		add	r3, r3, r2
 1259 0050 6351     		str	r3, [r4, r5]
 1260              	.L135:
2524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
 1261              		.loc 1 2524 0
 1262 0052 9E26     		mov	r6, #158
 1263 0054 B600     		lsl	r6, r6, #2
 1264 0056 A359     		ldr	r3, [r4, r6]
2525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 1265              		.loc 1 2525 0
 1266 0058 9D25     		mov	r5, #157
2524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(cert->source, &cert->srcIdx, &length, cert->maxIdx) < 0)
 1267              		.loc 1 2524 0
 1268 005a 0293     		str	r3, [sp, #8]
 1269              	.LVL179:
2525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 1270              		.loc 1 2525 0
 1271 005c A319     		add	r3, r4, r6
 1272              	.LVL180:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 93


 1273 005e 0193     		str	r3, [sp, #4]
 1274 0060 191C     		mov	r1, r3
 1275 0062 9F23     		mov	r3, #159
 1276              	.LVL181:
 1277 0064 AD00     		lsl	r5, r5, #2
 1278 0066 9B00     		lsl	r3, r3, #2
 1279 0068 6059     		ldr	r0, [r4, r5]
 1280 006a 06AA     		add	r2, sp, #24
 1281 006c E358     		ldr	r3, [r4, r3]
 1282 006e FFF7FEFF 		bl	GetSequence
 1283              	.LVL182:
 1284 0072 0028     		cmp	r0, #0
 1285 0074 00DA     		bge	.LCB1325
 1286 0076 91E0     		b	.L141	@long jump
 1287              	.LCB1325:
2531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 1288              		.loc 1 2531 0
 1289 0078 029A     		ldr	r2, [sp, #8]
 1290 007a 6359     		ldr	r3, [r4, r5]
 1291 007c 9818     		add	r0, r3, r2
 1292 007e 069B     		ldr	r3, [sp, #24]
 1293 0080 991A     		sub	r1, r3, r2
 1294 0082 A359     		ldr	r3, [r4, r6]
 1295 0084 3A1C     		mov	r2, r7
 1296 0086 C918     		add	r1, r1, r3
 1297 0088 FFF7FEFF 		bl	wc_ShaHash
 1298              	.LVL183:
2533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
 1299              		.loc 1 2533 0
 1300 008c 0028     		cmp	r0, #0
 1301 008e 00D0     		beq	.LCB1341
 1302 0090 89E1     		b	.L179	@long jump
 1303              	.LCB1341:
2536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = 0;
 1304              		.loc 1 2536 0
 1305 0092 069A     		ldr	r2, [sp, #24]
 1306 0094 A359     		ldr	r3, [r4, r6]
 1307 0096 D118     		add	r1, r2, r3
 1308 0098 0691     		str	r1, [sp, #24]
 1309              	.LVL184:
2547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectRaw = &cert->source[cert->srcIdx];
 1310              		.loc 1 2547 0
 1311 009a 0399     		ldr	r1, [sp, #12]
 1312 009c 0129     		cmp	r1, #1
 1313 009e 07D1     		bne	.L139
2548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectRawLen = length - cert->srcIdx;
 1314              		.loc 1 2548 0
 1315 00a0 6159     		ldr	r1, [r4, r5]
 1316 00a2 CB18     		add	r3, r1, r3
 1317 00a4 C221     		mov	r1, #194
 1318 00a6 8900     		lsl	r1, r1, #2
 1319 00a8 6350     		str	r3, [r4, r1]
2549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 1320              		.loc 1 2549 0
 1321 00aa C323     		mov	r3, #195
 1322 00ac 9B00     		lsl	r3, r3, #2
 1323 00ae E250     		str	r2, [r4, r3]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 94


 1324              	.L139:
 1325              	.LBB43:
 1326              	.LBB44:
2587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1327              		.loc 1 2587 0
 1328 00b0 0025     		mov	r5, #0
 1329 00b2 57E0     		b	.L140
 1330              	.LVL185:
 1331              	.L195:
 1332              	.LBE44:
2566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != ASN_OBJECT_ID)
 1333              		.loc 1 2566 0
 1334 00b4 9D23     		mov	r3, #157
 1335 00b6 9E21     		mov	r1, #158
 1336 00b8 9B00     		lsl	r3, r3, #2
 1337 00ba E058     		ldr	r0, [r4, r3]
 1338 00bc 0433     		add	r3, r3, #4
 1339 00be E358     		ldr	r3, [r4, r3]
 1340 00c0 8900     		lsl	r1, r1, #2
 1341 00c2 5A1C     		add	r2, r3, #1
 1342 00c4 6250     		str	r2, [r4, r1]
 1343              	.LVL186:
2567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_OBJECT_ID_E;
 1344              		.loc 1 2567 0
 1345 00c6 C35C     		ldrb	r3, [r0, r3]
 1346              	.LVL187:
 1347 00c8 062B     		cmp	r3, #6
 1348 00ca 00D0     		beq	.LCB1386
 1349 00cc 58E1     		b	.L167	@long jump
 1350              	.LCB1386:
2570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 1351              		.loc 1 2570 0
 1352 00ce 0199     		ldr	r1, [sp, #4]
 1353 00d0 08AA     		add	r2, sp, #32
 1354              	.LVL188:
 1355 00d2 E359     		ldr	r3, [r4, r7]
 1356 00d4 FFF7FEFF 		bl	GetLength
 1357              	.LVL189:
 1358 00d8 0028     		cmp	r0, #0
 1359 00da 5FDB     		blt	.L141
2573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1360              		.loc 1 2573 0
 1361 00dc 9D23     		mov	r3, #157
 1362 00de 9B00     		lsl	r3, r3, #2
 1363 00e0 E058     		ldr	r0, [r4, r3]
 1364 00e2 0433     		add	r3, r3, #4
 1365 00e4 E258     		ldr	r2, [r4, r3]
 1366 00e6 8618     		add	r6, r0, r2
 1367 00e8 3178     		ldrb	r1, [r6]
 1368              	.LVL190:
 1369 00ea 7378     		ldrb	r3, [r6, #1]
 1370              	.LVL191:
2576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte   id;
 1371              		.loc 1 2576 0
 1372 00ec 5529     		cmp	r1, #85
 1373 00ee 57D1     		bne	.L143
2576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte   id;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 95


 1374              		.loc 1 2576 0 is_stmt 0 discriminator 1
 1375 00f0 042B     		cmp	r3, #4
 1376 00f2 00D0     		beq	.LCB1409
 1377 00f4 E6E0     		b	.L169	@long jump
 1378              	.LCB1409:
 1379              	.LVL192:
 1380              	.LBB45:
2582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b  = cert->source[cert->srcIdx++]; /* encoding */
 1381              		.loc 1 2582 0 is_stmt 1
 1382 00f6 9E21     		mov	r1, #158
 1383              	.LVL193:
 1384 00f8 D31C     		add	r3, r2, #3
 1385              	.LVL194:
 1386 00fa 8900     		lsl	r1, r1, #2
 1387 00fc 6350     		str	r3, [r4, r1]
 1388              	.LVL195:
2583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1389              		.loc 1 2583 0
 1390 00fe 0432     		add	r2, r2, #4
2582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b  = cert->source[cert->srcIdx++]; /* encoding */
 1391              		.loc 1 2582 0
 1392 0100 B678     		ldrb	r6, [r6, #2]
 1393              	.LVL196:
2583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1394              		.loc 1 2583 0
 1395 0102 6250     		str	r2, [r4, r1]
 1396 0104 C35C     		ldrb	r3, [r0, r3]
2585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           cert->maxIdx) < 0)
 1397              		.loc 1 2585 0
 1398 0106 0199     		ldr	r1, [sp, #4]
2583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1399              		.loc 1 2583 0
 1400 0108 0293     		str	r3, [sp, #8]
 1401              	.LVL197:
2585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           cert->maxIdx) < 0)
 1402              		.loc 1 2585 0
 1403 010a 09AA     		add	r2, sp, #36
 1404 010c E359     		ldr	r3, [r4, r7]
 1405 010e FFF7FEFF 		bl	GetLength
 1406              	.LVL198:
 1407 0112 0028     		cmp	r0, #0
 1408 0114 42DB     		blt	.L141
2589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* include biggest pre fix header too 4 = "/serialNumber=" */
 1409              		.loc 1 2589 0
 1410 0116 099F     		ldr	r7, [sp, #36]
 1411 0118 8022     		mov	r2, #128
 1412 011a 391C     		mov	r1, r7
 1413 011c 5200     		lsl	r2, r2, #1
 1414 011e 0D31     		add	r1, r1, #13
 1415 0120 521B     		sub	r2, r2, r5
 1416 0122 C817     		asr	r0, r1, #31
 1417 0124 D30F     		lsr	r3, r2, #31
 1418 0126 9142     		cmp	r1, r2
 1419 0128 4341     		adc	r3, r3, r0
 1420 012a DBB2     		uxtb	r3, r3
 1421              	.LVL199:
2595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (nameType == SUBJECT) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 96


 1422              		.loc 1 2595 0
 1423 012c 032E     		cmp	r6, #3
 1424 012e 6FD0     		beq	.L186
2612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1425              		.loc 1 2612 0
 1426 0130 042E     		cmp	r6, #4
 1427 0132 00D1     		bne	.LCB1449
 1428 0134 82E0     		b	.L187	@long jump
 1429              	.LCB1449:
2630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1430              		.loc 1 2630 0
 1431 0136 062E     		cmp	r6, #6
 1432 0138 00D1     		bne	.LCB1451
 1433 013a 85E0     		b	.L188	@long jump
 1434              	.LCB1451:
2648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1435              		.loc 1 2648 0
 1436 013c 072E     		cmp	r6, #7
 1437 013e 00D1     		bne	.LCB1453
 1438 0140 88E0     		b	.L189	@long jump
 1439              	.LCB1453:
2666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1440              		.loc 1 2666 0
 1441 0142 082E     		cmp	r6, #8
 1442 0144 00D1     		bne	.LCB1455
 1443 0146 8CE0     		b	.L190	@long jump
 1444              	.LCB1455:
2684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1445              		.loc 1 2684 0
 1446 0148 0A2E     		cmp	r6, #10
 1447 014a 00D1     		bne	.LCB1457
 1448 014c 90E0     		b	.L191	@long jump
 1449              	.LCB1457:
2702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1450              		.loc 1 2702 0
 1451 014e 0B2E     		cmp	r6, #11
 1452 0150 00D1     		bne	.LCB1459
 1453 0152 98E0     		b	.L192	@long jump
 1454              	.LCB1459:
2720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (!tooBig) {
 1455              		.loc 1 2720 0
 1456 0154 052E     		cmp	r6, #5
 1457 0156 00D1     		bne	.LCB1461
 1458 0158 A0E0     		b	.L193	@long jump
 1459              	.LCB1461:
 1460              	.LVL200:
 1461              	.L165:
2737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 1462              		.loc 1 2737 0
 1463 015a 9E23     		mov	r3, #158
 1464 015c 9B00     		lsl	r3, r3, #2
 1465 015e E258     		ldr	r2, [r4, r3]
 1466 0160 BF18     		add	r7, r7, r2
 1467 0162 E750     		str	r7, [r4, r3]
 1468              	.LVL201:
 1469              	.L140:
 1470              	.LBE45:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 97


 1471              	.LBE43:
2553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte   b;
 1472              		.loc 1 2553 0
 1473 0164 9E23     		mov	r3, #158
 1474 0166 9B00     		lsl	r3, r3, #2
 1475 0168 E358     		ldr	r3, [r4, r3]
 1476 016a 069A     		ldr	r2, [sp, #24]
 1477 016c 0293     		str	r3, [sp, #8]
 1478 016e 9342     		cmp	r3, r2
 1479 0170 00D3     		bcc	.LCB1493
 1480 0172 07E1     		b	.L194	@long jump
 1481              	.LCB1493:
 1482              	.LVL202:
 1483              	.LBB53:
2559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("Cert name lacks set header, trying sequence");
 1484              		.loc 1 2559 0
 1485 0174 9F27     		mov	r7, #159
 1486 0176 9D23     		mov	r3, #157
 1487 0178 BF00     		lsl	r7, r7, #2
 1488 017a 9B00     		lsl	r3, r3, #2
 1489 017c E058     		ldr	r0, [r4, r3]
 1490 017e 0199     		ldr	r1, [sp, #4]
 1491 0180 07AA     		add	r2, sp, #28
 1492 0182 E359     		ldr	r3, [r4, r7]
 1493 0184 FFF7FEFF 		bl	GetSet
 1494              	.LVL203:
2563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 1495              		.loc 1 2563 0
 1496 0188 9D23     		mov	r3, #157
 1497 018a 9B00     		lsl	r3, r3, #2
 1498 018c E058     		ldr	r0, [r4, r3]
 1499 018e 0199     		ldr	r1, [sp, #4]
 1500 0190 07AA     		add	r2, sp, #28
 1501 0192 E359     		ldr	r3, [r4, r7]
 1502 0194 FFF7FEFF 		bl	GetSequence
 1503              	.LVL204:
 1504 0198 0028     		cmp	r0, #0
 1505 019a 8BDA     		bge	.L195
 1506              	.LVL205:
 1507              	.L141:
2564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1508              		.loc 1 2564 0
 1509 019c 8C20     		mov	r0, #140
 1510 019e 35E0     		b	.L184
 1511              	.LVL206:
 1512              	.L143:
 1513              	.LBB46:
2745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 email = TRUE;
 1514              		.loc 1 2745 0
 1515 01a0 2A29     		cmp	r1, #42
 1516 01a2 00D0     		beq	.LCB1541
 1517 01a4 85E0     		b	.L157	@long jump
 1518              	.LCB1541:
2745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 email = TRUE;
 1519              		.loc 1 2745 0 is_stmt 0 discriminator 1
 1520 01a6 863B     		sub	r3, r3, #134
 1521              	.LVL207:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 98


 1522 01a8 1F1C     		mov	r7, r3
 1523 01aa 7942     		neg	r1, r7
 1524 01ac 7941     		adc	r1, r1, r7
 1525              	.LVL208:
2742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int  adv;
 1526              		.loc 1 2742 0 is_stmt 1 discriminator 1
 1527 01ae 0023     		mov	r3, #0
2746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1528              		.loc 1 2746 0 discriminator 1
 1529 01b0 CFB2     		uxtb	r7, r1
 1530              	.LVL209:
2742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int  adv;
 1531              		.loc 1 2742 0 discriminator 1
 1532 01b2 0293     		str	r3, [sp, #8]
 1533              	.LVL210:
 1534              	.L144:
2751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1535              		.loc 1 2751 0
 1536 01b4 089B     		ldr	r3, [sp, #32]
 1537 01b6 0132     		add	r2, r2, #1
 1538 01b8 D218     		add	r2, r2, r3
 1539 01ba 9E23     		mov	r3, #158
 1540 01bc 9B00     		lsl	r3, r3, #2
 1541 01be E250     		str	r2, [r4, r3]
 1542              	.LVL211:
2753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
 1543              		.loc 1 2753 0
 1544 01c0 0433     		add	r3, r3, #4
 1545 01c2 0199     		ldr	r1, [sp, #4]
 1546 01c4 09AA     		add	r2, sp, #36
 1547 01c6 E358     		ldr	r3, [r4, r3]
 1548 01c8 FFF7FEFF 		bl	GetLength
 1549              	.LVL212:
 1550 01cc 0028     		cmp	r0, #0
 1551 01ce E5DB     		blt	.L141
2756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("ASN name too big, skipping");
 1552              		.loc 1 2756 0
 1553 01d0 8023     		mov	r3, #128
 1554 01d2 099A     		ldr	r2, [sp, #36]
 1555 01d4 5B00     		lsl	r3, r3, #1
 1556 01d6 5B1B     		sub	r3, r3, r5
 1557 01d8 0126     		mov	r6, #1
 1558 01da 9A42     		cmp	r2, r3
 1559 01dc 00DC     		bgt	.L159
 1560 01de 0026     		mov	r6, #0
 1561              	.L159:
 1562 01e0 F6B2     		uxtb	r6, r6
 1563              	.LVL213:
2761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if ( (14 + adv) > (int)(ASN_NAME_MAX - idx)) {
 1564              		.loc 1 2761 0
 1565 01e2 002F     		cmp	r7, #0
 1566 01e4 00D1     		bne	.LCB1589
 1567 01e6 A5E0     		b	.L160	@long jump
 1568              	.LCB1589:
2762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("ASN name too big, skipping");
 1569              		.loc 1 2762 0
 1570 01e8 0D32     		add	r2, r2, #13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 99


 1571 01ea 9A42     		cmp	r2, r3
 1572 01ec 6DDA     		bge	.L172
2766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/emailAddress=", 14);
 1573              		.loc 1 2766 0
 1574 01ee 002E     		cmp	r6, #0
 1575 01f0 6BD1     		bne	.L172
2767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 14;
 1576              		.loc 1 2767 0
 1577 01f2 009B     		ldr	r3, [sp]
 1578 01f4 6D49     		ldr	r1, .L197
 1579 01f6 5819     		add	r0, r3, r5
 1580 01f8 0E22     		mov	r2, #14
 1581 01fa FFF7FEFF 		bl	memcpy
 1582              	.LVL214:
2768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
 1583              		.loc 1 2768 0
 1584 01fe 0E35     		add	r5, r5, #14
 1585              	.LVL215:
 1586              	.L161:
 1587              	.LBB47:
2785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               cert->heap, DYNAMIC_TYPE_ALTNAME);
 1588              		.loc 1 2785 0
 1589 0200 0820     		mov	r0, #8
 1590 0202 FFF7FEFF 		bl	wolfSSL_Malloc
 1591              	.LVL216:
 1592 0206 071E     		sub	r7, r0, #0
 1593              	.LVL217:
2787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             WOLFSSL_MSG("\tOut of Memory");
 1594              		.loc 1 2787 0
 1595 0208 61D1     		bne	.L196
 1596              	.LVL218:
 1597              	.L173:
2789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         }
 1598              		.loc 1 2789 0
 1599 020a 7D20     		mov	r0, #125
 1600              	.LVL219:
 1601              	.L184:
 1602              	.LBE47:
 1603              	.LBE46:
2568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1604              		.loc 1 2568 0
 1605 020c 4042     		neg	r0, r0
 1606 020e CAE0     		b	.L179
 1607              	.LVL220:
 1608              	.L186:
 1609              	.LBB50:
2596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCN = (char *)&cert->source[cert->srcIdx];
 1610              		.loc 1 2596 0
 1611 0210 039A     		ldr	r2, [sp, #12]
 1612 0212 012A     		cmp	r2, #1
 1613 0214 0CD1     		bne	.L147
2597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCNLen = strLen;
 1614              		.loc 1 2597 0
 1615 0216 9D22     		mov	r2, #157
 1616 0218 9200     		lsl	r2, r2, #2
 1617 021a A158     		ldr	r1, [r4, r2]
 1618 021c 0432     		add	r2, r2, #4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 100


 1619 021e A258     		ldr	r2, [r4, r2]
2598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCNEnc = b;
 1620              		.loc 1 2598 0
 1621 0220 6766     		str	r7, [r4, #100]
2597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCNLen = strLen;
 1622              		.loc 1 2597 0
 1623 0222 8A18     		add	r2, r1, r2
2599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
 1624              		.loc 1 2599 0
 1625 0224 6946     		mov	r1, sp
2597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectCNLen = strLen;
 1626              		.loc 1 2597 0
 1627 0226 2266     		str	r2, [r4, #96]
2599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
 1628              		.loc 1 2599 0
 1629 0228 221C     		mov	r2, r4
 1630 022a 097A     		ldrb	r1, [r1, #8]
 1631 022c 6832     		add	r2, r2, #104
 1632 022e 1170     		strb	r1, [r2]
 1633              	.L147:
2602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/CN=", 4);
 1634              		.loc 1 2602 0
 1635 0230 002B     		cmp	r3, #0
 1636 0232 92D1     		bne	.L165
2603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
 1637              		.loc 1 2603 0
 1638 0234 009B     		ldr	r3, [sp]
 1639              	.LVL221:
 1640 0236 5E49     		ldr	r1, .L197+4
 1641 0238 5819     		add	r0, r3, r5
 1642              	.LVL222:
 1643 023a 2AE0     		b	.L182
 1644              	.LVL223:
 1645              	.L187:
2613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/SN=", 4);
 1646              		.loc 1 2613 0
 1647 023c 002B     		cmp	r3, #0
 1648 023e 8CD1     		bne	.L165
2614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
 1649              		.loc 1 2614 0
 1650 0240 009B     		ldr	r3, [sp]
 1651              	.LVL224:
 1652 0242 5C49     		ldr	r1, .L197+8
 1653              	.LVL225:
 1654 0244 5819     		add	r0, r3, r5
 1655              	.LVL226:
 1656 0246 24E0     		b	.L182
 1657              	.LVL227:
 1658              	.L188:
2631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/C=", 3);
 1659              		.loc 1 2631 0
 1660 0248 002B     		cmp	r3, #0
 1661 024a 86D1     		bne	.L165
2632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 3;
 1662              		.loc 1 2632 0
 1663 024c 009B     		ldr	r3, [sp]
 1664              	.LVL228:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 101


 1665 024e 5A49     		ldr	r1, .L197+12
 1666              	.LVL229:
 1667 0250 5819     		add	r0, r3, r5
 1668              	.LVL230:
 1669 0252 13E0     		b	.L183
 1670              	.LVL231:
 1671              	.L189:
2649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/L=", 3);
 1672              		.loc 1 2649 0
 1673 0254 002B     		cmp	r3, #0
 1674 0256 00D0     		beq	.LCB1716
 1675 0258 7FE7     		b	.L165	@long jump
 1676              	.LCB1716:
2650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 3;
 1677              		.loc 1 2650 0
 1678 025a 009B     		ldr	r3, [sp]
 1679              	.LVL232:
 1680 025c 5749     		ldr	r1, .L197+16
 1681              	.LVL233:
 1682 025e 5819     		add	r0, r3, r5
 1683              	.LVL234:
 1684 0260 0CE0     		b	.L183
 1685              	.LVL235:
 1686              	.L190:
2667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/ST=", 4);
 1687              		.loc 1 2667 0
 1688 0262 002B     		cmp	r3, #0
 1689 0264 00D0     		beq	.LCB1730
 1690 0266 78E7     		b	.L165	@long jump
 1691              	.LCB1730:
2668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
 1692              		.loc 1 2668 0
 1693 0268 009B     		ldr	r3, [sp]
 1694              	.LVL236:
 1695 026a 5549     		ldr	r1, .L197+20
 1696              	.LVL237:
 1697 026c 5819     		add	r0, r3, r5
 1698              	.LVL238:
 1699 026e 10E0     		b	.L182
 1700              	.LVL239:
 1701              	.L191:
2685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/O=", 3);
 1702              		.loc 1 2685 0
 1703 0270 002B     		cmp	r3, #0
 1704 0272 00D0     		beq	.LCB1744
 1705 0274 71E7     		b	.L165	@long jump
 1706              	.LCB1744:
2686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 3;
 1707              		.loc 1 2686 0
 1708 0276 009B     		ldr	r3, [sp]
 1709              	.LVL240:
 1710 0278 5249     		ldr	r1, .L197+24
 1711              	.LVL241:
 1712 027a 5819     		add	r0, r3, r5
 1713              	.LVL242:
 1714              	.L183:
 1715 027c 0322     		mov	r2, #3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 102


 1716              	.LVL243:
 1717 027e FFF7FEFF 		bl	memcpy
 1718              	.LVL244:
2687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
 1719              		.loc 1 2687 0
 1720 0282 0335     		add	r5, r5, #3
 1721              	.LVL245:
 1722 0284 82E0     		b	.L149
 1723              	.LVL246:
 1724              	.L192:
2703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/OU=", 4);
 1725              		.loc 1 2703 0
 1726 0286 002B     		cmp	r3, #0
 1727 0288 00D0     		beq	.LCB1771
 1728 028a 66E7     		b	.L165	@long jump
 1729              	.LCB1771:
2704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 4;
 1730              		.loc 1 2704 0
 1731 028c 009B     		ldr	r3, [sp]
 1732              	.LVL247:
 1733 028e 4E49     		ldr	r1, .L197+28
 1734              	.LVL248:
 1735 0290 5819     		add	r0, r3, r5
 1736              	.LVL249:
 1737              	.L182:
 1738 0292 0422     		mov	r2, #4
 1739 0294 FFF7FEFF 		bl	memcpy
 1740              	.LVL250:
2705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     copy = TRUE;
 1741              		.loc 1 2705 0
 1742 0298 0435     		add	r5, r5, #4
 1743              	.LVL251:
 1744 029a 77E0     		b	.L149
 1745              	.LVL252:
 1746              	.L193:
2721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    XMEMCPY(&full[idx], "/serialNumber=", 14);
 1747              		.loc 1 2721 0
 1748 029c 002B     		cmp	r3, #0
 1749 029e 00D0     		beq	.LCB1798
 1750 02a0 5BE7     		b	.L165	@long jump
 1751              	.LCB1798:
2722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    idx += 14;
 1752              		.loc 1 2722 0
 1753 02a2 009B     		ldr	r3, [sp]
 1754              	.LVL253:
 1755 02a4 4949     		ldr	r1, .L197+32
 1756              	.LVL254:
 1757 02a6 5819     		add	r0, r3, r5
 1758              	.LVL255:
 1759 02a8 0E22     		mov	r2, #14
 1760              	.LVL256:
 1761 02aa FFF7FEFF 		bl	memcpy
 1762              	.LVL257:
2723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    copy = TRUE;
 1763              		.loc 1 2723 0
 1764 02ae 0E35     		add	r5, r5, #14
 1765              	.LVL258:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 103


 1766 02b0 6CE0     		b	.L149
 1767              	.LVL259:
 1768              	.L157:
 1769              	.LBE50:
 1770              	.LBB51:
2748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 uid = TRUE;
 1771              		.loc 1 2748 0
 1772 02b2 0929     		cmp	r1, #9
 1773 02b4 06D1     		bne	.L169
2748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 uid = TRUE;
 1774              		.loc 1 2748 0 is_stmt 0 discriminator 1
 1775 02b6 923B     		sub	r3, r3, #146
 1776              	.LVL260:
 1777 02b8 5942     		neg	r1, r3
 1778 02ba 5941     		adc	r1, r1, r3
 1779              	.LVL261:
2742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int  adv;
 1780              		.loc 1 2742 0 is_stmt 1 discriminator 1
 1781 02bc CBB2     		uxtb	r3, r1
 1782              	.LVL262:
 1783 02be 0293     		str	r3, [sp, #8]
 1784 02c0 0027     		mov	r7, #0
 1785 02c2 77E7     		b	.L144
 1786              	.LVL263:
 1787              	.L169:
 1788 02c4 0027     		mov	r7, #0
2742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int  adv;
 1789              		.loc 1 2742 0 is_stmt 0
 1790 02c6 0297     		str	r7, [sp, #8]
 1791 02c8 74E7     		b	.L144
 1792              	.LVL264:
 1793              	.L172:
 1794 02ca 0126     		mov	r6, #1
 1795 02cc 98E7     		b	.L161
 1796              	.LVL265:
 1797              	.L196:
 1798              	.LBB49:
2791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               cert->heap, DYNAMIC_TYPE_ALTNAME);
 1799              		.loc 1 2791 0 is_stmt 1
 1800 02ce 099B     		ldr	r3, [sp, #36]
 1801 02d0 581C     		add	r0, r3, #1
 1802              	.LVL266:
 1803 02d2 FFF7FEFF 		bl	wolfSSL_Malloc
 1804              	.LVL267:
 1805 02d6 7860     		str	r0, [r7, #4]
2793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             WOLFSSL_MSG("\tOut of Memory");
 1806              		.loc 1 2793 0
 1807 02d8 0028     		cmp	r0, #0
 1808 02da 03D1     		bne	.L162
 1809              	.LVL268:
 1810              	.LBB48:
2795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             return MEMORY_E;
 1811              		.loc 1 2795 0
 1812 02dc 381C     		mov	r0, r7
 1813 02de FFF7FEFF 		bl	wolfSSL_Free
 1814              	.LVL269:
 1815 02e2 92E7     		b	.L173
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 104


 1816              	.LVL270:
 1817              	.L162:
 1818              	.LBE48:
2798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                               &cert->source[cert->srcIdx], adv);
 1819              		.loc 1 2798 0
 1820 02e4 9D23     		mov	r3, #157
 1821 02e6 9B00     		lsl	r3, r3, #2
 1822 02e8 E358     		ldr	r3, [r4, r3]
 1823 02ea 0493     		str	r3, [sp, #16]
 1824 02ec 9E23     		mov	r3, #158
 1825 02ee 9B00     		lsl	r3, r3, #2
 1826 02f0 E358     		ldr	r3, [r4, r3]
 1827 02f2 0593     		str	r3, [sp, #20]
 1828 02f4 059A     		ldr	r2, [sp, #20]
 1829 02f6 049B     		ldr	r3, [sp, #16]
 1830 02f8 9446     		mov	ip, r2
 1831 02fa 6344     		add	r3, r3, ip
 1832 02fc 191C     		mov	r1, r3
 1833 02fe 099A     		ldr	r2, [sp, #36]
 1834 0300 FFF7FEFF 		bl	memcpy
 1835              	.LVL271:
2800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1836              		.loc 1 2800 0
 1837 0304 0023     		mov	r3, #0
 1838 0306 7A68     		ldr	r2, [r7, #4]
 1839 0308 0999     		ldr	r1, [sp, #36]
 1840 030a 5354     		strb	r3, [r2, r1]
2802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->altEmailNames = emailName;
 1841              		.loc 1 2802 0
 1842 030c A36A     		ldr	r3, [r4, #40]
 1843 030e 3B60     		str	r3, [r7]
2803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
 1844              		.loc 1 2803 0
 1845 0310 A762     		str	r7, [r4, #40]
 1846              	.LBE49:
2806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], &cert->source[cert->srcIdx], adv);
 1847              		.loc 1 2806 0
 1848 0312 002E     		cmp	r6, #0
 1849 0314 0DD1     		bne	.L174
2807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += adv;
 1850              		.loc 1 2807 0
 1851 0316 009B     		ldr	r3, [sp]
 1852 0318 099F     		ldr	r7, [sp, #36]
 1853              	.LVL272:
 1854 031a 5819     		add	r0, r3, r5
 1855 031c 9D23     		mov	r3, #157
 1856 031e 9B00     		lsl	r3, r3, #2
 1857 0320 E158     		ldr	r1, [r4, r3]
 1858 0322 0433     		add	r3, r3, #4
 1859 0324 E358     		ldr	r3, [r4, r3]
 1860 0326 3A1C     		mov	r2, r7
 1861 0328 C918     		add	r1, r1, r3
 1862 032a FFF7FEFF 		bl	memcpy
 1863              	.LVL273:
2808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
 1864              		.loc 1 2808 0
 1865 032e ED19     		add	r5, r5, r7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 105


 1866              	.LVL274:
 1867 0330 00E0     		b	.L160
 1868              	.LVL275:
 1869              	.L174:
 1870 0332 0126     		mov	r6, #1
 1871              	.LVL276:
 1872              	.L160:
2812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if ( (5 + adv) > (int)(ASN_NAME_MAX - idx)) {
 1873              		.loc 1 2812 0
 1874 0334 029B     		ldr	r3, [sp, #8]
 1875 0336 002B     		cmp	r3, #0
 1876 0338 1BD0     		beq	.L163
2813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("ASN name too big, skipping");
 1877              		.loc 1 2813 0
 1878 033a 8023     		mov	r3, #128
 1879 033c 099F     		ldr	r7, [sp, #36]
 1880 033e 5B00     		lsl	r3, r3, #1
 1881 0340 3A1D     		add	r2, r7, #4
 1882 0342 5B1B     		sub	r3, r3, r5
 1883 0344 9A42     		cmp	r2, r3
 1884 0346 14DA     		bge	.L163
2817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCPY(&full[idx], "/UID=", 5);
 1885              		.loc 1 2817 0
 1886 0348 002E     		cmp	r6, #0
 1887 034a 12D1     		bne	.L163
2818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += 5;
 1888              		.loc 1 2818 0
 1889 034c 009B     		ldr	r3, [sp]
 1890 034e 2049     		ldr	r1, .L197+36
 1891 0350 5819     		add	r0, r3, r5
 1892 0352 0522     		mov	r2, #5
 1893 0354 FFF7FEFF 		bl	memcpy
 1894              	.LVL277:
2821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += adv;
 1895              		.loc 1 2821 0
 1896 0358 009B     		ldr	r3, [sp]
2819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1897              		.loc 1 2819 0
 1898 035a 0535     		add	r5, r5, #5
 1899              	.LVL278:
2821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     idx += adv;
 1900              		.loc 1 2821 0
 1901 035c 5819     		add	r0, r3, r5
 1902 035e 9D23     		mov	r3, #157
 1903 0360 9B00     		lsl	r3, r3, #2
 1904 0362 E158     		ldr	r1, [r4, r3]
 1905 0364 0433     		add	r3, r3, #4
 1906 0366 E358     		ldr	r3, [r4, r3]
 1907 0368 3A1C     		mov	r2, r7
 1908 036a C918     		add	r1, r1, r3
 1909 036c FFF7FEFF 		bl	memcpy
 1910              	.LVL279:
2822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
 1911              		.loc 1 2822 0
 1912 0370 ED19     		add	r5, r5, r7
 1913              	.LVL280:
 1914              	.L163:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 106


2830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 1915              		.loc 1 2830 0
 1916 0372 9E22     		mov	r2, #158
 1917 0374 9200     		lsl	r2, r2, #2
 1918 0376 A158     		ldr	r1, [r4, r2]
 1919 0378 099B     		ldr	r3, [sp, #36]
 1920 037a 5B18     		add	r3, r3, r1
 1921 037c A350     		str	r3, [r4, r2]
 1922 037e F1E6     		b	.L140
 1923              	.LVL281:
 1924              	.L167:
 1925              	.LBE51:
2568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1926              		.loc 1 2568 0
 1927 0380 9020     		mov	r0, #144
 1928              	.LVL282:
 1929 0382 43E7     		b	.L184
 1930              	.LVL283:
 1931              	.L194:
 1932              	.LBE53:
2833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 1933              		.loc 1 2833 0
 1934 0384 0020     		mov	r0, #0
 1935 0386 009B     		ldr	r3, [sp]
 1936 0388 5855     		strb	r0, [r3, r5]
2960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 1937              		.loc 1 2960 0
 1938 038a 0CE0     		b	.L179
 1939              	.LVL284:
 1940              	.L149:
 1941              	.LBB54:
 1942              	.LBB52:
2733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += strLen;
 1943              		.loc 1 2733 0
 1944 038c 009B     		ldr	r3, [sp]
 1945 038e 3A1C     		mov	r2, r7
 1946 0390 5819     		add	r0, r3, r5
 1947 0392 9D23     		mov	r3, #157
 1948 0394 9B00     		lsl	r3, r3, #2
 1949 0396 E158     		ldr	r1, [r4, r3]
 1950 0398 0433     		add	r3, r3, #4
 1951 039a E358     		ldr	r3, [r4, r3]
2734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 1952              		.loc 1 2734 0
 1953 039c ED19     		add	r5, r5, r7
 1954              	.LVL285:
2733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += strLen;
 1955              		.loc 1 2733 0
 1956 039e C918     		add	r1, r1, r3
 1957 03a0 FFF7FEFF 		bl	memcpy
 1958              	.LVL286:
 1959 03a4 D9E6     		b	.L165
 1960              	.LVL287:
 1961              	.L179:
 1962              	.LBE52:
 1963              	.LBE54:
2961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 107


 1964              		.loc 1 2961 0
 1965 03a6 0BB0     		add	sp, sp, #44
 1966              	.LVL288:
 1967              		@ sp needed
 1968              	.LVL289:
 1969 03a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1970              	.L198:
 1971 03aa C046     		.align	2
 1972              	.L197:
 1973 03ac 2F000000 		.word	.LC21
 1974 03b0 00000000 		.word	.LC5
 1975 03b4 05000000 		.word	.LC7
 1976 03b8 0A000000 		.word	.LC9
 1977 03bc 0E000000 		.word	.LC11
 1978 03c0 12000000 		.word	.LC13
 1979 03c4 17000000 		.word	.LC15
 1980 03c8 1B000000 		.word	.LC17
 1981 03cc 20000000 		.word	.LC19
 1982 03d0 3E000000 		.word	.LC23
 1983              		.cfi_endproc
 1984              	.LFE30:
 1985              		.size	GetName, .-GetName
 1986              		.section	.text.GetMyVersion,"ax",%progbits
 1987              		.align	1
 1988              		.global	GetMyVersion
 1989              		.code	16
 1990              		.thumb_func
 1991              		.type	GetMyVersion, %function
 1992              	GetMyVersion:
 1993              	.LFB17:
 585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *inOutIdx;
 1994              		.loc 1 585 0
 1995              		.cfi_startproc
 1996              	.LVL290:
 1997 0000 30B5     		push	{r4, r5, lr}
 1998              		.cfi_def_cfa_offset 12
 1999              		.cfi_offset 4, -12
 2000              		.cfi_offset 5, -8
 2001              		.cfi_offset 14, -4
 586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2002              		.loc 1 586 0
 2003 0002 0B68     		ldr	r3, [r1]
 2004              	.LVL291:
 590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2005              		.loc 1 590 0
 2006 0004 C45C     		ldrb	r4, [r0, r3]
 2007 0006 5D1C     		add	r5, r3, #1
 2008              	.LVL292:
 2009 0008 022C     		cmp	r4, #2
 2010 000a 09D1     		bne	.L201
 593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_VERSION_E;
 2011              		.loc 1 593 0
 2012 000c 455D     		ldrb	r5, [r0, r5]
 2013              	.LVL293:
 2014 000e 9C1C     		add	r4, r3, #2
 2015              	.LVL294:
 2016 0010 012D     		cmp	r5, #1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 108


 2017 0012 07D1     		bne	.L202
 2018              	.LVL295:
 596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
 2019              		.loc 1 596 0
 2020 0014 005D     		ldrb	r0, [r0, r4]
 2021              	.LVL296:
 2022 0016 0333     		add	r3, r3, #3
 2023              	.LVL297:
 2024 0018 1060     		str	r0, [r2]
 597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2025              		.loc 1 597 0
 2026 001a 0B60     		str	r3, [r1]
 599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 2027              		.loc 1 599 0
 2028 001c 1068     		ldr	r0, [r2]
 2029 001e 03E0     		b	.L200
 2030              	.LVL298:
 2031              	.L201:
 591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2032              		.loc 1 591 0
 2033 0020 8C20     		mov	r0, #140
 2034              	.LVL299:
 2035 0022 00E0     		b	.L203
 2036              	.LVL300:
 2037              	.L202:
 594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2038              		.loc 1 594 0
 2039 0024 8D20     		mov	r0, #141
 2040              	.LVL301:
 2041              	.L203:
 2042 0026 4042     		neg	r0, r0
 2043              	.L200:
 600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2044              		.loc 1 600 0
 2045              		@ sp needed
 2046 0028 30BD     		pop	{r4, r5, pc}
 2047              		.cfi_endproc
 2048              	.LFE17:
 2049              		.size	GetMyVersion, .-GetMyVersion
 2050              		.section	.text.GetInt,"ax",%progbits
 2051              		.align	1
 2052              		.global	GetInt
 2053              		.code	16
 2054              		.thumb_func
 2055              		.type	GetInt, %function
 2056              	GetInt:
 2057              	.LFB19:
 650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = *inOutIdx;
 2058              		.loc 1 650 0
 2059              		.cfi_startproc
 2060              	.LVL302:
 2061 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 2062              		.cfi_def_cfa_offset 24
 2063              		.cfi_offset 0, -24
 2064              		.cfi_offset 1, -20
 2065              		.cfi_offset 4, -16
 2066              		.cfi_offset 5, -12
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 109


 2067              		.cfi_offset 6, -8
 2068              		.cfi_offset 14, -4
 651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b = input[i++];
 2069              		.loc 1 651 0
 2070 0002 1468     		ldr	r4, [r2]
 652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2071              		.loc 1 652 0
 2072 0004 651C     		add	r5, r4, #1
 655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2073              		.loc 1 655 0
 2074 0006 0C5D     		ldrb	r4, [r1, r4]
 652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2075              		.loc 1 652 0
 2076 0008 0095     		str	r5, [sp]
 655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2077              		.loc 1 655 0
 2078 000a 022C     		cmp	r4, #2
 2079 000c 01D0     		beq	.L205
 2080              	.LVL303:
 2081              	.L207:
 656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2082              		.loc 1 656 0
 2083 000e 8C20     		mov	r0, #140
 2084 0010 2CE0     		b	.L212
 2085              	.LVL304:
 2086              	.L205:
 2087 0012 161C     		mov	r6, r2
 2088 0014 0C1C     		mov	r4, r1
 2089 0016 051C     		mov	r5, r0
 658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2090              		.loc 1 658 0
 2091 0018 01AA     		add	r2, sp, #4
 2092              	.LVL305:
 2093 001a 081C     		mov	r0, r1
 2094              	.LVL306:
 2095 001c 6946     		mov	r1, sp
 2096              	.LVL307:
 2097 001e FFF7FEFF 		bl	GetLength
 2098              	.LVL308:
 2099 0022 0028     		cmp	r0, #0
 2100 0024 F3DB     		blt	.L207
 661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         length--;
 2101              		.loc 1 661 0
 2102 0026 009B     		ldr	r3, [sp]
 2103 0028 5A1C     		add	r2, r3, #1
 2104 002a 0092     		str	r2, [sp]
 2105              	.LVL309:
 2106 002c E25C     		ldrb	r2, [r4, r3]
 2107 002e 002A     		cmp	r2, #0
 2108 0030 03D1     		bne	.L208
 662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 2109              		.loc 1 662 0
 2110 0032 019B     		ldr	r3, [sp, #4]
 2111              	.LVL310:
 2112 0034 013B     		sub	r3, r3, #1
 2113 0036 0193     		str	r3, [sp, #4]
 2114 0038 00E0     		b	.L209
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 110


 2115              	.LVL311:
 2116              	.L208:
 664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2117              		.loc 1 664 0
 2118 003a 0093     		str	r3, [sp]
 2119              	.LVL312:
 2120              	.L209:
 666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MP_INIT_E;
 2121              		.loc 1 666 0
 2122 003c 281C     		mov	r0, r5
 2123 003e FFF7FEFF 		bl	mp_init
 2124              	.LVL313:
 2125 0042 0028     		cmp	r0, #0
 2126 0044 11D1     		bne	.L211
 669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_clear(mpi);
 2127              		.loc 1 669 0
 2128 0046 009B     		ldr	r3, [sp]
 2129 0048 281C     		mov	r0, r5
 2130 004a E118     		add	r1, r4, r3
 2131 004c 019A     		ldr	r2, [sp, #4]
 2132 004e FFF7FEFF 		bl	mp_read_unsigned_bin
 2133              	.LVL314:
 2134 0052 0028     		cmp	r0, #0
 2135 0054 04D0     		beq	.L210
 670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_GETINT_E;
 2136              		.loc 1 670 0
 2137 0056 281C     		mov	r0, r5
 2138 0058 FFF7FEFF 		bl	mp_clear
 2139              	.LVL315:
 671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 2140              		.loc 1 671 0
 2141 005c 8E20     		mov	r0, #142
 2142 005e 05E0     		b	.L212
 2143              	.L210:
 674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
 2144              		.loc 1 674 0
 2145 0060 019B     		ldr	r3, [sp, #4]
 2146 0062 009A     		ldr	r2, [sp]
 2147 0064 9B18     		add	r3, r3, r2
 2148 0066 3360     		str	r3, [r6]
 675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 2149              		.loc 1 675 0
 2150 0068 01E0     		b	.L206
 2151              	.L211:
 667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2152              		.loc 1 667 0
 2153 006a 6E20     		mov	r0, #110
 2154              	.LVL316:
 2155              	.L212:
 2156 006c 4042     		neg	r0, r0
 2157              	.L206:
 676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2158              		.loc 1 676 0
 2159              		@ sp needed
 2160 006e 76BD     		pop	{r1, r2, r4, r5, r6, pc}
 2161              		.cfi_endproc
 2162              	.LFE19:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 111


 2163              		.size	GetInt, .-GetInt
 2164              		.section	.text.GetObjectId,"ax",%progbits
 2165              		.align	1
 2166              		.global	GetObjectId
 2167              		.code	16
 2168              		.thumb_func
 2169              		.type	GetObjectId, %function
 2170              	GetObjectId:
 2171              	.LFB21:
1102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2172              		.loc 1 1102 0
 2173              		.cfi_startproc
 2174              	.LVL317:
 2175 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2176              		.cfi_def_cfa_offset 20
 2177              		.cfi_offset 4, -20
 2178              		.cfi_offset 5, -16
 2179              		.cfi_offset 6, -12
 2180              		.cfi_offset 7, -8
 2181              		.cfi_offset 14, -4
1113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2182              		.loc 1 1113 0
 2183 0002 0024     		mov	r4, #0
1104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_VERIFY_OID
 2184              		.loc 1 1104 0
 2185 0004 0D68     		ldr	r5, [r1]
 2186              	.LVL318:
1113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2187              		.loc 1 1113 0
 2188 0006 1460     		str	r4, [r2]
1115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_OBJECT_ID)
 2189              		.loc 1 1115 0
 2190 0008 6E1C     		add	r6, r5, #1
1116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_OBJECT_ID_E;
 2191              		.loc 1 1116 0
 2192 000a 455D     		ldrb	r5, [r0, r5]
1102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2193              		.loc 1 1102 0
 2194 000c 87B0     		sub	sp, sp, #28
 2195              		.cfi_def_cfa_offset 48
1115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_OBJECT_ID)
 2196              		.loc 1 1115 0
 2197 000e 0496     		str	r6, [sp, #16]
1116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_OBJECT_ID_E;
 2198              		.loc 1 1116 0
 2199 0010 062D     		cmp	r5, #6
 2200 0012 36D1     		bne	.L220
 2201 0014 0093     		str	r3, [sp]
 2202 0016 161C     		mov	r6, r2
 2203 0018 0191     		str	r1, [sp, #4]
1119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2204              		.loc 1 1119 0
 2205 001a 03AA     		add	r2, sp, #12
 2206              	.LVL319:
 2207 001c 04A9     		add	r1, sp, #16
 2208              	.LVL320:
 2209 001e 0C9B     		ldr	r3, [sp, #48]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 112


 2210              	.LVL321:
 2211 0020 051C     		mov	r5, r0
 2212 0022 FFF7FEFF 		bl	GetLength
 2213              	.LVL322:
 2214 0026 A042     		cmp	r0, r4
 2215 0028 2DDB     		blt	.L221
1124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         actualOidSz = (word32)length;
 2216              		.loc 1 1124 0
 2217 002a 039B     		ldr	r3, [sp, #12]
1123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > 0)
 2218              		.loc 1 1123 0
 2219 002c 049F     		ldr	r7, [sp, #16]
 2220              	.LVL323:
1124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         actualOidSz = (word32)length;
 2221              		.loc 1 1124 0
 2222 002e A342     		cmp	r3, r4
 2223 0030 00DD     		ble	.L215
1125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_VERIFY_OID */
 2224              		.loc 1 1125 0
 2225 0032 1C1C     		mov	r4, r3
 2226              	.LVL324:
 2227              	.L215:
 2228 0034 DA19     		add	r2, r3, r7
1106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const byte* actualOid;
 2229              		.loc 1 1106 0
 2230 0036 3B1C     		mov	r3, r7
 2231              	.L216:
 2232              	.LVL325:
1128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* odd HC08 compiler behavior here when input[i++] */
 2233              		.loc 1 1128 0
 2234 0038 9342     		cmp	r3, r2
 2235 003a 05D0     		beq	.L233
1130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i++;
 2236              		.loc 1 1130 0
 2237 003c E95C     		ldrb	r1, [r5, r3]
 2238 003e 3068     		ldr	r0, [r6]
1131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 2239              		.loc 1 1131 0
 2240 0040 0133     		add	r3, r3, #1
1130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i++;
 2241              		.loc 1 1130 0
 2242 0042 4118     		add	r1, r0, r1
 2243 0044 3160     		str	r1, [r6]
 2244 0046 F7E7     		b	.L216
 2245              	.L233:
 2246 0048 0122     		mov	r2, #1
 2247 004a 5242     		neg	r2, r2
 2248 004c 0392     		str	r2, [sp, #12]
1135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2249              		.loc 1 1135 0
 2250 004e 019A     		ldr	r2, [sp, #4]
 2251 0050 0493     		str	r3, [sp, #16]
 2252 0052 1360     		str	r3, [r2]
 2253              	.LVL326:
 2254              	.LBB55:
1142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             checkOid = OidFromId(*oid, oidType, &checkOidSz);
 2255              		.loc 1 1142 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 113


 2256 0054 009B     		ldr	r3, [sp]
 2257 0056 0C2B     		cmp	r3, #12
 2258 0058 11D0     		beq	.L218
1143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2259              		.loc 1 1143 0
 2260 005a 191C     		mov	r1, r3
 2261 005c 3068     		ldr	r0, [r6]
 2262 005e 05AA     		add	r2, sp, #20
 2263 0060 FFF7FEFF 		bl	OidFromId
 2264              	.LVL327:
 2265 0064 011E     		sub	r1, r0, #0
 2266              	.LVL328:
1145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 (checkOidSz != actualOidSz ||
 2267              		.loc 1 1145 0
 2268 0066 0AD0     		beq	.L218
1145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 (checkOidSz != actualOidSz ||
 2269              		.loc 1 1145 0 is_stmt 0 discriminator 1
 2270 0068 059B     		ldr	r3, [sp, #20]
 2271 006a A342     		cmp	r3, r4
 2272 006c 05D1     		bne	.L219
 2273              	.LBE55:
1123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > 0)
 2274              		.loc 1 1123 0 is_stmt 1
 2275 006e E819     		add	r0, r5, r7
 2276              	.LVL329:
 2277              	.LBB56:
1147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2278              		.loc 1 1147 0
 2279 0070 221C     		mov	r2, r4
 2280 0072 FFF7FEFF 		bl	memcmp
 2281              	.LVL330:
1146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  XMEMCMP(actualOid, checkOid, checkOidSz) != 0)) {
 2282              		.loc 1 1146 0
 2283 0076 0028     		cmp	r0, #0
 2284 0078 01D0     		beq	.L218
 2285              	.L219:
1150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 2286              		.loc 1 1150 0
 2287 007a 9420     		mov	r0, #148
 2288 007c 04E0     		b	.L232
 2289              	.L218:
 2290              	.LBE56:
1156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 2291              		.loc 1 1156 0
 2292 007e 0020     		mov	r0, #0
 2293 0080 03E0     		b	.L214
 2294              	.LVL331:
 2295              	.L220:
1117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2296              		.loc 1 1117 0
 2297 0082 9020     		mov	r0, #144
 2298              	.LVL332:
 2299 0084 00E0     		b	.L232
 2300              	.LVL333:
 2301              	.L221:
1120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2302              		.loc 1 1120 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 114


 2303 0086 8C20     		mov	r0, #140
 2304              	.LVL334:
 2305              	.L232:
 2306 0088 4042     		neg	r0, r0
 2307              	.L214:
1157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2308              		.loc 1 1157 0
 2309 008a 07B0     		add	sp, sp, #28
 2310              		@ sp needed
 2311 008c F0BD     		pop	{r4, r5, r6, r7, pc}
 2312              		.cfi_endproc
 2313              	.LFE21:
 2314              		.size	GetObjectId, .-GetObjectId
 2315              		.section	.text.GetAlgoId,"ax",%progbits
 2316              		.align	1
 2317              		.global	GetAlgoId
 2318              		.code	16
 2319              		.thumb_func
 2320              		.type	GetAlgoId, %function
 2321              	GetAlgoId:
 2322              	.LFB22:
1183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2323              		.loc 1 1183 0
 2324              		.cfi_startproc
 2325              	.LVL335:
 2326 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2327              		.cfi_def_cfa_offset 20
 2328              		.cfi_offset 4, -20
 2329              		.cfi_offset 5, -16
 2330              		.cfi_offset 6, -12
 2331              		.cfi_offset 7, -8
 2332              		.cfi_offset 14, -4
 2333 0002 1F1C     		mov	r7, r3
1185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
 2334              		.loc 1 1185 0
 2335 0004 0B68     		ldr	r3, [r1]
 2336              	.LVL336:
1183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2337              		.loc 1 1183 0
 2338 0006 85B0     		sub	sp, sp, #20
 2339              		.cfi_def_cfa_offset 40
1185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
 2340              		.loc 1 1185 0
 2341 0008 0393     		str	r3, [sp, #12]
1187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2342              		.loc 1 1187 0
 2343 000a 0023     		mov	r3, #0
1183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2344              		.loc 1 1183 0
 2345 000c 0D1C     		mov	r5, r1
1187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2346              		.loc 1 1187 0
 2347 000e 1360     		str	r3, [r2]
1183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2348              		.loc 1 1183 0
 2349 0010 161C     		mov	r6, r2
1191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 115


 2350              		.loc 1 1191 0
 2351 0012 03A9     		add	r1, sp, #12
 2352              	.LVL337:
 2353 0014 02AA     		add	r2, sp, #8
 2354              	.LVL338:
 2355 0016 0A9B     		ldr	r3, [sp, #40]
1183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 2356              		.loc 1 1183 0
 2357 0018 041C     		mov	r4, r0
1191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2358              		.loc 1 1191 0
 2359 001a FFF7FEFF 		bl	GetSequence
 2360              	.LVL339:
 2361 001e 0028     		cmp	r0, #0
 2362 0020 19DB     		blt	.L238
1194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_OBJECT_ID_E;
 2363              		.loc 1 1194 0
 2364 0022 0A9B     		ldr	r3, [sp, #40]
 2365 0024 201C     		mov	r0, r4
 2366 0026 0093     		str	r3, [sp]
 2367 0028 03A9     		add	r1, sp, #12
 2368 002a 321C     		mov	r2, r6
 2369 002c 3B1C     		mov	r3, r7
 2370 002e FFF7FEFF 		bl	GetObjectId
 2371              	.LVL340:
 2372 0032 0028     		cmp	r0, #0
 2373 0034 11DB     		blt	.L239
1198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2374              		.loc 1 1198 0
 2375 0036 0398     		ldr	r0, [sp, #12]
 2376              	.LVL341:
1200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         i++;
 2377              		.loc 1 1200 0
 2378 0038 235C     		ldrb	r3, [r4, r0]
 2379 003a 052B     		cmp	r3, #5
 2380 003c 03D0     		beq	.L236
 2381              	.LVL342:
 2382              	.L237:
1207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2383              		.loc 1 1207 0
 2384 003e 039B     		ldr	r3, [sp, #12]
1209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 2385              		.loc 1 1209 0
 2386 0040 0020     		mov	r0, #0
1207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2387              		.loc 1 1207 0
 2388 0042 2B60     		str	r3, [r5]
1209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 2389              		.loc 1 1209 0
 2390 0044 0BE0     		b	.L235
 2391              	.LVL343:
 2392              	.L236:
1202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != 0)
 2393              		.loc 1 1202 0
 2394 0046 831C     		add	r3, r0, #2
 2395 0048 2018     		add	r0, r4, r0
 2396              	.LVL344:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 116


 2397 004a 0393     		str	r3, [sp, #12]
 2398              	.LVL345:
1203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_EXPECT_0_E;
 2399              		.loc 1 1203 0
 2400 004c 4378     		ldrb	r3, [r0, #1]
1204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 2401              		.loc 1 1204 0
 2402 004e 9220     		mov	r0, #146
1203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_EXPECT_0_E;
 2403              		.loc 1 1203 0
 2404 0050 002B     		cmp	r3, #0
 2405 0052 F4D0     		beq	.L237
 2406 0054 02E0     		b	.L243
 2407              	.L238:
1192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2408              		.loc 1 1192 0
 2409 0056 8C20     		mov	r0, #140
 2410 0058 00E0     		b	.L243
 2411              	.L239:
1195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2412              		.loc 1 1195 0
 2413 005a 9020     		mov	r0, #144
 2414              	.L243:
 2415 005c 4042     		neg	r0, r0
 2416              	.L235:
1210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2417              		.loc 1 1210 0
 2418 005e 05B0     		add	sp, sp, #20
 2419              		@ sp needed
 2420              	.LVL346:
 2421              	.LVL347:
 2422              	.LVL348:
 2423              	.LVL349:
 2424 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 2425              		.cfi_endproc
 2426              	.LFE22:
 2427              		.size	GetAlgoId, .-GetAlgoId
 2428              		.section	.text.ToTraditional,"ax",%progbits
 2429              		.align	1
 2430              		.global	ToTraditional
 2431              		.code	16
 2432              		.thumb_func
 2433              		.type	ToTraditional, %function
 2434              	ToTraditional:
 2435              	.LFB23:
1311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 inOutIdx = 0, oid;
 2436              		.loc 1 1311 0
 2437              		.cfi_startproc
 2438              	.LVL350:
 2439 0000 30B5     		push	{r4, r5, lr}
 2440              		.cfi_def_cfa_offset 12
 2441              		.cfi_offset 4, -12
 2442              		.cfi_offset 5, -8
 2443              		.cfi_offset 14, -4
1312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    version, length;
 2444              		.loc 1 1312 0
 2445 0002 0023     		mov	r3, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 117


1311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 inOutIdx = 0, oid;
 2446              		.loc 1 1311 0
 2447 0004 0D1C     		mov	r5, r1
 2448 0006 87B0     		sub	sp, sp, #28
 2449              		.cfi_def_cfa_offset 40
1312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    version, length;
 2450              		.loc 1 1312 0
 2451 0008 0293     		str	r3, [sp, #8]
1315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2452              		.loc 1 1315 0
 2453 000a 02A9     		add	r1, sp, #8
 2454              	.LVL351:
 2455 000c 05AA     		add	r2, sp, #20
 2456 000e 2B1C     		mov	r3, r5
1311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 inOutIdx = 0, oid;
 2457              		.loc 1 1311 0
 2458 0010 041C     		mov	r4, r0
1315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2459              		.loc 1 1315 0
 2460 0012 FFF7FEFF 		bl	GetSequence
 2461              	.LVL352:
 2462 0016 0028     		cmp	r0, #0
 2463 0018 02DA     		bge	.L245
 2464              	.L247:
1316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2465              		.loc 1 1316 0
 2466 001a 8C25     		mov	r5, #140
 2467              	.LVL353:
 2468 001c 6D42     		neg	r5, r5
 2469 001e 36E0     		b	.L246
 2470              	.LVL354:
 2471              	.L245:
1318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2472              		.loc 1 1318 0
 2473 0020 201C     		mov	r0, r4
 2474 0022 02A9     		add	r1, sp, #8
 2475 0024 04AA     		add	r2, sp, #16
 2476 0026 FFF7FEFF 		bl	GetMyVersion
 2477              	.LVL355:
 2478 002a 0028     		cmp	r0, #0
 2479 002c F5DB     		blt	.L247
1321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2480              		.loc 1 1321 0
 2481 002e 0095     		str	r5, [sp]
 2482 0030 201C     		mov	r0, r4
 2483 0032 02A9     		add	r1, sp, #8
 2484 0034 03AA     		add	r2, sp, #12
 2485 0036 0123     		mov	r3, #1
 2486 0038 FFF7FEFF 		bl	GetAlgoId
 2487              	.LVL356:
 2488 003c 0028     		cmp	r0, #0
 2489 003e ECDB     		blt	.L247
1324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* pkcs8 ecc uses slightly different format */
 2490              		.loc 1 1324 0
 2491 0040 029B     		ldr	r3, [sp, #8]
 2492 0042 E25C     		ldrb	r2, [r4, r3]
 2493 0044 062A     		cmp	r2, #6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 118


 2494 0046 0DD1     		bne	.L248
1326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &inOutIdx, &length, sz) < 0)
 2495              		.loc 1 1326 0
 2496 0048 0133     		add	r3, r3, #1
 2497 004a 0293     		str	r3, [sp, #8]
1327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 2498              		.loc 1 1327 0
 2499 004c 201C     		mov	r0, r4
 2500 004e 02A9     		add	r1, sp, #8
 2501 0050 05AA     		add	r2, sp, #20
 2502 0052 2B1C     		mov	r3, r5
 2503 0054 FFF7FEFF 		bl	GetLength
 2504              	.LVL357:
 2505 0058 0028     		cmp	r0, #0
 2506 005a DEDB     		blt	.L247
1329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 2507              		.loc 1 1329 0
 2508 005c 029B     		ldr	r3, [sp, #8]
 2509 005e 059A     		ldr	r2, [sp, #20]
 2510 0060 9B18     		add	r3, r3, r2
 2511 0062 0293     		str	r3, [sp, #8]
 2512              	.L248:
1332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2513              		.loc 1 1332 0
 2514 0064 029B     		ldr	r3, [sp, #8]
 2515 0066 5A1C     		add	r2, r3, #1
 2516 0068 E35C     		ldrb	r3, [r4, r3]
 2517 006a 0292     		str	r2, [sp, #8]
 2518 006c 042B     		cmp	r3, #4
 2519 006e D4D1     		bne	.L247
1335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 2520              		.loc 1 1335 0
 2521 0070 201C     		mov	r0, r4
 2522 0072 02A9     		add	r1, sp, #8
 2523 0074 05AA     		add	r2, sp, #20
 2524 0076 2B1C     		mov	r3, r5
 2525 0078 FFF7FEFF 		bl	GetLength
 2526              	.LVL358:
 2527 007c 0028     		cmp	r0, #0
 2528 007e CCDB     		blt	.L247
1338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2529              		.loc 1 1338 0
 2530 0080 059D     		ldr	r5, [sp, #20]
 2531              	.LVL359:
 2532 0082 029B     		ldr	r3, [sp, #8]
 2533 0084 201C     		mov	r0, r4
 2534 0086 E118     		add	r1, r4, r3
 2535 0088 2A1C     		mov	r2, r5
 2536 008a FFF7FEFF 		bl	memmove
 2537              	.LVL360:
 2538              	.L246:
1341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2539              		.loc 1 1341 0
 2540 008e 281C     		mov	r0, r5
 2541 0090 07B0     		add	sp, sp, #28
 2542              		@ sp needed
 2543              	.LVL361:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 119


 2544 0092 30BD     		pop	{r4, r5, pc}
 2545              		.cfi_endproc
 2546              	.LFE23:
 2547              		.size	ToTraditional, .-ToTraditional
 2548              		.section	.text.InitDecodedCert,"ax",%progbits
 2549              		.align	1
 2550              		.global	InitDecodedCert
 2551              		.code	16
 2552              		.thumb_func
 2553              		.type	InitDecodedCert, %function
 2554              	InitDecodedCert:
 2555              	.LFB24:
2052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->publicKey       = 0;
 2556              		.loc 1 2052 0
 2557              		.cfi_startproc
 2558              	.LVL362:
 2559 0000 70B5     		push	{r4, r5, r6, lr}
 2560              		.cfi_def_cfa_offset 16
 2561              		.cfi_offset 4, -16
 2562              		.cfi_offset 5, -12
 2563              		.cfi_offset 6, -8
 2564              		.cfi_offset 14, -4
2053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pubKeySize      = 0;
 2565              		.loc 1 2053 0
 2566 0002 0025     		mov	r5, #0
2060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNStored = 0;
 2567              		.loc 1 2060 0
 2568 0004 0C26     		mov	r6, #12
2052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->publicKey       = 0;
 2569              		.loc 1 2052 0
 2570 0006 041C     		mov	r4, r0
2053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pubKeySize      = 0;
 2571              		.loc 1 2053 0
 2572 0008 0560     		str	r5, [r0]
2054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->pubKeyStored    = 0;
 2573              		.loc 1 2054 0
 2574 000a 4560     		str	r5, [r0, #4]
2055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->version         = 0;
 2575              		.loc 1 2055 0
 2576 000c 8560     		str	r5, [r0, #8]
2056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->signature       = 0;
 2577              		.loc 1 2056 0
 2578 000e 0562     		str	r5, [r0, #32]
2057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCN       = 0;
 2579              		.loc 1 2057 0
 2580 0010 C565     		str	r5, [r0, #92]
2058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNLen    = 0;
 2581              		.loc 1 2058 0
 2582 0012 0566     		str	r5, [r0, #96]
2059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNEnc    = CTC_UTF8;
 2583              		.loc 1 2059 0
 2584 0014 4566     		str	r5, [r0, #100]
2060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subjectCNStored = 0;
 2585              		.loc 1 2060 0
 2586 0016 6830     		add	r0, r0, #104
 2587              	.LVL363:
 2588 0018 0670     		strb	r6, [r0]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 120


2062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->altNames        = NULL;
 2589              		.loc 1 2062 0
 2590 001a BC20     		mov	r0, #188
 2591 001c 8000     		lsl	r0, r0, #2
2061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->weOwnAltNames   = 0;
 2592              		.loc 1 2061 0
 2593 001e E566     		str	r5, [r4, #108]
2062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->altNames        = NULL;
 2594              		.loc 1 2062 0
 2595 0020 2554     		strb	r5, [r4, r0]
2069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject[0]      = '\0';
 2596              		.loc 1 2069 0
 2597 0022 201C     		mov	r0, r4
 2598 0024 7030     		add	r0, r0, #112
2063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
 2599              		.loc 1 2063 0
 2600 0026 6562     		str	r5, [r4, #36]
2065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->permittedNames  = NULL;
 2601              		.loc 1 2065 0
 2602 0028 A562     		str	r5, [r4, #40]
2066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->excludedNames   = NULL;
 2603              		.loc 1 2066 0
 2604 002a E562     		str	r5, [r4, #44]
2067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
 2605              		.loc 1 2067 0
 2606 002c 2563     		str	r5, [r4, #48]
2069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject[0]      = '\0';
 2607              		.loc 1 2069 0
 2608 002e 0570     		strb	r5, [r0]
2070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->source          = source;  /* don't own */
 2609              		.loc 1 2070 0
 2610 0030 B820     		mov	r0, #184
 2611 0032 4000     		lsl	r0, r0, #1
 2612 0034 2554     		strb	r5, [r4, r0]
2071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx          = 0;
 2613              		.loc 1 2071 0
 2614 0036 0530     		add	r0, r0, #5
 2615 0038 FF30     		add	r0, r0, #255
 2616 003a 2150     		str	r1, [r4, r0]
2072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->maxIdx          = inSz;    /* can't go over this index */
 2617              		.loc 1 2072 0
 2618 003c 9E21     		mov	r1, #158
 2619              	.LVL364:
 2620 003e 8900     		lsl	r1, r1, #2
 2621 0040 6550     		str	r5, [r4, r1]
2073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->heap            = heap;
 2622              		.loc 1 2073 0
 2623 0042 0431     		add	r1, r1, #4
 2624 0044 6250     		str	r2, [r4, r1]
2074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->serial, 0, EXTERNAL_SERIAL_SIZE);
 2625              		.loc 1 2074 0
 2626 0046 A022     		mov	r2, #160
 2627              	.LVL365:
 2628 0048 9200     		lsl	r2, r2, #2
 2629 004a A350     		str	r3, [r4, r2]
2075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->serialSz        = 0;
 2630              		.loc 1 2075 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 121


 2631 004c A123     		mov	r3, #161
 2632              	.LVL366:
 2633 004e 9B00     		lsl	r3, r3, #2
 2634 0050 291C     		mov	r1, r5
 2635              	.LVL367:
 2636 0052 E018     		add	r0, r4, r3
 2637              	.LVL368:
 2638 0054 2022     		mov	r2, #32
 2639              	.LVL369:
 2640 0056 FFF7FEFF 		bl	memset
 2641              	.LVL370:
2076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extensions      = 0;
 2642              		.loc 1 2076 0
 2643 005a A923     		mov	r3, #169
 2644 005c 9B00     		lsl	r3, r3, #2
 2645 005e E550     		str	r5, [r4, r3]
2077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extensionsSz    = 0;
 2646              		.loc 1 2077 0
 2647 0060 0433     		add	r3, r3, #4
 2648 0062 E550     		str	r5, [r4, r3]
2078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extensionsIdx   = 0;
 2649              		.loc 1 2078 0
 2650 0064 0433     		add	r3, r3, #4
 2651 0066 E550     		str	r5, [r4, r3]
2079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthInfo     = NULL;
 2652              		.loc 1 2079 0
 2653 0068 0433     		add	r3, r3, #4
 2654 006a E550     		str	r5, [r4, r3]
2080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthInfoSz   = 0;
 2655              		.loc 1 2080 0
 2656 006c 0433     		add	r3, r3, #4
 2657 006e E550     		str	r5, [r4, r3]
2081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extCrlInfo      = NULL;
 2658              		.loc 1 2081 0
 2659 0070 0433     		add	r3, r3, #4
 2660 0072 E550     		str	r5, [r4, r3]
2082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extCrlInfoSz    = 0;
 2661              		.loc 1 2082 0
 2662 0074 0433     		add	r3, r3, #4
 2663 0076 E550     		str	r5, [r4, r3]
2083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->extSubjKeyId, 0, KEYID_SIZE);
 2664              		.loc 1 2083 0
 2665 0078 0433     		add	r3, r3, #4
2084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjKeyIdSet = 0;
 2666              		.loc 1 2084 0
 2667 007a 0836     		add	r6, r6, #8
2083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->extSubjKeyId, 0, KEYID_SIZE);
 2668              		.loc 1 2083 0
 2669 007c E550     		str	r5, [r4, r3]
2084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extSubjKeyIdSet = 0;
 2670              		.loc 1 2084 0
 2671 007e 0433     		add	r3, r3, #4
 2672 0080 321C     		mov	r2, r6
 2673 0082 291C     		mov	r1, r5
 2674 0084 E018     		add	r0, r4, r3
 2675 0086 FFF7FEFF 		bl	memset
 2676              	.LVL371:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 122


2085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->extAuthKeyId, 0, KEYID_SIZE);
 2677              		.loc 1 2085 0
 2678 008a B623     		mov	r3, #182
 2679 008c 9B00     		lsl	r3, r3, #2
 2680 008e E554     		strb	r5, [r4, r3]
2086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extAuthKeyIdSet = 0;
 2681              		.loc 1 2086 0
 2682 0090 0E4B     		ldr	r3, .L250
 2683 0092 291C     		mov	r1, r5
 2684 0094 321C     		mov	r2, r6
 2685 0096 E018     		add	r0, r4, r3
 2686 0098 FFF7FEFF 		bl	memset
 2687              	.LVL372:
2087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsageSet  = 0;
 2688              		.loc 1 2087 0
 2689 009c 0C4B     		ldr	r3, .L250+4
2166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2690              		.loc 1 2166 0
 2691              		@ sp needed
2087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsageSet  = 0;
 2692              		.loc 1 2087 0
 2693 009e E554     		strb	r5, [r4, r3]
2088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsage     = 0;
 2694              		.loc 1 2088 0
 2695 00a0 0C4B     		ldr	r3, .L250+8
 2696 00a2 E554     		strb	r5, [r4, r3]
2089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsageSet = 0;
 2697              		.loc 1 2089 0
 2698 00a4 0C4B     		ldr	r3, .L250+12
 2699 00a6 E552     		strh	r5, [r4, r3]
2090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extExtKeyUsage    = 0;
 2700              		.loc 1 2090 0
 2701 00a8 0233     		add	r3, r3, #2
 2702 00aa E554     		strb	r5, [r4, r3]
2091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->isCA            = 0;
 2703              		.loc 1 2091 0
 2704 00ac 0B4B     		ldr	r3, .L250+16
 2705 00ae E554     		strb	r5, [r4, r3]
2092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_PKCS7
 2706              		.loc 1 2092 0
 2707 00b0 0B4B     		ldr	r3, .L250+20
 2708 00b2 E554     		strb	r5, [r4, r3]
2119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->beforeDateLen   = 0;
 2709              		.loc 1 2119 0
 2710 00b4 0933     		add	r3, r3, #9
 2711 00b6 E550     		str	r5, [r4, r3]
2120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->afterDate       = NULL;
 2712              		.loc 1 2120 0
 2713 00b8 0433     		add	r3, r3, #4
 2714 00ba E550     		str	r5, [r4, r3]
2121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->afterDateLen    = 0;
 2715              		.loc 1 2121 0
 2716 00bc 0433     		add	r3, r3, #4
 2717 00be E550     		str	r5, [r4, r3]
2122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef OPENSSL_EXTRA
 2718              		.loc 1 2122 0
 2719 00c0 0433     		add	r3, r3, #4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 123


 2720 00c2 E550     		str	r5, [r4, r3]
2145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA || !IGNORE_NAME_CONSTRAINTS */
 2721              		.loc 1 2145 0
 2722 00c4 074B     		ldr	r3, .L250+24
 2723 00c6 E554     		strb	r5, [r4, r3]
 2724              	.LVL373:
2166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2725              		.loc 1 2166 0
 2726 00c8 70BD     		pop	{r4, r5, r6, pc}
 2727              	.L251:
 2728 00ca C046     		.align	2
 2729              	.L250:
 2730 00cc D9020000 		.word	729
 2731 00d0 ED020000 		.word	749
 2732 00d4 F1020000 		.word	753
 2733 00d8 F2020000 		.word	754
 2734 00dc F5020000 		.word	757
 2735 00e0 EF020000 		.word	751
 2736 00e4 EE020000 		.word	750
 2737              		.cfi_endproc
 2738              	.LFE24:
 2739              		.size	InitDecodedCert, .-InitDecodedCert
 2740              		.section	.text.FreeAltNames,"ax",%progbits
 2741              		.align	1
 2742              		.global	FreeAltNames
 2743              		.code	16
 2744              		.thumb_func
 2745              		.type	FreeAltNames, %function
 2746              	FreeAltNames:
 2747              	.LFB25:
2170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
 2748              		.loc 1 2170 0
 2749              		.cfi_startproc
 2750              	.LVL374:
 2751 0000 38B5     		push	{r3, r4, r5, lr}
 2752              		.cfi_def_cfa_offset 16
 2753              		.cfi_offset 3, -16
 2754              		.cfi_offset 4, -12
 2755              		.cfi_offset 5, -8
 2756              		.cfi_offset 14, -4
 2757 0002 041C     		mov	r4, r0
 2758              	.LVL375:
 2759              	.L253:
2173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         DNS_entry* tmp = altNames->next;
 2760              		.loc 1 2173 0
 2761 0004 002C     		cmp	r4, #0
 2762 0006 0AD0     		beq	.L259
 2763              	.LBB57:
 2764              	.LBB58:
2176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(altNames,       heap, DYNAMIC_TYPE_ALTNAME);
 2765              		.loc 1 2176 0
 2766 0008 6068     		ldr	r0, [r4, #4]
 2767              	.LBE58:
2174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2768              		.loc 1 2174 0
 2769 000a 2568     		ldr	r5, [r4]
 2770              	.LVL376:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 124


 2771              	.LBB59:
2176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(altNames,       heap, DYNAMIC_TYPE_ALTNAME);
 2772              		.loc 1 2176 0
 2773 000c 0028     		cmp	r0, #0
 2774 000e 01D0     		beq	.L254
2176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(altNames,       heap, DYNAMIC_TYPE_ALTNAME);
 2775              		.loc 1 2176 0 is_stmt 0 discriminator 1
 2776 0010 FFF7FEFF 		bl	wolfSSL_Free
 2777              	.LVL377:
 2778              	.L254:
 2779              	.LBE59:
 2780              	.LBB60:
2177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         altNames = tmp;
 2781              		.loc 1 2177 0 is_stmt 1
 2782 0014 201C     		mov	r0, r4
 2783 0016 FFF7FEFF 		bl	wolfSSL_Free
 2784              	.LVL378:
 2785 001a 2C1C     		mov	r4, r5
 2786              	.LVL379:
 2787 001c F2E7     		b	.L253
 2788              	.LVL380:
 2789              	.L259:
 2790              	.LBE60:
 2791              	.LBE57:
2180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2792              		.loc 1 2180 0
 2793              		@ sp needed
 2794              	.LVL381:
 2795 001e 38BD     		pop	{r3, r4, r5, pc}
 2796              		.cfi_endproc
 2797              	.LFE25:
 2798              		.size	FreeAltNames, .-FreeAltNames
 2799              		.section	.text.FreeNameSubtrees,"ax",%progbits
 2800              		.align	1
 2801              		.global	FreeNameSubtrees
 2802              		.code	16
 2803              		.thumb_func
 2804              		.type	FreeNameSubtrees, %function
 2805              	FreeNameSubtrees:
 2806              	.LFB26:
2185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
 2807              		.loc 1 2185 0
 2808              		.cfi_startproc
 2809              	.LVL382:
 2810 0000 38B5     		push	{r3, r4, r5, lr}
 2811              		.cfi_def_cfa_offset 16
 2812              		.cfi_offset 3, -16
 2813              		.cfi_offset 4, -12
 2814              		.cfi_offset 5, -8
 2815              		.cfi_offset 14, -4
 2816 0002 041C     		mov	r4, r0
 2817              	.LVL383:
 2818              	.L261:
2188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry* tmp = names->next;
 2819              		.loc 1 2188 0
 2820 0004 002C     		cmp	r4, #0
 2821 0006 0AD0     		beq	.L267
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 125


 2822              	.LBB61:
 2823              	.LBB62:
2191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(names,       heap, DYNAMIC_TYPE_ALTNAME);
 2824              		.loc 1 2191 0
 2825 0008 6068     		ldr	r0, [r4, #4]
 2826              	.LBE62:
2189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2827              		.loc 1 2189 0
 2828 000a 2568     		ldr	r5, [r4]
 2829              	.LVL384:
 2830              	.LBB63:
2191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(names,       heap, DYNAMIC_TYPE_ALTNAME);
 2831              		.loc 1 2191 0
 2832 000c 0028     		cmp	r0, #0
 2833 000e 01D0     		beq	.L262
2191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(names,       heap, DYNAMIC_TYPE_ALTNAME);
 2834              		.loc 1 2191 0 is_stmt 0 discriminator 1
 2835 0010 FFF7FEFF 		bl	wolfSSL_Free
 2836              	.LVL385:
 2837              	.L262:
 2838              	.LBE63:
 2839              	.LBB64:
2192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         names = tmp;
 2840              		.loc 1 2192 0 is_stmt 1
 2841 0014 201C     		mov	r0, r4
 2842 0016 FFF7FEFF 		bl	wolfSSL_Free
 2843              	.LVL386:
 2844 001a 2C1C     		mov	r4, r5
 2845              	.LVL387:
 2846 001c F2E7     		b	.L261
 2847              	.LVL388:
 2848              	.L267:
 2849              	.LBE64:
 2850              	.LBE61:
2195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2851              		.loc 1 2195 0
 2852              		@ sp needed
 2853              	.LVL389:
 2854 001e 38BD     		pop	{r3, r4, r5, pc}
 2855              		.cfi_endproc
 2856              	.LFE26:
 2857              		.size	FreeNameSubtrees, .-FreeNameSubtrees
 2858              		.section	.text.FreeDecodedCert,"ax",%progbits
 2859              		.align	1
 2860              		.global	FreeDecodedCert
 2861              		.code	16
 2862              		.thumb_func
 2863              		.type	FreeDecodedCert, %function
 2864              	FreeDecodedCert:
 2865              	.LFB27:
2200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->subjectCNStored == 1)
 2866              		.loc 1 2200 0
 2867              		.cfi_startproc
 2868              	.LVL390:
2201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->subjectCN, cert->heap, DYNAMIC_TYPE_SUBJECT_CN);
 2869              		.loc 1 2201 0
 2870 0000 C36E     		ldr	r3, [r0, #108]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 126


2200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->subjectCNStored == 1)
 2871              		.loc 1 2200 0
 2872 0002 10B5     		push	{r4, lr}
 2873              		.cfi_def_cfa_offset 8
 2874              		.cfi_offset 4, -8
 2875              		.cfi_offset 14, -4
2200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->subjectCNStored == 1)
 2876              		.loc 1 2200 0
 2877 0004 041C     		mov	r4, r0
2201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->subjectCN, cert->heap, DYNAMIC_TYPE_SUBJECT_CN);
 2878              		.loc 1 2201 0
 2879 0006 012B     		cmp	r3, #1
 2880 0008 04D1     		bne	.L269
 2881              	.LBB65:
2202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->pubKeyStored == 1)
 2882              		.loc 1 2202 0
 2883 000a 006E     		ldr	r0, [r0, #96]
 2884              	.LVL391:
 2885 000c 0028     		cmp	r0, #0
 2886 000e 01D0     		beq	.L269
2202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->pubKeyStored == 1)
 2887              		.loc 1 2202 0 is_stmt 0 discriminator 1
 2888 0010 FFF7FEFF 		bl	wolfSSL_Free
 2889              	.LVL392:
 2890              	.L269:
 2891              	.LBE65:
2203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(cert->publicKey, cert->heap, DYNAMIC_TYPE_PUBLIC_KEY);
 2892              		.loc 1 2203 0 is_stmt 1
 2893 0014 A368     		ldr	r3, [r4, #8]
 2894 0016 012B     		cmp	r3, #1
 2895 0018 04D1     		bne	.L270
 2896              	.LBB66:
2204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->weOwnAltNames && cert->altNames)
 2897              		.loc 1 2204 0
 2898 001a 2068     		ldr	r0, [r4]
 2899              	.LVL393:
 2900 001c 0028     		cmp	r0, #0
 2901 001e 01D0     		beq	.L270
2204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->weOwnAltNames && cert->altNames)
 2902              		.loc 1 2204 0 is_stmt 0 discriminator 1
 2903 0020 FFF7FEFF 		bl	wolfSSL_Free
 2904              	.LVL394:
 2905              	.L270:
 2906              	.LBE66:
2205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeAltNames(cert->altNames, cert->heap);
 2907              		.loc 1 2205 0 is_stmt 1
 2908 0024 BC23     		mov	r3, #188
 2909 0026 9B00     		lsl	r3, r3, #2
 2910 0028 E35C     		ldrb	r3, [r4, r3]
 2911 002a 002B     		cmp	r3, #0
 2912 002c 07D0     		beq	.L271
2205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeAltNames(cert->altNames, cert->heap);
 2913              		.loc 1 2205 0 is_stmt 0 discriminator 1
 2914 002e 606A     		ldr	r0, [r4, #36]
 2915 0030 0028     		cmp	r0, #0
 2916 0032 04D0     		beq	.L271
2206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 127


 2917              		.loc 1 2206 0 is_stmt 1
 2918 0034 A023     		mov	r3, #160
 2919 0036 9B00     		lsl	r3, r3, #2
 2920 0038 E158     		ldr	r1, [r4, r3]
 2921 003a FFF7FEFF 		bl	FreeAltNames
 2922              	.LVL395:
 2923              	.L271:
2208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeAltNames(cert->altEmailNames, cert->heap);
 2924              		.loc 1 2208 0
 2925 003e A06A     		ldr	r0, [r4, #40]
 2926 0040 0028     		cmp	r0, #0
 2927 0042 04D0     		beq	.L272
2209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->permittedNames)
 2928              		.loc 1 2209 0
 2929 0044 A023     		mov	r3, #160
 2930 0046 9B00     		lsl	r3, r3, #2
 2931 0048 E158     		ldr	r1, [r4, r3]
 2932 004a FFF7FEFF 		bl	FreeAltNames
 2933              	.LVL396:
 2934              	.L272:
2210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeNameSubtrees(cert->permittedNames, cert->heap);
 2935              		.loc 1 2210 0
 2936 004e E06A     		ldr	r0, [r4, #44]
 2937 0050 0028     		cmp	r0, #0
 2938 0052 04D0     		beq	.L273
2211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->excludedNames)
 2939              		.loc 1 2211 0
 2940 0054 A023     		mov	r3, #160
 2941 0056 9B00     		lsl	r3, r3, #2
 2942 0058 E158     		ldr	r1, [r4, r3]
 2943 005a FFF7FEFF 		bl	FreeNameSubtrees
 2944              	.LVL397:
 2945              	.L273:
2212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeNameSubtrees(cert->excludedNames, cert->heap);
 2946              		.loc 1 2212 0
 2947 005e 206B     		ldr	r0, [r4, #48]
 2948 0060 0028     		cmp	r0, #0
 2949 0062 04D0     		beq	.L268
2213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
 2950              		.loc 1 2213 0
 2951 0064 A023     		mov	r3, #160
 2952 0066 9B00     		lsl	r3, r3, #2
 2953 0068 E158     		ldr	r1, [r4, r3]
 2954 006a FFF7FEFF 		bl	FreeNameSubtrees
 2955              	.LVL398:
 2956              	.L268:
2226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 2957              		.loc 1 2226 0
 2958              		@ sp needed
 2959              	.LVL399:
 2960 006e 10BD     		pop	{r4, pc}
 2961              		.cfi_endproc
 2962              	.LFE27:
 2963              		.size	FreeDecodedCert, .-FreeDecodedCert
 2964              		.section	.text.ValidateDate,"ax",%progbits
 2965              		.align	1
 2966              		.global	ValidateDate
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 128


 2967              		.code	16
 2968              		.thumb_func
 2969              		.type	ValidateDate, %function
 2970              	ValidateDate:
 2971              	.LFB33:
3005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t ltime;
 2972              		.loc 1 3005 0
 2973              		.cfi_startproc
 2974              	.LVL400:
 2975 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2976              		.cfi_def_cfa_offset 20
 2977              		.cfi_offset 4, -20
 2978              		.cfi_offset 5, -16
 2979              		.cfi_offset 6, -12
 2980              		.cfi_offset 7, -8
 2981              		.cfi_offset 14, -4
3010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    timeDiff = 0 ;
 2982              		.loc 1 3010 0
 2983 0002 0025     		mov	r5, #0
3005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t ltime;
 2984              		.loc 1 3005 0
 2985 0004 91B0     		sub	sp, sp, #68
 2986              		.cfi_def_cfa_offset 88
3005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t ltime;
 2987              		.loc 1 3005 0
 2988 0006 041C     		mov	r4, r0
3022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(&certTime, 0, sizeof(certTime));
 2989              		.loc 1 3022 0
 2990 0008 281C     		mov	r0, r5
 2991              	.LVL401:
3005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t ltime;
 2992              		.loc 1 3005 0
 2993 000a 0F1C     		mov	r7, r1
 2994 000c 161C     		mov	r6, r2
3010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    timeDiff = 0 ;
 2995              		.loc 1 3010 0
 2996 000e 0495     		str	r5, [sp, #16]
 2997              	.LVL402:
3012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    diffSign = 0 ;
 2998              		.loc 1 3012 0
 2999 0010 0595     		str	r5, [sp, #20]
 3000 0012 0695     		str	r5, [sp, #24]
 3001              	.LVL403:
3022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(&certTime, 0, sizeof(certTime));
 3002              		.loc 1 3022 0
 3003 0014 FFF7FEFF 		bl	time
 3004              	.LVL404:
3023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3005              		.loc 1 3023 0
 3006 0018 291C     		mov	r1, r5
3022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(&certTime, 0, sizeof(certTime));
 3007              		.loc 1 3022 0
 3008 001a 0390     		str	r0, [sp, #12]
3023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3009              		.loc 1 3023 0
 3010 001c 2422     		mov	r2, #36
 3011 001e 07A8     		add	r0, sp, #28
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 129


 3012 0020 FFF7FEFF 		bl	memset
 3013              	.LVL405:
3025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (btoi(date[0]) >= 5)
 3014              		.loc 1 3025 0
 3015 0024 172F     		cmp	r7, #23
 3016 0026 08D1     		bne	.L297
 3017              	.LVL406:
 3018              	.LBB67:
 3019              	.LBB68:
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3020              		.loc 1 412 0
 3021 0028 2378     		ldrb	r3, [r4]
 3022 002a 303B     		sub	r3, r3, #48
 3023              	.LBE68:
 3024              	.LBE67:
3026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             certTime.tm_year = 1900;
 3025              		.loc 1 3026 0
 3026 002c 042B     		cmp	r3, #4
 3027 002e 01D9     		bls	.L298
3027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
 3028              		.loc 1 3027 0
 3029 0030 3A4B     		ldr	r3, .L315
 3030 0032 10E0     		b	.L311
 3031              	.L298:
3029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3032              		.loc 1 3029 0
 3033 0034 FA23     		mov	r3, #250
 3034 0036 DB00     		lsl	r3, r3, #3
 3035 0038 0DE0     		b	.L311
 3036              	.LVL407:
 3037              	.L297:
3032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         certTime.tm_year += btoi(date[i++]) * 100;
 3038              		.loc 1 3032 0
 3039 003a FA21     		mov	r1, #250
 3040 003c 049B     		ldr	r3, [sp, #16]
 3041              	.LVL408:
 3042 003e 8900     		lsl	r1, r1, #2
 3043              	.LBB69:
 3044              	.LBB70:
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3045              		.loc 1 412 0
 3046 0040 E25C     		ldrb	r2, [r4, r3]
 3047 0042 303A     		sub	r2, r2, #48
 3048              	.LBE70:
 3049              	.LBE69:
3032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         certTime.tm_year += btoi(date[i++]) * 100;
 3050              		.loc 1 3032 0
 3051 0044 4A43     		mul	r2, r1
3033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3052              		.loc 1 3033 0
 3053 0046 991C     		add	r1, r3, #2
 3054 0048 0491     		str	r1, [sp, #16]
 3055              	.LVL409:
 3056 004a 6421     		mov	r1, #100
 3057 004c E318     		add	r3, r4, r3
 3058              	.LVL410:
 3059              	.LBB71:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 130


 3060              	.LBB72:
 412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3061              		.loc 1 412 0
 3062 004e 5B78     		ldrb	r3, [r3, #1]
 3063              	.LVL411:
 3064 0050 303B     		sub	r3, r3, #48
 3065              	.LBE72:
 3066              	.LBE71:
3033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3067              		.loc 1 3033 0
 3068 0052 4B43     		mul	r3, r1
 3069 0054 9B18     		add	r3, r3, r2
 3070              	.LVL412:
 3071              	.L311:
3037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mon,  date, &i); certTime.tm_mon  -= 1;
 3072              		.loc 1 3037 0
 3073 0056 0CA8     		add	r0, sp, #48
 3074 0058 211C     		mov	r1, r4
 3075 005a 04AA     		add	r2, sp, #16
3033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3076              		.loc 1 3033 0
 3077 005c 0C93     		str	r3, [sp, #48]
3037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mon,  date, &i); certTime.tm_mon  -= 1;
 3078              		.loc 1 3037 0
 3079 005e FFF7FEFF 		bl	GetTime
 3080              	.LVL413:
 3081 0062 2F4A     		ldr	r2, .L315+4
 3082 0064 0C9B     		ldr	r3, [sp, #48]
 3083 0066 9446     		mov	ip, r2
 3084 0068 0193     		str	r3, [sp, #4]
3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
 3085              		.loc 1 3038 0
 3086 006a 0BA8     		add	r0, sp, #44
3037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mon,  date, &i); certTime.tm_mon  -= 1;
 3087              		.loc 1 3037 0
 3088 006c 6344     		add	r3, r3, ip
3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
 3089              		.loc 1 3038 0
 3090 006e 211C     		mov	r1, r4
 3091 0070 04AA     		add	r2, sp, #16
3037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mon,  date, &i); certTime.tm_mon  -= 1;
 3092              		.loc 1 3037 0
 3093 0072 0C93     		str	r3, [sp, #48]
3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
 3094              		.loc 1 3038 0
 3095 0074 FFF7FEFF 		bl	GetTime
 3096              	.LVL414:
 3097 0078 0B9B     		ldr	r3, [sp, #44]
3039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_hour, date, &i);
 3098              		.loc 1 3039 0
 3099 007a 0AA8     		add	r0, sp, #40
3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
 3100              		.loc 1 3038 0
 3101 007c 0193     		str	r3, [sp, #4]
3039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_hour, date, &i);
 3102              		.loc 1 3039 0
 3103 007e 211C     		mov	r1, r4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 131


3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
 3104              		.loc 1 3038 0
 3105 0080 013B     		sub	r3, r3, #1
3039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_hour, date, &i);
 3106              		.loc 1 3039 0
 3107 0082 04AA     		add	r2, sp, #16
3038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_mday, date, &i);
 3108              		.loc 1 3038 0
 3109 0084 0B93     		str	r3, [sp, #44]
3039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_hour, date, &i);
 3110              		.loc 1 3039 0
 3111 0086 FFF7FEFF 		bl	GetTime
 3112              	.LVL415:
3040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_min,  date, &i);
 3113              		.loc 1 3040 0
 3114 008a 09A8     		add	r0, sp, #36
 3115 008c 211C     		mov	r1, r4
 3116 008e 04AA     		add	r2, sp, #16
 3117 0090 FFF7FEFF 		bl	GetTime
 3118              	.LVL416:
3041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     GetTime((int*)&certTime.tm_sec,  date, &i);
 3119              		.loc 1 3041 0
 3120 0094 08A8     		add	r0, sp, #32
 3121 0096 211C     		mov	r1, r4
 3122 0098 04AA     		add	r2, sp, #16
 3123 009a FFF7FEFF 		bl	GetTime
 3124              	.LVL417:
3042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3125              		.loc 1 3042 0
 3126 009e 07A8     		add	r0, sp, #28
 3127 00a0 211C     		mov	r1, r4
 3128 00a2 04AA     		add	r2, sp, #16
 3129 00a4 FFF7FEFF 		bl	GetTime
 3130              	.LVL418:
3044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Using time differential, not Zulu") ;
 3131              		.loc 1 3044 0
 3132 00a8 049A     		ldr	r2, [sp, #16]
 3133 00aa FD20     		mov	r0, #253
 3134 00ac A15C     		ldrb	r1, [r4, r2]
 3135 00ae 0B1C     		mov	r3, r1
 3136 00b0 2B3B     		sub	r3, r3, #43
 3137 00b2 0342     		tst	r3, r0
 3138 00b4 18D1     		bne	.L300
3046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetTime(&diffHH, date, &i);
 3139              		.loc 1 3046 0
 3140 00b6 0132     		add	r2, r2, #1
 3141 00b8 0492     		str	r2, [sp, #16]
 3142 00ba 5A1E     		sub	r2, r3, #1
 3143 00bc 9341     		sbc	r3, r3, r2
 3144 00be 0125     		mov	r5, #1
 3145 00c0 5B42     		neg	r3, r3
3047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetTime(&diffMM, date, &i);
 3146              		.loc 1 3047 0
 3147 00c2 05A8     		add	r0, sp, #20
 3148 00c4 211C     		mov	r1, r4
 3149 00c6 04AA     		add	r2, sp, #16
3046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetTime(&diffHH, date, &i);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 132


 3150              		.loc 1 3046 0
 3151 00c8 1D43     		orr	r5, r3
 3152              	.LVL419:
3047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         GetTime(&diffMM, date, &i);
 3153              		.loc 1 3047 0
 3154 00ca FFF7FEFF 		bl	GetTime
 3155              	.LVL420:
3048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         timeDiff = diffSign * (diffHH*60 + diffMM) * 60 ;
 3156              		.loc 1 3048 0
 3157 00ce 211C     		mov	r1, r4
 3158 00d0 04AA     		add	r2, sp, #16
 3159 00d2 06A8     		add	r0, sp, #24
 3160 00d4 FFF7FEFF 		bl	GetTime
 3161              	.LVL421:
3049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     } else if (date[i] != 'Z') {
 3162              		.loc 1 3049 0
 3163 00d8 3C22     		mov	r2, #60
 3164 00da 059B     		ldr	r3, [sp, #20]
 3165 00dc 0699     		ldr	r1, [sp, #24]
 3166 00de 5343     		mul	r3, r2
 3167 00e0 5B18     		add	r3, r3, r1
 3168 00e2 5D43     		mul	r5, r3
 3169              	.LVL422:
 3170 00e4 5543     		mul	r5, r2
 3171              	.LVL423:
 3172 00e6 04E0     		b	.L302
 3173              	.LVL424:
 3174              	.L300:
3050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("UTCtime, niether Zulu or time differential") ;
 3175              		.loc 1 3050 0
 3176 00e8 5A29     		cmp	r1, #90
 3177 00ea 01D0     		beq	.L307
 3178              	.LVL425:
 3179              	.L304:
3052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3180              		.loc 1 3052 0
 3181 00ec 0020     		mov	r0, #0
 3182 00ee 12E0     		b	.L303
 3183              	.LVL426:
 3184              	.L307:
3011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    diffHH = 0 ; int diffMM = 0 ;
 3185              		.loc 1 3011 0
 3186 00f0 0025     		mov	r5, #0
 3187              	.LVL427:
 3188              	.L302:
3055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     localTime = XGMTIME(&ltime, tmpTime);
 3189              		.loc 1 3055 0
 3190 00f2 039B     		ldr	r3, [sp, #12]
3056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3191              		.loc 1 3056 0
 3192 00f4 03A8     		add	r0, sp, #12
3055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     localTime = XGMTIME(&ltime, tmpTime);
 3193              		.loc 1 3055 0
 3194 00f6 5D1B     		sub	r5, r3, r5
 3195              	.LVL428:
 3196 00f8 0395     		str	r5, [sp, #12]
3056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 133


 3197              		.loc 1 3056 0
 3198 00fa FFF7FEFF 		bl	gmtime
 3199              	.LVL429:
 3200 00fe 011E     		sub	r1, r0, #0
 3201              	.LVL430:
3058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("XGMTIME failed");
 3202              		.loc 1 3058 0
 3203 0100 F4D0     		beq	.L304
 3204              	.LBB73:
 3205              	.LBB74:
2999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3206              		.loc 1 2999 0
 3207 0102 07A8     		add	r0, sp, #28
 3208              	.LVL431:
 3209              	.LBE74:
 3210              	.LBE73:
3063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (DateLessThan(localTime, &certTime))
 3211              		.loc 1 3063 0
 3212 0104 002E     		cmp	r6, #0
 3213 0106 01D0     		beq	.L314
3068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
 3214              		.loc 1 3068 0
 3215 0108 081C     		mov	r0, r1
 3216 010a 07A9     		add	r1, sp, #28
 3217              	.LVL432:
 3218              	.L314:
 3219 010c FFF7FEFF 		bl	DateGreaterThan
 3220              	.LVL433:
 3221 0110 0028     		cmp	r0, #0
 3222 0112 EBD1     		bne	.L304
3071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3223              		.loc 1 3071 0
 3224 0114 0130     		add	r0, r0, #1
 3225              	.L303:
3072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_TIME_H && USE_WOLF_VALIDDATE */
 3226              		.loc 1 3072 0
 3227 0116 11B0     		add	sp, sp, #68
 3228              		@ sp needed
 3229              	.LVL434:
 3230              	.LVL435:
 3231 0118 F0BD     		pop	{r4, r5, r6, r7, pc}
 3232              	.L316:
 3233 011a C046     		.align	2
 3234              	.L315:
 3235 011c 6C070000 		.word	1900
 3236 0120 94F8FFFF 		.word	-1900
 3237              		.cfi_endproc
 3238              	.LFE33:
 3239              		.size	ValidateDate, .-ValidateDate
 3240              		.section	.text.GetDate,"ax",%progbits
 3241              		.align	1
 3242              		.code	16
 3243              		.thumb_func
 3244              		.type	GetDate, %function
 3245              	GetDate:
 3246              	.LFB34:
3077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 134


 3247              		.loc 1 3077 0
 3248              		.cfi_startproc
 3249              	.LVL436:
 3250 0000 9D22     		mov	r2, #157
 3251 0002 9E23     		mov	r3, #158
 3252 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 3253              		.cfi_def_cfa_offset 20
 3254              		.cfi_offset 4, -20
 3255              		.cfi_offset 5, -16
 3256              		.cfi_offset 6, -12
 3257              		.cfi_offset 7, -8
 3258              		.cfi_offset 14, -4
 3259 0006 9200     		lsl	r2, r2, #2
 3260 0008 9B00     		lsl	r3, r3, #2
3084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 3261              		.loc 1 3084 0
 3262 000a 8258     		ldr	r2, [r0, r2]
3077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 3263              		.loc 1 3077 0
 3264 000c 041C     		mov	r4, r0
3084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 3265              		.loc 1 3084 0
 3266 000e C058     		ldr	r0, [r0, r3]
 3267              	.LVL437:
3077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
 3268              		.loc 1 3077 0
 3269 0010 8DB0     		sub	sp, sp, #52
 3270              		.cfi_def_cfa_offset 72
3084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 3271              		.loc 1 3084 0
 3272 0012 1218     		add	r2, r2, r0
 3273 0014 BE20     		mov	r0, #190
3083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->beforeDate = &cert->source[cert->srcIdx];
 3274              		.loc 1 3083 0
 3275 0016 0029     		cmp	r1, #0
 3276 0018 00D0     		beq	.L328
3086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     startIdx = cert->srcIdx;
 3277              		.loc 1 3086 0
 3278 001a C020     		mov	r0, #192
 3279              	.L328:
 3280 001c 8000     		lsl	r0, r0, #2
 3281 001e 2250     		str	r2, [r4, r0]
3087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3282              		.loc 1 3087 0
 3283 0020 E258     		ldr	r2, [r4, r3]
 3284 0022 0092     		str	r2, [sp]
 3285              	.LVL438:
3089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != ASN_UTC_TIME && b != ASN_GENERALIZED_TIME)
 3286              		.loc 1 3089 0
 3287 0024 9D22     		mov	r2, #157
 3288              	.LVL439:
 3289 0026 9200     		lsl	r2, r2, #2
 3290 0028 A058     		ldr	r0, [r4, r2]
 3291 002a 009A     		ldr	r2, [sp]
 3292 002c 0132     		add	r2, r2, #1
 3293 002e E250     		str	r2, [r4, r3]
 3294 0030 009B     		ldr	r3, [sp]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 135


 3295 0032 C35C     		ldrb	r3, [r0, r3]
 3296 0034 0193     		str	r3, [sp, #4]
 3297              	.LVL440:
3090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_TIME_E;
 3298              		.loc 1 3090 0
 3299 0036 173B     		sub	r3, r3, #23
 3300 0038 012B     		cmp	r3, #1
 3301 003a 31D8     		bhi	.L323
3093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3302              		.loc 1 3093 0
 3303 003c 9E23     		mov	r3, #158
 3304 003e 9B00     		lsl	r3, r3, #2
 3305 0040 0F1C     		mov	r7, r1
 3306 0042 E118     		add	r1, r4, r3
 3307              	.LVL441:
 3308 0044 0433     		add	r3, r3, #4
 3309 0046 03AA     		add	r2, sp, #12
 3310 0048 E358     		ldr	r3, [r4, r3]
 3311 004a FFF7FEFF 		bl	GetLength
 3312              	.LVL442:
 3313 004e 0028     		cmp	r0, #0
 3314 0050 28DB     		blt	.L324
3096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_DATE_SZ_E;
 3315              		.loc 1 3096 0
 3316 0052 039E     		ldr	r6, [sp, #12]
 3317 0054 331C     		mov	r3, r6
 3318 0056 0D3B     		sub	r3, r3, #13
 3319 0058 132B     		cmp	r3, #19
 3320 005a 25D8     		bhi	.L325
3099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx += length;
 3321              		.loc 1 3099 0
 3322 005c 9E23     		mov	r3, #158
 3323 005e 9B00     		lsl	r3, r3, #2
 3324 0060 E558     		ldr	r5, [r4, r3]
 3325 0062 043B     		sub	r3, r3, #4
 3326 0064 E158     		ldr	r1, [r4, r3]
 3327 0066 04A8     		add	r0, sp, #16
 3328 0068 4919     		add	r1, r1, r5
 3329 006a 321C     		mov	r2, r6
 3330 006c FFF7FEFF 		bl	memcpy
 3331              	.LVL443:
3100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3332              		.loc 1 3100 0
 3333 0070 9E23     		mov	r3, #158
 3334 0072 7519     		add	r5, r6, r5
 3335 0074 9B00     		lsl	r3, r3, #2
 3336 0076 E550     		str	r5, [r4, r3]
 3337 0078 009B     		ldr	r3, [sp]
 3338 007a ED1A     		sub	r5, r5, r3
3103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
 3339              		.loc 1 3103 0
 3340 007c BF23     		mov	r3, #191
3102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->beforeDateLen = cert->srcIdx - startIdx;
 3341              		.loc 1 3102 0
 3342 007e 002F     		cmp	r7, #0
 3343 0080 00D0     		beq	.L329
3105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 136


 3344              		.loc 1 3105 0
 3345 0082 C123     		mov	r3, #193
 3346              	.L329:
 3347 0084 9B00     		lsl	r3, r3, #2
3107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dateType == BEFORE)
 3348              		.loc 1 3107 0
 3349 0086 0199     		ldr	r1, [sp, #4]
3105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3350              		.loc 1 3105 0
 3351 0088 E550     		str	r5, [r4, r3]
3107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dateType == BEFORE)
 3352              		.loc 1 3107 0
 3353 008a 04A8     		add	r0, sp, #16
 3354 008c 3A1C     		mov	r2, r7
 3355 008e FFF7FEFF 		bl	ValidateDate
 3356              	.LVL444:
3114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3357              		.loc 1 3114 0
 3358 0092 0021     		mov	r1, #0
3107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (dateType == BEFORE)
 3359              		.loc 1 3107 0
 3360 0094 8842     		cmp	r0, r1
 3361 0096 09D1     		bne	.L320
3111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3362              		.loc 1 3111 0
 3363 0098 7942     		neg	r1, r7
 3364 009a 7941     		adc	r1, r1, r7
 3365 009c 9739     		sub	r1, r1, #151
 3366 009e 05E0     		b	.L320
 3367              	.LVL445:
 3368              	.L323:
3091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3369              		.loc 1 3091 0
 3370 00a0 9921     		mov	r1, #153
 3371              	.LVL446:
 3372 00a2 02E0     		b	.L330
 3373              	.LVL447:
 3374              	.L324:
3094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3375              		.loc 1 3094 0
 3376 00a4 8C21     		mov	r1, #140
 3377 00a6 00E0     		b	.L330
 3378              	.L325:
3097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3379              		.loc 1 3097 0
 3380 00a8 9521     		mov	r1, #149
 3381              	.LVL448:
 3382              	.L330:
 3383 00aa 4942     		neg	r1, r1
 3384              	.L320:
3115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3385              		.loc 1 3115 0
 3386 00ac 081C     		mov	r0, r1
 3387 00ae 0DB0     		add	sp, sp, #52
 3388              	.LVL449:
 3389              		@ sp needed
 3390              	.LVL450:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 137


 3391 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 3392              		.cfi_endproc
 3393              	.LFE34:
 3394              		.size	GetDate, .-GetDate
 3395              		.section	.text.DecodeToKey,"ax",%progbits
 3396              		.align	1
 3397              		.global	DecodeToKey
 3398              		.code	16
 3399              		.thumb_func
 3400              		.type	DecodeToKey, %function
 3401              	DecodeToKey:
 3402              	.LFB36:
3140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int badDate = 0;
 3403              		.loc 1 3140 0
 3404              		.cfi_startproc
 3405              	.LVL451:
 3406              	.LBB85:
 3407              	.LBB86:
2240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3408              		.loc 1 2240 0
 3409 0000 9E23     		mov	r3, #158
 3410              	.LBE86:
 3411              	.LBE85:
3140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int badDate = 0;
 3412              		.loc 1 3140 0
 3413 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 3414              		.cfi_def_cfa_offset 20
 3415              		.cfi_offset 4, -20
 3416              		.cfi_offset 5, -16
 3417              		.cfi_offset 6, -12
 3418              		.cfi_offset 7, -8
 3419              		.cfi_offset 14, -4
 3420              	.LBB94:
 3421              	.LBB91:
2240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3422              		.loc 1 2240 0
 3423 0004 9D27     		mov	r7, #157
 3424              	.LBE91:
 3425              	.LBE94:
3140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int badDate = 0;
 3426              		.loc 1 3140 0
 3427 0006 041C     		mov	r4, r0
 3428              	.LBB95:
 3429              	.LBB92:
2240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3430              		.loc 1 2240 0
 3431 0008 9B00     		lsl	r3, r3, #2
 3432 000a C518     		add	r5, r0, r3
 3433              	.LBE92:
 3434              	.LBE95:
3140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int badDate = 0;
 3435              		.loc 1 3140 0
 3436 000c 91B0     		sub	sp, sp, #68
 3437              		.cfi_def_cfa_offset 88
 3438              	.LVL452:
 3439              	.LBB96:
 3440              	.LBB93:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 138


2240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3441              		.loc 1 2240 0
 3442 000e BF00     		lsl	r7, r7, #2
 3443 0010 0433     		add	r3, r3, #4
 3444 0012 C059     		ldr	r0, [r0, r7]
 3445              	.LVL453:
 3446 0014 291C     		mov	r1, r5
 3447              	.LVL454:
 3448 0016 03AA     		add	r2, sp, #12
 3449 0018 E358     		ldr	r3, [r4, r3]
 3450 001a FFF7FEFF 		bl	GetSequence
 3451              	.LVL455:
 3452 001e 0028     		cmp	r0, #0
 3453 0020 00DA     		bge	.LCB3503
 3454 0022 80E0     		b	.L342	@long jump
 3455              	.LCB3503:
2243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3456              		.loc 1 2243 0
 3457 0024 9E26     		mov	r6, #158
 3458 0026 B600     		lsl	r6, r6, #2
 3459 0028 A359     		ldr	r3, [r4, r6]
2245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3460              		.loc 1 2245 0
 3461 002a E059     		ldr	r0, [r4, r7]
2243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3462              		.loc 1 2243 0
 3463 002c E360     		str	r3, [r4, #12]
2245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3464              		.loc 1 2245 0
 3465 002e 9F23     		mov	r3, #159
 3466 0030 9B00     		lsl	r3, r3, #2
 3467 0032 291C     		mov	r1, r5
 3468 0034 03AA     		add	r2, sp, #12
 3469 0036 E358     		ldr	r3, [r4, r3]
 3470 0038 FFF7FEFF 		bl	GetSequence
 3471              	.LVL456:
 3472 003c 0028     		cmp	r0, #0
 3473 003e 72DB     		blt	.L342
2247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3474              		.loc 1 2247 0
 3475 0040 A359     		ldr	r3, [r4, r6]
 3476 0042 039A     		ldr	r2, [sp, #12]
2249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3477              		.loc 1 2249 0
 3478 0044 E059     		ldr	r0, [r4, r7]
 3479              	.LVL457:
2247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3480              		.loc 1 2247 0
 3481 0046 D218     		add	r2, r2, r3
 3482 0048 2261     		str	r2, [r4, #16]
 3483              	.LBB87:
 3484              	.LBB88:
 636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *inOutIdx = ++idx;  /* eat header */
 3485              		.loc 1 636 0
 3486 004a C25C     		ldrb	r2, [r0, r3]
 3487 004c A02A     		cmp	r2, #160
 3488 004e 09D1     		bne	.L335
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 139


 3489              	.LVL458:
 638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3490              		.loc 1 638 0
 3491 0050 221C     		mov	r2, r4
 637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return GetMyVersion(input, inOutIdx, version);
 3492              		.loc 1 637 0
 3493 0052 0233     		add	r3, r3, #2
 3494              	.LVL459:
 3495 0054 A351     		str	r3, [r4, r6]
 638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3496              		.loc 1 638 0
 3497 0056 291C     		mov	r1, r5
 3498 0058 2032     		add	r2, r2, #32
 3499              	.LVL460:
 3500 005a FFF7FEFF 		bl	GetMyVersion
 3501              	.LVL461:
 3502              	.LBE88:
 3503              	.LBE87:
2249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3504              		.loc 1 2249 0
 3505 005e 0028     		cmp	r0, #0
 3506 0060 02DA     		bge	.L336
 3507 0062 60E0     		b	.L342
 3508              	.LVL462:
 3509              	.L335:
 3510              	.LBB90:
 3511              	.LBB89:
 642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3512              		.loc 1 642 0
 3513 0064 0023     		mov	r3, #0
 3514              	.LVL463:
 3515 0066 2362     		str	r3, [r4, #32]
 3516              	.LVL464:
 3517              	.L336:
 3518              	.LBE89:
 3519              	.LBE90:
2258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SMALL_STACK) && defined(USE_FAST_MATH)
 3520              		.loc 1 2258 0
 3521 0068 9D23     		mov	r3, #157
 3522 006a 9B00     		lsl	r3, r3, #2
 3523 006c E158     		ldr	r1, [r4, r3]
 3524 006e 0833     		add	r3, r3, #8
 3525 0070 04A8     		add	r0, sp, #16
 3526              	.LVL465:
 3527 0072 2A1C     		mov	r2, r5
 3528 0074 E358     		ldr	r3, [r4, r3]
 3529 0076 FFF7FEFF 		bl	GetInt
 3530              	.LVL466:
 3531 007a 0028     		cmp	r0, #0
 3532 007c 53DB     		blt	.L342
2265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (len < (int)sizeof(serialTmp)) {
 3533              		.loc 1 2265 0
 3534 007e 04A8     		add	r0, sp, #16
 3535              	.LVL467:
 3536 0080 FFF7FEFF 		bl	mp_unsigned_bin_size
 3537              	.LVL468:
2231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte serialTmp[EXTERNAL_SERIAL_SIZE];
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 140


 3538              		.loc 1 2231 0
 3539 0084 0026     		mov	r6, #0
2265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (len < (int)sizeof(serialTmp)) {
 3540              		.loc 1 2265 0
 3541 0086 0390     		str	r0, [sp, #12]
2266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ( (ret = mp_to_unsigned_bin(mpi, serialTmp)) == MP_OKAY) {
 3542              		.loc 1 2266 0
 3543 0088 1F28     		cmp	r0, #31
 3544 008a 10DC     		bgt	.L337
2267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(cert->serial, serialTmp, len);
 3545              		.loc 1 2267 0
 3546 008c 04A8     		add	r0, sp, #16
 3547              	.LVL469:
 3548 008e 08A9     		add	r1, sp, #32
 3549 0090 FFF7FEFF 		bl	mp_to_unsigned_bin
 3550              	.LVL470:
 3551 0094 061E     		sub	r6, r0, #0
 3552              	.LVL471:
 3553 0096 0AD1     		bne	.L337
2268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->serialSz = len;
 3554              		.loc 1 2268 0
 3555 0098 A123     		mov	r3, #161
 3556 009a 039F     		ldr	r7, [sp, #12]
 3557 009c 9B00     		lsl	r3, r3, #2
 3558 009e E018     		add	r0, r4, r3
 3559              	.LVL472:
 3560 00a0 08A9     		add	r1, sp, #32
 3561 00a2 3A1C     		mov	r2, r7
 3562 00a4 FFF7FEFF 		bl	memcpy
 3563              	.LVL473:
2269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 3564              		.loc 1 2269 0
 3565 00a8 A923     		mov	r3, #169
 3566 00aa 9B00     		lsl	r3, r3, #2
 3567 00ac E750     		str	r7, [r4, r3]
 3568              	.LVL474:
 3569              	.L337:
2272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3570              		.loc 1 2272 0
 3571 00ae 04A8     		add	r0, sp, #16
 3572              	.LVL475:
 3573 00b0 FFF7FEFF 		bl	mp_clear
 3574              	.LVL476:
2278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3575              		.loc 1 2278 0
 3576 00b4 331E     		sub	r3, r6, #0
 3577              	.LBE93:
 3578              	.LBE96:
3144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
 3579              		.loc 1 3144 0
 3580 00b6 45DB     		blt	.L338
3149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           sigType, cert->maxIdx)) < 0)
 3581              		.loc 1 3149 0
 3582 00b8 9F26     		mov	r6, #159
 3583              	.LVL477:
 3584 00ba 9D27     		mov	r7, #157
 3585 00bc 221C     		mov	r2, r4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 141


 3586 00be B600     		lsl	r6, r6, #2
 3587 00c0 A359     		ldr	r3, [r4, r6]
 3588              	.LVL478:
 3589 00c2 BF00     		lsl	r7, r7, #2
 3590 00c4 0093     		str	r3, [sp]
 3591 00c6 E059     		ldr	r0, [r4, r7]
 3592 00c8 0123     		mov	r3, #1
 3593 00ca 291C     		mov	r1, r5
 3594 00cc 1832     		add	r2, r2, #24
 3595 00ce FFF7FEFF 		bl	GetAlgoId
 3596              	.LVL479:
 3597 00d2 031E     		sub	r3, r0, #0
 3598 00d4 36DB     		blt	.L338
3155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
 3599              		.loc 1 3155 0
 3600 00d6 201C     		mov	r0, r4
 3601              	.LVL480:
 3602 00d8 0021     		mov	r1, #0
 3603 00da FFF7FEFF 		bl	GetName
 3604              	.LVL481:
 3605 00de 031E     		sub	r3, r0, #0
 3606 00e0 30DB     		blt	.L338
 3607              	.LVL482:
 3608              	.LBB97:
 3609              	.LBB98:
 3610              	.LBB99:
 3611              	.LBB100:
3123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3612              		.loc 1 3123 0
 3613 00e2 E059     		ldr	r0, [r4, r7]
 3614              	.LVL483:
 3615 00e4 291C     		mov	r1, r5
 3616 00e6 08AA     		add	r2, sp, #32
 3617 00e8 A359     		ldr	r3, [r4, r6]
 3618              	.LVL484:
 3619 00ea FFF7FEFF 		bl	GetSequence
 3620              	.LVL485:
 3621 00ee 0028     		cmp	r0, #0
 3622 00f0 07DB     		blt	.L339
3126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         badDate = ASN_BEFORE_DATE_E;           /* continue parsing */
 3623              		.loc 1 3126 0
 3624 00f2 0021     		mov	r1, #0
 3625 00f4 201C     		mov	r0, r4
 3626 00f6 FFF7FEFF 		bl	GetDate
 3627              	.LVL486:
3129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_AFTER_DATE_E;
 3628              		.loc 1 3129 0
 3629 00fa 201C     		mov	r0, r4
 3630 00fc 0121     		mov	r1, #1
 3631 00fe FFF7FEFF 		bl	GetDate
 3632              	.LVL487:
 3633              	.L339:
 3634              	.LBE100:
 3635              	.LBE99:
3161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
 3636              		.loc 1 3161 0
 3637 0102 201C     		mov	r0, r4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 142


 3638 0104 0121     		mov	r1, #1
 3639 0106 FFF7FEFF 		bl	GetName
 3640              	.LVL488:
 3641 010a 031E     		sub	r3, r0, #0
 3642 010c 1ADB     		blt	.L338
 3643              	.LVL489:
 3644              	.LBB101:
 3645              	.LBB102:
2352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 3646              		.loc 1 2352 0
 3647 010e 9D26     		mov	r6, #157
 3648 0110 9F27     		mov	r7, #159
 3649 0112 B600     		lsl	r6, r6, #2
 3650 0114 BF00     		lsl	r7, r7, #2
 3651 0116 A059     		ldr	r0, [r4, r6]
 3652              	.LVL490:
 3653 0118 291C     		mov	r1, r5
 3654 011a 08AA     		add	r2, sp, #32
 3655 011c E359     		ldr	r3, [r4, r7]
 3656              	.LVL491:
 3657 011e FFF7FEFF 		bl	GetSequence
 3658              	.LVL492:
 3659 0122 0028     		cmp	r0, #0
 3660 0124 01DA     		bge	.L340
 3661              	.LVL493:
 3662              	.L342:
2353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3663              		.loc 1 2353 0
 3664 0126 8C23     		mov	r3, #140
 3665 0128 0BE0     		b	.L347
 3666              	.LVL494:
 3667              	.L340:
2355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                   &cert->keyOID, keyType, cert->maxIdx) < 0)
 3668              		.loc 1 2355 0
 3669 012a 221C     		mov	r2, r4
 3670 012c E359     		ldr	r3, [r4, r7]
 3671 012e 1C32     		add	r2, r2, #28
 3672 0130 0093     		str	r3, [sp]
 3673 0132 A059     		ldr	r0, [r4, r6]
 3674 0134 291C     		mov	r1, r5
 3675 0136 0223     		mov	r3, #2
 3676 0138 FFF7FEFF 		bl	GetAlgoId
 3677              	.LVL495:
 3678 013c 0028     		cmp	r0, #0
 3679 013e F2DB     		blt	.L342
2481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 3680              		.loc 1 2481 0
 3681 0140 9423     		mov	r3, #148
 3682              	.LVL496:
 3683              	.L347:
 3684 0142 5B42     		neg	r3, r3
 3685              	.L338:
 3686              	.LBE102:
 3687              	.LBE101:
 3688              	.LBE98:
 3689              	.LBE97:
3175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 143


 3690              		.loc 1 3175 0
 3691 0144 181C     		mov	r0, r3
 3692 0146 11B0     		add	sp, sp, #68
 3693              		@ sp needed
 3694              	.LVL497:
 3695              	.LVL498:
 3696 0148 F0BD     		pop	{r4, r5, r6, r7, pc}
 3697              		.cfi_endproc
 3698              	.LFE36:
 3699              		.size	DecodeToKey, .-DecodeToKey
 3700              		.section	.text.SetLength,"ax",%progbits
 3701              		.align	1
 3702              		.global	SetLength
 3703              		.code	16
 3704              		.thumb_func
 3705              		.type	SetLength, %function
 3706              	SetLength:
 3707              	.LFB40:
3225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 i = 0, j;
 3708              		.loc 1 3225 0
 3709              		.cfi_startproc
 3710              	.LVL499:
 3711 0000 10B5     		push	{r4, lr}
 3712              		.cfi_def_cfa_offset 8
 3713              		.cfi_offset 4, -8
 3714              		.cfi_offset 14, -4
3228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[i++] = (byte)length;
 3715              		.loc 1 3228 0
 3716 0002 7F28     		cmp	r0, #127
 3717 0004 02D8     		bhi	.L349
 3718              	.LVL500:
3229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
 3719              		.loc 1 3229 0
 3720 0006 0870     		strb	r0, [r1]
 3721 0008 0120     		mov	r0, #1
 3722              	.LVL501:
 3723 000a 1DE0     		b	.L350
 3724              	.LVL502:
 3725              	.L349:
 3726              	.LBB107:
 3727              	.LBB108:
 3728              	.LBB109:
 3729              	.LBB110:
3217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 3730              		.loc 1 3217 0
 3731 000c 020E     		lsr	r2, r0, #24
 3732 000e 0423     		mov	r3, #4
 3733 0010 002A     		cmp	r2, #0
 3734 0012 08D1     		bne	.L351
 3735              	.LVL503:
 3736 0014 020C     		lsr	r2, r0, #16
3216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (value >> ((i - 1) * WOLFSSL_BIT_SIZE))
 3737              		.loc 1 3216 0
 3738 0016 013B     		sub	r3, r3, #1
3217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 3739              		.loc 1 3217 0
 3740 0018 002A     		cmp	r2, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 144


 3741 001a 04D1     		bne	.L351
 3742              	.LVL504:
 3743 001c 030A     		lsr	r3, r0, #8
3216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (value >> ((i - 1) * WOLFSSL_BIT_SIZE))
 3744              		.loc 1 3216 0
 3745 001e 5A42     		neg	r2, r3
 3746 0020 5A41     		adc	r2, r2, r3
 3747 0022 0223     		mov	r3, #2
 3748 0024 9B1A     		sub	r3, r3, r2
 3749              	.LVL505:
 3750              	.L351:
 3751              	.LBE110:
 3752              	.LBE109:
3231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3753              		.loc 1 3231 0
 3754 0026 8022     		mov	r2, #128
 3755 0028 5242     		neg	r2, r2
 3756 002a 1A43     		orr	r2, r3
 3757 002c 0A70     		strb	r2, [r1]
 3758 002e 074A     		ldr	r2, .L359
 3759 0030 9A18     		add	r2, r3, r2
 3760 0032 D200     		lsl	r2, r2, #3
 3761              	.LVL506:
 3762              	.L357:
3233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             output[i] = (byte)(length >> ((j - 1) * WOLFSSL_BIT_SIZE));
 3763              		.loc 1 3233 0
 3764 0034 141C     		mov	r4, r2
 3765 0036 0131     		add	r1, r1, #1
 3766              	.LVL507:
 3767 0038 0834     		add	r4, r4, #8
 3768 003a 04D0     		beq	.L358
3234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             i++;
 3769              		.loc 1 3234 0
 3770 003c 041C     		mov	r4, r0
 3771 003e D440     		lsr	r4, r4, r2
 3772 0040 083A     		sub	r2, r2, #8
 3773 0042 0C70     		strb	r4, [r1]
 3774              	.LVL508:
 3775 0044 F6E7     		b	.L357
 3776              	.LVL509:
 3777              	.L358:
 3778 0046 581C     		add	r0, r3, #1
 3779              	.LVL510:
 3780              	.L350:
 3781              	.LBE108:
 3782              	.LBE107:
3240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3783              		.loc 1 3240 0
 3784              		@ sp needed
 3785 0048 10BD     		pop	{r4, pc}
 3786              	.L360:
 3787 004a C046     		.align	2
 3788              	.L359:
 3789 004c FFFFFF1F 		.word	536870911
 3790              		.cfi_endproc
 3791              	.LFE40:
 3792              		.size	SetLength, .-SetLength
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 145


 3793              		.section	.text.SetSequence,"ax",%progbits
 3794              		.align	1
 3795              		.global	SetSequence
 3796              		.code	16
 3797              		.thumb_func
 3798              		.type	SetSequence, %function
 3799              	SetSequence:
 3800              	.LFB41:
3244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_SEQUENCE | ASN_CONSTRUCTED;
 3801              		.loc 1 3244 0
 3802              		.cfi_startproc
 3803              	.LVL511:
 3804 0000 08B5     		push	{r3, lr}
 3805              		.cfi_def_cfa_offset 8
 3806              		.cfi_offset 3, -8
 3807              		.cfi_offset 14, -4
3245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
 3808              		.loc 1 3245 0
 3809 0002 3023     		mov	r3, #48
 3810 0004 0B70     		strb	r3, [r1]
3246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3811              		.loc 1 3246 0
 3812 0006 0131     		add	r1, r1, #1
 3813              	.LVL512:
 3814 0008 FFF7FEFF 		bl	SetLength
 3815              	.LVL513:
3247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3816              		.loc 1 3247 0
 3817              		@ sp needed
3246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3818              		.loc 1 3246 0
 3819 000c 0130     		add	r0, r0, #1
3247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3820              		.loc 1 3247 0
 3821 000e 08BD     		pop	{r3, pc}
 3822              		.cfi_endproc
 3823              	.LFE41:
 3824              		.size	SetSequence, .-SetSequence
 3825              		.section	.text.SetOctetString,"ax",%progbits
 3826              		.align	1
 3827              		.global	SetOctetString
 3828              		.code	16
 3829              		.thumb_func
 3830              		.type	SetOctetString, %function
 3831              	SetOctetString:
 3832              	.LFB42:
3250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_OCTET_STRING;
 3833              		.loc 1 3250 0
 3834              		.cfi_startproc
 3835              	.LVL514:
 3836 0000 08B5     		push	{r3, lr}
 3837              		.cfi_def_cfa_offset 8
 3838              		.cfi_offset 3, -8
 3839              		.cfi_offset 14, -4
3251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
 3840              		.loc 1 3251 0
 3841 0002 0423     		mov	r3, #4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 146


 3842 0004 0B70     		strb	r3, [r1]
3252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3843              		.loc 1 3252 0
 3844 0006 0131     		add	r1, r1, #1
 3845              	.LVL515:
 3846 0008 FFF7FEFF 		bl	SetLength
 3847              	.LVL516:
3253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3848              		.loc 1 3253 0
 3849              		@ sp needed
3252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3850              		.loc 1 3252 0
 3851 000c 0130     		add	r0, r0, #1
3253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3852              		.loc 1 3253 0
 3853 000e 08BD     		pop	{r3, pc}
 3854              		.cfi_endproc
 3855              	.LFE42:
 3856              		.size	SetOctetString, .-SetOctetString
 3857              		.section	.text.SetSet,"ax",%progbits
 3858              		.align	1
 3859              		.global	SetSet
 3860              		.code	16
 3861              		.thumb_func
 3862              		.type	SetSet, %function
 3863              	SetSet:
 3864              	.LFB43:
3257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_SET | ASN_CONSTRUCTED;
 3865              		.loc 1 3257 0
 3866              		.cfi_startproc
 3867              	.LVL517:
 3868 0000 08B5     		push	{r3, lr}
 3869              		.cfi_def_cfa_offset 8
 3870              		.cfi_offset 3, -8
 3871              		.cfi_offset 14, -4
3258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
 3872              		.loc 1 3258 0
 3873 0002 3123     		mov	r3, #49
 3874 0004 0B70     		strb	r3, [r1]
3259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3875              		.loc 1 3259 0
 3876 0006 0131     		add	r1, r1, #1
 3877              	.LVL518:
 3878 0008 FFF7FEFF 		bl	SetLength
 3879              	.LVL519:
3260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3880              		.loc 1 3260 0
 3881              		@ sp needed
3259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3882              		.loc 1 3259 0
 3883 000c 0130     		add	r0, r0, #1
3260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3884              		.loc 1 3260 0
 3885 000e 08BD     		pop	{r3, pc}
 3886              		.cfi_endproc
 3887              	.LFE43:
 3888              		.size	SetSet, .-SetSet
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 147


 3889              		.section	.text.SetImplicit,"ax",%progbits
 3890              		.align	1
 3891              		.global	SetImplicit
 3892              		.code	16
 3893              		.thumb_func
 3894              		.type	SetImplicit, %function
 3895              	SetImplicit:
 3896              	.LFB44:
3263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3897              		.loc 1 3263 0
 3898              		.cfi_startproc
 3899              	.LVL520:
3265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     | ASN_CONTEXT_SPECIFIC | number;
 3900              		.loc 1 3265 0
 3901 0000 1038     		sub	r0, r0, #16
 3902              	.LVL521:
3263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3903              		.loc 1 3263 0
 3904 0002 38B5     		push	{r3, r4, r5, lr}
 3905              		.cfi_def_cfa_offset 16
 3906              		.cfi_offset 3, -16
 3907              		.cfi_offset 4, -12
 3908              		.cfi_offset 5, -8
 3909              		.cfi_offset 14, -4
3265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     | ASN_CONTEXT_SPECIFIC | number;
 3910              		.loc 1 3265 0
 3911 0004 A025     		mov	r5, #160
 3912 0006 0128     		cmp	r0, #1
 3913 0008 00D9     		bls	.L365
 3914 000a 203D     		sub	r5, r5, #32
 3915              	.L365:
3265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     | ASN_CONTEXT_SPECIFIC | number;
 3916              		.loc 1 3265 0 is_stmt 0 discriminator 4
 3917 000c 2943     		orr	r1, r5
 3918              	.LVL522:
 3919 000e 1970     		strb	r1, [r3]
3267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3920              		.loc 1 3267 0 is_stmt 1 discriminator 4
 3921 0010 101C     		mov	r0, r2
 3922 0012 591C     		add	r1, r3, #1
 3923 0014 FFF7FEFF 		bl	SetLength
 3924              	.LVL523:
3268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3925              		.loc 1 3268 0 discriminator 4
 3926              		@ sp needed
3267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3927              		.loc 1 3267 0 discriminator 4
 3928 0018 0130     		add	r0, r0, #1
3268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3929              		.loc 1 3268 0 discriminator 4
 3930 001a 38BD     		pop	{r3, r4, r5, pc}
 3931              		.cfi_endproc
 3932              	.LFE44:
 3933              		.size	SetImplicit, .-SetImplicit
 3934              		.section	.text.SetExplicit,"ax",%progbits
 3935              		.align	1
 3936              		.global	SetExplicit
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 148


 3937              		.code	16
 3938              		.thumb_func
 3939              		.type	SetExplicit, %function
 3940              	SetExplicit:
 3941              	.LFB45:
3271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | number;
 3942              		.loc 1 3271 0
 3943              		.cfi_startproc
 3944              	.LVL524:
 3945 0000 08B5     		push	{r3, lr}
 3946              		.cfi_def_cfa_offset 8
 3947              		.cfi_offset 3, -8
 3948              		.cfi_offset 14, -4
3271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | number;
 3949              		.loc 1 3271 0
 3950 0002 031C     		mov	r3, r0
3272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
 3951              		.loc 1 3272 0
 3952 0004 6020     		mov	r0, #96
 3953              	.LVL525:
 3954 0006 4042     		neg	r0, r0
 3955 0008 0343     		orr	r3, r0
 3956 000a 1370     		strb	r3, [r2]
3273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3957              		.loc 1 3273 0
 3958 000c 0132     		add	r2, r2, #1
 3959              	.LVL526:
 3960 000e 081C     		mov	r0, r1
 3961 0010 111C     		mov	r1, r2
 3962              	.LVL527:
 3963 0012 FFF7FEFF 		bl	SetLength
 3964              	.LVL528:
3274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3965              		.loc 1 3274 0
 3966              		@ sp needed
3273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 3967              		.loc 1 3273 0
 3968 0016 0130     		add	r0, r0, #1
3274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 3969              		.loc 1 3274 0
 3970 0018 08BD     		pop	{r3, pc}
 3971              		.cfi_endproc
 3972              	.LFE45:
 3973              		.size	SetExplicit, .-SetExplicit
 3974              		.section	.text.SetAlgoID,"ax",%progbits
 3975              		.align	1
 3976              		.global	SetAlgoID
 3977              		.code	16
 3978              		.thumb_func
 3979              		.type	SetAlgoID, %function
 3980              	SetAlgoID:
 3981              	.LFB46:
3375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 tagSz, idSz, seqSz, algoSz = 0;
 3982              		.loc 1 3375 0
 3983              		.cfi_startproc
 3984              	.LVL529:
 3985 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 149


 3986              		.cfi_def_cfa_offset 20
 3987              		.cfi_offset 4, -20
 3988              		.cfi_offset 5, -16
 3989              		.cfi_offset 6, -12
 3990              		.cfi_offset 7, -8
 3991              		.cfi_offset 14, -4
 3992 0002 1F1C     		mov	r7, r3
3376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const  byte* algoName = 0;
 3993              		.loc 1 3376 0
 3994 0004 0023     		mov	r3, #0
 3995              	.LVL530:
3375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 tagSz, idSz, seqSz, algoSz = 0;
 3996              		.loc 1 3375 0
 3997 0006 87B0     		sub	sp, sp, #28
 3998              		.cfi_def_cfa_offset 48
3375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 tagSz, idSz, seqSz, algoSz = 0;
 3999              		.loc 1 3375 0
 4000 0008 0D1C     		mov	r5, r1
3376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     const  byte* algoName = 0;
 4001              		.loc 1 3376 0
 4002 000a 0293     		str	r3, [sp, #8]
 4003              	.LVL531:
3381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              (type == keyType && algoOID == RSAk)) ? 2 : 0;
 4004              		.loc 1 3381 0
 4005 000c 0224     		mov	r4, #2
 4006 000e 012A     		cmp	r2, #1
 4007 0010 07D9     		bls	.L369
3381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              (type == keyType && algoOID == RSAk)) ? 2 : 0;
 4008              		.loc 1 3381 0 is_stmt 0 discriminator 2
 4009 0012 1C1C     		mov	r4, r3
 4010 0014 022A     		cmp	r2, #2
 4011 0016 04D1     		bne	.L369
3381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              (type == keyType && algoOID == RSAk)) ? 2 : 0;
 4012              		.loc 1 3381 0
 4013 0018 1E4B     		ldr	r3, .L376
 4014 001a C418     		add	r4, r0, r3
 4015 001c 6342     		neg	r3, r4
 4016 001e 5C41     		adc	r4, r4, r3
 4017 0020 6400     		lsl	r4, r4, #1
 4018              	.L369:
 4019              	.LVL532:
3384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4020              		.loc 1 3384 0 is_stmt 1 discriminator 5
 4021 0022 111C     		mov	r1, r2
 4022              	.LVL533:
 4023 0024 02AA     		add	r2, sp, #8
 4024              	.LVL534:
 4025 0026 FFF7FEFF 		bl	OidFromId
 4026              	.LVL535:
 4027 002a 0090     		str	r0, [sp]
 4028              	.LVL536:
3386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Unknown Algorithm");
 4029              		.loc 1 3386 0 discriminator 5
 4030 002c 0028     		cmp	r0, #0
 4031 002e 2ED0     		beq	.L370
3391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(idSz + algoSz + 1 + tagSz + curveSz, seqArray);
 4032              		.loc 1 3391 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 150


 4033 0030 03A9     		add	r1, sp, #12
 4034 0032 0298     		ldr	r0, [sp, #8]
 4035              	.LVL537:
 4036 0034 FFF7FEFF 		bl	SetLength
 4037              	.LVL538:
 4038 0038 061C     		mov	r6, r0
 4039              	.LVL539:
 4040 003a 029B     		ldr	r3, [sp, #8]
 4041 003c 581C     		add	r0, r3, #1
 4042              	.LVL540:
 4043 003e C019     		add	r0, r0, r7
 4044 0040 0019     		add	r0, r0, r4
3392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  /* +1 for object id, curveID of curveSz follows for ecc */
 4045              		.loc 1 3392 0
 4046 0042 04AF     		add	r7, sp, #16
 4047              	.LVL541:
 4048 0044 391C     		mov	r1, r7
 4049 0046 8019     		add	r0, r0, r6
 4050 0048 FFF7FEFF 		bl	SetSequence
 4051              	.LVL542:
3394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4052              		.loc 1 3394 0
 4053 004c 431C     		add	r3, r0, #1
 4054 004e 0193     		str	r3, [sp, #4]
 4055              	.LVL543:
 4056 0050 0623     		mov	r3, #6
 4057              	.LVL544:
3396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz, ID_Length, idSz);
 4058              		.loc 1 3396 0
 4059 0052 391C     		mov	r1, r7
3394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4060              		.loc 1 3394 0
 4061 0054 3B54     		strb	r3, [r7, r0]
3396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz, ID_Length, idSz);
 4062              		.loc 1 3396 0
 4063 0056 019A     		ldr	r2, [sp, #4]
 4064 0058 281C     		mov	r0, r5
 4065 005a FFF7FEFF 		bl	memcpy
 4066              	.LVL545:
3397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz + idSz, algoName, algoSz);
 4067              		.loc 1 3397 0
 4068 005e 019B     		ldr	r3, [sp, #4]
 4069 0060 321C     		mov	r2, r6
 4070 0062 E818     		add	r0, r5, r3
 4071 0064 03A9     		add	r1, sp, #12
 4072 0066 FFF7FEFF 		bl	memcpy
 4073              	.LVL546:
3398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (tagSz == 2) {
 4074              		.loc 1 3398 0
 4075 006a 019B     		ldr	r3, [sp, #4]
 4076 006c 0099     		ldr	r1, [sp]
 4077 006e 9F19     		add	r7, r3, r6
 4078 0070 029E     		ldr	r6, [sp, #8]
 4079              	.LVL547:
 4080 0072 E819     		add	r0, r5, r7
 4081 0074 321C     		mov	r2, r6
 4082 0076 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 151


 4083              	.LVL548:
3399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[seqSz + idSz + algoSz] = ASN_TAG_NULL;
 4084              		.loc 1 3399 0
 4085 007a 022C     		cmp	r4, #2
 4086 007c 05D1     		bne	.L371
3400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[seqSz + idSz + algoSz + 1] = 0;
 4087              		.loc 1 3400 0
 4088 007e 0522     		mov	r2, #5
 4089 0080 BB19     		add	r3, r7, r6
 4090 0082 EA54     		strb	r2, [r5, r3]
3401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 4091              		.loc 1 3401 0
 4092 0084 ED18     		add	r5, r5, r3
 4093              	.LVL549:
 4094 0086 0023     		mov	r3, #0
 4095 0088 6B70     		strb	r3, [r5, #1]
 4096              	.L371:
 4097 008a A619     		add	r6, r4, r6
3404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4098              		.loc 1 3404 0
 4099 008c F019     		add	r0, r6, r7
 4100              	.LVL550:
 4101              	.L370:
3406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4102              		.loc 1 3406 0
 4103 008e 07B0     		add	sp, sp, #28
 4104              	.LVL551:
 4105              		@ sp needed
 4106              	.LVL552:
 4107 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 4108              	.L377:
 4109 0092 C046     		.align	2
 4110              	.L376:
 4111 0094 7BFDFFFF 		.word	-645
 4112              		.cfi_endproc
 4113              	.LFE46:
 4114              		.size	SetAlgoID, .-SetAlgoID
 4115              		.section	.text.wc_EncodeSignature,"ax",%progbits
 4116              		.align	1
 4117              		.global	wc_EncodeSignature
 4118              		.code	16
 4119              		.thumb_func
 4120              		.type	wc_EncodeSignature, %function
 4121              	wc_EncodeSignature:
 4122              	.LFB47:
3411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digArray[MAX_ENCODED_DIG_SZ];
 4123              		.loc 1 3411 0
 4124              		.cfi_startproc
 4125              	.LVL553:
 4126 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4127              		.cfi_def_cfa_offset 20
 4128              		.cfi_offset 4, -20
 4129              		.cfi_offset 5, -16
 4130              		.cfi_offset 6, -12
 4131              		.cfi_offset 7, -8
 4132              		.cfi_offset 14, -4
 4133 0002 1C1C     		mov	r4, r3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 152


 4134              	.LBB113:
 4135              	.LBB114:
3205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[1] = (byte)digSz;
 4136              		.loc 1 3205 0
 4137 0004 0423     		mov	r3, #4
 4138              	.LVL554:
 4139              	.LBE114:
 4140              	.LBE113:
3411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digArray[MAX_ENCODED_DIG_SZ];
 4141              		.loc 1 3411 0
 4142 0006 071C     		mov	r7, r0
 4143              	.LBB119:
 4144              	.LBB115:
3207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4145              		.loc 1 3207 0
 4146 0008 1E20     		mov	r0, #30
 4147              	.LVL555:
 4148              	.LBE115:
 4149              	.LBE119:
3411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digArray[MAX_ENCODED_DIG_SZ];
 4150              		.loc 1 3411 0
 4151 000a 9DB0     		sub	sp, sp, #116
 4152              		.cfi_def_cfa_offset 136
 4153              	.LVL556:
 4154              	.LBB120:
 4155              	.LBB116:
3205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[1] = (byte)digSz;
 4156              		.loc 1 3205 0
 4157 000c 09AE     		add	r6, sp, #36
 4158              	.LVL557:
 4159 000e 3370     		strb	r3, [r6]
3207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4160              		.loc 1 3207 0
 4161 0010 02AB     		add	r3, sp, #8
 4162              	.LBE116:
 4163              	.LBE120:
3411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digArray[MAX_ENCODED_DIG_SZ];
 4164              		.loc 1 3411 0
 4165 0012 151C     		mov	r5, r2
 4166              	.LBB121:
 4167              	.LBB117:
3207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4168              		.loc 1 3207 0
 4169 0014 C018     		add	r0, r0, r3
3206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&output[2], digest, digSz);
 4170              		.loc 1 3206 0
 4171 0016 7270     		strb	r2, [r6, #1]
3207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4172              		.loc 1 3207 0
 4173 0018 FFF7FEFF 		bl	memcpy
 4174              	.LVL558:
 4175              	.LBE117:
 4176              	.LBE121:
3418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz    = SetSequence(encDigSz + algoSz, seqArray);
 4177              		.loc 1 3418 0
 4178 001c 0022     		mov	r2, #0
 4179              	.LBB122:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 153


 4180              	.LBB118:
3209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 4181              		.loc 1 3209 0
 4182 001e AB1C     		add	r3, r5, #2
 4183 0020 0193     		str	r3, [sp, #4]
 4184              	.LBE118:
 4185              	.LBE122:
3418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz    = SetSequence(encDigSz + algoSz, seqArray);
 4186              		.loc 1 3418 0
 4187 0022 04A9     		add	r1, sp, #16
 4188 0024 131C     		mov	r3, r2
 4189 0026 201C     		mov	r0, r4
 4190 0028 FFF7FEFF 		bl	SetAlgoID
 4191              	.LVL559:
3419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4192              		.loc 1 3419 0
 4193 002c 019B     		ldr	r3, [sp, #4]
3418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz    = SetSequence(encDigSz + algoSz, seqArray);
 4194              		.loc 1 3418 0
 4195 002e 041C     		mov	r4, r0
 4196              	.LVL560:
3419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4197              		.loc 1 3419 0
 4198 0030 C318     		add	r3, r0, r3
 4199 0032 181C     		mov	r0, r3
 4200              	.LVL561:
 4201 0034 02A9     		add	r1, sp, #8
 4202 0036 0093     		str	r3, [sp]
 4203 0038 FFF7FEFF 		bl	SetSequence
 4204              	.LVL562:
 4205 003c 051C     		mov	r5, r0
 4206              	.LVL563:
3421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out + seqSz, algoArray, algoSz);
 4207              		.loc 1 3421 0
 4208 003e 02A9     		add	r1, sp, #8
 4209 0040 2A1C     		mov	r2, r5
 4210 0042 381C     		mov	r0, r7
 4211              	.LVL564:
 4212 0044 FFF7FEFF 		bl	memcpy
 4213              	.LVL565:
3422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out + seqSz + algoSz, digArray, encDigSz);
 4214              		.loc 1 3422 0
 4215 0048 04A9     		add	r1, sp, #16
 4216 004a 221C     		mov	r2, r4
 4217 004c 7819     		add	r0, r7, r5
 4218 004e FFF7FEFF 		bl	memcpy
 4219              	.LVL566:
3423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4220              		.loc 1 3423 0
 4221 0052 2819     		add	r0, r5, r4
 4222 0054 3818     		add	r0, r7, r0
 4223 0056 311C     		mov	r1, r6
 4224 0058 019A     		ldr	r2, [sp, #4]
 4225 005a FFF7FEFF 		bl	memcpy
 4226              	.LVL567:
3425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 4227              		.loc 1 3425 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 154


 4228 005e 009B     		ldr	r3, [sp]
 4229 0060 5819     		add	r0, r3, r5
3426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4230              		.loc 1 3426 0
 4231 0062 1DB0     		add	sp, sp, #116
 4232              		@ sp needed
 4233              	.LVL568:
 4234              	.LVL569:
 4235              	.LVL570:
 4236              	.LVL571:
 4237 0064 F0BD     		pop	{r4, r5, r6, r7, pc}
 4238              		.cfi_endproc
 4239              	.LFE47:
 4240              		.size	wc_EncodeSignature, .-wc_EncodeSignature
 4241              		.section	.text.wc_GetCTC_HashOID,"ax",%progbits
 4242              		.align	1
 4243              		.global	wc_GetCTC_HashOID
 4244              		.code	16
 4245              		.thumb_func
 4246              		.type	wc_GetCTC_HashOID, %function
 4247              	wc_GetCTC_HashOID:
 4248              	.LFB48:
3430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (type) {
 4249              		.loc 1 3430 0
 4250              		.cfi_startproc
 4251              	.LVL572:
3442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 4252              		.loc 1 3442 0
 4253 0000 5823     		mov	r3, #88
3431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_MD2
 4254              		.loc 1 3431 0
 4255 0002 0128     		cmp	r0, #1
 4256 0004 05D0     		beq	.L381
 4257 0006 0228     		cmp	r0, #2
 4258 0008 02D1     		bne	.L384
3446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
 4259              		.loc 1 3446 0
 4260 000a 4733     		add	r3, r3, #71
 4261 000c FF33     		add	r3, r3, #255
 4262 000e 00E0     		b	.L381
 4263              	.L384:
3457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     };
 4264              		.loc 1 3457 0
 4265 0010 0023     		mov	r3, #0
 4266              	.L381:
3459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4267              		.loc 1 3459 0
 4268 0012 181C     		mov	r0, r3
 4269              	.LVL573:
 4270              		@ sp needed
 4271 0014 7047     		bx	lr
 4272              		.cfi_endproc
 4273              	.LFE48:
 4274              		.size	wc_GetCTC_HashOID, .-wc_GetCTC_HashOID
 4275              		.section	.text.ParseCertRelative,"ax",%progbits
 4276              		.align	1
 4277              		.global	ParseCertRelative
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 155


 4278              		.code	16
 4279              		.thumb_func
 4280              		.type	ParseCertRelative, %function
 4281              	ParseCertRelative:
 4282              	.LFB64:
3777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int ConfirmNameConstraints(Signer* signer, DecodedCert* cert)
3780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (signer == NULL || cert == NULL)
3782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
3783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Check against the excluded list */
3785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (signer->excludedNames) {
3786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry* base = signer->excludedNames;
3787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (base != NULL) {
3789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (base->type == ASN_DNS_TYPE) {
3790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 DNS_entry* name = cert->altNames;
3791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 while (name != NULL) {
3792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (MatchBaseName(ASN_DNS_TYPE,
3793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           name->name, (int)XSTRLEN(name->name),
3794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           base->name, base->nameSz))
3795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         return 0;
3796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     name = name->next;
3797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (base->type == ASN_RFC822_TYPE) {
3800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 DNS_entry* name = cert->altEmailNames;
3801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 while (name != NULL) {
3802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (MatchBaseName(ASN_RFC822_TYPE,
3803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           name->name, (int)XSTRLEN(name->name),
3804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           base->name, base->nameSz))
3805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         return 0;
3806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     name = name->next;
3808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (base->type == ASN_DIR_TYPE) {
3811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (cert->subjectRawLen == base->nameSz &&
3812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCMP(cert->subjectRaw, base->name, base->nameSz) == 0) {
3813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return 0;
3815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             base = base->next;
3818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Check against the permitted list */
3822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (signer->permittedNames != NULL) {
3823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int needDns = 0;
3824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int matchDns = 0;
3825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int needEmail = 0;
3826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int matchEmail = 0;
3827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int needDir = 0;
3828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int matchDir = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 156


3829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry* base = signer->permittedNames;
3830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (base != NULL) {
3832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (base->type == ASN_DNS_TYPE) {
3833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 DNS_entry* name = cert->altNames;
3834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (name != NULL)
3836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     needDns = 1;
3837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 while (name != NULL) {
3839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     matchDns = MatchBaseName(ASN_DNS_TYPE,
3840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           name->name, (int)XSTRLEN(name->name),
3841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           base->name, base->nameSz);
3842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     name = name->next;
3843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (base->type == ASN_RFC822_TYPE) {
3846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 DNS_entry* name = cert->altEmailNames;
3847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (name != NULL)
3849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     needEmail = 1;
3850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 while (name != NULL) {
3852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     matchEmail = MatchBaseName(ASN_DNS_TYPE,
3853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           name->name, (int)XSTRLEN(name->name),
3854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           base->name, base->nameSz);
3855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     name = name->next;
3856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (base->type == ASN_DIR_TYPE) {
3859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 needDir = 1;
3860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (cert->subjectRaw != NULL &&
3861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->subjectRawLen == base->nameSz &&
3862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     XMEMCMP(cert->subjectRaw, base->name, base->nameSz) == 0) {
3863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     matchDir = 1;
3865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
3866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             base = base->next;
3868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((needDns && !matchDns) || (needEmail && !matchEmail) ||
3871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             (needDir && !matchDir)) {
3872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
3874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 1;
3878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
3879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
3881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeAltNames(byte* input, int sz, DecodedCert* cert)
3884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
3885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 157


3886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
3887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeAltNames");
3889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0) {
3891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tBad Sequence");
3892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
3893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
3894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->weOwnAltNames = 1;
3896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (length > 0) {
3898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte       b = input[idx++];
3899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         length--;
3901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Save DNS Type names in the altNames list. */
3903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Save Other Type names in the cert's OidMap */
3904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b == (ASN_CONTEXT_SPECIFIC | ASN_DNS_TYPE)) {
3905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             DNS_entry* dnsEntry;
3906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int strLen;
3907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 lenStartIdx = idx;
3908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
3910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str length");
3911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= (idx - lenStartIdx);
3914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dnsEntry = (DNS_entry*)XMALLOC(sizeof(DNS_entry), cert->heap,
3916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         DYNAMIC_TYPE_ALTNAME);
3917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dnsEntry == NULL) {
3918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
3919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dnsEntry->name = (char*)XMALLOC(strLen + 1, cert->heap,
3923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          DYNAMIC_TYPE_ALTNAME);
3924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (dnsEntry->name == NULL) {
3925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
3926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(dnsEntry, cert->heap, DYNAMIC_TYPE_ALTNAME);
3927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(dnsEntry->name, &input[idx], strLen);
3931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dnsEntry->name[strLen] = '\0';
3932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dnsEntry->next = cert->altNames;
3934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->altNames = dnsEntry;
3935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= strLen;
3937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx    += strLen;
3938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
3940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (b == (ASN_CONTEXT_SPECIFIC | ASN_RFC822_TYPE)) {
3941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             DNS_entry* emailEntry;
3942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int strLen;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 158


3943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 lenStartIdx = idx;
3944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
3946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str length");
3947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= (idx - lenStartIdx);
3950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             emailEntry = (DNS_entry*)XMALLOC(sizeof(DNS_entry), cert->heap,
3952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         DYNAMIC_TYPE_ALTNAME);
3953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (emailEntry == NULL) {
3954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
3955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             emailEntry->name = (char*)XMALLOC(strLen + 1, cert->heap,
3959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          DYNAMIC_TYPE_ALTNAME);
3960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (emailEntry->name == NULL) {
3961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
3962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(emailEntry, cert->heap, DYNAMIC_TYPE_ALTNAME);
3963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(emailEntry->name, &input[idx], strLen);
3967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             emailEntry->name[strLen] = '\0';
3968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             emailEntry->next = cert->altEmailNames;
3970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->altEmailNames = emailEntry;
3971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= strLen;
3973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx    += strLen;
3974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
3975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
3976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SEP
3977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (b == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | ASN_OTHER_TYPE))
3978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
3979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int strLen;
3980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 lenStartIdx = idx;
3981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 oid = 0;
3982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
3984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: other name length");
3985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* Consume the rest of this sequence. */
3988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= (strLen + idx - lenStartIdx);
3989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetObjectId(input, &idx, &oid, certAltNameType, sz) < 0) {
3991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tbad OID");
3992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
3995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (oid != HW_NAME_OID) {
3996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tincorrect OID");
3997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
3998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
3999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 159


4000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (input[idx++] != (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED)) {
4001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\twrong type");
4002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
4006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str len");
4007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetSequence(input, &idx, &strLen, sz) < 0) {
4011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tBad Sequence");
4012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (input[idx++] != ASN_OBJECT_ID) {
4016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\texpected OID");
4017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
4021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfailed: str len");
4022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->hwType = (byte*)XMALLOC(strLen, cert->heap,
4026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                           DYNAMIC_TYPE_X509_EXT);
4027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (cert->hwType == NULL) {
4028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
4029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
4030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(cert->hwType, &input[idx], strLen);
4033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->hwTypeSz = strLen;
4034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += strLen;
4035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (input[idx++] != ASN_OCTET_STRING) {
4037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\texpected Octet String");
4038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
4042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfailed: str len");
4043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->hwSerialNum = (byte*)XMALLOC(strLen + 1, cert->heap,
4047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                DYNAMIC_TYPE_X509_EXT);
4048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (cert->hwSerialNum == NULL) {
4049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
4050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
4051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(cert->hwSerialNum, &input[idx], strLen);
4054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->hwSerialNum[strLen] = '\0';
4055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->hwSerialNumSz = strLen;
4056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += strLen;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 160


4057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_SEP */
4059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
4060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int strLen;
4061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 lenStartIdx = idx;
4062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tUnsupported name type, skipping");
4064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &strLen, sz) < 0) {
4066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: unsupported name length");
4067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length -= (strLen + idx - lenStartIdx);
4070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += strLen;
4071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeBasicCaConstraint(byte* input, int sz, DecodedCert* cert)
4078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
4081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeBasicCaConstraint");
4083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0) {
4084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: bad SEQUENCE");
4085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length == 0)
4089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
4090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* If the basic ca constraint is false, this extension may be named, but
4092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * left empty. So, if the length is 0, just return. */
4093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_BOOLEAN)
4095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: constraint not BOOLEAN");
4097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &idx, &length, sz) < 0)
4101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: length");
4103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++])
4107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->isCA = 1;
4108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
4110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* If there isn't any more data, return. */
4111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (idx >= (word32)sz)
4112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return 0;
4113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 161


4114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Anything left should be the optional pathlength */
4115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx++] != ASN_INTEGER) {
4116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: pathlen not INTEGER");
4117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx++] != 1) {
4121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: pathlen too long");
4122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->pathLength = input[idx];
4126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extBasicConstPlSet = 1;
4127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* OPENSSL_EXTRA */
4128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #define CRLDP_FULL_NAME 0
4134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* From RFC3280 SS4.2.1.14, Distribution Point Name*/
4135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #define GENERALNAME_URI 6
4136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* From RFC3280 SS4.2.1.7, GeneralName */
4137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeCrlDist(byte* input, int sz, DecodedCert* cert)
4139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
4142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeCrlDist");
4144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Unwrap the list of Distribution Points*/
4146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0)
4147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Unwrap a single Distribution Point */
4150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0)
4151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* The Distribution Point has three explicit optional members
4154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      *  First check for a DistributionPointName
4155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      */
4156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 0))
4157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx++;
4159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
4160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx] ==
4163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | CRLDP_FULL_NAME))
4164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
4165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx++;
4166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &length, sz) < 0)
4167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (input[idx] == (ASN_CONTEXT_SPECIFIC | GENERALNAME_URI))
4170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 162


4171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx++;
4172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (GetLength(input, &idx, &length, sz) < 0)
4173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extCrlInfoSz = length;
4176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extCrlInfo = input + idx;
4177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += length;
4178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else
4180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* This isn't a URI, skip it. */
4181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += length;
4182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
4184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* This isn't a FULLNAME, skip it. */
4185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += length;
4186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Check for reasonFlags */
4189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx < (word32)sz &&
4190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         input[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 1))
4191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx++;
4193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
4194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
4196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Check for cRLIssuer */
4199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx < (word32)sz &&
4200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         input[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 2))
4201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx++;
4203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
4204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
4206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx < (word32)sz)
4209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tThere are more CRL Distribution Point records, "
4211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    "but we only use the first one.");
4212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeAuthInfo(byte* input, int sz, DecodedCert* cert)
4219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /*
4220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *  Read the first of the Authority Information Access records. If there are
4221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *  any issues, return without saving the record.
4222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  */
4223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
4226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte b;
4227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 oid;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 163


4228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeAuthInfo");
4230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Unwrap the list of AIAs */
4232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0)
4233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < (word32)sz) {
4236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Unwrap a single AIA */
4237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, &idx, &length, sz) < 0)
4238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         oid = 0;
4241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certAuthInfoType, sz) < 0)
4242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Only supporting URIs right now. */
4245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[idx++];
4246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
4247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b == (ASN_CONTEXT_SPECIFIC | GENERALNAME_URI) &&
4250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid == AIA_OCSP_OID)
4251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
4252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->extAuthInfoSz = length;
4253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->extAuthInfo = input + idx;
4254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
4255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
4257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeAuthKeyId(byte* input, int sz, DecodedCert* cert)
4264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0, ret = 0;
4267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeAuthKeyId");
4269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0) {
4271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE\n");
4272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != (ASN_CONTEXT_SPECIFIC | 0)) {
4276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tinfo: OPTIONAL item 0, not available\n");
4277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
4278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &idx, &length, sz) < 0) {
4281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: extension data length");
4282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 164


4285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
4286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extAuthKeyIdSrc = &input[idx];
4287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extAuthKeyIdSz = length;
4288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* OPENSSL_EXTRA */
4289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length == KEYID_SIZE) {
4291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cert->extAuthKeyId, input + idx, length);
4292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
4294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef NO_SHA
4295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_Sha256Hash(input + idx, length, cert->extAuthKeyId);
4296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
4297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_ShaHash(input + idx, length, cert->extAuthKeyId);
4298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
4302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeSubjKeyId(byte* input, int sz, DecodedCert* cert)
4306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0, ret = 0;
4309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeSubjKeyId");
4311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_OCTET_STRING) {
4313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be an OCTET STRING");
4314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &idx, &length, sz) < 0) {
4318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: extension data length");
4319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
4323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extSubjKeyIdSrc = &input[idx];
4324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extSubjKeyIdSz = length;
4325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* OPENSSL_EXTRA */
4326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length == SIGNER_DIGEST_SIZE) {
4328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cert->extSubjKeyId, input + idx, length);
4329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
4331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef NO_SHA
4332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_Sha256Hash(input + idx, length, cert->extSubjKeyId);
4333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
4334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_ShaHash(input + idx, length, cert->extSubjKeyId);
4335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
4339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 165


4342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeKeyUsage(byte* input, int sz, DecodedCert* cert)
4343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
4346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeKeyUsage");
4347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_BIT_STRING) {
4349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: key usage expected bit string");
4350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &idx, &length, sz) < 0) {
4354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: key usage bad length");
4355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* pass the unusedBits value */
4359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx++; length--;
4360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->extKeyUsage = (word16)(input[idx]);
4362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length == 2)
4363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extKeyUsage |= (word16)(input[idx+1] << 8);
4364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeExtKeyUsage(byte* input, int sz, DecodedCert* cert)
4370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0, oid;
4372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
4373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeExtKeyUsage");
4375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0) {
4377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
4378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef OPENSSL_EXTRA
4382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extExtKeyUsageSrc = input + idx;
4383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extExtKeyUsageSz = length;
4384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < (word32)sz) {
4387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certKeyUseType, sz) < 0)
4388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         switch (oid) {
4391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EKU_ANY_OID:
4392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extExtKeyUsage |= EXTKEYUSE_ANY;
4393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EKU_SERVER_AUTH_OID:
4395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extExtKeyUsage |= EXTKEYUSE_SERVER_AUTH;
4396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EKU_CLIENT_AUTH_OID:
4398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extExtKeyUsage |= EXTKEYUSE_CLIENT_AUTH;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 166


4399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EKU_OCSP_SIGN_OID:
4401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extExtKeyUsage |= EXTKEYUSE_OCSP_SIGN;
4402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifdef OPENSSL_EXTRA
4406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->extExtKeyUsageCount++;
4407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif
4408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
4415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeSubtree(byte* input, int sz, Base_entry** head, void* heap)
4416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
4420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < (word32)sz) {
4422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int seqLength, strLength;
4423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 nameIdx;
4424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte b;
4425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, &idx, &seqLength, sz) < 0) {
4427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be a SEQUENCE");
4428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         nameIdx = idx;
4432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[nameIdx++];
4433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &nameIdx, &strLength, sz) <= 0) {
4434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid length");
4435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b == (ASN_CONTEXT_SPECIFIC | ASN_DNS_TYPE) ||
4439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b == (ASN_CONTEXT_SPECIFIC | ASN_RFC822_TYPE) ||
4440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | ASN_DIR_TYPE)) {
4441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             Base_entry* entry = (Base_entry*)XMALLOC(sizeof(Base_entry),
4443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                     heap, DYNAMIC_TYPE_ALTNAME);
4444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (entry == NULL) {
4446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("allocate error");
4447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
4448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             entry->name = (char*)XMALLOC(strLength, heap, DYNAMIC_TYPE_ALTNAME);
4451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (entry->name == NULL) {
4452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("allocate error");
4453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(entry, heap, DYNAMIC_TYPE_ALTNAME);
4454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
4455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 167


4456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(entry->name, &input[nameIdx], strLength);
4458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             entry->nameSz = strLength;
4459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             entry->type = b & 0x0F;
4460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             entry->next = *head;
4462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *head = entry;
4463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += seqLength;
4466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeNameConstraints(byte* input, int sz, DecodedCert* cert)
4473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
4476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeNameConstraints");
4478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0) {
4480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
4481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < (word32)sz) {
4485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte b = input[idx++];
4486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry** subtree = NULL;
4487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) <= 0) {
4489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid length");
4490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | 0))
4494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             subtree = &cert->permittedNames;
4495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (b == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | 1))
4496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             subtree = &cert->excludedNames;
4497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
4498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid subtree");
4499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         DecodeSubtree(input + idx, length, subtree, cert->heap);
4503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
4505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
4510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_ASN_TIME */
4511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_CERT_EXT) && !defined(WOLFSSL_SEP)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 168


4513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int Word32ToString(char* d, word32 number)
4515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i = 0;
4517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (d != NULL) {
4519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 order = 1000000000;
4520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 digit;
4521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (number == 0) {
4523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             d[i++] = '0';
4524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
4526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (order) {
4527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 digit = number / order;
4528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (i > 0 || digit != 0) {
4529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     d[i++] = (char)digit + '0';
4530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
4531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (digit != 0)
4532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     number %= digit * order;
4533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (order > 1)
4534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     order /= 10;
4535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 else
4536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     order = 0;
4537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         d[i] = 0;
4540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return i;
4543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Decode ITU-T X.690 OID format to a string representation
4547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * return string length */
4548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodePolicyOID(char *out, word32 outSz, byte *in, word32 inSz)
4549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 val, idx = 0, nb_bytes;
4551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     size_t w_bytes = 0;
4552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL || in == NULL || outSz < 4 || inSz < 2)
4554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
4555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* first two byte must be interpreted as : 40 * int1 + int2 */
4557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     val = (word16)in[idx++];
4558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     w_bytes = Word32ToString(out, val / 40);
4560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     out[w_bytes++] = '.';
4561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     w_bytes += Word32ToString(out+w_bytes, val % 40);
4562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < inSz) {
4564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* init value */
4565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         val = 0;
4566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         nb_bytes = 0;
4567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check that output size is ok */
4569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (w_bytes > (outSz - 3))
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 169


4570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return BUFFER_E;
4571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* first bit is used to set if value is coded on 1 or multiple bytes */
4573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while ((in[idx+nb_bytes] & 0x80))
4574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             nb_bytes++;
4575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (!nb_bytes)
4577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             val = (word32)(in[idx++] & 0x7f);
4578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
4579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32 base = 1, tmp = nb_bytes;
4580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (tmp != 0) {
4582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 val += (word32)(in[idx+tmp] & 0x7f) * base;
4583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 base *= 128;
4584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 tmp--;
4585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             val += (word32)(in[idx++] & 0x7f) * base;
4587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += nb_bytes;
4589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         out[w_bytes++] = '.';
4592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         w_bytes += Word32ToString(out+w_bytes, val);
4593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
4596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT && !WOLFSSL_SEP */
4598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_SEP) || defined(WOLFSSL_CERT_EXT)
4600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Reference: https://tools.ietf.org/html/rfc5280#section-4.2.1.4 */
4601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static int DecodeCertPolicy(byte* input, int sz, DecodedCert* cert)
4602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
4603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 idx = 0;
4604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int total_length = 0, policy_length = 0, length = 0;
4605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_ENTER("DecodeCertPolicy");
4607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, &idx, &total_length, sz) < 0) {
4609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tGet CertPolicy total seq failed");
4610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Validate total length (2 is the CERT_POLICY_OID+SEQ) */
4614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((total_length + 2) != sz) {
4615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tCertPolicy length mismatch");
4616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Unwrap certificatePolicies */
4620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         do {
4621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetSequence(input, &idx, &policy_length, sz) < 0) {
4622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tGet CertPolicy seq failed");
4623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (input[idx++] != ASN_OBJECT_ID) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 170


4627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tCertPolicy isn't OID");
4628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             policy_length--;
4631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &length, sz) < 0) {
4633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tGet CertPolicy length failed");
4634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             policy_length--;
4637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (length > 0) {
4639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* Verify length won't overrun buffer */
4640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (length > (sz - (int)idx)) {
4641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("\tCertPolicy length exceeds input buffer");
4642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
4644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(WOLFSSL_SEP)
4646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->deviceType = (byte*)XMALLOC(length, cert->heap,
4647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                   DYNAMIC_TYPE_X509_EXT);
4648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (cert->deviceType == NULL) {
4649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("\tCouldn't alloc memory for deviceType");
4650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return MEMORY_E;
4651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
4652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->deviceTypeSz = length;
4653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(cert->deviceType, input + idx, length);
4654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #elif defined(WOLFSSL_CERT_EXT)
4656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* decode cert policy */
4657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodePolicyOID(cert->extCertPolicies[cert->extCertPoliciesNb], MAX_CERTPOL_SZ,
4658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                     input + idx, length) != 0) {
4659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("\tCouldn't decode CertPolicy");
4660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
4662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extCertPoliciesNb++;
4663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
4664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_LEAVE("DecodeCertPolicy : unsupported mode", 0);
4665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return 0;
4666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += policy_length;
4669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         } while((int)idx < total_length
4670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(WOLFSSL_CERT_EXT)
4671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             && cert->extCertPoliciesNb < MAX_CERTPOL_NB
4672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         );
4674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_LEAVE("DecodeCertPolicy", 0);
4676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
4677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_SEP */
4679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
4681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeCertExtensions(DecodedCert* cert)
4682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /*
4683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *  Processing the Certificate Extensions. This does not modify the current
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 171


4684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  *  index. It is works starting with the recorded extensions pointer.
4685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  */
4686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
4688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int sz = cert->extensionsSz;
4689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* input = cert->extensions;
4690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
4691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 oid;
4692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte critical = 0;
4693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte criticalFail = 0;
4694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeCertExtensions");
4696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input == NULL || sz == 0)
4698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
4699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_EXTENSIONS) {
4701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be an EXTENSIONS");
4702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, &idx, &length, sz) < 0) {
4706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: invalid length");
4707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, &idx, &length, sz) < 0) {
4711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE (1)");
4712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
4713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < (word32)sz) {
4716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, &idx, &length, sz) < 0) {
4717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be a SEQUENCE");
4718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         oid = 0;
4722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certExtType, sz) < 0) {
4723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: OBJECT ID");
4724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check for critical flag */
4728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         critical = 0;
4729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx] == ASN_BOOLEAN) {
4730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int boolLength = 0;
4731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx++;
4732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &boolLength, sz) < 0) {
4733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: critical boolean length");
4734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
4735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (input[idx++])
4737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 critical = 1;
4738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* process the extension based on the OID */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 172


4741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx++] != ASN_OCTET_STRING) {
4742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be an OCTET STRING");
4743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0) {
4747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: extension data length");
4748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
4749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         switch (oid) {
4752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case BASIC_CA_OID:
4753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extBasicConstSet = 1;
4755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extBasicConstCrit = critical;
4756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeBasicCaConstraint(&input[idx], length, cert) < 0)
4758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case CRL_DIST_OID:
4762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeCrlDist(&input[idx], length, cert) < 0)
4763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case AUTH_INFO_OID:
4767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeAuthInfo(&input[idx], length, cert) < 0)
4768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case ALT_NAMES_OID:
4772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extSubjAltNameSet = 1;
4774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extSubjAltNameCrit = critical;
4775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeAltNames(&input[idx], length, cert) < 0)
4777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case AUTH_KEY_OID:
4781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extAuthKeyIdSet = 1;
4782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extAuthKeyIdCrit = critical;
4784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeAuthKeyId(&input[idx], length, cert) < 0)
4786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case SUBJ_KEY_OID:
4790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extSubjKeyIdSet = 1;
4791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extSubjKeyIdCrit = critical;
4793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeSubjKeyId(&input[idx], length, cert) < 0)
4795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 173


4798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case CERT_POLICY_OID:
4799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef WOLFSSL_SEP
4800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     #ifdef OPENSSL_EXTRA
4801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->extCertPolicySet = 1;
4802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->extCertPolicyCrit = critical;
4803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     #endif
4804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #if defined(WOLFSSL_SEP) || defined(WOLFSSL_CERT_EXT)
4806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (DecodeCertPolicy(&input[idx], length, cert) < 0) {
4807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         return ASN_PARSE_E;
4808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
4809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #else
4810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     WOLFSSL_MSG("Certificate Policy extension not supported yet.");
4811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case KEY_USAGE_OID:
4815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extKeyUsageSet = 1;
4816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extKeyUsageCrit = critical;
4818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeKeyUsage(&input[idx], length, cert) < 0)
4820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EXT_KEY_USAGE_OID:
4824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extExtKeyUsageSet = 1;
4825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extExtKeyUsageCrit = critical;
4827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeExtKeyUsage(&input[idx], length, cert) < 0)
4829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             #ifndef IGNORE_NAME_CONSTRAINTS
4833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case NAME_CONS_OID:
4834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extNameConstraintSet = 1;
4835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
4836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->extNameConstraintCrit = critical;
4837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #endif
4838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (DecodeNameConstraints(&input[idx], length, cert) < 0)
4839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
4840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             #endif /* IGNORE_NAME_CONSTRAINTS */
4842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case INHIBIT_ANY_OID:
4844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Inhibit anyPolicy extension not supported yet.");
4845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
4846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             default:
4848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* While it is a failure to not support critical extensions,
4849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  * still parse the certificate ignoring the unsupported
4850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  * extension to allow caller to accept it with the verify
4851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  * callback. */
4852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (critical)
4853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     criticalFail = 1;
4854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 174


4855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
4857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return criticalFail ? ASN_CRIT_EXT_E : 0;
4860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int ParseCert(DecodedCert* cert, int type, int verify, void* cm)
4864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int   ret;
4866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char* ptr;
4867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = ParseCertRelative(cert, type, verify, cm);
4869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0)
4870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
4871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->subjectCNLen > 0) {
4873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ptr = (char*) XMALLOC(cert->subjectCNLen + 1, cert->heap,
4874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               DYNAMIC_TYPE_SUBJECT_CN);
4875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ptr == NULL)
4876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
4877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(ptr, cert->subjectCN, cert->subjectCNLen);
4878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ptr[cert->subjectCNLen] = '\0';
4879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectCN = ptr;
4880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectCNStored = 1;
4881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyOID == RSAk &&
4884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           cert->publicKey != NULL  && cert->pubKeySize > 0) {
4885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ptr = (char*) XMALLOC(cert->pubKeySize, cert->heap,
4886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               DYNAMIC_TYPE_PUBLIC_KEY);
4887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ptr == NULL)
4888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
4889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(ptr, cert->publicKey, cert->pubKeySize);
4890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->publicKey = (byte *)ptr;
4891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->pubKeyStored = 1;
4892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
4895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
4897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* from SSL proper, for locking can't do find here anymore */
4900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef __cplusplus
4901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     extern "C" {
4902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
4903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_LOCAL Signer* GetCA(void* signers, byte* hash);
4904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_SKID
4905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_LOCAL Signer* GetCAByName(void* signers, byte* hash);
4906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef __cplusplus
4908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
4910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 175


4912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFCRYPT_ONLY) || defined(NO_CERTS)
4913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* dummy functions, not using wolfSSL so don't need actual ones */
4915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** Signer* GetCA(void* signers, byte* hash)
4916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)hash;
4918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return (Signer*)signers;
4920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_SKID
4923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** Signer* GetCAByName(void* signers, byte* hash)
4924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
4925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)hash;
4926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return (Signer*)signers;
4928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
4929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_SKID */
4930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFCRYPT_ONLY || NO_CERTS */
4932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_ASN_TIME
4934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int ParseCertRelative(DecodedCert* cert, int type, int verify, void* cm)
4935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 4283              		.loc 1 4935 0
 4284              		.cfi_startproc
 4285              	.LVL574:
 4286 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4287              		.cfi_def_cfa_offset 20
 4288              		.cfi_offset 4, -20
 4289              		.cfi_offset 5, -16
 4290              		.cfi_offset 6, -12
 4291              		.cfi_offset 7, -8
 4292              		.cfi_offset 14, -4
 4293 0002 9FB0     		sub	sp, sp, #124
 4294              		.cfi_def_cfa_offset 144
 4295              		.loc 1 4935 0
 4296 0004 0B91     		str	r1, [sp, #44]
4936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 confirmOID;
4937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    ret;
4938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    badDate     = 0;
4939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    criticalExt = 0;
4940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((ret = DecodeToKey(cert, verify)) < 0) {
 4297              		.loc 1 4941 0
 4298 0006 111C     		mov	r1, r2
 4299              	.LVL575:
4935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 confirmOID;
 4300              		.loc 1 4935 0
 4301 0008 0D93     		str	r3, [sp, #52]
 4302 000a 071C     		mov	r7, r0
 4303 000c 0C92     		str	r2, [sp, #48]
 4304              		.loc 1 4941 0
 4305 000e FFF7FEFF 		bl	DecodeToKey
 4306              	.LVL576:
 4307 0012 0590     		str	r0, [sp, #20]
 4308              	.LVL577:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 176


 4309 0014 031E     		sub	r3, r0, #0
 4310 0016 05DA     		bge	.L483
4942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret == ASN_BEFORE_DATE_E || ret == ASN_AFTER_DATE_E)
 4311              		.loc 1 4942 0
 4312 0018 021C     		mov	r2, r0
 4313 001a 9732     		add	r2, r2, #151
 4314 001c 012A     		cmp	r2, #1
 4315 001e 00D9     		bls	.LCB4374
 4316 0020 EAE3     		b	.L387	@long jump
 4317              	.LCB4374:
 4318 0022 01E0     		b	.L386
 4319              	.L483:
4938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    criticalExt = 0;
 4320              		.loc 1 4938 0
 4321 0024 0023     		mov	r3, #0
 4322 0026 0593     		str	r3, [sp, #20]
 4323              	.L386:
 4324              	.LVL578:
4943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             badDate = ret;
4944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
4945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ret;
4946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_MSG("Parsed Past Key");
4949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->srcIdx < cert->sigIndex) {
 4325              		.loc 1 4950 0
 4326 0028 9E23     		mov	r3, #158
 4327 002a 9B00     		lsl	r3, r3, #2
 4328 002c FB58     		ldr	r3, [r7, r3]
 4329 002e 3A69     		ldr	r2, [r7, #16]
 4330 0030 9342     		cmp	r3, r2
 4331 0032 00D3     		bcc	.LCB4389
 4332 0034 66E3     		b	.L485	@long jump
 4333              	.LCB4389:
4951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifndef ALLOW_V1_EXTENSIONS
4952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (cert->version < 2) {
 4334              		.loc 1 4952 0
 4335 0036 396A     		ldr	r1, [r7, #32]
 4336 0038 0129     		cmp	r1, #1
 4337 003a 00DC     		bgt	.LCB4393
 4338 003c D8E3     		b	.L486	@long jump
 4339              	.LCB4393:
4953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("    v1 and v2 certs not allowed extensions");
4954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_VERSION_E;
4955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
4956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif
4957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* save extensions */
4958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extensions    = &cert->source[cert->srcIdx];
 4340              		.loc 1 4958 0
 4341 003e 9D21     		mov	r1, #157
 4342 0040 8900     		lsl	r1, r1, #2
 4343 0042 7958     		ldr	r1, [r7, r1]
4959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extensionsSz  =  cert->sigIndex - cert->srcIdx;
 4344              		.loc 1 4959 0
 4345 0044 D21A     		sub	r2, r2, r3
4958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extensionsSz  =  cert->sigIndex - cert->srcIdx;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 177


 4346              		.loc 1 4958 0
 4347 0046 C918     		add	r1, r1, r3
 4348 0048 0391     		str	r1, [sp, #12]
 4349 004a AA21     		mov	r1, #170
 4350              		.loc 1 4959 0
 4351 004c 0492     		str	r2, [sp, #16]
 4352 004e AB22     		mov	r2, #171
4958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extensionsSz  =  cert->sigIndex - cert->srcIdx;
 4353              		.loc 1 4958 0
 4354 0050 0398     		ldr	r0, [sp, #12]
 4355              	.LVL579:
 4356 0052 8900     		lsl	r1, r1, #2
 4357 0054 7850     		str	r0, [r7, r1]
 4358              		.loc 1 4959 0
 4359 0056 0499     		ldr	r1, [sp, #16]
 4360 0058 9200     		lsl	r2, r2, #2
 4361 005a B950     		str	r1, [r7, r2]
4960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extensionsIdx = cert->srcIdx;   /* for potential later use */
 4362              		.loc 1 4960 0
 4363 005c 0432     		add	r2, r2, #4
 4364 005e BB50     		str	r3, [r7, r2]
 4365              	.LVL580:
 4366              	.LBB169:
 4367              	.LBB170:
4697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
 4368              		.loc 1 4697 0
 4369 0060 0028     		cmp	r0, #0
 4370 0062 00D1     		bne	.LCB4420
 4371 0064 46E3     		b	.L488	@long jump
 4372              	.LCB4420:
 4373 0066 0029     		cmp	r1, #0
 4374 0068 00D1     		bne	.LCB4422
 4375 006a 43E3     		b	.L488	@long jump
 4376              	.LCB4422:
4700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be an EXTENSIONS");
 4377              		.loc 1 4700 0
 4378 006c 0123     		mov	r3, #1
 4379 006e 0E93     		str	r3, [sp, #56]
 4380 0070 0378     		ldrb	r3, [r0]
 4381 0072 A32B     		cmp	r3, #163
 4382 0074 00D0     		beq	.LCB4427
 4383 0076 7FE3     		b	.L499	@long jump
 4384              	.LCB4427:
4705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: invalid length");
 4385              		.loc 1 4705 0
 4386 0078 0398     		ldr	r0, [sp, #12]
 4387 007a 0EA9     		add	r1, sp, #56
 4388              	.LVL581:
 4389 007c 0FAA     		add	r2, sp, #60
 4390 007e 049B     		ldr	r3, [sp, #16]
 4391 0080 FFF7FEFF 		bl	GetLength
 4392              	.LVL582:
 4393 0084 0028     		cmp	r0, #0
 4394 0086 00DA     		bge	.LCB4440
 4395 0088 76E3     		b	.L499	@long jump
 4396              	.LCB4440:
4710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE (1)");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 178


 4397              		.loc 1 4710 0
 4398 008a 0398     		ldr	r0, [sp, #12]
 4399 008c 0EA9     		add	r1, sp, #56
 4400 008e 0FAA     		add	r2, sp, #60
 4401 0090 049B     		ldr	r3, [sp, #16]
 4402 0092 FFF7FEFF 		bl	GetSequence
 4403              	.LVL583:
 4404 0096 0028     		cmp	r0, #0
 4405 0098 00DA     		bge	.LCB4448
 4406 009a 6DE3     		b	.L499	@long jump
 4407              	.LCB4448:
 4408 009c 0023     		mov	r3, #0
 4409 009e 0993     		str	r3, [sp, #36]
 4410              	.LVL584:
 4411              	.L392:
4715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(input, &idx, &length, sz) < 0) {
 4412              		.loc 1 4715 0
 4413 00a0 0E9B     		ldr	r3, [sp, #56]
 4414 00a2 049A     		ldr	r2, [sp, #16]
 4415 00a4 9342     		cmp	r3, r2
 4416 00a6 00D3     		bcc	.LCB4461
 4417 00a8 1EE3     		b	.L552	@long jump
 4418              	.LCB4461:
4716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 4419              		.loc 1 4716 0
 4420 00aa 0398     		ldr	r0, [sp, #12]
 4421 00ac 0EA9     		add	r1, sp, #56
 4422 00ae 0FAA     		add	r2, sp, #60
 4423 00b0 049B     		ldr	r3, [sp, #16]
 4424 00b2 FFF7FEFF 		bl	GetSequence
 4425              	.LVL585:
 4426 00b6 0028     		cmp	r0, #0
 4427 00b8 00DA     		bge	.LCB4470
 4428 00ba 5DE3     		b	.L499	@long jump
 4429              	.LCB4470:
4721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certExtType, sz) < 0) {
 4430              		.loc 1 4721 0
 4431 00bc 0024     		mov	r4, #0
4722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: OBJECT ID");
 4432              		.loc 1 4722 0
 4433 00be 049B     		ldr	r3, [sp, #16]
 4434 00c0 0398     		ldr	r0, [sp, #12]
 4435 00c2 0093     		str	r3, [sp]
 4436 00c4 0EA9     		add	r1, sp, #56
 4437 00c6 10AA     		add	r2, sp, #64
 4438 00c8 0623     		mov	r3, #6
4721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certExtType, sz) < 0) {
 4439              		.loc 1 4721 0
 4440 00ca 1094     		str	r4, [sp, #64]
4722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: OBJECT ID");
 4441              		.loc 1 4722 0
 4442 00cc FFF7FEFF 		bl	GetObjectId
 4443              	.LVL586:
 4444 00d0 A042     		cmp	r0, r4
 4445 00d2 00DA     		bge	.LCB4482
 4446 00d4 50E3     		b	.L499	@long jump
 4447              	.LCB4482:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 179


 4448              	.LVL587:
4729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int boolLength = 0;
 4449              		.loc 1 4729 0
 4450 00d6 0E9B     		ldr	r3, [sp, #56]
 4451 00d8 039A     		ldr	r2, [sp, #12]
4728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx] == ASN_BOOLEAN) {
 4452              		.loc 1 4728 0
 4453 00da 261C     		mov	r6, r4
4729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int boolLength = 0;
 4454              		.loc 1 4729 0
 4455 00dc D25C     		ldrb	r2, [r2, r3]
 4456 00de 012A     		cmp	r2, #1
 4457 00e0 13D1     		bne	.L393
 4458              	.LBB171:
4731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &boolLength, sz) < 0) {
 4459              		.loc 1 4731 0
 4460 00e2 0133     		add	r3, r3, #1
 4461 00e4 0E93     		str	r3, [sp, #56]
4732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: critical boolean length");
 4462              		.loc 1 4732 0
 4463 00e6 0398     		ldr	r0, [sp, #12]
 4464 00e8 0EA9     		add	r1, sp, #56
 4465 00ea 16AA     		add	r2, sp, #88
 4466 00ec 049B     		ldr	r3, [sp, #16]
4730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx++;
 4467              		.loc 1 4730 0
 4468 00ee 1694     		str	r4, [sp, #88]
4732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: critical boolean length");
 4469              		.loc 1 4732 0
 4470 00f0 FFF7FEFF 		bl	GetLength
 4471              	.LVL588:
 4472 00f4 A042     		cmp	r0, r4
 4473 00f6 00DA     		bge	.LCB4501
 4474 00f8 3EE3     		b	.L499	@long jump
 4475              	.LCB4501:
4736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 critical = 1;
 4476              		.loc 1 4736 0
 4477 00fa 0E9B     		ldr	r3, [sp, #56]
 4478 00fc 5A1C     		add	r2, r3, #1
 4479 00fe 0E92     		str	r2, [sp, #56]
 4480 0100 039A     		ldr	r2, [sp, #12]
 4481 0102 D65C     		ldrb	r6, [r2, r3]
 4482 0104 731E     		sub	r3, r6, #1
 4483 0106 9E41     		sbc	r6, r6, r3
 4484              	.LBE171:
4728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (input[idx] == ASN_BOOLEAN) {
 4485              		.loc 1 4728 0
 4486 0108 F6B2     		uxtb	r6, r6
 4487              	.LVL589:
 4488              	.L393:
4741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be an OCTET STRING");
 4489              		.loc 1 4741 0
 4490 010a 0E9B     		ldr	r3, [sp, #56]
 4491 010c 5A1C     		add	r2, r3, #1
 4492 010e 0E92     		str	r2, [sp, #56]
 4493 0110 039A     		ldr	r2, [sp, #12]
 4494 0112 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 180


 4495 0114 042B     		cmp	r3, #4
 4496 0116 00D0     		beq	.LCB4521
 4497 0118 2EE3     		b	.L499	@long jump
 4498              	.LCB4521:
4746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: extension data length");
 4499              		.loc 1 4746 0
 4500 011a 101C     		mov	r0, r2
 4501 011c 0EA9     		add	r1, sp, #56
 4502 011e 0FAA     		add	r2, sp, #60
 4503 0120 049B     		ldr	r3, [sp, #16]
 4504 0122 FFF7FEFF 		bl	GetLength
 4505              	.LVL590:
 4506 0126 0028     		cmp	r0, #0
 4507 0128 00DA     		bge	.LCB4529
 4508 012a 25E3     		b	.L499	@long jump
 4509              	.LCB4529:
4751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case BASIC_CA_OID:
 4510              		.loc 1 4751 0
 4511 012c 109B     		ldr	r3, [sp, #64]
 4512 012e 902B     		cmp	r3, #144
 4513 0130 00D1     		bne	.LCB4532
 4514 0132 50E2     		b	.L396	@long jump
 4515              	.LCB4532:
 4516 0134 0E9C     		ldr	r4, [sp, #56]
 4517 0136 11D8     		bhi	.L397
 4518 0138 812B     		cmp	r3, #129
 4519 013a 00D1     		bne	.LCB4537
 4520 013c EAE1     		b	.L398	@long jump
 4521              	.LCB4537:
 4522 013e 0F9D     		ldr	r5, [sp, #60]
 4523 0140 06D8     		bhi	.L399
 4524 0142 452B     		cmp	r3, #69
 4525 0144 00D1     		bne	.LCB4542
 4526 0146 BEE0     		b	.L400	@long jump
 4527              	.LCB4542:
 4528 0148 802B     		cmp	r3, #128
 4529 014a 00D1     		bne	.LCB4544
 4530 014c B1E1     		b	.L401	@long jump
 4531              	.LCB4544:
 4532 014e C2E2     		b	.L395
 4533              	.L399:
 4534 0150 832B     		cmp	r3, #131
 4535 0152 00D1     		bne	.LCB4550
 4536 0154 FEE0     		b	.L402	@long jump
 4537              	.LCB4550:
 4538 0156 852B     		cmp	r3, #133
 4539 0158 11D0     		beq	.L403
 4540 015a BCE2     		b	.L395
 4541              	.L397:
 4542 015c 952B     		cmp	r3, #149
 4543 015e 00D1     		bne	.LCB4558
 4544 0160 80E1     		b	.L404	@long jump
 4545              	.LCB4558:
 4546 0162 05D8     		bhi	.L405
 4547 0164 912B     		cmp	r3, #145
 4548 0166 36D0     		beq	.L406
 4549 0168 922B     		cmp	r3, #146
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 181


 4550 016a 00D1     		bne	.LCB4564
 4551 016c B7E2     		b	.L407	@long jump
 4552              	.LCB4564:
 4553 016e B2E2     		b	.L395
 4554              	.L405:
 4555 0170 972B     		cmp	r3, #151
 4556 0172 00D1     		bne	.LCB4570
 4557 0174 F3E1     		b	.L408	@long jump
 4558              	.LCB4570:
 4559 0176 A82B     		cmp	r3, #168
 4560 0178 00D1     		bne	.LCB4572
 4561 017a B0E2     		b	.L407	@long jump
 4562              	.LCB4572:
 4563 017c ABE2     		b	.L395
 4564              	.L403:
4757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4565              		.loc 1 4757 0
 4566 017e 039B     		ldr	r3, [sp, #12]
 4567              	.LBB172:
 4568              	.LBB173:
4083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: bad SEQUENCE");
 4569              		.loc 1 4083 0
 4570 0180 15A9     		add	r1, sp, #84
 4571              	.LBE173:
 4572              	.LBE172:
4757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4573              		.loc 1 4757 0
 4574 0182 1C19     		add	r4, r3, r4
 4575              	.LVL591:
 4576              	.LBB175:
 4577              	.LBB174:
4079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4578              		.loc 1 4079 0
 4579 0184 0023     		mov	r3, #0
4083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: bad SEQUENCE");
 4580              		.loc 1 4083 0
 4581 0186 201C     		mov	r0, r4
4079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4582              		.loc 1 4079 0
 4583 0188 1593     		str	r3, [sp, #84]
4080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4584              		.loc 1 4080 0
 4585 018a 1693     		str	r3, [sp, #88]
4083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: bad SEQUENCE");
 4586              		.loc 1 4083 0
 4587 018c 16AA     		add	r2, sp, #88
 4588 018e 2B1C     		mov	r3, r5
 4589 0190 FFF7FEFF 		bl	GetSequence
 4590              	.LVL592:
 4591 0194 0028     		cmp	r0, #0
 4592 0196 00DA     		bge	.LCB4598
 4593 0198 EEE2     		b	.L499	@long jump
 4594              	.LCB4598:
4088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
 4595              		.loc 1 4088 0
 4596 019a 169B     		ldr	r3, [sp, #88]
 4597 019c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 182


 4598 019e 00D1     		bne	.LCB4602
 4599 01a0 9DE2     		b	.L407	@long jump
 4600              	.LCB4602:
4094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
 4601              		.loc 1 4094 0
 4602 01a2 159B     		ldr	r3, [sp, #84]
 4603 01a4 5A1C     		add	r2, r3, #1
 4604 01a6 1592     		str	r2, [sp, #84]
 4605 01a8 E65C     		ldrb	r6, [r4, r3]
 4606              	.LVL593:
 4607 01aa 012E     		cmp	r6, #1
 4608 01ac 00D0     		beq	.LCB4609
 4609 01ae E3E2     		b	.L499	@long jump
 4610              	.LCB4609:
4100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
 4611              		.loc 1 4100 0
 4612 01b0 201C     		mov	r0, r4
 4613 01b2 15A9     		add	r1, sp, #84
 4614 01b4 16AA     		add	r2, sp, #88
 4615 01b6 2B1C     		mov	r3, r5
 4616 01b8 FFF7FEFF 		bl	GetLength
 4617              	.LVL594:
 4618 01bc 0028     		cmp	r0, #0
 4619 01be 00DA     		bge	.LCB4617
 4620 01c0 DAE2     		b	.L499	@long jump
 4621              	.LCB4617:
4106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->isCA = 1;
 4622              		.loc 1 4106 0
 4623 01c2 159B     		ldr	r3, [sp, #84]
 4624 01c4 5A1C     		add	r2, r3, #1
 4625 01c6 1592     		str	r2, [sp, #84]
 4626 01c8 E35C     		ldrb	r3, [r4, r3]
 4627 01ca 002B     		cmp	r3, #0
 4628 01cc 00D1     		bne	.LCB4623
 4629 01ce 86E2     		b	.L407	@long jump
 4630              	.LCB4623:
4107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4631              		.loc 1 4107 0
 4632 01d0 CD4B     		ldr	r3, .L554
 4633 01d2 FE54     		strb	r6, [r7, r3]
 4634 01d4 83E2     		b	.L407
 4635              	.LVL595:
 4636              	.L406:
 4637              	.LBE174:
 4638              	.LBE175:
4762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4639              		.loc 1 4762 0
 4640 01d6 039B     		ldr	r3, [sp, #12]
 4641 01d8 0F9D     		ldr	r5, [sp, #60]
 4642 01da 1C19     		add	r4, r3, r4
 4643              	.LVL596:
 4644              	.LBB176:
 4645              	.LBB177:
4140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4646              		.loc 1 4140 0
 4647 01dc 0023     		mov	r3, #0
4146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 183


 4648              		.loc 1 4146 0
 4649 01de 201C     		mov	r0, r4
4140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4650              		.loc 1 4140 0
 4651 01e0 1593     		str	r3, [sp, #84]
4141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4652              		.loc 1 4141 0
 4653 01e2 1693     		str	r3, [sp, #88]
4146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 4654              		.loc 1 4146 0
 4655 01e4 15A9     		add	r1, sp, #84
 4656 01e6 16AA     		add	r2, sp, #88
 4657 01e8 2B1C     		mov	r3, r5
 4658 01ea FFF7FEFF 		bl	GetSequence
 4659              	.LVL597:
 4660 01ee 0028     		cmp	r0, #0
 4661 01f0 00DA     		bge	.LCB4658
 4662 01f2 C1E2     		b	.L499	@long jump
 4663              	.LCB4658:
4150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 4664              		.loc 1 4150 0
 4665 01f4 201C     		mov	r0, r4
 4666 01f6 15A9     		add	r1, sp, #84
 4667 01f8 16AA     		add	r2, sp, #88
 4668 01fa 2B1C     		mov	r3, r5
 4669 01fc FFF7FEFF 		bl	GetSequence
 4670              	.LVL598:
 4671 0200 0028     		cmp	r0, #0
 4672 0202 00DA     		bge	.LCB4666
 4673 0204 B8E2     		b	.L499	@long jump
 4674              	.LCB4666:
4156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
 4675              		.loc 1 4156 0
 4676 0206 159B     		ldr	r3, [sp, #84]
 4677 0208 E25C     		ldrb	r2, [r4, r3]
 4678 020a A02A     		cmp	r2, #160
 4679 020c 35D1     		bne	.L417
4158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
 4680              		.loc 1 4158 0
 4681 020e 0133     		add	r3, r3, #1
 4682 0210 1593     		str	r3, [sp, #84]
4159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4683              		.loc 1 4159 0
 4684 0212 201C     		mov	r0, r4
 4685 0214 15A9     		add	r1, sp, #84
 4686 0216 16AA     		add	r2, sp, #88
 4687 0218 2B1C     		mov	r3, r5
 4688 021a FFF7FEFF 		bl	GetLength
 4689              	.LVL599:
 4690 021e 0028     		cmp	r0, #0
 4691 0220 00DA     		bge	.LCB4682
 4692 0222 A9E2     		b	.L499	@long jump
 4693              	.LCB4682:
4162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | CRLDP_FULL_NAME))
 4694              		.loc 1 4162 0
 4695 0224 159B     		ldr	r3, [sp, #84]
 4696 0226 E25C     		ldrb	r2, [r4, r3]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 184


 4697 0228 A02A     		cmp	r2, #160
 4698 022a 23D1     		bne	.L418
4165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, &idx, &length, sz) < 0)
 4699              		.loc 1 4165 0
 4700 022c 0133     		add	r3, r3, #1
 4701 022e 1593     		str	r3, [sp, #84]
4166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
 4702              		.loc 1 4166 0
 4703 0230 201C     		mov	r0, r4
 4704 0232 15A9     		add	r1, sp, #84
 4705 0234 16AA     		add	r2, sp, #88
 4706 0236 2B1C     		mov	r3, r5
 4707 0238 FFF7FEFF 		bl	GetLength
 4708              	.LVL600:
 4709 023c 0028     		cmp	r0, #0
 4710 023e 00DA     		bge	.LCB4696
 4711 0240 9AE2     		b	.L499	@long jump
 4712              	.LCB4696:
4169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             {
 4713              		.loc 1 4169 0
 4714 0242 159B     		ldr	r3, [sp, #84]
 4715 0244 E25C     		ldrb	r2, [r4, r3]
 4716 0246 862A     		cmp	r2, #134
 4717 0248 14D1     		bne	.L418
4171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (GetLength(input, &idx, &length, sz) < 0)
 4718              		.loc 1 4171 0
 4719 024a 0133     		add	r3, r3, #1
 4720 024c 1593     		str	r3, [sp, #84]
4172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4721              		.loc 1 4172 0
 4722 024e 201C     		mov	r0, r4
 4723 0250 15A9     		add	r1, sp, #84
 4724 0252 16AA     		add	r2, sp, #88
 4725 0254 2B1C     		mov	r3, r5
 4726 0256 FFF7FEFF 		bl	GetLength
 4727              	.LVL601:
 4728 025a 0028     		cmp	r0, #0
 4729 025c 00DA     		bge	.LCB4710
 4730 025e 8BE2     		b	.L499	@long jump
 4731              	.LCB4710:
4175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extCrlInfo = input + idx;
 4732              		.loc 1 4175 0
 4733 0260 B023     		mov	r3, #176
4176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += length;
 4734              		.loc 1 4176 0
 4735 0262 AF21     		mov	r1, #175
4175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 cert->extCrlInfo = input + idx;
 4736              		.loc 1 4175 0
 4737 0264 169A     		ldr	r2, [sp, #88]
 4738 0266 9B00     		lsl	r3, r3, #2
 4739 0268 FA50     		str	r2, [r7, r3]
4176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += length;
 4740              		.loc 1 4176 0
 4741 026a 159B     		ldr	r3, [sp, #84]
 4742 026c 8900     		lsl	r1, r1, #2
 4743 026e E018     		add	r0, r4, r3
 4744 0270 7850     		str	r0, [r7, r1]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 185


 4745 0272 00E0     		b	.L541
 4746              	.L418:
4185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 4747              		.loc 1 4185 0
 4748 0274 169A     		ldr	r2, [sp, #88]
 4749              	.L541:
 4750 0276 D318     		add	r3, r2, r3
 4751 0278 1593     		str	r3, [sp, #84]
 4752              	.L417:
4189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         input[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 1))
 4753              		.loc 1 4189 0
 4754 027a 159B     		ldr	r3, [sp, #84]
 4755 027c AB42     		cmp	r3, r5
 4756 027e 11D2     		bcs	.L420
 4757 0280 E25C     		ldrb	r2, [r4, r3]
 4758 0282 A12A     		cmp	r2, #161
 4759 0284 0ED1     		bne	.L420
4192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
 4760              		.loc 1 4192 0
 4761 0286 0133     		add	r3, r3, #1
 4762 0288 1593     		str	r3, [sp, #84]
4193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4763              		.loc 1 4193 0
 4764 028a 201C     		mov	r0, r4
 4765 028c 15A9     		add	r1, sp, #84
 4766 028e 16AA     		add	r2, sp, #88
 4767 0290 2B1C     		mov	r3, r5
 4768 0292 FFF7FEFF 		bl	GetLength
 4769              	.LVL602:
 4770 0296 0028     		cmp	r0, #0
 4771 0298 00DA     		bge	.LCB4748
 4772 029a 6DE2     		b	.L499	@long jump
 4773              	.LCB4748:
4195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 4774              		.loc 1 4195 0
 4775 029c 159B     		ldr	r3, [sp, #84]
 4776 029e 169A     		ldr	r2, [sp, #88]
 4777 02a0 9B18     		add	r3, r3, r2
 4778 02a2 1593     		str	r3, [sp, #84]
 4779              	.L420:
4199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         input[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 2))
 4780              		.loc 1 4199 0
 4781 02a4 159B     		ldr	r3, [sp, #84]
 4782 02a6 AB42     		cmp	r3, r5
 4783 02a8 00D3     		bcc	.LCB4761
 4784 02aa 18E2     		b	.L407	@long jump
 4785              	.LCB4761:
 4786 02ac E25C     		ldrb	r2, [r4, r3]
 4787 02ae A22A     		cmp	r2, #162
 4788 02b0 00D0     		beq	.LCB4764
 4789 02b2 14E2     		b	.L407	@long jump
 4790              	.LCB4764:
4202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
 4791              		.loc 1 4202 0
 4792 02b4 0133     		add	r3, r3, #1
 4793 02b6 1593     		str	r3, [sp, #84]
4203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 186


 4794              		.loc 1 4203 0
 4795 02b8 201C     		mov	r0, r4
 4796 02ba 15A9     		add	r1, sp, #84
 4797 02bc 16AA     		add	r2, sp, #88
 4798 02be 2B1C     		mov	r3, r5
 4799 02c0 FFF7FEFF 		bl	GetLength
 4800              	.LVL603:
 4801 02c4 1CE1     		b	.L540
 4802              	.LVL604:
 4803              	.L400:
 4804              	.LBE177:
 4805              	.LBE176:
4767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4806              		.loc 1 4767 0
 4807 02c6 039B     		ldr	r3, [sp, #12]
 4808              	.LBB178:
 4809              	.LBB179:
4232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 4810              		.loc 1 4232 0
 4811 02c8 14A9     		add	r1, sp, #80
 4812              	.LBE179:
 4813              	.LBE178:
4767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4814              		.loc 1 4767 0
 4815 02ca 1C19     		add	r4, r3, r4
 4816              	.LVL605:
 4817              	.LBB181:
 4818              	.LBB180:
4224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4819              		.loc 1 4224 0
 4820 02cc 0023     		mov	r3, #0
4232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 4821              		.loc 1 4232 0
 4822 02ce 201C     		mov	r0, r4
4224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4823              		.loc 1 4224 0
 4824 02d0 1493     		str	r3, [sp, #80]
4225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte b;
 4825              		.loc 1 4225 0
 4826 02d2 1593     		str	r3, [sp, #84]
4232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 4827              		.loc 1 4232 0
 4828 02d4 15AA     		add	r2, sp, #84
 4829 02d6 2B1C     		mov	r3, r5
 4830 02d8 FFF7FEFF 		bl	GetSequence
 4831              	.LVL606:
 4832 02dc 0028     		cmp	r0, #0
 4833 02de 00DA     		bge	.LCB4805
 4834 02e0 4AE2     		b	.L499	@long jump
 4835              	.LCB4805:
 4836              	.LVL607:
 4837              	.L421:
4235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Unwrap a single AIA */
 4838              		.loc 1 4235 0
 4839 02e2 149B     		ldr	r3, [sp, #80]
 4840 02e4 AB42     		cmp	r3, r5
 4841 02e6 00D3     		bcc	.LCB4813
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 187


 4842 02e8 F9E1     		b	.L407	@long jump
 4843              	.LCB4813:
4237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4844              		.loc 1 4237 0
 4845 02ea 201C     		mov	r0, r4
 4846 02ec 14A9     		add	r1, sp, #80
 4847 02ee 15AA     		add	r2, sp, #84
 4848 02f0 2B1C     		mov	r3, r5
 4849 02f2 FFF7FEFF 		bl	GetSequence
 4850              	.LVL608:
 4851 02f6 0028     		cmp	r0, #0
 4852 02f8 00DA     		bge	.LCB4823
 4853 02fa 3DE2     		b	.L499	@long jump
 4854              	.LCB4823:
4240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certAuthInfoType, sz) < 0)
 4855              		.loc 1 4240 0
 4856 02fc 0023     		mov	r3, #0
4241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4857              		.loc 1 4241 0
 4858 02fe 0095     		str	r5, [sp]
4240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certAuthInfoType, sz) < 0)
 4859              		.loc 1 4240 0
 4860 0300 1693     		str	r3, [sp, #88]
4241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4861              		.loc 1 4241 0
 4862 0302 201C     		mov	r0, r4
 4863 0304 14A9     		add	r1, sp, #80
 4864 0306 16AA     		add	r2, sp, #88
 4865 0308 0733     		add	r3, r3, #7
 4866 030a FFF7FEFF 		bl	GetObjectId
 4867              	.LVL609:
 4868 030e 0028     		cmp	r0, #0
 4869 0310 00DA     		bge	.LCB4834
 4870 0312 31E2     		b	.L499	@long jump
 4871              	.LCB4834:
4245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
 4872              		.loc 1 4245 0
 4873 0314 149B     		ldr	r3, [sp, #80]
4246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4874              		.loc 1 4246 0
 4875 0316 201C     		mov	r0, r4
4245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &idx, &length, sz) < 0)
 4876              		.loc 1 4245 0
 4877 0318 5A1C     		add	r2, r3, #1
 4878 031a 1492     		str	r2, [sp, #80]
 4879 031c E65C     		ldrb	r6, [r4, r3]
 4880              	.LVL610:
4246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 4881              		.loc 1 4246 0
 4882 031e 14A9     		add	r1, sp, #80
 4883 0320 15AA     		add	r2, sp, #84
 4884 0322 2B1C     		mov	r3, r5
 4885 0324 FFF7FEFF 		bl	GetLength
 4886              	.LVL611:
 4887 0328 0028     		cmp	r0, #0
 4888 032a 00DA     		bge	.LCB4847
 4889 032c 24E2     		b	.L499	@long jump
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 188


 4890              	.LCB4847:
 4891 032e 159B     		ldr	r3, [sp, #84]
4249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid == AIA_OCSP_OID)
 4892              		.loc 1 4249 0
 4893 0330 862E     		cmp	r6, #134
 4894 0332 0BD1     		bne	.L424
 4895 0334 169A     		ldr	r2, [sp, #88]
 4896 0336 742A     		cmp	r2, #116
 4897 0338 08D1     		bne	.L424
4252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->extAuthInfo = input + idx;
 4898              		.loc 1 4252 0
 4899 033a AE22     		mov	r2, #174
 4900 033c 9200     		lsl	r2, r2, #2
 4901 033e BB50     		str	r3, [r7, r2]
4253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
 4902              		.loc 1 4253 0
 4903 0340 149B     		ldr	r3, [sp, #80]
 4904 0342 E418     		add	r4, r4, r3
 4905              	.LVL612:
 4906 0344 AD23     		mov	r3, #173
 4907 0346 9B00     		lsl	r3, r3, #2
 4908 0348 FC50     		str	r4, [r7, r3]
 4909 034a C8E1     		b	.L407
 4910              	.LVL613:
 4911              	.L424:
4256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 4912              		.loc 1 4256 0
 4913 034c 149A     		ldr	r2, [sp, #80]
 4914 034e D318     		add	r3, r2, r3
 4915 0350 1493     		str	r3, [sp, #80]
 4916 0352 C6E7     		b	.L421
 4917              	.LVL614:
 4918              	.L402:
 4919              	.LBE180:
 4920              	.LBE181:
4776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4921              		.loc 1 4776 0
 4922 0354 039B     		ldr	r3, [sp, #12]
 4923              	.LBB182:
 4924              	.LBB183:
3890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tBad Sequence");
 4925              		.loc 1 3890 0
 4926 0356 14A9     		add	r1, sp, #80
 4927              	.LBE183:
 4928              	.LBE182:
4776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 4929              		.loc 1 4776 0
 4930 0358 1C19     		add	r4, r3, r4
 4931              	.LVL615:
 4932              	.LBB192:
 4933              	.LBB191:
3885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4934              		.loc 1 3885 0
 4935 035a 0023     		mov	r3, #0
3890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tBad Sequence");
 4936              		.loc 1 3890 0
 4937 035c 201C     		mov	r0, r4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 189


3885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 4938              		.loc 1 3885 0
 4939 035e 1493     		str	r3, [sp, #80]
3886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4940              		.loc 1 3886 0
 4941 0360 1593     		str	r3, [sp, #84]
3890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tBad Sequence");
 4942              		.loc 1 3890 0
 4943 0362 15AA     		add	r2, sp, #84
 4944 0364 2B1C     		mov	r3, r5
 4945 0366 FFF7FEFF 		bl	GetSequence
 4946              	.LVL616:
 4947 036a 0028     		cmp	r0, #0
 4948 036c 00DA     		bge	.LCB4911
 4949 036e 03E2     		b	.L499	@long jump
 4950              	.LCB4911:
3895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4951              		.loc 1 3895 0
 4952 0370 BC23     		mov	r3, #188
 4953 0372 0122     		mov	r2, #1
 4954 0374 9B00     		lsl	r3, r3, #2
 4955 0376 FA54     		strb	r2, [r7, r3]
 4956              	.LVL617:
 4957              	.L427:
3897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte       b = input[idx++];
 4958              		.loc 1 3897 0
 4959 0378 159B     		ldr	r3, [sp, #84]
 4960 037a 002B     		cmp	r3, #0
 4961 037c 00DC     		bgt	.LCB4923
 4962 037e AEE1     		b	.L407	@long jump
 4963              	.LCB4923:
 4964              	.LBB184:
3898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4965              		.loc 1 3898 0
 4966 0380 149A     		ldr	r2, [sp, #80]
3900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4967              		.loc 1 3900 0
 4968 0382 013B     		sub	r3, r3, #1
3898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4969              		.loc 1 3898 0
 4970 0384 561C     		add	r6, r2, #1
 4971 0386 1496     		str	r6, [sp, #80]
 4972 0388 A25C     		ldrb	r2, [r4, r2]
 4973              	.LVL618:
 4974              	.LBB185:
3909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str length");
 4975              		.loc 1 3909 0
 4976 038a 201C     		mov	r0, r4
 4977              	.LBE185:
3900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 4978              		.loc 1 3900 0
 4979 038c 1593     		str	r3, [sp, #84]
 4980              	.LBB186:
3909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str length");
 4981              		.loc 1 3909 0
 4982 038e 14A9     		add	r1, sp, #80
 4983              	.LBE186:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 190


3904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             DNS_entry* dnsEntry;
 4984              		.loc 1 3904 0
 4985 0390 822A     		cmp	r2, #130
 4986 0392 25D1     		bne	.L428
 4987              	.LVL619:
 4988              	.LBB187:
3909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str length");
 4989              		.loc 1 3909 0
 4990 0394 16AA     		add	r2, sp, #88
 4991              	.LVL620:
 4992 0396 2B1C     		mov	r3, r5
 4993 0398 FFF7FEFF 		bl	GetLength
 4994              	.LVL621:
 4995 039c 0028     		cmp	r0, #0
 4996 039e 00DA     		bge	.LCB4952
 4997 03a0 EAE1     		b	.L499	@long jump
 4998              	.LCB4952:
 4999 03a2 159B     		ldr	r3, [sp, #84]
3915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         DYNAMIC_TYPE_ALTNAME);
 5000              		.loc 1 3915 0
 5001 03a4 0820     		mov	r0, #8
 5002 03a6 F618     		add	r6, r6, r3
 5003              	.LVL622:
3913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5004              		.loc 1 3913 0
 5005 03a8 149B     		ldr	r3, [sp, #80]
 5006 03aa F61A     		sub	r6, r6, r3
 5007 03ac 1596     		str	r6, [sp, #84]
3915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         DYNAMIC_TYPE_ALTNAME);
 5008              		.loc 1 3915 0
 5009 03ae FFF7FEFF 		bl	wolfSSL_Malloc
 5010              	.LVL623:
 5011 03b2 061E     		sub	r6, r0, #0
 5012              	.LVL624:
3917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
 5013              		.loc 1 3917 0
 5014 03b4 00D1     		bne	.LCB4967
 5015 03b6 DFE1     		b	.L499	@long jump
 5016              	.LCB4967:
3922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          DYNAMIC_TYPE_ALTNAME);
 5017              		.loc 1 3922 0
 5018 03b8 169B     		ldr	r3, [sp, #88]
 5019 03ba 581C     		add	r0, r3, #1
 5020              	.LVL625:
 5021 03bc FFF7FEFF 		bl	wolfSSL_Malloc
 5022              	.LVL626:
 5023 03c0 7060     		str	r0, [r6, #4]
3924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
 5024              		.loc 1 3924 0
 5025 03c2 0028     		cmp	r0, #0
 5026 03c4 27D0     		beq	.L537
3930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             dnsEntry->name[strLen] = '\0';
 5027              		.loc 1 3930 0
 5028 03c6 149B     		ldr	r3, [sp, #80]
 5029 03c8 169A     		ldr	r2, [sp, #88]
 5030 03ca E118     		add	r1, r4, r3
 5031 03cc FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 191


 5032              	.LVL627:
3931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5033              		.loc 1 3931 0
 5034 03d0 0023     		mov	r3, #0
 5035 03d2 7268     		ldr	r2, [r6, #4]
 5036 03d4 1699     		ldr	r1, [sp, #88]
 5037 03d6 5354     		strb	r3, [r2, r1]
3933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->altNames = dnsEntry;
 5038              		.loc 1 3933 0
 5039 03d8 7B6A     		ldr	r3, [r7, #36]
 5040 03da 3360     		str	r3, [r6]
3934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5041              		.loc 1 3934 0
 5042 03dc 7E62     		str	r6, [r7, #36]
 5043 03de 2AE0     		b	.L548
 5044              	.LVL628:
 5045              	.L428:
 5046              	.LBE187:
3940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             DNS_entry* emailEntry;
 5047              		.loc 1 3940 0
 5048 03e0 812A     		cmp	r2, #129
 5049 03e2 2FD1     		bne	.L433
 5050              	.LVL629:
 5051              	.LBB188:
3945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: str length");
 5052              		.loc 1 3945 0
 5053 03e4 16AA     		add	r2, sp, #88
 5054              	.LVL630:
 5055 03e6 2B1C     		mov	r3, r5
 5056 03e8 FFF7FEFF 		bl	GetLength
 5057              	.LVL631:
 5058 03ec 0028     		cmp	r0, #0
 5059 03ee 00DA     		bge	.LCB5017
 5060 03f0 C2E1     		b	.L499	@long jump
 5061              	.LCB5017:
 5062 03f2 159B     		ldr	r3, [sp, #84]
3951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         DYNAMIC_TYPE_ALTNAME);
 5063              		.loc 1 3951 0
 5064 03f4 0820     		mov	r0, #8
 5065 03f6 F618     		add	r6, r6, r3
 5066              	.LVL632:
3949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5067              		.loc 1 3949 0
 5068 03f8 149B     		ldr	r3, [sp, #80]
 5069 03fa F61A     		sub	r6, r6, r3
 5070 03fc 1596     		str	r6, [sp, #84]
3951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         DYNAMIC_TYPE_ALTNAME);
 5071              		.loc 1 3951 0
 5072 03fe FFF7FEFF 		bl	wolfSSL_Malloc
 5073              	.LVL633:
 5074 0402 061E     		sub	r6, r0, #0
 5075              	.LVL634:
3953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
 5076              		.loc 1 3953 0
 5077 0404 00D1     		bne	.LCB5032
 5078 0406 B7E1     		b	.L499	@long jump
 5079              	.LCB5032:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 192


3958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          DYNAMIC_TYPE_ALTNAME);
 5080              		.loc 1 3958 0
 5081 0408 169B     		ldr	r3, [sp, #88]
 5082 040a 581C     		add	r0, r3, #1
 5083              	.LVL635:
 5084 040c FFF7FEFF 		bl	wolfSSL_Malloc
 5085              	.LVL636:
 5086 0410 7060     		str	r0, [r6, #4]
3960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tOut of Memory");
 5087              		.loc 1 3960 0
 5088 0412 0028     		cmp	r0, #0
 5089 0414 03D1     		bne	.L435
 5090              	.LVL637:
 5091              	.L537:
 5092              	.LBB189:
3962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
 5093              		.loc 1 3962 0
 5094 0416 301C     		mov	r0, r6
 5095 0418 FFF7FEFF 		bl	wolfSSL_Free
 5096              	.LVL638:
 5097 041c ACE1     		b	.L499
 5098              	.LVL639:
 5099              	.L435:
 5100              	.LBE189:
3966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             emailEntry->name[strLen] = '\0';
 5101              		.loc 1 3966 0
 5102 041e 149B     		ldr	r3, [sp, #80]
 5103 0420 169A     		ldr	r2, [sp, #88]
 5104 0422 E118     		add	r1, r4, r3
 5105 0424 FFF7FEFF 		bl	memcpy
 5106              	.LVL640:
3967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5107              		.loc 1 3967 0
 5108 0428 0023     		mov	r3, #0
 5109 042a 7268     		ldr	r2, [r6, #4]
 5110 042c 1699     		ldr	r1, [sp, #88]
 5111 042e 5354     		strb	r3, [r2, r1]
3969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->altEmailNames = emailEntry;
 5112              		.loc 1 3969 0
 5113 0430 BB6A     		ldr	r3, [r7, #40]
 5114 0432 3360     		str	r3, [r6]
3970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5115              		.loc 1 3970 0
 5116 0434 BE62     		str	r6, [r7, #40]
 5117              	.LVL641:
 5118              	.L548:
3972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx    += strLen;
 5119              		.loc 1 3972 0
 5120 0436 169B     		ldr	r3, [sp, #88]
 5121 0438 159A     		ldr	r2, [sp, #84]
 5122 043a D21A     		sub	r2, r2, r3
 5123 043c 1592     		str	r2, [sp, #84]
3973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 5124              		.loc 1 3973 0
 5125 043e 149A     		ldr	r2, [sp, #80]
 5126 0440 D318     		add	r3, r2, r3
 5127 0442 0DE0     		b	.L542
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 193


 5128              	.LVL642:
 5129              	.L433:
 5130              	.LBE188:
 5131              	.LBB190:
4065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: unsupported name length");
 5132              		.loc 1 4065 0
 5133 0444 16AA     		add	r2, sp, #88
 5134              	.LVL643:
 5135 0446 2B1C     		mov	r3, r5
 5136 0448 FFF7FEFF 		bl	GetLength
 5137              	.LVL644:
 5138 044c 0028     		cmp	r0, #0
 5139 044e 00DA     		bge	.LCB5109
 5140 0450 92E1     		b	.L499	@long jump
 5141              	.LCB5109:
4069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += strLen;
 5142              		.loc 1 4069 0
 5143 0452 149A     		ldr	r2, [sp, #80]
 5144 0454 169B     		ldr	r3, [sp, #88]
 5145 0456 9B18     		add	r3, r3, r2
 5146 0458 159A     		ldr	r2, [sp, #84]
 5147 045a B618     		add	r6, r6, r2
 5148              	.LVL645:
 5149 045c F61A     		sub	r6, r6, r3
 5150 045e 1596     		str	r6, [sp, #84]
 5151              	.L542:
4070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 5152              		.loc 1 4070 0
 5153 0460 1493     		str	r3, [sp, #80]
 5154 0462 89E7     		b	.L427
 5155              	.LVL646:
 5156              	.L404:
 5157              	.LBE190:
 5158              	.LBE184:
 5159              	.LBE191:
 5160              	.LBE192:
4781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5161              		.loc 1 4781 0
 5162 0464 0122     		mov	r2, #1
 5163 0466 294B     		ldr	r3, .L554+4
4785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5164              		.loc 1 4785 0
 5165 0468 0F9D     		ldr	r5, [sp, #60]
4781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5166              		.loc 1 4781 0
 5167 046a FA54     		strb	r2, [r7, r3]
4785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5168              		.loc 1 4785 0
 5169 046c 039B     		ldr	r3, [sp, #12]
 5170              	.LBB193:
 5171              	.LBB194:
4270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE\n");
 5172              		.loc 1 4270 0
 5173 046e 15A9     		add	r1, sp, #84
 5174              	.LBE194:
 5175              	.LBE193:
4785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 194


 5176              		.loc 1 4785 0
 5177 0470 1C19     		add	r4, r3, r4
 5178              	.LVL647:
 5179              	.LBB196:
 5180              	.LBB195:
4265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0, ret = 0;
 5181              		.loc 1 4265 0
 5182 0472 0023     		mov	r3, #0
4270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE\n");
 5183              		.loc 1 4270 0
 5184 0474 201C     		mov	r0, r4
4265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0, ret = 0;
 5185              		.loc 1 4265 0
 5186 0476 1593     		str	r3, [sp, #84]
4266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5187              		.loc 1 4266 0
 5188 0478 1693     		str	r3, [sp, #88]
 5189              	.LVL648:
4270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE\n");
 5190              		.loc 1 4270 0
 5191 047a 16AA     		add	r2, sp, #88
 5192 047c 2B1C     		mov	r3, r5
 5193 047e FFF7FEFF 		bl	GetSequence
 5194              	.LVL649:
 5195 0482 0028     		cmp	r0, #0
 5196 0484 00DA     		bge	.LCB5169
 5197 0486 77E1     		b	.L499	@long jump
 5198              	.LCB5169:
4275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tinfo: OPTIONAL item 0, not available\n");
 5199              		.loc 1 4275 0
 5200 0488 159B     		ldr	r3, [sp, #84]
 5201 048a 5A1C     		add	r2, r3, #1
 5202 048c 1592     		str	r2, [sp, #84]
 5203 048e E35C     		ldrb	r3, [r4, r3]
 5204 0490 802B     		cmp	r3, #128
 5205 0492 00D0     		beq	.LCB5175
 5206 0494 23E1     		b	.L407	@long jump
 5207              	.LCB5175:
4280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: extension data length");
 5208              		.loc 1 4280 0
 5209 0496 201C     		mov	r0, r4
 5210 0498 15A9     		add	r1, sp, #84
 5211 049a 16AA     		add	r2, sp, #88
 5212 049c 2B1C     		mov	r3, r5
 5213 049e FFF7FEFF 		bl	GetLength
 5214              	.LVL650:
 5215 04a2 0028     		cmp	r0, #0
 5216 04a4 00DA     		bge	.LCB5183
 5217 04a6 67E1     		b	.L499	@long jump
 5218              	.LCB5183:
 5219 04a8 194A     		ldr	r2, .L554+8
4290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cert->extAuthKeyId, input + idx, length);
 5220              		.loc 1 4290 0
 5221 04aa 169B     		ldr	r3, [sp, #88]
 5222 04ac 1599     		ldr	r1, [sp, #84]
 5223 04ae BA18     		add	r2, r7, r2
 5224 04b0 1AE0     		b	.L550
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 195


 5225              	.LVL651:
 5226              	.L401:
 5227              	.LBE195:
 5228              	.LBE196:
4790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5229              		.loc 1 4790 0
 5230 04b2 B622     		mov	r2, #182
 5231 04b4 0123     		mov	r3, #1
 5232 04b6 9200     		lsl	r2, r2, #2
 5233 04b8 BB54     		strb	r3, [r7, r2]
4794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5234              		.loc 1 4794 0
 5235 04ba 039A     		ldr	r2, [sp, #12]
 5236              	.LBB197:
 5237              	.LBB198:
4312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be an OCTET STRING");
 5238              		.loc 1 4312 0
 5239 04bc 1593     		str	r3, [sp, #84]
 5240              	.LBE198:
 5241              	.LBE197:
4794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5242              		.loc 1 4794 0
 5243 04be 1419     		add	r4, r2, r4
 5244              	.LVL652:
 5245              	.LBB200:
 5246              	.LBB199:
4308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5247              		.loc 1 4308 0
 5248 04c0 0022     		mov	r2, #0
 5249 04c2 1692     		str	r2, [sp, #88]
 5250              	.LVL653:
4312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be an OCTET STRING");
 5251              		.loc 1 4312 0
 5252 04c4 2378     		ldrb	r3, [r4]
 5253 04c6 042B     		cmp	r3, #4
 5254 04c8 00D0     		beq	.LCB5221
 5255 04ca 55E1     		b	.L499	@long jump
 5256              	.LCB5221:
4317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: extension data length");
 5257              		.loc 1 4317 0
 5258 04cc 201C     		mov	r0, r4
 5259 04ce 15A9     		add	r1, sp, #84
 5260 04d0 16AA     		add	r2, sp, #88
 5261 04d2 2B1C     		mov	r3, r5
 5262 04d4 FFF7FEFF 		bl	GetLength
 5263              	.LVL654:
 5264 04d8 0028     		cmp	r0, #0
 5265 04da 00DA     		bge	.LCB5229
 5266 04dc 4CE1     		b	.L499	@long jump
 5267              	.LCB5229:
 5268 04de B122     		mov	r2, #177
4327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cert->extSubjKeyId, input + idx, length);
 5269              		.loc 1 4327 0
 5270 04e0 169B     		ldr	r3, [sp, #88]
 5271 04e2 9200     		lsl	r2, r2, #2
 5272 04e4 1599     		ldr	r1, [sp, #84]
 5273 04e6 BA18     		add	r2, r7, r2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 196


 5274              	.LVL655:
 5275              	.L550:
 5276 04e8 142B     		cmp	r3, #20
 5277 04ea 05D1     		bne	.L446
4328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 5278              		.loc 1 4328 0
 5279 04ec 6118     		add	r1, r4, r1
 5280 04ee 101C     		mov	r0, r2
 5281 04f0 1A1C     		mov	r2, r3
 5282 04f2 FFF7FEFF 		bl	memcpy
 5283              	.LVL656:
 5284 04f6 F2E0     		b	.L407
 5285              	.L446:
4334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
 5286              		.loc 1 4334 0
 5287 04f8 6018     		add	r0, r4, r1
 5288 04fa 191C     		mov	r1, r3
 5289 04fc FFF7FEFF 		bl	wc_ShaHash
 5290              	.LVL657:
 5291              	.L540:
 5292              	.LBE199:
 5293              	.LBE200:
4794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5294              		.loc 1 4794 0
 5295 0500 0028     		cmp	r0, #0
 5296 0502 00DB     		blt	.LCB5263
 5297 0504 EBE0     		b	.L407	@long jump
 5298              	.LCB5263:
 5299 0506 37E1     		b	.L499
 5300              	.L555:
 5301              		.align	2
 5302              	.L554:
 5303 0508 EF020000 		.word	751
 5304 050c ED020000 		.word	749
 5305 0510 D9020000 		.word	729
 5306              	.L398:
4815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5307              		.loc 1 4815 0
 5308 0514 0122     		mov	r2, #1
 5309 0516 BA4B     		ldr	r3, .L556
 5310              	.LBB201:
 5311              	.LBB202:
4348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: key usage expected bit string");
 5312              		.loc 1 4348 0
 5313 0518 1592     		str	r2, [sp, #84]
 5314              	.LBE202:
 5315              	.LBE201:
4815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5316              		.loc 1 4815 0
 5317 051a FA54     		strb	r2, [r7, r3]
4819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5318              		.loc 1 4819 0
 5319 051c 039B     		ldr	r3, [sp, #12]
 5320 051e 1C19     		add	r4, r3, r4
 5321              	.LBB205:
 5322              	.LBB203:
4348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: key usage expected bit string");
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 197


 5323              		.loc 1 4348 0
 5324 0520 2278     		ldrb	r2, [r4]
 5325              	.LBE203:
 5326              	.LBE205:
4819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5327              		.loc 1 4819 0
 5328 0522 0F9B     		ldr	r3, [sp, #60]
 5329              	.LVL658:
 5330              	.LBB206:
 5331              	.LBB204:
4348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: key usage expected bit string");
 5332              		.loc 1 4348 0
 5333 0524 032A     		cmp	r2, #3
 5334 0526 00D0     		beq	.LCB5298
 5335 0528 26E1     		b	.L499	@long jump
 5336              	.LCB5298:
4353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: key usage bad length");
 5337              		.loc 1 4353 0
 5338 052a 201C     		mov	r0, r4
 5339 052c 15A9     		add	r1, sp, #84
 5340 052e 16AA     		add	r2, sp, #88
 5341 0530 FFF7FEFF 		bl	GetLength
 5342              	.LVL659:
 5343 0534 0028     		cmp	r0, #0
 5344 0536 00DA     		bge	.LCB5306
 5345 0538 1EE1     		b	.L499	@long jump
 5346              	.LCB5306:
4359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5347              		.loc 1 4359 0
 5348 053a 159A     		ldr	r2, [sp, #84]
 5349 053c 169B     		ldr	r3, [sp, #88]
 5350 053e 511C     		add	r1, r2, #1
 5351 0540 013B     		sub	r3, r3, #1
 5352 0542 1591     		str	r1, [sp, #84]
 5353 0544 1693     		str	r3, [sp, #88]
4361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length == 2)
 5354              		.loc 1 4361 0
 5355 0546 665C     		ldrb	r6, [r4, r1]
 5356              	.LVL660:
 5357 0548 AE4D     		ldr	r5, .L556+4
 5358 054a 7E53     		strh	r6, [r7, r5]
4362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->extKeyUsage |= (word16)(input[idx+1] << 8);
 5359              		.loc 1 4362 0
 5360 054c 022B     		cmp	r3, #2
 5361 054e 00D0     		beq	.LCB5320
 5362 0550 C5E0     		b	.L407	@long jump
 5363              	.LCB5320:
4363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5364              		.loc 1 4363 0
 5365 0552 A418     		add	r4, r4, r2
 5366              	.LVL661:
 5367 0554 A378     		ldrb	r3, [r4, #2]
 5368 0556 1B02     		lsl	r3, r3, #8
 5369 0558 3343     		orr	r3, r6
 5370 055a 7B53     		strh	r3, [r7, r5]
 5371 055c BFE0     		b	.L407
 5372              	.LVL662:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 198


 5373              	.L408:
 5374              	.LBE204:
 5375              	.LBE206:
4824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5376              		.loc 1 4824 0
 5377 055e BD23     		mov	r3, #189
 5378 0560 0122     		mov	r2, #1
 5379 0562 9B00     		lsl	r3, r3, #2
 5380 0564 FA54     		strb	r2, [r7, r3]
4828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5381              		.loc 1 4828 0
 5382 0566 039B     		ldr	r3, [sp, #12]
 5383 0568 0F9D     		ldr	r5, [sp, #60]
 5384 056a 1C19     		add	r4, r3, r4
 5385              	.LVL663:
 5386              	.LBB207:
 5387              	.LBB208:
4371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
 5388              		.loc 1 4371 0
 5389 056c 0023     		mov	r3, #0
4376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5390              		.loc 1 4376 0
 5391 056e 201C     		mov	r0, r4
4371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
 5392              		.loc 1 4371 0
 5393 0570 1493     		str	r3, [sp, #80]
4376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5394              		.loc 1 4376 0
 5395 0572 14A9     		add	r1, sp, #80
 5396 0574 16AA     		add	r2, sp, #88
 5397 0576 2B1C     		mov	r3, r5
 5398 0578 FFF7FEFF 		bl	GetSequence
 5399              	.LVL664:
 5400 057c 0028     		cmp	r0, #0
 5401 057e 00DA     		bge	.LCB5360
 5402 0580 FAE0     		b	.L499	@long jump
 5403              	.LCB5360:
 5404              	.L453:
4386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(input, &idx, &oid, certKeyUseType, sz) < 0)
 5405              		.loc 1 4386 0
 5406 0582 149B     		ldr	r3, [sp, #80]
 5407 0584 AB42     		cmp	r3, r5
 5408 0586 00D3     		bcc	.LCB5365
 5409 0588 A9E0     		b	.L407	@long jump
 5410              	.LCB5365:
4387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 5411              		.loc 1 4387 0
 5412 058a 0095     		str	r5, [sp]
 5413 058c 201C     		mov	r0, r4
 5414 058e 14A9     		add	r1, sp, #80
 5415 0590 15AA     		add	r2, sp, #84
 5416 0592 0A23     		mov	r3, #10
 5417 0594 FFF7FEFF 		bl	GetObjectId
 5418              	.LVL665:
 5419 0598 0028     		cmp	r0, #0
 5420 059a 00DA     		bge	.LCB5374
 5421 059c ECE0     		b	.L499	@long jump
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 199


 5422              	.LCB5374:
4390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EKU_ANY_OID:
 5423              		.loc 1 4390 0
 5424 059e 159B     		ldr	r3, [sp, #84]
 5425 05a0 482B     		cmp	r3, #72
 5426 05a2 0ED0     		beq	.L454
 5427 05a4 05D8     		bhi	.L455
 5428 05a6 472B     		cmp	r3, #71
 5429 05a8 EBD1     		bne	.L453
4395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
 5430              		.loc 1 4395 0
 5431 05aa 974A     		ldr	r2, .L556+8
 5432 05ac 0121     		mov	r1, #1
 5433 05ae BB5C     		ldrb	r3, [r7, r2]
 5434 05b0 0EE0     		b	.L543
 5435              	.L455:
4390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             case EKU_ANY_OID:
 5436              		.loc 1 4390 0
 5437 05b2 4F2B     		cmp	r3, #79
 5438 05b4 09D0     		beq	.L457
 5439 05b6 972B     		cmp	r3, #151
 5440 05b8 E3D1     		bne	.L453
4392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
 5441              		.loc 1 4392 0
 5442 05ba 934A     		ldr	r2, .L556+8
 5443 05bc 0821     		mov	r1, #8
 5444 05be BB5C     		ldrb	r3, [r7, r2]
 5445 05c0 06E0     		b	.L543
 5446              	.L454:
4398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
 5447              		.loc 1 4398 0
 5448 05c2 914A     		ldr	r2, .L556+8
 5449 05c4 0221     		mov	r1, #2
 5450 05c6 BB5C     		ldrb	r3, [r7, r2]
 5451 05c8 02E0     		b	.L543
 5452              	.L457:
4401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
 5453              		.loc 1 4401 0
 5454 05ca 0421     		mov	r1, #4
 5455 05cc 8E4A     		ldr	r2, .L556+8
 5456 05ce BB5C     		ldrb	r3, [r7, r2]
 5457              	.L543:
 5458 05d0 0B43     		orr	r3, r1
 5459 05d2 BB54     		strb	r3, [r7, r2]
 5460 05d4 D5E7     		b	.L453
 5461              	.LVL666:
 5462              	.L396:
 5463              	.LBE208:
 5464              	.LBE207:
4834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5465              		.loc 1 4834 0
 5466 05d6 0122     		mov	r2, #1
 5467 05d8 8C4B     		ldr	r3, .L556+12
 5468              	.LBB209:
 5469              	.LBB210:
4479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5470              		.loc 1 4479 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 200


 5471 05da 11A9     		add	r1, sp, #68
 5472              	.LBE210:
 5473              	.LBE209:
4834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 #ifdef OPENSSL_EXTRA
 5474              		.loc 1 4834 0
 5475 05dc FA54     		strb	r2, [r7, r3]
4838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5476              		.loc 1 4838 0
 5477 05de 0E9A     		ldr	r2, [sp, #56]
 5478 05e0 039B     		ldr	r3, [sp, #12]
 5479 05e2 9446     		mov	ip, r2
 5480 05e4 6344     		add	r3, r3, ip
 5481 05e6 0693     		str	r3, [sp, #24]
 5482 05e8 0F9B     		ldr	r3, [sp, #60]
 5483              	.LBB220:
 5484              	.LBB218:
4479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5485              		.loc 1 4479 0
 5486 05ea 0698     		ldr	r0, [sp, #24]
 5487              	.LBE218:
 5488              	.LBE220:
4838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     return ASN_PARSE_E;
 5489              		.loc 1 4838 0
 5490 05ec 0893     		str	r3, [sp, #32]
 5491              	.LVL667:
 5492              	.LBB221:
 5493              	.LBB219:
4474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 5494              		.loc 1 4474 0
 5495 05ee 0023     		mov	r3, #0
 5496              	.LVL668:
4479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5497              		.loc 1 4479 0
 5498 05f0 12AA     		add	r2, sp, #72
4474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
 5499              		.loc 1 4474 0
 5500 05f2 1193     		str	r3, [sp, #68]
4475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5501              		.loc 1 4475 0
 5502 05f4 1293     		str	r3, [sp, #72]
4479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5503              		.loc 1 4479 0
 5504 05f6 089B     		ldr	r3, [sp, #32]
 5505 05f8 FFF7FEFF 		bl	GetSequence
 5506              	.LVL669:
 5507 05fc 0028     		cmp	r0, #0
 5508 05fe 00DA     		bge	.LCB5470
 5509 0600 BAE0     		b	.L499	@long jump
 5510              	.LCB5470:
 5511              	.LVL670:
 5512              	.L461:
4484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte b = input[idx++];
 5513              		.loc 1 4484 0
 5514 0602 119B     		ldr	r3, [sp, #68]
 5515 0604 089A     		ldr	r2, [sp, #32]
 5516 0606 9342     		cmp	r3, r2
 5517 0608 69D2     		bcs	.L407
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 201


 5518              	.LBB211:
4485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry** subtree = NULL;
 5519              		.loc 1 4485 0
 5520 060a 5A1C     		add	r2, r3, #1
 5521 060c 1192     		str	r2, [sp, #68]
 5522 060e 069A     		ldr	r2, [sp, #24]
4488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid length");
 5523              		.loc 1 4488 0
 5524 0610 11A9     		add	r1, sp, #68
4485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Base_entry** subtree = NULL;
 5525              		.loc 1 4485 0
 5526 0612 D45C     		ldrb	r4, [r2, r3]
 5527              	.LVL671:
4488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid length");
 5528              		.loc 1 4488 0
 5529 0614 101C     		mov	r0, r2
 5530 0616 089B     		ldr	r3, [sp, #32]
 5531 0618 12AA     		add	r2, sp, #72
 5532 061a FFF7FEFF 		bl	GetLength
 5533              	.LVL672:
 5534 061e 0028     		cmp	r0, #0
 5535 0620 00DC     		bgt	.LCB5492
 5536 0622 A9E0     		b	.L499	@long jump
 5537              	.LCB5492:
4493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             subtree = &cert->permittedNames;
 5538              		.loc 1 4493 0
 5539 0624 A02C     		cmp	r4, #160
 5540 0626 02D1     		bne	.L464
4494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (b == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | 1))
 5541              		.loc 1 4494 0
 5542 0628 3D1C     		mov	r5, r7
 5543 062a 2C35     		add	r5, r5, #44
 5544              	.LVL673:
 5545 062c 04E0     		b	.L465
 5546              	.LVL674:
 5547              	.L464:
4495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             subtree = &cert->excludedNames;
 5548              		.loc 1 4495 0
 5549 062e A12C     		cmp	r4, #161
 5550 0630 00D0     		beq	.LCB5507
 5551 0632 A1E0     		b	.L499	@long jump
 5552              	.LCB5507:
4496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
 5553              		.loc 1 4496 0
 5554 0634 3D1C     		mov	r5, r7
 5555 0636 3035     		add	r5, r5, #48
 5556              	.LVL675:
 5557              	.L465:
4502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5558              		.loc 1 4502 0
 5559 0638 119A     		ldr	r2, [sp, #68]
 5560 063a 069B     		ldr	r3, [sp, #24]
 5561 063c 9446     		mov	ip, r2
 5562 063e 6344     		add	r3, r3, ip
 5563 0640 0793     		str	r3, [sp, #28]
 5564 0642 129B     		ldr	r3, [sp, #72]
 5565 0644 0A93     		str	r3, [sp, #40]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 202


 5566              	.LVL676:
 5567              	.LBB212:
 5568              	.LBB213:
4417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5569              		.loc 1 4417 0
 5570 0646 0023     		mov	r3, #0
 5571              	.LVL677:
 5572              	.L544:
 5573              	.LBB214:
4465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 5574              		.loc 1 4465 0
 5575 0648 1393     		str	r3, [sp, #76]
 5576              	.LBE214:
4421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int seqLength, strLength;
 5577              		.loc 1 4421 0
 5578 064a 139B     		ldr	r3, [sp, #76]
 5579 064c 0A9A     		ldr	r2, [sp, #40]
 5580 064e 9342     		cmp	r3, r2
 5581 0650 3CD2     		bcs	.L504
 5582              	.LBB217:
4426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be a SEQUENCE");
 5583              		.loc 1 4426 0
 5584 0652 0798     		ldr	r0, [sp, #28]
 5585 0654 13A9     		add	r1, sp, #76
 5586 0656 14AA     		add	r2, sp, #80
 5587 0658 0A9B     		ldr	r3, [sp, #40]
 5588 065a FFF7FEFF 		bl	GetSequence
 5589              	.LVL678:
 5590 065e 0028     		cmp	r0, #0
 5591 0660 34DB     		blt	.L504
4431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[nameIdx++];
 5592              		.loc 1 4431 0
 5593 0662 139B     		ldr	r3, [sp, #76]
4433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid length");
 5594              		.loc 1 4433 0
 5595 0664 16A9     		add	r1, sp, #88
4432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, &nameIdx, &strLength, sz) <= 0) {
 5596              		.loc 1 4432 0
 5597 0666 5A1C     		add	r2, r3, #1
 5598 0668 1692     		str	r2, [sp, #88]
 5599 066a 079A     		ldr	r2, [sp, #28]
 5600 066c D65C     		ldrb	r6, [r2, r3]
 5601              	.LVL679:
4433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tinvalid length");
 5602              		.loc 1 4433 0
 5603 066e 101C     		mov	r0, r2
 5604 0670 0A9B     		ldr	r3, [sp, #40]
 5605 0672 15AA     		add	r2, sp, #84
 5606 0674 FFF7FEFF 		bl	GetLength
 5607              	.LVL680:
 5608 0678 0028     		cmp	r0, #0
 5609 067a 27DD     		ble	.L504
4438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b == (ASN_CONTEXT_SPECIFIC | ASN_RFC822_TYPE) ||
 5610              		.loc 1 4438 0
 5611 067c 331C     		mov	r3, r6
 5612 067e 7F33     		add	r3, r3, #127
 5613 0680 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 203


 5614 0682 012B     		cmp	r3, #1
 5615 0684 01D9     		bls	.L468
4439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | ASN_DIR_TYPE)) {
 5616              		.loc 1 4439 0
 5617 0686 A42E     		cmp	r6, #164
 5618 0688 1CD1     		bne	.L469
 5619              	.L468:
 5620              	.LBB215:
4442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                     heap, DYNAMIC_TYPE_ALTNAME);
 5621              		.loc 1 4442 0
 5622 068a 1020     		mov	r0, #16
 5623 068c FFF7FEFF 		bl	wolfSSL_Malloc
 5624              	.LVL681:
 5625 0690 041E     		sub	r4, r0, #0
 5626              	.LVL682:
4445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("allocate error");
 5627              		.loc 1 4445 0
 5628 0692 1BD0     		beq	.L504
4450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (entry->name == NULL) {
 5629              		.loc 1 4450 0
 5630 0694 1598     		ldr	r0, [sp, #84]
 5631              	.LVL683:
 5632 0696 FFF7FEFF 		bl	wolfSSL_Malloc
 5633              	.LVL684:
 5634 069a 6060     		str	r0, [r4, #4]
4451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("allocate error");
 5635              		.loc 1 4451 0
 5636 069c 0028     		cmp	r0, #0
 5637 069e 03D1     		bne	.L470
 5638              	.LVL685:
 5639              	.LBB216:
4453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
 5640              		.loc 1 4453 0
 5641 06a0 201C     		mov	r0, r4
 5642 06a2 FFF7FEFF 		bl	wolfSSL_Free
 5643              	.LVL686:
 5644 06a6 11E0     		b	.L504
 5645              	.LVL687:
 5646              	.L470:
 5647              	.LBE216:
4457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             entry->nameSz = strLength;
 5648              		.loc 1 4457 0
 5649 06a8 079B     		ldr	r3, [sp, #28]
 5650 06aa 169A     		ldr	r2, [sp, #88]
 5651 06ac 9918     		add	r1, r3, r2
 5652 06ae 159A     		ldr	r2, [sp, #84]
 5653 06b0 FFF7FEFF 		bl	memcpy
 5654              	.LVL688:
4458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             entry->type = b & 0x0F;
 5655              		.loc 1 4458 0
 5656 06b4 159B     		ldr	r3, [sp, #84]
 5657 06b6 A360     		str	r3, [r4, #8]
4459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5658              		.loc 1 4459 0
 5659 06b8 0F23     		mov	r3, #15
 5660 06ba 1E40     		and	r6, r3
 5661              	.LVL689:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 204


 5662 06bc 2673     		strb	r6, [r4, #12]
4461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *head = entry;
 5663              		.loc 1 4461 0
 5664 06be 2B68     		ldr	r3, [r5]
 5665 06c0 2360     		str	r3, [r4]
4462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 5666              		.loc 1 4462 0
 5667 06c2 2C60     		str	r4, [r5]
 5668              	.LVL690:
 5669              	.L469:
 5670              	.LBE215:
4465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 5671              		.loc 1 4465 0
 5672 06c4 139B     		ldr	r3, [sp, #76]
 5673 06c6 149A     		ldr	r2, [sp, #80]
 5674 06c8 9B18     		add	r3, r3, r2
 5675 06ca BDE7     		b	.L544
 5676              	.L504:
 5677              	.LBE217:
 5678              	.LBE213:
 5679              	.LBE212:
4504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 5680              		.loc 1 4504 0
 5681 06cc 119B     		ldr	r3, [sp, #68]
 5682 06ce 129A     		ldr	r2, [sp, #72]
 5683 06d0 9B18     		add	r3, r3, r2
 5684 06d2 1193     		str	r3, [sp, #68]
 5685 06d4 95E7     		b	.L461
 5686              	.LVL691:
 5687              	.L395:
 5688              	.LBE211:
 5689              	.LBE219:
 5690              	.LBE221:
4852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     criticalFail = 1;
 5691              		.loc 1 4852 0
 5692 06d6 002E     		cmp	r6, #0
 5693 06d8 01D0     		beq	.L407
4853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
 5694              		.loc 1 4853 0
 5695 06da 0123     		mov	r3, #1
 5696 06dc 0993     		str	r3, [sp, #36]
 5697              	.LVL692:
 5698              	.L407:
4856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 5699              		.loc 1 4856 0
 5700 06de 0E9B     		ldr	r3, [sp, #56]
 5701 06e0 0F9A     		ldr	r2, [sp, #60]
 5702 06e2 9B18     		add	r3, r3, r2
 5703 06e4 0E93     		str	r3, [sp, #56]
 5704 06e6 DBE4     		b	.L392
 5705              	.L552:
4859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 5706              		.loc 1 4859 0
 5707 06e8 099B     		ldr	r3, [sp, #36]
 5708 06ea 002B     		cmp	r3, #0
 5709 06ec 04D0     		beq	.L546
 5710              	.LBE170:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 205


 5711              	.LBE169:
 5712 06ee A023     		mov	r3, #160
 5713 06f0 5B42     		neg	r3, r3
 5714 06f2 01E0     		b	.L546
 5715              	.LVL693:
 5716              	.L488:
 5717              	.LBB223:
 5718              	.LBB222:
4698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5719              		.loc 1 4698 0
 5720 06f4 AD23     		mov	r3, #173
 5721 06f6 7EE0     		b	.L547
 5722              	.LVL694:
 5723              	.L546:
 5724              	.LBE222:
 5725              	.LBE223:
 5726 06f8 0393     		str	r3, [sp, #12]
 5727              	.LVL695:
4961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((ret = DecodeCertExtensions(cert)) < 0) {
4963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == ASN_CRIT_EXT_E)
4964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 criticalExt = ret;
4965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else
4966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ret;
4967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* advance past extensions */
4970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->srcIdx =  cert->sigIndex;
 5728              		.loc 1 4970 0
 5729 06fa 9E23     		mov	r3, #158
 5730 06fc 3A69     		ldr	r2, [r7, #16]
 5731 06fe 9B00     		lsl	r3, r3, #2
 5732 0700 FA50     		str	r2, [r7, r3]
 5733 0702 01E0     		b	.L388
 5734              	.LVL696:
 5735              	.L485:
4939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5736              		.loc 1 4939 0
 5737 0704 0023     		mov	r3, #0
 5738 0706 0393     		str	r3, [sp, #12]
 5739              	.LVL697:
 5740              	.L388:
4971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
4972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((ret = GetAlgoId(cert->source, &cert->srcIdx, &confirmOID,
 5741              		.loc 1 4973 0
 5742 0708 9E23     		mov	r3, #158
 5743 070a 9F26     		mov	r6, #159
 5744 070c 9D25     		mov	r5, #157
 5745 070e 9B00     		lsl	r3, r3, #2
 5746 0710 FB18     		add	r3, r7, r3
 5747 0712 B600     		lsl	r6, r6, #2
 5748 0714 0493     		str	r3, [sp, #16]
 5749 0716 BB59     		ldr	r3, [r7, r6]
 5750 0718 AD00     		lsl	r5, r5, #2
 5751 071a 0093     		str	r3, [sp]
 5752 071c 7859     		ldr	r0, [r7, r5]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 206


 5753 071e 0123     		mov	r3, #1
 5754 0720 0499     		ldr	r1, [sp, #16]
 5755 0722 15AA     		add	r2, sp, #84
 5756 0724 FFF7FEFF 		bl	GetAlgoId
 5757              	.LVL698:
 5758 0728 031E     		sub	r3, r0, #0
 5759 072a 65DB     		blt	.L387
 5760              	.LVL699:
 5761              	.LBB224:
 5762              	.LBB225:
3181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5763              		.loc 1 3181 0
 5764 072c 9E24     		mov	r4, #158
 5765 072e A400     		lsl	r4, r4, #2
 5766 0730 3B59     		ldr	r3, [r7, r4]
 5767 0732 7859     		ldr	r0, [r7, r5]
 5768              	.LVL700:
 5769 0734 5A1C     		add	r2, r3, #1
 5770 0736 3A51     		str	r2, [r7, r4]
 5771              	.LVL701:
3183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_BITSTR_E;
 5772              		.loc 1 3183 0
 5773 0738 C35C     		ldrb	r3, [r0, r3]
 5774              	.LVL702:
 5775 073a 032B     		cmp	r3, #3
 5776 073c 1AD1     		bne	.L498
3186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
 5777              		.loc 1 3186 0
 5778 073e 0499     		ldr	r1, [sp, #16]
 5779 0740 16AA     		add	r2, sp, #88
 5780              	.LVL703:
 5781 0742 BB59     		ldr	r3, [r7, r6]
 5782 0744 FFF7FEFF 		bl	GetLength
 5783              	.LVL704:
 5784 0748 0028     		cmp	r0, #0
 5785 074a 15DB     		blt	.L499
3191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != 0x00)
 5786              		.loc 1 3191 0
 5787 074c 3859     		ldr	r0, [r7, r4]
3189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5788              		.loc 1 3189 0
 5789 074e 169A     		ldr	r2, [sp, #88]
3191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != 0x00)
 5790              		.loc 1 3191 0
 5791 0750 7959     		ldr	r1, [r7, r5]
 5792 0752 431C     		add	r3, r0, #1
3189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5793              		.loc 1 3189 0
 5794 0754 7A61     		str	r2, [r7, #20]
3191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != 0x00)
 5795              		.loc 1 3191 0
 5796 0756 3B51     		str	r3, [r7, r4]
 5797              	.LVL705:
3192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_EXPECT_0_E;
 5798              		.loc 1 3192 0
 5799 0758 085C     		ldrb	r0, [r1, r0]
 5800              	.LVL706:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 207


 5801 075a 0028     		cmp	r0, #0
 5802 075c 0ED1     		bne	.L500
3195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->signature = &cert->source[cert->srcIdx];
 5803              		.loc 1 3195 0
 5804 075e 013A     		sub	r2, r2, #1
3196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx += cert->sigLength;
 5805              		.loc 1 3196 0
 5806 0760 C918     		add	r1, r1, r3
 5807              	.LVL707:
3197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5808              		.loc 1 3197 0
 5809 0762 D318     		add	r3, r2, r3
 5810              	.LVL708:
3195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->signature = &cert->source[cert->srcIdx];
 5811              		.loc 1 3195 0
 5812 0764 7A61     		str	r2, [r7, #20]
 5813              	.LVL709:
3196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->srcIdx += cert->sigLength;
 5814              		.loc 1 3196 0
 5815 0766 F965     		str	r1, [r7, #92]
 5816              	.LBE225:
 5817              	.LBE224:
4974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          sigType, cert->maxIdx)) < 0)
4975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
4976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((ret = GetSignature(cert)) < 0)
4978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
4979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (confirmOID != cert->signatureOID)
 5818              		.loc 1 4980 0
 5819 0768 BA69     		ldr	r2, [r7, #24]
 5820              	.LBB228:
 5821              	.LBB226:
3197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5822              		.loc 1 3197 0
 5823 076a 3B51     		str	r3, [r7, r4]
 5824              	.LBE226:
 5825              	.LBE228:
 5826              		.loc 1 4980 0
 5827 076c 159B     		ldr	r3, [sp, #84]
 5828 076e 9342     		cmp	r3, r2
 5829 0770 06D0     		beq	.L536
 5830 0772 3FE0     		b	.L553
 5831              	.LVL710:
 5832              	.L498:
 5833              	.LBB229:
 5834              	.LBB227:
3184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5835              		.loc 1 3184 0
 5836 0774 9323     		mov	r3, #147
 5837 0776 3EE0     		b	.L547
 5838              	.LVL711:
 5839              	.L499:
3187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5840              		.loc 1 3187 0
 5841 0778 8C23     		mov	r3, #140
 5842 077a 3CE0     		b	.L547
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 208


 5843              	.LVL712:
 5844              	.L500:
3193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5845              		.loc 1 3193 0
 5846 077c 9223     		mov	r3, #146
 5847              	.LVL713:
 5848 077e 3AE0     		b	.L547
 5849              	.LVL714:
 5850              	.L536:
 5851              	.LBE227:
 5852              	.LBE229:
4981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_SIG_OID_E;
4982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_SKID
4984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cert->extSubjKeyIdSet == 0
4985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           && cert->publicKey != NULL && cert->pubKeySize > 0) {
4986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifdef NO_SHA
4987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_Sha256Hash(cert->publicKey, cert->pubKeySize,
4988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                             cert->extSubjKeyId);
4989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #else
4990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_ShaHash(cert->publicKey, cert->pubKeySize,
4991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                             cert->extSubjKeyId);
4992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif
4993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret != 0)
4994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ret;
4995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
4996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
4997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
4998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  if (verify && type != CA_TYPE && type != TRUSTED_PEER_TYPE) {
 5853              		.loc 1 4998 0
 5854 0780 0C9B     		ldr	r3, [sp, #48]
 5855 0782 002B     		cmp	r3, #0
 5856 0784 2ED0     		beq	.L478
 5857              		.loc 1 4998 0 is_stmt 0 discriminator 1
 5858 0786 0B9B     		ldr	r3, [sp, #44]
 5859 0788 042B     		cmp	r3, #4
 5860 078a 2BD0     		beq	.L478
 5861              		.loc 1 4998 0 discriminator 2
 5862 078c 0E2B     		cmp	r3, #14
 5863 078e 29D0     		beq	.L478
 5864              	.LVL715:
 5865              	.LBB230:
4999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Signer* ca = NULL;
5000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifndef NO_SKID
5001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (cert->extAuthKeyIdSet)
5002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ca = GetCA(cm, cert->extAuthKeyId);
5003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ca == NULL)
5004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ca = GetCAByName(cm, cert->issuerHash);
5005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #else /* NO_SKID */
5006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ca = GetCA(cm, cert->issuerHash);
 5866              		.loc 1 5006 0 is_stmt 1
 5867 0790 391C     		mov	r1, r7
 5868 0792 0D98     		ldr	r0, [sp, #52]
 5869              	.LVL716:
 5870 0794 4831     		add	r1, r1, #72
 5871 0796 FFF7FEFF 		bl	GetCA
 5872              	.LVL717:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 209


5007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif /* NO SKID */
5008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("About to verify certificate signature");
5009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ca) {
5011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_OCSP
5012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* Need the ca's public key hash for OCSP */
5013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef NO_SHA
5014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_Sha256Hash(ca->publicKey, ca->pubKeySize,
5015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 cert->issuerKeyHash);
5016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else /* NO_SHA */
5017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = wc_ShaHash(ca->publicKey, ca->pubKeySize,
5018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 cert->issuerKeyHash);
5019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif /* NO_SHA */
5020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret != 0)
5021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ret;
5022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_OCSP */
5023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* try to confirm/verify signature */
5024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (!ConfirmSignature(cert->source + cert->certBegin,
5025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->sigIndex - cert->certBegin,
5026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ca->publicKey, ca->pubKeySize, ca->keyOID,
5027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->signature, cert->sigLength, cert->signatureOID,
5028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->heap)) {
5029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Confirm signature failed");
5030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_SIG_CONFIRM_E;
5031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
5032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef IGNORE_NAME_CONSTRAINTS
5033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* check that this cert's name is permitted by the signer's
5034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              * name constraints */
5035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (!ConfirmNameConstraints(ca, cert)) {
5036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("Confirm name constraint failed");
5037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_NAME_INVALID_E;
5038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
5039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* IGNORE_NAME_CONSTRAINTS */
5040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
5042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* no signer */
5043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("No CA signer to verify with");
5044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_NO_SIGNER_E;
 5873              		.loc 1 5044 0
 5874 079a BC23     		mov	r3, #188
5010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_OCSP
 5875              		.loc 1 5010 0
 5876 079c 0028     		cmp	r0, #0
 5877 079e 2AD0     		beq	.L547
 5878              	.LBB231:
 5879              	.LBB232:
3487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_MD5
 5880              		.loc 1 3487 0
 5881 07a0 8322     		mov	r2, #131
 5882              	.LBE232:
 5883              	.LBE231:
5024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->sigIndex - cert->certBegin,
 5884              		.loc 1 5024 0
 5885 07a2 F968     		ldr	r1, [r7, #12]
 5886 07a4 3B69     		ldr	r3, [r7, #16]
 5887 07a6 7859     		ldr	r0, [r7, r5]
 5888              	.LVL718:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 210


 5889              	.LBB235:
 5890              	.LBB233:
3487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_MD5
 5891              		.loc 1 3487 0
 5892 07a8 9200     		lsl	r2, r2, #2
 5893              	.LBE233:
 5894              	.LBE235:
5024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->sigIndex - cert->certBegin,
 5895              		.loc 1 5024 0
 5896 07aa 4018     		add	r0, r0, r1
 5897 07ac 591A     		sub	r1, r3, r1
 5898              	.LVL719:
 5899              	.LBB236:
 5900              	.LBB234:
3487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_MD5
 5901              		.loc 1 3487 0
 5902 07ae BB69     		ldr	r3, [r7, #24]
 5903 07b0 9342     		cmp	r3, r2
 5904 07b2 12D0     		beq	.L480
 5905 07b4 06D8     		bhi	.L481
 5906 07b6 164A     		ldr	r2, .L556+16
 5907 07b8 9342     		cmp	r3, r2
 5908 07ba 0AD0     		beq	.L482
 5909 07bc 0332     		add	r2, r2, #3
 5910 07be 9342     		cmp	r3, r2
 5911 07c0 0ED1     		bne	.L479
 5912 07c2 06E0     		b	.L482
 5913              	.L481:
 5914 07c4 134A     		ldr	r2, .L556+20
 5915 07c6 9342     		cmp	r3, r2
 5916 07c8 03D0     		beq	.L482
 5917 07ca 134A     		ldr	r2, .L556+24
 5918 07cc 9342     		cmp	r3, r2
 5919 07ce 04D0     		beq	.L480
 5920 07d0 06E0     		b	.L479
 5921              	.L482:
3508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHAh;
 5922              		.loc 1 3508 0
 5923 07d2 16AA     		add	r2, sp, #88
 5924 07d4 FFF7FEFF 		bl	wc_ShaHash
 5925              	.LVL720:
 5926 07d8 02E0     		b	.L479
 5927              	.LVL721:
 5928              	.L480:
3517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHA256h;
 5929              		.loc 1 3517 0
 5930 07da 16AA     		add	r2, sp, #88
 5931 07dc FFF7FEFF 		bl	wc_Sha256Hash
 5932              	.LVL722:
 5933              	.L479:
 5934              	.LBE234:
 5935              	.LBE236:
5030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 5936              		.loc 1 5030 0
 5937 07e0 9B23     		mov	r3, #155
 5938 07e2 08E0     		b	.L547
 5939              	.LVL723:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 211


 5940              	.L478:
 5941              	.LBE230:
5045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (badDate != 0)
 5942              		.loc 1 5048 0
 5943 07e4 059A     		ldr	r2, [sp, #20]
 5944 07e6 039B     		ldr	r3, [sp, #12]
 5945 07e8 002A     		cmp	r2, #0
 5946 07ea 05D0     		beq	.L387
 5947 07ec 131C     		mov	r3, r2
 5948 07ee 03E0     		b	.L387
 5949              	.LVL724:
 5950              	.L486:
4954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
 5951              		.loc 1 4954 0
 5952 07f0 8D23     		mov	r3, #141
 5953 07f2 00E0     		b	.L547
 5954              	.LVL725:
 5955              	.L553:
4981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 5956              		.loc 1 4981 0
 5957 07f4 9823     		mov	r3, #152
 5958              	.LVL726:
 5959              	.L547:
 5960              	.LBB237:
5044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
 5961              		.loc 1 5044 0
 5962 07f6 5B42     		neg	r3, r3
 5963              	.LVL727:
 5964              	.L387:
 5965              	.LBE237:
5049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return badDate;
5050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (criticalExt != 0)
5052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return criticalExt;
5053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
5055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 5966              		.loc 1 5055 0
 5967 07f8 181C     		mov	r0, r3
 5968 07fa 1FB0     		add	sp, sp, #124
 5969              		@ sp needed
 5970              	.LVL728:
 5971 07fc F0BD     		pop	{r4, r5, r6, r7, pc}
 5972              	.L557:
 5973 07fe C046     		.align	2
 5974              	.L556:
 5975 0800 F1020000 		.word	753
 5976 0804 F2020000 		.word	754
 5977 0808 F5020000 		.word	757
 5978 080c EE020000 		.word	750
 5979 0810 05020000 		.word	517
 5980 0814 89020000 		.word	649
 5981 0818 8F020000 		.word	655
 5982              		.cfi_endproc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 212


 5983              	.LFE64:
 5984              		.size	ParseCertRelative, .-ParseCertRelative
 5985              		.section	.text.ParseCert,"ax",%progbits
 5986              		.align	1
 5987              		.global	ParseCert
 5988              		.code	16
 5989              		.thumb_func
 5990              		.type	ParseCert, %function
 5991              	ParseCert:
 5992              	.LFB63:
4864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int   ret;
 5993              		.loc 1 4864 0
 5994              		.cfi_startproc
 5995              	.LVL729:
 5996 0000 70B5     		push	{r4, r5, r6, lr}
 5997              		.cfi_def_cfa_offset 16
 5998              		.cfi_offset 4, -16
 5999              		.cfi_offset 5, -12
 6000              		.cfi_offset 6, -8
 6001              		.cfi_offset 14, -4
4864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int   ret;
 6002              		.loc 1 4864 0
 6003 0002 041C     		mov	r4, r0
4868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0)
 6004              		.loc 1 4868 0
 6005 0004 FFF7FEFF 		bl	ParseCertRelative
 6006              	.LVL730:
 6007 0008 061C     		mov	r6, r0
 6008              	.LVL731:
 6009 000a 051E     		sub	r5, r0, #0
4869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
 6010              		.loc 1 4869 0
 6011 000c 2ADB     		blt	.L559
4872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ptr = (char*) XMALLOC(cert->subjectCNLen + 1, cert->heap,
 6012              		.loc 1 4872 0
 6013 000e 606E     		ldr	r0, [r4, #100]
 6014              	.LVL732:
 6015 0010 0028     		cmp	r0, #0
 6016 0012 11DD     		ble	.L560
4873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               DYNAMIC_TYPE_SUBJECT_CN);
 6017              		.loc 1 4873 0
 6018 0014 0130     		add	r0, r0, #1
 6019 0016 FFF7FEFF 		bl	wolfSSL_Malloc
 6020              	.LVL733:
 6021 001a 051E     		sub	r5, r0, #0
 6022              	.LVL734:
4875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
 6023              		.loc 1 4875 0
 6024 001c 02D1     		bne	.L561
 6025              	.LVL735:
 6026              	.L562:
4876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(ptr, cert->subjectCN, cert->subjectCNLen);
 6027              		.loc 1 4876 0
 6028 001e 7D25     		mov	r5, #125
 6029 0020 6D42     		neg	r5, r5
 6030 0022 1FE0     		b	.L559
 6031              	.LVL736:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 213


 6032              	.L561:
4877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ptr[cert->subjectCNLen] = '\0';
 6033              		.loc 1 4877 0
 6034 0024 626E     		ldr	r2, [r4, #100]
 6035 0026 216E     		ldr	r1, [r4, #96]
 6036 0028 FFF7FEFF 		bl	memcpy
 6037              	.LVL737:
4878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectCN = ptr;
 6038              		.loc 1 4878 0
 6039 002c 0023     		mov	r3, #0
 6040 002e 626E     		ldr	r2, [r4, #100]
 6041 0030 AB54     		strb	r3, [r5, r2]
4880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 6042              		.loc 1 4880 0
 6043 0032 0133     		add	r3, r3, #1
4879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->subjectCNStored = 1;
 6044              		.loc 1 4879 0
 6045 0034 2566     		str	r5, [r4, #96]
4880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 6046              		.loc 1 4880 0
 6047 0036 E366     		str	r3, [r4, #108]
 6048              	.LVL738:
 6049              	.L560:
4883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           cert->publicKey != NULL  && cert->pubKeySize > 0) {
 6050              		.loc 1 4883 0
 6051 0038 0B4B     		ldr	r3, .L571
 6052 003a E269     		ldr	r2, [r4, #28]
 6053 003c 351C     		mov	r5, r6
 6054 003e 9A42     		cmp	r2, r3
 6055 0040 10D1     		bne	.L559
 6056              	.LVL739:
4883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           cert->publicKey != NULL  && cert->pubKeySize > 0) {
 6057              		.loc 1 4883 0 is_stmt 0 discriminator 1
 6058 0042 2368     		ldr	r3, [r4]
 6059 0044 002B     		cmp	r3, #0
 6060 0046 0DD0     		beq	.L559
4884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ptr = (char*) XMALLOC(cert->pubKeySize, cert->heap,
 6061              		.loc 1 4884 0 is_stmt 1
 6062 0048 6068     		ldr	r0, [r4, #4]
 6063 004a 0028     		cmp	r0, #0
 6064 004c 0AD0     		beq	.L559
4885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               DYNAMIC_TYPE_PUBLIC_KEY);
 6065              		.loc 1 4885 0
 6066 004e FFF7FEFF 		bl	wolfSSL_Malloc
 6067              	.LVL740:
 6068 0052 061E     		sub	r6, r0, #0
 6069              	.LVL741:
4887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
 6070              		.loc 1 4887 0
 6071 0054 E3D0     		beq	.L562
4889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->publicKey = (byte *)ptr;
 6072              		.loc 1 4889 0
 6073 0056 2168     		ldr	r1, [r4]
 6074 0058 6268     		ldr	r2, [r4, #4]
 6075 005a FFF7FEFF 		bl	memcpy
 6076              	.LVL742:
4891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 214


 6077              		.loc 1 4891 0
 6078 005e 0123     		mov	r3, #1
4890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->pubKeyStored = 1;
 6079              		.loc 1 4890 0
 6080 0060 2660     		str	r6, [r4]
4891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
 6081              		.loc 1 4891 0
 6082 0062 A360     		str	r3, [r4, #8]
 6083              	.LVL743:
 6084              	.L559:
4895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
 6085              		.loc 1 4895 0
 6086 0064 281C     		mov	r0, r5
 6087              		@ sp needed
 6088              	.LVL744:
 6089 0066 70BD     		pop	{r4, r5, r6, pc}
 6090              	.L572:
 6091              		.align	2
 6092              	.L571:
 6093 0068 85020000 		.word	645
 6094              		.cfi_endproc
 6095              	.LFE63:
 6096              		.size	ParseCert, .-ParseCert
 6097              		.section	.text.MakeSigner,"ax",%progbits
 6098              		.align	1
 6099              		.global	MakeSigner
 6100              		.code	16
 6101              		.thumb_func
 6102              		.type	MakeSigner, %function
 6103              	MakeSigner:
 6104              	.LFB65:
5056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !NO_ASN_TIME */
5057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Create and init an new signer */
5059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** Signer* MakeSigner(void* heap)
5060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 6105              		.loc 1 5060 0
 6106              		.cfi_startproc
 6107              	.LVL745:
 6108 0000 08B5     		push	{r3, lr}
 6109              		.cfi_def_cfa_offset 8
 6110              		.cfi_offset 3, -8
 6111              		.cfi_offset 14, -4
5061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     Signer* signer = (Signer*) XMALLOC(sizeof(Signer), heap,
 6112              		.loc 1 5061 0
 6113 0002 3820     		mov	r0, #56
 6114              	.LVL746:
 6115 0004 FFF7FEFF 		bl	wolfSSL_Malloc
 6116              	.LVL747:
5062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                        DYNAMIC_TYPE_SIGNER);
5063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (signer) {
 6117              		.loc 1 5063 0
 6118 0008 0028     		cmp	r0, #0
 6119 000a 08D0     		beq	.L574
5064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         signer->pubKeySize = 0;
 6120              		.loc 1 5064 0
 6121 000c 0023     		mov	r3, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 215


 6122 000e 0360     		str	r3, [r0]
5065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         signer->keyOID     = 0;
 6123              		.loc 1 5065 0
 6124 0010 4360     		str	r3, [r0, #4]
5066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         signer->publicKey  = NULL;
 6125              		.loc 1 5066 0
 6126 0012 C360     		str	r3, [r0, #12]
5067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         signer->nameLen    = 0;
 6127              		.loc 1 5067 0
 6128 0014 0361     		str	r3, [r0, #16]
5068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         signer->name       = NULL;
 6129              		.loc 1 5068 0
 6130 0016 4361     		str	r3, [r0, #20]
5069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #ifndef IGNORE_NAME_CONSTRAINTS
5070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             signer->permittedNames = NULL;
 6131              		.loc 1 5070 0
 6132 0018 8361     		str	r3, [r0, #24]
5071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             signer->excludedNames = NULL;
 6133              		.loc 1 5071 0
 6134 001a C361     		str	r3, [r0, #28]
5072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         #endif /* IGNORE_NAME_CONSTRAINTS */
5073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         signer->next       = NULL;
 6135              		.loc 1 5073 0
 6136 001c 4363     		str	r3, [r0, #52]
 6137              	.L574:
5074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
5076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return signer;
5078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 6138              		.loc 1 5078 0
 6139              		@ sp needed
 6140 001e 08BD     		pop	{r3, pc}
 6141              		.cfi_endproc
 6142              	.LFE65:
 6143              		.size	MakeSigner, .-MakeSigner
 6144              		.section	.text.FreeSigner,"ax",%progbits
 6145              		.align	1
 6146              		.global	FreeSigner
 6147              		.code	16
 6148              		.thumb_func
 6149              		.type	FreeSigner, %function
 6150              	FreeSigner:
 6151              	.LFB66:
5079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Free an individual signer */
5082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeSigner(Signer* signer, void* heap)
5083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 6152              		.loc 1 5083 0
 6153              		.cfi_startproc
 6154              	.LVL748:
 6155 0000 38B5     		push	{r3, r4, r5, lr}
 6156              		.cfi_def_cfa_offset 16
 6157              		.cfi_offset 3, -16
 6158              		.cfi_offset 4, -12
 6159              		.cfi_offset 5, -8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 216


 6160              		.cfi_offset 14, -4
 6161              		.loc 1 5083 0
 6162 0002 041C     		mov	r4, r0
 6163              	.LBB238:
5084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(signer->name, heap, DYNAMIC_TYPE_SUBJECT_CN);
 6164              		.loc 1 5084 0
 6165 0004 4069     		ldr	r0, [r0, #20]
 6166              	.LVL749:
 6167              	.LBE238:
5083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(signer->name, heap, DYNAMIC_TYPE_SUBJECT_CN);
 6168              		.loc 1 5083 0
 6169 0006 0D1C     		mov	r5, r1
 6170              	.LBB239:
 6171              		.loc 1 5084 0
 6172 0008 0028     		cmp	r0, #0
 6173 000a 01D0     		beq	.L579
 6174              		.loc 1 5084 0 is_stmt 0 discriminator 1
 6175 000c FFF7FEFF 		bl	wolfSSL_Free
 6176              	.LVL750:
 6177              	.L579:
 6178              	.LBE239:
 6179              	.LBB240:
5085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(signer->publicKey, heap, DYNAMIC_TYPE_PUBLIC_KEY);
 6180              		.loc 1 5085 0 is_stmt 1
 6181 0010 E068     		ldr	r0, [r4, #12]
 6182              	.LVL751:
 6183 0012 0028     		cmp	r0, #0
 6184 0014 01D0     		beq	.L580
 6185              		.loc 1 5085 0 is_stmt 0 discriminator 1
 6186 0016 FFF7FEFF 		bl	wolfSSL_Free
 6187              	.LVL752:
 6188              	.L580:
 6189              	.LBE240:
5086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef IGNORE_NAME_CONSTRAINTS
5087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (signer->permittedNames)
 6190              		.loc 1 5087 0 is_stmt 1
 6191 001a A069     		ldr	r0, [r4, #24]
 6192 001c 0028     		cmp	r0, #0
 6193 001e 02D0     		beq	.L581
5088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             FreeNameSubtrees(signer->permittedNames, heap);
 6194              		.loc 1 5088 0
 6195 0020 291C     		mov	r1, r5
 6196 0022 FFF7FEFF 		bl	FreeNameSubtrees
 6197              	.LVL753:
 6198              	.L581:
5089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (signer->excludedNames)
 6199              		.loc 1 5089 0
 6200 0026 E069     		ldr	r0, [r4, #28]
 6201 0028 0028     		cmp	r0, #0
 6202 002a 02D0     		beq	.L582
5090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             FreeNameSubtrees(signer->excludedNames, heap);
 6203              		.loc 1 5090 0
 6204 002c 291C     		mov	r1, r5
 6205 002e FFF7FEFF 		bl	FreeNameSubtrees
 6206              	.LVL754:
 6207              	.L582:
 6208              	.LBB241:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 217


5091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
5092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(signer, heap, DYNAMIC_TYPE_SIGNER);
 6209              		.loc 1 5092 0
 6210 0032 201C     		mov	r0, r4
 6211 0034 FFF7FEFF 		bl	wolfSSL_Free
 6212              	.LVL755:
 6213              	.LBE241:
5093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
5095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 6214              		.loc 1 5095 0
 6215              		@ sp needed
 6216              	.LVL756:
 6217              	.LVL757:
 6218 0038 38BD     		pop	{r3, r4, r5, pc}
 6219              		.cfi_endproc
 6220              	.LFE66:
 6221              		.size	FreeSigner, .-FreeSigner
 6222              		.section	.text.FreeSignerTable,"ax",%progbits
 6223              		.align	1
 6224              		.global	FreeSignerTable
 6225              		.code	16
 6226              		.thumb_func
 6227              		.type	FreeSignerTable, %function
 6228              	FreeSignerTable:
 6229              	.LFB67:
5096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Free the whole singer table with number of rows */
5099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeSignerTable(Signer** table, int rows, void* heap)
5100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 6230              		.loc 1 5100 0
 6231              		.cfi_startproc
 6232              	.LVL758:
 6233 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 6234              		.cfi_def_cfa_offset 32
 6235              		.cfi_offset 0, -32
 6236              		.cfi_offset 1, -28
 6237              		.cfi_offset 2, -24
 6238              		.cfi_offset 4, -20
 6239              		.cfi_offset 5, -16
 6240              		.cfi_offset 6, -12
 6241              		.cfi_offset 7, -8
 6242              		.cfi_offset 14, -4
 6243              		.loc 1 5100 0
 6244 0002 0E1C     		mov	r6, r1
 6245 0004 041C     		mov	r4, r0
5101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
5102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < rows; i++) {
 6246              		.loc 1 5103 0
 6247 0006 0025     		mov	r5, #0
5100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
 6248              		.loc 1 5100 0
 6249 0008 0192     		str	r2, [sp, #4]
 6250              	.LVL759:
 6251              	.L596:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 218


 6252              		.loc 1 5103 0 discriminator 1
 6253 000a B542     		cmp	r5, r6
 6254 000c 0BDA     		bge	.L600
 6255              	.LBB242:
5104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Signer* signer = table[i];
 6256              		.loc 1 5104 0
 6257 000e 2068     		ldr	r0, [r4]
 6258              	.LVL760:
 6259              	.L597:
5105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (signer) {
 6260              		.loc 1 5105 0
 6261 0010 0028     		cmp	r0, #0
 6262 0012 05D0     		beq	.L601
 6263              	.LBB243:
5106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             Signer* next = signer->next;
 6264              		.loc 1 5106 0
 6265 0014 476B     		ldr	r7, [r0, #52]
 6266              	.LVL761:
5107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             FreeSigner(signer, heap);
 6267              		.loc 1 5107 0
 6268 0016 0199     		ldr	r1, [sp, #4]
 6269 0018 FFF7FEFF 		bl	FreeSigner
 6270              	.LVL762:
5108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             signer = next;
 6271              		.loc 1 5108 0
 6272 001c 381C     		mov	r0, r7
 6273 001e F7E7     		b	.L597
 6274              	.LVL763:
 6275              	.L601:
 6276              	.LBE243:
5109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         table[i] = NULL;
 6277              		.loc 1 5110 0 discriminator 2
 6278 0020 01C4     		stmia	r4!, {r0}
 6279              	.LBE242:
5103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Signer* signer = table[i];
 6280              		.loc 1 5103 0 discriminator 2
 6281 0022 0135     		add	r5, r5, #1
 6282              	.LVL764:
 6283 0024 F1E7     		b	.L596
 6284              	.LVL765:
 6285              	.L600:
5111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 6286              		.loc 1 5112 0
 6287              		@ sp needed
 6288              	.LVL766:
 6289              	.LVL767:
 6290 0026 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 6291              		.cfi_endproc
 6292              	.LFE67:
 6293              		.size	FreeSignerTable, .-FreeSignerTable
 6294              		.section	.text.SetMyVersion,"ax",%progbits
 6295              		.align	1
 6296              		.global	SetMyVersion
 6297              		.code	16
 6298              		.thumb_func
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 219


 6299              		.type	SetMyVersion, %function
 6300              	SetMyVersion:
 6301              	.LFB68:
5113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_TRUST_PEER_CERT
5115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Free an individual trusted peer cert */
5116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeTrustedPeer(TrustedPeerCert* tp, void* heap)
5117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (tp == NULL) {
5119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return;
5120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (tp->name) {
5123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(tp->name, heap, DYNAMIC_TYPE_SUBJECT_CN);
5124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (tp->sig) {
5127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(tp->sig, heap, DYNAMIC_TYPE_SIGNATURE);
5128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef IGNORE_NAME_CONSTRAINTS
5130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (tp->permittedNames)
5131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             FreeNameSubtrees(tp->permittedNames, heap);
5132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (tp->excludedNames)
5133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             FreeNameSubtrees(tp->excludedNames, heap);
5134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
5135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(tp, heap, DYNAMIC_TYPE_CERT);
5136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
5138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Free the whole Trusted Peer linked list */
5141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeTrustedPeerTable(TrustedPeerCert** table, int rows, void* heap)
5142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
5144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < rows; i++) {
5146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         TrustedPeerCert* tp = table[i];
5147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (tp) {
5148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             TrustedPeerCert* next = tp->next;
5149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             FreeTrustedPeer(tp, heap);
5150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             tp = next;
5151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         table[i] = NULL;
5153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_TRUST_PEER_CERT */
5156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int SetMyVersion(word32 version, byte* output, int header)
5158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 6302              		.loc 1 5158 0
 6303              		.cfi_startproc
 6304              	.LVL768:
5159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i = 0;
5160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL)
 6305              		.loc 1 5161 0
 6306 0000 0029     		cmp	r1, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 220


 6307 0002 0FD0     		beq	.L605
5159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i = 0;
 6308              		.loc 1 5159 0
 6309 0004 0023     		mov	r3, #0
5162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (header) {
 6310              		.loc 1 5164 0
 6311 0006 9A42     		cmp	r2, r3
 6312 0008 04D0     		beq	.L604
 6313              	.LVL769:
5165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[i++] = ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED;
 6314              		.loc 1 5165 0
 6315 000a A033     		add	r3, r3, #160
 6316 000c 0B70     		strb	r3, [r1]
 6317              	.LVL770:
5166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[i++] = ASN_BIT_STRING;
 6318              		.loc 1 5166 0
 6319 000e 9D3B     		sub	r3, r3, #157
 6320 0010 4B70     		strb	r3, [r1, #1]
 6321 0012 013B     		sub	r3, r3, #1
 6322              	.LVL771:
 6323              	.L604:
5167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = ASN_INTEGER;
 6324              		.loc 1 5168 0
 6325 0014 0222     		mov	r2, #2
 6326              	.LVL772:
 6327 0016 CA54     		strb	r2, [r1, r3]
 6328              	.LVL773:
5169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = 0x01;
 6329              		.loc 1 5169 0
 6330 0018 C918     		add	r1, r1, r3
 6331              	.LVL774:
 6332 001a 013A     		sub	r2, r2, #1
5170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = (byte)version;
 6333              		.loc 1 5170 0
 6334 001c 8870     		strb	r0, [r1, #2]
5169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = 0x01;
 6335              		.loc 1 5169 0
 6336 001e 4A70     		strb	r2, [r1, #1]
5171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return i;
 6337              		.loc 1 5172 0
 6338 0020 D81C     		add	r0, r3, #3
 6339              	.LVL775:
 6340 0022 01E0     		b	.L603
 6341              	.LVL776:
 6342              	.L605:
5162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 6343              		.loc 1 5162 0
 6344 0024 AD20     		mov	r0, #173
 6345              	.LVL777:
 6346 0026 4042     		neg	r0, r0
 6347              	.LVL778:
 6348              	.L603:
5173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 221


 6349              		.loc 1 5173 0
 6350              		@ sp needed
 6351 0028 7047     		bx	lr
 6352              		.cfi_endproc
 6353              	.LFE68:
 6354              		.size	SetMyVersion, .-SetMyVersion
 6355              		.section	.text.SetSerialNumber,"ax",%progbits
 6356              		.align	1
 6357              		.global	SetSerialNumber
 6358              		.code	16
 6359              		.thumb_func
 6360              		.type	SetSerialNumber, %function
 6361              	SetSerialNumber:
 6362              	.LFB69:
5174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int SetSerialNumber(const byte* sn, word32 snSz, byte* output)
5177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 6363              		.loc 1 5177 0
 6364              		.cfi_startproc
 6365              	.LVL779:
 6366 0000 10B5     		push	{r4, lr}
 6367              		.cfi_def_cfa_offset 8
 6368              		.cfi_offset 4, -8
 6369              		.cfi_offset 14, -4
 6370              		.loc 1 5177 0
 6371 0002 031C     		mov	r3, r0
 6372 0004 0C1C     		mov	r4, r1
5178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int result = 0;
5179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("SetSerialNumber");
5181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (sn == NULL || output == NULL)
 6373              		.loc 1 5182 0
 6374 0006 0028     		cmp	r0, #0
 6375 0008 1BD0     		beq	.L612
 6376              		.loc 1 5182 0 is_stmt 0 discriminator 1
 6377 000a 002A     		cmp	r2, #0
 6378 000c 19D0     		beq	.L612
5178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int result = 0;
 6379              		.loc 1 5178 0 is_stmt 1
 6380 000e 0020     		mov	r0, #0
 6381              	.LVL780:
5183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (snSz <= EXTERNAL_SERIAL_SIZE) {
 6382              		.loc 1 5185 0
 6383 0010 2029     		cmp	r1, #32
 6384 0012 18D8     		bhi	.L609
5186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[0] = ASN_INTEGER;
 6385              		.loc 1 5186 0
 6386 0014 0221     		mov	r1, #2
 6387              	.LVL781:
 6388 0016 1170     		strb	r1, [r2]
5187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* The serial number is always positive. When encoding the
5188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****          * INTEGER, if the MSB is 1, add a padding zero to keep the
5189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****          * number positive. */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 222


5190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (sn[0] & 0x80) {
 6389              		.loc 1 5190 0
 6390 0018 1978     		ldrb	r1, [r3]
 6391 001a 7F29     		cmp	r1, #127
 6392 001c 09D9     		bls	.L610
5191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             output[1] = (byte)snSz + 1;
 6393              		.loc 1 5191 0
 6394 001e 611C     		add	r1, r4, #1
 6395 0020 5170     		strb	r1, [r2, #1]
5192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             output[2] = 0;
 6396              		.loc 1 5192 0
 6397 0022 9070     		strb	r0, [r2, #2]
5193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(&output[3], sn, snSz);
 6398              		.loc 1 5193 0
 6399 0024 191C     		mov	r1, r3
 6400 0026 D01C     		add	r0, r2, #3
 6401 0028 221C     		mov	r2, r4
 6402              	.LVL782:
 6403 002a FFF7FEFF 		bl	memcpy
 6404              	.LVL783:
5194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             result = snSz + 3;
 6405              		.loc 1 5194 0
 6406 002e E01C     		add	r0, r4, #3
 6407              	.LVL784:
 6408 0030 09E0     		b	.L609
 6409              	.LVL785:
 6410              	.L610:
5195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
5197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             output[1] = (byte)snSz;
 6411              		.loc 1 5197 0
 6412 0032 5470     		strb	r4, [r2, #1]
5198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(&output[2], sn, snSz);
 6413              		.loc 1 5198 0
 6414 0034 901C     		add	r0, r2, #2
 6415 0036 191C     		mov	r1, r3
 6416 0038 221C     		mov	r2, r4
 6417              	.LVL786:
 6418 003a FFF7FEFF 		bl	memcpy
 6419              	.LVL787:
5199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             result = snSz + 2;
 6420              		.loc 1 5199 0
 6421 003e A01C     		add	r0, r4, #2
 6422              	.LVL788:
 6423 0040 01E0     		b	.L609
 6424              	.LVL789:
 6425              	.L612:
5183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
 6426              		.loc 1 5183 0
 6427 0042 AD20     		mov	r0, #173
 6428              	.LVL790:
 6429 0044 4042     		neg	r0, r0
 6430              	.LVL791:
 6431              	.L609:
5200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return result;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 223


5203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 6432              		.loc 1 5203 0
 6433              		@ sp needed
 6434              	.LVL792:
 6435 0046 10BD     		pop	{r4, pc}
 6436              		.cfi_endproc
 6437              	.LFE69:
 6438              		.size	SetSerialNumber, .-SetSerialNumber
 6439              		.section	.text.GetNameHash,"ax",%progbits
 6440              		.align	1
 6441              		.global	GetNameHash
 6442              		.code	16
 6443              		.thumb_func
 6444              		.type	GetNameHash, %function
 6445              	GetNameHash:
 6446              	.LFB70:
5204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_CERT         = "-----BEGIN CERTIFICATE-----";
5208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_CERT           = "-----END CERTIFICATE-----";
5209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_CERT_REQ     = "-----BEGIN CERTIFICATE REQUEST-----";
5210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_CERT_REQ       = "-----END CERTIFICATE REQUEST-----";
5211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_DH_PARAM     = "-----BEGIN DH PARAMETERS-----";
5212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_DH_PARAM       = "-----END DH PARAMETERS-----";
5213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_X509_CRL     = "-----BEGIN X509 CRL-----";
5214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_X509_CRL       = "-----END X509 CRL-----";
5215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_RSA_PRIV     = "-----BEGIN RSA PRIVATE KEY-----";
5216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_RSA_PRIV       = "-----END RSA PRIVATE KEY-----";
5217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_PRIV_KEY     = "-----BEGIN PRIVATE KEY-----";
5218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_PRIV_KEY       = "-----END PRIVATE KEY-----";
5219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_ENC_PRIV_KEY = "-----BEGIN ENCRYPTED PRIVATE KEY-----";
5220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_ENC_PRIV_KEY   = "-----END ENCRYPTED PRIVATE KEY-----";
5221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_EC_PRIV      = "-----BEGIN EC PRIVATE KEY-----";
5222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_EC_PRIV        = "-----END EC PRIVATE KEY-----";
5223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_DSA_PRIV     = "-----BEGIN DSA PRIVATE KEY-----";
5224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_DSA_PRIV       = "-----END DSA PRIVATE KEY-----";
5225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* BEGIN_PUB_KEY      = "-----BEGIN PUBLIC KEY-----";
5226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** const char* END_PUB_KEY        = "-----END PUBLIC KEY-----";
5227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_KEY_GEN) || defined(WOLFSSL_CERT_GEN)
5229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Used for compatibility API */
5231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_DerToPem(const byte* der, word32 derSz,
5232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 byte* output, word32 outSz, int type)
5233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return wc_DerToPemEx(der, derSz, output, outSz, NULL, type);
5235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* convert der buffer to pem into output, can't do inplace, der and output
5238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    need to be different */
5239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_DerToPemEx(const byte* der, word32 derSz, byte* output, word32 outSz,
5240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              byte *cipher_info, int type)
5241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char* header = NULL;
5244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char* footer = NULL;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 224


5245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char header[40 + HEADER_ENCRYPTED_KEY_SIZE];
5247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char footer[40];
5248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int headerLen = 40 + HEADER_ENCRYPTED_KEY_SIZE;
5251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int footerLen = 40;
5252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
5253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int err;
5254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int outLen;   /* return length or error */
5255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == output)      /* no in place conversion */
5257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     header = (char*)XMALLOC(headerLen, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (header == NULL)
5262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
5263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     footer = (char*)XMALLOC(footerLen, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (footer == NULL) {
5266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(header, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
5268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (type == CERT_TYPE) {
5271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(header, BEGIN_CERT, headerLen);
5272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "\n", 1);
5273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(footer, END_CERT, footerLen);
5275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(footer, "\n", 1);
5276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (type == PRIVATEKEY_TYPE) {
5278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(header, BEGIN_RSA_PRIV, headerLen);
5279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "\n", 1);
5280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(footer, END_RSA_PRIV, footerLen);
5282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(footer, "\n", 1);
5283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_DSA
5285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (type == DSA_PRIVATEKEY_TYPE) {
5286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(header, BEGIN_DSA_PRIV, headerLen);
5287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "\n", 1);
5288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(footer, END_DSA_PRIV, footerLen);
5290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(footer, "\n", 1);
5291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
5294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (type == ECC_PRIVATEKEY_TYPE) {
5295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(header, BEGIN_EC_PRIV, headerLen);
5296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "\n", 1);
5297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(footer, END_EC_PRIV, footerLen);
5299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(footer, "\n", 1);
5300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 225


5302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_REQ
5303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (type == CERTREQ_TYPE)
5304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
5305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(header, BEGIN_CERT_REQ, headerLen);
5306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "\n", 1);
5307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCPY(footer, END_CERT_REQ, footerLen);
5309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(footer, "\n", 1);
5310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
5313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(header, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(footer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* extra header information for encrypted key */
5321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cipher_info != NULL) {
5322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "Proc-Type: 4,ENCRYPTED\n", 23);
5323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "DEK-Info: ", 10);
5324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, (char*)cipher_info, XSTRLEN((char*)cipher_info));
5325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XSTRNCAT(header, "\n\n", 2);
5326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     headerLen = (int)XSTRLEN(header);
5329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     footerLen = (int)XSTRLEN(footer);
5330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!der || !output) {
5332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(header, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(footer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* don't even try if outSz too short */
5340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < headerLen + footerLen + derSz) {
5341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(header, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(footer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* header */
5349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output, header, headerLen);
5350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     i = headerLen;
5351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(header, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* body */
5357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     outLen = outSz - (headerLen + footerLen);  /* input to Base64_Encode */
5358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (err = Base64_Encode(der, derSz, output + i, (word32*)&outLen)) < 0) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 226


5359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(footer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return err;
5363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     i += outLen;
5365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* footer */
5367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (i + footerLen) > (int)outSz) {
5368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(footer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + i, footer, footerLen);
5374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(footer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return outLen + headerLen + footerLen;
5380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_KEY_GEN || WOLFSSL_CERT_GEN */
5383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if !defined(NO_RSA) && (defined(WOLFSSL_CERT_GEN) || (defined(WOLFSSL_KEY_GEN) && !defined(HAVE_US
5385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* USER RSA ifdef portions used instead of refactor in consideration for
5386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    possible fips build */
5387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Write a public RSA key to output */
5388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetRsaPublicKey(byte* output, RsaKey* key,
5389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                            int outLen, int with_header)
5390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* n = NULL;
5393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* e = NULL;
5394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte n[MAX_RSA_INT_SZ];
5396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte e[MAX_RSA_E_SZ];
5397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte seq[MAX_SEQ_SZ];
5399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte len[MAX_LENGTH_SZ + 1];  /* trailing 0 */
5400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  nSz;
5401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  eSz;
5402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  seqSz;
5403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  lenSz;
5404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  idx;
5405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  rawLen;
5406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  leadingBit;
5407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  err;
5408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL || key == NULL || outLen < MAX_SEQ_SZ)
5410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* n */
5413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     n = (byte*)XMALLOC(MAX_RSA_INT_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (n == NULL)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 227


5416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
5417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_USER_RSA
5420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     leadingBit = wc_Rsa_leading_bit(key->n);
5421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     rawLen = wc_Rsa_unsigned_bin_size(key->n) + leadingBit;
5422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     leadingBit = mp_leading_bit(&key->n);
5424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     rawLen = mp_unsigned_bin_size(&key->n) + leadingBit;
5425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     n[0] = ASN_INTEGER;
5427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     nSz  = SetLength(rawLen, n + 1) + 1;  /* int tag */
5428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (nSz + rawLen) < MAX_RSA_INT_SZ) {
5430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (leadingBit)
5431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             n[nSz] = 0;
5432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_USER_RSA
5433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         err = wc_Rsa_to_unsigned_bin(key->n, n + nSz, rawLen);
5434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         err = mp_to_unsigned_bin(&key->n, n + nSz + leadingBit);
5436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (err == MP_OKAY)
5438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             nSz += rawLen;
5439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
5440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(n, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MP_TO_E;
5444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
5447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(n, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
5451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* e */
5454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     e = (byte*)XMALLOC(MAX_RSA_E_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (e == NULL) {
5457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(n, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
5461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_USER_RSA
5465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     leadingBit = wc_Rsa_leading_bit(key->e);
5466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     rawLen = wc_Rsa_unsigned_bin_size(key->e) + leadingBit;
5467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     leadingBit = mp_leading_bit(&key->e);
5469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     rawLen = mp_unsigned_bin_size(&key->e) + leadingBit;
5470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     e[0] = ASN_INTEGER;
5472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     eSz  = SetLength(rawLen, e + 1) + 1;  /* int tag */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 228


5473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (eSz + rawLen) < MAX_RSA_E_SZ) {
5475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (leadingBit)
5476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             e[eSz] = 0;
5477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_USER_RSA
5478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         err = wc_Rsa_to_unsigned_bin(key->e, e + eSz, rawLen);
5479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         err = mp_to_unsigned_bin(&key->e, e + eSz + leadingBit);
5481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (err == MP_OKAY)
5483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             eSz += rawLen;
5484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
5485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(n, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(e, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MP_TO_E;
5490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
5493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(n, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(e, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
5498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz  = SetSequence(nSz + eSz, seq);
5501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* check output size */
5503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ( (seqSz + nSz + eSz) > outLen) {
5504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(n,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
5506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(e,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
5507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
5509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* headers */
5512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (with_header) {
5513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int  algoSz;
5514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte* algo = NULL;
5516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         algo = (byte*)XMALLOC(MAX_ALGO_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (algo == NULL) {
5519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(n, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(e, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
5522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte algo[MAX_ALGO_SZ];
5525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         algoSz = SetAlgoID(RSAk, algo, keyType, 0);
5527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         lenSz  = SetLength(seqSz + nSz + eSz + 1, len);
5528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         len[lenSz++] = 0;   /* trailing 0 */
5529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 229


5530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* write, 1 is for ASN_BIT_STRING */
5531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx = SetSequence(nSz + eSz + seqSz + lenSz + 1 + algoSz, output);
5532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check output size */
5534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ( (idx + algoSz + 1 + lenSz + seqSz + nSz + eSz) > outLen) {
5535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             #ifdef WOLFSSL_SMALL_STACK
5536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(n,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
5537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(e,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
5538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(algo, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             #endif
5540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return BUFFER_E;
5542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* algo */
5545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + idx, algo, algoSz);
5546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += algoSz;
5547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* bit string */
5548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[idx++] = ASN_BIT_STRING;
5549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* length */
5550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + idx, len, lenSz);
5551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += lenSz;
5552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(algo, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
5557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx = 0;
5558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* seq */
5560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, seq, seqSz);
5561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += seqSz;
5562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* n */
5563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, n, nSz);
5564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += nSz;
5565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* e */
5566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, e, eSz);
5567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += eSz;
5568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(n,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
5571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(e,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
5572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
5575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* !defined(NO_RSA) && (defined(WOLFSSL_CERT_GEN) ||
5577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                defined(WOLFSSL_KEY_GEN)) */
5578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_KEY_GEN) && !defined(NO_RSA) && !defined(HAVE_USER_RSA)
5581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static mp_int* GetRsaInt(RsaKey* key, int idx)
5584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 0)
5586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->n;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 230


5587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 1)
5588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->e;
5589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 2)
5590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->d;
5591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 3)
5592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->p;
5593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 4)
5594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->q;
5595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 5)
5596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->dP;
5597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 6)
5598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->dQ;
5599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx == 7)
5600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return &key->u;
5601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return NULL;
5603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Release Tmp RSA resources */
5607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static INLINE void FreeTmpRsas(byte** tmps, void* heap)
5608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
5610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)heap;
5612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < RSA_INTS; i++)
5614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(tmps[i], heap, DYNAMIC_TYPE_RSA);
5615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Convert RsaKey key to DER format, write to output (inLen), return bytes
5619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    written */
5620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_RsaKeyToDer(RsaKey* key, byte* output, word32 inLen)
5621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 seqSz, verSz, rawLen, intTotalLen = 0;
5623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 sizes[RSA_INTS];
5624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    i, j, outLen, ret = 0, lbit;
5625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte  seq[MAX_SEQ_SZ];
5627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte  ver[MAX_VERSION_SZ];
5628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* tmps[RSA_INTS];
5629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!key || !output)
5631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (key->type != RSA_PRIVATE)
5634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < RSA_INTS; i++)
5637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         tmps[i] = NULL;
5638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* write all big ints from key to DER tmps */
5640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < RSA_INTS; i++) {
5641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         mp_int* keyInt = GetRsaInt(key, i);
5642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* leading zero */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 231


5644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         lbit = mp_leading_bit(keyInt);
5645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         rawLen = mp_unsigned_bin_size(keyInt) + lbit;
5646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         tmps[i] = (byte*)XMALLOC(rawLen + MAX_SEQ_SZ, key->heap,
5648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                  DYNAMIC_TYPE_RSA);
5649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (tmps[i] == NULL) {
5650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = MEMORY_E;
5651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
5652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         tmps[i][0] = ASN_INTEGER;
5655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sizes[i] = SetLength(rawLen, tmps[i] + 1) + 1 + lbit; /* tag & lbit */
5656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (sizes[i] <= MAX_SEQ_SZ) {
5658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int err;
5659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* leading zero */
5661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (lbit)
5662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 tmps[i][sizes[i]-1] = 0x00;
5663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             err = mp_to_unsigned_bin(keyInt, tmps[i] + sizes[i]);
5665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (err == MP_OKAY) {
5666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 sizes[i] += (rawLen-lbit); /* lbit included in rawLen */
5667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 intTotalLen += sizes[i];
5668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
5669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
5670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = err;
5671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 break;
5672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
5673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
5675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_INPUT_E;
5676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
5677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
5681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeTmpRsas(tmps, key->heap);
5682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
5683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* make headers */
5686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     verSz = SetMyVersion(0, ver, FALSE);
5687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(verSz + intTotalLen, seq);
5688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     outLen = seqSz + verSz + intTotalLen;
5690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outLen > (int)inLen)
5691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
5692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* write to output */
5694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output, seq, seqSz);
5695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     j = seqSz;
5696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + j, ver, verSz);
5697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     j += verSz;
5698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < RSA_INTS; i++) {
5700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + j, tmps[i], sizes[i]);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 232


5701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         j += sizes[i];
5702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FreeTmpRsas(tmps, key->heap);
5704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return outLen;
5706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Convert Rsa Public key to DER format, write to output (inLen), return bytes
5710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    written */
5711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_RsaKeyToPublicDer(RsaKey* key, byte* output, word32 inLen)
5712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetRsaPublicKey(output, key, inLen, 1);
5714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_KEY_GEN && !NO_RSA */
5717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(WOLFSSL_CERT_GEN) && !defined(NO_RSA)
5720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef WOLFSSL_HAVE_MIN
5723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #define WOLFSSL_HAVE_MIN
5724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static INLINE word32 min(word32 a, word32 b)
5726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
5727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return a > b ? b : a;
5728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_HAVE_MIN */
5731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Initialize and Set Certificate defaults:
5734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    version    = 3 (0x2)
5735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    serial     = 0
5736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    sigType    = SHA_WITH_RSA
5737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    issuer     = blank
5738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    daysValid  = 500
5739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    selfSigned = 1 (true) use subject as issuer
5740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    subject    = blank
5741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** */
5742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void wc_InitCert(Cert* cert)
5743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->version    = 2;   /* version 3 is hex 2 */
5745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->sigType    = CTC_SHAwRSA;
5746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->daysValid  = 500;
5747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->selfSigned = 1;
5748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->isCA       = 0;
5749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->bodySz     = 0;
5750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
5751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->altNamesSz   = 0;
5752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->beforeDateSz = 0;
5753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->afterDateSz  = 0;
5754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
5756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->skidSz = 0;
5757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->akidSz = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 233


5758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->keyUsage = 0;
5759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->certPoliciesNb = 0;
5760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->akid, 0, CTC_MAX_AKID_SIZE);
5761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->skid, 0, CTC_MAX_SKID_SIZE);
5762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->certPolicies, 0, CTC_MAX_CERTPOL_NB*CTC_MAX_CERTPOL_SZ);
5763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->keyType    = RSA_KEY;
5765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(cert->serial, 0, CTC_SERIAL_SIZE);
5766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.country[0] = '\0';
5768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.countryEnc = CTC_PRINTABLE;
5769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.state[0] = '\0';
5770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.stateEnc = CTC_UTF8;
5771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.locality[0] = '\0';
5772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.localityEnc = CTC_UTF8;
5773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.sur[0] = '\0';
5774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.surEnc = CTC_UTF8;
5775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.org[0] = '\0';
5776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.orgEnc = CTC_UTF8;
5777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.unit[0] = '\0';
5778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.unitEnc = CTC_UTF8;
5779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.commonName[0] = '\0';
5780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.commonNameEnc = CTC_UTF8;
5781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->issuer.email[0] = '\0';
5782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.country[0] = '\0';
5784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.countryEnc = CTC_PRINTABLE;
5785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.state[0] = '\0';
5786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.stateEnc = CTC_UTF8;
5787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.locality[0] = '\0';
5788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.localityEnc = CTC_UTF8;
5789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.sur[0] = '\0';
5790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.surEnc = CTC_UTF8;
5791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.org[0] = '\0';
5792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.orgEnc = CTC_UTF8;
5793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.unit[0] = '\0';
5794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.unitEnc = CTC_UTF8;
5795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.commonName[0] = '\0';
5796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.commonNameEnc = CTC_UTF8;
5797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->subject.email[0] = '\0';
5798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_REQ
5800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->challengePw[0] ='\0';
5801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* DER encoded x509 Certificate */
5806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** typedef struct DerCert {
5807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte size[MAX_LENGTH_SZ];          /* length encoded */
5808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte version[MAX_VERSION_SZ];      /* version encoded */
5809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte serial[CTC_SERIAL_SIZE + MAX_LENGTH_SZ]; /* serial number encoded */
5810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte sigAlgo[MAX_ALGO_SZ];         /* signature algo encoded */
5811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte issuer[ASN_NAME_MAX];         /* issuer  encoded */
5812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte subject[ASN_NAME_MAX];        /* subject encoded */
5813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte validity[MAX_DATE_SIZE*2 + MAX_SEQ_SZ*2];  /* before and after dates */
5814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte publicKey[MAX_PUBLIC_KEY_SZ]; /* rsa / ntru public key encoded */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 234


5815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte ca[MAX_CA_SZ];                /* basic constraint CA true size */
5816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte extensions[MAX_EXTENSIONS_SZ]; /* all extensions */
5817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
5818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte skid[MAX_KID_SZ];             /* Subject Key Identifier extension */
5819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte akid[MAX_KID_SZ];             /* Authority Key Identifier extension */
5820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte keyUsage[MAX_KEYUSAGE_SZ];    /* Key Usage extension */
5821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte certPolicies[MAX_CERTPOL_NB*MAX_CERTPOL_SZ]; /* Certificate Policies */
5822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_REQ
5824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte attrib[MAX_ATTRIB_SZ];        /* Cert req attributes encoded */
5825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
5827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte altNames[CTC_MAX_ALT_SIZE];   /* Alternative Names encoded */
5828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  sizeSz;                       /* encoded size length */
5830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  versionSz;                    /* encoded version length */
5831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  serialSz;                     /* encoded serial length */
5832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  sigAlgoSz;                    /* encoded sig alog length */
5833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  issuerSz;                     /* encoded issuer length */
5834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  subjectSz;                    /* encoded subject length */
5835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  validitySz;                   /* encoded validity length */
5836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  publicKeySz;                  /* encoded public key length */
5837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  caSz;                         /* encoded CA extension length */
5838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
5839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  skidSz;                       /* encoded SKID extension length */
5840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  akidSz;                       /* encoded SKID extension length */
5841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  keyUsageSz;                   /* encoded KeyUsage extension length */
5842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  certPoliciesSz;               /* encoded CertPolicies extension length*/
5843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
5845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  altNamesSz;                   /* encoded AltNames extension length */
5846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  extensionsSz;                 /* encoded extensions total length */
5848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  total;                        /* total encoded lengths */
5849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_REQ
5850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  attribSz;
5851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** } DerCert;
5853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_REQ
5856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Write a set header to output */
5858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static word32 SetUTF8String(word32 len, byte* output)
5859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = ASN_UTF8STRING;
5861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetLength(len, output + 1) + 1;
5862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_REQ */
5865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Write a serial number to output */
5868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetSerial(const byte* serial, byte* output)
5869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
5871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 235


5872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[length++] = ASN_INTEGER;
5873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     length += SetLength(CTC_SERIAL_SIZE, &output[length]);
5874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&output[length], serial, CTC_SERIAL_SIZE);
5875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return length + CTC_SERIAL_SIZE;
5877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
5881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Write a public ECC key to output */
5884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetEccPublicKey(byte* output, ecc_key* key, int with_header)
5885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte len[MAX_LENGTH_SZ + 1];  /* trailing 0 */
5887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  algoSz;
5888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  curveSz;
5889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  lenSz;
5890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  idx;
5891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 pubSz = ECC_BUFSIZE;
5892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* algo = NULL;
5894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* curve = NULL;
5895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* pub = NULL;
5896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
5897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte algo[MAX_ALGO_SZ];
5898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte curve[MAX_ALGO_SZ];
5899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte pub[ECC_BUFSIZE];
5900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pub = (byte*)XMALLOC(ECC_BUFSIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (pub == NULL)
5905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
5906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret = wc_ecc_export_x963(key, pub, &pubSz);
5909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
5910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(pub, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
5914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* headers */
5917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (with_header) {
5918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         curve = (byte*)XMALLOC(MAX_ALGO_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (curve == NULL) {
5921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(pub, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
5923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         curveSz = SetCurve(key, curve);
5926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (curveSz <= 0) {
5927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(curve, NULL, DYNAMIC_TYPE_TMP_BUFFER);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 236


5929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(pub,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
5930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return curveSz;
5932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         algo = (byte*)XMALLOC(MAX_ALGO_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (algo == NULL) {
5937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(curve, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(pub,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
5939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
5940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
5941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         algoSz  = SetAlgoID(ECDSAk, algo, keyType, curveSz);
5943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         lenSz   = SetLength(pubSz + 1, len);
5945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         len[lenSz++] = 0;   /* trailing 0 */
5946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* write, 1 is for ASN_BIT_STRING */
5948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx = SetSequence(pubSz + curveSz + lenSz + 1 + algoSz, output);
5949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* algo */
5950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + idx, algo, algoSz);
5951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += algoSz;
5952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        /* curve */
5953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + idx, curve, curveSz);
5954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += curveSz;
5955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* bit string */
5956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         output[idx++] = ASN_BIT_STRING;
5957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* length */
5958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + idx, len, lenSz);
5959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += lenSz;
5960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
5962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx = 0;
5963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* pub */
5965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, pub, pubSz);
5966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += pubSz;
5967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
5969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (with_header) {
5970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(algo,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
5971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(curve, NULL, DYNAMIC_TYPE_TMP_BUFFER);
5972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
5973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(pub,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
5974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
5975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
5977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
5981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static INLINE byte itob(int number)
5984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return (byte)number + 0x30;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 237


5986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
5987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* write time to output, format */
5990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static void SetTime(struct tm* date, byte* output)
5991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
5992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i = 0;
5993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob((date->tm_year % 10000) / 1000);
5995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob((date->tm_year % 1000)  /  100);
5996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob((date->tm_year % 100)   /   10);
5997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob( date->tm_year % 10);
5998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
5999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_mon / 10);
6000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_mon % 10);
6001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_mday / 10);
6003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_mday % 10);
6004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_hour / 10);
6006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_hour % 10);
6007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_min / 10);
6009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_min % 10);
6010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_sec / 10);
6012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i++] = itob(date->tm_sec % 10);
6013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[i] = 'Z';  /* Zulu profile */
6015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
6019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Copy Dates from cert, return bytes written */
6021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int CopyValidity(byte* output, Cert* cert)
6022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int seqSz;
6024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("CopyValidity");
6026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* headers and output */
6028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(cert->beforeDateSz + cert->afterDateSz, output);
6029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz, cert->beforeDate, cert->beforeDateSz);
6030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz + cert->beforeDateSz, cert->afterDate,
6031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                  cert->afterDateSz);
6032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return seqSz + cert->beforeDateSz + cert->afterDateSz;
6033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* for systems where mktime() doesn't normalize fully */
6039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static void RebuildTime(time_t* in, struct tm* out)
6040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #if defined(FREESCALE_MQX) || defined(FREESCALE_KSDK_MQX)
6042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         out = localtime_r(in, out);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 238


6043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #else
6044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (void)in;
6045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (void)out;
6046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
6047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set Date validity from now until now + daysValid
6051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * return size in bytes written to output, 0 on error */
6052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetValidity(byte* output, int daysValid)
6053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte before[MAX_DATE_SIZE];
6055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte  after[MAX_DATE_SIZE];
6056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int beforeSz;
6058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int afterSz;
6059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int seqSz;
6060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t     ticks;
6062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     time_t     normalTime;
6063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* now;
6064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm* tmpTime = NULL;
6065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm  local;
6066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(NEED_TMP_TIME)
6068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* for use with gmtime_r */
6069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     struct tm tmpTimeStorage;
6070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     tmpTime = &tmpTimeStorage;
6071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
6072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)tmpTime;
6073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ticks = XTIME(0);
6076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     now   = XGMTIME(&ticks, tmpTime);
6077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (now == NULL) {
6079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("XGMTIME failed");
6080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;   /* error */
6081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* before now */
6084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local = *now;
6085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     before[0] = ASN_GENERALIZED_TIME;
6086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     beforeSz  = SetLength(ASN_GEN_TIME_SZ, before + 1) + 1;  /* gen tag */
6087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* subtract 1 day for more compliance */
6089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local.tm_mday -= 1;
6090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     normalTime = mktime(&local);
6091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     RebuildTime(&normalTime, &local);
6092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* adjust */
6094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local.tm_year += 1900;
6095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local.tm_mon  +=    1;
6096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     SetTime(&local, before + beforeSz);
6098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     beforeSz += ASN_GEN_TIME_SZ;
6099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 239


6100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* after now + daysValid */
6101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local = *now;
6102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     after[0] = ASN_GENERALIZED_TIME;
6103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     afterSz  = SetLength(ASN_GEN_TIME_SZ, after + 1) + 1;  /* gen tag */
6104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* add daysValid */
6106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local.tm_mday += daysValid;
6107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     normalTime = mktime(&local);
6108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     RebuildTime(&normalTime, &local);
6109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* adjust */
6111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local.tm_year += 1900;
6112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     local.tm_mon  +=    1;
6113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     SetTime(&local, after + afterSz);
6115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     afterSz += ASN_GEN_TIME_SZ;
6116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* headers and output */
6118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(beforeSz + afterSz, output);
6119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz, before, beforeSz);
6120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + seqSz + beforeSz, after, afterSz);
6121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return seqSz + beforeSz + afterSz;
6123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* ASN Encoded Name field */
6127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** typedef struct EncodedName {
6128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  nameLen;                /* actual string value length */
6129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  totalLen;               /* total encoded length */
6130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  type;                   /* type of name */
6131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  used;                   /* are we actually using this one */
6132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte encoded[CTC_NAME_SIZE * 2]; /* encoding */
6133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** } EncodedName;
6134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Get Which Name from index */
6137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static const char* GetOneName(CertName* name, int idx)
6138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (idx) {
6140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 0:
6141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->country;
6142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 1:
6144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->state;
6145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 2:
6147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->locality;
6148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 3:
6150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->sur;
6151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 4:
6153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->org;
6154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 5:
6156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->unit;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 240


6157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 6:
6159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->commonName;
6160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 7:
6162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->email;
6163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     default:
6165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return 0;
6166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Get Which Name Encoding from index */
6171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static char GetNameType(CertName* name, int idx)
6172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (idx) {
6174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 0:
6175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->countryEnc;
6176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 1:
6178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->stateEnc;
6179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 2:
6181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->localityEnc;
6182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 3:
6184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->surEnc;
6185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 4:
6187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->orgEnc;
6188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 5:
6190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->unitEnc;
6191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 6:
6193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return name->commonNameEnc;
6194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     default:
6196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return 0;
6197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Get ASN Name from index */
6202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static byte GetNameId(int idx)
6203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (idx) {
6205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 0:
6206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_COUNTRY_NAME;
6207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 1:
6209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_STATE_NAME;
6210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 2:
6212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_LOCALITY_NAME;
6213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 241


6214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 3:
6215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_SUR_NAME;
6216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 4:
6218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_ORG_NAME;
6219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 5:
6221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_ORGUNIT_NAME;
6222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 6:
6224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return ASN_COMMON_NAME;
6225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     case 7:
6227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        /* email uses different id type */
6228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return 0;
6229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     default:
6231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****        return 0;
6232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /*
6236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  Extensions ::= SEQUENCE OF Extension
6237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  Extension ::= SEQUENCE {
6239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  extnId     OBJECT IDENTIFIER,
6240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  critical   BOOLEAN DEFAULT FALSE,
6241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  extnValue  OCTET STRING }
6242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  */
6243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode all extensions, return total bytes written */
6245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetExtensions(byte* out, word32 outSz, int *IdxInOut,
6246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          const byte* ext, int extSz)
6247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL || IdxInOut == NULL || ext == NULL)
6249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < (word32)(*IdxInOut+extSz))
6252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&out[*IdxInOut], ext, extSz);  /* extensions */
6255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *IdxInOut += extSz;
6256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *IdxInOut;
6258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode extensions header, return total bytes written */
6261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetExtensionsHeader(byte* out, word32 outSz, int extSz)
6262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte sequence[MAX_SEQ_SZ];
6264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte len[MAX_LENGTH_SZ];
6265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int seqSz, lenSz, idx = 0;
6266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL)
6268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < 3)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 242


6271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(extSz, sequence);
6274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* encode extensions length provided */
6276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     lenSz = SetLength(extSz+seqSz, len);
6277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < (word32)(lenSz+seqSz+1))
6279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     out[idx++] = ASN_EXTENSIONS; /* extensions id */
6282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&out[idx], len, lenSz);  /* length */
6283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += lenSz;
6284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(&out[idx], sequence, seqSz);  /* sequence */
6286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += seqSz;
6287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
6289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode CA basic constraint true, return total bytes written */
6293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetCa(byte* out, word32 outSz)
6294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte ca[] = { 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x04,
6296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                0x05, 0x30, 0x03, 0x01, 0x01, 0xff };
6297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL)
6299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < sizeof(ca))
6302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out, ca, sizeof(ca));
6305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return (int)sizeof(ca);
6307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
6311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode OID and associated value, return total bytes written */
6312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetOidValue(byte* out, word32 outSz, const byte *oid, word32 oidSz,
6313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                        byte *in, word32 inSz)
6314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int idx = 0;
6316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL || oid == NULL || in == NULL)
6318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < 3)
6321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* sequence,  + 1 => byte to put value size */
6324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = SetSequence(inSz + oidSz + 1, out);
6325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < idx + inSz + oidSz + 1)
6327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 243


6328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out+idx, oid, oidSz);
6330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += oidSz;
6331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     out[idx++] = (byte)inSz;
6332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out+idx, in, inSz);
6333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return (idx+inSz);
6335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode Subject Key Identifier, return total bytes written
6338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * RFC5280 : non-critical */
6339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetSKID(byte* output, word32 outSz, byte *input, word32 length)
6340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte skid_len[MAX_LENGTH_SZ];
6342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte skid_enc_len[MAX_LENGTH_SZ];
6343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int idx = 0, skid_lenSz, skid_enc_lenSz;
6344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte skid_oid[] = { 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04 };
6345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL || input == NULL)
6347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* length of value */
6350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     skid_lenSz = SetLength(length, skid_len);
6351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* length of encoded value */
6353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     skid_enc_lenSz = SetLength(length + skid_lenSz + 1, skid_enc_len);
6354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < 3)
6356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* sequence, + 1 => byte to put type size */
6359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = SetSequence(length + sizeof(skid_oid) + skid_lenSz + skid_enc_lenSz+1,
6360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                       output);
6361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < length + sizeof(skid_oid) + skid_lenSz + skid_enc_lenSz + 1)
6363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put oid */
6366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output+idx, skid_oid, sizeof(skid_oid));
6367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += sizeof(skid_oid);
6368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put encoded len */
6370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output+idx, skid_enc_len, skid_enc_lenSz);
6371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += skid_enc_lenSz;
6372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put type */
6374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[idx++] = ASN_OCTET_STRING;
6375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put value len */
6377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output+idx, skid_len, skid_lenSz);
6378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += skid_lenSz;
6379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put value */
6381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output+idx, input, length);
6382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += length;
6383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 244


6385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode Authority Key Identifier, return total bytes written
6388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * RFC5280 : non-critical */
6389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetAKID(byte* output, word32 outSz, byte *input, word32 length)
6390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte    *enc_val;
6392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int     ret, enc_valSz;
6393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte akid_oid[] = { 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04};
6394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte akid_cs[] = { 0x80 };
6395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL || input == NULL)
6397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     enc_val = (byte *)XMALLOC(length+3+sizeof(akid_cs), NULL,
6400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                DYNAMIC_TYPE_TMP_BUFFER);
6401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (enc_val == NULL)
6402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
6403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* sequence for ContentSpec & value */
6405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     enc_valSz = SetOidValue(enc_val, length+3+sizeof(akid_cs),
6406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             akid_cs, sizeof(akid_cs), input, length);
6407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (enc_valSz == 0) {
6408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(enc_val, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
6410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = SetOidValue(output, outSz, akid_oid,
6413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                       sizeof(akid_oid), enc_val, enc_valSz);
6414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(enc_val, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
6417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode Key Usage, return total bytes written
6420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * RFC5280 : critical */
6421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetKeyUsage(byte* output, word32 outSz, word16 input)
6422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte ku[5];
6424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int unusedBits = 0;
6425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte keyusage_oid[] = { 0x06, 0x03, 0x55, 0x1d, 0x0f,
6426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          0x01, 0x01, 0xff, 0x04};
6427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL)
6429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Key Usage is a BitString */
6432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ku[0] = ASN_BIT_STRING;
6433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put the Bit String size */
6435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input > 255) {
6436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ku[1] = (byte)3;
6437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* compute unused bits */
6439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (((((input >> 8) & 0xff) >> unusedBits) & 0x01) == 0)
6440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             unusedBits++;
6441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 245


6442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
6443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ku[1] = (byte)2;
6444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* compute unused bits */
6446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         while (((input >> unusedBits) & 0x01) == 0)
6447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             unusedBits++;
6448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put unused bits value */
6451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ku[2] = (byte)unusedBits;
6452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* compute byte value */
6454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ku[3] = (byte)(input & 0xff);
6455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input > 255)
6456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ku[4] = (byte)((input >> 8) & 0xff);
6457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetOidValue(output, outSz, keyusage_oid, sizeof(keyusage_oid),
6459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                        ku, (int)ku[1]+2);
6460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Encode OID string representation to ITU-T X.690 format */
6463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int EncodePolicyOID(byte *out, word32 *outSz, const char *in)
6464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 val, idx = 0, nb_val;
6466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char *token, *str, *ptr;
6467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 len;
6468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL || outSz == NULL || *outSz < 2 || in == NULL)
6470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     len = (word32)XSTRLEN(in);
6473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     str = (char *)XMALLOC(len+1, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (str == NULL)
6476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
6477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XSTRNCPY(str, in, len);
6479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     str[len] = 0x00;
6480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     nb_val = 0;
6482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* parse value, and set corresponding Policy OID value */
6484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     token = XSTRTOK(str, ".", &ptr);
6485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (token != NULL)
6486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
6487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         val = (word32)atoi(token);
6488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (nb_val == 0) {
6490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (val > 2) {
6491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(str, NUL, DYNAMIC_TYPE_TMP_BUFFER);
6492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_OBJECT_ID_E;
6493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             out[idx] = (byte)(40 * val);
6496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (nb_val == 1) {
6498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (val > 127) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 246


6499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(str, NUL, DYNAMIC_TYPE_TMP_BUFFER);
6500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_OBJECT_ID_E;
6501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (idx > *outSz) {
6504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(str, NUL, DYNAMIC_TYPE_TMP_BUFFER);
6505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return BUFFER_E;
6506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             out[idx++] += (byte)val;
6509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
6511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             word32  tb = 0, x;
6512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int     i = 0;
6513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte    oid[MAX_OID_SZ];
6514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (val >= 128) {
6516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 x = val % 128;
6517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 val /= 128;
6518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 oid[i++] = (byte) (((tb++) ? 0x80 : 0) | x);
6519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if ((idx+(word32)i) > *outSz) {
6522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(str, NUL, DYNAMIC_TYPE_TMP_BUFFER);
6523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return BUFFER_E;
6524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             oid[i] = (byte) (((tb++) ? 0x80 : 0) | val);
6527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* push value in the right order */
6529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (i >= 0)
6530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 out[idx++] = oid[i--];
6531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         token = XSTRTOK(NULL, ".", &ptr);
6534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         nb_val++;
6535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *outSz = idx;
6538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(str, NUL, DYNAMIC_TYPE_TMP_BUFFER);
6540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
6541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode Certificate Policies, return total bytes written
6544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * each input value must be ITU-T X.690 formatted : a.b.c...
6545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * input must be an array of values with a NULL terminated for the latest
6546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****  * RFC5280 : non-critical */
6547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetCertificatePolicies(byte *output,
6548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                   word32 outputSz,
6549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                   char input[MAX_CERTPOL_NB][MAX_CERTPOL_SZ],
6550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                   word16 nb_certpol)
6551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte    oid[MAX_OID_SZ],
6553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             der_oid[MAX_CERTPOL_NB][MAX_OID_SZ],
6554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             out[MAX_CERTPOL_SZ];
6555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32  oidSz;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 247


6556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32  outSz, i = 0, der_oidSz[MAX_CERTPOL_NB];
6557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int     ret;
6558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte certpol_oid[] = { 0x06, 0x03, 0x55, 0x1d, 0x20, 0x04 };
6560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte oid_oid[] = { 0x06 };
6561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL || input == NULL || nb_certpol > MAX_CERTPOL_NB)
6563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < nb_certpol; i++) {
6566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         oidSz = sizeof(oid);
6567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMSET(oid, 0, oidSz);
6568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = EncodePolicyOID(oid, &oidSz, input[i]);
6570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret != 0)
6571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ret;
6572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* compute sequence value for the oid */
6574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = SetOidValue(der_oid[i], MAX_OID_SZ, oid_oid,
6575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           sizeof(oid_oid), oid, oidSz);
6576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret <= 0)
6577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ret;
6578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
6579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             der_oidSz[i] = (word32)ret;
6580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* concatenate oid, keep two byte for sequence/size of the created value */
6583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0, outSz = 2; i < nb_certpol; i++) {
6584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(out+outSz, der_oid[i], der_oidSz[i]);
6585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         outSz += der_oidSz[i];
6586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* add sequence */
6589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = SetSequence(outSz-2, out);
6590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret <= 0)
6591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
6592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* add Policy OID to compute final value */
6594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetOidValue(output, outputSz, certpol_oid, sizeof(certpol_oid),
6595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                       out, outSz);
6596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT */
6598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
6600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode Alternative Names, return total bytes written */
6601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetAltNames(byte *out, word32 outSz, byte *input, word32 length)
6602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (out == NULL || input == NULL)
6604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outSz < length)
6607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Alternative Names come from certificate or computed by
6610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * external function, so already encoded. Just copy value */
6611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(out, input, length);
6612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return length;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 248


6613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSL_ALT_NAMES */
6615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode CertName into output, return total bytes written */
6618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetName(byte* output, word32 outputSz, CertName* name)
6619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int          totalBytes = 0, i, idx;
6621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
6622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     EncodedName* names = NULL;
6623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
6624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     EncodedName  names[NAME_ENTRIES];
6625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (output == NULL || name == NULL)
6628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (outputSz < 3)
6631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
6634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     names = (EncodedName*)XMALLOC(sizeof(EncodedName) * NAME_ENTRIES, NULL,
6635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
6636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (names == NULL)
6637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
6638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < NAME_ENTRIES; i++) {
6641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         const char* nameStr = GetOneName(name, i);
6642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (nameStr) {
6643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* bottom up */
6644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte firstLen[MAX_LENGTH_SZ];
6645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte secondLen[MAX_LENGTH_SZ];
6646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte sequence[MAX_SEQ_SZ];
6647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             byte set[MAX_SET_SZ];
6648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int email = i == (NAME_ENTRIES - 1) ? 1 : 0;
6650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int strLen  = (int)XSTRLEN(nameStr);
6651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int thisLen = strLen;
6652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             int firstSz, secondSz, seqSz, setSz;
6653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (strLen == 0) { /* no user data for this item */
6655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 names[i].used = 0;
6656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 continue;
6657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             secondSz = SetLength(strLen, secondLen);
6660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             thisLen += secondSz;
6661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (email) {
6662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 thisLen += EMAIL_JOINT_LEN;
6663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 thisLen ++;                               /* id type */
6664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 firstSz  = SetLength(EMAIL_JOINT_LEN, firstLen);
6665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
6667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 thisLen++;                                 /* str type */
6668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 thisLen++;                                 /* id  type */
6669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 thisLen += JOINT_LEN;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 249


6670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 firstSz = SetLength(JOINT_LEN + 1, firstLen);
6671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             thisLen += firstSz;
6673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             thisLen++;                                /* object id */
6674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             seqSz = SetSequence(thisLen, sequence);
6676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             thisLen += seqSz;
6677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             setSz = SetSet(thisLen, set);
6678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             thisLen += setSz;
6679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (thisLen > (int)sizeof(names[i].encoded)) {
6681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
6682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(names, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return BUFFER_E;
6685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* store it */
6688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx = 0;
6689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* set */
6690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(names[i].encoded, set, setSz);
6691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += setSz;
6692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* seq */
6693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(names[i].encoded + idx, sequence, seqSz);
6694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += seqSz;
6695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* asn object id */
6696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             names[i].encoded[idx++] = ASN_OBJECT_ID;
6697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* first length */
6698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(names[i].encoded + idx, firstLen, firstSz);
6699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += firstSz;
6700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (email) {
6701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 const byte EMAIL_OID[] = { 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d,
6702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                            0x01, 0x09, 0x01, 0x16 };
6703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* email joint id */
6704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XMEMCPY(names[i].encoded + idx, EMAIL_OID, sizeof(EMAIL_OID));
6705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 idx += (int)sizeof(EMAIL_OID);
6706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
6708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* joint id */
6709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 byte bType = GetNameId(i);
6710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 names[i].encoded[idx++] = 0x55;
6711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 names[i].encoded[idx++] = 0x04;
6712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* id type */
6713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 names[i].encoded[idx++] = bType;
6714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* str type */
6715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 names[i].encoded[idx++] = GetNameType(name, i);
6716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* second length */
6718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(names[i].encoded + idx, secondLen, secondSz);
6719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += secondSz;
6720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* str value */
6721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(names[i].encoded + idx, nameStr, strLen);
6722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += strLen;
6723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             totalBytes += idx;
6725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             names[i].totalLen = idx;
6726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             names[i].used = 1;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 250


6727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
6729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             names[i].used = 0;
6730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* header */
6733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = SetSequence(totalBytes, output);
6734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalBytes += idx;
6735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (totalBytes > ASN_NAME_MAX) {
6736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
6737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(names, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
6740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < NAME_ENTRIES; i++) {
6743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (names[i].used) {
6744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (outputSz < (word32)(idx+names[i].totalLen)) {
6745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
6746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(names, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return BUFFER_E;
6749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
6750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(output + idx, names[i].encoded, names[i].totalLen);
6752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += names[i].totalLen;
6753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
6757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(names, NULL, DYNAMIC_TYPE_TMP_BUFFER);
6758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return totalBytes;
6761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
6762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode info from cert into DER encoded format */
6764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int EncodeCert(Cert* cert, DerCert* der, RsaKey* rsaKey, ecc_key* eccKey,
6765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                       WC_RNG* rng, const byte* ntruKey, word16 ntruSz)
6766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
6767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
6768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)eccKey;
6770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)ntruKey;
6771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)ntruSz;
6772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || der == NULL || rng == NULL)
6774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
6775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* init */
6777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(der, 0, sizeof(DerCert));
6778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* version */
6780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->versionSz = SetMyVersion(cert->version, der->version, TRUE);
6781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* serial number */
6783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_RNG_GenerateBlock(rng, cert->serial, CTC_SERIAL_SIZE);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 251


6784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0)
6785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
6786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->serial[0] = 0x01;   /* ensure positive */
6788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->serialSz  = SetSerial(cert->serial, der->serial);
6789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* signature algo */
6791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->sigAlgoSz = SetAlgoID(cert->sigType, der->sigAlgo, sigType, 0);
6792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->sigAlgoSz == 0)
6793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ALGO_ID_E;
6794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* public key */
6796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyType == RSA_KEY) {
6797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (rsaKey == NULL)
6798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->publicKeySz = SetRsaPublicKey(der->publicKey, rsaKey,
6800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                            sizeof(der->publicKey), 1);
6801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->publicKeySz <= 0)
6802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
6806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyType == ECC_KEY) {
6807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (eccKey == NULL)
6808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->publicKeySz = SetEccPublicKey(der->publicKey, eccKey, 1);
6810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->publicKeySz <= 0)
6811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
6814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
6816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyType == NTRU_KEY) {
6817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 rc;
6818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word16 encodedSz;
6819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         rc  = ntru_crypto_ntru_encrypt_publicKey2SubjectPublicKeyInfo( ntruSz,
6821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                    ntruKey, &encodedSz, NULL);
6822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (rc != NTRU_OK)
6823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (encodedSz > MAX_PUBLIC_KEY_SZ)
6825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         rc  = ntru_crypto_ntru_encrypt_publicKey2SubjectPublicKeyInfo( ntruSz,
6828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                          ntruKey, &encodedSz, der->publicKey);
6829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (rc != NTRU_OK)
6830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
6831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->publicKeySz = encodedSz;
6833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_NTRU */
6835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->validitySz = 0;
6837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
6838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* date validity copy ? */
6839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->beforeDateSz && cert->afterDateSz) {
6840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->validitySz = CopyValidity(der->validity, cert);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 252


6841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->validitySz == 0)
6842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return DATE_E;
6843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* date validity */
6847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->validitySz == 0) {
6848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->validitySz = SetValidity(der->validity, cert->daysValid);
6849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->validitySz == 0)
6850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return DATE_E;
6851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* subject name */
6854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->subjectSz = SetName(der->subject, sizeof(der->subject), &cert->subject);
6855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->subjectSz == 0)
6856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return SUBJECT_E;
6857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* issuer name */
6859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->issuerSz = SetName(der->issuer, sizeof(der->issuer), cert->selfSigned ?
6860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              &cert->subject : &cert->issuer);
6861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->issuerSz == 0)
6862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ISSUER_E;
6863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* set the extensions */
6865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->extensionsSz = 0;
6866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* CA */
6868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->isCA) {
6869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->caSz = SetCa(der->ca, sizeof(der->ca));
6870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->caSz == 0)
6871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return CA_TRUE_E;
6872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->caSz;
6874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
6876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->caSz = 0;
6877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
6879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Alternative Name */
6880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->altNamesSz) {
6881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->altNamesSz = SetAltNames(der->altNames, sizeof(der->altNames),
6882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                       cert->altNames, cert->altNamesSz);
6883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->altNamesSz == 0)
6884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ALT_NAME_E;
6885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->altNamesSz;
6887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
6889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->altNamesSz = 0;
6890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
6893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* SKID */
6894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->skidSz) {
6895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check the provided SKID size */
6896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cert->skidSz > (int)sizeof(der->skid))
6897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SKID_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 253


6898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->skidSz = SetSKID(der->skid, sizeof(der->skid),
6900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               cert->skid, cert->skidSz);
6901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->skidSz == 0)
6902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SKID_E;
6903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->skidSz;
6905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
6907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->skidSz = 0;
6908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* AKID */
6910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->akidSz) {
6911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check the provided AKID size */
6912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cert->akidSz > (int)sizeof(der->akid))
6913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return AKID_E;
6914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->akidSz = SetAKID(der->akid, sizeof(der->akid),
6916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               cert->akid, cert->akidSz);
6917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->akidSz == 0)
6918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return AKID_E;
6919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->akidSz;
6921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
6923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->akidSz = 0;
6924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Key Usage */
6926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyUsage != 0){
6927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->keyUsageSz = SetKeyUsage(der->keyUsage, sizeof(der->keyUsage),
6928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                       cert->keyUsage);
6929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->keyUsageSz == 0)
6930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return KEYUSAGE_E;
6931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->keyUsageSz;
6933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
6935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->keyUsageSz = 0;
6936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Certificate Policies */
6938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->certPoliciesNb != 0) {
6939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->certPoliciesSz = SetCertificatePolicies(der->certPolicies,
6940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                      sizeof(der->certPolicies),
6941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                      cert->certPolicies,
6942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                      cert->certPoliciesNb);
6943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->certPoliciesSz == 0)
6944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return CERTPOLICIES_E;
6945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->certPoliciesSz;
6947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
6948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
6949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->certPoliciesSz = 0;
6950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT */
6951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put extensions */
6953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->extensionsSz > 0) {
6954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 254


6955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put the start of extensions sequence (ID, Size) */
6956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz = SetExtensionsHeader(der->extensions,
6957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                 sizeof(der->extensions),
6958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                 der->extensionsSz);
6959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->extensionsSz == 0)
6960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return EXTENSIONS_E;
6961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put CA */
6963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->caSz) {
6964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
6965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
6966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->ca, der->caSz);
6967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
6968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
6969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
6972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put Alternative Names */
6973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->altNamesSz) {
6974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
6975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
6976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->altNames, der->altNamesSz);
6977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
6978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
6979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
6981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
6983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put SKID */
6984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->skidSz) {
6985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
6986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
6987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->skid, der->skidSz);
6988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
6989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
6990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
6991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
6992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put AKID */
6993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->akidSz) {
6994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
6995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
6996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->akid, der->akidSz);
6997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
6998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
6999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put KeyUsage */
7002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->keyUsageSz) {
7003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
7004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
7005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->keyUsage, der->keyUsageSz);
7006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
7007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
7008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put Certificate Policies */
7011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->certPoliciesSz) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 255


7012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
7013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
7014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->certPolicies, der->certPoliciesSz);
7015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
7016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
7017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT */
7019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->total = der->versionSz + der->serialSz + der->sigAlgoSz +
7022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->publicKeySz + der->validitySz + der->subjectSz + der->issuerSz +
7023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz;
7024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
7026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* write DER encoded cert to buffer, size already checked */
7030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int WriteCertBody(DerCert* der, byte* buffer)
7031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int idx;
7033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* signed part header */
7035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = SetSequence(der->total, buffer);
7036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* version */
7037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->version, der->versionSz);
7038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->versionSz;
7039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* serial */
7040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->serial, der->serialSz);
7041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->serialSz;
7042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* sig algo */
7043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->sigAlgo, der->sigAlgoSz);
7044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->sigAlgoSz;
7045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* issuer */
7046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->issuer, der->issuerSz);
7047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->issuerSz;
7048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* validity */
7049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->validity, der->validitySz);
7050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->validitySz;
7051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* subject */
7052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->subject, der->subjectSz);
7053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->subjectSz;
7054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* public key */
7055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->publicKey, der->publicKeySz);
7056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->publicKeySz;
7057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->extensionsSz) {
7058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* extensions */
7059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(buffer + idx, der->extensions, min(der->extensionsSz,
7060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                    sizeof(der->extensions)));
7061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += der->extensionsSz;
7062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
7065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Make RSA signature from buffer (sz), write to sig (sigSz) */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 256


7069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int MakeSignature(const byte* buffer, int sz, byte* sig, int sigSz,
7070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          RsaKey* rsaKey, ecc_key* eccKey, WC_RNG* rng,
7071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          int sigAlgoType)
7072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int encSigSz, digestSz, typeH = 0, ret = 0;
7074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte digest[MAX_DIGEST_SIZE]; /* max size */
7075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* encSig;
7077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte encSig[MAX_DER_DIGEST_SZ];
7079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)digest;
7082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)digestSz;
7083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)encSig;
7084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)encSigSz;
7085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)typeH;
7086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)buffer;
7088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)sz;
7089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)sig;
7090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)sigSz;
7091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)rsaKey;
7092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)eccKey;
7093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)rng;
7094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (sigAlgoType) {
7096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_MD5
7097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_MD5wRSA:
7098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((ret = wc_Md5Hash(buffer, sz, digest)) == 0) {
7099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = MD5h;
7100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = MD5_DIGEST_SIZE;
7101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
7103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
7104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_SHA
7105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHAwRSA:
7106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHAwECDSA:
7107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((ret = wc_ShaHash(buffer, sz, digest)) == 0) {
7108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHAh;
7109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA_DIGEST_SIZE;
7110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
7112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
7113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifndef NO_SHA256
7114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA256wRSA:
7115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA256wECDSA:
7116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((ret = wc_Sha256Hash(buffer, sz, digest)) == 0) {
7117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHA256h;
7118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA256_DIGEST_SIZE;
7119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
7121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
7122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #ifdef WOLFSSL_SHA512
7123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA512wRSA:
7124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case CTC_SHA512wECDSA:
7125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if ((ret = wc_Sha512Hash(buffer, sz, digest)) == 0) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 257


7126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             typeH    = SHA256h;
7127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             digestSz = SHA256_DIGEST_SIZE;
7128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         break;
7130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     #endif
7131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
7132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("MakeSignautre called with unsupported type");
7133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ALGO_ID_E;
7134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0)
7137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
7138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     encSig = (byte*)XMALLOC(MAX_DER_DIGEST_SZ,
7141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                  NULL, DYNAMIC_TYPE_TMP_BUFFER);
7142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (encSig == NULL)
7143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = ALGO_ID_E;
7147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_RSA
7149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (rsaKey) {
7150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* signature */
7151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         encSigSz = wc_EncodeSignature(encSig, digest, digestSz, typeH);
7152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_RsaSSL_Sign(encSig, encSigSz, sig, sigSz, rsaKey, rng);
7153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
7157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!rsaKey && eccKey) {
7158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 outSz = sigSz;
7159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_ecc_sign_hash(digest, digestSz, sig, &outSz, rng, eccKey);
7160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret == 0)
7162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = outSz;
7163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(encSig, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
7171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* add signature to end of buffer, size of buffer assumed checked, return
7175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****    new length */
7176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int AddSignature(byte* buffer, int bodySz, const byte* sig, int sigSz,
7177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         int sigAlgoType)
7178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte seq[MAX_SEQ_SZ];
7180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int  idx = bodySz, seqSz;
7181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* algo */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 258


7183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += SetAlgoID(sigAlgoType, buffer + idx, sigType, 0);
7184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* bit string */
7185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     buffer[idx++] = ASN_BIT_STRING;
7186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* length */
7187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += SetLength(sigSz + 1, buffer + idx);
7188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     buffer[idx++] = 0;   /* trailing 0 */
7189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* signature */
7190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, sig, sigSz);
7191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += sigSz;
7192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* make room for overall header */
7194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(idx, seq);
7195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMMOVE(buffer + seqSz, buffer, idx);
7196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer, seq, seqSz);
7197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx + seqSz;
7199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Make an x509 Certificate v3 any key type from cert input, write to buffer */
7203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int MakeAnyCert(Cert* cert, byte* derBuffer, word32 derSz,
7204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                        RsaKey* rsaKey, ecc_key* eccKey, WC_RNG* rng,
7205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                        const byte* ntruKey, word16 ntruSz)
7206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
7208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DerCert* der;
7210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DerCert der[1];
7212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->keyType = eccKey ? ECC_KEY : (rsaKey ? RSA_KEY : NTRU_KEY);
7215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der = (DerCert*)XMALLOC(sizeof(DerCert), NULL, DYNAMIC_TYPE_TMP_BUFFER);
7218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL)
7219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = EncodeCert(cert, der, rsaKey, eccKey, rng, ntruKey, ntruSz);
7223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret == 0) {
7224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->total + MAX_SEQ_SZ * 2 > (int)derSz)
7225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = BUFFER_E;
7226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
7227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = cert->bodySz = WriteCertBody(der, derBuffer);
7228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
7235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Make an x509 Certificate v3 RSA or ECC from cert input, write to buffer */
7239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_MakeCert(Cert* cert, byte* derBuffer, word32 derSz, RsaKey* rsaKey,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 259


7240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              ecc_key* eccKey, WC_RNG* rng)
7241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return MakeAnyCert(cert, derBuffer, derSz, rsaKey, eccKey, rng, NULL, 0);
7243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
7247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_MakeNtruCert(Cert* cert, byte* derBuffer, word32 derSz,
7249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                   const byte* ntruKey, word16 keySz, WC_RNG* rng)
7250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return MakeAnyCert(cert, derBuffer, derSz, NULL, NULL, rng, ntruKey, keySz);
7252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_NTRU */
7255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_REQ
7258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetReqAttrib(byte* output, char* pw, int extSz)
7260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte cpOid[] =
7262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         { ASN_OBJECT_ID, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01,
7263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          0x09, 0x07 };
7264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte erOid[] =
7265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         { ASN_OBJECT_ID, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01,
7266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          0x09, 0x0e };
7267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int sz      = 0; /* overall size */
7269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int cpSz    = 0; /* Challenge Password section size */
7270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int cpSeqSz = 0;
7271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int cpSetSz = 0;
7272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int cpStrSz = 0;
7273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int pwSz    = 0;
7274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int erSz    = 0; /* Extension Request section size */
7275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int erSeqSz = 0;
7276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int erSetSz = 0;
7277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte cpSeq[MAX_SEQ_SZ];
7278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte cpSet[MAX_SET_SZ];
7279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte cpStr[MAX_PRSTR_SZ];
7280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte erSeq[MAX_SEQ_SZ];
7281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte erSet[MAX_SET_SZ];
7282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     output[0] = 0xa0;
7284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sz++;
7285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (pw && pw[0]) {
7287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         pwSz = (int)XSTRLEN(pw);
7288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cpStrSz = SetUTF8String(pwSz, cpStr);
7289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cpSetSz = SetSet(cpStrSz + pwSz, cpSet);
7290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cpSeqSz = SetSequence(sizeof(cpOid) + cpSetSz + cpStrSz + pwSz, cpSeq);
7291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cpSz = cpSeqSz + sizeof(cpOid) + cpSetSz + cpStrSz + pwSz;
7292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (extSz) {
7295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         erSetSz = SetSet(extSz, erSet);
7296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         erSeqSz = SetSequence(erSetSz + sizeof(erOid) + extSz, erSeq);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 260


7297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         erSz = extSz + erSetSz + erSeqSz + sizeof(erOid);
7298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Put the pieces together. */
7301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sz += SetLength(cpSz + erSz, &output[sz]);
7302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cpSz) {
7304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], cpSeq, cpSeqSz);
7305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += cpSeqSz;
7306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], cpOid, sizeof(cpOid));
7307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += sizeof(cpOid);
7308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], cpSet, cpSetSz);
7309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += cpSetSz;
7310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], cpStr, cpStrSz);
7311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += cpStrSz;
7312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], pw, pwSz);
7313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += pwSz;
7314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (erSz) {
7317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], erSeq, erSeqSz);
7318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += erSeqSz;
7319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], erOid, sizeof(erOid));
7320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += sizeof(erOid);
7321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(&output[sz], erSet, erSetSz);
7322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         sz += erSetSz;
7323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* The actual extension data will be tacked onto the output later. */
7324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return sz;
7327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* encode info from cert into DER encoded format */
7331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int EncodeCertReq(Cert* cert, DerCert* der,
7332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          RsaKey* rsaKey, ecc_key* eccKey)
7333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)eccKey;
7335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || der == NULL)
7337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
7338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* init */
7340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(der, 0, sizeof(DerCert));
7341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* version */
7343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->versionSz = SetMyVersion(cert->version, der->version, FALSE);
7344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* subject name */
7346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->subjectSz = SetName(der->subject, sizeof(der->subject), &cert->subject);
7347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->subjectSz == 0)
7348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return SUBJECT_E;
7349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* public key */
7351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyType == RSA_KEY) {
7352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (rsaKey == NULL)
7353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 261


7354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->publicKeySz = SetRsaPublicKey(der->publicKey, rsaKey,
7355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                            sizeof(der->publicKey), 1);
7356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->publicKeySz <= 0)
7357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
7358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
7361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyType == ECC_KEY) {
7362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (eccKey == NULL)
7363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
7364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->publicKeySz = SetEccPublicKey(der->publicKey, eccKey, 1);
7365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->publicKeySz <= 0)
7366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
7367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
7369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* set the extensions */
7371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->extensionsSz = 0;
7372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* CA */
7374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->isCA) {
7375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->caSz = SetCa(der->ca, sizeof(der->ca));
7376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->caSz == 0)
7377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return CA_TRUE_E;
7378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->caSz;
7380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
7382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->caSz = 0;
7383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
7385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* SKID */
7386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->skidSz) {
7387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check the provided SKID size */
7388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cert->skidSz > (int)sizeof(der->skid))
7389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SKID_E;
7390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->skidSz = SetSKID(der->skid, sizeof(der->skid),
7392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               cert->skid, cert->skidSz);
7393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->skidSz == 0)
7394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return SKID_E;
7395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->skidSz;
7397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
7399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->skidSz = 0;
7400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Key Usage */
7402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert->keyUsage != 0){
7403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->keyUsageSz = SetKeyUsage(der->keyUsage, sizeof(der->keyUsage),
7404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                       cert->keyUsage);
7405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->keyUsageSz == 0)
7406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return KEYUSAGE_E;
7407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz += der->keyUsageSz;
7409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 262


7411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->keyUsageSz = 0;
7412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT */
7413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* put extensions */
7415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->extensionsSz > 0) {
7416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int ret;
7417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put the start of sequence (ID, Size) */
7419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz = SetSequence(der->extensionsSz, der->extensions);
7420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->extensionsSz == 0)
7421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return EXTENSIONS_E;
7422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put CA */
7424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->caSz) {
7425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
7426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
7427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->ca, der->caSz);
7428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
7429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
7430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
7433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put SKID */
7434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->skidSz) {
7435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
7436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
7437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->skid, der->skidSz);
7438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
7439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
7440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put AKID */
7443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->akidSz) {
7444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
7445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
7446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->akid, der->akidSz);
7447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
7448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
7449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* put KeyUsage */
7452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->keyUsageSz) {
7453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = SetExtensions(der->extensions, sizeof(der->extensions),
7454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 &der->extensionsSz,
7455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 der->keyUsage, der->keyUsageSz);
7456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (ret == 0)
7457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return EXTENSIONS_E;
7458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT */
7461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->attribSz = SetReqAttrib(der->attrib,
7464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                  cert->challengePw, der->extensionsSz);
7465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->attribSz == 0)
7466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return REQ_ATTRIBUTE_E;
7467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 263


7468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der->total = der->versionSz + der->subjectSz + der->publicKeySz +
7469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         der->extensionsSz + der->attribSz;
7470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
7472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* write DER encoded cert req to buffer, size already checked */
7476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int WriteCertReqBody(DerCert* der, byte* buffer)
7477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int idx;
7479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* signed part header */
7481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = SetSequence(der->total, buffer);
7482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* version */
7483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->version, der->versionSz);
7484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->versionSz;
7485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* subject */
7486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->subject, der->subjectSz);
7487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->subjectSz;
7488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* public key */
7489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->publicKey, der->publicKeySz);
7490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->publicKeySz;
7491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* attributes */
7492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(buffer + idx, der->attrib, der->attribSz);
7493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += der->attribSz;
7494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* extensions */
7495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der->extensionsSz) {
7496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(buffer + idx, der->extensions, min(der->extensionsSz,
7497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                    sizeof(der->extensions)));
7498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += der->extensionsSz;
7499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return idx;
7502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_MakeCertReq(Cert* cert, byte* derBuffer, word32 derSz,
7506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 RsaKey* rsaKey, ecc_key* eccKey)
7507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
7509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DerCert* der;
7511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DerCert der[1];
7513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->keyType = eccKey ? ECC_KEY : RSA_KEY;
7516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der = (DerCert*)XMALLOC(sizeof(DerCert), NULL, DYNAMIC_TYPE_TMP_BUFFER);
7519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL)
7520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = EncodeCertReq(cert, der, rsaKey, eccKey);
7524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 264


7525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret == 0) {
7526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (der->total + MAX_SEQ_SZ * 2 > (int)derSz)
7527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = BUFFER_E;
7528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
7529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = cert->bodySz = WriteCertReqBody(der, derBuffer);
7530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
7537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_REQ */
7540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SignCert(int requestSz, int sType, byte* buffer, word32 buffSz,
7543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****              RsaKey* rsaKey, ecc_key* eccKey, WC_RNG* rng)
7544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int sigSz;
7546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* sig;
7548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte sig[MAX_ENCODED_SIG_SZ];
7550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (requestSz < 0)
7553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return requestSz;
7554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sig = (byte*)XMALLOC(MAX_ENCODED_SIG_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (sig == NULL)
7558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sigSz = MakeSignature(buffer, requestSz, sig, MAX_ENCODED_SIG_SZ, rsaKey,
7562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           eccKey, rng, sType);
7563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (sigSz >= 0) {
7565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (requestSz + MAX_SEQ_SZ * 2 + sigSz > (int)buffSz)
7566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sigSz = BUFFER_E;
7567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
7568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sigSz = AddSignature(buffer, requestSz, sig, sigSz, sType);
7569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(sig, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return sigSz;
7576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_MakeSelfCert(Cert* cert, byte* buffer, word32 buffSz,
7580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     RsaKey* key, WC_RNG* rng)
7581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 265


7582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
7583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_MakeCert(cert, buffer, buffSz, key, NULL, rng);
7585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0)
7586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
7587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return wc_SignCert(cert->bodySz, cert->sigType,
7589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                        buffer, buffSz, key, NULL, rng);
7590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_CERT_EXT
7594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set KID from RSA or ECC public key */
7596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetKeyIdFromPublicKey(Cert *cert, RsaKey *rsakey, ecc_key *eckey,
7597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                  byte *ntruKey, word16 ntruKeySz, int kid_type)
7598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte    *buffer;
7600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int     bufferSz, ret;
7601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef HAVE_NTRU
7603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     (void)ntruKeySz;
7604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || (rsakey == NULL && eckey == NULL && ntruKey == NULL) ||
7607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (rsakey != NULL && eckey != NULL) ||
7608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (rsakey != NULL && ntruKey != NULL) ||
7609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (ntruKey != NULL && eckey != NULL) ||
7610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (kid_type != SKID_TYPE && kid_type != AKID_TYPE))
7611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
7612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     buffer = (byte *)XMALLOC(MAX_PUBLIC_KEY_SZ, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (buffer == NULL)
7615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* RSA public key */
7618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (rsakey != NULL)
7619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         bufferSz = SetRsaPublicKey(buffer, rsakey, MAX_PUBLIC_KEY_SZ, 0);
7620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
7621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* ECC public key */
7622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (eckey != NULL)
7623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         bufferSz = SetEccPublicKey(buffer, eckey, 0);
7624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
7625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
7626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* NTRU public key */
7627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (ntruKey != NULL) {
7628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         bufferSz = MAX_PUBLIC_KEY_SZ;
7629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = ntru_crypto_ntru_encrypt_publicKey2SubjectPublicKeyInfo(
7630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         ntruKeySz, ntruKey, (word16 *)(&bufferSz), buffer);
7631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret != NTRU_OK)
7632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             bufferSz = -1;
7633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
7636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         bufferSz = -1;
7637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (bufferSz <= 0) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 266


7639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(buffer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return PUBLIC_KEY_E;
7641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Compute SKID by hashing public key */
7644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef NO_SHA
7645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (kid_type == SKID_TYPE) {
7646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_Sha256Hash(buffer, bufferSz, cert->skid);
7647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->skidSz = SHA256_DIGEST_SIZE;
7648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (kid_type == AKID_TYPE) {
7650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_Sha256Hash(buffer, bufferSz, cert->akid);
7651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->akidSz = SHA256_DIGEST_SIZE;
7652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
7654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = BAD_FUNC_ARG;
7655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else /* NO_SHA */
7656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (kid_type == SKID_TYPE) {
7657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_ShaHash(buffer, bufferSz, cert->skid);
7658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->skidSz = SHA_DIGEST_SIZE;
7659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (kid_type == AKID_TYPE) {
7661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_ShaHash(buffer, bufferSz, cert->akid);
7662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->akidSz = SHA_DIGEST_SIZE;
7663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
7665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = BAD_FUNC_ARG;
7666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_SHA */
7667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(buffer, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
7670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set SKID from RSA or ECC public key */
7673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetSubjectKeyIdFromPublicKey(Cert *cert, RsaKey *rsakey, ecc_key *eckey)
7674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetKeyIdFromPublicKey(cert, rsakey, eckey, NULL, 0, SKID_TYPE);
7676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_NTRU
7679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set SKID from NTRU public key */
7680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetSubjectKeyIdFromNtruPublicKey(Cert *cert,
7681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         byte *ntruKey, word16 ntruKeySz)
7682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetKeyIdFromPublicKey(cert, NULL,NULL,ntruKey, ntruKeySz, SKID_TYPE);
7684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set SKID from RSA or ECC public key */
7688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetAuthKeyIdFromPublicKey(Cert *cert, RsaKey *rsakey, ecc_key *eckey)
7689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetKeyIdFromPublicKey(cert, rsakey, eckey, NULL, 0, AKID_TYPE);
7691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_FILESYSTEM
7695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 267


7696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set SKID from public key file in PEM */
7697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetSubjectKeyId(Cert *cert, const char* file)
7698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int     ret, derSz;
7700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*   der;
7701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32  idx;
7702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     RsaKey  *rsakey = NULL;
7703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ecc_key *eckey = NULL;
7704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || file == NULL)
7706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
7707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der = (byte*)XMALLOC(MAX_PUBLIC_KEY_SZ, NULL, DYNAMIC_TYPE_CERT);
7709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL) {
7710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_SetSubjectKeyId memory Problem");
7711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     derSz = wolfSSL_PemPubKeyToDer(file, der, MAX_PUBLIC_KEY_SZ);
7715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (derSz <= 0)
7716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
7717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return derSz;
7719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Load PubKey in internal structure */
7722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     rsakey = (RsaKey*) XMALLOC(sizeof(RsaKey), NULL, DYNAMIC_TYPE_RSA);
7723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (rsakey == NULL) {
7724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (wc_InitRsaKey(rsakey, NULL) != 0) {
7729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_InitRsaKey failure");
7730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(rsakey, NULL, DYNAMIC_TYPE_RSA);
7731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = 0;
7736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_RsaPublicKeyDecode(der, &idx, rsakey, derSz);
7737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
7738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_RsaPublicKeyDecode failed");
7739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         wc_FreeRsaKey(rsakey);
7740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(rsakey, NULL, DYNAMIC_TYPE_RSA);
7741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         rsakey = NULL;
7742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
7743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* Check to load ecc public key */
7744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         eckey = (ecc_key*) XMALLOC(sizeof(ecc_key), NULL, DYNAMIC_TYPE_ECC);
7745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (eckey == NULL) {
7746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
7748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_ecc_init(eckey) != 0) {
7751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("wc_ecc_init failure");
7752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_ecc_free(eckey);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 268


7753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(eckey, NULL, DYNAMIC_TYPE_ECC);
7754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
7756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx = 0;
7759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = wc_EccPublicKeyDecode(der, &idx, eckey, derSz);
7760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret != 0) {
7761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("wc_EccPublicKeyDecode failed");
7762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_ecc_free(eckey);
7764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return PUBLIC_KEY_E;
7765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return PUBLIC_KEY_E;
7769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* HAVE_ECC */
7770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_SetSubjectKeyIdFromPublicKey(cert, rsakey, eckey);
7775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     wc_FreeRsaKey(rsakey);
7777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(rsakey, NULL, DYNAMIC_TYPE_RSA);
7778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
7779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     wc_ecc_free(eckey);
7780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(eckey, NULL, DYNAMIC_TYPE_ECC);
7781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
7783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_FILESYSTEM */
7786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set AKID from certificate contains in buffer (DER encoded) */
7788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetAuthKeyIdFromCert(Cert *cert, const byte *der, int derSz)
7789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
7791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert* decoded;
7794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert decoded[1];
7796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || der == NULL || derSz <= 0)
7799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
7800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     decoded = (DecodedCert*)XMALLOC(sizeof(DecodedCert),
7803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                     NULL, DYNAMIC_TYPE_TMP_BUFFER);
7804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (decoded == NULL)
7805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* decode certificate and get SKID that will be AKID of current cert */
7809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     InitDecodedCert(decoded, (byte*)der, derSz, 0);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 269


7810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = ParseCert(decoded, CERT_TYPE, NO_VERIFY, 0);
7811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
7812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeDecodedCert(decoded);
7813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
7814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Subject Key Id not found !! */
7817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (decoded->extSubjKeyIdSet == 0) {
7818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeDecodedCert(decoded);
7819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_NO_SKID;
7820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* SKID invalid size */
7823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (sizeof(cert->akid) < sizeof(decoded->extSubjKeyId)) {
7824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeDecodedCert(decoded);
7825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Put the SKID of CA to AKID of certificate */
7829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(cert->akid, decoded->extSubjKeyId, KEYID_SIZE);
7830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->akidSz = KEYID_SIZE;
7831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FreeDecodedCert(decoded);
7833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
7834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_FILESYSTEM
7838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set AKID from certificate file in PEM */
7840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetAuthKeyId(Cert *cert, const char* file)
7841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         ret;
7843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         derSz;
7844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*       der;
7845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || file == NULL)
7847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
7848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     der = (byte*)XMALLOC(EIGHTK_BUF, NULL, DYNAMIC_TYPE_CERT);
7850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL) {
7851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_SetAuthKeyId OOF Problem");
7852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     derSz = wolfSSL_PemCertToDer(file, der, EIGHTK_BUF);
7856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (derSz <= 0)
7857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
7858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return derSz;
7860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_SetAuthKeyIdFromCert(cert, der, derSz);
7863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_CERT);
7864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
7866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 270


7867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_FILESYSTEM */
7869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set KeyUsage from human readable string */
7871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetKeyUsage(Cert *cert, const char *value)
7872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     char *token, *str, *ptr;
7874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 len;
7875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert == NULL || value == NULL)
7877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
7878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->keyUsage = 0;
7880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     str = (char *)XMALLOC(XSTRLEN(value)+1, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (str == NULL)
7883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(str, 0, XSTRLEN(value)+1);
7886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XSTRNCPY(str, value, XSTRLEN(value));
7887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* parse value, and set corresponding Key Usage value */
7889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     token = XSTRTOK(str, ",", &ptr);
7890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (token != NULL)
7891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
7892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         len = (word32)XSTRLEN(token);
7893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (!XSTRNCASECMP(token, "digitalSignature", len))
7895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_DIGITAL_SIG;
7896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "nonRepudiation", len) ||
7897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                  !XSTRNCASECMP(token, "contentCommitment", len))
7898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_CONTENT_COMMIT;
7899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "keyEncipherment", len))
7900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_KEY_ENCIPHER;
7901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "dataEncipherment", len))
7902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_DATA_ENCIPHER;
7903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "keyAgreement", len))
7904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_KEY_AGREE;
7905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "keyCertSign", len))
7906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_KEY_CERT_SIGN;
7907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "cRLSign", len))
7908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_CRL_SIGN;
7909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "encipherOnly", len))
7910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_ENCIPHER_ONLY;
7911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (!XSTRNCASECMP(token, "decipherOnly", len))
7912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cert->keyUsage |= KEYUSE_DECIPHER_ONLY;
7913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else
7914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return KEYUSAGE_E;
7915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         token = XSTRTOK(NULL, ",", &ptr);
7917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(str, NULL, DYNAMIC_TYPE_TMP_BUFFER);
7920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
7921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
7922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_EXT */
7923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 271


7924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
7926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set Alt Names from der cert, return 0 on success */
7928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetAltNamesFromCert(Cert* cert, const byte* der, int derSz)
7929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
7930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
7931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert* decoded;
7933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
7934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert decoded[1];
7935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (derSz < 0)
7938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return derSz;
7939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
7941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     decoded = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
7942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
7943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (decoded == NULL)
7944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
7945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
7946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     InitDecodedCert(decoded, (byte*)der, derSz, 0);
7948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = ParseCertRelative(decoded, CA_TYPE, NO_VERIFY, 0);
7949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0) {
7951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("ParseCertRelative error");
7952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
7953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (decoded->extensions) {
7954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte   b;
7955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int    length;
7956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         word32 maxExtensionsIdx;
7957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         decoded->srcIdx = decoded->extensionsIdx;
7959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = decoded->source[decoded->srcIdx++];
7960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != ASN_EXTENSIONS) {
7962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_PARSE_E;
7963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (GetLength(decoded->source, &decoded->srcIdx, &length,
7965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                          decoded->maxIdx) < 0) {
7966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_PARSE_E;
7967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (GetSequence(decoded->source, &decoded->srcIdx, &length,
7969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                          decoded->maxIdx) < 0) {
7970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_PARSE_E;
7971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
7972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
7973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             maxExtensionsIdx = decoded->srcIdx + length;
7974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             while (decoded->srcIdx < maxExtensionsIdx) {
7976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 word32 oid;
7977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 word32 startIdx = decoded->srcIdx;
7978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 word32 tmpIdx;
7979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (GetSequence(decoded->source, &decoded->srcIdx, &length,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 272


7981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             decoded->maxIdx) < 0) {
7982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ret = ASN_PARSE_E;
7983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
7984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
7985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 tmpIdx = decoded->srcIdx;
7987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 decoded->srcIdx = startIdx;
7988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (GetAlgoId(decoded->source, &decoded->srcIdx, &oid,
7990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                               certExtType, decoded->maxIdx) < 0) {
7991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ret = ASN_PARSE_E;
7992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     break;
7993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
7994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (oid == ALT_NAMES_OID) {
7996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     cert->altNamesSz = length + (tmpIdx - startIdx);
7997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
7998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (cert->altNamesSz < (int)sizeof(cert->altNames))
7999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         XMEMCPY(cert->altNames, &decoded->source[startIdx],
8000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                 cert->altNamesSz);
8001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     else {
8002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         cert->altNamesSz = 0;
8003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         WOLFSSL_MSG("AltNames extensions too big");
8004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         ret = ALT_NAME_E;
8005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         break;
8006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     }
8007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
8008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 decoded->srcIdx = tmpIdx + length;
8009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FreeDecodedCert(decoded);
8014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(decoded, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret < 0 ? ret : 0;
8019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set Dates from der cert, return 0 on success */
8023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetDatesFromCert(Cert* cert, const byte* der, int derSz)
8024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret;
8026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert* decoded;
8028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
8029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert decoded[1];
8030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("SetDatesFromCert");
8033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (derSz < 0)
8034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return derSz;
8035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     decoded = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 273


8038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
8039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (decoded == NULL)
8040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     InitDecodedCert(decoded, (byte*)der, derSz, 0);
8044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = ParseCertRelative(decoded, CA_TYPE, NO_VERIFY, 0);
8045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0) {
8047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("ParseCertRelative error");
8048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (decoded->beforeDate == NULL || decoded->afterDate == NULL) {
8050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Couldn't extract dates");
8051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = -1;
8052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else if (decoded->beforeDateLen > MAX_DATE_SIZE ||
8054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         decoded->afterDateLen > MAX_DATE_SIZE) {
8055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Bad date size");
8056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = -1;
8057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
8059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cert->beforeDate, decoded->beforeDate, decoded->beforeDateLen);
8060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cert->afterDate,  decoded->afterDate,  decoded->afterDateLen);
8061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->beforeDateSz = decoded->beforeDateLen;
8063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cert->afterDateSz  = decoded->afterDateLen;
8064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FreeDecodedCert(decoded);
8067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(decoded, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret < 0 ? ret : 0;
8073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_ALT_NAMES && !NO_RSA */
8077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cn name from der buffer, return 0 on success */
8080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int SetNameFromCert(CertName* cn, const byte* der, int derSz)
8081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret, sz;
8083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert* decoded;
8085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
8086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     DecodedCert decoded[1];
8087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (derSz < 0)
8090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return derSz;
8091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     decoded = (DecodedCert*)XMALLOC(sizeof(DecodedCert), NULL,
8094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 274


8095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (decoded == NULL)
8096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     InitDecodedCert(decoded, (byte*)der, derSz, 0);
8100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = ParseCertRelative(decoded, CA_TYPE, NO_VERIFY, 0);
8101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0) {
8103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("ParseCertRelative error");
8104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
8106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectCN) {
8107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectCNLen < CTC_NAME_SIZE) ? decoded->subjectCNLen
8108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                          : CTC_NAME_SIZE - 1;
8109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->commonName, decoded->subjectCN, CTC_NAME_SIZE);
8110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->commonName[sz] = 0;
8111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->commonNameEnc = decoded->subjectCNEnc;
8112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectC) {
8114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectCLen < CTC_NAME_SIZE) ? decoded->subjectCLen
8115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                         : CTC_NAME_SIZE - 1;
8116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->country, decoded->subjectC, CTC_NAME_SIZE);
8117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->country[sz] = 0;
8118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->countryEnc = decoded->subjectCEnc;
8119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectST) {
8121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectSTLen < CTC_NAME_SIZE) ? decoded->subjectSTLen
8122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                          : CTC_NAME_SIZE - 1;
8123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->state, decoded->subjectST, CTC_NAME_SIZE);
8124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->state[sz] = 0;
8125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->stateEnc = decoded->subjectSTEnc;
8126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectL) {
8128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectLLen < CTC_NAME_SIZE) ? decoded->subjectLLen
8129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                         : CTC_NAME_SIZE - 1;
8130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->locality, decoded->subjectL, CTC_NAME_SIZE);
8131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->locality[sz] = 0;
8132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->localityEnc = decoded->subjectLEnc;
8133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectO) {
8135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectOLen < CTC_NAME_SIZE) ? decoded->subjectOLen
8136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                         : CTC_NAME_SIZE - 1;
8137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->org, decoded->subjectO, CTC_NAME_SIZE);
8138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->org[sz] = 0;
8139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->orgEnc = decoded->subjectOEnc;
8140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectOU) {
8142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectOULen < CTC_NAME_SIZE) ? decoded->subjectOULen
8143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                          : CTC_NAME_SIZE - 1;
8144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->unit, decoded->subjectOU, CTC_NAME_SIZE);
8145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->unit[sz] = 0;
8146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->unitEnc = decoded->subjectOUEnc;
8147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectSN) {
8149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectSNLen < CTC_NAME_SIZE) ? decoded->subjectSNLen
8150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                          : CTC_NAME_SIZE - 1;
8151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->sur, decoded->subjectSN, CTC_NAME_SIZE);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 275


8152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->sur[sz] = 0;
8153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->surEnc = decoded->subjectSNEnc;
8154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (decoded->subjectEmail) {
8156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             sz = (decoded->subjectEmailLen < CTC_NAME_SIZE)
8157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                ?  decoded->subjectEmailLen : CTC_NAME_SIZE - 1;
8158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             strncpy(cn->email, decoded->subjectEmail, CTC_NAME_SIZE);
8159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cn->email[sz] = 0;
8160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     FreeDecodedCert(decoded);
8164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(decoded, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret < 0 ? ret : 0;
8170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifndef NO_FILESYSTEM
8174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cert issuer from issuerFile in PEM */
8176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetIssuer(Cert* cert, const char* issuerFile)
8177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         ret;
8179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         derSz;
8180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*       der = (byte*)XMALLOC(EIGHTK_BUF, NULL, DYNAMIC_TYPE_CERT);
8181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL) {
8183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_SetIssuer OOF Problem");
8184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     derSz = wolfSSL_PemCertToDer(issuerFile, der, EIGHTK_BUF);
8187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->selfSigned = 0;
8188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = SetNameFromCert(&cert->issuer, der, derSz);
8189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_CERT);
8190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
8192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cert subject from subjectFile in PEM */
8196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetSubject(Cert* cert, const char* subjectFile)
8197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         ret;
8199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         derSz;
8200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*       der = (byte*)XMALLOC(EIGHTK_BUF, NULL, DYNAMIC_TYPE_CERT);
8201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL) {
8203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_SetSubject OOF Problem");
8204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     derSz = wolfSSL_PemCertToDer(subjectFile, der, EIGHTK_BUF);
8207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = SetNameFromCert(&cert->subject, der, derSz);
8208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_CERT);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 276


8209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
8211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
8215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set atl names from file in PEM */
8217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetAltNames(Cert* cert, const char* file)
8218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         ret;
8220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int         derSz;
8221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte*       der = (byte*)XMALLOC(EIGHTK_BUF, NULL, DYNAMIC_TYPE_CERT);
8222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (der == NULL) {
8224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("wc_SetAltNames OOF Problem");
8225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     derSz = wolfSSL_PemCertToDer(file, der, EIGHTK_BUF);
8228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = SetAltNamesFromCert(cert, der, derSz);
8229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(der, NULL, DYNAMIC_TYPE_CERT);
8230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
8232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_ALT_NAMES */
8235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* NO_FILESYSTEM */
8237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cert issuer from DER buffer */
8239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetIssuerBuffer(Cert* cert, const byte* der, int derSz)
8240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cert->selfSigned = 0;
8242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetNameFromCert(&cert->issuer, der, derSz);
8243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cert subject from DER buffer */
8247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetSubjectBuffer(Cert* cert, const byte* der, int derSz)
8248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetNameFromCert(&cert->subject, der, derSz);
8250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_ALT_NAMES
8254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cert alt names from DER buffer */
8256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetAltNamesBuffer(Cert* cert, const byte* der, int derSz)
8257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetAltNamesFromCert(cert, der, derSz);
8259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Set cert dates from DER buffer */
8262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_SetDatesBuffer(Cert* cert, const byte* der, int derSz)
8263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return SetDatesFromCert(cert, der, derSz);
8265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 277


8266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_ALT_NAMES */
8268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_CERT_GEN */
8270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_ECC
8273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Der Encode r & s ints into out, outLen is (in/out) size */
8275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int StoreECC_DSA_Sig(byte* out, word32* outLen, mp_int* r, mp_int* s)
8276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
8278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 rSz;                           /* encoding size */
8279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 sSz;
8280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 headerSz = 4;   /* 2*ASN_TAG + 2*LEN(ENUM) */
8281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* If the leading bit on the INTEGER is a 1, add a leading zero */
8283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int rLeadingZero = mp_leading_bit(r);
8284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int sLeadingZero = mp_leading_bit(s);
8285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int rLen = mp_unsigned_bin_size(r);   /* big int size */
8286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int sLen = mp_unsigned_bin_size(s);
8287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int err;
8288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (*outLen < (rLen + rLeadingZero + sLen + sLeadingZero +
8290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                    headerSz + 2))  /* SEQ_TAG + LEN(ENUM) */
8291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
8292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = SetSequence(rLen+rLeadingZero+sLen+sLeadingZero+headerSz, out);
8294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* store r */
8296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     out[idx++] = ASN_INTEGER;
8297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     rSz = SetLength(rLen + rLeadingZero, &out[idx]);
8298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += rSz;
8299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (rLeadingZero)
8300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         out[idx++] = 0;
8301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     err = mp_to_unsigned_bin(r, &out[idx]);
8302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (err != MP_OKAY) return err;
8303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += rLen;
8304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* store s */
8306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     out[idx++] = ASN_INTEGER;
8307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     sSz = SetLength(sLen + sLeadingZero, &out[idx]);
8308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += sSz;
8309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (sLeadingZero)
8310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         out[idx++] = 0;
8311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     err = mp_to_unsigned_bin(s, &out[idx]);
8312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (err != MP_OKAY) return err;
8313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += sLen;
8314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *outLen = idx;
8316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
8318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Der Decode ECC-DSA Signature, r & s stored as big ints */
8322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int DecodeECC_DSA_Sig(const byte* sig, word32 sigLen, mp_int* r, mp_int* s)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 278


8323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
8325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    len = 0;
8326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(sig, &idx, &len, sigLen) < 0)
8328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_ECC_KEY_E;
8329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((word32)len > (sigLen - idx))
8331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_ECC_KEY_E;
8332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(r, sig, &idx, sigLen) < 0)
8334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_ECC_KEY_E;
8335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetInt(s, sig, &idx, sigLen) < 0)
8337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_ECC_KEY_E;
8338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
8340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_EccPrivateKeyDecode(const byte* input, word32* inOutIdx, ecc_key* key,
8344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         word32 inSz)
8345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 oid = 0;
8347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    version, length;
8348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    privSz, pubSz;
8349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   b;
8350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    ret = 0;
8351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* priv;
8353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* pub;
8354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
8355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte priv[ECC_MAXSIZE+1];
8356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte pub[2*(ECC_MAXSIZE+1)]; /* public key has two parts plus header */
8357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input == NULL || inOutIdx == NULL || key == NULL || inSz == 0)
8360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
8361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
8363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetMyVersion(input, inOutIdx, &version) < 0)
8366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[*inOutIdx];
8369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx += 1;
8370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* priv type */
8372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b != 4 && b != 6 && b != 7)
8373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(input, inOutIdx, &length, inSz) < 0)
8376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > ECC_MAXSIZE)
8379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 279


8380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     priv = (byte*)XMALLOC(ECC_MAXSIZE+1, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (priv == NULL)
8384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pub = (byte*)XMALLOC(2*(ECC_MAXSIZE+1), NULL, DYNAMIC_TYPE_TMP_BUFFER);
8387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (pub == NULL) {
8388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(priv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* priv key */
8394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     privSz = length;
8395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(priv, &input[*inOutIdx], privSz);
8396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx += length;
8397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* prefix 0, may have */
8399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     b = input[*inOutIdx];
8400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (b == ECC_PREFIX_0) {
8401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *inOutIdx += 1;
8402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(input, inOutIdx, &length, inSz) < 0)
8404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_PARSE_E;
8405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
8406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* object id */
8407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[*inOutIdx];
8408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *inOutIdx += 1;
8409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_OBJECT_ID) {
8411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_OBJECT_ID_E;
8412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (GetLength(input, inOutIdx, &length, inSz) < 0) {
8414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_PARSE_E;
8415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
8417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 while(length--) {
8418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     oid += input[*inOutIdx];
8419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     *inOutIdx += 1;
8420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
8421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (CheckCurve(oid) < 0)
8422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ret = ECC_CURVE_OID_E;
8423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret == 0) {
8428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* prefix 1 */
8429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         b = input[*inOutIdx];
8430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *inOutIdx += 1;
8431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != ECC_PREFIX_1) {
8433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_ECC_KEY_E;
8434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else if (GetLength(input, inOutIdx, &length, inSz) < 0) {
8436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             ret = ASN_PARSE_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 280


8437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         else {
8439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* key header */
8440:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[*inOutIdx];
8441:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *inOutIdx += 1;
8442:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8443:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_BIT_STRING) {
8444:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_BITSTR_E;
8445:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8446:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (GetLength(input, inOutIdx, &length, inSz) < 0) {
8447:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_PARSE_E;
8448:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8449:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (length <= 0) {
8450:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 /* pubkey needs some size */
8451:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_INPUT_E;
8452:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8453:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
8454:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 b = input[*inOutIdx];
8455:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 *inOutIdx += 1;
8456:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8457:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (b != 0x00) {
8458:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ret = ASN_EXPECT_0_E;
8459:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
8460:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 else {
8461:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     /* pub key */
8462:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     pubSz = length - 1;  /* null prefix */
8463:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     if (pubSz < 2*(ECC_MAXSIZE+1)) {
8464:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         XMEMCPY(pub, &input[*inOutIdx], pubSz);
8465:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         *inOutIdx += length;
8466:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         ret = wc_ecc_import_private_key(priv, privSz, pub, pubSz,
8467:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                      key);
8468:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     } else
8469:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         ret = BUFFER_E;
8470:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 }
8471:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8472:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8473:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8474:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8475:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_SMALL_STACK
8476:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(priv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8477:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(pub,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
8478:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8479:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8480:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
8481:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8482:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8483:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_EccPublicKeyDecode(const byte* input, word32* inOutIdx,
8484:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                           ecc_key* key, word32 inSz)
8485:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8486:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
8487:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    ret = 0;
8488:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8489:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input == NULL || inOutIdx == NULL || key == NULL || inSz == 0)
8490:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
8491:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8492:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(input, inOutIdx, &length, inSz) < 0)
8493:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 281


8494:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8495:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(OPENSSL_EXTRA) || defined(ECC_DECODE_EXTRA)
8496:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8497:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         byte b = input[*inOutIdx];
8498:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (b != ASN_INTEGER) {
8499:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* not from decoded cert, will have algo id, skip past */
8500:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetSequence(input, inOutIdx, &length, inSz) < 0)
8501:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
8502:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8503:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[(*inOutIdx)++];
8504:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_OBJECT_ID)
8505:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_OBJECT_ID_E;
8506:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8507:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, inOutIdx, &length, inSz) < 0)
8508:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
8509:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8510:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *inOutIdx += length;   /* skip past */
8511:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8512:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* ecc params information */
8513:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[(*inOutIdx)++];
8514:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_OBJECT_ID)
8515:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_OBJECT_ID_E;
8516:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8517:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(input, inOutIdx, &length, inSz) < 0)
8518:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
8519:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8520:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *inOutIdx += length;   /* skip past */
8521:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8522:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* key header */
8523:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             b = input[*inOutIdx];
8524:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             *inOutIdx += 1;
8525:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8526:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (b != ASN_BIT_STRING)
8527:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_BITSTR_E;
8528:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else if (GetLength(input, inOutIdx, &length, inSz) < 0)
8529:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 ret = ASN_PARSE_E;
8530:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else {
8531:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 b = input[*inOutIdx];
8532:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 *inOutIdx += 1;
8533:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8534:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 if (b != 0x00)
8535:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                     ret = ASN_EXPECT_0_E;
8536:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8537:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8538:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }  /* openssl var block */
8539:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* OPENSSL_EXTRA */
8540:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8541:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (wc_ecc_import_x963(input+*inOutIdx, inSz - *inOutIdx, key) != 0)
8542:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_ECC_KEY_E;
8543:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8544:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
8545:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8546:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8547:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8548:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef WOLFSSL_KEY_GEN
8549:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8550:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Write a Private ecc key to DER format, length on success else < 0 */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 282


8551:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int wc_EccKeyToDer(ecc_key* key, byte* output, word32 inLen)
8552:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8553:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   curve[MAX_ALGO_SZ+2];
8554:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   ver[MAX_VERSION_SZ];
8555:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   seq[MAX_SEQ_SZ];
8556:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte   *prv, *pub;
8557:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    ret, totalSz, curveSz, verSz;
8558:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    privHdrSz  = ASN_ECC_HEADER_SZ;
8559:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    pubHdrSz   = ASN_ECC_CONTEXT_SZ + ASN_ECC_HEADER_SZ;
8560:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8561:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0, prvidx = 0, pubidx = 0, curveidx = 0;
8562:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 seqSz, privSz, pubSz = ECC_BUFSIZE;
8563:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8564:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (key == NULL || output == NULL || inLen == 0)
8565:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
8566:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8567:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* curve */
8568:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     curve[curveidx++] = ECC_PREFIX_0;
8569:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     curveidx++ /* to put the size after computation */;
8570:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     curveSz = SetCurve(key, curve+curveidx);
8571:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (curveSz < 0)
8572:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return curveSz;
8573:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* set computed size */
8574:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     curve[1] = (byte)curveSz;
8575:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     curveidx += curveSz;
8576:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8577:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* private */
8578:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     privSz = key->dp->size;
8579:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     prv = (byte*)XMALLOC(privSz + privHdrSz + MAX_SEQ_SZ,
8580:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          NULL, DYNAMIC_TYPE_TMP_BUFFER);
8581:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (prv == NULL) {
8582:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8583:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8584:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     prv[prvidx++] = ASN_OCTET_STRING;
8585:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     prv[prvidx++] = (byte)key->dp->size;
8586:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_ecc_export_private_only(key, prv + prvidx, &privSz);
8587:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret < 0) {
8588:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(prv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8589:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
8590:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8591:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     prvidx += privSz;
8592:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8593:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* public */
8594:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_ecc_export_x963(key, NULL, &pubSz);
8595:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != LENGTH_ONLY_E) {
8596:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(prv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8597:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
8598:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8599:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8600:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pub = (byte*)XMALLOC(pubSz + pubHdrSz + MAX_SEQ_SZ,
8601:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                          NULL, DYNAMIC_TYPE_TMP_BUFFER);
8602:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (pub == NULL) {
8603:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(prv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8604:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return MEMORY_E;
8605:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8606:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8607:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pub[pubidx++] = ECC_PREFIX_1;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 283


8608:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (pubSz > 128) /* leading zero + extra size byte */
8609:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         pubidx += SetLength(pubSz + ASN_ECC_CONTEXT_SZ + 2, pub+pubidx);
8610:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else /* leading zero */
8611:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         pubidx += SetLength(pubSz + ASN_ECC_CONTEXT_SZ + 1, pub+pubidx);
8612:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pub[pubidx++] = ASN_BIT_STRING;
8613:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pubidx += SetLength(pubSz + 1, pub+pubidx);
8614:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pub[pubidx++] = (byte)0; /* leading zero */
8615:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_ecc_export_x963(key, pub + pubidx, &pubSz);
8616:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (ret != 0) {
8617:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(prv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8618:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(pub, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8619:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ret;
8620:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8621:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     pubidx += pubSz;
8622:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8623:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* make headers */
8624:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     verSz = SetMyVersion(1, ver, FALSE);
8625:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqSz = SetSequence(verSz + prvidx + pubidx + curveidx, seq);
8626:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8627:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz = prvidx + pubidx + curveidx + verSz + seqSz;
8628:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (totalSz > (int)inLen) {
8629:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(prv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8630:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XFREE(pub, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8631:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
8632:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8633:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8634:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* write out */
8635:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* seq */
8636:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, seq, seqSz);
8637:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx = seqSz;
8638:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8639:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* ver */
8640:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, ver, verSz);
8641:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += verSz;
8642:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8643:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* private */
8644:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, prv, prvidx);
8645:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += prvidx;
8646:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(prv, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8647:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8648:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* curve */
8649:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, curve, curveidx);
8650:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += curveidx;
8651:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8652:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* public */
8653:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + idx, pub, pubidx);
8654:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* idx += pubidx;  not used after write, if more data remove comment */
8655:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XFREE(pub, NULL, DYNAMIC_TYPE_TMP_BUFFER);
8656:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8657:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return totalSz;
8658:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8659:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8660:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif /* WOLFSSL_KEY_GEN */
8661:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8662:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif  /* HAVE_ECC */
8663:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8664:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 284


8665:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #if defined(HAVE_OCSP) || defined(HAVE_CRL)
8666:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8667:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* Get raw Date only, no processing, 0 on success */
8668:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetBasicDate(const byte* source, word32* idx, byte* date,
8669:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                         byte* format, int maxIdx)
8670:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8671:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;
8672:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8673:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetBasicDate");
8674:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8675:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *format = source[*idx];
8676:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *idx += 1;
8677:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (*format != ASN_UTC_TIME && *format != ASN_GENERALIZED_TIME)
8678:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_TIME_E;
8679:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8680:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, idx, &length, maxIdx) < 0)
8681:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8682:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8683:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length > MAX_DATE_SIZE || length < MIN_DATE_SIZE)
8684:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_DATE_SZ_E;
8685:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8686:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(date, &source[*idx], length);
8687:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *idx += length;
8688:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8689:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
8690:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8691:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8692:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
8693:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8694:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8695:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef HAVE_OCSP
8696:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8697:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int GetEnumerated(const byte* input, word32* inOutIdx, int *value)
8698:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8699:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *inOutIdx;
8700:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 len;
8701:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8702:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetEnumerated");
8703:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8704:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *value = 0;
8705:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8706:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (input[idx++] != ASN_ENUMERATED)
8707:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8708:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8709:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     len = input[idx++];
8710:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (len > 4)
8711:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8712:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8713:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (len--) {
8714:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *value  = *value << 8 | input[idx++];
8715:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8716:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8717:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *inOutIdx = idx;
8718:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8719:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return *value;
8720:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8721:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 285


8722:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8723:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeSingleResponse(byte* source,
8724:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             word32* ioIndex, OcspResponse* resp, word32 size)
8725:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8726:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *ioIndex, prevIndex, oid;
8727:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length, wrapperSz;
8728:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     CertStatus* cs = resp->status;
8729:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8730:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeSingleResponse");
8731:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8732:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Outer wrapper of the SEQUENCE OF Single Responses. */
8733:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &wrapperSz, size) < 0)
8734:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8735:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8736:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     prevIndex = idx;
8737:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8738:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* When making a request, we only request one status on one certificate
8739:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * at a time. There should only be one SingleResponse */
8740:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8741:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Wrapper around the Single Response */
8742:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, size) < 0)
8743:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8744:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8745:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Wrapper around the CertID */
8746:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, size) < 0)
8747:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8748:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Skip the hash algorithm */
8749:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetAlgoId(source, &idx, &oid, ignoreType, size) < 0)
8750:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8751:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Save reference to the hash of CN */
8752:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] != ASN_OCTET_STRING)
8753:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8754:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, &idx, &length, size) < 0)
8755:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8756:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->issuerHash = source + idx;
8757:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += length;
8758:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Save reference to the hash of the issuer public key */
8759:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] != ASN_OCTET_STRING)
8760:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8761:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, &idx, &length, size) < 0)
8762:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8763:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->issuerKeyHash = source + idx;
8764:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += length;
8765:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8766:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Read the serial number, it is handled as a string, not as a
8767:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * proper number. Just XMEMCPY the data over, rather than load it
8768:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * as an mp_int. */
8769:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] != ASN_INTEGER)
8770:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8771:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, &idx, &length, size) < 0)
8772:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8773:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (length <= EXTERNAL_SERIAL_SIZE)
8774:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8775:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (source[idx] == 0)
8776:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
8777:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx++;
8778:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             length--;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 286


8779:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8780:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(cs->serial, source + idx, length);
8781:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cs->serialSz = length;
8782:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8783:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
8784:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8785:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_GETINT_E;
8786:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8787:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     idx += length;
8788:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8789:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* CertStatus */
8790:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     switch (source[idx++])
8791:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8792:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case (ASN_CONTEXT_SPECIFIC | CERT_GOOD):
8793:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cs->status = CERT_GOOD;
8794:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx++;
8795:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
8796:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | CERT_REVOKED):
8797:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cs->status = CERT_REVOKED;
8798:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(source, &idx, &length, size) < 0)
8799:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
8800:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += length;
8801:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
8802:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         case (ASN_CONTEXT_SPECIFIC | CERT_UNKNOWN):
8803:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             cs->status = CERT_UNKNOWN;
8804:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx++;
8805:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             break;
8806:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         default:
8807:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8808:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8809:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8810:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetBasicDate(source, &idx, cs->thisDate,
8811:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                 &cs->thisDateFormat, size) < 0)
8812:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8813:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!XVALIDATE_DATE(cs->thisDate, cs->thisDateFormat, BEFORE))
8814:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_BEFORE_DATE_E;
8815:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8816:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* The following items are optional. Only check for them if there is more
8817:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * unprocessed data in the singleResponse wrapper. */
8818:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8819:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (((int)(idx - prevIndex) < wrapperSz) &&
8820:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (source[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 0)))
8821:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8822:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx++;
8823:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, &idx, &length, size) < 0)
8824:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8825:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetBasicDate(source, &idx, cs->nextDate,
8826:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                 &cs->nextDateFormat, size) < 0)
8827:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8828:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (!XVALIDATE_DATE(cs->nextDate, cs->nextDateFormat, AFTER))
8829:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_AFTER_DATE_E;
8830:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8831:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (((int)(idx - prevIndex) < wrapperSz) &&
8832:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (source[idx] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 1)))
8833:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8834:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx++;
8835:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, &idx, &length, size) < 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 287


8836:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8837:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
8838:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8839:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8840:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *ioIndex = idx;
8841:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8842:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
8843:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8844:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8845:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeOcspRespExtensions(byte* source,
8846:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             word32* ioIndex, OcspResponse* resp, word32 sz)
8847:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8848:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *ioIndex;
8849:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
8850:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ext_bound; /* boundary index for the sequence of extensions */
8851:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 oid;
8852:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8853:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeOcspRespExtensions");
8854:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8855:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] != (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC | 1))
8856:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8857:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8858:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, &idx, &length, sz) < 0) return ASN_PARSE_E;
8859:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8860:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, sz) < 0) return ASN_PARSE_E;
8861:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8862:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ext_bound = idx + length;
8863:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8864:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     while (idx < (word32)ext_bound) {
8865:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(source, &idx, &length, sz) < 0) {
8866:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be a SEQUENCE");
8867:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8868:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8869:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8870:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         oid = 0;
8871:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetObjectId(source, &idx, &oid, ocspType, sz) < 0) {
8872:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: OBJECT ID");
8873:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8874:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8875:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8876:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* check for critical flag */
8877:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (source[idx] == ASN_BOOLEAN) {
8878:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfound optional critical flag, moving past");
8879:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             idx += (ASN_BOOL_SIZE + 1);
8880:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8881:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8882:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         /* process the extension based on the OID */
8883:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (source[idx++] != ASN_OCTET_STRING) {
8884:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: should be an OCTET STRING");
8885:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8886:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8887:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8888:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, &idx, &length, sz) < 0) {
8889:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tfail: extension data length");
8890:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8891:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8892:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 288


8893:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (oid == OCSP_NONCE_OID) {
8894:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             /* get data inside extra OCTET_STRING */
8895:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (source[idx++] != ASN_OCTET_STRING) {
8896:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: should be an OCTET STRING");
8897:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
8898:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8899:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8900:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (GetLength(source, &idx, &length, sz) < 0) {
8901:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tfail: extension data length");
8902:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return ASN_PARSE_E;
8903:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
8904:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8905:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             resp->nonce = source + idx;
8906:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             resp->nonceSz = length;
8907:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
8908:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8909:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
8910:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8911:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8912:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *ioIndex = idx;
8913:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
8914:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8915:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8916:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8917:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeResponseData(byte* source,
8918:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             word32* ioIndex, OcspResponse* resp, word32 size)
8919:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8920:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *ioIndex, prev_idx;
8921:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
8922:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int version;
8923:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 responderId = 0;
8924:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8925:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeResponseData");
8926:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8927:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->response = source + idx;
8928:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     prev_idx = idx;
8929:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, size) < 0)
8930:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8931:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->responseSz = length + idx - prev_idx;
8932:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8933:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Get version. It is an EXPLICIT[0] DEFAULT(0) value. If this
8934:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * item isn't an EXPLICIT[0], then set version to zero and move
8935:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * onto the next item.
8936:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      */
8937:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx] == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED))
8938:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8939:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += 2; /* Eat the value and length */
8940:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetMyVersion(source, &idx, &version) < 0)
8941:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8942:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     } else
8943:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         version = 0;
8944:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8945:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     responderId = source[idx++];
8946:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if ((responderId == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | 1)) ||
8947:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         (responderId == (ASN_CONTEXT_SPECIFIC | ASN_CONSTRUCTED | 2)))
8948:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8949:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, &idx, &length, size) < 0)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 289


8950:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8951:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
8952:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8953:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else
8954:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8955:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8956:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* save pointer to the producedAt time */
8957:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetBasicDate(source, &idx, resp->producedDate,
8958:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                         &resp->producedDateFormat, size) < 0)
8959:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8960:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8961:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (DecodeSingleResponse(source, &idx, resp, size) < 0)
8962:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
8963:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8964:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /*
8965:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * Check the length of the ResponseData against the current index to
8966:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * see if there are extensions, they are optional.
8967:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      */
8968:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx - prev_idx < resp->responseSz)
8969:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (DecodeOcspRespExtensions(source, &idx, resp, size) < 0)
8970:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8971:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8972:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *ioIndex = idx;
8973:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
8974:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
8975:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8976:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8977:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeCerts(byte* source,
8978:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             word32* ioIndex, OcspResponse* resp, word32 size)
8979:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
8980:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *ioIndex;
8981:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8982:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeCerts");
8983:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8984:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] == (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC))
8985:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
8986:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int length;
8987:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8988:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, &idx, &length, size) < 0)
8989:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8990:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8991:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetSequence(source, &idx, &length, size) < 0)
8992:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
8993:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8994:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         resp->cert = source + idx;
8995:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         resp->certSz = length;
8996:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
8997:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += length;
8998:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
8999:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *ioIndex = idx;
9000:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
9001:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9002:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9003:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** static int DecodeBasicOcspResponse(byte* source, word32* ioIndex,
9004:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                       OcspResponse* resp, word32 size, void* cm)
9005:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9006:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 290


9007:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = *ioIndex;
9008:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 end_index;
9009:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int ret = -1;
9010:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9011:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("DecodeBasicOcspResponse");
9012:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9013:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, size) < 0)
9014:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9015:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9016:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx + length > size)
9017:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_INPUT_E;
9018:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     end_index = idx + length;
9019:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9020:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (DecodeResponseData(source, &idx, resp, size) < 0)
9021:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9022:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9023:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Get the signature algorithm */
9024:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetAlgoId(source, &idx, &resp->sigOID, sigType, size) < 0)
9025:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9026:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9027:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Obtain pointer to the start of the signature, and save the size */
9028:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] == ASN_BIT_STRING)
9029:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9030:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         int sigLength = 0;
9031:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, &idx, &sigLength, size) < 0)
9032:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
9033:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         resp->sigSz = sigLength;
9034:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         resp->sig = source + idx;
9035:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         idx += sigLength;
9036:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9037:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9038:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /*
9039:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * Check the length of the BasicOcspResponse against the current index to
9040:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * see if there are certificates, they are optional.
9041:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      */
9042:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx < end_index)
9043:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9044:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         DecodedCert cert;
9045:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9046:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (DecodeCerts(source, &idx, resp, size) < 0)
9047:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
9048:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9049:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         InitDecodedCert(&cert, resp->cert, resp->certSz, 0);
9050:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = ParseCertRelative(&cert, CERT_TYPE, VERIFY, cm);
9051:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret < 0)
9052:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ret;
9053:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9054:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         ret = ConfirmSignature(resp->response, resp->responseSz,
9055:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             cert.publicKey, cert.pubKeySize, cert.keyOID,
9056:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                             resp->sig, resp->sigSz, resp->sigOID, NULL);
9057:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         FreeDecodedCert(&cert);
9058:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9059:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (ret == 0)
9060:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
9061:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tOCSP Confirm signature failed");
9062:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_OCSP_CONFIRM_E;
9063:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 291


9064:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9065:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     else {
9066:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         Signer* ca = GetCA(cm, resp->issuerHash);
9067:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9068:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (!ca || !ConfirmSignature(resp->response, resp->responseSz,
9069:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                      ca->publicKey, ca->pubKeySize, ca->keyOID,
9070:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                   resp->sig, resp->sigSz, resp->sigOID, NULL)) {
9071:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tOCSP Confirm signature failed");
9072:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_OCSP_CONFIRM_E;
9073:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
9074:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9075:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9076:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *ioIndex = idx;
9077:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
9078:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9079:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9080:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9081:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void InitOcspResponse(OcspResponse* resp, CertStatus* status,
9082:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                     byte* source, word32 inSz)
9083:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9084:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("InitOcspResponse");
9085:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9086:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(status, 0, sizeof(CertStatus));
9087:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMSET(resp,   0, sizeof(OcspResponse));
9088:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9089:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->responseStatus = -1;
9090:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->status         = status;
9091:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->source         = source;
9092:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     resp->maxIdx         = inSz;
9093:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9094:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9095:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9096:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int OcspResponseDecode(OcspResponse* resp, void* cm)
9097:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9098:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int length = 0;
9099:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 idx = 0;
9100:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte* source = resp->source;
9101:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 size = resp->maxIdx;
9102:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 oid;
9103:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9104:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("OcspResponseDecode");
9105:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9106:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* peel the outer SEQUENCE wrapper */
9107:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, size) < 0)
9108:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9109:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9110:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* First get the responseStatus, an ENUMERATED */
9111:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetEnumerated(source, &idx, &resp->responseStatus) < 0)
9112:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9113:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9114:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (resp->responseStatus != OCSP_SUCCESSFUL)
9115:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
9116:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9117:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Next is an EXPLICIT record called ResponseBytes, OPTIONAL */
9118:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (idx >= size)
9119:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_INPUT_E;
9120:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] != (ASN_CONSTRUCTED | ASN_CONTEXT_SPECIFIC))
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 292


9121:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9122:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, &idx, &length, size) < 0)
9123:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9124:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9125:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Get the responseBytes SEQUENCE */
9126:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, &idx, &length, size) < 0)
9127:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9128:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9129:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Check ObjectID for the resposeBytes */
9130:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetObjectId(source, &idx, &oid, ocspType, size) < 0)
9131:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9132:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (oid != OCSP_BASIC_OID)
9133:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9134:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[idx++] != ASN_OCTET_STRING)
9135:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9136:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9137:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetLength(source, &idx, &length, size) < 0)
9138:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9139:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9140:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (DecodeBasicOcspResponse(source, &idx, resp, size, cm) < 0)
9141:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9142:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9143:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
9144:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9145:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9146:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9147:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** word32 EncodeOcspRequestExtensions(OcspRequest* req, byte* output, word32 size)
9148:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9149:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     static const byte NonceObjId[] = { 0x2b, 0x06, 0x01, 0x05, 0x05, 0x07,
9150:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                        0x30, 0x01, 0x02 };
9151:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte seqArray[6][MAX_SEQ_SZ];
9152:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 seqSz[6], totalSz = (word32)sizeof(NonceObjId);
9153:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9154:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("SetOcspReqExtensions");
9155:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9156:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (!req || !output || !req->nonceSz)
9157:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
9158:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9159:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += req->nonceSz;
9160:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[0] = SetOctetString(req->nonceSz, seqArray[0]);
9161:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[1] = SetOctetString(req->nonceSz + seqSz[0], seqArray[1]);
9162:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     seqArray[2][0] = ASN_OBJECT_ID;
9163:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[2] = 1 + SetLength(sizeof(NonceObjId), &seqArray[2][1]);
9164:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[3] = SetSequence(totalSz, seqArray[3]);
9165:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[4] = SetSequence(totalSz, seqArray[4]);
9166:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[5] = SetExplicit(2, totalSz, seqArray[5]);
9167:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9168:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (totalSz > size)
9169:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 0;
9170:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9171:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz = 0;
9172:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9173:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, seqArray[5], seqSz[5]);
9174:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[5];
9175:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9176:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, seqArray[4], seqSz[4]);
9177:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[4];
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 293


9178:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9179:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, seqArray[3], seqSz[3]);
9180:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[3];
9181:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9182:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, seqArray[2], seqSz[2]);
9183:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[2];
9184:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9185:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, NonceObjId, sizeof(NonceObjId));
9186:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += (word32)sizeof(NonceObjId);
9187:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9188:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, seqArray[1], seqSz[1]);
9189:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[1];
9190:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9191:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, seqArray[0], seqSz[0]);
9192:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += seqSz[0];
9193:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9194:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, req->nonce, req->nonceSz);
9195:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += req->nonceSz;
9196:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9197:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return totalSz;
9198:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9199:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9200:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9201:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int EncodeOcspRequest(OcspRequest* req, byte* output, word32 size)
9202:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9203:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte seqArray[5][MAX_SEQ_SZ];
9204:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* The ASN.1 of the OCSP Request is an onion of sequences */
9205:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte algoArray[MAX_ALGO_SZ];
9206:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte issuerArray[MAX_ENCODED_DIG_SZ];
9207:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte issuerKeyArray[MAX_ENCODED_DIG_SZ];
9208:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte snArray[MAX_SN_SZ];
9209:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     byte extArray[MAX_OCSP_EXT_SZ];
9210:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 seqSz[5], algoSz, issuerSz, issuerKeySz, snSz, extSz, totalSz;
9211:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int i;
9212:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9213:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("EncodeOcspRequest");
9214:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9215:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef NO_SHA
9216:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     algoSz = SetAlgoID(SHA256h, algoArray, hashType, 0);
9217:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
9218:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     algoSz = SetAlgoID(SHAh, algoArray, hashType, 0);
9219:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
9220:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9221:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     issuerSz    = SetDigest(req->issuerHash,    KEYID_SIZE,    issuerArray);
9222:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     issuerKeySz = SetDigest(req->issuerKeyHash, KEYID_SIZE,    issuerKeyArray);
9223:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     snSz        = SetSerialNumber(req->serial,  req->serialSz, snArray);
9224:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     extSz       = 0;
9225:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9226:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (req->nonceSz)
9227:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         extSz = EncodeOcspRequestExtensions(req, extArray, OCSP_NONCE_EXT_SZ);
9228:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9229:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz = algoSz + issuerSz + issuerKeySz + snSz;
9230:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 4; i >= 0; i--) {
9231:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         seqSz[i] = SetSequence(totalSz, seqArray[i]);
9232:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         totalSz += seqSz[i];
9233:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (i == 2) totalSz += extSz;
9234:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 294


9235:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9236:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (totalSz > size)
9237:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BUFFER_E;
9238:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9239:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz = 0;
9240:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     for (i = 0; i < 5; i++) {
9241:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + totalSz, seqArray[i], seqSz[i]);
9242:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         totalSz += seqSz[i];
9243:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9244:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9245:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, algoArray, algoSz);
9246:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += algoSz;
9247:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9248:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, issuerArray, issuerSz);
9249:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += issuerSz;
9250:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9251:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, issuerKeyArray, issuerKeySz);
9252:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += issuerKeySz;
9253:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9254:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     XMEMCPY(output + totalSz, snArray, snSz);
9255:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     totalSz += snSz;
9256:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9257:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (extSz != 0) {
9258:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(output + totalSz, extArray, extSz);
9259:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         totalSz += extSz;
9260:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9261:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9262:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return totalSz;
9263:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9264:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9265:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9266:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int InitOcspRequest(OcspRequest* req, DecodedCert* cert, byte useNonce)
9267:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9268:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("InitOcspRequest");
9269:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9270:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (req == NULL)
9271:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return BAD_FUNC_ARG;
9272:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9273:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ForceZero(req, sizeof(OcspRequest));
9274:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9275:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cert) {
9276:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(req->issuerHash,    cert->issuerHash,    KEYID_SIZE);
9277:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(req->issuerKeyHash, cert->issuerKeyHash, KEYID_SIZE);
9278:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9279:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         req->serial = (byte*)XMALLOC(cert->serialSz, NULL,
9280:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                      DYNAMIC_TYPE_OCSP_REQUEST);
9281:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (req->serial == NULL)
9282:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return MEMORY_E;
9283:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9284:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         XMEMCPY(req->serial, cert->serial, cert->serialSz);
9285:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         req->serialSz = cert->serialSz;
9286:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9287:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cert->extAuthInfoSz != 0 && cert->extAuthInfo != NULL) {
9288:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             req->url = (byte*)XMALLOC(cert->extAuthInfoSz, NULL,
9289:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                                                      DYNAMIC_TYPE_OCSP_REQUEST);
9290:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (req->url == NULL) {
9291:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 XFREE(req->serial, NULL, DYNAMIC_TYPE_OCSP);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 295


9292:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 return MEMORY_E;
9293:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             }
9294:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9295:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XMEMCPY(req->url, cert->extAuthInfo, cert->extAuthInfoSz);
9296:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             req->urlSz = cert->extAuthInfoSz;
9297:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
9298:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9299:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9300:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9301:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (useNonce) {
9302:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WC_RNG rng;
9303:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9304:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (wc_InitRng(&rng) != 0) {
9305:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tCannot initialize RNG. Skipping the OSCP Nonce.");
9306:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         } else {
9307:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             if (wc_RNG_GenerateBlock(&rng, req->nonce, MAX_OCSP_NONCE_SZ) != 0)
9308:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 WOLFSSL_MSG("\tCannot run RNG. Skipping the OSCP Nonce.");
9309:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             else
9310:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                 req->nonceSz = MAX_OCSP_NONCE_SZ;
9311:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9312:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             wc_FreeRng(&rng);
9313:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
9314:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9315:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9316:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
9317:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9318:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9319:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** void FreeOcspRequest(OcspRequest* req)
9320:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9321:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("FreeOcspRequest");
9322:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9323:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (req) {
9324:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (req->serial)
9325:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(req->serial, NULL, DYNAMIC_TYPE_OCSP_REQUEST);
9326:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9327:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (req->url)
9328:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             XFREE(req->url, NULL, DYNAMIC_TYPE_OCSP_REQUEST);
9329:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9330:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9331:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9332:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9333:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** int CompareOcspReqResp(OcspRequest* req, OcspResponse* resp)
9334:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
9335:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int cmp;
9336:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9337:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("CompareOcspReqResp");
9338:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9339:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (req == NULL)
9340:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9341:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tReq missing");
9342:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return -1;
9343:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9344:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9345:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (resp == NULL)
9346:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9347:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tResp missing");
9348:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return 1;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 296


9349:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9350:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9351:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* Nonces are not critical. The responder may not necessarily add
9352:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * the nonce to the response. */
9353:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (req->nonceSz && resp->nonceSz != 0) {
9354:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cmp = req->nonceSz - resp->nonceSz;
9355:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cmp != 0)
9356:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
9357:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tnonceSz mismatch");
9358:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return cmp;
9359:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
9360:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9361:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         cmp = XMEMCMP(req->nonce, resp->nonce, req->nonceSz);
9362:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (cmp != 0)
9363:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         {
9364:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             WOLFSSL_MSG("\tnonce mismatch");
9365:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return cmp;
9366:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         }
9367:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9368:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9369:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cmp = XMEMCMP(req->issuerHash, resp->issuerHash, KEYID_SIZE);
9370:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cmp != 0)
9371:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9372:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tissuerHash mismatch");
9373:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return cmp;
9374:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9375:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9376:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cmp = XMEMCMP(req->issuerKeyHash, resp->issuerKeyHash, KEYID_SIZE);
9377:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cmp != 0)
9378:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9379:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tissuerKeyHash mismatch");
9380:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return cmp;
9381:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9382:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9383:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cmp = req->serialSz - resp->status->serialSz;
9384:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cmp != 0)
9385:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9386:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tserialSz mismatch");
9387:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return cmp;
9388:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9389:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9390:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     cmp = XMEMCMP(req->serial, resp->status->serial, req->serialSz);
9391:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (cmp != 0)
9392:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     {
9393:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("\tserial mismatch");
9394:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return cmp;
9395:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9396:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9397:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return 0;
9398:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
9399:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9400:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
9401:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9402:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9403:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** /* store SHA hash of NAME */
9404:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** WOLFSSL_LOCAL int GetNameHash(const byte* source, word32* idx, byte* hash,
9405:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****                              int maxIdx)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 297


9406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** {
 6447              		.loc 1 9406 0
 6448              		.cfi_startproc
 6449              	.LVL793:
 6450 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6451              		.cfi_def_cfa_offset 20
 6452              		.cfi_offset 4, -20
 6453              		.cfi_offset 5, -16
 6454              		.cfi_offset 6, -12
 6455              		.cfi_offset 7, -8
 6456              		.cfi_offset 14, -4
 6457 0002 1E1C     		mov	r6, r3
9407:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;  /* length of all distinguished names */
9408:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    ret;
9409:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     word32 dummy;
9410:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9411:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     WOLFSSL_ENTER("GetNameHash");
9412:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9413:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (source[*idx] == ASN_OBJECT_ID) {
 6458              		.loc 1 9413 0
 6459 0004 0B68     		ldr	r3, [r1]
 6460              	.LVL794:
9406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;  /* length of all distinguished names */
 6461              		.loc 1 9406 0
 6462 0006 85B0     		sub	sp, sp, #20
 6463              		.cfi_def_cfa_offset 40
 6464              		.loc 1 9413 0
 6465 0008 C35C     		ldrb	r3, [r0, r3]
9406:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     int    length;  /* length of all distinguished names */
 6466              		.loc 1 9406 0
 6467 000a 051C     		mov	r5, r0
 6468 000c 0C1C     		mov	r4, r1
 6469 000e 0192     		str	r2, [sp, #4]
 6470              		.loc 1 9413 0
 6471 0010 062B     		cmp	r3, #6
 6472 0012 0CD1     		bne	.L615
9414:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Trying optional prefix...");
9415:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9416:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         if (GetLength(source, idx, &length, maxIdx) < 0)
 6473              		.loc 1 9416 0
 6474 0014 03AA     		add	r2, sp, #12
 6475              	.LVL795:
 6476 0016 331C     		mov	r3, r6
 6477 0018 FFF7FEFF 		bl	GetLength
 6478              	.LVL796:
 6479 001c 0028     		cmp	r0, #0
 6480 001e 02DA     		bge	.L616
 6481              	.L618:
9417:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****             return ASN_PARSE_E;
 6482              		.loc 1 9417 0
 6483 0020 8C20     		mov	r0, #140
 6484 0022 4042     		neg	r0, r0
 6485 0024 18E0     		b	.L617
 6486              	.L616:
9418:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9419:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         *idx += length;
 6487              		.loc 1 9419 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 298


 6488 0026 2368     		ldr	r3, [r4]
 6489 0028 039A     		ldr	r2, [sp, #12]
 6490 002a 9B18     		add	r3, r3, r2
 6491 002c 2360     		str	r3, [r4]
 6492              	.L615:
9420:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         WOLFSSL_MSG("Got optional prefix");
9421:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     }
9422:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9423:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     /* For OCSP, RFC2560 section 4.1.1 states the issuer hash should be
9424:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * calculated over the entire DER encoding of the Name field, including
9425:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****      * the tag and length. */
9426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     dummy = *idx;
9427:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, idx, &length, maxIdx) < 0)
 6493              		.loc 1 9427 0
 6494 002e 281C     		mov	r0, r5
 6495 0030 211C     		mov	r1, r4
 6496 0032 03AA     		add	r2, sp, #12
 6497 0034 331C     		mov	r3, r6
9426:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     if (GetSequence(source, idx, &length, maxIdx) < 0)
 6498              		.loc 1 9426 0
 6499 0036 2768     		ldr	r7, [r4]
 6500              	.LVL797:
 6501              		.loc 1 9427 0
 6502 0038 FFF7FEFF 		bl	GetSequence
 6503              	.LVL798:
 6504 003c 0028     		cmp	r0, #0
 6505 003e EFDB     		blt	.L618
9428:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****         return ASN_PARSE_E;
9429:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9430:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #ifdef NO_SHA
9431:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_Sha256Hash(source + dummy, length + *idx - dummy, hash);
9432:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #else
9433:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     ret = wc_ShaHash(source + dummy, length + *idx - dummy, hash);
 6506              		.loc 1 9433 0
 6507 0040 2368     		ldr	r3, [r4]
 6508 0042 039A     		ldr	r2, [sp, #12]
 6509 0044 E819     		add	r0, r5, r7
 6510 0046 9918     		add	r1, r3, r2
 6511 0048 C91B     		sub	r1, r1, r7
 6512 004a 019A     		ldr	r2, [sp, #4]
 6513 004c FFF7FEFF 		bl	wc_ShaHash
 6514              	.LVL799:
9434:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** #endif
9435:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9436:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     *idx += length;
 6515              		.loc 1 9436 0
 6516 0050 2368     		ldr	r3, [r4]
 6517 0052 039A     		ldr	r2, [sp, #12]
 6518 0054 9B18     		add	r3, r3, r2
 6519 0056 2360     		str	r3, [r4]
 6520              	.LVL800:
 6521              	.L617:
9437:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** 
9438:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c ****     return ret;
9439:..\acn-sdk-c\src\wolfSSL\wolfcrypt\src/asn.c **** }
 6522              		.loc 1 9439 0
 6523 0058 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 299


 6524              		@ sp needed
 6525              	.LVL801:
 6526              	.LVL802:
 6527              	.LVL803:
 6528 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 6529              		.cfi_endproc
 6530              	.LFE70:
 6531              		.size	GetNameHash, .-GetNameHash
 6532              		.global	END_PUB_KEY
 6533              		.global	BEGIN_PUB_KEY
 6534              		.global	END_DSA_PRIV
 6535              		.global	BEGIN_DSA_PRIV
 6536              		.global	END_EC_PRIV
 6537              		.global	BEGIN_EC_PRIV
 6538              		.global	END_ENC_PRIV_KEY
 6539              		.global	BEGIN_ENC_PRIV_KEY
 6540              		.global	END_PRIV_KEY
 6541              		.global	BEGIN_PRIV_KEY
 6542              		.global	END_RSA_PRIV
 6543              		.global	BEGIN_RSA_PRIV
 6544              		.global	END_X509_CRL
 6545              		.global	BEGIN_X509_CRL
 6546              		.global	END_DH_PARAM
 6547              		.global	BEGIN_DH_PARAM
 6548              		.global	END_CERT_REQ
 6549              		.global	BEGIN_CERT_REQ
 6550              		.global	END_CERT
 6551              		.global	BEGIN_CERT
 6552              		.section	.rodata
 6553              		.set	.LANCHOR0,. + 0
 6554              		.set	.LANCHOR1,. + 128
 6555              		.type	hashMd2hOid, %object
 6556              		.size	hashMd2hOid, 8
 6557              	hashMd2hOid:
 6558 0000 2A       		.byte	42
 6559 0001 86       		.byte	-122
 6560 0002 48       		.byte	72
 6561 0003 86       		.byte	-122
 6562 0004 F7       		.byte	-9
 6563 0005 0D       		.byte	13
 6564 0006 02       		.byte	2
 6565 0007 02       		.byte	2
 6566              		.type	hashMd5hOid, %object
 6567              		.size	hashMd5hOid, 8
 6568              	hashMd5hOid:
 6569 0008 2A       		.byte	42
 6570 0009 86       		.byte	-122
 6571 000a 48       		.byte	72
 6572 000b 86       		.byte	-122
 6573 000c F7       		.byte	-9
 6574 000d 0D       		.byte	13
 6575 000e 02       		.byte	2
 6576 000f 05       		.byte	5
 6577              		.type	blkDesCbcOid, %object
 6578              		.size	blkDesCbcOid, 5
 6579              	blkDesCbcOid:
 6580 0010 2B       		.byte	43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 300


 6581 0011 0E       		.byte	14
 6582 0012 03       		.byte	3
 6583 0013 02       		.byte	2
 6584 0014 07       		.byte	7
 6585              		.type	extBasicCaOid, %object
 6586              		.size	extBasicCaOid, 3
 6587              	extBasicCaOid:
 6588 0015 55       		.byte	85
 6589 0016 1D       		.byte	29
 6590 0017 13       		.byte	19
 6591              		.type	extAuthInfoOcspOid, %object
 6592              		.size	extAuthInfoOcspOid, 8
 6593              	extAuthInfoOcspOid:
 6594 0018 2B       		.byte	43
 6595 0019 06       		.byte	6
 6596 001a 01       		.byte	1
 6597 001b 05       		.byte	5
 6598 001c 05       		.byte	5
 6599 001d 07       		.byte	7
 6600 001e 30       		.byte	48
 6601 001f 01       		.byte	1
 6602              		.type	extCertPolicyAnyOid, %object
 6603              		.size	extCertPolicyAnyOid, 4
 6604              	extCertPolicyAnyOid:
 6605 0020 55       		.byte	85
 6606 0021 1D       		.byte	29
 6607 0022 20       		.byte	32
 6608 0023 00       		.byte	0
 6609              		.type	extAltNamesHwNameOid, %object
 6610              		.size	extAltNamesHwNameOid, 8
 6611              	extAltNamesHwNameOid:
 6612 0024 2B       		.byte	43
 6613 0025 06       		.byte	6
 6614 0026 01       		.byte	1
 6615 0027 05       		.byte	5
 6616 0028 05       		.byte	5
 6617 0029 07       		.byte	7
 6618 002a 08       		.byte	8
 6619 002b 04       		.byte	4
 6620              		.type	pbkdf2Oid, %object
 6621              		.size	pbkdf2Oid, 9
 6622              	pbkdf2Oid:
 6623 002c 2A       		.byte	42
 6624 002d 86       		.byte	-122
 6625 002e 48       		.byte	72
 6626 002f 86       		.byte	-122
 6627 0030 F7       		.byte	-9
 6628 0031 0D       		.byte	13
 6629 0032 01       		.byte	1
 6630 0033 05       		.byte	5
 6631 0034 0C       		.byte	12
 6632              		.type	hashSha512hOid, %object
 6633              		.size	hashSha512hOid, 9
 6634              	hashSha512hOid:
 6635 0035 60       		.byte	96
 6636 0036 86       		.byte	-122
 6637 0037 48       		.byte	72
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 301


 6638 0038 01       		.byte	1
 6639 0039 65       		.byte	101
 6640 003a 03       		.byte	3
 6641 003b 04       		.byte	4
 6642 003c 02       		.byte	2
 6643 003d 03       		.byte	3
 6644              		.type	hashSha384hOid, %object
 6645              		.size	hashSha384hOid, 9
 6646              	hashSha384hOid:
 6647 003e 60       		.byte	96
 6648 003f 86       		.byte	-122
 6649 0040 48       		.byte	72
 6650 0041 01       		.byte	1
 6651 0042 65       		.byte	101
 6652 0043 03       		.byte	3
 6653 0044 04       		.byte	4
 6654 0045 02       		.byte	2
 6655 0046 02       		.byte	2
 6656              		.type	hashSha256hOid, %object
 6657              		.size	hashSha256hOid, 9
 6658              	hashSha256hOid:
 6659 0047 60       		.byte	96
 6660 0048 86       		.byte	-122
 6661 0049 48       		.byte	72
 6662 004a 01       		.byte	1
 6663 004b 65       		.byte	101
 6664 004c 03       		.byte	3
 6665 004d 04       		.byte	4
 6666 004e 02       		.byte	2
 6667 004f 01       		.byte	1
 6668              		.type	hashSha1hOid, %object
 6669              		.size	hashSha1hOid, 5
 6670              	hashSha1hOid:
 6671 0050 2B       		.byte	43
 6672 0051 0E       		.byte	14
 6673 0052 03       		.byte	3
 6674 0053 02       		.byte	2
 6675 0054 1A       		.byte	26
 6676              		.type	blkDes3CbcOid, %object
 6677              		.size	blkDes3CbcOid, 8
 6678              	blkDes3CbcOid:
 6679 0055 2A       		.byte	42
 6680 0056 86       		.byte	-122
 6681 0057 48       		.byte	72
 6682 0058 86       		.byte	-122
 6683 0059 F7       		.byte	-9
 6684 005a 0D       		.byte	13
 6685 005b 03       		.byte	3
 6686 005c 07       		.byte	7
 6687              		.type	extNameConsOid, %object
 6688              		.size	extNameConsOid, 3
 6689              	extNameConsOid:
 6690 005d 55       		.byte	85
 6691 005e 1D       		.byte	29
 6692 005f 1E       		.byte	30
 6693              		.type	extExtKeyUsageOid, %object
 6694              		.size	extExtKeyUsageOid, 3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 302


 6695              	extExtKeyUsageOid:
 6696 0060 55       		.byte	85
 6697 0061 1D       		.byte	29
 6698 0062 25       		.byte	37
 6699              		.type	extInhibitAnyOid, %object
 6700              		.size	extInhibitAnyOid, 3
 6701              	extInhibitAnyOid:
 6702 0063 55       		.byte	85
 6703 0064 1D       		.byte	29
 6704 0065 36       		.byte	54
 6705              		.type	extKeyUsageOid, %object
 6706              		.size	extKeyUsageOid, 3
 6707              	extKeyUsageOid:
 6708 0066 55       		.byte	85
 6709 0067 1D       		.byte	29
 6710 0068 0F       		.byte	15
 6711              		.type	extCertPolicyOid, %object
 6712              		.size	extCertPolicyOid, 3
 6713              	extCertPolicyOid:
 6714 0069 55       		.byte	85
 6715 006a 1D       		.byte	29
 6716 006b 20       		.byte	32
 6717              		.type	extSubjKeyOid, %object
 6718              		.size	extSubjKeyOid, 3
 6719              	extSubjKeyOid:
 6720 006c 55       		.byte	85
 6721 006d 1D       		.byte	29
 6722 006e 0E       		.byte	14
 6723              		.type	extAuthKeyOid, %object
 6724              		.size	extAuthKeyOid, 3
 6725              	extAuthKeyOid:
 6726 006f 55       		.byte	85
 6727 0070 1D       		.byte	29
 6728 0071 23       		.byte	35
 6729              		.type	extAuthInfoOid, %object
 6730              		.size	extAuthInfoOid, 8
 6731              	extAuthInfoOid:
 6732 0072 2B       		.byte	43
 6733 0073 06       		.byte	6
 6734 0074 01       		.byte	1
 6735 0075 05       		.byte	5
 6736 0076 05       		.byte	5
 6737 0077 07       		.byte	7
 6738 0078 01       		.byte	1
 6739 0079 01       		.byte	1
 6740              		.type	extCrlDistOid, %object
 6741              		.size	extCrlDistOid, 3
 6742              	extCrlDistOid:
 6743 007a 55       		.byte	85
 6744 007b 1D       		.byte	29
 6745 007c 1F       		.byte	31
 6746              		.type	extAltNamesOid, %object
 6747              		.size	extAltNamesOid, 3
 6748              	extAltNamesOid:
 6749 007d 55       		.byte	85
 6750 007e 1D       		.byte	29
 6751 007f 11       		.byte	17
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 303


 6752              		.type	extAuthInfoCaIssuerOid, %object
 6753              		.size	extAuthInfoCaIssuerOid, 8
 6754              	extAuthInfoCaIssuerOid:
 6755 0080 2B       		.byte	43
 6756 0081 06       		.byte	6
 6757 0082 01       		.byte	1
 6758 0083 05       		.byte	5
 6759 0084 05       		.byte	5
 6760 0085 07       		.byte	7
 6761 0086 30       		.byte	48
 6762 0087 02       		.byte	2
 6763              		.type	extExtKeyUsageOcspSignOid, %object
 6764              		.size	extExtKeyUsageOcspSignOid, 8
 6765              	extExtKeyUsageOcspSignOid:
 6766 0088 2B       		.byte	43
 6767 0089 06       		.byte	6
 6768 008a 01       		.byte	1
 6769 008b 05       		.byte	5
 6770 008c 05       		.byte	5
 6771 008d 07       		.byte	7
 6772 008e 03       		.byte	3
 6773 008f 09       		.byte	9
 6774              		.type	extExtKeyUsageClientAuthOid, %object
 6775              		.size	extExtKeyUsageClientAuthOid, 8
 6776              	extExtKeyUsageClientAuthOid:
 6777 0090 2B       		.byte	43
 6778 0091 06       		.byte	6
 6779 0092 01       		.byte	1
 6780 0093 05       		.byte	5
 6781 0094 05       		.byte	5
 6782 0095 07       		.byte	7
 6783 0096 03       		.byte	3
 6784 0097 02       		.byte	2
 6785              		.type	extExtKeyUsageServerAuthOid, %object
 6786              		.size	extExtKeyUsageServerAuthOid, 8
 6787              	extExtKeyUsageServerAuthOid:
 6788 0098 2B       		.byte	43
 6789 0099 06       		.byte	6
 6790 009a 01       		.byte	1
 6791 009b 05       		.byte	5
 6792 009c 05       		.byte	5
 6793 009d 07       		.byte	7
 6794 009e 03       		.byte	3
 6795 009f 01       		.byte	1
 6796              		.type	extExtKeyUsageAnyOid, %object
 6797              		.size	extExtKeyUsageAnyOid, 4
 6798              	extExtKeyUsageAnyOid:
 6799 00a0 55       		.byte	85
 6800 00a1 1D       		.byte	29
 6801 00a2 25       		.byte	37
 6802 00a3 00       		.byte	0
 6803              		.section	.rodata.str1.1,"aMS",%progbits,1
 6804              	.LC5:
 6805 0000 2F434E3D 		.ascii	"/CN=\000"
 6805      00
 6806              	.LC7:
 6807 0005 2F534E3D 		.ascii	"/SN=\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 304


 6807      00
 6808              	.LC9:
 6809 000a 2F433D00 		.ascii	"/C=\000"
 6810              	.LC11:
 6811 000e 2F4C3D00 		.ascii	"/L=\000"
 6812              	.LC13:
 6813 0012 2F53543D 		.ascii	"/ST=\000"
 6813      00
 6814              	.LC15:
 6815 0017 2F4F3D00 		.ascii	"/O=\000"
 6816              	.LC17:
 6817 001b 2F4F553D 		.ascii	"/OU=\000"
 6817      00
 6818              	.LC19:
 6819 0020 2F736572 		.ascii	"/serialNumber=\000"
 6819      69616C4E 
 6819      756D6265 
 6819      723D00
 6820              	.LC21:
 6821 002f 2F656D61 		.ascii	"/emailAddress=\000"
 6821      696C4164 
 6821      64726573 
 6821      733D00
 6822              	.LC23:
 6823 003e 2F554944 		.ascii	"/UID=\000"
 6823      3D00
 6824              	.LC27:
 6825 0044 2D2D2D2D 		.ascii	"-----END PUBLIC KEY-----\000"
 6825      2D454E44 
 6825      20505542 
 6825      4C494320 
 6825      4B45592D 
 6826              	.LC28:
 6827 005d 2D2D2D2D 		.ascii	"-----BEGIN PUBLIC KEY-----\000"
 6827      2D424547 
 6827      494E2050 
 6827      55424C49 
 6827      43204B45 
 6828              	.LC29:
 6829 0078 2D2D2D2D 		.ascii	"-----END DSA PRIVATE KEY-----\000"
 6829      2D454E44 
 6829      20445341 
 6829      20505249 
 6829      56415445 
 6830              	.LC30:
 6831 0096 2D2D2D2D 		.ascii	"-----BEGIN DSA PRIVATE KEY-----\000"
 6831      2D424547 
 6831      494E2044 
 6831      53412050 
 6831      52495641 
 6832              	.LC31:
 6833 00b6 2D2D2D2D 		.ascii	"-----END EC PRIVATE KEY-----\000"
 6833      2D454E44 
 6833      20454320 
 6833      50524956 
 6833      41544520 
 6834              	.LC32:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 305


 6835 00d3 2D2D2D2D 		.ascii	"-----BEGIN EC PRIVATE KEY-----\000"
 6835      2D424547 
 6835      494E2045 
 6835      43205052 
 6835      49564154 
 6836              	.LC33:
 6837 00f2 2D2D2D2D 		.ascii	"-----END ENCRYPTED PRIVATE KEY-----\000"
 6837      2D454E44 
 6837      20454E43 
 6837      52595054 
 6837      45442050 
 6838              	.LC34:
 6839 0116 2D2D2D2D 		.ascii	"-----BEGIN ENCRYPTED PRIVATE KEY-----\000"
 6839      2D424547 
 6839      494E2045 
 6839      4E435259 
 6839      50544544 
 6840              	.LC35:
 6841 013c 2D2D2D2D 		.ascii	"-----END PRIVATE KEY-----\000"
 6841      2D454E44 
 6841      20505249 
 6841      56415445 
 6841      204B4559 
 6842              	.LC36:
 6843 0156 2D2D2D2D 		.ascii	"-----BEGIN PRIVATE KEY-----\000"
 6843      2D424547 
 6843      494E2050 
 6843      52495641 
 6843      5445204B 
 6844              	.LC37:
 6845 0172 2D2D2D2D 		.ascii	"-----END RSA PRIVATE KEY-----\000"
 6845      2D454E44 
 6845      20525341 
 6845      20505249 
 6845      56415445 
 6846              	.LC38:
 6847 0190 2D2D2D2D 		.ascii	"-----BEGIN RSA PRIVATE KEY-----\000"
 6847      2D424547 
 6847      494E2052 
 6847      53412050 
 6847      52495641 
 6848              	.LC39:
 6849 01b0 2D2D2D2D 		.ascii	"-----END X509 CRL-----\000"
 6849      2D454E44 
 6849      20583530 
 6849      39204352 
 6849      4C2D2D2D 
 6850              	.LC40:
 6851 01c7 2D2D2D2D 		.ascii	"-----BEGIN X509 CRL-----\000"
 6851      2D424547 
 6851      494E2058 
 6851      35303920 
 6851      43524C2D 
 6852              	.LC41:
 6853 01e0 2D2D2D2D 		.ascii	"-----END DH PARAMETERS-----\000"
 6853      2D454E44 
 6853      20444820 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 306


 6853      50415241 
 6853      4D455445 
 6854              	.LC42:
 6855 01fc 2D2D2D2D 		.ascii	"-----BEGIN DH PARAMETERS-----\000"
 6855      2D424547 
 6855      494E2044 
 6855      48205041 
 6855      52414D45 
 6856              	.LC43:
 6857 021a 2D2D2D2D 		.ascii	"-----END CERTIFICATE REQUEST-----\000"
 6857      2D454E44 
 6857      20434552 
 6857      54494649 
 6857      43415445 
 6858              	.LC44:
 6859 023c 2D2D2D2D 		.ascii	"-----BEGIN CERTIFICATE REQUEST-----\000"
 6859      2D424547 
 6859      494E2043 
 6859      45525449 
 6859      46494341 
 6860              	.LC45:
 6861 0260 2D2D2D2D 		.ascii	"-----END CERTIFICATE-----\000"
 6861      2D454E44 
 6861      20434552 
 6861      54494649 
 6861      43415445 
 6862              	.LC46:
 6863 027a 2D2D2D2D 		.ascii	"-----BEGIN CERTIFICATE-----\000"
 6863      2D424547 
 6863      494E2043 
 6863      45525449 
 6863      46494341 
 6864              		.data
 6865              		.align	2
 6866              		.type	END_PUB_KEY, %object
 6867              		.size	END_PUB_KEY, 4
 6868              	END_PUB_KEY:
 6869 0000 44000000 		.word	.LC27
 6870              		.type	BEGIN_PUB_KEY, %object
 6871              		.size	BEGIN_PUB_KEY, 4
 6872              	BEGIN_PUB_KEY:
 6873 0004 5D000000 		.word	.LC28
 6874              		.type	END_DSA_PRIV, %object
 6875              		.size	END_DSA_PRIV, 4
 6876              	END_DSA_PRIV:
 6877 0008 78000000 		.word	.LC29
 6878              		.type	BEGIN_DSA_PRIV, %object
 6879              		.size	BEGIN_DSA_PRIV, 4
 6880              	BEGIN_DSA_PRIV:
 6881 000c 96000000 		.word	.LC30
 6882              		.type	END_EC_PRIV, %object
 6883              		.size	END_EC_PRIV, 4
 6884              	END_EC_PRIV:
 6885 0010 B6000000 		.word	.LC31
 6886              		.type	BEGIN_EC_PRIV, %object
 6887              		.size	BEGIN_EC_PRIV, 4
 6888              	BEGIN_EC_PRIV:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 307


 6889 0014 D3000000 		.word	.LC32
 6890              		.type	END_ENC_PRIV_KEY, %object
 6891              		.size	END_ENC_PRIV_KEY, 4
 6892              	END_ENC_PRIV_KEY:
 6893 0018 F2000000 		.word	.LC33
 6894              		.type	BEGIN_ENC_PRIV_KEY, %object
 6895              		.size	BEGIN_ENC_PRIV_KEY, 4
 6896              	BEGIN_ENC_PRIV_KEY:
 6897 001c 16010000 		.word	.LC34
 6898              		.type	END_PRIV_KEY, %object
 6899              		.size	END_PRIV_KEY, 4
 6900              	END_PRIV_KEY:
 6901 0020 3C010000 		.word	.LC35
 6902              		.type	BEGIN_PRIV_KEY, %object
 6903              		.size	BEGIN_PRIV_KEY, 4
 6904              	BEGIN_PRIV_KEY:
 6905 0024 56010000 		.word	.LC36
 6906              		.type	END_RSA_PRIV, %object
 6907              		.size	END_RSA_PRIV, 4
 6908              	END_RSA_PRIV:
 6909 0028 72010000 		.word	.LC37
 6910              		.type	BEGIN_RSA_PRIV, %object
 6911              		.size	BEGIN_RSA_PRIV, 4
 6912              	BEGIN_RSA_PRIV:
 6913 002c 90010000 		.word	.LC38
 6914              		.type	END_X509_CRL, %object
 6915              		.size	END_X509_CRL, 4
 6916              	END_X509_CRL:
 6917 0030 B0010000 		.word	.LC39
 6918              		.type	BEGIN_X509_CRL, %object
 6919              		.size	BEGIN_X509_CRL, 4
 6920              	BEGIN_X509_CRL:
 6921 0034 C7010000 		.word	.LC40
 6922              		.type	END_DH_PARAM, %object
 6923              		.size	END_DH_PARAM, 4
 6924              	END_DH_PARAM:
 6925 0038 E0010000 		.word	.LC41
 6926              		.type	BEGIN_DH_PARAM, %object
 6927              		.size	BEGIN_DH_PARAM, 4
 6928              	BEGIN_DH_PARAM:
 6929 003c FC010000 		.word	.LC42
 6930              		.type	END_CERT_REQ, %object
 6931              		.size	END_CERT_REQ, 4
 6932              	END_CERT_REQ:
 6933 0040 1A020000 		.word	.LC43
 6934              		.type	BEGIN_CERT_REQ, %object
 6935              		.size	BEGIN_CERT_REQ, 4
 6936              	BEGIN_CERT_REQ:
 6937 0044 3C020000 		.word	.LC44
 6938              		.type	END_CERT, %object
 6939              		.size	END_CERT, 4
 6940              	END_CERT:
 6941 0048 60020000 		.word	.LC45
 6942              		.type	BEGIN_CERT, %object
 6943              		.size	BEGIN_CERT, 4
 6944              	BEGIN_CERT:
 6945 004c 7A020000 		.word	.LC46
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 308


 6946              		.text
 6947              	.Letext0:
 6948              		.file 2 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/types.h"
 6949              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 6950              		.file 4 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/sha256.h"
 6951              		.file 5 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/integer.h"
 6952              		.file 6 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/sha.h"
 6953              		.file 7 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/asn_public.h"
 6954              		.file 8 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/asn.h"
 6955              		.file 9 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/hmac.h"
 6956              		.file 10 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/error-crypt.h"
 6957              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6958              		.file 12 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6959              		.file 13 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6960              		.file 14 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/memory.h"
 6961              		.file 15 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/hash.h"
 6962              		.file 16 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 6963              		.section	.debug_info,"",%progbits
 6964              	.Ldebug_info0:
 6965 0000 BF490000 		.4byte	0x49bf
 6966 0004 0400     		.2byte	0x4
 6967 0006 00000000 		.4byte	.Ldebug_abbrev0
 6968 000a 04       		.byte	0x4
 6969 000b 01       		.uleb128 0x1
 6970 000c 53140000 		.4byte	.LASF660
 6971 0010 01       		.byte	0x1
 6972 0011 D71C0000 		.4byte	.LASF661
 6973 0015 121C0000 		.4byte	.LASF662
 6974 0019 F0020000 		.4byte	.Ldebug_ranges0+0x2f0
 6975 001d 00000000 		.4byte	0
 6976 0021 00000000 		.4byte	.Ldebug_line0
 6977 0025 02       		.uleb128 0x2
 6978 0026 04       		.byte	0x4
 6979 0027 05       		.byte	0x5
 6980 0028 696E7400 		.ascii	"int\000"
 6981 002c 03       		.uleb128 0x3
 6982 002d B91B0000 		.4byte	.LASF1
 6983 0031 02       		.byte	0x2
 6984 0032 2D       		.byte	0x2d
 6985 0033 37000000 		.4byte	0x37
 6986 0037 04       		.uleb128 0x4
 6987 0038 01       		.byte	0x1
 6988 0039 08       		.byte	0x8
 6989 003a 3F080000 		.4byte	.LASF0
 6990 003e 03       		.uleb128 0x3
 6991 003f 24030000 		.4byte	.LASF2
 6992 0043 02       		.byte	0x2
 6993 0044 2F       		.byte	0x2f
 6994 0045 49000000 		.4byte	0x49
 6995 0049 04       		.uleb128 0x4
 6996 004a 02       		.byte	0x2
 6997 004b 07       		.byte	0x7
 6998 004c 53200000 		.4byte	.LASF3
 6999 0050 03       		.uleb128 0x3
 7000 0051 63050000 		.4byte	.LASF4
 7001 0055 02       		.byte	0x2
 7002 0056 30       		.byte	0x30
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 309


 7003 0057 5B000000 		.4byte	0x5b
 7004 005b 04       		.uleb128 0x4
 7005 005c 04       		.byte	0x4
 7006 005d 07       		.byte	0x7
 7007 005e 25130000 		.4byte	.LASF5
 7008 0062 04       		.uleb128 0x4
 7009 0063 08       		.byte	0x8
 7010 0064 07       		.byte	0x7
 7011 0065 80170000 		.4byte	.LASF6
 7012 0069 05       		.uleb128 0x5
 7013 006a 01       		.byte	0x1
 7014 006b 02       		.byte	0x2
 7015 006c 65       		.byte	0x65
 7016 006d 84000000 		.4byte	0x84
 7017 0071 06       		.uleb128 0x6
 7018 0072 D2110000 		.4byte	.LASF7
 7019 0076 04       		.sleb128 4
 7020 0077 06       		.uleb128 0x6
 7021 0078 7C200000 		.4byte	.LASF8
 7022 007c 08       		.sleb128 8
 7023 007d 06       		.uleb128 0x6
 7024 007e E2190000 		.4byte	.LASF9
 7025 0082 20       		.sleb128 32
 7026 0083 00       		.byte	0
 7027 0084 03       		.uleb128 0x3
 7028 0085 70000000 		.4byte	.LASF10
 7029 0089 03       		.byte	0x3
 7030 008a D4       		.byte	0xd4
 7031 008b 5B000000 		.4byte	0x5b
 7032 008f 04       		.uleb128 0x4
 7033 0090 01       		.byte	0x1
 7034 0091 06       		.byte	0x6
 7035 0092 DE060000 		.4byte	.LASF11
 7036 0096 04       		.uleb128 0x4
 7037 0097 02       		.byte	0x2
 7038 0098 05       		.byte	0x5
 7039 0099 5B1C0000 		.4byte	.LASF12
 7040 009d 04       		.uleb128 0x4
 7041 009e 04       		.byte	0x4
 7042 009f 05       		.byte	0x5
 7043 00a0 6A050000 		.4byte	.LASF13
 7044 00a4 04       		.uleb128 0x4
 7045 00a5 04       		.byte	0x4
 7046 00a6 07       		.byte	0x7
 7047 00a7 090E0000 		.4byte	.LASF14
 7048 00ab 04       		.uleb128 0x4
 7049 00ac 08       		.byte	0x8
 7050 00ad 05       		.byte	0x5
 7051 00ae F3100000 		.4byte	.LASF15
 7052 00b2 04       		.uleb128 0x4
 7053 00b3 04       		.byte	0x4
 7054 00b4 07       		.byte	0x7
 7055 00b5 A3000000 		.4byte	.LASF16
 7056 00b9 07       		.uleb128 0x7
 7057 00ba 04       		.byte	0x4
 7058 00bb 08       		.uleb128 0x8
 7059 00bc 04       		.byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 310


 7060 00bd 37000000 		.4byte	0x37
 7061 00c1 08       		.uleb128 0x8
 7062 00c2 04       		.byte	0x4
 7063 00c3 C7000000 		.4byte	0xc7
 7064 00c7 04       		.uleb128 0x4
 7065 00c8 01       		.byte	0x1
 7066 00c9 08       		.byte	0x8
 7067 00ca 4D090000 		.4byte	.LASF17
 7068 00ce 08       		.uleb128 0x8
 7069 00cf 04       		.byte	0x4
 7070 00d0 D4000000 		.4byte	0xd4
 7071 00d4 09       		.uleb128 0x9
 7072 00d5 C7000000 		.4byte	0xc7
 7073 00d9 08       		.uleb128 0x8
 7074 00da 04       		.byte	0x4
 7075 00db DF000000 		.4byte	0xdf
 7076 00df 0A       		.uleb128 0xa
 7077 00e0 05       		.uleb128 0x5
 7078 00e1 01       		.byte	0x1
 7079 00e2 02       		.byte	0x2
 7080 00e3 F2       		.byte	0xf2
 7081 00e4 39020000 		.4byte	0x239
 7082 00e8 06       		.uleb128 0x6
 7083 00e9 141A0000 		.4byte	.LASF18
 7084 00ed 01       		.sleb128 1
 7085 00ee 06       		.uleb128 0x6
 7086 00ef 18060000 		.4byte	.LASF19
 7087 00f3 02       		.sleb128 2
 7088 00f4 06       		.uleb128 0x6
 7089 00f5 481D0000 		.4byte	.LASF20
 7090 00f9 03       		.sleb128 3
 7091 00fa 06       		.uleb128 0x6
 7092 00fb 340A0000 		.4byte	.LASF21
 7093 00ff 04       		.sleb128 4
 7094 0100 06       		.uleb128 0x6
 7095 0101 03030000 		.4byte	.LASF22
 7096 0105 05       		.sleb128 5
 7097 0106 06       		.uleb128 0x6
 7098 0107 860E0000 		.4byte	.LASF23
 7099 010b 06       		.sleb128 6
 7100 010c 06       		.uleb128 0x6
 7101 010d F8110000 		.4byte	.LASF24
 7102 0111 07       		.sleb128 7
 7103 0112 06       		.uleb128 0x6
 7104 0113 20150000 		.4byte	.LASF25
 7105 0117 08       		.sleb128 8
 7106 0118 06       		.uleb128 0x6
 7107 0119 15190000 		.4byte	.LASF26
 7108 011d 09       		.sleb128 9
 7109 011e 06       		.uleb128 0x6
 7110 011f 0E180000 		.4byte	.LASF27
 7111 0123 0A       		.sleb128 10
 7112 0124 06       		.uleb128 0x6
 7113 0125 E51B0000 		.4byte	.LASF28
 7114 0129 0B       		.sleb128 11
 7115 012a 06       		.uleb128 0x6
 7116 012b FA130000 		.4byte	.LASF29
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 311


 7117 012f 0C       		.sleb128 12
 7118 0130 06       		.uleb128 0x6
 7119 0131 DF150000 		.4byte	.LASF30
 7120 0135 0D       		.sleb128 13
 7121 0136 06       		.uleb128 0x6
 7122 0137 B5150000 		.4byte	.LASF31
 7123 013b 0E       		.sleb128 14
 7124 013c 06       		.uleb128 0x6
 7125 013d 011B0000 		.4byte	.LASF32
 7126 0141 0F       		.sleb128 15
 7127 0142 06       		.uleb128 0x6
 7128 0143 0C150000 		.4byte	.LASF33
 7129 0147 10       		.sleb128 16
 7130 0148 06       		.uleb128 0x6
 7131 0149 651F0000 		.4byte	.LASF34
 7132 014d 11       		.sleb128 17
 7133 014e 06       		.uleb128 0x6
 7134 014f E2180000 		.4byte	.LASF35
 7135 0153 12       		.sleb128 18
 7136 0154 06       		.uleb128 0x6
 7137 0155 04100000 		.4byte	.LASF36
 7138 0159 13       		.sleb128 19
 7139 015a 06       		.uleb128 0x6
 7140 015b D30B0000 		.4byte	.LASF37
 7141 015f 14       		.sleb128 20
 7142 0160 06       		.uleb128 0x6
 7143 0161 631E0000 		.4byte	.LASF38
 7144 0165 15       		.sleb128 21
 7145 0166 06       		.uleb128 0x6
 7146 0167 87160000 		.4byte	.LASF39
 7147 016b 16       		.sleb128 22
 7148 016c 06       		.uleb128 0x6
 7149 016d 2C120000 		.4byte	.LASF40
 7150 0171 17       		.sleb128 23
 7151 0172 06       		.uleb128 0x6
 7152 0173 F10E0000 		.4byte	.LASF41
 7153 0177 18       		.sleb128 24
 7154 0178 06       		.uleb128 0x6
 7155 0179 5A0C0000 		.4byte	.LASF42
 7156 017d 19       		.sleb128 25
 7157 017e 06       		.uleb128 0x6
 7158 017f 3B1F0000 		.4byte	.LASF43
 7159 0183 1A       		.sleb128 26
 7160 0184 06       		.uleb128 0x6
 7161 0185 83130000 		.4byte	.LASF44
 7162 0189 1B       		.sleb128 27
 7163 018a 06       		.uleb128 0x6
 7164 018b 130F0000 		.4byte	.LASF45
 7165 018f 1C       		.sleb128 28
 7166 0190 06       		.uleb128 0x6
 7167 0191 350D0000 		.4byte	.LASF46
 7168 0195 1D       		.sleb128 29
 7169 0196 06       		.uleb128 0x6
 7170 0197 60070000 		.4byte	.LASF47
 7171 019b 1E       		.sleb128 30
 7172 019c 06       		.uleb128 0x6
 7173 019d A50D0000 		.4byte	.LASF48
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 312


 7174 01a1 1F       		.sleb128 31
 7175 01a2 06       		.uleb128 0x6
 7176 01a3 77120000 		.4byte	.LASF49
 7177 01a7 20       		.sleb128 32
 7178 01a8 06       		.uleb128 0x6
 7179 01a9 27010000 		.4byte	.LASF50
 7180 01ad 21       		.sleb128 33
 7181 01ae 06       		.uleb128 0x6
 7182 01af 71040000 		.4byte	.LASF51
 7183 01b3 22       		.sleb128 34
 7184 01b4 06       		.uleb128 0x6
 7185 01b5 450B0000 		.4byte	.LASF52
 7186 01b9 23       		.sleb128 35
 7187 01ba 06       		.uleb128 0x6
 7188 01bb 54000000 		.4byte	.LASF53
 7189 01bf 24       		.sleb128 36
 7190 01c0 06       		.uleb128 0x6
 7191 01c1 14130000 		.4byte	.LASF54
 7192 01c5 25       		.sleb128 37
 7193 01c6 06       		.uleb128 0x6
 7194 01c7 25020000 		.4byte	.LASF55
 7195 01cb 26       		.sleb128 38
 7196 01cc 06       		.uleb128 0x6
 7197 01cd AB0E0000 		.4byte	.LASF56
 7198 01d1 27       		.sleb128 39
 7199 01d2 06       		.uleb128 0x6
 7200 01d3 9B030000 		.4byte	.LASF57
 7201 01d7 28       		.sleb128 40
 7202 01d8 06       		.uleb128 0x6
 7203 01d9 A31E0000 		.4byte	.LASF58
 7204 01dd 29       		.sleb128 41
 7205 01de 06       		.uleb128 0x6
 7206 01df 11200000 		.4byte	.LASF59
 7207 01e3 2A       		.sleb128 42
 7208 01e4 06       		.uleb128 0x6
 7209 01e5 4E070000 		.4byte	.LASF60
 7210 01e9 2B       		.sleb128 43
 7211 01ea 06       		.uleb128 0x6
 7212 01eb 031E0000 		.4byte	.LASF61
 7213 01ef 2C       		.sleb128 44
 7214 01f0 06       		.uleb128 0x6
 7215 01f1 36040000 		.4byte	.LASF62
 7216 01f5 2D       		.sleb128 45
 7217 01f6 06       		.uleb128 0x6
 7218 01f7 3E1E0000 		.4byte	.LASF63
 7219 01fb 2E       		.sleb128 46
 7220 01fc 06       		.uleb128 0x6
 7221 01fd 521E0000 		.4byte	.LASF64
 7222 0201 2F       		.sleb128 47
 7223 0202 06       		.uleb128 0x6
 7224 0203 7F1F0000 		.4byte	.LASF65
 7225 0207 30       		.sleb128 48
 7226 0208 06       		.uleb128 0x6
 7227 0209 85060000 		.4byte	.LASF66
 7228 020d 31       		.sleb128 49
 7229 020e 06       		.uleb128 0x6
 7230 020f 6B090000 		.4byte	.LASF67
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 313


 7231 0213 32       		.sleb128 50
 7232 0214 06       		.uleb128 0x6
 7233 0215 DA010000 		.4byte	.LASF68
 7234 0219 33       		.sleb128 51
 7235 021a 06       		.uleb128 0x6
 7236 021b 29070000 		.4byte	.LASF69
 7237 021f 34       		.sleb128 52
 7238 0220 06       		.uleb128 0x6
 7239 0221 56110000 		.4byte	.LASF70
 7240 0225 35       		.sleb128 53
 7241 0226 06       		.uleb128 0x6
 7242 0227 BE090000 		.4byte	.LASF71
 7243 022b 36       		.sleb128 54
 7244 022c 06       		.uleb128 0x6
 7245 022d 74070000 		.4byte	.LASF72
 7246 0231 37       		.sleb128 55
 7247 0232 06       		.uleb128 0x6
 7248 0233 1B0E0000 		.4byte	.LASF73
 7249 0237 38       		.sleb128 56
 7250 0238 00       		.byte	0
 7251 0239 05       		.uleb128 0x5
 7252 023a 01       		.byte	0x1
 7253 023b 04       		.byte	0x4
 7254 023c 30       		.byte	0x30
 7255 023d 5B020000 		.4byte	0x25b
 7256 0241 06       		.uleb128 0x6
 7257 0242 DC170000 		.4byte	.LASF74
 7258 0246 02       		.sleb128 2
 7259 0247 06       		.uleb128 0x6
 7260 0248 111B0000 		.4byte	.LASF75
 7261 024c C000     		.sleb128 64
 7262 024e 06       		.uleb128 0x6
 7263 024f 29160000 		.4byte	.LASF76
 7264 0253 20       		.sleb128 32
 7265 0254 06       		.uleb128 0x6
 7266 0255 9A010000 		.4byte	.LASF77
 7267 0259 38       		.sleb128 56
 7268 025a 00       		.byte	0
 7269 025b 03       		.uleb128 0x3
 7270 025c 2A1A0000 		.4byte	.LASF78
 7271 0260 05       		.byte	0x5
 7272 0261 72       		.byte	0x72
 7273 0262 5B000000 		.4byte	0x5b
 7274 0266 0B       		.uleb128 0xb
 7275 0267 10       		.byte	0x10
 7276 0268 05       		.byte	0x5
 7277 0269 B5       		.byte	0xb5
 7278 026a 9E020000 		.4byte	0x29e
 7279 026e 0C       		.uleb128 0xc
 7280 026f 04010000 		.4byte	.LASF79
 7281 0273 05       		.byte	0x5
 7282 0274 B6       		.byte	0xb6
 7283 0275 25000000 		.4byte	0x25
 7284 0279 00       		.byte	0
 7285 027a 0C       		.uleb128 0xc
 7286 027b EB120000 		.4byte	.LASF80
 7287 027f 05       		.byte	0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 314


 7288 0280 B6       		.byte	0xb6
 7289 0281 25000000 		.4byte	0x25
 7290 0285 04       		.byte	0x4
 7291 0286 0C       		.uleb128 0xc
 7292 0287 98020000 		.4byte	.LASF81
 7293 028b 05       		.byte	0x5
 7294 028c B6       		.byte	0xb6
 7295 028d 25000000 		.4byte	0x25
 7296 0291 08       		.byte	0x8
 7297 0292 0D       		.uleb128 0xd
 7298 0293 647000   		.ascii	"dp\000"
 7299 0296 05       		.byte	0x5
 7300 0297 B7       		.byte	0xb7
 7301 0298 9E020000 		.4byte	0x29e
 7302 029c 0C       		.byte	0xc
 7303 029d 00       		.byte	0
 7304 029e 08       		.uleb128 0x8
 7305 029f 04       		.byte	0x4
 7306 02a0 5B020000 		.4byte	0x25b
 7307 02a4 03       		.uleb128 0x3
 7308 02a5 9A080000 		.4byte	.LASF82
 7309 02a9 05       		.byte	0x5
 7310 02aa B8       		.byte	0xb8
 7311 02ab 66020000 		.4byte	0x266
 7312 02af 05       		.uleb128 0x5
 7313 02b0 01       		.byte	0x1
 7314 02b1 06       		.byte	0x6
 7315 02b2 29       		.byte	0x29
 7316 02b3 D1020000 		.4byte	0x2d1
 7317 02b7 0E       		.uleb128 0xe
 7318 02b8 53484100 		.ascii	"SHA\000"
 7319 02bc 01       		.sleb128 1
 7320 02bd 06       		.uleb128 0x6
 7321 02be 4E150000 		.4byte	.LASF83
 7322 02c2 C000     		.sleb128 64
 7323 02c4 06       		.uleb128 0x6
 7324 02c5 23200000 		.4byte	.LASF84
 7325 02c9 14       		.sleb128 20
 7326 02ca 06       		.uleb128 0x6
 7327 02cb 47100000 		.4byte	.LASF85
 7328 02cf 38       		.sleb128 56
 7329 02d0 00       		.byte	0
 7330 02d1 0F       		.uleb128 0xf
 7331 02d2 26090000 		.4byte	.LASF101
 7332 02d6 01       		.byte	0x1
 7333 02d7 07       		.byte	0x7
 7334 02d8 28       		.byte	0x28
 7335 02d9 38030000 		.4byte	0x338
 7336 02dd 06       		.uleb128 0x6
 7337 02de 88040000 		.4byte	.LASF86
 7338 02e2 00       		.sleb128 0
 7339 02e3 06       		.uleb128 0x6
 7340 02e4 A1180000 		.4byte	.LASF87
 7341 02e8 01       		.sleb128 1
 7342 02e9 06       		.uleb128 0x6
 7343 02ea F3170000 		.4byte	.LASF88
 7344 02ee 02       		.sleb128 2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 315


 7345 02ef 06       		.uleb128 0x6
 7346 02f0 C2040000 		.4byte	.LASF89
 7347 02f4 03       		.sleb128 3
 7348 02f5 06       		.uleb128 0x6
 7349 02f6 CE060000 		.4byte	.LASF90
 7350 02fa 04       		.sleb128 4
 7351 02fb 06       		.uleb128 0x6
 7352 02fc C6120000 		.4byte	.LASF91
 7353 0300 05       		.sleb128 5
 7354 0301 06       		.uleb128 0x6
 7355 0302 15160000 		.4byte	.LASF92
 7356 0306 06       		.sleb128 6
 7357 0307 06       		.uleb128 0x6
 7358 0308 5D150000 		.4byte	.LASF93
 7359 030c 07       		.sleb128 7
 7360 030d 06       		.uleb128 0x6
 7361 030e AB020000 		.4byte	.LASF94
 7362 0312 08       		.sleb128 8
 7363 0313 06       		.uleb128 0x6
 7364 0314 1F050000 		.4byte	.LASF95
 7365 0318 09       		.sleb128 9
 7366 0319 06       		.uleb128 0x6
 7367 031a 86150000 		.4byte	.LASF96
 7368 031e 0A       		.sleb128 10
 7369 031f 06       		.uleb128 0x6
 7370 0320 671D0000 		.4byte	.LASF97
 7371 0324 0B       		.sleb128 11
 7372 0325 06       		.uleb128 0x6
 7373 0326 741E0000 		.4byte	.LASF98
 7374 032a 0C       		.sleb128 12
 7375 032b 06       		.uleb128 0x6
 7376 032c 950A0000 		.4byte	.LASF99
 7377 0330 0D       		.sleb128 13
 7378 0331 06       		.uleb128 0x6
 7379 0332 3C150000 		.4byte	.LASF100
 7380 0336 0E       		.sleb128 14
 7381 0337 00       		.byte	0
 7382 0338 0F       		.uleb128 0xf
 7383 0339 BE1A0000 		.4byte	.LASF102
 7384 033d 02       		.byte	0x2
 7385 033e 07       		.byte	0x7
 7386 033f 3C       		.byte	0x3c
 7387 0340 92030000 		.4byte	0x392
 7388 0344 06       		.uleb128 0x6
 7389 0345 7B1B0000 		.4byte	.LASF103
 7390 0349 8504     		.sleb128 517
 7391 034b 06       		.uleb128 0x6
 7392 034c 41120000 		.4byte	.LASF104
 7393 0350 8605     		.sleb128 646
 7394 0352 06       		.uleb128 0x6
 7395 0353 D5020000 		.4byte	.LASF105
 7396 0357 8805     		.sleb128 648
 7397 0359 06       		.uleb128 0x6
 7398 035a 6A150000 		.4byte	.LASF106
 7399 035e 8905     		.sleb128 649
 7400 0360 06       		.uleb128 0x6
 7401 0361 581B0000 		.4byte	.LASF107
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 316


 7402 0365 8804     		.sleb128 520
 7403 0367 06       		.uleb128 0x6
 7404 0368 D3180000 		.4byte	.LASF108
 7405 036c 8F05     		.sleb128 655
 7406 036e 06       		.uleb128 0x6
 7407 036f 99050000 		.4byte	.LASF109
 7408 0373 8C04     		.sleb128 524
 7409 0375 06       		.uleb128 0x6
 7410 0376 D3080000 		.4byte	.LASF110
 7411 037a 9005     		.sleb128 656
 7412 037c 06       		.uleb128 0x6
 7413 037d 5E060000 		.4byte	.LASF111
 7414 0381 8D04     		.sleb128 525
 7415 0383 06       		.uleb128 0x6
 7416 0384 39180000 		.4byte	.LASF112
 7417 0388 9105     		.sleb128 657
 7418 038a 06       		.uleb128 0x6
 7419 038b 031A0000 		.4byte	.LASF113
 7420 038f 8E04     		.sleb128 526
 7421 0391 00       		.byte	0
 7422 0392 0F       		.uleb128 0xf
 7423 0393 9E060000 		.4byte	.LASF114
 7424 0397 01       		.byte	0x1
 7425 0398 07       		.byte	0x7
 7426 0399 4A       		.byte	0x4a
 7427 039a AB030000 		.4byte	0x3ab
 7428 039e 06       		.uleb128 0x6
 7429 039f C5060000 		.4byte	.LASF115
 7430 03a3 0C       		.sleb128 12
 7431 03a4 06       		.uleb128 0x6
 7432 03a5 92040000 		.4byte	.LASF116
 7433 03a9 13       		.sleb128 19
 7434 03aa 00       		.byte	0
 7435 03ab 05       		.uleb128 0x5
 7436 03ac 01       		.byte	0x1
 7437 03ad 08       		.byte	0x8
 7438 03ae 3F       		.byte	0x3f
 7439 03af D2030000 		.4byte	0x3d2
 7440 03b3 06       		.uleb128 0x6
 7441 03b4 F1120000 		.4byte	.LASF117
 7442 03b8 00       		.sleb128 0
 7443 03b9 06       		.uleb128 0x6
 7444 03ba C61E0000 		.4byte	.LASF118
 7445 03be 01       		.sleb128 1
 7446 03bf 06       		.uleb128 0x6
 7447 03c0 7F1D0000 		.4byte	.LASF119
 7448 03c4 20       		.sleb128 32
 7449 03c5 06       		.uleb128 0x6
 7450 03c6 F90D0000 		.4byte	.LASF120
 7451 03ca 00       		.sleb128 0
 7452 03cb 06       		.uleb128 0x6
 7453 03cc 56030000 		.4byte	.LASF121
 7454 03d0 01       		.sleb128 1
 7455 03d1 00       		.byte	0
 7456 03d2 0F       		.uleb128 0xf
 7457 03d3 761D0000 		.4byte	.LASF122
 7458 03d7 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 317


 7459 03d8 08       		.byte	0x8
 7460 03d9 4A       		.byte	0x4a
 7461 03da 54040000 		.4byte	0x454
 7462 03de 06       		.uleb128 0x6
 7463 03df 4C160000 		.4byte	.LASF123
 7464 03e3 01       		.sleb128 1
 7465 03e4 06       		.uleb128 0x6
 7466 03e5 00150000 		.4byte	.LASF124
 7467 03e9 02       		.sleb128 2
 7468 03ea 06       		.uleb128 0x6
 7469 03eb 651C0000 		.4byte	.LASF125
 7470 03ef 03       		.sleb128 3
 7471 03f0 06       		.uleb128 0x6
 7472 03f1 541F0000 		.4byte	.LASF126
 7473 03f5 04       		.sleb128 4
 7474 03f6 06       		.uleb128 0x6
 7475 03f7 32080000 		.4byte	.LASF127
 7476 03fb 05       		.sleb128 5
 7477 03fc 06       		.uleb128 0x6
 7478 03fd 9D020000 		.4byte	.LASF128
 7479 0401 06       		.sleb128 6
 7480 0402 06       		.uleb128 0x6
 7481 0403 F4060000 		.4byte	.LASF129
 7482 0407 0A       		.sleb128 10
 7483 0408 06       		.uleb128 0x6
 7484 0409 62010000 		.4byte	.LASF130
 7485 040d 0C       		.sleb128 12
 7486 040e 06       		.uleb128 0x6
 7487 040f 1C070000 		.4byte	.LASF131
 7488 0413 10       		.sleb128 16
 7489 0414 06       		.uleb128 0x6
 7490 0415 D21F0000 		.4byte	.LASF132
 7491 0419 11       		.sleb128 17
 7492 041a 06       		.uleb128 0x6
 7493 041b DD210000 		.4byte	.LASF133
 7494 041f 17       		.sleb128 23
 7495 0420 06       		.uleb128 0x6
 7496 0421 AF160000 		.4byte	.LASF134
 7497 0425 00       		.sleb128 0
 7498 0426 06       		.uleb128 0x6
 7499 0427 880F0000 		.4byte	.LASF135
 7500 042b 01       		.sleb128 1
 7501 042c 06       		.uleb128 0x6
 7502 042d C3000000 		.4byte	.LASF136
 7503 0431 02       		.sleb128 2
 7504 0432 06       		.uleb128 0x6
 7505 0433 9D1C0000 		.4byte	.LASF137
 7506 0437 04       		.sleb128 4
 7507 0438 06       		.uleb128 0x6
 7508 0439 32100000 		.4byte	.LASF138
 7509 043d 18       		.sleb128 24
 7510 043e 06       		.uleb128 0x6
 7511 043f B4000000 		.4byte	.LASF139
 7512 0443 A001     		.sleb128 160
 7513 0445 06       		.uleb128 0x6
 7514 0446 E1020000 		.4byte	.LASF140
 7515 044a A301     		.sleb128 163
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 318


 7516 044c 06       		.uleb128 0x6
 7517 044d 33200000 		.4byte	.LASF141
 7518 0451 8001     		.sleb128 128
 7519 0453 00       		.byte	0
 7520 0454 0F       		.uleb128 0xf
 7521 0455 E0050000 		.4byte	.LASF142
 7522 0459 01       		.byte	0x1
 7523 045a 08       		.byte	0x8
 7524 045b 60       		.byte	0x60
 7525 045c 6E040000 		.4byte	0x46e
 7526 0460 06       		.uleb128 0x6
 7527 0461 C5210000 		.4byte	.LASF143
 7528 0465 20       		.sleb128 32
 7529 0466 06       		.uleb128 0x6
 7530 0467 88120000 		.4byte	.LASF144
 7531 046b 8001     		.sleb128 128
 7532 046d 00       		.byte	0
 7533 046e 0F       		.uleb128 0xf
 7534 046f 14090000 		.4byte	.LASF145
 7535 0473 01       		.byte	0x1
 7536 0474 08       		.byte	0x8
 7537 0475 65       		.byte	0x65
 7538 0476 AB040000 		.4byte	0x4ab
 7539 047a 06       		.uleb128 0x6
 7540 047b E3170000 		.4byte	.LASF146
 7541 047f 03       		.sleb128 3
 7542 0480 06       		.uleb128 0x6
 7543 0481 73210000 		.4byte	.LASF147
 7544 0485 04       		.sleb128 4
 7545 0486 06       		.uleb128 0x6
 7546 0487 C3020000 		.4byte	.LASF148
 7547 048b 05       		.sleb128 5
 7548 048c 06       		.uleb128 0x6
 7549 048d 62080000 		.4byte	.LASF149
 7550 0491 06       		.sleb128 6
 7551 0492 06       		.uleb128 0x6
 7552 0493 50010000 		.4byte	.LASF150
 7553 0497 07       		.sleb128 7
 7554 0498 06       		.uleb128 0x6
 7555 0499 72160000 		.4byte	.LASF151
 7556 049d 08       		.sleb128 8
 7557 049e 06       		.uleb128 0x6
 7558 049f 41070000 		.4byte	.LASF152
 7559 04a3 0A       		.sleb128 10
 7560 04a4 06       		.uleb128 0x6
 7561 04a5 F2030000 		.4byte	.LASF153
 7562 04a9 0B       		.sleb128 11
 7563 04aa 00       		.byte	0
 7564 04ab 0F       		.uleb128 0xf
 7565 04ac 48180000 		.4byte	.LASF154
 7566 04b0 02       		.byte	0x2
 7567 04b1 08       		.byte	0x8
 7568 04b2 83       		.byte	0x83
 7569 04b3 BE050000 		.4byte	0x5be
 7570 04b7 06       		.uleb128 0x6
 7571 04b8 CA050000 		.4byte	.LASF155
 7572 04bc 8002     		.sleb128 256
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 319


 7573 04be 06       		.uleb128 0x6
 7574 04bf 55050000 		.4byte	.LASF156
 7575 04c3 C000     		.sleb128 64
 7576 04c5 06       		.uleb128 0x6
 7577 04c6 D81A0000 		.4byte	.LASF157
 7578 04ca C000     		.sleb128 64
 7579 04cc 06       		.uleb128 0x6
 7580 04cd 661B0000 		.4byte	.LASF158
 7581 04d1 C000     		.sleb128 64
 7582 04d3 06       		.uleb128 0x6
 7583 04d4 D30A0000 		.4byte	.LASF159
 7584 04d8 05       		.sleb128 5
 7585 04d9 06       		.uleb128 0x6
 7586 04da 4D040000 		.4byte	.LASF160
 7587 04de 06       		.sleb128 6
 7588 04df 06       		.uleb128 0x6
 7589 04e0 1B140000 		.4byte	.LASF161
 7590 04e4 0C       		.sleb128 12
 7591 04e5 06       		.uleb128 0x6
 7592 04e6 C4180000 		.4byte	.LASF162
 7593 04ea 8002     		.sleb128 256
 7594 04ec 06       		.uleb128 0x6
 7595 04ed E1140000 		.4byte	.LASF163
 7596 04f1 02       		.sleb128 2
 7597 04f2 06       		.uleb128 0x6
 7598 04f3 D4200000 		.4byte	.LASF164
 7599 04f7 02       		.sleb128 2
 7600 04f8 06       		.uleb128 0x6
 7601 04f9 A2150000 		.4byte	.LASF165
 7602 04fd 02       		.sleb128 2
 7603 04fe 06       		.uleb128 0x6
 7604 04ff D70E0000 		.4byte	.LASF166
 7605 0503 14       		.sleb128 20
 7606 0504 06       		.uleb128 0x6
 7607 0505 F5210000 		.4byte	.LASF167
 7608 0509 08       		.sleb128 8
 7609 050a 06       		.uleb128 0x6
 7610 050b C10E0000 		.4byte	.LASF168
 7611 050f 05       		.sleb128 5
 7612 0510 06       		.uleb128 0x6
 7613 0511 5A190000 		.4byte	.LASF169
 7614 0515 0D       		.sleb128 13
 7615 0516 06       		.uleb128 0x6
 7616 0517 B8170000 		.4byte	.LASF170
 7617 051b 20       		.sleb128 32
 7618 051c 06       		.uleb128 0x6
 7619 051d 3C190000 		.4byte	.LASF171
 7620 0521 0F       		.sleb128 15
 7621 0522 06       		.uleb128 0x6
 7622 0523 A5130000 		.4byte	.LASF172
 7623 0527 8004     		.sleb128 512
 7624 0529 06       		.uleb128 0x6
 7625 052a 9A0D0000 		.4byte	.LASF173
 7626 052e 8002     		.sleb128 256
 7627 0530 06       		.uleb128 0x6
 7628 0531 EA050000 		.4byte	.LASF174
 7629 0535 14       		.sleb128 20
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 320


 7630 0536 06       		.uleb128 0x6
 7631 0537 8D020000 		.4byte	.LASF175
 7632 053b 05       		.sleb128 5
 7633 053c 06       		.uleb128 0x6
 7634 053d B8130000 		.4byte	.LASF176
 7635 0541 05       		.sleb128 5
 7636 0542 06       		.uleb128 0x6
 7637 0543 34140000 		.4byte	.LASF177
 7638 0547 05       		.sleb128 5
 7639 0548 06       		.uleb128 0x6
 7640 0549 29190000 		.4byte	.LASF178
 7641 054d 05       		.sleb128 5
 7642 054e 06       		.uleb128 0x6
 7643 054f 160C0000 		.4byte	.LASF179
 7644 0553 05       		.sleb128 5
 7645 0554 06       		.uleb128 0x6
 7646 0555 C3110000 		.4byte	.LASF180
 7647 0559 05       		.sleb128 5
 7648 055a 06       		.uleb128 0x6
 7649 055b C7010000 		.4byte	.LASF181
 7650 055f C900     		.sleb128 73
 7651 0561 06       		.uleb128 0x6
 7652 0562 71170000 		.4byte	.LASF182
 7653 0566 8504     		.sleb128 517
 7654 0568 06       		.uleb128 0x6
 7655 0569 660A0000 		.4byte	.LASF183
 7656 056d E204     		.sleb128 610
 7657 056f 06       		.uleb128 0x6
 7658 0570 510F0000 		.4byte	.LASF184
 7659 0574 F404     		.sleb128 628
 7660 0576 06       		.uleb128 0x6
 7661 0577 D1150000 		.4byte	.LASF185
 7662 057b 04       		.sleb128 4
 7663 057c 06       		.uleb128 0x6
 7664 057d 280D0000 		.4byte	.LASF186
 7665 0581 10       		.sleb128 16
 7666 0582 06       		.uleb128 0x6
 7667 0583 CE1E0000 		.4byte	.LASF187
 7668 0587 20       		.sleb128 32
 7669 0588 06       		.uleb128 0x6
 7670 0589 BB210000 		.4byte	.LASF188
 7671 058d 23       		.sleb128 35
 7672 058e 06       		.uleb128 0x6
 7673 058f F41F0000 		.4byte	.LASF189
 7674 0593 E200     		.sleb128 98
 7675 0595 06       		.uleb128 0x6
 7676 0596 5B0B0000 		.4byte	.LASF190
 7677 059a 25       		.sleb128 37
 7678 059b 06       		.uleb128 0x6
 7679 059c AA070000 		.4byte	.LASF191
 7680 05a0 3A       		.sleb128 58
 7681 05a1 06       		.uleb128 0x6
 7682 05a2 71130000 		.4byte	.LASF192
 7683 05a6 10       		.sleb128 16
 7684 05a7 06       		.uleb128 0x6
 7685 05a8 030B0000 		.4byte	.LASF193
 7686 05ac 80C000   		.sleb128 8192
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 321


 7687 05af 06       		.uleb128 0x6
 7688 05b0 6A100000 		.4byte	.LASF194
 7689 05b4 9205     		.sleb128 658
 7690 05b6 06       		.uleb128 0x6
 7691 05b7 28050000 		.4byte	.LASF195
 7692 05bb D800     		.sleb128 88
 7693 05bd 00       		.byte	0
 7694 05be 0F       		.uleb128 0xf
 7695 05bf 77000000 		.4byte	.LASF196
 7696 05c3 01       		.byte	0x1
 7697 05c4 08       		.byte	0x8
 7698 05c5 CA       		.byte	0xca
 7699 05c6 19060000 		.4byte	0x619
 7700 05ca 06       		.uleb128 0x6
 7701 05cb 5D0D0000 		.4byte	.LASF197
 7702 05cf 00       		.sleb128 0
 7703 05d0 06       		.uleb128 0x6
 7704 05d1 25170000 		.4byte	.LASF198
 7705 05d5 01       		.sleb128 1
 7706 05d6 06       		.uleb128 0x6
 7707 05d7 660D0000 		.4byte	.LASF199
 7708 05db 02       		.sleb128 2
 7709 05dc 06       		.uleb128 0x6
 7710 05dd 66000000 		.4byte	.LASF200
 7711 05e1 03       		.sleb128 3
 7712 05e2 06       		.uleb128 0x6
 7713 05e3 49020000 		.4byte	.LASF201
 7714 05e7 04       		.sleb128 4
 7715 05e8 06       		.uleb128 0x6
 7716 05e9 DC000000 		.4byte	.LASF202
 7717 05ed 05       		.sleb128 5
 7718 05ee 06       		.uleb128 0x6
 7719 05ef BB1D0000 		.4byte	.LASF203
 7720 05f3 06       		.sleb128 6
 7721 05f4 06       		.uleb128 0x6
 7722 05f5 400F0000 		.4byte	.LASF204
 7723 05f9 07       		.sleb128 7
 7724 05fa 06       		.uleb128 0x6
 7725 05fb A1080000 		.4byte	.LASF205
 7726 05ff 08       		.sleb128 8
 7727 0600 06       		.uleb128 0x6
 7728 0601 31110000 		.4byte	.LASF206
 7729 0605 09       		.sleb128 9
 7730 0606 06       		.uleb128 0x6
 7731 0607 C0030000 		.4byte	.LASF207
 7732 060b 0A       		.sleb128 10
 7733 060c 06       		.uleb128 0x6
 7734 060d 51180000 		.4byte	.LASF208
 7735 0611 0B       		.sleb128 11
 7736 0612 06       		.uleb128 0x6
 7737 0613 AC200000 		.4byte	.LASF209
 7738 0617 0C       		.sleb128 12
 7739 0618 00       		.byte	0
 7740 0619 0F       		.uleb128 0xf
 7741 061a 4C050000 		.4byte	.LASF210
 7742 061e 02       		.byte	0x2
 7743 061f 08       		.byte	0x8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 322


 7744 0620 DB       		.byte	0xdb
 7745 0621 50060000 		.4byte	0x650
 7746 0625 06       		.uleb128 0x6
 7747 0626 460C0000 		.4byte	.LASF211
 7748 062a 8605     		.sleb128 646
 7749 062c 06       		.uleb128 0x6
 7750 062d 2B0F0000 		.4byte	.LASF212
 7751 0631 8905     		.sleb128 649
 7752 0633 06       		.uleb128 0x6
 7753 0634 20170000 		.4byte	.LASF213
 7754 0638 D800     		.sleb128 88
 7755 063a 06       		.uleb128 0x6
 7756 063b D5210000 		.4byte	.LASF214
 7757 063f 9E03     		.sleb128 414
 7758 0641 06       		.uleb128 0x6
 7759 0642 1F010000 		.4byte	.LASF215
 7760 0646 9F03     		.sleb128 415
 7761 0648 06       		.uleb128 0x6
 7762 0649 32130000 		.4byte	.LASF216
 7763 064d A003     		.sleb128 416
 7764 064f 00       		.byte	0
 7765 0650 0F       		.uleb128 0xf
 7766 0651 55170000 		.4byte	.LASF217
 7767 0655 02       		.byte	0x2
 7768 0656 08       		.byte	0x8
 7769 0657 E5       		.byte	0xe5
 7770 0658 6B060000 		.4byte	0x66b
 7771 065c 06       		.uleb128 0x6
 7772 065d 36030000 		.4byte	.LASF218
 7773 0661 C500     		.sleb128 69
 7774 0663 06       		.uleb128 0x6
 7775 0664 B20B0000 		.4byte	.LASF219
 7776 0668 8C05     		.sleb128 652
 7777 066a 00       		.byte	0
 7778 066b 0F       		.uleb128 0xf
 7779 066c D6060000 		.4byte	.LASF220
 7780 0670 02       		.byte	0x2
 7781 0671 08       		.byte	0x8
 7782 0672 EB       		.byte	0xeb
 7783 0673 94060000 		.4byte	0x694
 7784 0677 06       		.uleb128 0x6
 7785 0678 400B0000 		.4byte	.LASF221
 7786 067c 8304     		.sleb128 515
 7787 067e 06       		.uleb128 0x6
 7788 067f 8B0D0000 		.4byte	.LASF222
 7789 0683 8505     		.sleb128 645
 7790 0685 06       		.uleb128 0x6
 7791 0686 DB090000 		.4byte	.LASF223
 7792 068a 9202     		.sleb128 274
 7793 068c 06       		.uleb128 0x6
 7794 068d 8B1C0000 		.4byte	.LASF224
 7795 0691 8604     		.sleb128 518
 7796 0693 00       		.byte	0
 7797 0694 0F       		.uleb128 0xf
 7798 0695 E3120000 		.4byte	.LASF225
 7799 0699 02       		.byte	0x2
 7800 069a 08       		.byte	0x8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 323


 7801 069b FD       		.byte	0xfd
 7802 069c A8060000 		.4byte	0x6a8
 7803 06a0 06       		.uleb128 0x6
 7804 06a1 EA210000 		.4byte	.LASF226
 7805 06a5 9405     		.sleb128 660
 7806 06a7 00       		.byte	0
 7807 06a8 10       		.uleb128 0x10
 7808 06a9 C3190000 		.4byte	.LASF227
 7809 06ad 01       		.byte	0x1
 7810 06ae 08       		.byte	0x8
 7811 06af 0201     		.2byte	0x102
 7812 06b1 03070000 		.4byte	0x703
 7813 06b5 06       		.uleb128 0x6
 7814 06b6 C81B0000 		.4byte	.LASF228
 7815 06ba 8501     		.sleb128 133
 7816 06bc 06       		.uleb128 0x6
 7817 06bd B20C0000 		.4byte	.LASF229
 7818 06c1 8301     		.sleb128 131
 7819 06c3 06       		.uleb128 0x6
 7820 06c4 01180000 		.4byte	.LASF230
 7821 06c8 9101     		.sleb128 145
 7822 06ca 06       		.uleb128 0x6
 7823 06cb A01D0000 		.4byte	.LASF231
 7824 06cf C500     		.sleb128 69
 7825 06d1 06       		.uleb128 0x6
 7826 06d2 DA040000 		.4byte	.LASF232
 7827 06d6 9501     		.sleb128 149
 7828 06d8 06       		.uleb128 0x6
 7829 06d9 C7200000 		.4byte	.LASF233
 7830 06dd 8001     		.sleb128 128
 7831 06df 06       		.uleb128 0x6
 7832 06e0 2F090000 		.4byte	.LASF234
 7833 06e4 9201     		.sleb128 146
 7834 06e6 06       		.uleb128 0x6
 7835 06e7 6C110000 		.4byte	.LASF235
 7836 06eb 8101     		.sleb128 129
 7837 06ed 06       		.uleb128 0x6
 7838 06ee 9D120000 		.4byte	.LASF236
 7839 06f2 A801     		.sleb128 168
 7840 06f4 06       		.uleb128 0x6
 7841 06f5 420E0000 		.4byte	.LASF237
 7842 06f9 9701     		.sleb128 151
 7843 06fb 06       		.uleb128 0x6
 7844 06fc CA1A0000 		.4byte	.LASF238
 7845 0700 9001     		.sleb128 144
 7846 0702 00       		.byte	0
 7847 0703 10       		.uleb128 0x10
 7848 0704 09010000 		.4byte	.LASF239
 7849 0708 01       		.byte	0x1
 7850 0709 08       		.byte	0x8
 7851 070a 1001     		.2byte	0x110
 7852 070c 18070000 		.4byte	0x718
 7853 0710 06       		.uleb128 0x6
 7854 0711 921C0000 		.4byte	.LASF240
 7855 0715 9201     		.sleb128 146
 7856 0717 00       		.byte	0
 7857 0718 10       		.uleb128 0x10
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 324


 7858 0719 5F210000 		.4byte	.LASF241
 7859 071d 01       		.byte	0x1
 7860 071e 08       		.byte	0x8
 7861 071f 1401     		.2byte	0x114
 7862 0721 2D070000 		.4byte	0x72d
 7863 0725 06       		.uleb128 0x6
 7864 0726 60120000 		.4byte	.LASF242
 7865 072a CF00     		.sleb128 79
 7866 072c 00       		.byte	0
 7867 072d 10       		.uleb128 0x10
 7868 072e FA070000 		.4byte	.LASF243
 7869 0732 01       		.byte	0x1
 7870 0733 08       		.byte	0x8
 7871 0734 1801     		.2byte	0x118
 7872 0736 49070000 		.4byte	0x749
 7873 073a 06       		.uleb128 0x6
 7874 073b 12000000 		.4byte	.LASF244
 7875 073f F400     		.sleb128 116
 7876 0741 06       		.uleb128 0x6
 7877 0742 871E0000 		.4byte	.LASF245
 7878 0746 F500     		.sleb128 117
 7879 0748 00       		.byte	0
 7880 0749 10       		.uleb128 0x10
 7881 074a 0C120000 		.4byte	.LASF246
 7882 074e 01       		.byte	0x1
 7883 074f 08       		.byte	0x8
 7884 0750 1D01     		.2byte	0x11d
 7885 0752 73070000 		.4byte	0x773
 7886 0756 06       		.uleb128 0x6
 7887 0757 941D0000 		.4byte	.LASF247
 7888 075b 9701     		.sleb128 151
 7889 075d 06       		.uleb128 0x6
 7890 075e 9E0C0000 		.4byte	.LASF248
 7891 0762 C700     		.sleb128 71
 7892 0764 06       		.uleb128 0x6
 7893 0765 F00F0000 		.4byte	.LASF249
 7894 0769 C800     		.sleb128 72
 7895 076b 06       		.uleb128 0x6
 7896 076c 5F170000 		.4byte	.LASF250
 7897 0770 CF00     		.sleb128 79
 7898 0772 00       		.byte	0
 7899 0773 11       		.uleb128 0x11
 7900 0774 7D0A0000 		.4byte	.LASF251
 7901 0778 08       		.byte	0x8
 7902 0779 4101     		.2byte	0x141
 7903 077b 7F070000 		.4byte	0x77f
 7904 077f 12       		.uleb128 0x12
 7905 0780 7D0A0000 		.4byte	.LASF251
 7906 0784 08       		.byte	0x8
 7907 0785 08       		.byte	0x8
 7908 0786 4301     		.2byte	0x143
 7909 0788 A7070000 		.4byte	0x7a7
 7910 078c 13       		.uleb128 0x13
 7911 078d 8E210000 		.4byte	.LASF252
 7912 0791 08       		.byte	0x8
 7913 0792 4401     		.2byte	0x144
 7914 0794 A7070000 		.4byte	0x7a7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 325


 7915 0798 00       		.byte	0
 7916 0799 13       		.uleb128 0x13
 7917 079a B9090000 		.4byte	.LASF253
 7918 079e 08       		.byte	0x8
 7919 079f 4501     		.2byte	0x145
 7920 07a1 C1000000 		.4byte	0xc1
 7921 07a5 04       		.byte	0x4
 7922 07a6 00       		.byte	0
 7923 07a7 08       		.uleb128 0x8
 7924 07a8 04       		.byte	0x4
 7925 07a9 73070000 		.4byte	0x773
 7926 07ad 11       		.uleb128 0x11
 7927 07ae 6C120000 		.4byte	.LASF254
 7928 07b2 08       		.byte	0x8
 7929 07b3 4901     		.2byte	0x149
 7930 07b5 B9070000 		.4byte	0x7b9
 7931 07b9 12       		.uleb128 0x12
 7932 07ba 6C120000 		.4byte	.LASF254
 7933 07be 10       		.byte	0x10
 7934 07bf 08       		.byte	0x8
 7935 07c0 4B01     		.2byte	0x14b
 7936 07c2 FB070000 		.4byte	0x7fb
 7937 07c6 13       		.uleb128 0x13
 7938 07c7 8E210000 		.4byte	.LASF252
 7939 07cb 08       		.byte	0x8
 7940 07cc 4C01     		.2byte	0x14c
 7941 07ce FB070000 		.4byte	0x7fb
 7942 07d2 00       		.byte	0
 7943 07d3 13       		.uleb128 0x13
 7944 07d4 B9090000 		.4byte	.LASF253
 7945 07d8 08       		.byte	0x8
 7946 07d9 4D01     		.2byte	0x14d
 7947 07db C1000000 		.4byte	0xc1
 7948 07df 04       		.byte	0x4
 7949 07e0 13       		.uleb128 0x13
 7950 07e1 6A130000 		.4byte	.LASF255
 7951 07e5 08       		.byte	0x8
 7952 07e6 4E01     		.2byte	0x14e
 7953 07e8 25000000 		.4byte	0x25
 7954 07ec 08       		.byte	0x8
 7955 07ed 13       		.uleb128 0x13
 7956 07ee 51030000 		.4byte	.LASF256
 7957 07f2 08       		.byte	0x8
 7958 07f3 4F01     		.2byte	0x14f
 7959 07f5 2C000000 		.4byte	0x2c
 7960 07f9 0C       		.byte	0xc
 7961 07fa 00       		.byte	0
 7962 07fb 08       		.uleb128 0x8
 7963 07fc 04       		.byte	0x4
 7964 07fd AD070000 		.4byte	0x7ad
 7965 0801 11       		.uleb128 0x11
 7966 0802 8E080000 		.4byte	.LASF257
 7967 0806 08       		.byte	0x8
 7968 0807 6E01     		.2byte	0x16e
 7969 0809 0D080000 		.4byte	0x80d
 7970 080d 14       		.uleb128 0x14
 7971 080e 8E080000 		.4byte	.LASF257
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 326


 7972 0812 1003     		.2byte	0x310
 7973 0814 08       		.byte	0x8
 7974 0815 7601     		.2byte	0x176
 7975 0817 ED0A0000 		.4byte	0xaed
 7976 081b 13       		.uleb128 0x13
 7977 081c 68160000 		.4byte	.LASF258
 7978 0820 08       		.byte	0x8
 7979 0821 7701     		.2byte	0x177
 7980 0823 890B0000 		.4byte	0xb89
 7981 0827 00       		.byte	0
 7982 0828 13       		.uleb128 0x13
 7983 0829 66200000 		.4byte	.LASF259
 7984 082d 08       		.byte	0x8
 7985 082e 7801     		.2byte	0x178
 7986 0830 50000000 		.4byte	0x50
 7987 0834 04       		.byte	0x4
 7988 0835 13       		.uleb128 0x13
 7989 0836 051C0000 		.4byte	.LASF260
 7990 083a 08       		.byte	0x8
 7991 083b 7901     		.2byte	0x179
 7992 083d 25000000 		.4byte	0x25
 7993 0841 08       		.byte	0x8
 7994 0842 13       		.uleb128 0x13
 7995 0843 E41A0000 		.4byte	.LASF261
 7996 0847 08       		.byte	0x8
 7997 0848 7A01     		.2byte	0x17a
 7998 084a 50000000 		.4byte	0x50
 7999 084e 0C       		.byte	0xc
 8000 084f 13       		.uleb128 0x13
 8001 0850 78030000 		.4byte	.LASF262
 8002 0854 08       		.byte	0x8
 8003 0855 7B01     		.2byte	0x17b
 8004 0857 50000000 		.4byte	0x50
 8005 085b 10       		.byte	0x10
 8006 085c 13       		.uleb128 0x13
 8007 085d 22210000 		.4byte	.LASF263
 8008 0861 08       		.byte	0x8
 8009 0862 7C01     		.2byte	0x17c
 8010 0864 50000000 		.4byte	0x50
 8011 0868 14       		.byte	0x14
 8012 0869 13       		.uleb128 0x13
 8013 086a 17080000 		.4byte	.LASF264
 8014 086e 08       		.byte	0x8
 8015 086f 7D01     		.2byte	0x17d
 8016 0871 50000000 		.4byte	0x50
 8017 0875 18       		.byte	0x18
 8018 0876 13       		.uleb128 0x13
 8019 0877 050D0000 		.4byte	.LASF265
 8020 087b 08       		.byte	0x8
 8021 087c 7E01     		.2byte	0x17e
 8022 087e 50000000 		.4byte	0x50
 8023 0882 1C       		.byte	0x1c
 8024 0883 13       		.uleb128 0x13
 8025 0884 99190000 		.4byte	.LASF266
 8026 0888 08       		.byte	0x8
 8027 0889 7F01     		.2byte	0x17f
 8028 088b 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 327


 8029 088f 20       		.byte	0x20
 8030 0890 13       		.uleb128 0x13
 8031 0891 761F0000 		.4byte	.LASF267
 8032 0895 08       		.byte	0x8
 8033 0896 8001     		.2byte	0x180
 8034 0898 A7070000 		.4byte	0x7a7
 8035 089c 24       		.byte	0x24
 8036 089d 13       		.uleb128 0x13
 8037 089e 33000000 		.4byte	.LASF268
 8038 08a2 08       		.byte	0x8
 8039 08a3 8201     		.2byte	0x182
 8040 08a5 A7070000 		.4byte	0x7a7
 8041 08a9 28       		.byte	0x28
 8042 08aa 13       		.uleb128 0x13
 8043 08ab B8010000 		.4byte	.LASF269
 8044 08af 08       		.byte	0x8
 8045 08b0 8301     		.2byte	0x183
 8046 08b2 FB070000 		.4byte	0x7fb
 8047 08b6 2C       		.byte	0x2c
 8048 08b7 13       		.uleb128 0x13
 8049 08b8 591D0000 		.4byte	.LASF270
 8050 08bc 08       		.byte	0x8
 8051 08bd 8401     		.2byte	0x184
 8052 08bf FB070000 		.4byte	0x7fb
 8053 08c3 30       		.byte	0x30
 8054 08c4 13       		.uleb128 0x13
 8055 08c5 3B210000 		.4byte	.LASF271
 8056 08c9 08       		.byte	0x8
 8057 08ca 8601     		.2byte	0x186
 8058 08cc 8F0B0000 		.4byte	0xb8f
 8059 08d0 34       		.byte	0x34
 8060 08d1 13       		.uleb128 0x13
 8061 08d2 47210000 		.4byte	.LASF272
 8062 08d6 08       		.byte	0x8
 8063 08d7 8701     		.2byte	0x187
 8064 08d9 8F0B0000 		.4byte	0xb8f
 8065 08dd 48       		.byte	0x48
 8066 08de 13       		.uleb128 0x13
 8067 08df E11D0000 		.4byte	.LASF273
 8068 08e3 08       		.byte	0x8
 8069 08e4 8B01     		.2byte	0x18b
 8070 08e6 890B0000 		.4byte	0xb89
 8071 08ea 5C       		.byte	0x5c
 8072 08eb 13       		.uleb128 0x13
 8073 08ec 741C0000 		.4byte	.LASF274
 8074 08f0 08       		.byte	0x8
 8075 08f1 8C01     		.2byte	0x18c
 8076 08f3 C1000000 		.4byte	0xc1
 8077 08f7 60       		.byte	0x60
 8078 08f8 13       		.uleb128 0x13
 8079 08f9 F0010000 		.4byte	.LASF275
 8080 08fd 08       		.byte	0x8
 8081 08fe 8D01     		.2byte	0x18d
 8082 0900 25000000 		.4byte	0x25
 8083 0904 64       		.byte	0x64
 8084 0905 13       		.uleb128 0x13
 8085 0906 321B0000 		.4byte	.LASF276
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 328


 8086 090a 08       		.byte	0x8
 8087 090b 8E01     		.2byte	0x18e
 8088 090d C7000000 		.4byte	0xc7
 8089 0911 68       		.byte	0x68
 8090 0912 13       		.uleb128 0x13
 8091 0913 10170000 		.4byte	.LASF277
 8092 0917 08       		.byte	0x8
 8093 0918 8F01     		.2byte	0x18f
 8094 091a 25000000 		.4byte	0x25
 8095 091e 6C       		.byte	0x6c
 8096 091f 13       		.uleb128 0x13
 8097 0920 BA070000 		.4byte	.LASF278
 8098 0924 08       		.byte	0x8
 8099 0925 9001     		.2byte	0x190
 8100 0927 9F0B0000 		.4byte	0xb9f
 8101 092b 70       		.byte	0x70
 8102 092c 15       		.uleb128 0x15
 8103 092d 731B0000 		.4byte	.LASF279
 8104 0931 08       		.byte	0x8
 8105 0932 9101     		.2byte	0x191
 8106 0934 9F0B0000 		.4byte	0xb9f
 8107 0938 7001     		.2byte	0x170
 8108 093a 15       		.uleb128 0x15
 8109 093b A8160000 		.4byte	.LASF280
 8110 093f 08       		.byte	0x8
 8111 0940 9201     		.2byte	0x192
 8112 0942 25000000 		.4byte	0x25
 8113 0946 7002     		.2byte	0x270
 8114 0948 15       		.uleb128 0x15
 8115 0949 760A0000 		.4byte	.LASF281
 8116 094d 08       		.byte	0x8
 8117 094e 9301     		.2byte	0x193
 8118 0950 890B0000 		.4byte	0xb89
 8119 0954 7402     		.2byte	0x274
 8120 0956 15       		.uleb128 0x15
 8121 0957 9D110000 		.4byte	.LASF282
 8122 095b 08       		.byte	0x8
 8123 095c 9401     		.2byte	0x194
 8124 095e 50000000 		.4byte	0x50
 8125 0962 7802     		.2byte	0x278
 8126 0964 15       		.uleb128 0x15
 8127 0965 540E0000 		.4byte	.LASF283
 8128 0969 08       		.byte	0x8
 8129 096a 9501     		.2byte	0x195
 8130 096c 50000000 		.4byte	0x50
 8131 0970 7C02     		.2byte	0x27c
 8132 0972 15       		.uleb128 0x15
 8133 0973 BA060000 		.4byte	.LASF284
 8134 0977 08       		.byte	0x8
 8135 0978 9601     		.2byte	0x196
 8136 097a B9000000 		.4byte	0xb9
 8137 097e 8002     		.2byte	0x280
 8138 0980 15       		.uleb128 0x15
 8139 0981 810F0000 		.4byte	.LASF285
 8140 0985 08       		.byte	0x8
 8141 0986 9701     		.2byte	0x197
 8142 0988 AF0B0000 		.4byte	0xbaf
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 329


 8143 098c 8402     		.2byte	0x284
 8144 098e 15       		.uleb128 0x15
 8145 098f 0D050000 		.4byte	.LASF286
 8146 0993 08       		.byte	0x8
 8147 0994 9801     		.2byte	0x198
 8148 0996 25000000 		.4byte	0x25
 8149 099a A402     		.2byte	0x2a4
 8150 099c 15       		.uleb128 0x15
 8151 099d 07000000 		.4byte	.LASF287
 8152 09a1 08       		.byte	0x8
 8153 09a2 9901     		.2byte	0x199
 8154 09a4 890B0000 		.4byte	0xb89
 8155 09a8 A802     		.2byte	0x2a8
 8156 09aa 15       		.uleb128 0x15
 8157 09ab ED090000 		.4byte	.LASF288
 8158 09af 08       		.byte	0x8
 8159 09b0 9A01     		.2byte	0x19a
 8160 09b2 25000000 		.4byte	0x25
 8161 09b6 AC02     		.2byte	0x2ac
 8162 09b8 15       		.uleb128 0x15
 8163 09b9 CB0F0000 		.4byte	.LASF289
 8164 09bd 08       		.byte	0x8
 8165 09be 9B01     		.2byte	0x19b
 8166 09c0 50000000 		.4byte	0x50
 8167 09c4 B002     		.2byte	0x2b0
 8168 09c6 15       		.uleb128 0x15
 8169 09c7 BF0F0000 		.4byte	.LASF290
 8170 09cb 08       		.byte	0x8
 8171 09cc 9C01     		.2byte	0x19c
 8172 09ce 890B0000 		.4byte	0xb89
 8173 09d2 B402     		.2byte	0x2b4
 8174 09d4 15       		.uleb128 0x15
 8175 09d5 D90A0000 		.4byte	.LASF291
 8176 09d9 08       		.byte	0x8
 8177 09da 9D01     		.2byte	0x19d
 8178 09dc 25000000 		.4byte	0x25
 8179 09e0 B802     		.2byte	0x2b8
 8180 09e2 15       		.uleb128 0x15
 8181 09e3 E51E0000 		.4byte	.LASF292
 8182 09e7 08       		.byte	0x8
 8183 09e8 9E01     		.2byte	0x19e
 8184 09ea 890B0000 		.4byte	0xb89
 8185 09ee BC02     		.2byte	0x2bc
 8186 09f0 15       		.uleb128 0x15
 8187 09f1 7B0B0000 		.4byte	.LASF293
 8188 09f5 08       		.byte	0x8
 8189 09f6 9F01     		.2byte	0x19f
 8190 09f8 25000000 		.4byte	0x25
 8191 09fc C002     		.2byte	0x2c0
 8192 09fe 15       		.uleb128 0x15
 8193 09ff 9E0E0000 		.4byte	.LASF294
 8194 0a03 08       		.byte	0x8
 8195 0a04 A001     		.2byte	0x1a0
 8196 0a06 8F0B0000 		.4byte	0xb8f
 8197 0a0a C402     		.2byte	0x2c4
 8198 0a0c 15       		.uleb128 0x15
 8199 0a0d 181D0000 		.4byte	.LASF295
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 330


 8200 0a11 08       		.byte	0x8
 8201 0a12 A101     		.2byte	0x1a1
 8202 0a14 2C000000 		.4byte	0x2c
 8203 0a18 D802     		.2byte	0x2d8
 8204 0a1a 15       		.uleb128 0x15
 8205 0a1b CA0E0000 		.4byte	.LASF296
 8206 0a1f 08       		.byte	0x8
 8207 0a20 A201     		.2byte	0x1a2
 8208 0a22 8F0B0000 		.4byte	0xb8f
 8209 0a26 D902     		.2byte	0x2d9
 8210 0a28 15       		.uleb128 0x15
 8211 0a29 F4000000 		.4byte	.LASF297
 8212 0a2d 08       		.byte	0x8
 8213 0a2e A301     		.2byte	0x1a3
 8214 0a30 2C000000 		.4byte	0x2c
 8215 0a34 ED02     		.2byte	0x2ed
 8216 0a36 15       		.uleb128 0x15
 8217 0a37 5B1A0000 		.4byte	.LASF298
 8218 0a3b 08       		.byte	0x8
 8219 0a3c A501     		.2byte	0x1a5
 8220 0a3e 2C000000 		.4byte	0x2c
 8221 0a42 EE02     		.2byte	0x2ee
 8222 0a44 15       		.uleb128 0x15
 8223 0a45 2C110000 		.4byte	.LASF299
 8224 0a49 08       		.byte	0x8
 8225 0a4a A701     		.2byte	0x1a7
 8226 0a4c 2C000000 		.4byte	0x2c
 8227 0a50 EF02     		.2byte	0x2ef
 8228 0a52 15       		.uleb128 0x15
 8229 0a53 D6130000 		.4byte	.LASF300
 8230 0a57 08       		.byte	0x8
 8231 0a58 A801     		.2byte	0x1a8
 8232 0a5a 2C000000 		.4byte	0x2c
 8233 0a5e F002     		.2byte	0x2f0
 8234 0a60 15       		.uleb128 0x15
 8235 0a61 0E0A0000 		.4byte	.LASF301
 8236 0a65 08       		.byte	0x8
 8237 0a66 A901     		.2byte	0x1a9
 8238 0a68 2C000000 		.4byte	0x2c
 8239 0a6c F102     		.2byte	0x2f1
 8240 0a6e 15       		.uleb128 0x15
 8241 0a6f 22220000 		.4byte	.LASF302
 8242 0a73 08       		.byte	0x8
 8243 0a74 AA01     		.2byte	0x1aa
 8244 0a76 3E000000 		.4byte	0x3e
 8245 0a7a F202     		.2byte	0x2f2
 8246 0a7c 15       		.uleb128 0x15
 8247 0a7d 02130000 		.4byte	.LASF303
 8248 0a81 08       		.byte	0x8
 8249 0a82 AB01     		.2byte	0x1ab
 8250 0a84 2C000000 		.4byte	0x2c
 8251 0a88 F402     		.2byte	0x2f4
 8252 0a8a 15       		.uleb128 0x15
 8253 0a8b B4020000 		.4byte	.LASF304
 8254 0a8f 08       		.byte	0x8
 8255 0a90 AC01     		.2byte	0x1ac
 8256 0a92 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 331


 8257 0a96 F502     		.2byte	0x2f5
 8258 0a98 15       		.uleb128 0x15
 8259 0a99 5F130000 		.4byte	.LASF305
 8260 0a9d 08       		.byte	0x8
 8261 0a9e C601     		.2byte	0x1c6
 8262 0aa0 890B0000 		.4byte	0xb89
 8263 0aa4 F802     		.2byte	0x2f8
 8264 0aa6 15       		.uleb128 0x15
 8265 0aa7 7F020000 		.4byte	.LASF306
 8266 0aab 08       		.byte	0x8
 8267 0aac C701     		.2byte	0x1c7
 8268 0aae 25000000 		.4byte	0x25
 8269 0ab2 FC02     		.2byte	0x2fc
 8270 0ab4 15       		.uleb128 0x15
 8271 0ab5 E4130000 		.4byte	.LASF307
 8272 0ab9 08       		.byte	0x8
 8273 0aba C801     		.2byte	0x1c8
 8274 0abc 890B0000 		.4byte	0xb89
 8275 0ac0 0003     		.2byte	0x300
 8276 0ac2 15       		.uleb128 0x15
 8277 0ac3 E90C0000 		.4byte	.LASF308
 8278 0ac7 08       		.byte	0x8
 8279 0ac8 C901     		.2byte	0x1c9
 8280 0aca 25000000 		.4byte	0x25
 8281 0ace 0403     		.2byte	0x304
 8282 0ad0 15       		.uleb128 0x15
 8283 0ad1 BB1E0000 		.4byte	.LASF309
 8284 0ad5 08       		.byte	0x8
 8285 0ad6 CF01     		.2byte	0x1cf
 8286 0ad8 890B0000 		.4byte	0xb89
 8287 0adc 0803     		.2byte	0x308
 8288 0ade 15       		.uleb128 0x15
 8289 0adf 03040000 		.4byte	.LASF310
 8290 0ae3 08       		.byte	0x8
 8291 0ae4 D001     		.2byte	0x1d0
 8292 0ae6 25000000 		.4byte	0x25
 8293 0aea 0C03     		.2byte	0x30c
 8294 0aec 00       		.byte	0
 8295 0aed 11       		.uleb128 0x11
 8296 0aee 7C100000 		.4byte	.LASF311
 8297 0af2 08       		.byte	0x8
 8298 0af3 7001     		.2byte	0x170
 8299 0af5 F90A0000 		.4byte	0xaf9
 8300 0af9 12       		.uleb128 0x12
 8301 0afa 7C100000 		.4byte	.LASF311
 8302 0afe 38       		.byte	0x38
 8303 0aff 08       		.byte	0x8
 8304 0b00 1C02     		.2byte	0x21c
 8305 0b02 890B0000 		.4byte	0xb89
 8306 0b06 13       		.uleb128 0x13
 8307 0b07 66200000 		.4byte	.LASF259
 8308 0b0b 08       		.byte	0x8
 8309 0b0c 1D02     		.2byte	0x21d
 8310 0b0e 50000000 		.4byte	0x50
 8311 0b12 00       		.byte	0
 8312 0b13 13       		.uleb128 0x13
 8313 0b14 050D0000 		.4byte	.LASF265
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 332


 8314 0b18 08       		.byte	0x8
 8315 0b19 1E02     		.2byte	0x21e
 8316 0b1b 50000000 		.4byte	0x50
 8317 0b1f 04       		.byte	0x4
 8318 0b20 13       		.uleb128 0x13
 8319 0b21 A80A0000 		.4byte	.LASF312
 8320 0b25 08       		.byte	0x8
 8321 0b26 1F02     		.2byte	0x21f
 8322 0b28 3E000000 		.4byte	0x3e
 8323 0b2c 08       		.byte	0x8
 8324 0b2d 13       		.uleb128 0x13
 8325 0b2e 68160000 		.4byte	.LASF258
 8326 0b32 08       		.byte	0x8
 8327 0b33 2002     		.2byte	0x220
 8328 0b35 890B0000 		.4byte	0xb89
 8329 0b39 0C       		.byte	0xc
 8330 0b3a 13       		.uleb128 0x13
 8331 0b3b 411A0000 		.4byte	.LASF313
 8332 0b3f 08       		.byte	0x8
 8333 0b40 2102     		.2byte	0x221
 8334 0b42 25000000 		.4byte	0x25
 8335 0b46 10       		.byte	0x10
 8336 0b47 13       		.uleb128 0x13
 8337 0b48 B9090000 		.4byte	.LASF253
 8338 0b4c 08       		.byte	0x8
 8339 0b4d 2202     		.2byte	0x222
 8340 0b4f C1000000 		.4byte	0xc1
 8341 0b53 14       		.byte	0x14
 8342 0b54 13       		.uleb128 0x13
 8343 0b55 B8010000 		.4byte	.LASF269
 8344 0b59 08       		.byte	0x8
 8345 0b5a 2402     		.2byte	0x224
 8346 0b5c FB070000 		.4byte	0x7fb
 8347 0b60 18       		.byte	0x18
 8348 0b61 13       		.uleb128 0x13
 8349 0b62 591D0000 		.4byte	.LASF270
 8350 0b66 08       		.byte	0x8
 8351 0b67 2502     		.2byte	0x225
 8352 0b69 FB070000 		.4byte	0x7fb
 8353 0b6d 1C       		.byte	0x1c
 8354 0b6e 13       		.uleb128 0x13
 8355 0b6f 240A0000 		.4byte	.LASF314
 8356 0b73 08       		.byte	0x8
 8357 0b74 2702     		.2byte	0x227
 8358 0b76 8F0B0000 		.4byte	0xb8f
 8359 0b7a 20       		.byte	0x20
 8360 0b7b 13       		.uleb128 0x13
 8361 0b7c 8E210000 		.4byte	.LASF252
 8362 0b80 08       		.byte	0x8
 8363 0b81 2D02     		.2byte	0x22d
 8364 0b83 BF0B0000 		.4byte	0xbbf
 8365 0b87 34       		.byte	0x34
 8366 0b88 00       		.byte	0
 8367 0b89 08       		.uleb128 0x8
 8368 0b8a 04       		.byte	0x4
 8369 0b8b 2C000000 		.4byte	0x2c
 8370 0b8f 16       		.uleb128 0x16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 333


 8371 0b90 2C000000 		.4byte	0x2c
 8372 0b94 9F0B0000 		.4byte	0xb9f
 8373 0b98 17       		.uleb128 0x17
 8374 0b99 B2000000 		.4byte	0xb2
 8375 0b9d 13       		.byte	0x13
 8376 0b9e 00       		.byte	0
 8377 0b9f 16       		.uleb128 0x16
 8378 0ba0 C7000000 		.4byte	0xc7
 8379 0ba4 AF0B0000 		.4byte	0xbaf
 8380 0ba8 17       		.uleb128 0x17
 8381 0ba9 B2000000 		.4byte	0xb2
 8382 0bad FF       		.byte	0xff
 8383 0bae 00       		.byte	0
 8384 0baf 16       		.uleb128 0x16
 8385 0bb0 2C000000 		.4byte	0x2c
 8386 0bb4 BF0B0000 		.4byte	0xbbf
 8387 0bb8 17       		.uleb128 0x17
 8388 0bb9 B2000000 		.4byte	0xb2
 8389 0bbd 1F       		.byte	0x1f
 8390 0bbe 00       		.byte	0
 8391 0bbf 08       		.uleb128 0x8
 8392 0bc0 04       		.byte	0x4
 8393 0bc1 ED0A0000 		.4byte	0xaed
 8394 0bc5 05       		.uleb128 0x5
 8395 0bc6 01       		.byte	0x1
 8396 0bc7 09       		.byte	0x9
 8397 0bc8 44       		.byte	0x44
 8398 0bc9 060C0000 		.4byte	0xc06
 8399 0bcd 06       		.uleb128 0x6
 8400 0bce 460A0000 		.4byte	.LASF315
 8401 0bd2 0E       		.sleb128 14
 8402 0bd3 06       		.uleb128 0x6
 8403 0bd4 F3180000 		.4byte	.LASF316
 8404 0bd8 36       		.sleb128 54
 8405 0bd9 06       		.uleb128 0x6
 8406 0bda BF080000 		.4byte	.LASF317
 8407 0bde DC00     		.sleb128 92
 8408 0be0 0E       		.uleb128 0xe
 8409 0be1 4D443500 		.ascii	"MD5\000"
 8410 0be5 00       		.sleb128 0
 8411 0be6 06       		.uleb128 0x6
 8412 0be7 06060000 		.4byte	.LASF318
 8413 0beb 04       		.sleb128 4
 8414 0bec 06       		.uleb128 0x6
 8415 0bed 00000000 		.4byte	.LASF319
 8416 0bf1 05       		.sleb128 5
 8417 0bf2 06       		.uleb128 0x6
 8418 0bf3 ED160000 		.4byte	.LASF320
 8419 0bf7 07       		.sleb128 7
 8420 0bf8 06       		.uleb128 0x6
 8421 0bf9 2B1F0000 		.4byte	.LASF321
 8422 0bfd 20       		.sleb128 32
 8423 0bfe 06       		.uleb128 0x6
 8424 0bff C30B0000 		.4byte	.LASF322
 8425 0c03 C000     		.sleb128 64
 8426 0c05 00       		.byte	0
 8427 0c06 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 334


 8428 0c07 02       		.byte	0x2
 8429 0c08 0A       		.byte	0xa
 8430 0c09 27       		.byte	0x27
 8431 0c0a 1F0F0000 		.4byte	0xf1f
 8432 0c0e 06       		.uleb128 0x6
 8433 0c0f 930C0000 		.4byte	.LASF323
 8434 0c13 9C7F     		.sleb128 -100
 8435 0c15 06       		.uleb128 0x6
 8436 0c16 B80B0000 		.4byte	.LASF324
 8437 0c1a 9B7F     		.sleb128 -101
 8438 0c1c 06       		.uleb128 0x6
 8439 0c1d 0B220000 		.4byte	.LASF325
 8440 0c21 9A7F     		.sleb128 -102
 8441 0c23 06       		.uleb128 0x6
 8442 0c24 06200000 		.4byte	.LASF326
 8443 0c28 997F     		.sleb128 -103
 8444 0c2a 06       		.uleb128 0x6
 8445 0c2b B1180000 		.4byte	.LASF327
 8446 0c2f 987F     		.sleb128 -104
 8447 0c31 06       		.uleb128 0x6
 8448 0c32 CF090000 		.4byte	.LASF328
 8449 0c36 977F     		.sleb128 -105
 8450 0c38 06       		.uleb128 0x6
 8451 0c39 D0000000 		.4byte	.LASF329
 8452 0c3d 967F     		.sleb128 -106
 8453 0c3f 06       		.uleb128 0x6
 8454 0c40 151E0000 		.4byte	.LASF330
 8455 0c44 927F     		.sleb128 -110
 8456 0c46 06       		.uleb128 0x6
 8457 0c47 47030000 		.4byte	.LASF331
 8458 0c4b 917F     		.sleb128 -111
 8459 0c4d 06       		.uleb128 0x6
 8460 0c4e 491A0000 		.4byte	.LASF332
 8461 0c52 907F     		.sleb128 -112
 8462 0c54 06       		.uleb128 0x6
 8463 0c55 8B0C0000 		.4byte	.LASF333
 8464 0c59 8F7F     		.sleb128 -113
 8465 0c5b 06       		.uleb128 0x6
 8466 0c5c 9C130000 		.4byte	.LASF334
 8467 0c60 8E7F     		.sleb128 -114
 8468 0c62 06       		.uleb128 0x6
 8469 0c63 2F060000 		.4byte	.LASF335
 8470 0c67 8D7F     		.sleb128 -115
 8471 0c69 06       		.uleb128 0x6
 8472 0c6a BA110000 		.4byte	.LASF336
 8473 0c6e 8C7F     		.sleb128 -116
 8474 0c70 06       		.uleb128 0x6
 8475 0c71 B90D0000 		.4byte	.LASF337
 8476 0c75 8B7F     		.sleb128 -117
 8477 0c77 06       		.uleb128 0x6
 8478 0c78 F00D0000 		.4byte	.LASF338
 8479 0c7c 8A7F     		.sleb128 -118
 8480 0c7e 06       		.uleb128 0x6
 8481 0c7f B41C0000 		.4byte	.LASF339
 8482 0c83 897F     		.sleb128 -119
 8483 0c85 06       		.uleb128 0x6
 8484 0c86 041D0000 		.4byte	.LASF340
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 335


 8485 0c8a 887F     		.sleb128 -120
 8486 0c8c 06       		.uleb128 0x6
 8487 0c8d 18100000 		.4byte	.LASF341
 8488 0c91 877F     		.sleb128 -121
 8489 0c93 06       		.uleb128 0x6
 8490 0c94 AA190000 		.4byte	.LASF342
 8491 0c98 837F     		.sleb128 -125
 8492 0c9a 06       		.uleb128 0x6
 8493 0c9b EF140000 		.4byte	.LASF343
 8494 0c9f FE7E     		.sleb128 -130
 8495 0ca1 06       		.uleb128 0x6
 8496 0ca2 8B070000 		.4byte	.LASF344
 8497 0ca6 FD7E     		.sleb128 -131
 8498 0ca8 06       		.uleb128 0x6
 8499 0ca9 2D170000 		.4byte	.LASF345
 8500 0cad FC7E     		.sleb128 -132
 8501 0caf 06       		.uleb128 0x6
 8502 0cb0 991E0000 		.4byte	.LASF346
 8503 0cb4 FB7E     		.sleb128 -133
 8504 0cb6 06       		.uleb128 0x6
 8505 0cb7 B3030000 		.4byte	.LASF347
 8506 0cbb FA7E     		.sleb128 -134
 8507 0cbd 06       		.uleb128 0x6
 8508 0cbe D2190000 		.4byte	.LASF348
 8509 0cc2 F97E     		.sleb128 -135
 8510 0cc4 06       		.uleb128 0x6
 8511 0cc5 C7150000 		.4byte	.LASF349
 8512 0cc9 F87E     		.sleb128 -136
 8513 0ccb 06       		.uleb128 0x6
 8514 0ccc 970B0000 		.4byte	.LASF350
 8515 0cd0 F77E     		.sleb128 -137
 8516 0cd2 06       		.uleb128 0x6
 8517 0cd3 12070000 		.4byte	.LASF351
 8518 0cd7 F67E     		.sleb128 -138
 8519 0cd9 06       		.uleb128 0x6
 8520 0cda 7E0C0000 		.4byte	.LASF352
 8521 0cde F57E     		.sleb128 -139
 8522 0ce0 06       		.uleb128 0x6
 8523 0ce1 941B0000 		.4byte	.LASF353
 8524 0ce5 F47E     		.sleb128 -140
 8525 0ce7 06       		.uleb128 0x6
 8526 0ce8 25000000 		.4byte	.LASF354
 8527 0cec F37E     		.sleb128 -141
 8528 0cee 06       		.uleb128 0x6
 8529 0cef E6200000 		.4byte	.LASF355
 8530 0cf3 F27E     		.sleb128 -142
 8531 0cf5 06       		.uleb128 0x6
 8532 0cf6 8C010000 		.4byte	.LASF356
 8533 0cfa F17E     		.sleb128 -143
 8534 0cfc 06       		.uleb128 0x6
 8535 0cfd C1070000 		.4byte	.LASF357
 8536 0d01 F07E     		.sleb128 -144
 8537 0d03 06       		.uleb128 0x6
 8538 0d04 03070000 		.4byte	.LASF358
 8539 0d08 EF7E     		.sleb128 -145
 8540 0d0a 06       		.uleb128 0x6
 8541 0d0b 27040000 		.4byte	.LASF359
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 336


 8542 0d0f EE7E     		.sleb128 -146
 8543 0d11 06       		.uleb128 0x6
 8544 0d12 04020000 		.4byte	.LASF360
 8545 0d16 ED7E     		.sleb128 -147
 8546 0d18 06       		.uleb128 0x6
 8547 0d19 4D130000 		.4byte	.LASF361
 8548 0d1d EC7E     		.sleb128 -148
 8549 0d1f 06       		.uleb128 0x6
 8550 0d20 97170000 		.4byte	.LASF362
 8551 0d24 EB7E     		.sleb128 -149
 8552 0d26 06       		.uleb128 0x6
 8553 0d27 98070000 		.4byte	.LASF363
 8554 0d2b EA7E     		.sleb128 -150
 8555 0d2d 06       		.uleb128 0x6
 8556 0d2e F8160000 		.4byte	.LASF364
 8557 0d32 E97E     		.sleb128 -151
 8558 0d34 06       		.uleb128 0x6
 8559 0d35 AA010000 		.4byte	.LASF365
 8560 0d39 E87E     		.sleb128 -152
 8561 0d3b 06       		.uleb128 0x6
 8562 0d3c AC1A0000 		.4byte	.LASF366
 8563 0d40 E77E     		.sleb128 -153
 8564 0d42 06       		.uleb128 0x6
 8565 0d43 931A0000 		.4byte	.LASF367
 8566 0d47 E67E     		.sleb128 -154
 8567 0d49 06       		.uleb128 0x6
 8568 0d4a A7090000 		.4byte	.LASF368
 8569 0d4e E57E     		.sleb128 -155
 8570 0d50 06       		.uleb128 0x6
 8571 0d51 C4080000 		.4byte	.LASF369
 8572 0d55 E47E     		.sleb128 -156
 8573 0d57 06       		.uleb128 0x6
 8574 0d58 301E0000 		.4byte	.LASF370
 8575 0d5c E37E     		.sleb128 -157
 8576 0d5e 06       		.uleb128 0x6
 8577 0d5f 6B030000 		.4byte	.LASF371
 8578 0d63 E27E     		.sleb128 -158
 8579 0d65 06       		.uleb128 0x6
 8580 0d66 2C210000 		.4byte	.LASF372
 8581 0d6a E17E     		.sleb128 -159
 8582 0d6c 06       		.uleb128 0x6
 8583 0d6d B0080000 		.4byte	.LASF373
 8584 0d71 E07E     		.sleb128 -160
 8585 0d73 06       		.uleb128 0x6
 8586 0d74 45140000 		.4byte	.LASF374
 8587 0d78 D67E     		.sleb128 -170
 8588 0d7a 06       		.uleb128 0x6
 8589 0d7b 80210000 		.4byte	.LASF375
 8590 0d7f D57E     		.sleb128 -171
 8591 0d81 06       		.uleb128 0x6
 8592 0d82 3C160000 		.4byte	.LASF376
 8593 0d86 D47E     		.sleb128 -172
 8594 0d88 06       		.uleb128 0x6
 8595 0d89 030C0000 		.4byte	.LASF377
 8596 0d8d D37E     		.sleb128 -173
 8597 0d8f 06       		.uleb128 0x6
 8598 0d90 59180000 		.4byte	.LASF378
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 337


 8599 0d94 D27E     		.sleb128 -174
 8600 0d96 06       		.uleb128 0x6
 8601 0d97 1C1F0000 		.4byte	.LASF379
 8602 0d9b D17E     		.sleb128 -175
 8603 0d9d 06       		.uleb128 0x6
 8604 0d9e EC110000 		.4byte	.LASF380
 8605 0da2 D07E     		.sleb128 -176
 8606 0da4 06       		.uleb128 0x6
 8607 0da5 BF050000 		.4byte	.LASF381
 8608 0da9 CF7E     		.sleb128 -177
 8609 0dab 06       		.uleb128 0x6
 8610 0dac F60C0000 		.4byte	.LASF382
 8611 0db0 CC7E     		.sleb128 -180
 8612 0db2 06       		.uleb128 0x6
 8613 0db3 5C030000 		.4byte	.LASF383
 8614 0db7 CB7E     		.sleb128 -181
 8615 0db9 06       		.uleb128 0x6
 8616 0dba D1070000 		.4byte	.LASF384
 8617 0dbe CA7E     		.sleb128 -182
 8618 0dc0 06       		.uleb128 0x6
 8619 0dc1 07080000 		.4byte	.LASF385
 8620 0dc5 C97E     		.sleb128 -183
 8621 0dc7 06       		.uleb128 0x6
 8622 0dc8 71200000 		.4byte	.LASF386
 8623 0dcc C87E     		.sleb128 -184
 8624 0dce 06       		.uleb128 0x6
 8625 0dcf DA1F0000 		.4byte	.LASF387
 8626 0dd3 C77E     		.sleb128 -185
 8627 0dd5 06       		.uleb128 0x6
 8628 0dd6 871B0000 		.4byte	.LASF388
 8629 0dda C67E     		.sleb128 -186
 8630 0ddc 06       		.uleb128 0x6
 8631 0ddd E1090000 		.4byte	.LASF389
 8632 0de1 C57E     		.sleb128 -187
 8633 0de3 06       		.uleb128 0x6
 8634 0de4 D51B0000 		.4byte	.LASF390
 8635 0de8 C47E     		.sleb128 -188
 8636 0dea 06       		.uleb128 0x6
 8637 0deb A00B0000 		.4byte	.LASF391
 8638 0def C37E     		.sleb128 -189
 8639 0df1 06       		.uleb128 0x6
 8640 0df2 2C0B0000 		.4byte	.LASF392
 8641 0df6 C27E     		.sleb128 -190
 8642 0df8 06       		.uleb128 0x6
 8643 0df9 8F150000 		.4byte	.LASF393
 8644 0dfd C17E     		.sleb128 -191
 8645 0dff 06       		.uleb128 0x6
 8646 0e00 E2030000 		.4byte	.LASF394
 8647 0e04 C07E     		.sleb128 -192
 8648 0e06 06       		.uleb128 0x6
 8649 0e07 41110000 		.4byte	.LASF395
 8650 0e0b BF7E     		.sleb128 -193
 8651 0e0d 06       		.uleb128 0x6
 8652 0e0e 45170000 		.4byte	.LASF396
 8653 0e12 BE7E     		.sleb128 -194
 8654 0e14 06       		.uleb128 0x6
 8655 0e15 79060000 		.4byte	.LASF397
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 338


 8656 0e19 BD7E     		.sleb128 -195
 8657 0e1b 06       		.uleb128 0x6
 8658 0e1c 14210000 		.4byte	.LASF398
 8659 0e20 BC7E     		.sleb128 -196
 8660 0e22 06       		.uleb128 0x6
 8661 0e23 F0020000 		.4byte	.LASF399
 8662 0e27 BB7E     		.sleb128 -197
 8663 0e29 06       		.uleb128 0x6
 8664 0e2a AA1F0000 		.4byte	.LASF400
 8665 0e2e BA7E     		.sleb128 -198
 8666 0e30 06       		.uleb128 0x6
 8667 0e31 4C190000 		.4byte	.LASF401
 8668 0e35 B97E     		.sleb128 -199
 8669 0e37 06       		.uleb128 0x6
 8670 0e38 81000000 		.4byte	.LASF402
 8671 0e3c B87E     		.sleb128 -200
 8672 0e3e 06       		.uleb128 0x6
 8673 0e3f F8120000 		.4byte	.LASF403
 8674 0e43 B77E     		.sleb128 -201
 8675 0e45 06       		.uleb128 0x6
 8676 0e46 1A0D0000 		.4byte	.LASF404
 8677 0e4a B67E     		.sleb128 -202
 8678 0e4c 06       		.uleb128 0x6
 8679 0e4d 4B0C0000 		.4byte	.LASF405
 8680 0e51 B57E     		.sleb128 -203
 8681 0e53 06       		.uleb128 0x6
 8682 0e54 E20E0000 		.4byte	.LASF406
 8683 0e58 B47E     		.sleb128 -204
 8684 0e5a 06       		.uleb128 0x6
 8685 0e5b 300F0000 		.4byte	.LASF407
 8686 0e5f B37E     		.sleb128 -205
 8687 0e61 06       		.uleb128 0x6
 8688 0e62 9C200000 		.4byte	.LASF408
 8689 0e66 B27E     		.sleb128 -206
 8690 0e68 06       		.uleb128 0x6
 8691 0e69 F9080000 		.4byte	.LASF409
 8692 0e6d B17E     		.sleb128 -207
 8693 0e6f 06       		.uleb128 0x6
 8694 0e70 E7040000 		.4byte	.LASF410
 8695 0e74 B07E     		.sleb128 -208
 8696 0e76 06       		.uleb128 0x6
 8697 0e77 1F1E0000 		.4byte	.LASF411
 8698 0e7b AF7E     		.sleb128 -209
 8699 0e7d 06       		.uleb128 0x6
 8700 0e7e 980F0000 		.4byte	.LASF412
 8701 0e82 AE7E     		.sleb128 -210
 8702 0e84 06       		.uleb128 0x6
 8703 0e85 EE1A0000 		.4byte	.LASF413
 8704 0e89 AD7E     		.sleb128 -211
 8705 0e8b 06       		.uleb128 0x6
 8706 0e8c 4D120000 		.4byte	.LASF414
 8707 0e90 AC7E     		.sleb128 -212
 8708 0e92 06       		.uleb128 0x6
 8709 0e93 D3100000 		.4byte	.LASF415
 8710 0e97 AB7E     		.sleb128 -213
 8711 0e99 06       		.uleb128 0x6
 8712 0e9a 2E220000 		.4byte	.LASF416
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 339


 8713 0e9e AA7E     		.sleb128 -214
 8714 0ea0 06       		.uleb128 0x6
 8715 0ea1 41000000 		.4byte	.LASF417
 8716 0ea5 A97E     		.sleb128 -215
 8717 0ea7 06       		.uleb128 0x6
 8718 0ea8 AB060000 		.4byte	.LASF418
 8719 0eac A87E     		.sleb128 -216
 8720 0eae 06       		.uleb128 0x6
 8721 0eaf A81B0000 		.4byte	.LASF419
 8722 0eb3 A77E     		.sleb128 -217
 8723 0eb5 06       		.uleb128 0x6
 8724 0eb6 7C180000 		.4byte	.LASF420
 8725 0eba A67E     		.sleb128 -218
 8726 0ebc 06       		.uleb128 0x6
 8727 0ebd 870A0000 		.4byte	.LASF421
 8728 0ec1 A57E     		.sleb128 -219
 8729 0ec3 06       		.uleb128 0x6
 8730 0ec4 770D0000 		.4byte	.LASF422
 8731 0ec8 A47E     		.sleb128 -220
 8732 0eca 06       		.uleb128 0x6
 8733 0ecb 16220000 		.4byte	.LASF423
 8734 0ecf A37E     		.sleb128 -221
 8735 0ed1 06       		.uleb128 0x6
 8736 0ed2 93000000 		.4byte	.LASF424
 8737 0ed6 A17E     		.sleb128 -223
 8738 0ed8 06       		.uleb128 0x6
 8739 0ed9 1D0A0000 		.4byte	.LASF425
 8740 0edd A07E     		.sleb128 -224
 8741 0edf 06       		.uleb128 0x6
 8742 0ee0 5D090000 		.4byte	.LASF426
 8743 0ee4 9F7E     		.sleb128 -225
 8744 0ee6 06       		.uleb128 0x6
 8745 0ee7 AA050000 		.4byte	.LASF427
 8746 0eeb 9E7E     		.sleb128 -226
 8747 0eed 06       		.uleb128 0x6
 8748 0eee 18040000 		.4byte	.LASF428
 8749 0ef2 9D7E     		.sleb128 -227
 8750 0ef4 06       		.uleb128 0x6
 8751 0ef5 83190000 		.4byte	.LASF429
 8752 0ef9 9C7E     		.sleb128 -228
 8753 0efb 06       		.uleb128 0x6
 8754 0efc AE1D0000 		.4byte	.LASF430
 8755 0f00 9B7E     		.sleb128 -229
 8756 0f02 06       		.uleb128 0x6
 8757 0f03 2B030000 		.4byte	.LASF431
 8758 0f07 9A7E     		.sleb128 -230
 8759 0f09 06       		.uleb128 0x6
 8760 0f0a 080F0000 		.4byte	.LASF432
 8761 0f0e 997E     		.sleb128 -231
 8762 0f10 06       		.uleb128 0x6
 8763 0f11 F91B0000 		.4byte	.LASF433
 8764 0f15 987E     		.sleb128 -232
 8765 0f17 06       		.uleb128 0x6
 8766 0f18 2E180000 		.4byte	.LASF434
 8767 0f1c D47D     		.sleb128 -300
 8768 0f1e 00       		.byte	0
 8769 0f1f 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 340


 8770 0f20 78020000 		.4byte	.LASF435
 8771 0f24 0B       		.byte	0xb
 8772 0f25 7A       		.byte	0x7a
 8773 0f26 9D000000 		.4byte	0x9d
 8774 0f2a 18       		.uleb128 0x18
 8775 0f2b 746D00   		.ascii	"tm\000"
 8776 0f2e 24       		.byte	0x24
 8777 0f2f 0C       		.byte	0xc
 8778 0f30 1F       		.byte	0x1f
 8779 0f31 A20F0000 		.4byte	0xfa2
 8780 0f35 0C       		.uleb128 0xc
 8781 0f36 4A0D0000 		.4byte	.LASF436
 8782 0f3a 0C       		.byte	0xc
 8783 0f3b 21       		.byte	0x21
 8784 0f3c 25000000 		.4byte	0x25
 8785 0f40 00       		.byte	0
 8786 0f41 0C       		.uleb128 0xc
 8787 0f42 C00A0000 		.4byte	.LASF437
 8788 0f46 0C       		.byte	0xc
 8789 0f47 22       		.byte	0x22
 8790 0f48 25000000 		.4byte	0x25
 8791 0f4c 04       		.byte	0x4
 8792 0f4d 0C       		.uleb128 0xc
 8793 0f4e AC000000 		.4byte	.LASF438
 8794 0f52 0C       		.byte	0xc
 8795 0f53 23       		.byte	0x23
 8796 0f54 25000000 		.4byte	0x25
 8797 0f58 08       		.byte	0x8
 8798 0f59 0C       		.uleb128 0xc
 8799 0f5a E5160000 		.4byte	.LASF439
 8800 0f5e 0C       		.byte	0xc
 8801 0f5f 24       		.byte	0x24
 8802 0f60 25000000 		.4byte	0x25
 8803 0f64 0C       		.byte	0xc
 8804 0f65 0C       		.uleb128 0xc
 8805 0f66 25110000 		.4byte	.LASF440
 8806 0f6a 0C       		.byte	0xc
 8807 0f6b 25       		.byte	0x25
 8808 0f6c 25000000 		.4byte	0x25
 8809 0f70 10       		.byte	0x10
 8810 0f71 0C       		.uleb128 0xc
 8811 0f72 43200000 		.4byte	.LASF441
 8812 0f76 0C       		.byte	0xc
 8813 0f77 26       		.byte	0x26
 8814 0f78 25000000 		.4byte	0x25
 8815 0f7c 14       		.byte	0x14
 8816 0f7d 0C       		.uleb128 0xc
 8817 0f7e BC180000 		.4byte	.LASF442
 8818 0f82 0C       		.byte	0xc
 8819 0f83 27       		.byte	0x27
 8820 0f84 25000000 		.4byte	0x25
 8821 0f88 18       		.byte	0x18
 8822 0f89 0C       		.uleb128 0xc
 8823 0f8a F8180000 		.4byte	.LASF443
 8824 0f8e 0C       		.byte	0xc
 8825 0f8f 28       		.byte	0x28
 8826 0f90 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 341


 8827 0f94 1C       		.byte	0x1c
 8828 0f95 0C       		.uleb128 0xc
 8829 0f96 6E0D0000 		.4byte	.LASF444
 8830 0f9a 0C       		.byte	0xc
 8831 0f9b 29       		.byte	0x29
 8832 0f9c 25000000 		.4byte	0x25
 8833 0fa0 20       		.byte	0x20
 8834 0fa1 00       		.byte	0
 8835 0fa2 19       		.uleb128 0x19
 8836 0fa3 10160000 		.4byte	.LASF445
 8837 0fa7 01       		.byte	0x1
 8838 0fa8 9A01     		.2byte	0x19a
 8839 0faa 50000000 		.4byte	0x50
 8840 0fae 03       		.byte	0x3
 8841 0faf BE0F0000 		.4byte	0xfbe
 8842 0fb3 1A       		.uleb128 0x1a
 8843 0fb4 6200     		.ascii	"b\000"
 8844 0fb6 01       		.byte	0x1
 8845 0fb7 9A01     		.2byte	0x19a
 8846 0fb9 2C000000 		.4byte	0x2c
 8847 0fbd 00       		.byte	0
 8848 0fbe 19       		.uleb128 0x19
 8849 0fbf 6D0B0000 		.4byte	.LASF446
 8850 0fc3 01       		.byte	0x1
 8851 0fc4 840E     		.2byte	0xe84
 8852 0fc6 25000000 		.4byte	0x25
 8853 0fca 01       		.byte	0x1
 8854 0fcb 5A100000 		.4byte	0x105a
 8855 0fcf 1B       		.uleb128 0x1b
 8856 0fd0 51030000 		.4byte	.LASF256
 8857 0fd4 01       		.byte	0x1
 8858 0fd5 840E     		.2byte	0xe84
 8859 0fd7 25000000 		.4byte	0x25
 8860 0fdb 1B       		.uleb128 0x1b
 8861 0fdc B9090000 		.4byte	.LASF253
 8862 0fe0 01       		.byte	0x1
 8863 0fe1 840E     		.2byte	0xe84
 8864 0fe3 CE000000 		.4byte	0xce
 8865 0fe7 1B       		.uleb128 0x1b
 8866 0fe8 6A130000 		.4byte	.LASF255
 8867 0fec 01       		.byte	0x1
 8868 0fed 840E     		.2byte	0xe84
 8869 0fef 25000000 		.4byte	0x25
 8870 0ff3 1B       		.uleb128 0x1b
 8871 0ff4 8D200000 		.4byte	.LASF447
 8872 0ff8 01       		.byte	0x1
 8873 0ff9 850E     		.2byte	0xe85
 8874 0ffb CE000000 		.4byte	0xce
 8875 0fff 1B       		.uleb128 0x1b
 8876 1000 87080000 		.4byte	.LASF448
 8877 1004 01       		.byte	0x1
 8878 1005 850E     		.2byte	0xe85
 8879 1007 25000000 		.4byte	0x25
 8880 100b 1C       		.uleb128 0x1c
 8881 100c 27100000 		.4byte	0x1027
 8882 1010 1D       		.uleb128 0x1d
 8883 1011 7000     		.ascii	"p\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 342


 8884 1013 01       		.byte	0x1
 8885 1014 8F0E     		.2byte	0xe8f
 8886 1016 CE000000 		.4byte	0xce
 8887 101a 1E       		.uleb128 0x1e
 8888 101b C0120000 		.4byte	.LASF449
 8889 101f 01       		.byte	0x1
 8890 1020 900E     		.2byte	0xe90
 8891 1022 25000000 		.4byte	0x25
 8892 1026 00       		.byte	0
 8893 1027 1C       		.uleb128 0x1c
 8894 1028 39100000 		.4byte	0x1039
 8895 102c 1E       		.uleb128 0x1e
 8896 102d CF160000 		.4byte	.LASF450
 8897 1031 01       		.byte	0x1
 8898 1032 B30E     		.2byte	0xeb3
 8899 1034 25000000 		.4byte	0x25
 8900 1038 00       		.byte	0
 8901 1039 1C       		.uleb128 0x1c
 8902 103a 4B100000 		.4byte	0x104b
 8903 103e 1D       		.uleb128 0x1d
 8904 103f 5F5F7800 		.ascii	"__x\000"
 8905 1043 01       		.byte	0x1
 8906 1044 B90E     		.2byte	0xeb9
 8907 1046 37000000 		.4byte	0x37
 8908 104a 00       		.byte	0
 8909 104b 1F       		.uleb128 0x1f
 8910 104c 1D       		.uleb128 0x1d
 8911 104d 5F5F7800 		.ascii	"__x\000"
 8912 1051 01       		.byte	0x1
 8913 1052 BA0E     		.2byte	0xeba
 8914 1054 37000000 		.4byte	0x37
 8915 1058 00       		.byte	0
 8916 1059 00       		.byte	0
 8917 105a 19       		.uleb128 0x19
 8918 105b F01E0000 		.4byte	.LASF451
 8919 105f 01       		.byte	0x1
 8920 1060 870D     		.2byte	0xd87
 8921 1062 25000000 		.4byte	0x25
 8922 1066 01       		.byte	0x1
 8923 1067 08110000 		.4byte	0x1108
 8924 106b 1A       		.uleb128 0x1a
 8925 106c 62756600 		.ascii	"buf\000"
 8926 1070 01       		.byte	0x1
 8927 1071 870D     		.2byte	0xd87
 8928 1073 08110000 		.4byte	0x1108
 8929 1077 1B       		.uleb128 0x1b
 8930 1078 7E1C0000 		.4byte	.LASF452
 8931 107c 01       		.byte	0x1
 8932 107d 870D     		.2byte	0xd87
 8933 107f 50000000 		.4byte	0x50
 8934 1083 1A       		.uleb128 0x1a
 8935 1084 6B657900 		.ascii	"key\000"
 8936 1088 01       		.byte	0x1
 8937 1089 880D     		.2byte	0xd88
 8938 108b 08110000 		.4byte	0x1108
 8939 108f 1B       		.uleb128 0x1b
 8940 1090 12060000 		.4byte	.LASF453
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 343


 8941 1094 01       		.byte	0x1
 8942 1095 880D     		.2byte	0xd88
 8943 1097 50000000 		.4byte	0x50
 8944 109b 1B       		.uleb128 0x1b
 8945 109c 050D0000 		.4byte	.LASF265
 8946 10a0 01       		.byte	0x1
 8947 10a1 880D     		.2byte	0xd88
 8948 10a3 50000000 		.4byte	0x50
 8949 10a7 1A       		.uleb128 0x1a
 8950 10a8 73696700 		.ascii	"sig\000"
 8951 10ac 01       		.byte	0x1
 8952 10ad 890D     		.2byte	0xd89
 8953 10af 08110000 		.4byte	0x1108
 8954 10b3 1B       		.uleb128 0x1b
 8955 10b4 81160000 		.4byte	.LASF454
 8956 10b8 01       		.byte	0x1
 8957 10b9 890D     		.2byte	0xd89
 8958 10bb 50000000 		.4byte	0x50
 8959 10bf 1B       		.uleb128 0x1b
 8960 10c0 73080000 		.4byte	.LASF455
 8961 10c4 01       		.byte	0x1
 8962 10c5 890D     		.2byte	0xd89
 8963 10c7 50000000 		.4byte	0x50
 8964 10cb 1B       		.uleb128 0x1b
 8965 10cc BA060000 		.4byte	.LASF284
 8966 10d0 01       		.byte	0x1
 8967 10d1 8A0D     		.2byte	0xd8a
 8968 10d3 B9000000 		.4byte	0xb9
 8969 10d7 1E       		.uleb128 0x1e
 8970 10d8 FC200000 		.4byte	.LASF456
 8971 10dc 01       		.byte	0x1
 8972 10dd 8C0D     		.2byte	0xd8c
 8973 10df 25000000 		.4byte	0x25
 8974 10e3 1E       		.uleb128 0x1e
 8975 10e4 F3200000 		.4byte	.LASF457
 8976 10e8 01       		.byte	0x1
 8977 10e9 8C0D     		.2byte	0xd8c
 8978 10eb 25000000 		.4byte	0x25
 8979 10ef 1D       		.uleb128 0x1d
 8980 10f0 72657400 		.ascii	"ret\000"
 8981 10f4 01       		.byte	0x1
 8982 10f5 8C0D     		.2byte	0xd8c
 8983 10f7 25000000 		.4byte	0x25
 8984 10fb 1E       		.uleb128 0x1e
 8985 10fc 22100000 		.4byte	.LASF458
 8986 1100 01       		.byte	0x1
 8987 1101 900D     		.2byte	0xd90
 8988 1103 AF0B0000 		.4byte	0xbaf
 8989 1107 00       		.byte	0
 8990 1108 08       		.uleb128 0x8
 8991 1109 04       		.byte	0x4
 8992 110a 0E110000 		.4byte	0x110e
 8993 110e 09       		.uleb128 0x9
 8994 110f 2C000000 		.4byte	0x2c
 8995 1113 19       		.uleb128 0x19
 8996 1114 A4100000 		.4byte	.LASF459
 8997 1118 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 344


 8998 1119 F610     		.2byte	0x10f6
 8999 111b 25000000 		.4byte	0x25
 9000 111f 01       		.byte	0x1
 9001 1120 60110000 		.4byte	0x1160
 9002 1124 1B       		.uleb128 0x1b
 9003 1125 241A0000 		.4byte	.LASF460
 9004 1129 01       		.byte	0x1
 9005 112a F610     		.2byte	0x10f6
 9006 112c 890B0000 		.4byte	0xb89
 9007 1130 1A       		.uleb128 0x1a
 9008 1131 737A00   		.ascii	"sz\000"
 9009 1134 01       		.byte	0x1
 9010 1135 F610     		.2byte	0x10f6
 9011 1137 25000000 		.4byte	0x25
 9012 113b 1B       		.uleb128 0x1b
 9013 113c 24080000 		.4byte	.LASF461
 9014 1140 01       		.byte	0x1
 9015 1141 F610     		.2byte	0x10f6
 9016 1143 60110000 		.4byte	0x1160
 9017 1147 1D       		.uleb128 0x1d
 9018 1148 69647800 		.ascii	"idx\000"
 9019 114c 01       		.byte	0x1
 9020 114d F810     		.2byte	0x10f8
 9021 114f 50000000 		.4byte	0x50
 9022 1153 1E       		.uleb128 0x1e
 9023 1154 D5170000 		.4byte	.LASF462
 9024 1158 01       		.byte	0x1
 9025 1159 F910     		.2byte	0x10f9
 9026 115b 25000000 		.4byte	0x25
 9027 115f 00       		.byte	0
 9028 1160 08       		.uleb128 0x8
 9029 1161 04       		.byte	0x4
 9030 1162 01080000 		.4byte	0x801
 9031 1166 19       		.uleb128 0x19
 9032 1167 89180000 		.4byte	.LASF463
 9033 116b 01       		.byte	0x1
 9034 116c ED0F     		.2byte	0xfed
 9035 116e 25000000 		.4byte	0x25
 9036 1172 01       		.byte	0x1
 9037 1173 B3110000 		.4byte	0x11b3
 9038 1177 1B       		.uleb128 0x1b
 9039 1178 241A0000 		.4byte	.LASF460
 9040 117c 01       		.byte	0x1
 9041 117d ED0F     		.2byte	0xfed
 9042 117f 890B0000 		.4byte	0xb89
 9043 1183 1A       		.uleb128 0x1a
 9044 1184 737A00   		.ascii	"sz\000"
 9045 1187 01       		.byte	0x1
 9046 1188 ED0F     		.2byte	0xfed
 9047 118a 25000000 		.4byte	0x25
 9048 118e 1B       		.uleb128 0x1b
 9049 118f 24080000 		.4byte	.LASF461
 9050 1193 01       		.byte	0x1
 9051 1194 ED0F     		.2byte	0xfed
 9052 1196 60110000 		.4byte	0x1160
 9053 119a 1D       		.uleb128 0x1d
 9054 119b 69647800 		.ascii	"idx\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 345


 9055 119f 01       		.byte	0x1
 9056 11a0 EF0F     		.2byte	0xfef
 9057 11a2 50000000 		.4byte	0x50
 9058 11a6 1E       		.uleb128 0x1e
 9059 11a7 D5170000 		.4byte	.LASF462
 9060 11ab 01       		.byte	0x1
 9061 11ac F00F     		.2byte	0xff0
 9062 11ae 25000000 		.4byte	0x25
 9063 11b2 00       		.byte	0
 9064 11b3 19       		.uleb128 0x19
 9065 11b4 99090000 		.4byte	.LASF464
 9066 11b8 01       		.byte	0x1
 9067 11b9 3F11     		.2byte	0x113f
 9068 11bb 25000000 		.4byte	0x25
 9069 11bf 01       		.byte	0x1
 9070 11c0 4B120000 		.4byte	0x124b
 9071 11c4 1B       		.uleb128 0x1b
 9072 11c5 241A0000 		.4byte	.LASF460
 9073 11c9 01       		.byte	0x1
 9074 11ca 3F11     		.2byte	0x113f
 9075 11cc 890B0000 		.4byte	0xb89
 9076 11d0 1A       		.uleb128 0x1a
 9077 11d1 737A00   		.ascii	"sz\000"
 9078 11d4 01       		.byte	0x1
 9079 11d5 3F11     		.2byte	0x113f
 9080 11d7 25000000 		.4byte	0x25
 9081 11db 1B       		.uleb128 0x1b
 9082 11dc 2A060000 		.4byte	.LASF465
 9083 11e0 01       		.byte	0x1
 9084 11e1 3F11     		.2byte	0x113f
 9085 11e3 4B120000 		.4byte	0x124b
 9086 11e7 1B       		.uleb128 0x1b
 9087 11e8 BA060000 		.4byte	.LASF284
 9088 11ec 01       		.byte	0x1
 9089 11ed 3F11     		.2byte	0x113f
 9090 11ef B9000000 		.4byte	0xb9
 9091 11f3 1D       		.uleb128 0x1d
 9092 11f4 69647800 		.ascii	"idx\000"
 9093 11f8 01       		.byte	0x1
 9094 11f9 4111     		.2byte	0x1141
 9095 11fb 50000000 		.4byte	0x50
 9096 11ff 1F       		.uleb128 0x1f
 9097 1200 1E       		.uleb128 0x1e
 9098 1201 C81F0000 		.4byte	.LASF466
 9099 1205 01       		.byte	0x1
 9100 1206 4611     		.2byte	0x1146
 9101 1208 25000000 		.4byte	0x25
 9102 120c 1E       		.uleb128 0x1e
 9103 120d B5050000 		.4byte	.LASF467
 9104 1211 01       		.byte	0x1
 9105 1212 4611     		.2byte	0x1146
 9106 1214 25000000 		.4byte	0x25
 9107 1218 1E       		.uleb128 0x1e
 9108 1219 D2040000 		.4byte	.LASF468
 9109 121d 01       		.byte	0x1
 9110 121e 4711     		.2byte	0x1147
 9111 1220 50000000 		.4byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 346


 9112 1224 1D       		.uleb128 0x1d
 9113 1225 6200     		.ascii	"b\000"
 9114 1227 01       		.byte	0x1
 9115 1228 4811     		.2byte	0x1148
 9116 122a 2C000000 		.4byte	0x2c
 9117 122e 1F       		.uleb128 0x1f
 9118 122f 1E       		.uleb128 0x1e
 9119 1230 C9160000 		.4byte	.LASF469
 9120 1234 01       		.byte	0x1
 9121 1235 5A11     		.2byte	0x115a
 9122 1237 FB070000 		.4byte	0x7fb
 9123 123b 1F       		.uleb128 0x1f
 9124 123c 1D       		.uleb128 0x1d
 9125 123d 787000   		.ascii	"xp\000"
 9126 1240 01       		.byte	0x1
 9127 1241 6511     		.2byte	0x1165
 9128 1243 B9000000 		.4byte	0xb9
 9129 1247 00       		.byte	0
 9130 1248 00       		.byte	0
 9131 1249 00       		.byte	0
 9132 124a 00       		.byte	0
 9133 124b 08       		.uleb128 0x8
 9134 124c 04       		.byte	0x4
 9135 124d FB070000 		.4byte	0x7fb
 9136 1251 19       		.uleb128 0x19
 9137 1252 66020000 		.4byte	.LASF470
 9138 1256 01       		.byte	0x1
 9139 1257 1111     		.2byte	0x1111
 9140 1259 25000000 		.4byte	0x25
 9141 125d 01       		.byte	0x1
 9142 125e AA120000 		.4byte	0x12aa
 9143 1262 1B       		.uleb128 0x1b
 9144 1263 241A0000 		.4byte	.LASF460
 9145 1267 01       		.byte	0x1
 9146 1268 1111     		.2byte	0x1111
 9147 126a 890B0000 		.4byte	0xb89
 9148 126e 1A       		.uleb128 0x1a
 9149 126f 737A00   		.ascii	"sz\000"
 9150 1272 01       		.byte	0x1
 9151 1273 1111     		.2byte	0x1111
 9152 1275 25000000 		.4byte	0x25
 9153 1279 1B       		.uleb128 0x1b
 9154 127a 24080000 		.4byte	.LASF461
 9155 127e 01       		.byte	0x1
 9156 127f 1111     		.2byte	0x1111
 9157 1281 60110000 		.4byte	0x1160
 9158 1285 1D       		.uleb128 0x1d
 9159 1286 69647800 		.ascii	"idx\000"
 9160 128a 01       		.byte	0x1
 9161 128b 1311     		.2byte	0x1113
 9162 128d 50000000 		.4byte	0x50
 9163 1291 1D       		.uleb128 0x1d
 9164 1292 6F696400 		.ascii	"oid\000"
 9165 1296 01       		.byte	0x1
 9166 1297 1311     		.2byte	0x1113
 9167 1299 50000000 		.4byte	0x50
 9168 129d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 347


 9169 129e D5170000 		.4byte	.LASF462
 9170 12a2 01       		.byte	0x1
 9171 12a3 1411     		.2byte	0x1114
 9172 12a5 25000000 		.4byte	0x25
 9173 12a9 00       		.byte	0
 9174 12aa 19       		.uleb128 0x19
 9175 12ab 7B050000 		.4byte	.LASF471
 9176 12af 01       		.byte	0x1
 9177 12b0 B50B     		.2byte	0xbb5
 9178 12b2 25000000 		.4byte	0x25
 9179 12b6 03       		.byte	0x3
 9180 12b7 D0120000 		.4byte	0x12d0
 9181 12bb 1A       		.uleb128 0x1a
 9182 12bc 6100     		.ascii	"a\000"
 9183 12be 01       		.byte	0x1
 9184 12bf B50B     		.2byte	0xbb5
 9185 12c1 D0120000 		.4byte	0x12d0
 9186 12c5 1A       		.uleb128 0x1a
 9187 12c6 6200     		.ascii	"b\000"
 9188 12c8 01       		.byte	0x1
 9189 12c9 B50B     		.2byte	0xbb5
 9190 12cb D0120000 		.4byte	0x12d0
 9191 12cf 00       		.byte	0
 9192 12d0 08       		.uleb128 0x8
 9193 12d1 04       		.byte	0x4
 9194 12d2 D6120000 		.4byte	0x12d6
 9195 12d6 09       		.uleb128 0x9
 9196 12d7 2A0F0000 		.4byte	0xf2a
 9197 12db 20       		.uleb128 0x20
 9198 12dc 3B030000 		.4byte	.LASF473
 9199 12e0 01       		.byte	0x1
 9200 12e1 430C     		.2byte	0xc43
 9201 12e3 25000000 		.4byte	0x25
 9202 12e7 01       		.byte	0x1
 9203 12e8 1D130000 		.4byte	0x131d
 9204 12ec 1B       		.uleb128 0x1b
 9205 12ed 24080000 		.4byte	.LASF461
 9206 12f1 01       		.byte	0x1
 9207 12f2 430C     		.2byte	0xc43
 9208 12f4 60110000 		.4byte	0x1160
 9209 12f8 1B       		.uleb128 0x1b
 9210 12f9 A8160000 		.4byte	.LASF280
 9211 12fd 01       		.byte	0x1
 9212 12fe 430C     		.2byte	0xc43
 9213 1300 25000000 		.4byte	0x25
 9214 1304 1E       		.uleb128 0x1e
 9215 1305 FA090000 		.4byte	.LASF472
 9216 1309 01       		.byte	0x1
 9217 130a 450C     		.2byte	0xc45
 9218 130c 25000000 		.4byte	0x25
 9219 1310 1D       		.uleb128 0x1d
 9220 1311 72657400 		.ascii	"ret\000"
 9221 1315 01       		.byte	0x1
 9222 1316 460C     		.2byte	0xc46
 9223 1318 25000000 		.4byte	0x25
 9224 131c 00       		.byte	0
 9225 131d 20       		.uleb128 0x20
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 348


 9226 131e 740C0000 		.4byte	.LASF474
 9227 1322 01       		.byte	0x1
 9228 1323 980C     		.2byte	0xc98
 9229 1325 50000000 		.4byte	0x50
 9230 1329 01       		.byte	0x1
 9231 132a 5B130000 		.4byte	0x135b
 9232 132e 1B       		.uleb128 0x1b
 9233 132f D5170000 		.4byte	.LASF462
 9234 1333 01       		.byte	0x1
 9235 1334 980C     		.2byte	0xc98
 9236 1336 50000000 		.4byte	0x50
 9237 133a 1B       		.uleb128 0x1b
 9238 133b 11040000 		.4byte	.LASF475
 9239 133f 01       		.byte	0x1
 9240 1340 980C     		.2byte	0xc98
 9241 1342 890B0000 		.4byte	0xb89
 9242 1346 1D       		.uleb128 0x1d
 9243 1347 6900     		.ascii	"i\000"
 9244 1349 01       		.byte	0x1
 9245 134a 9A0C     		.2byte	0xc9a
 9246 134c 50000000 		.4byte	0x50
 9247 1350 1D       		.uleb128 0x1d
 9248 1351 6A00     		.ascii	"j\000"
 9249 1353 01       		.byte	0x1
 9250 1354 9A0C     		.2byte	0xc9a
 9251 1356 50000000 		.4byte	0x50
 9252 135a 00       		.byte	0
 9253 135b 21       		.uleb128 0x21
 9254 135c 830D0000 		.4byte	.LASF663
 9255 1360 01       		.byte	0x1
 9256 1361 A101     		.2byte	0x1a1
 9257 1363 00000000 		.4byte	.LFB13
 9258 1367 22000000 		.4byte	.LFE13-.LFB13
 9259 136b 01       		.uleb128 0x1
 9260 136c 9C       		.byte	0x9c
 9261 136d E0130000 		.4byte	0x13e0
 9262 1371 22       		.uleb128 0x22
 9263 1372 0E090000 		.4byte	.LASF476
 9264 1376 01       		.byte	0x1
 9265 1377 A101     		.2byte	0x1a1
 9266 1379 E0130000 		.4byte	0x13e0
 9267 137d 01       		.uleb128 0x1
 9268 137e 50       		.byte	0x50
 9269 137f 23       		.uleb128 0x23
 9270 1380 B6210000 		.4byte	.LASF477
 9271 1384 01       		.byte	0x1
 9272 1385 A101     		.2byte	0x1a1
 9273 1387 08110000 		.4byte	0x1108
 9274 138b 00000000 		.4byte	.LLST0
 9275 138f 24       		.uleb128 0x24
 9276 1390 69647800 		.ascii	"idx\000"
 9277 1394 01       		.byte	0x1
 9278 1395 A101     		.2byte	0x1a1
 9279 1397 E0130000 		.4byte	0x13e0
 9280 139b 01       		.uleb128 0x1
 9281 139c 52       		.byte	0x52
 9282 139d 25       		.uleb128 0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 349


 9283 139e 6900     		.ascii	"i\000"
 9284 13a0 01       		.byte	0x1
 9285 13a1 A301     		.2byte	0x1a3
 9286 13a3 25000000 		.4byte	0x25
 9287 13a7 21000000 		.4byte	.LLST1
 9288 13ab 26       		.uleb128 0x26
 9289 13ac A20F0000 		.4byte	0xfa2
 9290 13b0 06000000 		.4byte	.LBB21
 9291 13b4 00000000 		.4byte	.Ldebug_ranges0+0
 9292 13b8 01       		.byte	0x1
 9293 13b9 A501     		.2byte	0x1a5
 9294 13bb C9130000 		.4byte	0x13c9
 9295 13bf 27       		.uleb128 0x27
 9296 13c0 B30F0000 		.4byte	0xfb3
 9297 13c4 46000000 		.4byte	.LLST2
 9298 13c8 00       		.byte	0
 9299 13c9 28       		.uleb128 0x28
 9300 13ca A20F0000 		.4byte	0xfa2
 9301 13ce 16000000 		.4byte	.LBB25
 9302 13d2 04000000 		.4byte	.LBE25-.LBB25
 9303 13d6 01       		.byte	0x1
 9304 13d7 A601     		.2byte	0x1a6
 9305 13d9 29       		.uleb128 0x29
 9306 13da B30F0000 		.4byte	0xfb3
 9307 13de 00       		.byte	0
 9308 13df 00       		.byte	0
 9309 13e0 08       		.uleb128 0x8
 9310 13e1 04       		.byte	0x4
 9311 13e2 25000000 		.4byte	0x25
 9312 13e6 2A       		.uleb128 0x2a
 9313 13e7 A01F0000 		.4byte	.LASF479
 9314 13eb 01       		.byte	0x1
 9315 13ec 1003     		.2byte	0x310
 9316 13ee 08110000 		.4byte	0x1108
 9317 13f2 00000000 		.4byte	.LFB20
 9318 13f6 D8010000 		.4byte	.LFE20-.LFB20
 9319 13fa 01       		.uleb128 0x1
 9320 13fb 9C       		.byte	0x9c
 9321 13fc 3E140000 		.4byte	0x143e
 9322 1400 2B       		.uleb128 0x2b
 9323 1401 696400   		.ascii	"id\000"
 9324 1404 01       		.byte	0x1
 9325 1405 1003     		.2byte	0x310
 9326 1407 50000000 		.4byte	0x50
 9327 140b 69000000 		.4byte	.LLST3
 9328 140f 23       		.uleb128 0x23
 9329 1410 51030000 		.4byte	.LASF256
 9330 1414 01       		.byte	0x1
 9331 1415 1003     		.2byte	0x310
 9332 1417 50000000 		.4byte	0x50
 9333 141b 5F030000 		.4byte	.LLST4
 9334 141f 22       		.uleb128 0x22
 9335 1420 100C0000 		.4byte	.LASF478
 9336 1424 01       		.byte	0x1
 9337 1425 1003     		.2byte	0x310
 9338 1427 3E140000 		.4byte	0x143e
 9339 142b 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 350


 9340 142c 52       		.byte	0x52
 9341 142d 25       		.uleb128 0x25
 9342 142e 6F696400 		.ascii	"oid\000"
 9343 1432 01       		.byte	0x1
 9344 1433 1203     		.2byte	0x312
 9345 1435 08110000 		.4byte	0x1108
 9346 1439 00060000 		.4byte	.LLST5
 9347 143d 00       		.byte	0
 9348 143e 08       		.uleb128 0x8
 9349 143f 04       		.byte	0x4
 9350 1440 50000000 		.4byte	0x50
 9351 1444 2A       		.uleb128 0x2a
 9352 1445 76150000 		.4byte	.LASF480
 9353 1449 01       		.byte	0x1
 9354 144a 970B     		.2byte	0xb97
 9355 144c 25000000 		.4byte	0x25
 9356 1450 00000000 		.4byte	.LFB31
 9357 1454 78000000 		.4byte	.LFE31-.LFB31
 9358 1458 01       		.uleb128 0x1
 9359 1459 9C       		.byte	0x9c
 9360 145a 7B140000 		.4byte	0x147b
 9361 145e 2B       		.uleb128 0x2b
 9362 145f 6100     		.ascii	"a\000"
 9363 1461 01       		.byte	0x1
 9364 1462 970B     		.2byte	0xb97
 9365 1464 D0120000 		.4byte	0x12d0
 9366 1468 7B080000 		.4byte	.LLST6
 9367 146c 2B       		.uleb128 0x2b
 9368 146d 6200     		.ascii	"b\000"
 9369 146f 01       		.byte	0x1
 9370 1470 970B     		.2byte	0xb97
 9371 1472 D0120000 		.4byte	0x12d0
 9372 1476 9C080000 		.4byte	.LLST7
 9373 147a 00       		.byte	0
 9374 147b 2C       		.uleb128 0x2c
 9375 147c BE0F0000 		.4byte	0xfbe
 9376 1480 00000000 		.4byte	.LFB50
 9377 1484 B8000000 		.4byte	.LFE50-.LFB50
 9378 1488 01       		.uleb128 0x1
 9379 1489 9C       		.byte	0x9c
 9380 148a 49150000 		.4byte	0x1549
 9381 148e 27       		.uleb128 0x27
 9382 148f CF0F0000 		.4byte	0xfcf
 9383 1493 BD080000 		.4byte	.LLST8
 9384 1497 27       		.uleb128 0x27
 9385 1498 DB0F0000 		.4byte	0xfdb
 9386 149c E9080000 		.4byte	.LLST9
 9387 14a0 27       		.uleb128 0x27
 9388 14a1 E70F0000 		.4byte	0xfe7
 9389 14a5 0A090000 		.4byte	.LLST10
 9390 14a9 2D       		.uleb128 0x2d
 9391 14aa F30F0000 		.4byte	0xff3
 9392 14ae 01       		.uleb128 0x1
 9393 14af 53       		.byte	0x53
 9394 14b0 2D       		.uleb128 0x2d
 9395 14b1 FF0F0000 		.4byte	0xfff
 9396 14b5 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 351


 9397 14b6 91       		.byte	0x91
 9398 14b7 00       		.sleb128 0
 9399 14b8 2E       		.uleb128 0x2e
 9400 14b9 18000000 		.4byte	.Ldebug_ranges0+0x18
 9401 14bd 27       		.uleb128 0x27
 9402 14be FF0F0000 		.4byte	0xfff
 9403 14c2 2B090000 		.4byte	.LLST11
 9404 14c6 27       		.uleb128 0x27
 9405 14c7 F30F0000 		.4byte	0xff3
 9406 14cb 4A090000 		.4byte	.LLST12
 9407 14cf 27       		.uleb128 0x27
 9408 14d0 E70F0000 		.4byte	0xfe7
 9409 14d4 8F090000 		.4byte	.LLST13
 9410 14d8 27       		.uleb128 0x27
 9411 14d9 DB0F0000 		.4byte	0xfdb
 9412 14dd 000A0000 		.4byte	.LLST14
 9413 14e1 27       		.uleb128 0x27
 9414 14e2 CF0F0000 		.4byte	0xfcf
 9415 14e6 450A0000 		.4byte	.LLST15
 9416 14ea 2F       		.uleb128 0x2f
 9417 14eb 30000000 		.4byte	.LBB35
 9418 14ef 38000000 		.4byte	.LBE35-.LBB35
 9419 14f3 0A150000 		.4byte	0x150a
 9420 14f7 30       		.uleb128 0x30
 9421 14f8 10100000 		.4byte	0x1010
 9422 14fc 660A0000 		.4byte	.LLST16
 9423 1500 30       		.uleb128 0x30
 9424 1501 1A100000 		.4byte	0x101a
 9425 1505 A00A0000 		.4byte	.LLST17
 9426 1509 00       		.byte	0
 9427 150a 2F       		.uleb128 0x2f
 9428 150b 6C000000 		.4byte	.LBB36
 9429 150f 06000000 		.4byte	.LBE36-.LBB36
 9430 1513 21150000 		.4byte	0x1521
 9431 1517 30       		.uleb128 0x30
 9432 1518 2C100000 		.4byte	0x102c
 9433 151c 050B0000 		.4byte	.LLST18
 9434 1520 00       		.byte	0
 9435 1521 31       		.uleb128 0x31
 9436 1522 30000000 		.4byte	.Ldebug_ranges0+0x30
 9437 1526 34150000 		.4byte	0x1534
 9438 152a 30       		.uleb128 0x30
 9439 152b 3E100000 		.4byte	0x103e
 9440 152f 280B0000 		.4byte	.LLST19
 9441 1533 00       		.byte	0
 9442 1534 32       		.uleb128 0x32
 9443 1535 8E000000 		.4byte	.LBB39
 9444 1539 1A000000 		.4byte	.LBE39-.LBB39
 9445 153d 30       		.uleb128 0x30
 9446 153e 4C100000 		.4byte	0x104c
 9447 1542 5B0B0000 		.4byte	.LLST20
 9448 1546 00       		.byte	0
 9449 1547 00       		.byte	0
 9450 1548 00       		.byte	0
 9451 1549 33       		.uleb128 0x33
 9452 154a 9E160000 		.4byte	.LASF483
 9453 154e 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 352


 9454 154f F801     		.2byte	0x1f8
 9455 1551 25000000 		.4byte	0x25
 9456 1555 00000000 		.4byte	.LFB14
 9457 1559 48000000 		.4byte	.LFE14-.LFB14
 9458 155d 01       		.uleb128 0x1
 9459 155e 9C       		.byte	0x9c
 9460 155f E4150000 		.4byte	0x15e4
 9461 1563 23       		.uleb128 0x23
 9462 1564 241A0000 		.4byte	.LASF460
 9463 1568 01       		.byte	0x1
 9464 1569 F801     		.2byte	0x1f8
 9465 156b 08110000 		.4byte	0x1108
 9466 156f 6F0B0000 		.4byte	.LLST21
 9467 1573 22       		.uleb128 0x22
 9468 1574 16050000 		.4byte	.LASF481
 9469 1578 01       		.byte	0x1
 9470 1579 F801     		.2byte	0x1f8
 9471 157b 3E140000 		.4byte	0x143e
 9472 157f 01       		.uleb128 0x1
 9473 1580 51       		.byte	0x51
 9474 1581 24       		.uleb128 0x24
 9475 1582 6C656E00 		.ascii	"len\000"
 9476 1586 01       		.byte	0x1
 9477 1587 F801     		.2byte	0x1f8
 9478 1589 E0130000 		.4byte	0x13e0
 9479 158d 01       		.uleb128 0x1
 9480 158e 52       		.byte	0x52
 9481 158f 22       		.uleb128 0x22
 9482 1590 540E0000 		.4byte	.LASF283
 9483 1594 01       		.byte	0x1
 9484 1595 F901     		.2byte	0x1f9
 9485 1597 50000000 		.4byte	0x50
 9486 159b 01       		.uleb128 0x1
 9487 159c 53       		.byte	0x53
 9488 159d 34       		.uleb128 0x34
 9489 159e D5170000 		.4byte	.LASF462
 9490 15a2 01       		.byte	0x1
 9491 15a3 FB01     		.2byte	0x1fb
 9492 15a5 25000000 		.4byte	0x25
 9493 15a9 900B0000 		.4byte	.LLST22
 9494 15ad 25       		.uleb128 0x25
 9495 15ae 6900     		.ascii	"i\000"
 9496 15b0 01       		.byte	0x1
 9497 15b1 FC01     		.2byte	0x1fc
 9498 15b3 50000000 		.4byte	0x50
 9499 15b7 BA0B0000 		.4byte	.LLST23
 9500 15bb 25       		.uleb128 0x25
 9501 15bc 6200     		.ascii	"b\000"
 9502 15be 01       		.byte	0x1
 9503 15bf FD01     		.2byte	0x1fd
 9504 15c1 2C000000 		.4byte	0x2c
 9505 15c5 1A0C0000 		.4byte	.LLST24
 9506 15c9 32       		.uleb128 0x32
 9507 15ca 18000000 		.4byte	.LBB42
 9508 15ce 1A000000 		.4byte	.LBE42-.LBB42
 9509 15d2 34       		.uleb128 0x34
 9510 15d3 E2080000 		.4byte	.LASF482
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 353


 9511 15d7 01       		.byte	0x1
 9512 15d8 0802     		.2byte	0x208
 9513 15da 50000000 		.4byte	0x50
 9514 15de 450C0000 		.4byte	.LLST25
 9515 15e2 00       		.byte	0
 9516 15e3 00       		.byte	0
 9517 15e4 33       		.uleb128 0x33
 9518 15e5 8D190000 		.4byte	.LASF484
 9519 15e9 01       		.byte	0x1
 9520 15ea 2402     		.2byte	0x224
 9521 15ec 25000000 		.4byte	0x25
 9522 15f0 00000000 		.4byte	.LFB15
 9523 15f4 34000000 		.4byte	.LFE15-.LFB15
 9524 15f8 01       		.uleb128 0x1
 9525 15f9 9C       		.byte	0x9c
 9526 15fa 73160000 		.4byte	0x1673
 9527 15fe 23       		.uleb128 0x23
 9528 15ff 241A0000 		.4byte	.LASF460
 9529 1603 01       		.byte	0x1
 9530 1604 2402     		.2byte	0x224
 9531 1606 08110000 		.4byte	0x1108
 9532 160a 700C0000 		.4byte	.LLST26
 9533 160e 23       		.uleb128 0x23
 9534 160f 16050000 		.4byte	.LASF481
 9535 1613 01       		.byte	0x1
 9536 1614 2402     		.2byte	0x224
 9537 1616 3E140000 		.4byte	0x143e
 9538 161a AA0C0000 		.4byte	.LLST27
 9539 161e 2B       		.uleb128 0x2b
 9540 161f 6C656E00 		.ascii	"len\000"
 9541 1623 01       		.byte	0x1
 9542 1624 2402     		.2byte	0x224
 9543 1626 E0130000 		.4byte	0x13e0
 9544 162a EF0C0000 		.4byte	.LLST28
 9545 162e 23       		.uleb128 0x23
 9546 162f 540E0000 		.4byte	.LASF283
 9547 1633 01       		.byte	0x1
 9548 1634 2502     		.2byte	0x225
 9549 1636 50000000 		.4byte	0x50
 9550 163a 340D0000 		.4byte	.LLST29
 9551 163e 35       		.uleb128 0x35
 9552 163f D5170000 		.4byte	.LASF462
 9553 1643 01       		.byte	0x1
 9554 1644 2702     		.2byte	0x227
 9555 1646 25000000 		.4byte	0x25
 9556 164a 02       		.uleb128 0x2
 9557 164b 91       		.byte	0x91
 9558 164c 68       		.sleb128 -24
 9559 164d 36       		.uleb128 0x36
 9560 164e 69647800 		.ascii	"idx\000"
 9561 1652 01       		.byte	0x1
 9562 1653 2802     		.2byte	0x228
 9563 1655 50000000 		.4byte	0x50
 9564 1659 02       		.uleb128 0x2
 9565 165a 91       		.byte	0x91
 9566 165b 6C       		.sleb128 -20
 9567 165c 37       		.uleb128 0x37
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 354


 9568 165d 26000000 		.4byte	.LVL161
 9569 1661 49150000 		.4byte	0x1549
 9570 1665 38       		.uleb128 0x38
 9571 1666 01       		.uleb128 0x1
 9572 1667 52       		.byte	0x52
 9573 1668 02       		.uleb128 0x2
 9574 1669 7D       		.byte	0x7d
 9575 166a 00       		.sleb128 0
 9576 166b 38       		.uleb128 0x38
 9577 166c 01       		.uleb128 0x1
 9578 166d 51       		.byte	0x51
 9579 166e 02       		.uleb128 0x2
 9580 166f 91       		.byte	0x91
 9581 1670 6C       		.sleb128 -20
 9582 1671 00       		.byte	0
 9583 1672 00       		.byte	0
 9584 1673 33       		.uleb128 0x33
 9585 1674 B9120000 		.4byte	.LASF485
 9586 1678 01       		.byte	0x1
 9587 1679 3502     		.2byte	0x235
 9588 167b 25000000 		.4byte	0x25
 9589 167f 00000000 		.4byte	.LFB16
 9590 1683 34000000 		.4byte	.LFE16-.LFB16
 9591 1687 01       		.uleb128 0x1
 9592 1688 9C       		.byte	0x9c
 9593 1689 02170000 		.4byte	0x1702
 9594 168d 23       		.uleb128 0x23
 9595 168e 241A0000 		.4byte	.LASF460
 9596 1692 01       		.byte	0x1
 9597 1693 3502     		.2byte	0x235
 9598 1695 08110000 		.4byte	0x1108
 9599 1699 6E0D0000 		.4byte	.LLST30
 9600 169d 23       		.uleb128 0x23
 9601 169e 16050000 		.4byte	.LASF481
 9602 16a2 01       		.byte	0x1
 9603 16a3 3502     		.2byte	0x235
 9604 16a5 3E140000 		.4byte	0x143e
 9605 16a9 A80D0000 		.4byte	.LLST31
 9606 16ad 2B       		.uleb128 0x2b
 9607 16ae 6C656E00 		.ascii	"len\000"
 9608 16b2 01       		.byte	0x1
 9609 16b3 3502     		.2byte	0x235
 9610 16b5 E0130000 		.4byte	0x13e0
 9611 16b9 ED0D0000 		.4byte	.LLST32
 9612 16bd 23       		.uleb128 0x23
 9613 16be 540E0000 		.4byte	.LASF283
 9614 16c2 01       		.byte	0x1
 9615 16c3 3602     		.2byte	0x236
 9616 16c5 50000000 		.4byte	0x50
 9617 16c9 320E0000 		.4byte	.LLST33
 9618 16cd 35       		.uleb128 0x35
 9619 16ce D5170000 		.4byte	.LASF462
 9620 16d2 01       		.byte	0x1
 9621 16d3 3802     		.2byte	0x238
 9622 16d5 25000000 		.4byte	0x25
 9623 16d9 02       		.uleb128 0x2
 9624 16da 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 355


 9625 16db 68       		.sleb128 -24
 9626 16dc 36       		.uleb128 0x36
 9627 16dd 69647800 		.ascii	"idx\000"
 9628 16e1 01       		.byte	0x1
 9629 16e2 3902     		.2byte	0x239
 9630 16e4 50000000 		.4byte	0x50
 9631 16e8 02       		.uleb128 0x2
 9632 16e9 91       		.byte	0x91
 9633 16ea 6C       		.sleb128 -20
 9634 16eb 37       		.uleb128 0x37
 9635 16ec 26000000 		.4byte	.LVL168
 9636 16f0 49150000 		.4byte	0x1549
 9637 16f4 38       		.uleb128 0x38
 9638 16f5 01       		.uleb128 0x1
 9639 16f6 52       		.byte	0x52
 9640 16f7 02       		.uleb128 0x2
 9641 16f8 7D       		.byte	0x7d
 9642 16f9 00       		.sleb128 0
 9643 16fa 38       		.uleb128 0x38
 9644 16fb 01       		.uleb128 0x1
 9645 16fc 51       		.byte	0x51
 9646 16fd 02       		.uleb128 0x2
 9647 16fe 91       		.byte	0x91
 9648 16ff 6C       		.sleb128 -20
 9649 1700 00       		.byte	0
 9650 1701 00       		.byte	0
 9651 1702 2A       		.uleb128 0x2a
 9652 1703 BB190000 		.4byte	.LASF486
 9653 1707 01       		.byte	0x1
 9654 1708 B709     		.2byte	0x9b7
 9655 170a 25000000 		.4byte	0x25
 9656 170e 00000000 		.4byte	.LFB30
 9657 1712 D4030000 		.4byte	.LFE30-.LFB30
 9658 1716 01       		.uleb128 0x1
 9659 1717 9C       		.byte	0x9c
 9660 1718 761A0000 		.4byte	0x1a76
 9661 171c 23       		.uleb128 0x23
 9662 171d 24080000 		.4byte	.LASF461
 9663 1721 01       		.byte	0x1
 9664 1722 B709     		.2byte	0x9b7
 9665 1724 60110000 		.4byte	0x1160
 9666 1728 6C0E0000 		.4byte	.LLST34
 9667 172c 23       		.uleb128 0x23
 9668 172d 58160000 		.4byte	.LASF487
 9669 1731 01       		.byte	0x1
 9670 1732 B709     		.2byte	0x9b7
 9671 1734 25000000 		.4byte	0x25
 9672 1738 980E0000 		.4byte	.LLST35
 9673 173c 35       		.uleb128 0x35
 9674 173d D5170000 		.4byte	.LASF462
 9675 1741 01       		.byte	0x1
 9676 1742 B909     		.2byte	0x9b9
 9677 1744 25000000 		.4byte	0x25
 9678 1748 02       		.uleb128 0x2
 9679 1749 91       		.byte	0x91
 9680 174a 58       		.sleb128 -40
 9681 174b 35       		.uleb128 0x35
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 356


 9682 174c 07050000 		.4byte	.LASF488
 9683 1750 01       		.byte	0x1
 9684 1751 BA09     		.2byte	0x9ba
 9685 1753 25000000 		.4byte	0x25
 9686 1757 02       		.uleb128 0x2
 9687 1758 91       		.byte	0x91
 9688 1759 5C       		.sleb128 -36
 9689 175a 25       		.uleb128 0x25
 9690 175b 72657400 		.ascii	"ret\000"
 9691 175f 01       		.byte	0x1
 9692 1760 BB09     		.2byte	0x9bb
 9693 1762 25000000 		.4byte	0x25
 9694 1766 B70E0000 		.4byte	.LLST36
 9695 176a 34       		.uleb128 0x34
 9696 176b 3C1A0000 		.4byte	.LASF489
 9697 176f 01       		.byte	0x1
 9698 1770 BC09     		.2byte	0x9bc
 9699 1772 C1000000 		.4byte	0xc1
 9700 1776 CA0E0000 		.4byte	.LLST37
 9701 177a 34       		.uleb128 0x34
 9702 177b 52210000 		.4byte	.LASF490
 9703 177f 01       		.byte	0x1
 9704 1780 BD09     		.2byte	0x9bd
 9705 1782 890B0000 		.4byte	0xb89
 9706 1786 000F0000 		.4byte	.LLST38
 9707 178a 25       		.uleb128 0x25
 9708 178b 69647800 		.ascii	"idx\000"
 9709 178f 01       		.byte	0x1
 9710 1790 BE09     		.2byte	0x9be
 9711 1792 50000000 		.4byte	0x50
 9712 1796 1E0F0000 		.4byte	.LLST39
 9713 179a 31       		.uleb128 0x31
 9714 179b 48000000 		.4byte	.Ldebug_ranges0+0x48
 9715 179f 2D1A0000 		.4byte	0x1a2d
 9716 17a3 25       		.uleb128 0x25
 9717 17a4 6200     		.ascii	"b\000"
 9718 17a6 01       		.byte	0x1
 9719 17a7 FA09     		.2byte	0x9fa
 9720 17a9 2C000000 		.4byte	0x2c
 9721 17ad A50F0000 		.4byte	.LLST40
 9722 17b1 34       		.uleb128 0x34
 9723 17b2 1F000000 		.4byte	.LASF491
 9724 17b6 01       		.byte	0x1
 9725 17b7 FB09     		.2byte	0x9fb
 9726 17b9 761A0000 		.4byte	0x1a76
 9727 17bd 28100000 		.4byte	.LLST41
 9728 17c1 34       		.uleb128 0x34
 9729 17c2 D20D0000 		.4byte	.LASF492
 9730 17c6 01       		.byte	0x1
 9731 17c7 FC09     		.2byte	0x9fc
 9732 17c9 2C000000 		.4byte	0x2c
 9733 17cd 14110000 		.4byte	.LLST42
 9734 17d1 35       		.uleb128 0x35
 9735 17d2 100C0000 		.4byte	.LASF478
 9736 17d6 01       		.byte	0x1
 9737 17d7 FD09     		.2byte	0x9fd
 9738 17d9 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 357


 9739 17dd 02       		.uleb128 0x2
 9740 17de 91       		.byte	0x91
 9741 17df 60       		.sleb128 -32
 9742 17e0 31       		.uleb128 0x31
 9743 17e1 68000000 		.4byte	.Ldebug_ranges0+0x68
 9744 17e5 8F180000 		.4byte	0x188f
 9745 17e9 25       		.uleb128 0x25
 9746 17ea 696400   		.ascii	"id\000"
 9747 17ed 01       		.byte	0x1
 9748 17ee 110A     		.2byte	0xa11
 9749 17f0 2C000000 		.4byte	0x2c
 9750 17f4 AD150000 		.4byte	.LLST43
 9751 17f8 34       		.uleb128 0x34
 9752 17f9 0D060000 		.4byte	.LASF493
 9753 17fd 01       		.byte	0x1
 9754 17fe 120A     		.2byte	0xa12
 9755 1800 2C000000 		.4byte	0x2c
 9756 1804 D6150000 		.4byte	.LLST44
 9757 1808 35       		.uleb128 0x35
 9758 1809 3B0E0000 		.4byte	.LASF494
 9759 180d 01       		.byte	0x1
 9760 180e 130A     		.2byte	0xa13
 9761 1810 25000000 		.4byte	0x25
 9762 1814 02       		.uleb128 0x2
 9763 1815 91       		.byte	0x91
 9764 1816 64       		.sleb128 -28
 9765 1817 39       		.uleb128 0x39
 9766 1818 12010000 		.4byte	.LVL198
 9767 181c 49150000 		.4byte	0x1549
 9768 1820 32180000 		.4byte	0x1832
 9769 1824 38       		.uleb128 0x38
 9770 1825 01       		.uleb128 0x1
 9771 1826 52       		.byte	0x52
 9772 1827 02       		.uleb128 0x2
 9773 1828 91       		.byte	0x91
 9774 1829 64       		.sleb128 -28
 9775 182a 38       		.uleb128 0x38
 9776 182b 01       		.uleb128 0x1
 9777 182c 51       		.byte	0x51
 9778 182d 03       		.uleb128 0x3
 9779 182e 91       		.byte	0x91
 9780 182f 44       		.sleb128 -60
 9781 1830 06       		.byte	0x6
 9782 1831 00       		.byte	0
 9783 1832 39       		.uleb128 0x39
 9784 1833 82020000 		.4byte	.LVL244
 9785 1837 15480000 		.4byte	0x4815
 9786 183b 45180000 		.4byte	0x1845
 9787 183f 38       		.uleb128 0x38
 9788 1840 01       		.uleb128 0x1
 9789 1841 52       		.byte	0x52
 9790 1842 01       		.uleb128 0x1
 9791 1843 33       		.byte	0x33
 9792 1844 00       		.byte	0
 9793 1845 39       		.uleb128 0x39
 9794 1846 98020000 		.4byte	.LVL250
 9795 184a 15480000 		.4byte	0x4815
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 358


 9796 184e 58180000 		.4byte	0x1858
 9797 1852 38       		.uleb128 0x38
 9798 1853 01       		.uleb128 0x1
 9799 1854 52       		.byte	0x52
 9800 1855 01       		.uleb128 0x1
 9801 1856 34       		.byte	0x34
 9802 1857 00       		.byte	0
 9803 1858 39       		.uleb128 0x39
 9804 1859 AE020000 		.4byte	.LVL257
 9805 185d 15480000 		.4byte	0x4815
 9806 1861 7E180000 		.4byte	0x187e
 9807 1865 38       		.uleb128 0x38
 9808 1866 01       		.uleb128 0x1
 9809 1867 52       		.byte	0x52
 9810 1868 01       		.uleb128 0x1
 9811 1869 3E       		.byte	0x3e
 9812 186a 38       		.uleb128 0x38
 9813 186b 01       		.uleb128 0x1
 9814 186c 51       		.byte	0x51
 9815 186d 05       		.uleb128 0x5
 9816 186e 03       		.byte	0x3
 9817 186f 20000000 		.4byte	.LC19
 9818 1873 38       		.uleb128 0x38
 9819 1874 01       		.uleb128 0x1
 9820 1875 50       		.byte	0x50
 9821 1876 06       		.uleb128 0x6
 9822 1877 7D       		.byte	0x7d
 9823 1878 00       		.sleb128 0
 9824 1879 06       		.byte	0x6
 9825 187a 75       		.byte	0x75
 9826 187b 00       		.sleb128 0
 9827 187c 22       		.byte	0x22
 9828 187d 00       		.byte	0
 9829 187e 37       		.uleb128 0x37
 9830 187f A4030000 		.4byte	.LVL286
 9831 1883 15480000 		.4byte	0x4815
 9832 1887 38       		.uleb128 0x38
 9833 1888 01       		.uleb128 0x1
 9834 1889 52       		.byte	0x52
 9835 188a 02       		.uleb128 0x2
 9836 188b 77       		.byte	0x77
 9837 188c 00       		.sleb128 0
 9838 188d 00       		.byte	0
 9839 188e 00       		.byte	0
 9840 188f 31       		.uleb128 0x31
 9841 1890 90000000 		.4byte	.Ldebug_ranges0+0x90
 9842 1894 DF190000 		.4byte	0x19df
 9843 1898 34       		.uleb128 0x34
 9844 1899 3B010000 		.4byte	.LASF495
 9845 189d 01       		.byte	0x1
 9846 189e B50A     		.2byte	0xab5
 9847 18a0 2C000000 		.4byte	0x2c
 9848 18a4 3E160000 		.4byte	.LLST45
 9849 18a8 25       		.uleb128 0x25
 9850 18a9 75696400 		.ascii	"uid\000"
 9851 18ad 01       		.byte	0x1
 9852 18ae B60A     		.2byte	0xab6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 359


 9853 18b0 2C000000 		.4byte	0x2c
 9854 18b4 69160000 		.4byte	.LLST46
 9855 18b8 36       		.uleb128 0x36
 9856 18b9 61647600 		.ascii	"adv\000"
 9857 18bd 01       		.byte	0x1
 9858 18be B70A     		.2byte	0xab7
 9859 18c0 25000000 		.4byte	0x25
 9860 18c4 02       		.uleb128 0x2
 9861 18c5 91       		.byte	0x91
 9862 18c6 64       		.sleb128 -28
 9863 18c7 31       		.uleb128 0x31
 9864 18c8 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 9865 18cc 3F190000 		.4byte	0x193f
 9866 18d0 34       		.uleb128 0x34
 9867 18d1 230C0000 		.4byte	.LASF496
 9868 18d5 01       		.byte	0x1
 9869 18d6 DF0A     		.2byte	0xadf
 9870 18d8 A7070000 		.4byte	0x7a7
 9871 18dc A1160000 		.4byte	.LLST47
 9872 18e0 2F       		.uleb128 0x2f
 9873 18e1 DC020000 		.4byte	.LBB48
 9874 18e5 08000000 		.4byte	.LBE48-.LBB48
 9875 18e9 0D190000 		.4byte	0x190d
 9876 18ed 25       		.uleb128 0x25
 9877 18ee 787000   		.ascii	"xp\000"
 9878 18f1 01       		.byte	0x1
 9879 18f2 EB0A     		.2byte	0xaeb
 9880 18f4 B9000000 		.4byte	0xb9
 9881 18f8 F8160000 		.4byte	.LLST48
 9882 18fc 37       		.uleb128 0x37
 9883 18fd E2020000 		.4byte	.LVL269
 9884 1901 32480000 		.4byte	0x4832
 9885 1905 38       		.uleb128 0x38
 9886 1906 01       		.uleb128 0x1
 9887 1907 50       		.byte	0x50
 9888 1908 02       		.uleb128 0x2
 9889 1909 77       		.byte	0x77
 9890 190a 00       		.sleb128 0
 9891 190b 00       		.byte	0
 9892 190c 00       		.byte	0
 9893 190d 39       		.uleb128 0x39
 9894 190e 06020000 		.4byte	.LVL216
 9895 1912 43480000 		.4byte	0x4843
 9896 1916 20190000 		.4byte	0x1920
 9897 191a 38       		.uleb128 0x38
 9898 191b 01       		.uleb128 0x1
 9899 191c 50       		.byte	0x50
 9900 191d 01       		.uleb128 0x1
 9901 191e 38       		.byte	0x38
 9902 191f 00       		.byte	0
 9903 1920 3A       		.uleb128 0x3a
 9904 1921 D6020000 		.4byte	.LVL267
 9905 1925 43480000 		.4byte	0x4843
 9906 1929 37       		.uleb128 0x37
 9907 192a 04030000 		.4byte	.LVL271
 9908 192e 15480000 		.4byte	0x4815
 9909 1932 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 360


 9910 1933 01       		.uleb128 0x1
 9911 1934 51       		.byte	0x51
 9912 1935 07       		.uleb128 0x7
 9913 1936 91       		.byte	0x91
 9914 1937 50       		.sleb128 -48
 9915 1938 06       		.byte	0x6
 9916 1939 91       		.byte	0x91
 9917 193a 54       		.sleb128 -44
 9918 193b 06       		.byte	0x6
 9919 193c 22       		.byte	0x22
 9920 193d 00       		.byte	0
 9921 193e 00       		.byte	0
 9922 193f 39       		.uleb128 0x39
 9923 1940 CC010000 		.4byte	.LVL212
 9924 1944 49150000 		.4byte	0x1549
 9925 1948 5A190000 		.4byte	0x195a
 9926 194c 38       		.uleb128 0x38
 9927 194d 01       		.uleb128 0x1
 9928 194e 52       		.byte	0x52
 9929 194f 02       		.uleb128 0x2
 9930 1950 91       		.byte	0x91
 9931 1951 64       		.sleb128 -28
 9932 1952 38       		.uleb128 0x38
 9933 1953 01       		.uleb128 0x1
 9934 1954 51       		.byte	0x51
 9935 1955 03       		.uleb128 0x3
 9936 1956 91       		.byte	0x91
 9937 1957 44       		.sleb128 -60
 9938 1958 06       		.byte	0x6
 9939 1959 00       		.byte	0
 9940 195a 39       		.uleb128 0x39
 9941 195b FE010000 		.4byte	.LVL214
 9942 195f 15480000 		.4byte	0x4815
 9943 1963 80190000 		.4byte	0x1980
 9944 1967 38       		.uleb128 0x38
 9945 1968 01       		.uleb128 0x1
 9946 1969 52       		.byte	0x52
 9947 196a 01       		.uleb128 0x1
 9948 196b 3E       		.byte	0x3e
 9949 196c 38       		.uleb128 0x38
 9950 196d 01       		.uleb128 0x1
 9951 196e 51       		.byte	0x51
 9952 196f 05       		.uleb128 0x5
 9953 1970 03       		.byte	0x3
 9954 1971 2F000000 		.4byte	.LC21
 9955 1975 38       		.uleb128 0x38
 9956 1976 01       		.uleb128 0x1
 9957 1977 50       		.byte	0x50
 9958 1978 06       		.uleb128 0x6
 9959 1979 7D       		.byte	0x7d
 9960 197a 00       		.sleb128 0
 9961 197b 06       		.byte	0x6
 9962 197c 75       		.byte	0x75
 9963 197d 00       		.sleb128 0
 9964 197e 22       		.byte	0x22
 9965 197f 00       		.byte	0
 9966 1980 39       		.uleb128 0x39
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 361


 9967 1981 2E030000 		.4byte	.LVL273
 9968 1985 15480000 		.4byte	0x4815
 9969 1989 9E190000 		.4byte	0x199e
 9970 198d 38       		.uleb128 0x38
 9971 198e 01       		.uleb128 0x1
 9972 198f 52       		.byte	0x52
 9973 1990 02       		.uleb128 0x2
 9974 1991 77       		.byte	0x77
 9975 1992 00       		.sleb128 0
 9976 1993 38       		.uleb128 0x38
 9977 1994 01       		.uleb128 0x1
 9978 1995 50       		.byte	0x50
 9979 1996 06       		.uleb128 0x6
 9980 1997 7D       		.byte	0x7d
 9981 1998 00       		.sleb128 0
 9982 1999 06       		.byte	0x6
 9983 199a 75       		.byte	0x75
 9984 199b 00       		.sleb128 0
 9985 199c 22       		.byte	0x22
 9986 199d 00       		.byte	0
 9987 199e 39       		.uleb128 0x39
 9988 199f 58030000 		.4byte	.LVL277
 9989 19a3 15480000 		.4byte	0x4815
 9990 19a7 C4190000 		.4byte	0x19c4
 9991 19ab 38       		.uleb128 0x38
 9992 19ac 01       		.uleb128 0x1
 9993 19ad 52       		.byte	0x52
 9994 19ae 01       		.uleb128 0x1
 9995 19af 35       		.byte	0x35
 9996 19b0 38       		.uleb128 0x38
 9997 19b1 01       		.uleb128 0x1
 9998 19b2 51       		.byte	0x51
 9999 19b3 05       		.uleb128 0x5
 10000 19b4 03       		.byte	0x3
 10001 19b5 3E000000 		.4byte	.LC23
 10002 19b9 38       		.uleb128 0x38
 10003 19ba 01       		.uleb128 0x1
 10004 19bb 50       		.byte	0x50
 10005 19bc 06       		.uleb128 0x6
 10006 19bd 7D       		.byte	0x7d
 10007 19be 00       		.sleb128 0
 10008 19bf 06       		.byte	0x6
 10009 19c0 75       		.byte	0x75
 10010 19c1 00       		.sleb128 0
 10011 19c2 22       		.byte	0x22
 10012 19c3 00       		.byte	0
 10013 19c4 37       		.uleb128 0x37
 10014 19c5 70030000 		.4byte	.LVL279
 10015 19c9 15480000 		.4byte	0x4815
 10016 19cd 38       		.uleb128 0x38
 10017 19ce 01       		.uleb128 0x1
 10018 19cf 52       		.byte	0x52
 10019 19d0 02       		.uleb128 0x2
 10020 19d1 77       		.byte	0x77
 10021 19d2 00       		.sleb128 0
 10022 19d3 38       		.uleb128 0x38
 10023 19d4 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 362


 10024 19d5 50       		.byte	0x50
 10025 19d6 06       		.uleb128 0x6
 10026 19d7 7D       		.byte	0x7d
 10027 19d8 00       		.sleb128 0
 10028 19d9 06       		.byte	0x6
 10029 19da 75       		.byte	0x75
 10030 19db 00       		.sleb128 0
 10031 19dc 22       		.byte	0x22
 10032 19dd 00       		.byte	0
 10033 19de 00       		.byte	0
 10034 19df 39       		.uleb128 0x39
 10035 19e0 D8000000 		.4byte	.LVL189
 10036 19e4 49150000 		.4byte	0x1549
 10037 19e8 FA190000 		.4byte	0x19fa
 10038 19ec 38       		.uleb128 0x38
 10039 19ed 01       		.uleb128 0x1
 10040 19ee 52       		.byte	0x52
 10041 19ef 02       		.uleb128 0x2
 10042 19f0 91       		.byte	0x91
 10043 19f1 60       		.sleb128 -32
 10044 19f2 38       		.uleb128 0x38
 10045 19f3 01       		.uleb128 0x1
 10046 19f4 51       		.byte	0x51
 10047 19f5 03       		.uleb128 0x3
 10048 19f6 91       		.byte	0x91
 10049 19f7 44       		.sleb128 -60
 10050 19f8 06       		.byte	0x6
 10051 19f9 00       		.byte	0
 10052 19fa 39       		.uleb128 0x39
 10053 19fb 88010000 		.4byte	.LVL203
 10054 19ff 73160000 		.4byte	0x1673
 10055 1a03 151A0000 		.4byte	0x1a15
 10056 1a07 38       		.uleb128 0x38
 10057 1a08 01       		.uleb128 0x1
 10058 1a09 52       		.byte	0x52
 10059 1a0a 02       		.uleb128 0x2
 10060 1a0b 91       		.byte	0x91
 10061 1a0c 5C       		.sleb128 -36
 10062 1a0d 38       		.uleb128 0x38
 10063 1a0e 01       		.uleb128 0x1
 10064 1a0f 51       		.byte	0x51
 10065 1a10 03       		.uleb128 0x3
 10066 1a11 91       		.byte	0x91
 10067 1a12 44       		.sleb128 -60
 10068 1a13 06       		.byte	0x6
 10069 1a14 00       		.byte	0
 10070 1a15 37       		.uleb128 0x37
 10071 1a16 98010000 		.4byte	.LVL204
 10072 1a1a E4150000 		.4byte	0x15e4
 10073 1a1e 38       		.uleb128 0x38
 10074 1a1f 01       		.uleb128 0x1
 10075 1a20 52       		.byte	0x52
 10076 1a21 02       		.uleb128 0x2
 10077 1a22 91       		.byte	0x91
 10078 1a23 5C       		.sleb128 -36
 10079 1a24 38       		.uleb128 0x38
 10080 1a25 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 363


 10081 1a26 51       		.byte	0x51
 10082 1a27 03       		.uleb128 0x3
 10083 1a28 91       		.byte	0x91
 10084 1a29 44       		.sleb128 -60
 10085 1a2a 06       		.byte	0x6
 10086 1a2b 00       		.byte	0
 10087 1a2c 00       		.byte	0
 10088 1a2d 39       		.uleb128 0x39
 10089 1a2e 44000000 		.4byte	.LVL178
 10090 1a32 49150000 		.4byte	0x1549
 10091 1a36 4A1A0000 		.4byte	0x1a4a
 10092 1a3a 38       		.uleb128 0x38
 10093 1a3b 01       		.uleb128 0x1
 10094 1a3c 52       		.byte	0x52
 10095 1a3d 02       		.uleb128 0x2
 10096 1a3e 91       		.byte	0x91
 10097 1a3f 58       		.sleb128 -40
 10098 1a40 38       		.uleb128 0x38
 10099 1a41 01       		.uleb128 0x1
 10100 1a42 51       		.byte	0x51
 10101 1a43 05       		.uleb128 0x5
 10102 1a44 74       		.byte	0x74
 10103 1a45 00       		.sleb128 0
 10104 1a46 75       		.byte	0x75
 10105 1a47 00       		.sleb128 0
 10106 1a48 22       		.byte	0x22
 10107 1a49 00       		.byte	0
 10108 1a4a 39       		.uleb128 0x39
 10109 1a4b 72000000 		.4byte	.LVL182
 10110 1a4f E4150000 		.4byte	0x15e4
 10111 1a53 651A0000 		.4byte	0x1a65
 10112 1a57 38       		.uleb128 0x38
 10113 1a58 01       		.uleb128 0x1
 10114 1a59 52       		.byte	0x52
 10115 1a5a 02       		.uleb128 0x2
 10116 1a5b 91       		.byte	0x91
 10117 1a5c 58       		.sleb128 -40
 10118 1a5d 38       		.uleb128 0x38
 10119 1a5e 01       		.uleb128 0x1
 10120 1a5f 51       		.byte	0x51
 10121 1a60 03       		.uleb128 0x3
 10122 1a61 91       		.byte	0x91
 10123 1a62 44       		.sleb128 -60
 10124 1a63 06       		.byte	0x6
 10125 1a64 00       		.byte	0
 10126 1a65 37       		.uleb128 0x37
 10127 1a66 8C000000 		.4byte	.LVL183
 10128 1a6a 58480000 		.4byte	0x4858
 10129 1a6e 38       		.uleb128 0x38
 10130 1a6f 01       		.uleb128 0x1
 10131 1a70 52       		.byte	0x52
 10132 1a71 02       		.uleb128 0x2
 10133 1a72 77       		.byte	0x77
 10134 1a73 00       		.sleb128 0
 10135 1a74 00       		.byte	0
 10136 1a75 00       		.byte	0
 10137 1a76 16       		.uleb128 0x16
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 364


 10138 1a77 2C000000 		.4byte	0x2c
 10139 1a7b 861A0000 		.4byte	0x1a86
 10140 1a7f 17       		.uleb128 0x17
 10141 1a80 B2000000 		.4byte	0xb2
 10142 1a84 01       		.byte	0x1
 10143 1a85 00       		.byte	0
 10144 1a86 33       		.uleb128 0x33
 10145 1a87 A0040000 		.4byte	.LASF497
 10146 1a8b 01       		.byte	0x1
 10147 1a8c 4702     		.2byte	0x247
 10148 1a8e 25000000 		.4byte	0x25
 10149 1a92 00000000 		.4byte	.LFB17
 10150 1a96 2A000000 		.4byte	.LFE17-.LFB17
 10151 1a9a 01       		.uleb128 0x1
 10152 1a9b 9C       		.byte	0x9c
 10153 1a9c DD1A0000 		.4byte	0x1add
 10154 1aa0 23       		.uleb128 0x23
 10155 1aa1 241A0000 		.4byte	.LASF460
 10156 1aa5 01       		.byte	0x1
 10157 1aa6 4702     		.2byte	0x247
 10158 1aa8 08110000 		.4byte	0x1108
 10159 1aac 0B170000 		.4byte	.LLST49
 10160 1ab0 22       		.uleb128 0x22
 10161 1ab1 16050000 		.4byte	.LASF481
 10162 1ab5 01       		.byte	0x1
 10163 1ab6 4702     		.2byte	0x247
 10164 1ab8 3E140000 		.4byte	0x143e
 10165 1abc 01       		.uleb128 0x1
 10166 1abd 51       		.byte	0x51
 10167 1abe 22       		.uleb128 0x22
 10168 1abf 99190000 		.4byte	.LASF266
 10169 1ac3 01       		.byte	0x1
 10170 1ac4 4802     		.2byte	0x248
 10171 1ac6 E0130000 		.4byte	0x13e0
 10172 1aca 01       		.uleb128 0x1
 10173 1acb 52       		.byte	0x52
 10174 1acc 25       		.uleb128 0x25
 10175 1acd 69647800 		.ascii	"idx\000"
 10176 1ad1 01       		.byte	0x1
 10177 1ad2 4A02     		.2byte	0x24a
 10178 1ad4 50000000 		.4byte	0x50
 10179 1ad8 5E170000 		.4byte	.LLST50
 10180 1adc 00       		.byte	0
 10181 1add 33       		.uleb128 0x33
 10182 1ade 841C0000 		.4byte	.LASF498
 10183 1ae2 01       		.byte	0x1
 10184 1ae3 8802     		.2byte	0x288
 10185 1ae5 25000000 		.4byte	0x25
 10186 1ae9 00000000 		.4byte	.LFB19
 10187 1aed 70000000 		.4byte	.LFE19-.LFB19
 10188 1af1 01       		.uleb128 0x1
 10189 1af2 9C       		.byte	0x9c
 10190 1af3 BA1B0000 		.4byte	0x1bba
 10191 1af7 2B       		.uleb128 0x2b
 10192 1af8 6D706900 		.ascii	"mpi\000"
 10193 1afc 01       		.byte	0x1
 10194 1afd 8802     		.2byte	0x288
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 365


 10195 1aff BA1B0000 		.4byte	0x1bba
 10196 1b03 C2170000 		.4byte	.LLST51
 10197 1b07 23       		.uleb128 0x23
 10198 1b08 241A0000 		.4byte	.LASF460
 10199 1b0c 01       		.byte	0x1
 10200 1b0d 8802     		.2byte	0x288
 10201 1b0f 08110000 		.4byte	0x1108
 10202 1b13 07180000 		.4byte	.LLST52
 10203 1b17 23       		.uleb128 0x23
 10204 1b18 16050000 		.4byte	.LASF481
 10205 1b1c 01       		.byte	0x1
 10206 1b1d 8802     		.2byte	0x288
 10207 1b1f 3E140000 		.4byte	0x143e
 10208 1b23 57180000 		.4byte	.LLST53
 10209 1b27 23       		.uleb128 0x23
 10210 1b28 540E0000 		.4byte	.LASF283
 10211 1b2c 01       		.byte	0x1
 10212 1b2d 8902     		.2byte	0x289
 10213 1b2f 50000000 		.4byte	0x50
 10214 1b33 9C180000 		.4byte	.LLST54
 10215 1b37 36       		.uleb128 0x36
 10216 1b38 6900     		.ascii	"i\000"
 10217 1b3a 01       		.byte	0x1
 10218 1b3b 8B02     		.2byte	0x28b
 10219 1b3d 50000000 		.4byte	0x50
 10220 1b41 02       		.uleb128 0x2
 10221 1b42 91       		.byte	0x91
 10222 1b43 68       		.sleb128 -24
 10223 1b44 25       		.uleb128 0x25
 10224 1b45 6200     		.ascii	"b\000"
 10225 1b47 01       		.byte	0x1
 10226 1b48 8C02     		.2byte	0x28c
 10227 1b4a 2C000000 		.4byte	0x2c
 10228 1b4e D6180000 		.4byte	.LLST55
 10229 1b52 35       		.uleb128 0x35
 10230 1b53 D5170000 		.4byte	.LASF462
 10231 1b57 01       		.byte	0x1
 10232 1b58 8D02     		.2byte	0x28d
 10233 1b5a 25000000 		.4byte	0x25
 10234 1b5e 02       		.uleb128 0x2
 10235 1b5f 91       		.byte	0x91
 10236 1b60 6C       		.sleb128 -20
 10237 1b61 39       		.uleb128 0x39
 10238 1b62 22000000 		.4byte	.LVL308
 10239 1b66 49150000 		.4byte	0x1549
 10240 1b6a 811B0000 		.4byte	0x1b81
 10241 1b6e 38       		.uleb128 0x38
 10242 1b6f 01       		.uleb128 0x1
 10243 1b70 52       		.byte	0x52
 10244 1b71 02       		.uleb128 0x2
 10245 1b72 91       		.byte	0x91
 10246 1b73 6C       		.sleb128 -20
 10247 1b74 38       		.uleb128 0x38
 10248 1b75 01       		.uleb128 0x1
 10249 1b76 51       		.byte	0x51
 10250 1b77 02       		.uleb128 0x2
 10251 1b78 7D       		.byte	0x7d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 366


 10252 1b79 00       		.sleb128 0
 10253 1b7a 38       		.uleb128 0x38
 10254 1b7b 01       		.uleb128 0x1
 10255 1b7c 50       		.byte	0x50
 10256 1b7d 02       		.uleb128 0x2
 10257 1b7e 74       		.byte	0x74
 10258 1b7f 00       		.sleb128 0
 10259 1b80 00       		.byte	0
 10260 1b81 39       		.uleb128 0x39
 10261 1b82 42000000 		.4byte	.LVL313
 10262 1b86 77480000 		.4byte	0x4877
 10263 1b8a 951B0000 		.4byte	0x1b95
 10264 1b8e 38       		.uleb128 0x38
 10265 1b8f 01       		.uleb128 0x1
 10266 1b90 50       		.byte	0x50
 10267 1b91 02       		.uleb128 0x2
 10268 1b92 75       		.byte	0x75
 10269 1b93 00       		.sleb128 0
 10270 1b94 00       		.byte	0
 10271 1b95 39       		.uleb128 0x39
 10272 1b96 52000000 		.4byte	.LVL314
 10273 1b9a 8C480000 		.4byte	0x488c
 10274 1b9e A91B0000 		.4byte	0x1ba9
 10275 1ba2 38       		.uleb128 0x38
 10276 1ba3 01       		.uleb128 0x1
 10277 1ba4 50       		.byte	0x50
 10278 1ba5 02       		.uleb128 0x2
 10279 1ba6 75       		.byte	0x75
 10280 1ba7 00       		.sleb128 0
 10281 1ba8 00       		.byte	0
 10282 1ba9 37       		.uleb128 0x37
 10283 1baa 5C000000 		.4byte	.LVL315
 10284 1bae B6480000 		.4byte	0x48b6
 10285 1bb2 38       		.uleb128 0x38
 10286 1bb3 01       		.uleb128 0x1
 10287 1bb4 50       		.byte	0x50
 10288 1bb5 02       		.uleb128 0x2
 10289 1bb6 75       		.byte	0x75
 10290 1bb7 00       		.sleb128 0
 10291 1bb8 00       		.byte	0
 10292 1bb9 00       		.byte	0
 10293 1bba 08       		.uleb128 0x8
 10294 1bbb 04       		.byte	0x4
 10295 1bbc A4020000 		.4byte	0x2a4
 10296 1bc0 33       		.uleb128 0x33
 10297 1bc1 EE130000 		.4byte	.LASF499
 10298 1bc5 01       		.byte	0x1
 10299 1bc6 4C04     		.2byte	0x44c
 10300 1bc8 25000000 		.4byte	0x25
 10301 1bcc 00000000 		.4byte	.LFB21
 10302 1bd0 8E000000 		.4byte	.LFE21-.LFB21
 10303 1bd4 01       		.uleb128 0x1
 10304 1bd5 9C       		.byte	0x9c
 10305 1bd6 F01C0000 		.4byte	0x1cf0
 10306 1bda 23       		.uleb128 0x23
 10307 1bdb 241A0000 		.4byte	.LASF460
 10308 1bdf 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 367


 10309 1be0 4C04     		.2byte	0x44c
 10310 1be2 08110000 		.4byte	0x1108
 10311 1be6 19190000 		.4byte	.LLST56
 10312 1bea 23       		.uleb128 0x23
 10313 1beb 16050000 		.4byte	.LASF481
 10314 1bef 01       		.byte	0x1
 10315 1bf0 4C04     		.2byte	0x44c
 10316 1bf2 3E140000 		.4byte	0x143e
 10317 1bf6 69190000 		.4byte	.LLST57
 10318 1bfa 2B       		.uleb128 0x2b
 10319 1bfb 6F696400 		.ascii	"oid\000"
 10320 1bff 01       		.byte	0x1
 10321 1c00 4C04     		.2byte	0x44c
 10322 1c02 3E140000 		.4byte	0x143e
 10323 1c06 AD190000 		.4byte	.LLST58
 10324 1c0a 23       		.uleb128 0x23
 10325 1c0b B7200000 		.4byte	.LASF500
 10326 1c0f 01       		.byte	0x1
 10327 1c10 4D04     		.2byte	0x44d
 10328 1c12 50000000 		.4byte	0x50
 10329 1c16 EF190000 		.4byte	.LLST59
 10330 1c1a 22       		.uleb128 0x22
 10331 1c1b 540E0000 		.4byte	.LASF283
 10332 1c1f 01       		.byte	0x1
 10333 1c20 4D04     		.2byte	0x44d
 10334 1c22 50000000 		.4byte	0x50
 10335 1c26 02       		.uleb128 0x2
 10336 1c27 91       		.byte	0x91
 10337 1c28 00       		.sleb128 0
 10338 1c29 35       		.uleb128 0x35
 10339 1c2a D5170000 		.4byte	.LASF462
 10340 1c2e 01       		.byte	0x1
 10341 1c2f 4F04     		.2byte	0x44f
 10342 1c31 25000000 		.4byte	0x25
 10343 1c35 02       		.uleb128 0x2
 10344 1c36 91       		.byte	0x91
 10345 1c37 5C       		.sleb128 -36
 10346 1c38 36       		.uleb128 0x36
 10347 1c39 6900     		.ascii	"i\000"
 10348 1c3b 01       		.byte	0x1
 10349 1c3c 5004     		.2byte	0x450
 10350 1c3e 50000000 		.4byte	0x50
 10351 1c42 02       		.uleb128 0x2
 10352 1c43 91       		.byte	0x91
 10353 1c44 60       		.sleb128 -32
 10354 1c45 34       		.uleb128 0x34
 10355 1c46 AD120000 		.4byte	.LASF501
 10356 1c4a 01       		.byte	0x1
 10357 1c4b 5204     		.2byte	0x452
 10358 1c4d 50000000 		.4byte	0x50
 10359 1c51 331A0000 		.4byte	.LLST60
 10360 1c55 34       		.uleb128 0x34
 10361 1c56 AE170000 		.4byte	.LASF502
 10362 1c5a 01       		.byte	0x1
 10363 1c5b 5304     		.2byte	0x453
 10364 1c5d 08110000 		.4byte	0x1108
 10365 1c61 5E1A0000 		.4byte	.LLST61
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 368


 10366 1c65 1D       		.uleb128 0x1d
 10367 1c66 6200     		.ascii	"b\000"
 10368 1c68 01       		.byte	0x1
 10369 1c69 5504     		.2byte	0x455
 10370 1c6b 2C000000 		.4byte	0x2c
 10371 1c6f 31       		.uleb128 0x31
 10372 1c70 C0000000 		.4byte	.Ldebug_ranges0+0xc0
 10373 1c74 CC1C0000 		.4byte	0x1ccc
 10374 1c78 34       		.uleb128 0x34
 10375 1c79 4B000000 		.4byte	.LASF503
 10376 1c7d 01       		.byte	0x1
 10377 1c7e 7304     		.2byte	0x473
 10378 1c80 08110000 		.4byte	0x1108
 10379 1c84 761A0000 		.4byte	.LLST62
 10380 1c88 35       		.uleb128 0x35
 10381 1c89 0D1D0000 		.4byte	.LASF504
 10382 1c8d 01       		.byte	0x1
 10383 1c8e 7404     		.2byte	0x474
 10384 1c90 50000000 		.4byte	0x50
 10385 1c94 02       		.uleb128 0x2
 10386 1c95 91       		.byte	0x91
 10387 1c96 64       		.sleb128 -28
 10388 1c97 39       		.uleb128 0x39
 10389 1c98 64000000 		.4byte	.LVL327
 10390 1c9c E6130000 		.4byte	0x13e6
 10391 1ca0 B21C0000 		.4byte	0x1cb2
 10392 1ca4 38       		.uleb128 0x38
 10393 1ca5 01       		.uleb128 0x1
 10394 1ca6 52       		.byte	0x52
 10395 1ca7 02       		.uleb128 0x2
 10396 1ca8 91       		.byte	0x91
 10397 1ca9 64       		.sleb128 -28
 10398 1caa 38       		.uleb128 0x38
 10399 1cab 01       		.uleb128 0x1
 10400 1cac 51       		.byte	0x51
 10401 1cad 03       		.uleb128 0x3
 10402 1cae 7D       		.byte	0x7d
 10403 1caf 00       		.sleb128 0
 10404 1cb0 06       		.byte	0x6
 10405 1cb1 00       		.byte	0
 10406 1cb2 37       		.uleb128 0x37
 10407 1cb3 76000000 		.4byte	.LVL330
 10408 1cb7 C7480000 		.4byte	0x48c7
 10409 1cbb 38       		.uleb128 0x38
 10410 1cbc 01       		.uleb128 0x1
 10411 1cbd 52       		.byte	0x52
 10412 1cbe 02       		.uleb128 0x2
 10413 1cbf 74       		.byte	0x74
 10414 1cc0 00       		.sleb128 0
 10415 1cc1 38       		.uleb128 0x38
 10416 1cc2 01       		.uleb128 0x1
 10417 1cc3 50       		.byte	0x50
 10418 1cc4 05       		.uleb128 0x5
 10419 1cc5 75       		.byte	0x75
 10420 1cc6 00       		.sleb128 0
 10421 1cc7 77       		.byte	0x77
 10422 1cc8 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 369


 10423 1cc9 22       		.byte	0x22
 10424 1cca 00       		.byte	0
 10425 1ccb 00       		.byte	0
 10426 1ccc 37       		.uleb128 0x37
 10427 1ccd 26000000 		.4byte	.LVL322
 10428 1cd1 49150000 		.4byte	0x1549
 10429 1cd5 38       		.uleb128 0x38
 10430 1cd6 01       		.uleb128 0x1
 10431 1cd7 53       		.byte	0x53
 10432 1cd8 03       		.uleb128 0x3
 10433 1cd9 91       		.byte	0x91
 10434 1cda 00       		.sleb128 0
 10435 1cdb 06       		.byte	0x6
 10436 1cdc 38       		.uleb128 0x38
 10437 1cdd 01       		.uleb128 0x1
 10438 1cde 52       		.byte	0x52
 10439 1cdf 02       		.uleb128 0x2
 10440 1ce0 91       		.byte	0x91
 10441 1ce1 5C       		.sleb128 -36
 10442 1ce2 38       		.uleb128 0x38
 10443 1ce3 01       		.uleb128 0x1
 10444 1ce4 51       		.byte	0x51
 10445 1ce5 02       		.uleb128 0x2
 10446 1ce6 91       		.byte	0x91
 10447 1ce7 60       		.sleb128 -32
 10448 1ce8 38       		.uleb128 0x38
 10449 1ce9 01       		.uleb128 0x1
 10450 1cea 50       		.byte	0x50
 10451 1ceb 02       		.uleb128 0x2
 10452 1cec 75       		.byte	0x75
 10453 1ced 00       		.sleb128 0
 10454 1cee 00       		.byte	0
 10455 1cef 00       		.byte	0
 10456 1cf0 33       		.uleb128 0x33
 10457 1cf1 6F060000 		.4byte	.LASF505
 10458 1cf5 01       		.byte	0x1
 10459 1cf6 9D04     		.2byte	0x49d
 10460 1cf8 25000000 		.4byte	0x25
 10461 1cfc 00000000 		.4byte	.LFB22
 10462 1d00 62000000 		.4byte	.LFE22-.LFB22
 10463 1d04 01       		.uleb128 0x1
 10464 1d05 9C       		.byte	0x9c
 10465 1d06 D51D0000 		.4byte	0x1dd5
 10466 1d0a 23       		.uleb128 0x23
 10467 1d0b 241A0000 		.4byte	.LASF460
 10468 1d0f 01       		.byte	0x1
 10469 1d10 9D04     		.2byte	0x49d
 10470 1d12 08110000 		.4byte	0x1108
 10471 1d16 A01A0000 		.4byte	.LLST63
 10472 1d1a 23       		.uleb128 0x23
 10473 1d1b 16050000 		.4byte	.LASF481
 10474 1d1f 01       		.byte	0x1
 10475 1d20 9D04     		.2byte	0x49d
 10476 1d22 3E140000 		.4byte	0x143e
 10477 1d26 CC1A0000 		.4byte	.LLST64
 10478 1d2a 2B       		.uleb128 0x2b
 10479 1d2b 6F696400 		.ascii	"oid\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 370


 10480 1d2f 01       		.byte	0x1
 10481 1d30 9D04     		.2byte	0x49d
 10482 1d32 3E140000 		.4byte	0x143e
 10483 1d36 F81A0000 		.4byte	.LLST65
 10484 1d3a 23       		.uleb128 0x23
 10485 1d3b B7200000 		.4byte	.LASF500
 10486 1d3f 01       		.byte	0x1
 10487 1d40 9E04     		.2byte	0x49e
 10488 1d42 50000000 		.4byte	0x50
 10489 1d46 241B0000 		.4byte	.LLST66
 10490 1d4a 22       		.uleb128 0x22
 10491 1d4b 540E0000 		.4byte	.LASF283
 10492 1d4f 01       		.byte	0x1
 10493 1d50 9E04     		.2byte	0x49e
 10494 1d52 50000000 		.4byte	0x50
 10495 1d56 02       		.uleb128 0x2
 10496 1d57 91       		.byte	0x91
 10497 1d58 00       		.sleb128 0
 10498 1d59 35       		.uleb128 0x35
 10499 1d5a D5170000 		.4byte	.LASF462
 10500 1d5e 01       		.byte	0x1
 10501 1d5f A004     		.2byte	0x4a0
 10502 1d61 25000000 		.4byte	0x25
 10503 1d65 02       		.uleb128 0x2
 10504 1d66 91       		.byte	0x91
 10505 1d67 60       		.sleb128 -32
 10506 1d68 36       		.uleb128 0x36
 10507 1d69 6900     		.ascii	"i\000"
 10508 1d6b 01       		.byte	0x1
 10509 1d6c A104     		.2byte	0x4a1
 10510 1d6e 50000000 		.4byte	0x50
 10511 1d72 02       		.uleb128 0x2
 10512 1d73 91       		.byte	0x91
 10513 1d74 64       		.sleb128 -28
 10514 1d75 25       		.uleb128 0x25
 10515 1d76 6200     		.ascii	"b\000"
 10516 1d78 01       		.byte	0x1
 10517 1d79 A204     		.2byte	0x4a2
 10518 1d7b 2C000000 		.4byte	0x2c
 10519 1d7f 501B0000 		.4byte	.LLST67
 10520 1d83 39       		.uleb128 0x39
 10521 1d84 1E000000 		.4byte	.LVL339
 10522 1d88 E4150000 		.4byte	0x15e4
 10523 1d8c AA1D0000 		.4byte	0x1daa
 10524 1d90 38       		.uleb128 0x38
 10525 1d91 01       		.uleb128 0x1
 10526 1d92 53       		.byte	0x53
 10527 1d93 03       		.uleb128 0x3
 10528 1d94 91       		.byte	0x91
 10529 1d95 00       		.sleb128 0
 10530 1d96 06       		.byte	0x6
 10531 1d97 38       		.uleb128 0x38
 10532 1d98 01       		.uleb128 0x1
 10533 1d99 52       		.byte	0x52
 10534 1d9a 02       		.uleb128 0x2
 10535 1d9b 91       		.byte	0x91
 10536 1d9c 60       		.sleb128 -32
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 371


 10537 1d9d 38       		.uleb128 0x38
 10538 1d9e 01       		.uleb128 0x1
 10539 1d9f 51       		.byte	0x51
 10540 1da0 02       		.uleb128 0x2
 10541 1da1 91       		.byte	0x91
 10542 1da2 64       		.sleb128 -28
 10543 1da3 38       		.uleb128 0x38
 10544 1da4 01       		.uleb128 0x1
 10545 1da5 50       		.byte	0x50
 10546 1da6 02       		.uleb128 0x2
 10547 1da7 74       		.byte	0x74
 10548 1da8 00       		.sleb128 0
 10549 1da9 00       		.byte	0
 10550 1daa 37       		.uleb128 0x37
 10551 1dab 32000000 		.4byte	.LVL340
 10552 1daf C01B0000 		.4byte	0x1bc0
 10553 1db3 38       		.uleb128 0x38
 10554 1db4 01       		.uleb128 0x1
 10555 1db5 53       		.byte	0x53
 10556 1db6 02       		.uleb128 0x2
 10557 1db7 77       		.byte	0x77
 10558 1db8 00       		.sleb128 0
 10559 1db9 38       		.uleb128 0x38
 10560 1dba 01       		.uleb128 0x1
 10561 1dbb 52       		.byte	0x52
 10562 1dbc 02       		.uleb128 0x2
 10563 1dbd 76       		.byte	0x76
 10564 1dbe 00       		.sleb128 0
 10565 1dbf 38       		.uleb128 0x38
 10566 1dc0 01       		.uleb128 0x1
 10567 1dc1 51       		.byte	0x51
 10568 1dc2 02       		.uleb128 0x2
 10569 1dc3 91       		.byte	0x91
 10570 1dc4 64       		.sleb128 -28
 10571 1dc5 38       		.uleb128 0x38
 10572 1dc6 01       		.uleb128 0x1
 10573 1dc7 50       		.byte	0x50
 10574 1dc8 02       		.uleb128 0x2
 10575 1dc9 74       		.byte	0x74
 10576 1dca 00       		.sleb128 0
 10577 1dcb 38       		.uleb128 0x38
 10578 1dcc 02       		.uleb128 0x2
 10579 1dcd 7D       		.byte	0x7d
 10580 1dce 00       		.sleb128 0
 10581 1dcf 03       		.uleb128 0x3
 10582 1dd0 91       		.byte	0x91
 10583 1dd1 00       		.sleb128 0
 10584 1dd2 06       		.byte	0x6
 10585 1dd3 00       		.byte	0
 10586 1dd4 00       		.byte	0
 10587 1dd5 33       		.uleb128 0x33
 10588 1dd6 DB0C0000 		.4byte	.LASF506
 10589 1dda 01       		.byte	0x1
 10590 1ddb 1E05     		.2byte	0x51e
 10591 1ddd 25000000 		.4byte	0x25
 10592 1de1 00000000 		.4byte	.LFB23
 10593 1de5 94000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 372


 10594 1de9 01       		.uleb128 0x1
 10595 1dea 9C       		.byte	0x9c
 10596 1deb 1F1F0000 		.4byte	0x1f1f
 10597 1def 23       		.uleb128 0x23
 10598 1df0 241A0000 		.4byte	.LASF460
 10599 1df4 01       		.byte	0x1
 10600 1df5 1E05     		.2byte	0x51e
 10601 1df7 890B0000 		.4byte	0xb89
 10602 1dfb 861B0000 		.4byte	.LLST68
 10603 1dff 2B       		.uleb128 0x2b
 10604 1e00 737A00   		.ascii	"sz\000"
 10605 1e03 01       		.byte	0x1
 10606 1e04 1E05     		.2byte	0x51e
 10607 1e06 50000000 		.4byte	0x50
 10608 1e0a B21B0000 		.4byte	.LLST69
 10609 1e0e 35       		.uleb128 0x35
 10610 1e0f 16050000 		.4byte	.LASF481
 10611 1e13 01       		.byte	0x1
 10612 1e14 2005     		.2byte	0x520
 10613 1e16 50000000 		.4byte	0x50
 10614 1e1a 02       		.uleb128 0x2
 10615 1e1b 91       		.byte	0x91
 10616 1e1c 60       		.sleb128 -32
 10617 1e1d 36       		.uleb128 0x36
 10618 1e1e 6F696400 		.ascii	"oid\000"
 10619 1e22 01       		.byte	0x1
 10620 1e23 2005     		.2byte	0x520
 10621 1e25 50000000 		.4byte	0x50
 10622 1e29 02       		.uleb128 0x2
 10623 1e2a 91       		.byte	0x91
 10624 1e2b 64       		.sleb128 -28
 10625 1e2c 35       		.uleb128 0x35
 10626 1e2d 99190000 		.4byte	.LASF266
 10627 1e31 01       		.byte	0x1
 10628 1e32 2105     		.2byte	0x521
 10629 1e34 25000000 		.4byte	0x25
 10630 1e38 02       		.uleb128 0x2
 10631 1e39 91       		.byte	0x91
 10632 1e3a 68       		.sleb128 -24
 10633 1e3b 35       		.uleb128 0x35
 10634 1e3c D5170000 		.4byte	.LASF462
 10635 1e40 01       		.byte	0x1
 10636 1e41 2105     		.2byte	0x521
 10637 1e43 25000000 		.4byte	0x25
 10638 1e47 02       		.uleb128 0x2
 10639 1e48 91       		.byte	0x91
 10640 1e49 6C       		.sleb128 -20
 10641 1e4a 39       		.uleb128 0x39
 10642 1e4b 16000000 		.4byte	.LVL352
 10643 1e4f E4150000 		.4byte	0x15e4
 10644 1e53 701E0000 		.4byte	0x1e70
 10645 1e57 38       		.uleb128 0x38
 10646 1e58 01       		.uleb128 0x1
 10647 1e59 53       		.byte	0x53
 10648 1e5a 02       		.uleb128 0x2
 10649 1e5b 75       		.byte	0x75
 10650 1e5c 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 373


 10651 1e5d 38       		.uleb128 0x38
 10652 1e5e 01       		.uleb128 0x1
 10653 1e5f 52       		.byte	0x52
 10654 1e60 02       		.uleb128 0x2
 10655 1e61 91       		.byte	0x91
 10656 1e62 6C       		.sleb128 -20
 10657 1e63 38       		.uleb128 0x38
 10658 1e64 01       		.uleb128 0x1
 10659 1e65 51       		.byte	0x51
 10660 1e66 02       		.uleb128 0x2
 10661 1e67 91       		.byte	0x91
 10662 1e68 60       		.sleb128 -32
 10663 1e69 38       		.uleb128 0x38
 10664 1e6a 01       		.uleb128 0x1
 10665 1e6b 50       		.byte	0x50
 10666 1e6c 02       		.uleb128 0x2
 10667 1e6d 74       		.byte	0x74
 10668 1e6e 00       		.sleb128 0
 10669 1e6f 00       		.byte	0
 10670 1e70 39       		.uleb128 0x39
 10671 1e71 2A000000 		.4byte	.LVL355
 10672 1e75 861A0000 		.4byte	0x1a86
 10673 1e79 901E0000 		.4byte	0x1e90
 10674 1e7d 38       		.uleb128 0x38
 10675 1e7e 01       		.uleb128 0x1
 10676 1e7f 52       		.byte	0x52
 10677 1e80 02       		.uleb128 0x2
 10678 1e81 91       		.byte	0x91
 10679 1e82 68       		.sleb128 -24
 10680 1e83 38       		.uleb128 0x38
 10681 1e84 01       		.uleb128 0x1
 10682 1e85 51       		.byte	0x51
 10683 1e86 02       		.uleb128 0x2
 10684 1e87 91       		.byte	0x91
 10685 1e88 60       		.sleb128 -32
 10686 1e89 38       		.uleb128 0x38
 10687 1e8a 01       		.uleb128 0x1
 10688 1e8b 50       		.byte	0x50
 10689 1e8c 02       		.uleb128 0x2
 10690 1e8d 74       		.byte	0x74
 10691 1e8e 00       		.sleb128 0
 10692 1e8f 00       		.byte	0
 10693 1e90 39       		.uleb128 0x39
 10694 1e91 3C000000 		.4byte	.LVL356
 10695 1e95 F01C0000 		.4byte	0x1cf0
 10696 1e99 BC1E0000 		.4byte	0x1ebc
 10697 1e9d 38       		.uleb128 0x38
 10698 1e9e 01       		.uleb128 0x1
 10699 1e9f 53       		.byte	0x53
 10700 1ea0 01       		.uleb128 0x1
 10701 1ea1 31       		.byte	0x31
 10702 1ea2 38       		.uleb128 0x38
 10703 1ea3 01       		.uleb128 0x1
 10704 1ea4 52       		.byte	0x52
 10705 1ea5 02       		.uleb128 0x2
 10706 1ea6 91       		.byte	0x91
 10707 1ea7 64       		.sleb128 -28
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 374


 10708 1ea8 38       		.uleb128 0x38
 10709 1ea9 01       		.uleb128 0x1
 10710 1eaa 51       		.byte	0x51
 10711 1eab 02       		.uleb128 0x2
 10712 1eac 91       		.byte	0x91
 10713 1ead 60       		.sleb128 -32
 10714 1eae 38       		.uleb128 0x38
 10715 1eaf 01       		.uleb128 0x1
 10716 1eb0 50       		.byte	0x50
 10717 1eb1 02       		.uleb128 0x2
 10718 1eb2 74       		.byte	0x74
 10719 1eb3 00       		.sleb128 0
 10720 1eb4 38       		.uleb128 0x38
 10721 1eb5 02       		.uleb128 0x2
 10722 1eb6 7D       		.byte	0x7d
 10723 1eb7 00       		.sleb128 0
 10724 1eb8 02       		.uleb128 0x2
 10725 1eb9 75       		.byte	0x75
 10726 1eba 00       		.sleb128 0
 10727 1ebb 00       		.byte	0
 10728 1ebc 39       		.uleb128 0x39
 10729 1ebd 58000000 		.4byte	.LVL357
 10730 1ec1 49150000 		.4byte	0x1549
 10731 1ec5 E21E0000 		.4byte	0x1ee2
 10732 1ec9 38       		.uleb128 0x38
 10733 1eca 01       		.uleb128 0x1
 10734 1ecb 53       		.byte	0x53
 10735 1ecc 02       		.uleb128 0x2
 10736 1ecd 75       		.byte	0x75
 10737 1ece 00       		.sleb128 0
 10738 1ecf 38       		.uleb128 0x38
 10739 1ed0 01       		.uleb128 0x1
 10740 1ed1 52       		.byte	0x52
 10741 1ed2 02       		.uleb128 0x2
 10742 1ed3 91       		.byte	0x91
 10743 1ed4 6C       		.sleb128 -20
 10744 1ed5 38       		.uleb128 0x38
 10745 1ed6 01       		.uleb128 0x1
 10746 1ed7 51       		.byte	0x51
 10747 1ed8 02       		.uleb128 0x2
 10748 1ed9 91       		.byte	0x91
 10749 1eda 60       		.sleb128 -32
 10750 1edb 38       		.uleb128 0x38
 10751 1edc 01       		.uleb128 0x1
 10752 1edd 50       		.byte	0x50
 10753 1ede 02       		.uleb128 0x2
 10754 1edf 74       		.byte	0x74
 10755 1ee0 00       		.sleb128 0
 10756 1ee1 00       		.byte	0
 10757 1ee2 39       		.uleb128 0x39
 10758 1ee3 7C000000 		.4byte	.LVL358
 10759 1ee7 49150000 		.4byte	0x1549
 10760 1eeb 081F0000 		.4byte	0x1f08
 10761 1eef 38       		.uleb128 0x38
 10762 1ef0 01       		.uleb128 0x1
 10763 1ef1 53       		.byte	0x53
 10764 1ef2 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 375


 10765 1ef3 75       		.byte	0x75
 10766 1ef4 00       		.sleb128 0
 10767 1ef5 38       		.uleb128 0x38
 10768 1ef6 01       		.uleb128 0x1
 10769 1ef7 52       		.byte	0x52
 10770 1ef8 02       		.uleb128 0x2
 10771 1ef9 91       		.byte	0x91
 10772 1efa 6C       		.sleb128 -20
 10773 1efb 38       		.uleb128 0x38
 10774 1efc 01       		.uleb128 0x1
 10775 1efd 51       		.byte	0x51
 10776 1efe 02       		.uleb128 0x2
 10777 1eff 91       		.byte	0x91
 10778 1f00 60       		.sleb128 -32
 10779 1f01 38       		.uleb128 0x38
 10780 1f02 01       		.uleb128 0x1
 10781 1f03 50       		.byte	0x50
 10782 1f04 02       		.uleb128 0x2
 10783 1f05 74       		.byte	0x74
 10784 1f06 00       		.sleb128 0
 10785 1f07 00       		.byte	0
 10786 1f08 37       		.uleb128 0x37
 10787 1f09 8E000000 		.4byte	.LVL360
 10788 1f0d E6480000 		.4byte	0x48e6
 10789 1f11 38       		.uleb128 0x38
 10790 1f12 01       		.uleb128 0x1
 10791 1f13 52       		.byte	0x52
 10792 1f14 02       		.uleb128 0x2
 10793 1f15 75       		.byte	0x75
 10794 1f16 00       		.sleb128 0
 10795 1f17 38       		.uleb128 0x38
 10796 1f18 01       		.uleb128 0x1
 10797 1f19 50       		.byte	0x50
 10798 1f1a 02       		.uleb128 0x2
 10799 1f1b 74       		.byte	0x74
 10800 1f1c 00       		.sleb128 0
 10801 1f1d 00       		.byte	0
 10802 1f1e 00       		.byte	0
 10803 1f1f 3B       		.uleb128 0x3b
 10804 1f20 C71C0000 		.4byte	.LASF508
 10805 1f24 01       		.byte	0x1
 10806 1f25 0308     		.2byte	0x803
 10807 1f27 00000000 		.4byte	.LFB24
 10808 1f2b E8000000 		.4byte	.LFE24-.LFB24
 10809 1f2f 01       		.uleb128 0x1
 10810 1f30 9C       		.byte	0x9c
 10811 1f31 D51F0000 		.4byte	0x1fd5
 10812 1f35 23       		.uleb128 0x23
 10813 1f36 24080000 		.4byte	.LASF461
 10814 1f3a 01       		.byte	0x1
 10815 1f3b 0308     		.2byte	0x803
 10816 1f3d 60110000 		.4byte	0x1160
 10817 1f41 F71B0000 		.4byte	.LLST70
 10818 1f45 23       		.uleb128 0x23
 10819 1f46 760A0000 		.4byte	.LASF281
 10820 1f4a 01       		.byte	0x1
 10821 1f4b 0308     		.2byte	0x803
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 376


 10822 1f4d 890B0000 		.4byte	0xb89
 10823 1f51 231C0000 		.4byte	.LLST71
 10824 1f55 23       		.uleb128 0x23
 10825 1f56 20020000 		.4byte	.LASF507
 10826 1f5a 01       		.byte	0x1
 10827 1f5b 0308     		.2byte	0x803
 10828 1f5d 50000000 		.4byte	0x50
 10829 1f61 601C0000 		.4byte	.LLST72
 10830 1f65 23       		.uleb128 0x23
 10831 1f66 BA060000 		.4byte	.LASF284
 10832 1f6a 01       		.byte	0x1
 10833 1f6b 0308     		.2byte	0x803
 10834 1f6d B9000000 		.4byte	0xb9
 10835 1f71 9D1C0000 		.4byte	.LLST73
 10836 1f75 39       		.uleb128 0x39
 10837 1f76 5A000000 		.4byte	.LVL370
 10838 1f7a 05490000 		.4byte	0x4905
 10839 1f7e 961F0000 		.4byte	0x1f96
 10840 1f82 38       		.uleb128 0x38
 10841 1f83 01       		.uleb128 0x1
 10842 1f84 52       		.byte	0x52
 10843 1f85 02       		.uleb128 0x2
 10844 1f86 08       		.byte	0x8
 10845 1f87 20       		.byte	0x20
 10846 1f88 38       		.uleb128 0x38
 10847 1f89 01       		.uleb128 0x1
 10848 1f8a 51       		.byte	0x51
 10849 1f8b 02       		.uleb128 0x2
 10850 1f8c 75       		.byte	0x75
 10851 1f8d 00       		.sleb128 0
 10852 1f8e 38       		.uleb128 0x38
 10853 1f8f 01       		.uleb128 0x1
 10854 1f90 50       		.byte	0x50
 10855 1f91 03       		.uleb128 0x3
 10856 1f92 74       		.byte	0x74
 10857 1f93 8405     		.sleb128 644
 10858 1f95 00       		.byte	0
 10859 1f96 39       		.uleb128 0x39
 10860 1f97 8A000000 		.4byte	.LVL371
 10861 1f9b 05490000 		.4byte	0x4905
 10862 1f9f B71F0000 		.4byte	0x1fb7
 10863 1fa3 38       		.uleb128 0x38
 10864 1fa4 01       		.uleb128 0x1
 10865 1fa5 52       		.byte	0x52
 10866 1fa6 02       		.uleb128 0x2
 10867 1fa7 76       		.byte	0x76
 10868 1fa8 00       		.sleb128 0
 10869 1fa9 38       		.uleb128 0x38
 10870 1faa 01       		.uleb128 0x1
 10871 1fab 51       		.byte	0x51
 10872 1fac 02       		.uleb128 0x2
 10873 1fad 75       		.byte	0x75
 10874 1fae 00       		.sleb128 0
 10875 1faf 38       		.uleb128 0x38
 10876 1fb0 01       		.uleb128 0x1
 10877 1fb1 50       		.byte	0x50
 10878 1fb2 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 377


 10879 1fb3 74       		.byte	0x74
 10880 1fb4 C405     		.sleb128 708
 10881 1fb6 00       		.byte	0
 10882 1fb7 37       		.uleb128 0x37
 10883 1fb8 9C000000 		.4byte	.LVL372
 10884 1fbc 05490000 		.4byte	0x4905
 10885 1fc0 38       		.uleb128 0x38
 10886 1fc1 01       		.uleb128 0x1
 10887 1fc2 52       		.byte	0x52
 10888 1fc3 02       		.uleb128 0x2
 10889 1fc4 76       		.byte	0x76
 10890 1fc5 00       		.sleb128 0
 10891 1fc6 38       		.uleb128 0x38
 10892 1fc7 01       		.uleb128 0x1
 10893 1fc8 51       		.byte	0x51
 10894 1fc9 02       		.uleb128 0x2
 10895 1fca 75       		.byte	0x75
 10896 1fcb 00       		.sleb128 0
 10897 1fcc 38       		.uleb128 0x38
 10898 1fcd 01       		.uleb128 0x1
 10899 1fce 50       		.byte	0x50
 10900 1fcf 03       		.uleb128 0x3
 10901 1fd0 74       		.byte	0x74
 10902 1fd1 D905     		.sleb128 729
 10903 1fd3 00       		.byte	0
 10904 1fd4 00       		.byte	0
 10905 1fd5 3B       		.uleb128 0x3b
 10906 1fd6 C50D0000 		.4byte	.LASF509
 10907 1fda 01       		.byte	0x1
 10908 1fdb 7908     		.2byte	0x879
 10909 1fdd 00000000 		.4byte	.LFB25
 10910 1fe1 20000000 		.4byte	.LFE25-.LFB25
 10911 1fe5 01       		.uleb128 0x1
 10912 1fe6 9C       		.byte	0x9c
 10913 1fe7 71200000 		.4byte	0x2071
 10914 1feb 23       		.uleb128 0x23
 10915 1fec 761F0000 		.4byte	.LASF267
 10916 1ff0 01       		.byte	0x1
 10917 1ff1 7908     		.2byte	0x879
 10918 1ff3 A7070000 		.4byte	0x7a7
 10919 1ff7 DA1C0000 		.4byte	.LLST74
 10920 1ffb 23       		.uleb128 0x23
 10921 1ffc BA060000 		.4byte	.LASF284
 10922 2000 01       		.byte	0x1
 10923 2001 7908     		.2byte	0x879
 10924 2003 B9000000 		.4byte	0xb9
 10925 2007 031D0000 		.4byte	.LLST75
 10926 200b 32       		.uleb128 0x32
 10927 200c 08000000 		.4byte	.LBB57
 10928 2010 16000000 		.4byte	.LBE57-.LBB57
 10929 2014 25       		.uleb128 0x25
 10930 2015 746D7000 		.ascii	"tmp\000"
 10931 2019 01       		.byte	0x1
 10932 201a 7E08     		.2byte	0x87e
 10933 201c A7070000 		.4byte	0x7a7
 10934 2020 241D0000 		.4byte	.LLST76
 10935 2024 31       		.uleb128 0x31
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 378


 10936 2025 D8000000 		.4byte	.Ldebug_ranges0+0xd8
 10937 2029 46200000 		.4byte	0x2046
 10938 202d 25       		.uleb128 0x25
 10939 202e 787000   		.ascii	"xp\000"
 10940 2031 01       		.byte	0x1
 10941 2032 8008     		.2byte	0x880
 10942 2034 B9000000 		.4byte	0xb9
 10943 2038 371D0000 		.4byte	.LLST77
 10944 203c 3A       		.uleb128 0x3a
 10945 203d 14000000 		.4byte	.LVL377
 10946 2041 32480000 		.4byte	0x4832
 10947 2045 00       		.byte	0
 10948 2046 32       		.uleb128 0x32
 10949 2047 14000000 		.4byte	.LBB60
 10950 204b 0A000000 		.4byte	.LBE60-.LBB60
 10951 204f 25       		.uleb128 0x25
 10952 2050 787000   		.ascii	"xp\000"
 10953 2053 01       		.byte	0x1
 10954 2054 8108     		.2byte	0x881
 10955 2056 B9000000 		.4byte	0xb9
 10956 205a 4A1D0000 		.4byte	.LLST78
 10957 205e 37       		.uleb128 0x37
 10958 205f 1A000000 		.4byte	.LVL378
 10959 2063 32480000 		.4byte	0x4832
 10960 2067 38       		.uleb128 0x38
 10961 2068 01       		.uleb128 0x1
 10962 2069 50       		.byte	0x50
 10963 206a 02       		.uleb128 0x2
 10964 206b 74       		.byte	0x74
 10965 206c 00       		.sleb128 0
 10966 206d 00       		.byte	0
 10967 206e 00       		.byte	0
 10968 206f 00       		.byte	0
 10969 2070 00       		.byte	0
 10970 2071 3B       		.uleb128 0x3b
 10971 2072 01110000 		.4byte	.LASF510
 10972 2076 01       		.byte	0x1
 10973 2077 8808     		.2byte	0x888
 10974 2079 00000000 		.4byte	.LFB26
 10975 207d 20000000 		.4byte	.LFE26-.LFB26
 10976 2081 01       		.uleb128 0x1
 10977 2082 9C       		.byte	0x9c
 10978 2083 0D210000 		.4byte	0x210d
 10979 2087 23       		.uleb128 0x23
 10980 2088 DB1D0000 		.4byte	.LASF511
 10981 208c 01       		.byte	0x1
 10982 208d 8808     		.2byte	0x888
 10983 208f FB070000 		.4byte	0x7fb
 10984 2093 5D1D0000 		.4byte	.LLST79
 10985 2097 23       		.uleb128 0x23
 10986 2098 BA060000 		.4byte	.LASF284
 10987 209c 01       		.byte	0x1
 10988 209d 8808     		.2byte	0x888
 10989 209f B9000000 		.4byte	0xb9
 10990 20a3 861D0000 		.4byte	.LLST80
 10991 20a7 32       		.uleb128 0x32
 10992 20a8 08000000 		.4byte	.LBB61
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 379


 10993 20ac 16000000 		.4byte	.LBE61-.LBB61
 10994 20b0 25       		.uleb128 0x25
 10995 20b1 746D7000 		.ascii	"tmp\000"
 10996 20b5 01       		.byte	0x1
 10997 20b6 8D08     		.2byte	0x88d
 10998 20b8 FB070000 		.4byte	0x7fb
 10999 20bc A71D0000 		.4byte	.LLST81
 11000 20c0 31       		.uleb128 0x31
 11001 20c1 F0000000 		.4byte	.Ldebug_ranges0+0xf0
 11002 20c5 E2200000 		.4byte	0x20e2
 11003 20c9 25       		.uleb128 0x25
 11004 20ca 787000   		.ascii	"xp\000"
 11005 20cd 01       		.byte	0x1
 11006 20ce 8F08     		.2byte	0x88f
 11007 20d0 B9000000 		.4byte	0xb9
 11008 20d4 BA1D0000 		.4byte	.LLST82
 11009 20d8 3A       		.uleb128 0x3a
 11010 20d9 14000000 		.4byte	.LVL385
 11011 20dd 32480000 		.4byte	0x4832
 11012 20e1 00       		.byte	0
 11013 20e2 32       		.uleb128 0x32
 11014 20e3 14000000 		.4byte	.LBB64
 11015 20e7 0A000000 		.4byte	.LBE64-.LBB64
 11016 20eb 25       		.uleb128 0x25
 11017 20ec 787000   		.ascii	"xp\000"
 11018 20ef 01       		.byte	0x1
 11019 20f0 9008     		.2byte	0x890
 11020 20f2 B9000000 		.4byte	0xb9
 11021 20f6 CD1D0000 		.4byte	.LLST83
 11022 20fa 37       		.uleb128 0x37
 11023 20fb 1A000000 		.4byte	.LVL386
 11024 20ff 32480000 		.4byte	0x4832
 11025 2103 38       		.uleb128 0x38
 11026 2104 01       		.uleb128 0x1
 11027 2105 50       		.byte	0x50
 11028 2106 02       		.uleb128 0x2
 11029 2107 74       		.byte	0x74
 11030 2108 00       		.sleb128 0
 11031 2109 00       		.byte	0
 11032 210a 00       		.byte	0
 11033 210b 00       		.byte	0
 11034 210c 00       		.byte	0
 11035 210d 3B       		.uleb128 0x3b
 11036 210e 1C120000 		.4byte	.LASF512
 11037 2112 01       		.byte	0x1
 11038 2113 9708     		.2byte	0x897
 11039 2115 00000000 		.4byte	.LFB27
 11040 2119 70000000 		.4byte	.LFE27-.LFB27
 11041 211d 01       		.uleb128 0x1
 11042 211e 9C       		.byte	0x9c
 11043 211f A4210000 		.4byte	0x21a4
 11044 2123 23       		.uleb128 0x23
 11045 2124 24080000 		.4byte	.LASF461
 11046 2128 01       		.byte	0x1
 11047 2129 9708     		.2byte	0x897
 11048 212b 60110000 		.4byte	0x1160
 11049 212f E01D0000 		.4byte	.LLST84
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 380


 11050 2133 2F       		.uleb128 0x2f
 11051 2134 0A000000 		.4byte	.LBB65
 11052 2138 0A000000 		.4byte	.LBE65-.LBB65
 11053 213c 59210000 		.4byte	0x2159
 11054 2140 25       		.uleb128 0x25
 11055 2141 787000   		.ascii	"xp\000"
 11056 2144 01       		.byte	0x1
 11057 2145 9A08     		.2byte	0x89a
 11058 2147 B9000000 		.4byte	0xb9
 11059 214b 0C1E0000 		.4byte	.LLST85
 11060 214f 3A       		.uleb128 0x3a
 11061 2150 14000000 		.4byte	.LVL392
 11062 2154 32480000 		.4byte	0x4832
 11063 2158 00       		.byte	0
 11064 2159 2F       		.uleb128 0x2f
 11065 215a 1A000000 		.4byte	.LBB66
 11066 215e 0A000000 		.4byte	.LBE66-.LBB66
 11067 2162 7F210000 		.4byte	0x217f
 11068 2166 25       		.uleb128 0x25
 11069 2167 787000   		.ascii	"xp\000"
 11070 216a 01       		.byte	0x1
 11071 216b 9C08     		.2byte	0x89c
 11072 216d B9000000 		.4byte	0xb9
 11073 2171 1F1E0000 		.4byte	.LLST86
 11074 2175 3A       		.uleb128 0x3a
 11075 2176 24000000 		.4byte	.LVL394
 11076 217a 32480000 		.4byte	0x4832
 11077 217e 00       		.byte	0
 11078 217f 3A       		.uleb128 0x3a
 11079 2180 3E000000 		.4byte	.LVL395
 11080 2184 D51F0000 		.4byte	0x1fd5
 11081 2188 3A       		.uleb128 0x3a
 11082 2189 4E000000 		.4byte	.LVL396
 11083 218d D51F0000 		.4byte	0x1fd5
 11084 2191 3A       		.uleb128 0x3a
 11085 2192 5E000000 		.4byte	.LVL397
 11086 2196 71200000 		.4byte	0x2071
 11087 219a 3A       		.uleb128 0x3a
 11088 219b 6E000000 		.4byte	.LVL398
 11089 219f 71200000 		.4byte	0x2071
 11090 21a3 00       		.byte	0
 11091 21a4 33       		.uleb128 0x33
 11092 21a5 EB1D0000 		.4byte	.LASF513
 11093 21a9 01       		.byte	0x1
 11094 21aa BC0B     		.2byte	0xbbc
 11095 21ac 25000000 		.4byte	0x25
 11096 21b0 00000000 		.4byte	.LFB33
 11097 21b4 24010000 		.4byte	.LFE33-.LFB33
 11098 21b8 01       		.uleb128 0x1
 11099 21b9 9C       		.byte	0x9c
 11100 21ba 4C240000 		.4byte	0x244c
 11101 21be 23       		.uleb128 0x23
 11102 21bf B6210000 		.4byte	.LASF477
 11103 21c3 01       		.byte	0x1
 11104 21c4 BC0B     		.2byte	0xbbc
 11105 21c6 08110000 		.4byte	0x1108
 11106 21ca 321E0000 		.4byte	.LLST87
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 381


 11107 21ce 23       		.uleb128 0x23
 11108 21cf 340E0000 		.4byte	.LASF514
 11109 21d3 01       		.byte	0x1
 11110 21d4 BC0B     		.2byte	0xbbc
 11111 21d6 2C000000 		.4byte	0x2c
 11112 21da 5E1E0000 		.4byte	.LLST88
 11113 21de 23       		.uleb128 0x23
 11114 21df 971F0000 		.4byte	.LASF515
 11115 21e3 01       		.byte	0x1
 11116 21e4 BC0B     		.2byte	0xbbc
 11117 21e6 25000000 		.4byte	0x25
 11118 21ea 7F1E0000 		.4byte	.LLST89
 11119 21ee 35       		.uleb128 0x35
 11120 21ef B3100000 		.4byte	.LASF516
 11121 21f3 01       		.byte	0x1
 11122 21f4 BE0B     		.2byte	0xbbe
 11123 21f6 1F0F0000 		.4byte	0xf1f
 11124 21fa 03       		.uleb128 0x3
 11125 21fb 91       		.byte	0x91
 11126 21fc B47F     		.sleb128 -76
 11127 21fe 35       		.uleb128 0x35
 11128 21ff 90090000 		.4byte	.LASF517
 11129 2203 01       		.byte	0x1
 11130 2204 BF0B     		.2byte	0xbbf
 11131 2206 2A0F0000 		.4byte	0xf2a
 11132 220a 02       		.uleb128 0x2
 11133 220b 91       		.byte	0x91
 11134 220c 44       		.sleb128 -60
 11135 220d 34       		.uleb128 0x34
 11136 220e 54060000 		.4byte	.LASF518
 11137 2212 01       		.byte	0x1
 11138 2213 C00B     		.2byte	0xbc0
 11139 2215 4C240000 		.4byte	0x244c
 11140 2219 AB1E0000 		.4byte	.LLST90
 11141 221d 3C       		.uleb128 0x3c
 11142 221e BF200000 		.4byte	.LASF519
 11143 2222 01       		.byte	0x1
 11144 2223 C10B     		.2byte	0xbc1
 11145 2225 4C240000 		.4byte	0x244c
 11146 2229 00       		.byte	0
 11147 222a 36       		.uleb128 0x36
 11148 222b 6900     		.ascii	"i\000"
 11149 222d 01       		.byte	0x1
 11150 222e C20B     		.2byte	0xbc2
 11151 2230 25000000 		.4byte	0x25
 11152 2234 03       		.uleb128 0x3
 11153 2235 91       		.byte	0x91
 11154 2236 B87F     		.sleb128 -72
 11155 2238 34       		.uleb128 0x34
 11156 2239 DA120000 		.4byte	.LASF520
 11157 223d 01       		.byte	0x1
 11158 223e C30B     		.2byte	0xbc3
 11159 2240 25000000 		.4byte	0x25
 11160 2244 C91E0000 		.4byte	.LLST91
 11161 2248 35       		.uleb128 0x35
 11162 2249 63100000 		.4byte	.LASF521
 11163 224d 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 382


 11164 224e C40B     		.2byte	0xbc4
 11165 2250 25000000 		.4byte	0x25
 11166 2254 03       		.uleb128 0x3
 11167 2255 91       		.byte	0x91
 11168 2256 BC7F     		.sleb128 -68
 11169 2258 35       		.uleb128 0x35
 11170 2259 61160000 		.4byte	.LASF522
 11171 225d 01       		.byte	0x1
 11172 225e C40B     		.2byte	0xbc4
 11173 2260 25000000 		.4byte	0x25
 11174 2264 02       		.uleb128 0x2
 11175 2265 91       		.byte	0x91
 11176 2266 40       		.sleb128 -64
 11177 2267 34       		.uleb128 0x34
 11178 2268 29080000 		.4byte	.LASF523
 11179 226c 01       		.byte	0x1
 11180 226d C50B     		.2byte	0xbc5
 11181 226f 25000000 		.4byte	0x25
 11182 2273 0B1F0000 		.4byte	.LLST92
 11183 2277 3D       		.uleb128 0x3d
 11184 2278 A20F0000 		.4byte	0xfa2
 11185 227c 28000000 		.4byte	.LBB67
 11186 2280 04000000 		.4byte	.LBE67-.LBB67
 11187 2284 01       		.byte	0x1
 11188 2285 D20B     		.2byte	0xbd2
 11189 2287 95220000 		.4byte	0x2295
 11190 228b 27       		.uleb128 0x27
 11191 228c B30F0000 		.4byte	0xfb3
 11192 2290 421F0000 		.4byte	.LLST93
 11193 2294 00       		.byte	0
 11194 2295 3D       		.uleb128 0x3d
 11195 2296 A20F0000 		.4byte	0xfa2
 11196 229a 40000000 		.4byte	.LBB69
 11197 229e 04000000 		.4byte	.LBE69-.LBB69
 11198 22a2 01       		.byte	0x1
 11199 22a3 D80B     		.2byte	0xbd8
 11200 22a5 B3220000 		.4byte	0x22b3
 11201 22a9 27       		.uleb128 0x27
 11202 22aa B30F0000 		.4byte	0xfb3
 11203 22ae 561F0000 		.4byte	.LLST94
 11204 22b2 00       		.byte	0
 11205 22b3 3D       		.uleb128 0x3d
 11206 22b4 A20F0000 		.4byte	0xfa2
 11207 22b8 4E000000 		.4byte	.LBB71
 11208 22bc 04000000 		.4byte	.LBE71-.LBB71
 11209 22c0 01       		.byte	0x1
 11210 22c1 D90B     		.2byte	0xbd9
 11211 22c3 D1220000 		.4byte	0x22d1
 11212 22c7 27       		.uleb128 0x27
 11213 22c8 B30F0000 		.4byte	0xfb3
 11214 22cc 8C1F0000 		.4byte	.LLST95
 11215 22d0 00       		.byte	0
 11216 22d1 3D       		.uleb128 0x3d
 11217 22d2 AA120000 		.4byte	0x12aa
 11218 22d6 02010000 		.4byte	.LBB73
 11219 22da 02000000 		.4byte	.LBE73-.LBB73
 11220 22de 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 383


 11221 22df F80B     		.2byte	0xbf8
 11222 22e1 F0220000 		.4byte	0x22f0
 11223 22e5 29       		.uleb128 0x29
 11224 22e6 C5120000 		.4byte	0x12c5
 11225 22ea 29       		.uleb128 0x29
 11226 22eb BB120000 		.4byte	0x12bb
 11227 22ef 00       		.byte	0
 11228 22f0 39       		.uleb128 0x39
 11229 22f1 18000000 		.4byte	.LVL404
 11230 22f5 22490000 		.4byte	0x4922
 11231 22f9 04230000 		.4byte	0x2304
 11232 22fd 38       		.uleb128 0x38
 11233 22fe 01       		.uleb128 0x1
 11234 22ff 50       		.byte	0x50
 11235 2300 02       		.uleb128 0x2
 11236 2301 75       		.byte	0x75
 11237 2302 00       		.sleb128 0
 11238 2303 00       		.byte	0
 11239 2304 39       		.uleb128 0x39
 11240 2305 24000000 		.4byte	.LVL405
 11241 2309 05490000 		.4byte	0x4905
 11242 230d 24230000 		.4byte	0x2324
 11243 2311 38       		.uleb128 0x38
 11244 2312 01       		.uleb128 0x1
 11245 2313 52       		.byte	0x52
 11246 2314 02       		.uleb128 0x2
 11247 2315 08       		.byte	0x8
 11248 2316 24       		.byte	0x24
 11249 2317 38       		.uleb128 0x38
 11250 2318 01       		.uleb128 0x1
 11251 2319 51       		.byte	0x51
 11252 231a 02       		.uleb128 0x2
 11253 231b 75       		.byte	0x75
 11254 231c 00       		.sleb128 0
 11255 231d 38       		.uleb128 0x38
 11256 231e 01       		.uleb128 0x1
 11257 231f 50       		.byte	0x50
 11258 2320 02       		.uleb128 0x2
 11259 2321 91       		.byte	0x91
 11260 2322 44       		.sleb128 -60
 11261 2323 00       		.byte	0
 11262 2324 39       		.uleb128 0x39
 11263 2325 62000000 		.4byte	.LVL413
 11264 2329 5B130000 		.4byte	0x135b
 11265 232d 45230000 		.4byte	0x2345
 11266 2331 38       		.uleb128 0x38
 11267 2332 01       		.uleb128 0x1
 11268 2333 52       		.byte	0x52
 11269 2334 03       		.uleb128 0x3
 11270 2335 91       		.byte	0x91
 11271 2336 B87F     		.sleb128 -72
 11272 2338 38       		.uleb128 0x38
 11273 2339 01       		.uleb128 0x1
 11274 233a 51       		.byte	0x51
 11275 233b 02       		.uleb128 0x2
 11276 233c 74       		.byte	0x74
 11277 233d 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 384


 11278 233e 38       		.uleb128 0x38
 11279 233f 01       		.uleb128 0x1
 11280 2340 50       		.byte	0x50
 11281 2341 02       		.uleb128 0x2
 11282 2342 91       		.byte	0x91
 11283 2343 58       		.sleb128 -40
 11284 2344 00       		.byte	0
 11285 2345 39       		.uleb128 0x39
 11286 2346 78000000 		.4byte	.LVL414
 11287 234a 5B130000 		.4byte	0x135b
 11288 234e 66230000 		.4byte	0x2366
 11289 2352 38       		.uleb128 0x38
 11290 2353 01       		.uleb128 0x1
 11291 2354 52       		.byte	0x52
 11292 2355 03       		.uleb128 0x3
 11293 2356 91       		.byte	0x91
 11294 2357 B87F     		.sleb128 -72
 11295 2359 38       		.uleb128 0x38
 11296 235a 01       		.uleb128 0x1
 11297 235b 51       		.byte	0x51
 11298 235c 02       		.uleb128 0x2
 11299 235d 74       		.byte	0x74
 11300 235e 00       		.sleb128 0
 11301 235f 38       		.uleb128 0x38
 11302 2360 01       		.uleb128 0x1
 11303 2361 50       		.byte	0x50
 11304 2362 02       		.uleb128 0x2
 11305 2363 91       		.byte	0x91
 11306 2364 54       		.sleb128 -44
 11307 2365 00       		.byte	0
 11308 2366 39       		.uleb128 0x39
 11309 2367 8A000000 		.4byte	.LVL415
 11310 236b 5B130000 		.4byte	0x135b
 11311 236f 87230000 		.4byte	0x2387
 11312 2373 38       		.uleb128 0x38
 11313 2374 01       		.uleb128 0x1
 11314 2375 52       		.byte	0x52
 11315 2376 03       		.uleb128 0x3
 11316 2377 91       		.byte	0x91
 11317 2378 B87F     		.sleb128 -72
 11318 237a 38       		.uleb128 0x38
 11319 237b 01       		.uleb128 0x1
 11320 237c 51       		.byte	0x51
 11321 237d 02       		.uleb128 0x2
 11322 237e 74       		.byte	0x74
 11323 237f 00       		.sleb128 0
 11324 2380 38       		.uleb128 0x38
 11325 2381 01       		.uleb128 0x1
 11326 2382 50       		.byte	0x50
 11327 2383 02       		.uleb128 0x2
 11328 2384 91       		.byte	0x91
 11329 2385 50       		.sleb128 -48
 11330 2386 00       		.byte	0
 11331 2387 39       		.uleb128 0x39
 11332 2388 94000000 		.4byte	.LVL416
 11333 238c 5B130000 		.4byte	0x135b
 11334 2390 A8230000 		.4byte	0x23a8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 385


 11335 2394 38       		.uleb128 0x38
 11336 2395 01       		.uleb128 0x1
 11337 2396 52       		.byte	0x52
 11338 2397 03       		.uleb128 0x3
 11339 2398 91       		.byte	0x91
 11340 2399 B87F     		.sleb128 -72
 11341 239b 38       		.uleb128 0x38
 11342 239c 01       		.uleb128 0x1
 11343 239d 51       		.byte	0x51
 11344 239e 02       		.uleb128 0x2
 11345 239f 74       		.byte	0x74
 11346 23a0 00       		.sleb128 0
 11347 23a1 38       		.uleb128 0x38
 11348 23a2 01       		.uleb128 0x1
 11349 23a3 50       		.byte	0x50
 11350 23a4 02       		.uleb128 0x2
 11351 23a5 91       		.byte	0x91
 11352 23a6 4C       		.sleb128 -52
 11353 23a7 00       		.byte	0
 11354 23a8 39       		.uleb128 0x39
 11355 23a9 9E000000 		.4byte	.LVL417
 11356 23ad 5B130000 		.4byte	0x135b
 11357 23b1 C9230000 		.4byte	0x23c9
 11358 23b5 38       		.uleb128 0x38
 11359 23b6 01       		.uleb128 0x1
 11360 23b7 52       		.byte	0x52
 11361 23b8 03       		.uleb128 0x3
 11362 23b9 91       		.byte	0x91
 11363 23ba B87F     		.sleb128 -72
 11364 23bc 38       		.uleb128 0x38
 11365 23bd 01       		.uleb128 0x1
 11366 23be 51       		.byte	0x51
 11367 23bf 02       		.uleb128 0x2
 11368 23c0 74       		.byte	0x74
 11369 23c1 00       		.sleb128 0
 11370 23c2 38       		.uleb128 0x38
 11371 23c3 01       		.uleb128 0x1
 11372 23c4 50       		.byte	0x50
 11373 23c5 02       		.uleb128 0x2
 11374 23c6 91       		.byte	0x91
 11375 23c7 48       		.sleb128 -56
 11376 23c8 00       		.byte	0
 11377 23c9 39       		.uleb128 0x39
 11378 23ca A8000000 		.4byte	.LVL418
 11379 23ce 5B130000 		.4byte	0x135b
 11380 23d2 EA230000 		.4byte	0x23ea
 11381 23d6 38       		.uleb128 0x38
 11382 23d7 01       		.uleb128 0x1
 11383 23d8 52       		.byte	0x52
 11384 23d9 03       		.uleb128 0x3
 11385 23da 91       		.byte	0x91
 11386 23db B87F     		.sleb128 -72
 11387 23dd 38       		.uleb128 0x38
 11388 23de 01       		.uleb128 0x1
 11389 23df 51       		.byte	0x51
 11390 23e0 02       		.uleb128 0x2
 11391 23e1 74       		.byte	0x74
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 386


 11392 23e2 00       		.sleb128 0
 11393 23e3 38       		.uleb128 0x38
 11394 23e4 01       		.uleb128 0x1
 11395 23e5 50       		.byte	0x50
 11396 23e6 02       		.uleb128 0x2
 11397 23e7 91       		.byte	0x91
 11398 23e8 44       		.sleb128 -60
 11399 23e9 00       		.byte	0
 11400 23ea 39       		.uleb128 0x39
 11401 23eb CE000000 		.4byte	.LVL420
 11402 23ef 5B130000 		.4byte	0x135b
 11403 23f3 0C240000 		.4byte	0x240c
 11404 23f7 38       		.uleb128 0x38
 11405 23f8 01       		.uleb128 0x1
 11406 23f9 52       		.byte	0x52
 11407 23fa 03       		.uleb128 0x3
 11408 23fb 91       		.byte	0x91
 11409 23fc B87F     		.sleb128 -72
 11410 23fe 38       		.uleb128 0x38
 11411 23ff 01       		.uleb128 0x1
 11412 2400 51       		.byte	0x51
 11413 2401 02       		.uleb128 0x2
 11414 2402 74       		.byte	0x74
 11415 2403 00       		.sleb128 0
 11416 2404 38       		.uleb128 0x38
 11417 2405 01       		.uleb128 0x1
 11418 2406 50       		.byte	0x50
 11419 2407 03       		.uleb128 0x3
 11420 2408 91       		.byte	0x91
 11421 2409 BC7F     		.sleb128 -68
 11422 240b 00       		.byte	0
 11423 240c 39       		.uleb128 0x39
 11424 240d D8000000 		.4byte	.LVL421
 11425 2411 5B130000 		.4byte	0x135b
 11426 2415 2D240000 		.4byte	0x242d
 11427 2419 38       		.uleb128 0x38
 11428 241a 01       		.uleb128 0x1
 11429 241b 52       		.byte	0x52
 11430 241c 03       		.uleb128 0x3
 11431 241d 91       		.byte	0x91
 11432 241e B87F     		.sleb128 -72
 11433 2420 38       		.uleb128 0x38
 11434 2421 01       		.uleb128 0x1
 11435 2422 51       		.byte	0x51
 11436 2423 02       		.uleb128 0x2
 11437 2424 74       		.byte	0x74
 11438 2425 00       		.sleb128 0
 11439 2426 38       		.uleb128 0x38
 11440 2427 01       		.uleb128 0x1
 11441 2428 50       		.byte	0x50
 11442 2429 02       		.uleb128 0x2
 11443 242a 91       		.byte	0x91
 11444 242b 40       		.sleb128 -64
 11445 242c 00       		.byte	0
 11446 242d 39       		.uleb128 0x39
 11447 242e FE000000 		.4byte	.LVL429
 11448 2432 3D490000 		.4byte	0x493d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 387


 11449 2436 42240000 		.4byte	0x2442
 11450 243a 38       		.uleb128 0x38
 11451 243b 01       		.uleb128 0x1
 11452 243c 50       		.byte	0x50
 11453 243d 03       		.uleb128 0x3
 11454 243e 91       		.byte	0x91
 11455 243f B47F     		.sleb128 -76
 11456 2441 00       		.byte	0
 11457 2442 3A       		.uleb128 0x3a
 11458 2443 10010000 		.4byte	.LVL433
 11459 2447 44140000 		.4byte	0x1444
 11460 244b 00       		.byte	0
 11461 244c 08       		.uleb128 0x8
 11462 244d 04       		.byte	0x4
 11463 244e 2A0F0000 		.4byte	0xf2a
 11464 2452 2A       		.uleb128 0x2a
 11465 2453 EC1F0000 		.4byte	.LASF524
 11466 2457 01       		.byte	0x1
 11467 2458 040C     		.2byte	0xc04
 11468 245a 25000000 		.4byte	0x25
 11469 245e 00000000 		.4byte	.LFB34
 11470 2462 B2000000 		.4byte	.LFE34-.LFB34
 11471 2466 01       		.uleb128 0x1
 11472 2467 9C       		.byte	0x9c
 11473 2468 1D250000 		.4byte	0x251d
 11474 246c 23       		.uleb128 0x23
 11475 246d 24080000 		.4byte	.LASF461
 11476 2471 01       		.byte	0x1
 11477 2472 040C     		.2byte	0xc04
 11478 2474 60110000 		.4byte	0x1160
 11479 2478 B81F0000 		.4byte	.LLST96
 11480 247c 23       		.uleb128 0x23
 11481 247d 971F0000 		.4byte	.LASF515
 11482 2481 01       		.byte	0x1
 11483 2482 040C     		.2byte	0xc04
 11484 2484 25000000 		.4byte	0x25
 11485 2488 E41F0000 		.4byte	.LLST97
 11486 248c 35       		.uleb128 0x35
 11487 248d D5170000 		.4byte	.LASF462
 11488 2491 01       		.byte	0x1
 11489 2492 060C     		.2byte	0xc06
 11490 2494 25000000 		.4byte	0x25
 11491 2498 02       		.uleb128 0x2
 11492 2499 91       		.byte	0x91
 11493 249a 44       		.sleb128 -60
 11494 249b 35       		.uleb128 0x35
 11495 249c B6210000 		.4byte	.LASF477
 11496 24a0 01       		.byte	0x1
 11497 24a1 070C     		.2byte	0xc07
 11498 24a3 AF0B0000 		.4byte	0xbaf
 11499 24a7 02       		.uleb128 0x2
 11500 24a8 91       		.byte	0x91
 11501 24a9 48       		.sleb128 -56
 11502 24aa 36       		.uleb128 0x36
 11503 24ab 6200     		.ascii	"b\000"
 11504 24ad 01       		.byte	0x1
 11505 24ae 080C     		.2byte	0xc08
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 388


 11506 24b0 2C000000 		.4byte	0x2c
 11507 24b4 03       		.uleb128 0x3
 11508 24b5 91       		.byte	0x91
 11509 24b6 BC7F     		.sleb128 -68
 11510 24b8 34       		.uleb128 0x34
 11511 24b9 12140000 		.4byte	.LASF525
 11512 24bd 01       		.byte	0x1
 11513 24be 090C     		.2byte	0xc09
 11514 24c0 50000000 		.4byte	0x50
 11515 24c4 34200000 		.4byte	.LLST98
 11516 24c8 39       		.uleb128 0x39
 11517 24c9 4E000000 		.4byte	.LVL442
 11518 24cd 49150000 		.4byte	0x1549
 11519 24d1 E3240000 		.4byte	0x24e3
 11520 24d5 38       		.uleb128 0x38
 11521 24d6 01       		.uleb128 0x1
 11522 24d7 52       		.byte	0x52
 11523 24d8 02       		.uleb128 0x2
 11524 24d9 91       		.byte	0x91
 11525 24da 44       		.sleb128 -60
 11526 24db 38       		.uleb128 0x38
 11527 24dc 01       		.uleb128 0x1
 11528 24dd 51       		.byte	0x51
 11529 24de 03       		.uleb128 0x3
 11530 24df 74       		.byte	0x74
 11531 24e0 F804     		.sleb128 632
 11532 24e2 00       		.byte	0
 11533 24e3 39       		.uleb128 0x39
 11534 24e4 70000000 		.4byte	.LVL443
 11535 24e8 15480000 		.4byte	0x4815
 11536 24ec FD240000 		.4byte	0x24fd
 11537 24f0 38       		.uleb128 0x38
 11538 24f1 01       		.uleb128 0x1
 11539 24f2 52       		.byte	0x52
 11540 24f3 02       		.uleb128 0x2
 11541 24f4 76       		.byte	0x76
 11542 24f5 00       		.sleb128 0
 11543 24f6 38       		.uleb128 0x38
 11544 24f7 01       		.uleb128 0x1
 11545 24f8 50       		.byte	0x50
 11546 24f9 02       		.uleb128 0x2
 11547 24fa 91       		.byte	0x91
 11548 24fb 48       		.sleb128 -56
 11549 24fc 00       		.byte	0
 11550 24fd 37       		.uleb128 0x37
 11551 24fe 92000000 		.4byte	.LVL444
 11552 2502 A4210000 		.4byte	0x21a4
 11553 2506 38       		.uleb128 0x38
 11554 2507 01       		.uleb128 0x1
 11555 2508 52       		.byte	0x52
 11556 2509 02       		.uleb128 0x2
 11557 250a 77       		.byte	0x77
 11558 250b 00       		.sleb128 0
 11559 250c 38       		.uleb128 0x38
 11560 250d 01       		.uleb128 0x1
 11561 250e 51       		.byte	0x51
 11562 250f 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 389


 11563 2510 91       		.byte	0x91
 11564 2511 BC7F     		.sleb128 -68
 11565 2513 94       		.byte	0x94
 11566 2514 01       		.byte	0x1
 11567 2515 38       		.uleb128 0x38
 11568 2516 01       		.uleb128 0x1
 11569 2517 50       		.byte	0x50
 11570 2518 02       		.uleb128 0x2
 11571 2519 91       		.byte	0x91
 11572 251a 48       		.sleb128 -56
 11573 251b 00       		.byte	0
 11574 251c 00       		.byte	0
 11575 251d 19       		.uleb128 0x19
 11576 251e 2D0C0000 		.4byte	.LASF526
 11577 2522 01       		.byte	0x1
 11578 2523 B508     		.2byte	0x8b5
 11579 2525 25000000 		.4byte	0x25
 11580 2529 01       		.byte	0x1
 11581 252a 77250000 		.4byte	0x2577
 11582 252e 1B       		.uleb128 0x1b
 11583 252f 24080000 		.4byte	.LASF461
 11584 2533 01       		.byte	0x1
 11585 2534 B508     		.2byte	0x8b5
 11586 2536 60110000 		.4byte	0x1160
 11587 253a 1D       		.uleb128 0x1d
 11588 253b 72657400 		.ascii	"ret\000"
 11589 253f 01       		.byte	0x1
 11590 2540 B708     		.2byte	0x8b7
 11591 2542 25000000 		.4byte	0x25
 11592 2546 1D       		.uleb128 0x1d
 11593 2547 6C656E00 		.ascii	"len\000"
 11594 254b 01       		.byte	0x1
 11595 254c B708     		.2byte	0x8b7
 11596 254e 25000000 		.4byte	0x25
 11597 2552 1E       		.uleb128 0x1e
 11598 2553 32150000 		.4byte	.LASF527
 11599 2557 01       		.byte	0x1
 11600 2558 B808     		.2byte	0x8b8
 11601 255a AF0B0000 		.4byte	0xbaf
 11602 255e 1E       		.uleb128 0x1e
 11603 255f 1C090000 		.4byte	.LASF528
 11604 2563 01       		.byte	0x1
 11605 2564 BC08     		.2byte	0x8bc
 11606 2566 A4020000 		.4byte	0x2a4
 11607 256a 1D       		.uleb128 0x1d
 11608 256b 6D706900 		.ascii	"mpi\000"
 11609 256f 01       		.byte	0x1
 11610 2570 BD08     		.2byte	0x8bd
 11611 2572 BA1B0000 		.4byte	0x1bba
 11612 2576 00       		.byte	0
 11613 2577 19       		.uleb128 0x19
 11614 2578 3A130000 		.4byte	.LASF529
 11615 257c 01       		.byte	0x1
 11616 257d 7702     		.2byte	0x277
 11617 257f 25000000 		.4byte	0x25
 11618 2583 01       		.byte	0x1
 11619 2584 B9250000 		.4byte	0x25b9
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 390


 11620 2588 1B       		.uleb128 0x1b
 11621 2589 241A0000 		.4byte	.LASF460
 11622 258d 01       		.byte	0x1
 11623 258e 7702     		.2byte	0x277
 11624 2590 08110000 		.4byte	0x1108
 11625 2594 1B       		.uleb128 0x1b
 11626 2595 16050000 		.4byte	.LASF481
 11627 2599 01       		.byte	0x1
 11628 259a 7702     		.2byte	0x277
 11629 259c 3E140000 		.4byte	0x143e
 11630 25a0 1B       		.uleb128 0x1b
 11631 25a1 99190000 		.4byte	.LASF266
 11632 25a5 01       		.byte	0x1
 11633 25a6 7702     		.2byte	0x277
 11634 25a8 E0130000 		.4byte	0x13e0
 11635 25ac 1D       		.uleb128 0x1d
 11636 25ad 69647800 		.ascii	"idx\000"
 11637 25b1 01       		.byte	0x1
 11638 25b2 7902     		.2byte	0x279
 11639 25b4 50000000 		.4byte	0x50
 11640 25b8 00       		.byte	0
 11641 25b9 19       		.uleb128 0x19
 11642 25ba 08210000 		.4byte	.LASF530
 11643 25be 01       		.byte	0x1
 11644 25bf 2E0C     		.2byte	0xc2e
 11645 25c1 25000000 		.4byte	0x25
 11646 25c5 01       		.byte	0x1
 11647 25c6 FB250000 		.4byte	0x25fb
 11648 25ca 1B       		.uleb128 0x1b
 11649 25cb 24080000 		.4byte	.LASF461
 11650 25cf 01       		.byte	0x1
 11651 25d0 2E0C     		.2byte	0xc2e
 11652 25d2 60110000 		.4byte	0x1160
 11653 25d6 1B       		.uleb128 0x1b
 11654 25d7 A8160000 		.4byte	.LASF280
 11655 25db 01       		.byte	0x1
 11656 25dc 2E0C     		.2byte	0xc2e
 11657 25de 25000000 		.4byte	0x25
 11658 25e2 1E       		.uleb128 0x1e
 11659 25e3 D5170000 		.4byte	.LASF462
 11660 25e7 01       		.byte	0x1
 11661 25e8 300C     		.2byte	0xc30
 11662 25ea 25000000 		.4byte	0x25
 11663 25ee 1E       		.uleb128 0x1e
 11664 25ef FA090000 		.4byte	.LASF472
 11665 25f3 01       		.byte	0x1
 11666 25f4 310C     		.2byte	0xc31
 11667 25f6 25000000 		.4byte	0x25
 11668 25fa 00       		.byte	0
 11669 25fb 19       		.uleb128 0x19
 11670 25fc 09170000 		.4byte	.LASF531
 11671 2600 01       		.byte	0x1
 11672 2601 2909     		.2byte	0x929
 11673 2603 25000000 		.4byte	0x25
 11674 2607 01       		.byte	0x1
 11675 2608 25260000 		.4byte	0x2625
 11676 260c 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 391


 11677 260d 24080000 		.4byte	.LASF461
 11678 2611 01       		.byte	0x1
 11679 2612 2909     		.2byte	0x929
 11680 2614 60110000 		.4byte	0x1160
 11681 2618 1E       		.uleb128 0x1e
 11682 2619 D5170000 		.4byte	.LASF462
 11683 261d 01       		.byte	0x1
 11684 261e 2B09     		.2byte	0x92b
 11685 2620 25000000 		.4byte	0x25
 11686 2624 00       		.byte	0
 11687 2625 2C       		.uleb128 0x2c
 11688 2626 DB120000 		.4byte	0x12db
 11689 262a 00000000 		.4byte	.LFB36
 11690 262e 4A010000 		.4byte	.LFE36-.LFB36
 11691 2632 01       		.uleb128 0x1
 11692 2633 9C       		.byte	0x9c
 11693 2634 22290000 		.4byte	0x2922
 11694 2638 27       		.uleb128 0x27
 11695 2639 EC120000 		.4byte	0x12ec
 11696 263d 6C200000 		.4byte	.LLST99
 11697 2641 27       		.uleb128 0x27
 11698 2642 F8120000 		.4byte	0x12f8
 11699 2646 A6200000 		.4byte	.LLST100
 11700 264a 3E       		.uleb128 0x3e
 11701 264b 04130000 		.4byte	0x1304
 11702 264f 00       		.byte	0
 11703 2650 30       		.uleb128 0x30
 11704 2651 10130000 		.4byte	0x1310
 11705 2655 C7200000 		.4byte	.LLST101
 11706 2659 26       		.uleb128 0x26
 11707 265a 1D250000 		.4byte	0x251d
 11708 265e 00000000 		.4byte	.LBB85
 11709 2662 08010000 		.4byte	.Ldebug_ranges0+0x108
 11710 2666 01       		.byte	0x1
 11711 2667 480C     		.2byte	0xc48
 11712 2669 B1270000 		.4byte	0x27b1
 11713 266d 27       		.uleb128 0x27
 11714 266e 2E250000 		.4byte	0x252e
 11715 2672 6C200000 		.4byte	.LLST99
 11716 2676 2E       		.uleb128 0x2e
 11717 2677 08010000 		.4byte	.Ldebug_ranges0+0x108
 11718 267b 30       		.uleb128 0x30
 11719 267c 3A250000 		.4byte	0x253a
 11720 2680 FB200000 		.4byte	.LLST103
 11721 2684 3F       		.uleb128 0x3f
 11722 2685 46250000 		.4byte	0x2546
 11723 2689 03       		.uleb128 0x3
 11724 268a 91       		.byte	0x91
 11725 268b B47F     		.sleb128 -76
 11726 268d 3F       		.uleb128 0x3f
 11727 268e 52250000 		.4byte	0x2552
 11728 2692 02       		.uleb128 0x2
 11729 2693 91       		.byte	0x91
 11730 2694 48       		.sleb128 -56
 11731 2695 3F       		.uleb128 0x3f
 11732 2696 5E250000 		.4byte	0x255e
 11733 269a 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 392


 11734 269b 91       		.byte	0x91
 11735 269c B87F     		.sleb128 -72
 11736 269e 30       		.uleb128 0x30
 11737 269f 6A250000 		.4byte	0x256a
 11738 26a3 30210000 		.4byte	.LLST104
 11739 26a7 26       		.uleb128 0x26
 11740 26a8 77250000 		.4byte	0x2577
 11741 26ac 4A000000 		.4byte	.LBB87
 11742 26b0 30010000 		.4byte	.Ldebug_ranges0+0x130
 11743 26b4 01       		.byte	0x1
 11744 26b5 C908     		.2byte	0x8c9
 11745 26b7 FC260000 		.4byte	0x26fc
 11746 26bb 27       		.uleb128 0x27
 11747 26bc A0250000 		.4byte	0x25a0
 11748 26c0 AA210000 		.4byte	.LLST105
 11749 26c4 27       		.uleb128 0x27
 11750 26c5 94250000 		.4byte	0x2594
 11751 26c9 E4210000 		.4byte	.LLST106
 11752 26cd 27       		.uleb128 0x27
 11753 26ce 88250000 		.4byte	0x2588
 11754 26d2 02220000 		.4byte	.LLST107
 11755 26d6 2E       		.uleb128 0x2e
 11756 26d7 30010000 		.4byte	.Ldebug_ranges0+0x130
 11757 26db 30       		.uleb128 0x30
 11758 26dc AC250000 		.4byte	0x25ac
 11759 26e0 20220000 		.4byte	.LLST108
 11760 26e4 37       		.uleb128 0x37
 11761 26e5 5E000000 		.4byte	.LVL461
 11762 26e9 861A0000 		.4byte	0x1a86
 11763 26ed 38       		.uleb128 0x38
 11764 26ee 01       		.uleb128 0x1
 11765 26ef 52       		.byte	0x52
 11766 26f0 02       		.uleb128 0x2
 11767 26f1 74       		.byte	0x74
 11768 26f2 20       		.sleb128 32
 11769 26f3 38       		.uleb128 0x38
 11770 26f4 01       		.uleb128 0x1
 11771 26f5 51       		.byte	0x51
 11772 26f6 02       		.uleb128 0x2
 11773 26f7 75       		.byte	0x75
 11774 26f8 00       		.sleb128 0
 11775 26f9 00       		.byte	0
 11776 26fa 00       		.byte	0
 11777 26fb 00       		.byte	0
 11778 26fc 39       		.uleb128 0x39
 11779 26fd 1E000000 		.4byte	.LVL455
 11780 2701 E4150000 		.4byte	0x15e4
 11781 2705 17270000 		.4byte	0x2717
 11782 2709 38       		.uleb128 0x38
 11783 270a 01       		.uleb128 0x1
 11784 270b 52       		.byte	0x52
 11785 270c 03       		.uleb128 0x3
 11786 270d 91       		.byte	0x91
 11787 270e B47F     		.sleb128 -76
 11788 2710 38       		.uleb128 0x38
 11789 2711 01       		.uleb128 0x1
 11790 2712 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 393


 11791 2713 02       		.uleb128 0x2
 11792 2714 75       		.byte	0x75
 11793 2715 00       		.sleb128 0
 11794 2716 00       		.byte	0
 11795 2717 39       		.uleb128 0x39
 11796 2718 3C000000 		.4byte	.LVL456
 11797 271c E4150000 		.4byte	0x15e4
 11798 2720 32270000 		.4byte	0x2732
 11799 2724 38       		.uleb128 0x38
 11800 2725 01       		.uleb128 0x1
 11801 2726 52       		.byte	0x52
 11802 2727 03       		.uleb128 0x3
 11803 2728 91       		.byte	0x91
 11804 2729 B47F     		.sleb128 -76
 11805 272b 38       		.uleb128 0x38
 11806 272c 01       		.uleb128 0x1
 11807 272d 51       		.byte	0x51
 11808 272e 02       		.uleb128 0x2
 11809 272f 75       		.byte	0x75
 11810 2730 00       		.sleb128 0
 11811 2731 00       		.byte	0
 11812 2732 39       		.uleb128 0x39
 11813 2733 7A000000 		.4byte	.LVL466
 11814 2737 DD1A0000 		.4byte	0x1add
 11815 273b 4D270000 		.4byte	0x274d
 11816 273f 38       		.uleb128 0x38
 11817 2740 01       		.uleb128 0x1
 11818 2741 52       		.byte	0x52
 11819 2742 02       		.uleb128 0x2
 11820 2743 75       		.byte	0x75
 11821 2744 00       		.sleb128 0
 11822 2745 38       		.uleb128 0x38
 11823 2746 01       		.uleb128 0x1
 11824 2747 50       		.byte	0x50
 11825 2748 03       		.uleb128 0x3
 11826 2749 91       		.byte	0x91
 11827 274a B87F     		.sleb128 -72
 11828 274c 00       		.byte	0
 11829 274d 39       		.uleb128 0x39
 11830 274e 84000000 		.4byte	.LVL468
 11831 2752 5D490000 		.4byte	0x495d
 11832 2756 62270000 		.4byte	0x2762
 11833 275a 38       		.uleb128 0x38
 11834 275b 01       		.uleb128 0x1
 11835 275c 50       		.byte	0x50
 11836 275d 03       		.uleb128 0x3
 11837 275e 91       		.byte	0x91
 11838 275f B87F     		.sleb128 -72
 11839 2761 00       		.byte	0
 11840 2762 39       		.uleb128 0x39
 11841 2763 94000000 		.4byte	.LVL470
 11842 2767 72490000 		.4byte	0x4972
 11843 276b 7D270000 		.4byte	0x277d
 11844 276f 38       		.uleb128 0x38
 11845 2770 01       		.uleb128 0x1
 11846 2771 51       		.byte	0x51
 11847 2772 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 394


 11848 2773 91       		.byte	0x91
 11849 2774 48       		.sleb128 -56
 11850 2775 38       		.uleb128 0x38
 11851 2776 01       		.uleb128 0x1
 11852 2777 50       		.byte	0x50
 11853 2778 03       		.uleb128 0x3
 11854 2779 91       		.byte	0x91
 11855 277a B87F     		.sleb128 -72
 11856 277c 00       		.byte	0
 11857 277d 39       		.uleb128 0x39
 11858 277e A8000000 		.4byte	.LVL473
 11859 2782 15480000 		.4byte	0x4815
 11860 2786 9E270000 		.4byte	0x279e
 11861 278a 38       		.uleb128 0x38
 11862 278b 01       		.uleb128 0x1
 11863 278c 52       		.byte	0x52
 11864 278d 02       		.uleb128 0x2
 11865 278e 77       		.byte	0x77
 11866 278f 00       		.sleb128 0
 11867 2790 38       		.uleb128 0x38
 11868 2791 01       		.uleb128 0x1
 11869 2792 51       		.byte	0x51
 11870 2793 02       		.uleb128 0x2
 11871 2794 91       		.byte	0x91
 11872 2795 48       		.sleb128 -56
 11873 2796 38       		.uleb128 0x38
 11874 2797 01       		.uleb128 0x1
 11875 2798 50       		.byte	0x50
 11876 2799 03       		.uleb128 0x3
 11877 279a 74       		.byte	0x74
 11878 279b 8405     		.sleb128 644
 11879 279d 00       		.byte	0
 11880 279e 37       		.uleb128 0x37
 11881 279f B4000000 		.4byte	.LVL476
 11882 27a3 B6480000 		.4byte	0x48b6
 11883 27a7 38       		.uleb128 0x38
 11884 27a8 01       		.uleb128 0x1
 11885 27a9 50       		.byte	0x50
 11886 27aa 03       		.uleb128 0x3
 11887 27ab 91       		.byte	0x91
 11888 27ac B87F     		.sleb128 -72
 11889 27ae 00       		.byte	0
 11890 27af 00       		.byte	0
 11891 27b0 00       		.byte	0
 11892 27b1 2F       		.uleb128 0x2f
 11893 27b2 E2000000 		.4byte	.LBB97
 11894 27b6 62000000 		.4byte	.LBE97-.LBB97
 11895 27ba ED280000 		.4byte	0x28ed
 11896 27be 27       		.uleb128 0x27
 11897 27bf F8120000 		.4byte	0x12f8
 11898 27c3 6A220000 		.4byte	.LLST109
 11899 27c7 27       		.uleb128 0x27
 11900 27c8 EC120000 		.4byte	0x12ec
 11901 27cc 8E220000 		.4byte	.LLST110
 11902 27d0 32       		.uleb128 0x32
 11903 27d1 E2000000 		.4byte	.LBB98
 11904 27d5 62000000 		.4byte	.LBE98-.LBB98
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 395


 11905 27d9 40       		.uleb128 0x40
 11906 27da 04130000 		.4byte	0x1304
 11907 27de 30       		.uleb128 0x30
 11908 27df 10130000 		.4byte	0x1310
 11909 27e3 AC220000 		.4byte	.LLST111
 11910 27e7 3D       		.uleb128 0x3d
 11911 27e8 B9250000 		.4byte	0x25b9
 11912 27ec E2000000 		.4byte	.LBB99
 11913 27f0 20000000 		.4byte	.LBE99-.LBB99
 11914 27f4 01       		.byte	0x1
 11915 27f5 560C     		.2byte	0xc56
 11916 27f7 71280000 		.4byte	0x2871
 11917 27fb 27       		.uleb128 0x27
 11918 27fc D6250000 		.4byte	0x25d6
 11919 2800 6A220000 		.4byte	.LLST109
 11920 2804 27       		.uleb128 0x27
 11921 2805 CA250000 		.4byte	0x25ca
 11922 2809 8E220000 		.4byte	.LLST110
 11923 280d 32       		.uleb128 0x32
 11924 280e E2000000 		.4byte	.LBB100
 11925 2812 20000000 		.4byte	.LBE100-.LBB100
 11926 2816 3F       		.uleb128 0x3f
 11927 2817 E2250000 		.4byte	0x25e2
 11928 281b 02       		.uleb128 0x2
 11929 281c 91       		.byte	0x91
 11930 281d 48       		.sleb128 -56
 11931 281e 30       		.uleb128 0x30
 11932 281f EE250000 		.4byte	0x25ee
 11933 2823 CA220000 		.4byte	.LLST114
 11934 2827 39       		.uleb128 0x39
 11935 2828 EE000000 		.4byte	.LVL485
 11936 282c E4150000 		.4byte	0x15e4
 11937 2830 41280000 		.4byte	0x2841
 11938 2834 38       		.uleb128 0x38
 11939 2835 01       		.uleb128 0x1
 11940 2836 52       		.byte	0x52
 11941 2837 02       		.uleb128 0x2
 11942 2838 91       		.byte	0x91
 11943 2839 48       		.sleb128 -56
 11944 283a 38       		.uleb128 0x38
 11945 283b 01       		.uleb128 0x1
 11946 283c 51       		.byte	0x51
 11947 283d 02       		.uleb128 0x2
 11948 283e 75       		.byte	0x75
 11949 283f 00       		.sleb128 0
 11950 2840 00       		.byte	0
 11951 2841 39       		.uleb128 0x39
 11952 2842 FA000000 		.4byte	.LVL486
 11953 2846 52240000 		.4byte	0x2452
 11954 284a 5A280000 		.4byte	0x285a
 11955 284e 38       		.uleb128 0x38
 11956 284f 01       		.uleb128 0x1
 11957 2850 51       		.byte	0x51
 11958 2851 01       		.uleb128 0x1
 11959 2852 30       		.byte	0x30
 11960 2853 38       		.uleb128 0x38
 11961 2854 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 396


 11962 2855 50       		.byte	0x50
 11963 2856 02       		.uleb128 0x2
 11964 2857 74       		.byte	0x74
 11965 2858 00       		.sleb128 0
 11966 2859 00       		.byte	0
 11967 285a 37       		.uleb128 0x37
 11968 285b 02010000 		.4byte	.LVL487
 11969 285f 52240000 		.4byte	0x2452
 11970 2863 38       		.uleb128 0x38
 11971 2864 01       		.uleb128 0x1
 11972 2865 51       		.byte	0x51
 11973 2866 01       		.uleb128 0x1
 11974 2867 31       		.byte	0x31
 11975 2868 38       		.uleb128 0x38
 11976 2869 01       		.uleb128 0x1
 11977 286a 50       		.byte	0x50
 11978 286b 02       		.uleb128 0x2
 11979 286c 74       		.byte	0x74
 11980 286d 00       		.sleb128 0
 11981 286e 00       		.byte	0
 11982 286f 00       		.byte	0
 11983 2870 00       		.byte	0
 11984 2871 3D       		.uleb128 0x3d
 11985 2872 FB250000 		.4byte	0x25fb
 11986 2876 0E010000 		.4byte	.LBB101
 11987 287a 36000000 		.4byte	.LBE101-.LBB101
 11988 287e 01       		.byte	0x1
 11989 287f 5E0C     		.2byte	0xc5e
 11990 2881 D6280000 		.4byte	0x28d6
 11991 2885 27       		.uleb128 0x27
 11992 2886 0C260000 		.4byte	0x260c
 11993 288a DE220000 		.4byte	.LLST115
 11994 288e 32       		.uleb128 0x32
 11995 288f 0E010000 		.4byte	.LBB102
 11996 2893 36000000 		.4byte	.LBE102-.LBB102
 11997 2897 3F       		.uleb128 0x3f
 11998 2898 18260000 		.4byte	0x2618
 11999 289c 02       		.uleb128 0x2
 12000 289d 91       		.byte	0x91
 12001 289e 48       		.sleb128 -56
 12002 289f 39       		.uleb128 0x39
 12003 28a0 22010000 		.4byte	.LVL492
 12004 28a4 E4150000 		.4byte	0x15e4
 12005 28a8 B9280000 		.4byte	0x28b9
 12006 28ac 38       		.uleb128 0x38
 12007 28ad 01       		.uleb128 0x1
 12008 28ae 52       		.byte	0x52
 12009 28af 02       		.uleb128 0x2
 12010 28b0 91       		.byte	0x91
 12011 28b1 48       		.sleb128 -56
 12012 28b2 38       		.uleb128 0x38
 12013 28b3 01       		.uleb128 0x1
 12014 28b4 51       		.byte	0x51
 12015 28b5 02       		.uleb128 0x2
 12016 28b6 75       		.byte	0x75
 12017 28b7 00       		.sleb128 0
 12018 28b8 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 397


 12019 28b9 37       		.uleb128 0x37
 12020 28ba 3C010000 		.4byte	.LVL495
 12021 28be F01C0000 		.4byte	0x1cf0
 12022 28c2 38       		.uleb128 0x38
 12023 28c3 01       		.uleb128 0x1
 12024 28c4 53       		.byte	0x53
 12025 28c5 01       		.uleb128 0x1
 12026 28c6 32       		.byte	0x32
 12027 28c7 38       		.uleb128 0x38
 12028 28c8 01       		.uleb128 0x1
 12029 28c9 52       		.byte	0x52
 12030 28ca 02       		.uleb128 0x2
 12031 28cb 74       		.byte	0x74
 12032 28cc 1C       		.sleb128 28
 12033 28cd 38       		.uleb128 0x38
 12034 28ce 01       		.uleb128 0x1
 12035 28cf 51       		.byte	0x51
 12036 28d0 02       		.uleb128 0x2
 12037 28d1 75       		.byte	0x75
 12038 28d2 00       		.sleb128 0
 12039 28d3 00       		.byte	0
 12040 28d4 00       		.byte	0
 12041 28d5 00       		.byte	0
 12042 28d6 37       		.uleb128 0x37
 12043 28d7 0A010000 		.4byte	.LVL488
 12044 28db 02170000 		.4byte	0x1702
 12045 28df 38       		.uleb128 0x38
 12046 28e0 01       		.uleb128 0x1
 12047 28e1 51       		.byte	0x51
 12048 28e2 01       		.uleb128 0x1
 12049 28e3 31       		.byte	0x31
 12050 28e4 38       		.uleb128 0x38
 12051 28e5 01       		.uleb128 0x1
 12052 28e6 50       		.byte	0x50
 12053 28e7 02       		.uleb128 0x2
 12054 28e8 74       		.byte	0x74
 12055 28e9 00       		.sleb128 0
 12056 28ea 00       		.byte	0
 12057 28eb 00       		.byte	0
 12058 28ec 00       		.byte	0
 12059 28ed 39       		.uleb128 0x39
 12060 28ee D2000000 		.4byte	.LVL479
 12061 28f2 F01C0000 		.4byte	0x1cf0
 12062 28f6 0C290000 		.4byte	0x290c
 12063 28fa 38       		.uleb128 0x38
 12064 28fb 01       		.uleb128 0x1
 12065 28fc 53       		.byte	0x53
 12066 28fd 01       		.uleb128 0x1
 12067 28fe 31       		.byte	0x31
 12068 28ff 38       		.uleb128 0x38
 12069 2900 01       		.uleb128 0x1
 12070 2901 52       		.byte	0x52
 12071 2902 02       		.uleb128 0x2
 12072 2903 74       		.byte	0x74
 12073 2904 18       		.sleb128 24
 12074 2905 38       		.uleb128 0x38
 12075 2906 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 398


 12076 2907 51       		.byte	0x51
 12077 2908 02       		.uleb128 0x2
 12078 2909 75       		.byte	0x75
 12079 290a 00       		.sleb128 0
 12080 290b 00       		.byte	0
 12081 290c 37       		.uleb128 0x37
 12082 290d DE000000 		.4byte	.LVL481
 12083 2911 02170000 		.4byte	0x1702
 12084 2915 38       		.uleb128 0x38
 12085 2916 01       		.uleb128 0x1
 12086 2917 51       		.byte	0x51
 12087 2918 01       		.uleb128 0x1
 12088 2919 30       		.byte	0x30
 12089 291a 38       		.uleb128 0x38
 12090 291b 01       		.uleb128 0x1
 12091 291c 50       		.byte	0x50
 12092 291d 02       		.uleb128 0x2
 12093 291e 74       		.byte	0x74
 12094 291f 00       		.sleb128 0
 12095 2920 00       		.byte	0
 12096 2921 00       		.byte	0
 12097 2922 19       		.uleb128 0x19
 12098 2923 96100000 		.4byte	.LASF532
 12099 2927 01       		.byte	0x1
 12100 2928 8D0C     		.2byte	0xc8d
 12101 292a 50000000 		.4byte	0x50
 12102 292e 01       		.byte	0x1
 12103 292f 4A290000 		.4byte	0x294a
 12104 2933 1B       		.uleb128 0x1b
 12105 2934 0E090000 		.4byte	.LASF476
 12106 2938 01       		.byte	0x1
 12107 2939 8D0C     		.2byte	0xc8d
 12108 293b 50000000 		.4byte	0x50
 12109 293f 1D       		.uleb128 0x1d
 12110 2940 6900     		.ascii	"i\000"
 12111 2942 01       		.byte	0x1
 12112 2943 8F0C     		.2byte	0xc8f
 12113 2945 50000000 		.4byte	0x50
 12114 2949 00       		.byte	0
 12115 294a 2C       		.uleb128 0x2c
 12116 294b 1D130000 		.4byte	0x131d
 12117 294f 00000000 		.4byte	.LFB40
 12118 2953 50000000 		.4byte	.LFE40-.LFB40
 12119 2957 01       		.uleb128 0x1
 12120 2958 9C       		.byte	0x9c
 12121 2959 D5290000 		.4byte	0x29d5
 12122 295d 27       		.uleb128 0x27
 12123 295e 2E130000 		.4byte	0x132e
 12124 2962 FC220000 		.4byte	.LLST116
 12125 2966 27       		.uleb128 0x27
 12126 2967 3A130000 		.4byte	0x133a
 12127 296b 36230000 		.4byte	.LLST117
 12128 296f 30       		.uleb128 0x30
 12129 2970 46130000 		.4byte	0x1346
 12130 2974 57230000 		.4byte	.LLST118
 12131 2978 40       		.uleb128 0x40
 12132 2979 50130000 		.4byte	0x1350
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 399


 12133 297d 32       		.uleb128 0x32
 12134 297e 0C000000 		.4byte	.LBB107
 12135 2982 3C000000 		.4byte	.LBE107-.LBB107
 12136 2986 29       		.uleb128 0x29
 12137 2987 3A130000 		.4byte	0x133a
 12138 298b 29       		.uleb128 0x29
 12139 298c 2E130000 		.4byte	0x132e
 12140 2990 32       		.uleb128 0x32
 12141 2991 0C000000 		.4byte	.LBB108
 12142 2995 3C000000 		.4byte	.LBE108-.LBB108
 12143 2999 30       		.uleb128 0x30
 12144 299a 46130000 		.4byte	0x1346
 12145 299e 8E230000 		.4byte	.LLST119
 12146 29a2 3F       		.uleb128 0x3f
 12147 29a3 50130000 		.4byte	0x1350
 12148 29a7 01       		.uleb128 0x1
 12149 29a8 53       		.byte	0x53
 12150 29a9 28       		.uleb128 0x28
 12151 29aa 22290000 		.4byte	0x2922
 12152 29ae 0C000000 		.4byte	.LBB109
 12153 29b2 1A000000 		.4byte	.LBE109-.LBB109
 12154 29b6 01       		.byte	0x1
 12155 29b7 9F0C     		.2byte	0xc9f
 12156 29b9 29       		.uleb128 0x29
 12157 29ba 33290000 		.4byte	0x2933
 12158 29be 32       		.uleb128 0x32
 12159 29bf 0C000000 		.4byte	.LBB110
 12160 29c3 1A000000 		.4byte	.LBE110-.LBB110
 12161 29c7 30       		.uleb128 0x30
 12162 29c8 3F290000 		.4byte	0x293f
 12163 29cc CB230000 		.4byte	.LLST120
 12164 29d0 00       		.byte	0
 12165 29d1 00       		.byte	0
 12166 29d2 00       		.byte	0
 12167 29d3 00       		.byte	0
 12168 29d4 00       		.byte	0
 12169 29d5 33       		.uleb128 0x33
 12170 29d6 3D020000 		.4byte	.LASF533
 12171 29da 01       		.byte	0x1
 12172 29db AB0C     		.2byte	0xcab
 12173 29dd 50000000 		.4byte	0x50
 12174 29e1 00000000 		.4byte	.LFB41
 12175 29e5 10000000 		.4byte	.LFE41-.LFB41
 12176 29e9 01       		.uleb128 0x1
 12177 29ea 9C       		.byte	0x9c
 12178 29eb 2A2A0000 		.4byte	0x2a2a
 12179 29ef 2B       		.uleb128 0x2b
 12180 29f0 6C656E00 		.ascii	"len\000"
 12181 29f4 01       		.byte	0x1
 12182 29f5 AB0C     		.2byte	0xcab
 12183 29f7 50000000 		.4byte	0x50
 12184 29fb F7230000 		.4byte	.LLST121
 12185 29ff 23       		.uleb128 0x23
 12186 2a00 11040000 		.4byte	.LASF475
 12187 2a04 01       		.byte	0x1
 12188 2a05 AB0C     		.2byte	0xcab
 12189 2a07 890B0000 		.4byte	0xb89
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 400


 12190 2a0b 18240000 		.4byte	.LLST122
 12191 2a0f 37       		.uleb128 0x37
 12192 2a10 0C000000 		.4byte	.LVL513
 12193 2a14 1D130000 		.4byte	0x131d
 12194 2a18 38       		.uleb128 0x38
 12195 2a19 01       		.uleb128 0x1
 12196 2a1a 51       		.byte	0x51
 12197 2a1b 05       		.uleb128 0x5
 12198 2a1c F3       		.byte	0xf3
 12199 2a1d 01       		.uleb128 0x1
 12200 2a1e 51       		.byte	0x51
 12201 2a1f 23       		.byte	0x23
 12202 2a20 01       		.uleb128 0x1
 12203 2a21 38       		.uleb128 0x38
 12204 2a22 01       		.uleb128 0x1
 12205 2a23 50       		.byte	0x50
 12206 2a24 03       		.uleb128 0x3
 12207 2a25 F3       		.byte	0xf3
 12208 2a26 01       		.uleb128 0x1
 12209 2a27 50       		.byte	0x50
 12210 2a28 00       		.byte	0
 12211 2a29 00       		.byte	0
 12212 2a2a 33       		.uleb128 0x33
 12213 2a2b DF070000 		.4byte	.LASF534
 12214 2a2f 01       		.byte	0x1
 12215 2a30 B10C     		.2byte	0xcb1
 12216 2a32 50000000 		.4byte	0x50
 12217 2a36 00000000 		.4byte	.LFB42
 12218 2a3a 10000000 		.4byte	.LFE42-.LFB42
 12219 2a3e 01       		.uleb128 0x1
 12220 2a3f 9C       		.byte	0x9c
 12221 2a40 7F2A0000 		.4byte	0x2a7f
 12222 2a44 2B       		.uleb128 0x2b
 12223 2a45 6C656E00 		.ascii	"len\000"
 12224 2a49 01       		.byte	0x1
 12225 2a4a B10C     		.2byte	0xcb1
 12226 2a4c 50000000 		.4byte	0x50
 12227 2a50 46240000 		.4byte	.LLST123
 12228 2a54 23       		.uleb128 0x23
 12229 2a55 11040000 		.4byte	.LASF475
 12230 2a59 01       		.byte	0x1
 12231 2a5a B10C     		.2byte	0xcb1
 12232 2a5c 890B0000 		.4byte	0xb89
 12233 2a60 67240000 		.4byte	.LLST124
 12234 2a64 37       		.uleb128 0x37
 12235 2a65 0C000000 		.4byte	.LVL516
 12236 2a69 1D130000 		.4byte	0x131d
 12237 2a6d 38       		.uleb128 0x38
 12238 2a6e 01       		.uleb128 0x1
 12239 2a6f 51       		.byte	0x51
 12240 2a70 05       		.uleb128 0x5
 12241 2a71 F3       		.byte	0xf3
 12242 2a72 01       		.uleb128 0x1
 12243 2a73 51       		.byte	0x51
 12244 2a74 23       		.byte	0x23
 12245 2a75 01       		.uleb128 0x1
 12246 2a76 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 401


 12247 2a77 01       		.uleb128 0x1
 12248 2a78 50       		.byte	0x50
 12249 2a79 03       		.uleb128 0x3
 12250 2a7a F3       		.byte	0xf3
 12251 2a7b 01       		.uleb128 0x1
 12252 2a7c 50       		.byte	0x50
 12253 2a7d 00       		.byte	0
 12254 2a7e 00       		.byte	0
 12255 2a7f 33       		.uleb128 0x33
 12256 2a80 5B080000 		.4byte	.LASF535
 12257 2a84 01       		.byte	0x1
 12258 2a85 B80C     		.2byte	0xcb8
 12259 2a87 50000000 		.4byte	0x50
 12260 2a8b 00000000 		.4byte	.LFB43
 12261 2a8f 10000000 		.4byte	.LFE43-.LFB43
 12262 2a93 01       		.uleb128 0x1
 12263 2a94 9C       		.byte	0x9c
 12264 2a95 D42A0000 		.4byte	0x2ad4
 12265 2a99 2B       		.uleb128 0x2b
 12266 2a9a 6C656E00 		.ascii	"len\000"
 12267 2a9e 01       		.byte	0x1
 12268 2a9f B80C     		.2byte	0xcb8
 12269 2aa1 50000000 		.4byte	0x50
 12270 2aa5 95240000 		.4byte	.LLST125
 12271 2aa9 23       		.uleb128 0x23
 12272 2aaa 11040000 		.4byte	.LASF475
 12273 2aae 01       		.byte	0x1
 12274 2aaf B80C     		.2byte	0xcb8
 12275 2ab1 890B0000 		.4byte	0xb89
 12276 2ab5 B6240000 		.4byte	.LLST126
 12277 2ab9 37       		.uleb128 0x37
 12278 2aba 0C000000 		.4byte	.LVL519
 12279 2abe 1D130000 		.4byte	0x131d
 12280 2ac2 38       		.uleb128 0x38
 12281 2ac3 01       		.uleb128 0x1
 12282 2ac4 51       		.byte	0x51
 12283 2ac5 05       		.uleb128 0x5
 12284 2ac6 F3       		.byte	0xf3
 12285 2ac7 01       		.uleb128 0x1
 12286 2ac8 51       		.byte	0x51
 12287 2ac9 23       		.byte	0x23
 12288 2aca 01       		.uleb128 0x1
 12289 2acb 38       		.uleb128 0x38
 12290 2acc 01       		.uleb128 0x1
 12291 2acd 50       		.byte	0x50
 12292 2ace 03       		.uleb128 0x3
 12293 2acf F3       		.byte	0xf3
 12294 2ad0 01       		.uleb128 0x1
 12295 2ad1 50       		.byte	0x50
 12296 2ad2 00       		.byte	0
 12297 2ad3 00       		.byte	0
 12298 2ad4 33       		.uleb128 0x33
 12299 2ad5 020A0000 		.4byte	.LASF536
 12300 2ad9 01       		.byte	0x1
 12301 2ada BE0C     		.2byte	0xcbe
 12302 2adc 50000000 		.4byte	0x50
 12303 2ae0 00000000 		.4byte	.LFB44
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 402


 12304 2ae4 1C000000 		.4byte	.LFE44-.LFB44
 12305 2ae8 01       		.uleb128 0x1
 12306 2ae9 9C       		.byte	0x9c
 12307 2aea 492B0000 		.4byte	0x2b49
 12308 2aee 2B       		.uleb128 0x2b
 12309 2aef 74616700 		.ascii	"tag\000"
 12310 2af3 01       		.byte	0x1
 12311 2af4 BE0C     		.2byte	0xcbe
 12312 2af6 2C000000 		.4byte	0x2c
 12313 2afa E4240000 		.4byte	.LLST127
 12314 2afe 23       		.uleb128 0x23
 12315 2aff 701A0000 		.4byte	.LASF537
 12316 2b03 01       		.byte	0x1
 12317 2b04 BE0C     		.2byte	0xcbe
 12318 2b06 2C000000 		.4byte	0x2c
 12319 2b0a 05250000 		.4byte	.LLST128
 12320 2b0e 2B       		.uleb128 0x2b
 12321 2b0f 6C656E00 		.ascii	"len\000"
 12322 2b13 01       		.byte	0x1
 12323 2b14 BE0C     		.2byte	0xcbe
 12324 2b16 50000000 		.4byte	0x50
 12325 2b1a 26250000 		.4byte	.LLST129
 12326 2b1e 23       		.uleb128 0x23
 12327 2b1f 11040000 		.4byte	.LASF475
 12328 2b23 01       		.byte	0x1
 12329 2b24 BE0C     		.2byte	0xcbe
 12330 2b26 890B0000 		.4byte	0xb89
 12331 2b2a 47250000 		.4byte	.LLST130
 12332 2b2e 37       		.uleb128 0x37
 12333 2b2f 18000000 		.4byte	.LVL523
 12334 2b33 1D130000 		.4byte	0x131d
 12335 2b37 38       		.uleb128 0x38
 12336 2b38 01       		.uleb128 0x1
 12337 2b39 51       		.byte	0x51
 12338 2b3a 05       		.uleb128 0x5
 12339 2b3b F3       		.byte	0xf3
 12340 2b3c 01       		.uleb128 0x1
 12341 2b3d 53       		.byte	0x53
 12342 2b3e 23       		.byte	0x23
 12343 2b3f 01       		.uleb128 0x1
 12344 2b40 38       		.uleb128 0x38
 12345 2b41 01       		.uleb128 0x1
 12346 2b42 50       		.byte	0x50
 12347 2b43 03       		.uleb128 0x3
 12348 2b44 F3       		.byte	0xf3
 12349 2b45 01       		.uleb128 0x1
 12350 2b46 52       		.byte	0x52
 12351 2b47 00       		.byte	0
 12352 2b48 00       		.byte	0
 12353 2b49 33       		.uleb128 0x33
 12354 2b4a F6150000 		.4byte	.LASF538
 12355 2b4e 01       		.byte	0x1
 12356 2b4f C60C     		.2byte	0xcc6
 12357 2b51 50000000 		.4byte	0x50
 12358 2b55 00000000 		.4byte	.LFB45
 12359 2b59 1A000000 		.4byte	.LFE45-.LFB45
 12360 2b5d 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 403


 12361 2b5e 9C       		.byte	0x9c
 12362 2b5f AE2B0000 		.4byte	0x2bae
 12363 2b63 23       		.uleb128 0x23
 12364 2b64 701A0000 		.4byte	.LASF537
 12365 2b68 01       		.byte	0x1
 12366 2b69 C60C     		.2byte	0xcc6
 12367 2b6b 2C000000 		.4byte	0x2c
 12368 2b6f 68250000 		.4byte	.LLST131
 12369 2b73 2B       		.uleb128 0x2b
 12370 2b74 6C656E00 		.ascii	"len\000"
 12371 2b78 01       		.byte	0x1
 12372 2b79 C60C     		.2byte	0xcc6
 12373 2b7b 50000000 		.4byte	0x50
 12374 2b7f 89250000 		.4byte	.LLST132
 12375 2b83 23       		.uleb128 0x23
 12376 2b84 11040000 		.4byte	.LASF475
 12377 2b88 01       		.byte	0x1
 12378 2b89 C60C     		.2byte	0xcc6
 12379 2b8b 890B0000 		.4byte	0xb89
 12380 2b8f B5250000 		.4byte	.LLST133
 12381 2b93 37       		.uleb128 0x37
 12382 2b94 16000000 		.4byte	.LVL528
 12383 2b98 1D130000 		.4byte	0x131d
 12384 2b9c 38       		.uleb128 0x38
 12385 2b9d 01       		.uleb128 0x1
 12386 2b9e 51       		.byte	0x51
 12387 2b9f 05       		.uleb128 0x5
 12388 2ba0 F3       		.byte	0xf3
 12389 2ba1 01       		.uleb128 0x1
 12390 2ba2 52       		.byte	0x52
 12391 2ba3 23       		.byte	0x23
 12392 2ba4 01       		.uleb128 0x1
 12393 2ba5 38       		.uleb128 0x38
 12394 2ba6 01       		.uleb128 0x1
 12395 2ba7 50       		.byte	0x50
 12396 2ba8 03       		.uleb128 0x3
 12397 2ba9 F3       		.byte	0xf3
 12398 2baa 01       		.uleb128 0x1
 12399 2bab 51       		.byte	0x51
 12400 2bac 00       		.byte	0
 12401 2bad 00       		.byte	0
 12402 2bae 33       		.uleb128 0x33
 12403 2baf BE1B0000 		.4byte	.LASF539
 12404 2bb3 01       		.byte	0x1
 12405 2bb4 2E0D     		.2byte	0xd2e
 12406 2bb6 50000000 		.4byte	0x50
 12407 2bba 00000000 		.4byte	.LFB46
 12408 2bbe 98000000 		.4byte	.LFE46-.LFB46
 12409 2bc2 01       		.uleb128 0x1
 12410 2bc3 9C       		.byte	0x9c
 12411 2bc4 1E2D0000 		.4byte	0x2d1e
 12412 2bc8 23       		.uleb128 0x23
 12413 2bc9 4B200000 		.4byte	.LASF540
 12414 2bcd 01       		.byte	0x1
 12415 2bce 2E0D     		.2byte	0xd2e
 12416 2bd0 25000000 		.4byte	0x25
 12417 2bd4 E3250000 		.4byte	.LLST134
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 404


 12418 2bd8 23       		.uleb128 0x23
 12419 2bd9 11040000 		.4byte	.LASF475
 12420 2bdd 01       		.byte	0x1
 12421 2bde 2E0D     		.2byte	0xd2e
 12422 2be0 890B0000 		.4byte	0xb89
 12423 2be4 04260000 		.4byte	.LLST135
 12424 2be8 23       		.uleb128 0x23
 12425 2be9 51030000 		.4byte	.LASF256
 12426 2bed 01       		.byte	0x1
 12427 2bee 2E0D     		.2byte	0xd2e
 12428 2bf0 25000000 		.4byte	0x25
 12429 2bf4 30260000 		.4byte	.LLST136
 12430 2bf8 23       		.uleb128 0x23
 12431 2bf9 34190000 		.4byte	.LASF541
 12432 2bfd 01       		.byte	0x1
 12433 2bfe 2E0D     		.2byte	0xd2e
 12434 2c00 25000000 		.4byte	0x25
 12435 2c04 5C260000 		.4byte	.LLST137
 12436 2c08 34       		.uleb128 0x34
 12437 2c09 6E0F0000 		.4byte	.LASF542
 12438 2c0d 01       		.byte	0x1
 12439 2c0e 300D     		.2byte	0xd30
 12440 2c10 50000000 		.4byte	0x50
 12441 2c14 88260000 		.4byte	.LLST138
 12442 2c18 34       		.uleb128 0x34
 12443 2c19 71010000 		.4byte	.LASF543
 12444 2c1d 01       		.byte	0x1
 12445 2c1e 300D     		.2byte	0xd30
 12446 2c20 50000000 		.4byte	0x50
 12447 2c24 9B260000 		.4byte	.LLST139
 12448 2c28 34       		.uleb128 0x34
 12449 2c29 02210000 		.4byte	.LASF544
 12450 2c2d 01       		.byte	0x1
 12451 2c2e 300D     		.2byte	0xd30
 12452 2c30 50000000 		.4byte	0x50
 12453 2c34 B9260000 		.4byte	.LLST140
 12454 2c38 35       		.uleb128 0x35
 12455 2c39 85010000 		.4byte	.LASF545
 12456 2c3d 01       		.byte	0x1
 12457 2c3e 300D     		.2byte	0xd30
 12458 2c40 50000000 		.4byte	0x50
 12459 2c44 02       		.uleb128 0x2
 12460 2c45 91       		.byte	0x91
 12461 2c46 58       		.sleb128 -40
 12462 2c47 34       		.uleb128 0x34
 12463 2c48 68190000 		.4byte	.LASF546
 12464 2c4c 01       		.byte	0x1
 12465 2c4d 310D     		.2byte	0xd31
 12466 2c4f 08110000 		.4byte	0x1108
 12467 2c53 E3260000 		.4byte	.LLST141
 12468 2c57 35       		.uleb128 0x35
 12469 2c58 92200000 		.4byte	.LASF547
 12470 2c5c 01       		.byte	0x1
 12471 2c5d 320D     		.2byte	0xd32
 12472 2c5f 1E2D0000 		.4byte	0x2d1e
 12473 2c63 02       		.uleb128 0x2
 12474 2c64 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 405


 12475 2c65 5C       		.sleb128 -36
 12476 2c66 35       		.uleb128 0x35
 12477 2c67 000E0000 		.4byte	.LASF548
 12478 2c6b 01       		.byte	0x1
 12479 2c6c 330D     		.2byte	0xd33
 12480 2c6e 2E2D0000 		.4byte	0x2d2e
 12481 2c72 02       		.uleb128 0x2
 12482 2c73 91       		.byte	0x91
 12483 2c74 60       		.sleb128 -32
 12484 2c75 39       		.uleb128 0x39
 12485 2c76 2A000000 		.4byte	.LVL535
 12486 2c7a E6130000 		.4byte	0x13e6
 12487 2c7e 902C0000 		.4byte	0x2c90
 12488 2c82 38       		.uleb128 0x38
 12489 2c83 01       		.uleb128 0x1
 12490 2c84 52       		.byte	0x52
 12491 2c85 02       		.uleb128 0x2
 12492 2c86 91       		.byte	0x91
 12493 2c87 58       		.sleb128 -40
 12494 2c88 38       		.uleb128 0x38
 12495 2c89 01       		.uleb128 0x1
 12496 2c8a 51       		.byte	0x51
 12497 2c8b 03       		.uleb128 0x3
 12498 2c8c F3       		.byte	0xf3
 12499 2c8d 01       		.uleb128 0x1
 12500 2c8e 52       		.byte	0x52
 12501 2c8f 00       		.byte	0
 12502 2c90 39       		.uleb128 0x39
 12503 2c91 38000000 		.4byte	.LVL538
 12504 2c95 1D130000 		.4byte	0x131d
 12505 2c99 A42C0000 		.4byte	0x2ca4
 12506 2c9d 38       		.uleb128 0x38
 12507 2c9e 01       		.uleb128 0x1
 12508 2c9f 51       		.byte	0x51
 12509 2ca0 02       		.uleb128 0x2
 12510 2ca1 91       		.byte	0x91
 12511 2ca2 5C       		.sleb128 -36
 12512 2ca3 00       		.byte	0
 12513 2ca4 39       		.uleb128 0x39
 12514 2ca5 4C000000 		.4byte	.LVL542
 12515 2ca9 D5290000 		.4byte	0x29d5
 12516 2cad B82C0000 		.4byte	0x2cb8
 12517 2cb1 38       		.uleb128 0x38
 12518 2cb2 01       		.uleb128 0x1
 12519 2cb3 51       		.byte	0x51
 12520 2cb4 02       		.uleb128 0x2
 12521 2cb5 77       		.byte	0x77
 12522 2cb6 00       		.sleb128 0
 12523 2cb7 00       		.byte	0
 12524 2cb8 39       		.uleb128 0x39
 12525 2cb9 5E000000 		.4byte	.LVL545
 12526 2cbd 15480000 		.4byte	0x4815
 12527 2cc1 D92C0000 		.4byte	0x2cd9
 12528 2cc5 38       		.uleb128 0x38
 12529 2cc6 01       		.uleb128 0x1
 12530 2cc7 52       		.byte	0x52
 12531 2cc8 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 406


 12532 2cc9 91       		.byte	0x91
 12533 2cca 54       		.sleb128 -44
 12534 2ccb 06       		.byte	0x6
 12535 2ccc 38       		.uleb128 0x38
 12536 2ccd 01       		.uleb128 0x1
 12537 2cce 51       		.byte	0x51
 12538 2ccf 02       		.uleb128 0x2
 12539 2cd0 77       		.byte	0x77
 12540 2cd1 00       		.sleb128 0
 12541 2cd2 38       		.uleb128 0x38
 12542 2cd3 01       		.uleb128 0x1
 12543 2cd4 50       		.byte	0x50
 12544 2cd5 02       		.uleb128 0x2
 12545 2cd6 75       		.byte	0x75
 12546 2cd7 00       		.sleb128 0
 12547 2cd8 00       		.byte	0
 12548 2cd9 39       		.uleb128 0x39
 12549 2cda 6A000000 		.4byte	.LVL546
 12550 2cde 15480000 		.4byte	0x4815
 12551 2ce2 FD2C0000 		.4byte	0x2cfd
 12552 2ce6 38       		.uleb128 0x38
 12553 2ce7 01       		.uleb128 0x1
 12554 2ce8 52       		.byte	0x52
 12555 2ce9 02       		.uleb128 0x2
 12556 2cea 76       		.byte	0x76
 12557 2ceb 00       		.sleb128 0
 12558 2cec 38       		.uleb128 0x38
 12559 2ced 01       		.uleb128 0x1
 12560 2cee 51       		.byte	0x51
 12561 2cef 02       		.uleb128 0x2
 12562 2cf0 91       		.byte	0x91
 12563 2cf1 5C       		.sleb128 -36
 12564 2cf2 38       		.uleb128 0x38
 12565 2cf3 01       		.uleb128 0x1
 12566 2cf4 50       		.byte	0x50
 12567 2cf5 06       		.uleb128 0x6
 12568 2cf6 75       		.byte	0x75
 12569 2cf7 00       		.sleb128 0
 12570 2cf8 91       		.byte	0x91
 12571 2cf9 54       		.sleb128 -44
 12572 2cfa 06       		.byte	0x6
 12573 2cfb 22       		.byte	0x22
 12574 2cfc 00       		.byte	0
 12575 2cfd 37       		.uleb128 0x37
 12576 2cfe 7A000000 		.4byte	.LVL548
 12577 2d02 15480000 		.4byte	0x4815
 12578 2d06 38       		.uleb128 0x38
 12579 2d07 01       		.uleb128 0x1
 12580 2d08 52       		.byte	0x52
 12581 2d09 02       		.uleb128 0x2
 12582 2d0a 76       		.byte	0x76
 12583 2d0b 00       		.sleb128 0
 12584 2d0c 38       		.uleb128 0x38
 12585 2d0d 01       		.uleb128 0x1
 12586 2d0e 51       		.byte	0x51
 12587 2d0f 03       		.uleb128 0x3
 12588 2d10 7D       		.byte	0x7d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 407


 12589 2d11 00       		.sleb128 0
 12590 2d12 06       		.byte	0x6
 12591 2d13 38       		.uleb128 0x38
 12592 2d14 01       		.uleb128 0x1
 12593 2d15 50       		.byte	0x50
 12594 2d16 05       		.uleb128 0x5
 12595 2d17 75       		.byte	0x75
 12596 2d18 00       		.sleb128 0
 12597 2d19 77       		.byte	0x77
 12598 2d1a 00       		.sleb128 0
 12599 2d1b 22       		.byte	0x22
 12600 2d1c 00       		.byte	0
 12601 2d1d 00       		.byte	0
 12602 2d1e 16       		.uleb128 0x16
 12603 2d1f 2C000000 		.4byte	0x2c
 12604 2d23 2E2D0000 		.4byte	0x2d2e
 12605 2d27 17       		.uleb128 0x17
 12606 2d28 B2000000 		.4byte	0xb2
 12607 2d2c 03       		.byte	0x3
 12608 2d2d 00       		.byte	0
 12609 2d2e 16       		.uleb128 0x16
 12610 2d2f 2C000000 		.4byte	0x2c
 12611 2d33 3E2D0000 		.4byte	0x2d3e
 12612 2d37 17       		.uleb128 0x17
 12613 2d38 B2000000 		.4byte	0xb2
 12614 2d3c 05       		.byte	0x5
 12615 2d3d 00       		.byte	0
 12616 2d3e 19       		.uleb128 0x19
 12617 2d3f AA1C0000 		.4byte	.LASF549
 12618 2d43 01       		.byte	0x1
 12619 2d44 830C     		.2byte	0xc83
 12620 2d46 50000000 		.4byte	0x50
 12621 2d4a 01       		.byte	0x1
 12622 2d4b 742D0000 		.4byte	0x2d74
 12623 2d4f 1B       		.uleb128 0x1b
 12624 2d50 22100000 		.4byte	.LASF458
 12625 2d54 01       		.byte	0x1
 12626 2d55 830C     		.2byte	0xc83
 12627 2d57 08110000 		.4byte	0x1108
 12628 2d5b 1B       		.uleb128 0x1b
 12629 2d5c 98160000 		.4byte	.LASF550
 12630 2d60 01       		.byte	0x1
 12631 2d61 830C     		.2byte	0xc83
 12632 2d63 50000000 		.4byte	0x50
 12633 2d67 1B       		.uleb128 0x1b
 12634 2d68 11040000 		.4byte	.LASF475
 12635 2d6c 01       		.byte	0x1
 12636 2d6d 830C     		.2byte	0xc83
 12637 2d6f 890B0000 		.4byte	0xb89
 12638 2d73 00       		.byte	0
 12639 2d74 33       		.uleb128 0x33
 12640 2d75 83100000 		.4byte	.LASF551
 12641 2d79 01       		.byte	0x1
 12642 2d7a 510D     		.2byte	0xd51
 12643 2d7c 50000000 		.4byte	0x50
 12644 2d80 00000000 		.4byte	.LFB47
 12645 2d84 66000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 408


 12646 2d88 01       		.uleb128 0x1
 12647 2d89 9C       		.byte	0x9c
 12648 2d8a 232F0000 		.4byte	0x2f23
 12649 2d8e 2B       		.uleb128 0x2b
 12650 2d8f 6F757400 		.ascii	"out\000"
 12651 2d93 01       		.byte	0x1
 12652 2d94 510D     		.2byte	0xd51
 12653 2d96 890B0000 		.4byte	0xb89
 12654 2d9a 1A270000 		.4byte	.LLST142
 12655 2d9e 23       		.uleb128 0x23
 12656 2d9f 22100000 		.4byte	.LASF458
 12657 2da3 01       		.byte	0x1
 12658 2da4 510D     		.2byte	0xd51
 12659 2da6 08110000 		.4byte	0x1108
 12660 2daa 46270000 		.4byte	.LLST143
 12661 2dae 23       		.uleb128 0x23
 12662 2daf 98160000 		.4byte	.LASF550
 12663 2db3 01       		.byte	0x1
 12664 2db4 510D     		.2byte	0xd51
 12665 2db6 50000000 		.4byte	0x50
 12666 2dba 67270000 		.4byte	.LLST144
 12667 2dbe 23       		.uleb128 0x23
 12668 2dbf 74180000 		.4byte	.LASF552
 12669 2dc3 01       		.byte	0x1
 12670 2dc4 520D     		.2byte	0xd52
 12671 2dc6 25000000 		.4byte	0x25
 12672 2dca 96270000 		.4byte	.LLST145
 12673 2dce 35       		.uleb128 0x35
 12674 2dcf D9190000 		.4byte	.LASF553
 12675 2dd3 01       		.byte	0x1
 12676 2dd4 540D     		.2byte	0xd54
 12677 2dd6 232F0000 		.4byte	0x2f23
 12678 2dda 03       		.uleb128 0x3
 12679 2ddb 91       		.byte	0x91
 12680 2ddc 9C7F     		.sleb128 -100
 12681 2dde 35       		.uleb128 0x35
 12682 2ddf EA060000 		.4byte	.LASF554
 12683 2de3 01       		.byte	0x1
 12684 2de4 550D     		.2byte	0xd55
 12685 2de6 8F0B0000 		.4byte	0xb8f
 12686 2dea 03       		.uleb128 0x3
 12687 2deb 91       		.byte	0x91
 12688 2dec 887F     		.sleb128 -120
 12689 2dee 35       		.uleb128 0x35
 12690 2def 000E0000 		.4byte	.LASF548
 12691 2df3 01       		.byte	0x1
 12692 2df4 560D     		.2byte	0xd56
 12693 2df6 332F0000 		.4byte	0x2f33
 12694 2dfa 03       		.uleb128 0x3
 12695 2dfb 91       		.byte	0x91
 12696 2dfc 807F     		.sleb128 -128
 12697 2dfe 1E       		.uleb128 0x1e
 12698 2dff A5170000 		.4byte	.LASF555
 12699 2e03 01       		.byte	0x1
 12700 2e04 570D     		.2byte	0xd57
 12701 2e06 50000000 		.4byte	0x50
 12702 2e0a 34       		.uleb128 0x34
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 409


 12703 2e0b 85010000 		.4byte	.LASF545
 12704 2e0f 01       		.byte	0x1
 12705 2e10 570D     		.2byte	0xd57
 12706 2e12 50000000 		.4byte	0x50
 12707 2e16 C2270000 		.4byte	.LLST146
 12708 2e1a 34       		.uleb128 0x34
 12709 2e1b 02210000 		.4byte	.LASF544
 12710 2e1f 01       		.byte	0x1
 12711 2e20 570D     		.2byte	0xd57
 12712 2e22 50000000 		.4byte	0x50
 12713 2e26 E0270000 		.4byte	.LLST147
 12714 2e2a 26       		.uleb128 0x26
 12715 2e2b 3E2D0000 		.4byte	0x2d3e
 12716 2e2f 04000000 		.4byte	.LBB113
 12717 2e33 48010000 		.4byte	.Ldebug_ranges0+0x148
 12718 2e37 01       		.byte	0x1
 12719 2e38 590D     		.2byte	0xd59
 12720 2e3a 782E0000 		.4byte	0x2e78
 12721 2e3e 27       		.uleb128 0x27
 12722 2e3f 672D0000 		.4byte	0x2d67
 12723 2e43 09280000 		.4byte	.LLST148
 12724 2e47 27       		.uleb128 0x27
 12725 2e48 5B2D0000 		.4byte	0x2d5b
 12726 2e4c 67270000 		.4byte	.LLST144
 12727 2e50 27       		.uleb128 0x27
 12728 2e51 4F2D0000 		.4byte	0x2d4f
 12729 2e55 46270000 		.4byte	.LLST143
 12730 2e59 37       		.uleb128 0x37
 12731 2e5a 1C000000 		.4byte	.LVL558
 12732 2e5e 15480000 		.4byte	0x4815
 12733 2e62 38       		.uleb128 0x38
 12734 2e63 01       		.uleb128 0x1
 12735 2e64 52       		.byte	0x52
 12736 2e65 02       		.uleb128 0x2
 12737 2e66 75       		.byte	0x75
 12738 2e67 00       		.sleb128 0
 12739 2e68 38       		.uleb128 0x38
 12740 2e69 01       		.uleb128 0x1
 12741 2e6a 51       		.byte	0x51
 12742 2e6b 03       		.uleb128 0x3
 12743 2e6c F3       		.byte	0xf3
 12744 2e6d 01       		.uleb128 0x1
 12745 2e6e 51       		.byte	0x51
 12746 2e6f 38       		.uleb128 0x38
 12747 2e70 01       		.uleb128 0x1
 12748 2e71 50       		.byte	0x50
 12749 2e72 03       		.uleb128 0x3
 12750 2e73 91       		.byte	0x91
 12751 2e74 9E7F     		.sleb128 -98
 12752 2e76 00       		.byte	0
 12753 2e77 00       		.byte	0
 12754 2e78 39       		.uleb128 0x39
 12755 2e79 2C000000 		.4byte	.LVL559
 12756 2e7d AE2B0000 		.4byte	0x2bae
 12757 2e81 9D2E0000 		.4byte	0x2e9d
 12758 2e85 38       		.uleb128 0x38
 12759 2e86 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 410


 12760 2e87 53       		.byte	0x53
 12761 2e88 01       		.uleb128 0x1
 12762 2e89 30       		.byte	0x30
 12763 2e8a 38       		.uleb128 0x38
 12764 2e8b 01       		.uleb128 0x1
 12765 2e8c 52       		.byte	0x52
 12766 2e8d 01       		.uleb128 0x1
 12767 2e8e 30       		.byte	0x30
 12768 2e8f 38       		.uleb128 0x38
 12769 2e90 01       		.uleb128 0x1
 12770 2e91 51       		.byte	0x51
 12771 2e92 03       		.uleb128 0x3
 12772 2e93 91       		.byte	0x91
 12773 2e94 887F     		.sleb128 -120
 12774 2e96 38       		.uleb128 0x38
 12775 2e97 01       		.uleb128 0x1
 12776 2e98 50       		.byte	0x50
 12777 2e99 02       		.uleb128 0x2
 12778 2e9a 74       		.byte	0x74
 12779 2e9b 00       		.sleb128 0
 12780 2e9c 00       		.byte	0
 12781 2e9d 39       		.uleb128 0x39
 12782 2e9e 3C000000 		.4byte	.LVL562
 12783 2ea2 D5290000 		.4byte	0x29d5
 12784 2ea6 B92E0000 		.4byte	0x2eb9
 12785 2eaa 38       		.uleb128 0x38
 12786 2eab 01       		.uleb128 0x1
 12787 2eac 51       		.byte	0x51
 12788 2ead 03       		.uleb128 0x3
 12789 2eae 91       		.byte	0x91
 12790 2eaf 807F     		.sleb128 -128
 12791 2eb1 38       		.uleb128 0x38
 12792 2eb2 01       		.uleb128 0x1
 12793 2eb3 50       		.byte	0x50
 12794 2eb4 03       		.uleb128 0x3
 12795 2eb5 7D       		.byte	0x7d
 12796 2eb6 00       		.sleb128 0
 12797 2eb7 06       		.byte	0x6
 12798 2eb8 00       		.byte	0
 12799 2eb9 39       		.uleb128 0x39
 12800 2eba 48000000 		.4byte	.LVL565
 12801 2ebe 15480000 		.4byte	0x4815
 12802 2ec2 DA2E0000 		.4byte	0x2eda
 12803 2ec6 38       		.uleb128 0x38
 12804 2ec7 01       		.uleb128 0x1
 12805 2ec8 52       		.byte	0x52
 12806 2ec9 02       		.uleb128 0x2
 12807 2eca 75       		.byte	0x75
 12808 2ecb 00       		.sleb128 0
 12809 2ecc 38       		.uleb128 0x38
 12810 2ecd 01       		.uleb128 0x1
 12811 2ece 51       		.byte	0x51
 12812 2ecf 03       		.uleb128 0x3
 12813 2ed0 91       		.byte	0x91
 12814 2ed1 807F     		.sleb128 -128
 12815 2ed3 38       		.uleb128 0x38
 12816 2ed4 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 411


 12817 2ed5 50       		.byte	0x50
 12818 2ed6 02       		.uleb128 0x2
 12819 2ed7 77       		.byte	0x77
 12820 2ed8 00       		.sleb128 0
 12821 2ed9 00       		.byte	0
 12822 2eda 39       		.uleb128 0x39
 12823 2edb 52000000 		.4byte	.LVL566
 12824 2edf 15480000 		.4byte	0x4815
 12825 2ee3 FE2E0000 		.4byte	0x2efe
 12826 2ee7 38       		.uleb128 0x38
 12827 2ee8 01       		.uleb128 0x1
 12828 2ee9 52       		.byte	0x52
 12829 2eea 02       		.uleb128 0x2
 12830 2eeb 74       		.byte	0x74
 12831 2eec 00       		.sleb128 0
 12832 2eed 38       		.uleb128 0x38
 12833 2eee 01       		.uleb128 0x1
 12834 2eef 51       		.byte	0x51
 12835 2ef0 03       		.uleb128 0x3
 12836 2ef1 91       		.byte	0x91
 12837 2ef2 887F     		.sleb128 -120
 12838 2ef4 38       		.uleb128 0x38
 12839 2ef5 01       		.uleb128 0x1
 12840 2ef6 50       		.byte	0x50
 12841 2ef7 05       		.uleb128 0x5
 12842 2ef8 77       		.byte	0x77
 12843 2ef9 00       		.sleb128 0
 12844 2efa 75       		.byte	0x75
 12845 2efb 00       		.sleb128 0
 12846 2efc 22       		.byte	0x22
 12847 2efd 00       		.byte	0
 12848 2efe 37       		.uleb128 0x37
 12849 2eff 5E000000 		.4byte	.LVL567
 12850 2f03 15480000 		.4byte	0x4815
 12851 2f07 38       		.uleb128 0x38
 12852 2f08 01       		.uleb128 0x1
 12853 2f09 52       		.byte	0x52
 12854 2f0a 04       		.uleb128 0x4
 12855 2f0b 91       		.byte	0x91
 12856 2f0c FC7E     		.sleb128 -132
 12857 2f0e 06       		.byte	0x6
 12858 2f0f 38       		.uleb128 0x38
 12859 2f10 01       		.uleb128 0x1
 12860 2f11 51       		.byte	0x51
 12861 2f12 02       		.uleb128 0x2
 12862 2f13 76       		.byte	0x76
 12863 2f14 00       		.sleb128 0
 12864 2f15 38       		.uleb128 0x38
 12865 2f16 01       		.uleb128 0x1
 12866 2f17 50       		.byte	0x50
 12867 2f18 08       		.uleb128 0x8
 12868 2f19 77       		.byte	0x77
 12869 2f1a 00       		.sleb128 0
 12870 2f1b 74       		.byte	0x74
 12871 2f1c 00       		.sleb128 0
 12872 2f1d 22       		.byte	0x22
 12873 2f1e 75       		.byte	0x75
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 412


 12874 2f1f 00       		.sleb128 0
 12875 2f20 22       		.byte	0x22
 12876 2f21 00       		.byte	0
 12877 2f22 00       		.byte	0
 12878 2f23 16       		.uleb128 0x16
 12879 2f24 2C000000 		.4byte	0x2c
 12880 2f28 332F0000 		.4byte	0x2f33
 12881 2f2c 17       		.uleb128 0x17
 12882 2f2d B2000000 		.4byte	0xb2
 12883 2f31 48       		.byte	0x48
 12884 2f32 00       		.byte	0
 12885 2f33 16       		.uleb128 0x16
 12886 2f34 2C000000 		.4byte	0x2c
 12887 2f38 432F0000 		.4byte	0x2f43
 12888 2f3c 17       		.uleb128 0x17
 12889 2f3d B2000000 		.4byte	0xb2
 12890 2f41 04       		.byte	0x4
 12891 2f42 00       		.byte	0
 12892 2f43 33       		.uleb128 0x33
 12893 2f44 361D0000 		.4byte	.LASF556
 12894 2f48 01       		.byte	0x1
 12895 2f49 650D     		.2byte	0xd65
 12896 2f4b 25000000 		.4byte	0x25
 12897 2f4f 00000000 		.4byte	.LFB48
 12898 2f53 16000000 		.4byte	.LFE48-.LFB48
 12899 2f57 01       		.uleb128 0x1
 12900 2f58 9C       		.byte	0x9c
 12901 2f59 6E2F0000 		.4byte	0x2f6e
 12902 2f5d 23       		.uleb128 0x23
 12903 2f5e 51030000 		.4byte	.LASF256
 12904 2f62 01       		.byte	0x1
 12905 2f63 650D     		.2byte	0xd65
 12906 2f65 25000000 		.4byte	0x25
 12907 2f69 38280000 		.4byte	.LLST151
 12908 2f6d 00       		.byte	0
 12909 2f6e 19       		.uleb128 0x19
 12910 2f6f AA0F0000 		.4byte	.LASF557
 12911 2f73 01       		.byte	0x1
 12912 2f74 4912     		.2byte	0x1249
 12913 2f76 25000000 		.4byte	0x25
 12914 2f7a 01       		.byte	0x1
 12915 2f7b ED2F0000 		.4byte	0x2fed
 12916 2f7f 1B       		.uleb128 0x1b
 12917 2f80 24080000 		.4byte	.LASF461
 12918 2f84 01       		.byte	0x1
 12919 2f85 4912     		.2byte	0x1249
 12920 2f87 60110000 		.4byte	0x1160
 12921 2f8b 1D       		.uleb128 0x1d
 12922 2f8c 69647800 		.ascii	"idx\000"
 12923 2f90 01       		.byte	0x1
 12924 2f91 4F12     		.2byte	0x124f
 12925 2f93 50000000 		.4byte	0x50
 12926 2f97 1D       		.uleb128 0x1d
 12927 2f98 737A00   		.ascii	"sz\000"
 12928 2f9b 01       		.byte	0x1
 12929 2f9c 5012     		.2byte	0x1250
 12930 2f9e 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 413


 12931 2fa2 1E       		.uleb128 0x1e
 12932 2fa3 241A0000 		.4byte	.LASF460
 12933 2fa7 01       		.byte	0x1
 12934 2fa8 5112     		.2byte	0x1251
 12935 2faa 890B0000 		.4byte	0xb89
 12936 2fae 1E       		.uleb128 0x1e
 12937 2faf D5170000 		.4byte	.LASF462
 12938 2fb3 01       		.byte	0x1
 12939 2fb4 5212     		.2byte	0x1252
 12940 2fb6 25000000 		.4byte	0x25
 12941 2fba 1D       		.uleb128 0x1d
 12942 2fbb 6F696400 		.ascii	"oid\000"
 12943 2fbf 01       		.byte	0x1
 12944 2fc0 5312     		.2byte	0x1253
 12945 2fc2 50000000 		.4byte	0x50
 12946 2fc6 1E       		.uleb128 0x1e
 12947 2fc7 A1190000 		.4byte	.LASF558
 12948 2fcb 01       		.byte	0x1
 12949 2fcc 5412     		.2byte	0x1254
 12950 2fce 2C000000 		.4byte	0x2c
 12951 2fd2 1E       		.uleb128 0x1e
 12952 2fd3 D8160000 		.4byte	.LASF559
 12953 2fd7 01       		.byte	0x1
 12954 2fd8 5512     		.2byte	0x1255
 12955 2fda 2C000000 		.4byte	0x2c
 12956 2fde 1F       		.uleb128 0x1f
 12957 2fdf 1E       		.uleb128 0x1e
 12958 2fe0 BD1F0000 		.4byte	.LASF560
 12959 2fe4 01       		.byte	0x1
 12960 2fe5 7A12     		.2byte	0x127a
 12961 2fe7 25000000 		.4byte	0x25
 12962 2feb 00       		.byte	0
 12963 2fec 00       		.byte	0
 12964 2fed 19       		.uleb128 0x19
 12965 2fee 281D0000 		.4byte	.LASF561
 12966 2ff2 01       		.byte	0x1
 12967 2ff3 2A10     		.2byte	0x102a
 12968 2ff5 25000000 		.4byte	0x25
 12969 2ff9 01       		.byte	0x1
 12970 2ffa 3A300000 		.4byte	0x303a
 12971 2ffe 1B       		.uleb128 0x1b
 12972 2fff 241A0000 		.4byte	.LASF460
 12973 3003 01       		.byte	0x1
 12974 3004 2A10     		.2byte	0x102a
 12975 3006 890B0000 		.4byte	0xb89
 12976 300a 1A       		.uleb128 0x1a
 12977 300b 737A00   		.ascii	"sz\000"
 12978 300e 01       		.byte	0x1
 12979 300f 2A10     		.2byte	0x102a
 12980 3011 25000000 		.4byte	0x25
 12981 3015 1B       		.uleb128 0x1b
 12982 3016 24080000 		.4byte	.LASF461
 12983 301a 01       		.byte	0x1
 12984 301b 2A10     		.2byte	0x102a
 12985 301d 60110000 		.4byte	0x1160
 12986 3021 1D       		.uleb128 0x1d
 12987 3022 69647800 		.ascii	"idx\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 414


 12988 3026 01       		.byte	0x1
 12989 3027 2C10     		.2byte	0x102c
 12990 3029 50000000 		.4byte	0x50
 12991 302d 1E       		.uleb128 0x1e
 12992 302e D5170000 		.4byte	.LASF462
 12993 3032 01       		.byte	0x1
 12994 3033 2D10     		.2byte	0x102d
 12995 3035 25000000 		.4byte	0x25
 12996 3039 00       		.byte	0
 12997 303a 19       		.uleb128 0x19
 12998 303b E5000000 		.4byte	.LASF562
 12999 303f 01       		.byte	0x1
 13000 3040 7A10     		.2byte	0x107a
 13001 3042 25000000 		.4byte	0x25
 13002 3046 01       		.byte	0x1
 13003 3047 9D300000 		.4byte	0x309d
 13004 304b 1B       		.uleb128 0x1b
 13005 304c 241A0000 		.4byte	.LASF460
 13006 3050 01       		.byte	0x1
 13007 3051 7A10     		.2byte	0x107a
 13008 3053 890B0000 		.4byte	0xb89
 13009 3057 1A       		.uleb128 0x1a
 13010 3058 737A00   		.ascii	"sz\000"
 13011 305b 01       		.byte	0x1
 13012 305c 7A10     		.2byte	0x107a
 13013 305e 25000000 		.4byte	0x25
 13014 3062 1B       		.uleb128 0x1b
 13015 3063 24080000 		.4byte	.LASF461
 13016 3067 01       		.byte	0x1
 13017 3068 7A10     		.2byte	0x107a
 13018 306a 60110000 		.4byte	0x1160
 13019 306e 1D       		.uleb128 0x1d
 13020 306f 69647800 		.ascii	"idx\000"
 13021 3073 01       		.byte	0x1
 13022 3074 8010     		.2byte	0x1080
 13023 3076 50000000 		.4byte	0x50
 13024 307a 1E       		.uleb128 0x1e
 13025 307b D5170000 		.4byte	.LASF462
 13026 307f 01       		.byte	0x1
 13027 3080 8110     		.2byte	0x1081
 13028 3082 25000000 		.4byte	0x25
 13029 3086 1D       		.uleb128 0x1d
 13030 3087 6200     		.ascii	"b\000"
 13031 3089 01       		.byte	0x1
 13032 308a 8210     		.2byte	0x1082
 13033 308c 2C000000 		.4byte	0x2c
 13034 3090 1D       		.uleb128 0x1d
 13035 3091 6F696400 		.ascii	"oid\000"
 13036 3095 01       		.byte	0x1
 13037 3096 8310     		.2byte	0x1083
 13038 3098 50000000 		.4byte	0x50
 13039 309c 00       		.byte	0
 13040 309d 19       		.uleb128 0x19
 13041 309e 1D0B0000 		.4byte	.LASF563
 13042 30a2 01       		.byte	0x1
 13043 30a3 2B0F     		.2byte	0xf2b
 13044 30a5 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 415


 13045 30a9 01       		.byte	0x1
 13046 30aa 7E310000 		.4byte	0x317e
 13047 30ae 1B       		.uleb128 0x1b
 13048 30af 241A0000 		.4byte	.LASF460
 13049 30b3 01       		.byte	0x1
 13050 30b4 2B0F     		.2byte	0xf2b
 13051 30b6 890B0000 		.4byte	0xb89
 13052 30ba 1A       		.uleb128 0x1a
 13053 30bb 737A00   		.ascii	"sz\000"
 13054 30be 01       		.byte	0x1
 13055 30bf 2B0F     		.2byte	0xf2b
 13056 30c1 25000000 		.4byte	0x25
 13057 30c5 1B       		.uleb128 0x1b
 13058 30c6 24080000 		.4byte	.LASF461
 13059 30ca 01       		.byte	0x1
 13060 30cb 2B0F     		.2byte	0xf2b
 13061 30cd 60110000 		.4byte	0x1160
 13062 30d1 1D       		.uleb128 0x1d
 13063 30d2 69647800 		.ascii	"idx\000"
 13064 30d6 01       		.byte	0x1
 13065 30d7 2D0F     		.2byte	0xf2d
 13066 30d9 50000000 		.4byte	0x50
 13067 30dd 1E       		.uleb128 0x1e
 13068 30de D5170000 		.4byte	.LASF462
 13069 30e2 01       		.byte	0x1
 13070 30e3 2E0F     		.2byte	0xf2e
 13071 30e5 25000000 		.4byte	0x25
 13072 30e9 1F       		.uleb128 0x1f
 13073 30ea 1D       		.uleb128 0x1d
 13074 30eb 6200     		.ascii	"b\000"
 13075 30ed 01       		.byte	0x1
 13076 30ee 3A0F     		.2byte	0xf3a
 13077 30f0 2C000000 		.4byte	0x2c
 13078 30f4 1C       		.uleb128 0x1c
 13079 30f5 2B310000 		.4byte	0x312b
 13080 30f9 1E       		.uleb128 0x1e
 13081 30fa D7050000 		.4byte	.LASF564
 13082 30fe 01       		.byte	0x1
 13083 30ff 410F     		.2byte	0xf41
 13084 3101 A7070000 		.4byte	0x7a7
 13085 3105 1E       		.uleb128 0x1e
 13086 3106 3B0E0000 		.4byte	.LASF494
 13087 310a 01       		.byte	0x1
 13088 310b 420F     		.2byte	0xf42
 13089 310d 25000000 		.4byte	0x25
 13090 3111 1E       		.uleb128 0x1e
 13091 3112 771A0000 		.4byte	.LASF565
 13092 3116 01       		.byte	0x1
 13093 3117 430F     		.2byte	0xf43
 13094 3119 50000000 		.4byte	0x50
 13095 311d 1F       		.uleb128 0x1f
 13096 311e 1D       		.uleb128 0x1d
 13097 311f 787000   		.ascii	"xp\000"
 13098 3122 01       		.byte	0x1
 13099 3123 560F     		.2byte	0xf56
 13100 3125 B9000000 		.4byte	0xb9
 13101 3129 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 416


 13102 312a 00       		.byte	0
 13103 312b 1C       		.uleb128 0x1c
 13104 312c 62310000 		.4byte	0x3162
 13105 3130 1E       		.uleb128 0x1e
 13106 3131 85090000 		.4byte	.LASF566
 13107 3135 01       		.byte	0x1
 13108 3136 650F     		.2byte	0xf65
 13109 3138 A7070000 		.4byte	0x7a7
 13110 313c 1E       		.uleb128 0x1e
 13111 313d 3B0E0000 		.4byte	.LASF494
 13112 3141 01       		.byte	0x1
 13113 3142 660F     		.2byte	0xf66
 13114 3144 25000000 		.4byte	0x25
 13115 3148 1E       		.uleb128 0x1e
 13116 3149 771A0000 		.4byte	.LASF565
 13117 314d 01       		.byte	0x1
 13118 314e 670F     		.2byte	0xf67
 13119 3150 50000000 		.4byte	0x50
 13120 3154 1F       		.uleb128 0x1f
 13121 3155 1D       		.uleb128 0x1d
 13122 3156 787000   		.ascii	"xp\000"
 13123 3159 01       		.byte	0x1
 13124 315a 7A0F     		.2byte	0xf7a
 13125 315c B9000000 		.4byte	0xb9
 13126 3160 00       		.byte	0
 13127 3161 00       		.byte	0
 13128 3162 1F       		.uleb128 0x1f
 13129 3163 1E       		.uleb128 0x1e
 13130 3164 3B0E0000 		.4byte	.LASF494
 13131 3168 01       		.byte	0x1
 13132 3169 DC0F     		.2byte	0xfdc
 13133 316b 25000000 		.4byte	0x25
 13134 316f 1E       		.uleb128 0x1e
 13135 3170 771A0000 		.4byte	.LASF565
 13136 3174 01       		.byte	0x1
 13137 3175 DD0F     		.2byte	0xfdd
 13138 3177 50000000 		.4byte	0x50
 13139 317b 00       		.byte	0
 13140 317c 00       		.byte	0
 13141 317d 00       		.byte	0
 13142 317e 19       		.uleb128 0x19
 13143 317f F6050000 		.4byte	.LASF567
 13144 3183 01       		.byte	0x1
 13145 3184 A710     		.2byte	0x10a7
 13146 3186 25000000 		.4byte	0x25
 13147 318a 01       		.byte	0x1
 13148 318b D7310000 		.4byte	0x31d7
 13149 318f 1B       		.uleb128 0x1b
 13150 3190 241A0000 		.4byte	.LASF460
 13151 3194 01       		.byte	0x1
 13152 3195 A710     		.2byte	0x10a7
 13153 3197 890B0000 		.4byte	0xb89
 13154 319b 1A       		.uleb128 0x1a
 13155 319c 737A00   		.ascii	"sz\000"
 13156 319f 01       		.byte	0x1
 13157 31a0 A710     		.2byte	0x10a7
 13158 31a2 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 417


 13159 31a6 1B       		.uleb128 0x1b
 13160 31a7 24080000 		.4byte	.LASF461
 13161 31ab 01       		.byte	0x1
 13162 31ac A710     		.2byte	0x10a7
 13163 31ae 60110000 		.4byte	0x1160
 13164 31b2 1D       		.uleb128 0x1d
 13165 31b3 69647800 		.ascii	"idx\000"
 13166 31b7 01       		.byte	0x1
 13167 31b8 A910     		.2byte	0x10a9
 13168 31ba 50000000 		.4byte	0x50
 13169 31be 1E       		.uleb128 0x1e
 13170 31bf D5170000 		.4byte	.LASF462
 13171 31c3 01       		.byte	0x1
 13172 31c4 AA10     		.2byte	0x10aa
 13173 31c6 25000000 		.4byte	0x25
 13174 31ca 1D       		.uleb128 0x1d
 13175 31cb 72657400 		.ascii	"ret\000"
 13176 31cf 01       		.byte	0x1
 13177 31d0 AA10     		.2byte	0x10aa
 13178 31d2 25000000 		.4byte	0x25
 13179 31d6 00       		.byte	0
 13180 31d7 19       		.uleb128 0x19
 13181 31d8 C00C0000 		.4byte	.LASF568
 13182 31dc 01       		.byte	0x1
 13183 31dd D110     		.2byte	0x10d1
 13184 31df 25000000 		.4byte	0x25
 13185 31e3 01       		.byte	0x1
 13186 31e4 30320000 		.4byte	0x3230
 13187 31e8 1B       		.uleb128 0x1b
 13188 31e9 241A0000 		.4byte	.LASF460
 13189 31ed 01       		.byte	0x1
 13190 31ee D110     		.2byte	0x10d1
 13191 31f0 890B0000 		.4byte	0xb89
 13192 31f4 1A       		.uleb128 0x1a
 13193 31f5 737A00   		.ascii	"sz\000"
 13194 31f8 01       		.byte	0x1
 13195 31f9 D110     		.2byte	0x10d1
 13196 31fb 25000000 		.4byte	0x25
 13197 31ff 1B       		.uleb128 0x1b
 13198 3200 24080000 		.4byte	.LASF461
 13199 3204 01       		.byte	0x1
 13200 3205 D110     		.2byte	0x10d1
 13201 3207 60110000 		.4byte	0x1160
 13202 320b 1D       		.uleb128 0x1d
 13203 320c 69647800 		.ascii	"idx\000"
 13204 3210 01       		.byte	0x1
 13205 3211 D310     		.2byte	0x10d3
 13206 3213 50000000 		.4byte	0x50
 13207 3217 1E       		.uleb128 0x1e
 13208 3218 D5170000 		.4byte	.LASF462
 13209 321c 01       		.byte	0x1
 13210 321d D410     		.2byte	0x10d4
 13211 321f 25000000 		.4byte	0x25
 13212 3223 1D       		.uleb128 0x1d
 13213 3224 72657400 		.ascii	"ret\000"
 13214 3228 01       		.byte	0x1
 13215 3229 D410     		.2byte	0x10d4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 418


 13216 322b 25000000 		.4byte	0x25
 13217 322f 00       		.byte	0
 13218 3230 19       		.uleb128 0x19
 13219 3231 A4110000 		.4byte	.LASF569
 13220 3235 01       		.byte	0x1
 13221 3236 7811     		.2byte	0x1178
 13222 3238 25000000 		.4byte	0x25
 13223 323c 01       		.byte	0x1
 13224 323d 95320000 		.4byte	0x3295
 13225 3241 1B       		.uleb128 0x1b
 13226 3242 241A0000 		.4byte	.LASF460
 13227 3246 01       		.byte	0x1
 13228 3247 7811     		.2byte	0x1178
 13229 3249 890B0000 		.4byte	0xb89
 13230 324d 1A       		.uleb128 0x1a
 13231 324e 737A00   		.ascii	"sz\000"
 13232 3251 01       		.byte	0x1
 13233 3252 7811     		.2byte	0x1178
 13234 3254 25000000 		.4byte	0x25
 13235 3258 1B       		.uleb128 0x1b
 13236 3259 24080000 		.4byte	.LASF461
 13237 325d 01       		.byte	0x1
 13238 325e 7811     		.2byte	0x1178
 13239 3260 60110000 		.4byte	0x1160
 13240 3264 1D       		.uleb128 0x1d
 13241 3265 69647800 		.ascii	"idx\000"
 13242 3269 01       		.byte	0x1
 13243 326a 7A11     		.2byte	0x117a
 13244 326c 50000000 		.4byte	0x50
 13245 3270 1E       		.uleb128 0x1e
 13246 3271 D5170000 		.4byte	.LASF462
 13247 3275 01       		.byte	0x1
 13248 3276 7B11     		.2byte	0x117b
 13249 3278 25000000 		.4byte	0x25
 13250 327c 1F       		.uleb128 0x1f
 13251 327d 1D       		.uleb128 0x1d
 13252 327e 6200     		.ascii	"b\000"
 13253 3280 01       		.byte	0x1
 13254 3281 8511     		.2byte	0x1185
 13255 3283 2C000000 		.4byte	0x2c
 13256 3287 1E       		.uleb128 0x1e
 13257 3288 E4110000 		.4byte	.LASF570
 13258 328c 01       		.byte	0x1
 13259 328d 8611     		.2byte	0x1186
 13260 328f 4B120000 		.4byte	0x124b
 13261 3293 00       		.byte	0
 13262 3294 00       		.byte	0
 13263 3295 19       		.uleb128 0x19
 13264 3296 FE210000 		.4byte	.LASF571
 13265 329a 01       		.byte	0x1
 13266 329b 6A0C     		.2byte	0xc6a
 13267 329d 25000000 		.4byte	0x25
 13268 32a1 01       		.byte	0x1
 13269 32a2 C9320000 		.4byte	0x32c9
 13270 32a6 1B       		.uleb128 0x1b
 13271 32a7 24080000 		.4byte	.LASF461
 13272 32ab 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 419


 13273 32ac 6A0C     		.2byte	0xc6a
 13274 32ae 60110000 		.4byte	0x1160
 13275 32b2 1E       		.uleb128 0x1e
 13276 32b3 D5170000 		.4byte	.LASF462
 13277 32b7 01       		.byte	0x1
 13278 32b8 6C0C     		.2byte	0xc6c
 13279 32ba 25000000 		.4byte	0x25
 13280 32be 1D       		.uleb128 0x1d
 13281 32bf 6200     		.ascii	"b\000"
 13282 32c1 01       		.byte	0x1
 13283 32c2 6D0C     		.2byte	0xc6d
 13284 32c4 2C000000 		.4byte	0x2c
 13285 32c8 00       		.byte	0
 13286 32c9 19       		.uleb128 0x19
 13287 32ca D90D0000 		.4byte	.LASF572
 13288 32ce 01       		.byte	0x1
 13289 32cf C30E     		.2byte	0xec3
 13290 32d1 25000000 		.4byte	0x25
 13291 32d5 01       		.byte	0x1
 13292 32d6 9B330000 		.4byte	0x339b
 13293 32da 1B       		.uleb128 0x1b
 13294 32db 640E0000 		.4byte	.LASF573
 13295 32df 01       		.byte	0x1
 13296 32e0 C30E     		.2byte	0xec3
 13297 32e2 BF0B0000 		.4byte	0xbbf
 13298 32e6 1B       		.uleb128 0x1b
 13299 32e7 24080000 		.4byte	.LASF461
 13300 32eb 01       		.byte	0x1
 13301 32ec C30E     		.2byte	0xec3
 13302 32ee 60110000 		.4byte	0x1160
 13303 32f2 1C       		.uleb128 0x1c
 13304 32f3 24330000 		.4byte	0x3324
 13305 32f7 1E       		.uleb128 0x1e
 13306 32f8 8D200000 		.4byte	.LASF447
 13307 32fc 01       		.byte	0x1
 13308 32fd CA0E     		.2byte	0xeca
 13309 32ff FB070000 		.4byte	0x7fb
 13310 3303 1C       		.uleb128 0x1c
 13311 3304 15330000 		.4byte	0x3315
 13312 3308 1E       		.uleb128 0x1e
 13313 3309 B9090000 		.4byte	.LASF253
 13314 330d 01       		.byte	0x1
 13315 330e CE0E     		.2byte	0xece
 13316 3310 A7070000 		.4byte	0x7a7
 13317 3314 00       		.byte	0
 13318 3315 1F       		.uleb128 0x1f
 13319 3316 1E       		.uleb128 0x1e
 13320 3317 B9090000 		.4byte	.LASF253
 13321 331b 01       		.byte	0x1
 13322 331c D80E     		.2byte	0xed8
 13323 331e A7070000 		.4byte	0x7a7
 13324 3322 00       		.byte	0
 13325 3323 00       		.byte	0
 13326 3324 1F       		.uleb128 0x1f
 13327 3325 1E       		.uleb128 0x1e
 13328 3326 57210000 		.4byte	.LASF574
 13329 332a 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 420


 13330 332b EF0E     		.2byte	0xeef
 13331 332d 25000000 		.4byte	0x25
 13332 3331 1E       		.uleb128 0x1e
 13333 3332 5B0E0000 		.4byte	.LASF575
 13334 3336 01       		.byte	0x1
 13335 3337 F00E     		.2byte	0xef0
 13336 3339 25000000 		.4byte	0x25
 13337 333d 1E       		.uleb128 0x1e
 13338 333e 42050000 		.4byte	.LASF576
 13339 3342 01       		.byte	0x1
 13340 3343 F10E     		.2byte	0xef1
 13341 3345 25000000 		.4byte	0x25
 13342 3349 1E       		.uleb128 0x1e
 13343 334a F81D0000 		.4byte	.LASF577
 13344 334e 01       		.byte	0x1
 13345 334f F20E     		.2byte	0xef2
 13346 3351 25000000 		.4byte	0x25
 13347 3355 1E       		.uleb128 0x1e
 13348 3356 A01B0000 		.4byte	.LASF578
 13349 335a 01       		.byte	0x1
 13350 335b F30E     		.2byte	0xef3
 13351 335d 25000000 		.4byte	0x25
 13352 3361 1E       		.uleb128 0x1e
 13353 3362 29100000 		.4byte	.LASF579
 13354 3366 01       		.byte	0x1
 13355 3367 F40E     		.2byte	0xef4
 13356 3369 25000000 		.4byte	0x25
 13357 336d 1E       		.uleb128 0x1e
 13358 336e 8D200000 		.4byte	.LASF447
 13359 3372 01       		.byte	0x1
 13360 3373 F50E     		.2byte	0xef5
 13361 3375 FB070000 		.4byte	0x7fb
 13362 3379 1C       		.uleb128 0x1c
 13363 337a 8B330000 		.4byte	0x338b
 13364 337e 1E       		.uleb128 0x1e
 13365 337f B9090000 		.4byte	.LASF253
 13366 3383 01       		.byte	0x1
 13367 3384 F90E     		.2byte	0xef9
 13368 3386 A7070000 		.4byte	0x7a7
 13369 338a 00       		.byte	0
 13370 338b 1F       		.uleb128 0x1f
 13371 338c 1E       		.uleb128 0x1e
 13372 338d B9090000 		.4byte	.LASF253
 13373 3391 01       		.byte	0x1
 13374 3392 060F     		.2byte	0xf06
 13375 3394 A7070000 		.4byte	0x7a7
 13376 3398 00       		.byte	0
 13377 3399 00       		.byte	0
 13378 339a 00       		.byte	0
 13379 339b 33       		.uleb128 0x33
 13380 339c 22140000 		.4byte	.LASF580
 13381 33a0 01       		.byte	0x1
 13382 33a1 4613     		.2byte	0x1346
 13383 33a3 25000000 		.4byte	0x25
 13384 33a7 00000000 		.4byte	.LFB64
 13385 33ab 1C080000 		.4byte	.LFE64-.LFB64
 13386 33af 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 421


 13387 33b0 9C       		.byte	0x9c
 13388 33b1 803F0000 		.4byte	0x3f80
 13389 33b5 23       		.uleb128 0x23
 13390 33b6 24080000 		.4byte	.LASF461
 13391 33ba 01       		.byte	0x1
 13392 33bb 4613     		.2byte	0x1346
 13393 33bd 60110000 		.4byte	0x1160
 13394 33c1 59280000 		.4byte	.LLST152
 13395 33c5 23       		.uleb128 0x23
 13396 33c6 51030000 		.4byte	.LASF256
 13397 33ca 01       		.byte	0x1
 13398 33cb 4613     		.2byte	0x1346
 13399 33cd 25000000 		.4byte	0x25
 13400 33d1 85280000 		.4byte	.LLST153
 13401 33d5 23       		.uleb128 0x23
 13402 33d6 A8160000 		.4byte	.LASF280
 13403 33da 01       		.byte	0x1
 13404 33db 4613     		.2byte	0x1346
 13405 33dd 25000000 		.4byte	0x25
 13406 33e1 A5280000 		.4byte	.LLST154
 13407 33e5 2B       		.uleb128 0x2b
 13408 33e6 636D00   		.ascii	"cm\000"
 13409 33e9 01       		.byte	0x1
 13410 33ea 4613     		.2byte	0x1346
 13411 33ec B9000000 		.4byte	0xb9
 13412 33f0 C5280000 		.4byte	.LLST155
 13413 33f4 35       		.uleb128 0x35
 13414 33f5 D00C0000 		.4byte	.LASF581
 13415 33f9 01       		.byte	0x1
 13416 33fa 4813     		.2byte	0x1348
 13417 33fc 50000000 		.4byte	0x50
 13418 3400 02       		.uleb128 0x2
 13419 3401 91       		.byte	0x91
 13420 3402 44       		.sleb128 -60
 13421 3403 25       		.uleb128 0x25
 13422 3404 72657400 		.ascii	"ret\000"
 13423 3408 01       		.byte	0x1
 13424 3409 4913     		.2byte	0x1349
 13425 340b 25000000 		.4byte	0x25
 13426 340f E5280000 		.4byte	.LLST156
 13427 3413 34       		.uleb128 0x34
 13428 3414 FA090000 		.4byte	.LASF472
 13429 3418 01       		.byte	0x1
 13430 3419 4A13     		.2byte	0x134a
 13431 341b 25000000 		.4byte	0x25
 13432 341f 19290000 		.4byte	.LLST157
 13433 3423 34       		.uleb128 0x34
 13434 3424 C70A0000 		.4byte	.LASF582
 13435 3428 01       		.byte	0x1
 13436 3429 4B13     		.2byte	0x134b
 13437 342b 25000000 		.4byte	0x25
 13438 342f 3A290000 		.4byte	.LLST158
 13439 3433 26       		.uleb128 0x26
 13440 3434 6E2F0000 		.4byte	0x2f6e
 13441 3438 60000000 		.4byte	.LBB169
 13442 343c 78010000 		.4byte	.Ldebug_ranges0+0x178
 13443 3440 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 422


 13444 3441 6213     		.2byte	0x1362
 13445 3443 203E0000 		.4byte	0x3e20
 13446 3447 27       		.uleb128 0x27
 13447 3448 7F2F0000 		.4byte	0x2f7f
 13448 344c 8D290000 		.4byte	.LLST159
 13449 3450 2E       		.uleb128 0x2e
 13450 3451 78010000 		.4byte	.Ldebug_ranges0+0x178
 13451 3455 3F       		.uleb128 0x3f
 13452 3456 8B2F0000 		.4byte	0x2f8b
 13453 345a 03       		.uleb128 0x3
 13454 345b 91       		.byte	0x91
 13455 345c A87F     		.sleb128 -88
 13456 345e 30       		.uleb128 0x30
 13457 345f 972F0000 		.4byte	0x2f97
 13458 3463 A0290000 		.4byte	.LLST160
 13459 3467 30       		.uleb128 0x30
 13460 3468 A22F0000 		.4byte	0x2fa2
 13461 346c D8290000 		.4byte	.LLST161
 13462 3470 3F       		.uleb128 0x3f
 13463 3471 AE2F0000 		.4byte	0x2fae
 13464 3475 03       		.uleb128 0x3
 13465 3476 91       		.byte	0x91
 13466 3477 AC7F     		.sleb128 -84
 13467 3479 3F       		.uleb128 0x3f
 13468 347a BA2F0000 		.4byte	0x2fba
 13469 347e 03       		.uleb128 0x3
 13470 347f 91       		.byte	0x91
 13471 3480 B07F     		.sleb128 -80
 13472 3482 30       		.uleb128 0x30
 13473 3483 C62F0000 		.4byte	0x2fc6
 13474 3487 102A0000 		.4byte	.LLST162
 13475 348b 30       		.uleb128 0x30
 13476 348c D22F0000 		.4byte	0x2fd2
 13477 3490 7E2A0000 		.4byte	.LLST163
 13478 3494 2F       		.uleb128 0x2f
 13479 3495 E2000000 		.4byte	.LBB171
 13480 3499 26000000 		.4byte	.LBE171-.LBB171
 13481 349d D1340000 		.4byte	0x34d1
 13482 34a1 3F       		.uleb128 0x3f
 13483 34a2 DF2F0000 		.4byte	0x2fdf
 13484 34a6 02       		.uleb128 0x2
 13485 34a7 91       		.byte	0x91
 13486 34a8 48       		.sleb128 -56
 13487 34a9 37       		.uleb128 0x37
 13488 34aa F4000000 		.4byte	.LVL588
 13489 34ae 49150000 		.4byte	0x1549
 13490 34b2 38       		.uleb128 0x38
 13491 34b3 01       		.uleb128 0x1
 13492 34b4 53       		.byte	0x53
 13493 34b5 04       		.uleb128 0x4
 13494 34b6 91       		.byte	0x91
 13495 34b7 807F     		.sleb128 -128
 13496 34b9 06       		.byte	0x6
 13497 34ba 38       		.uleb128 0x38
 13498 34bb 01       		.uleb128 0x1
 13499 34bc 52       		.byte	0x52
 13500 34bd 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 423


 13501 34be 91       		.byte	0x91
 13502 34bf 48       		.sleb128 -56
 13503 34c0 38       		.uleb128 0x38
 13504 34c1 01       		.uleb128 0x1
 13505 34c2 51       		.byte	0x51
 13506 34c3 03       		.uleb128 0x3
 13507 34c4 91       		.byte	0x91
 13508 34c5 A87F     		.sleb128 -88
 13509 34c7 38       		.uleb128 0x38
 13510 34c8 01       		.uleb128 0x1
 13511 34c9 50       		.byte	0x50
 13512 34ca 04       		.uleb128 0x4
 13513 34cb 91       		.byte	0x91
 13514 34cc FC7E     		.sleb128 -132
 13515 34ce 06       		.byte	0x6
 13516 34cf 00       		.byte	0
 13517 34d0 00       		.byte	0
 13518 34d1 26       		.uleb128 0x26
 13519 34d2 66110000 		.4byte	0x1166
 13520 34d6 80010000 		.4byte	.LBB172
 13521 34da 90010000 		.4byte	.Ldebug_ranges0+0x190
 13522 34de 01       		.byte	0x1
 13523 34df 9512     		.2byte	0x1295
 13524 34e1 5B350000 		.4byte	0x355b
 13525 34e5 29       		.uleb128 0x29
 13526 34e6 8E110000 		.4byte	0x118e
 13527 34ea 27       		.uleb128 0x27
 13528 34eb 83110000 		.4byte	0x1183
 13529 34ef B82A0000 		.4byte	.LLST164
 13530 34f3 27       		.uleb128 0x27
 13531 34f4 77110000 		.4byte	0x1177
 13532 34f8 CB2A0000 		.4byte	.LLST165
 13533 34fc 2E       		.uleb128 0x2e
 13534 34fd 90010000 		.4byte	.Ldebug_ranges0+0x190
 13535 3501 3F       		.uleb128 0x3f
 13536 3502 9A110000 		.4byte	0x119a
 13537 3506 02       		.uleb128 0x2
 13538 3507 91       		.byte	0x91
 13539 3508 44       		.sleb128 -60
 13540 3509 3F       		.uleb128 0x3f
 13541 350a A6110000 		.4byte	0x11a6
 13542 350e 02       		.uleb128 0x2
 13543 350f 91       		.byte	0x91
 13544 3510 48       		.sleb128 -56
 13545 3511 39       		.uleb128 0x39
 13546 3512 94010000 		.4byte	.LVL592
 13547 3516 E4150000 		.4byte	0x15e4
 13548 351a 37350000 		.4byte	0x3537
 13549 351e 38       		.uleb128 0x38
 13550 351f 01       		.uleb128 0x1
 13551 3520 53       		.byte	0x53
 13552 3521 02       		.uleb128 0x2
 13553 3522 75       		.byte	0x75
 13554 3523 00       		.sleb128 0
 13555 3524 38       		.uleb128 0x38
 13556 3525 01       		.uleb128 0x1
 13557 3526 52       		.byte	0x52
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 424


 13558 3527 02       		.uleb128 0x2
 13559 3528 91       		.byte	0x91
 13560 3529 48       		.sleb128 -56
 13561 352a 38       		.uleb128 0x38
 13562 352b 01       		.uleb128 0x1
 13563 352c 51       		.byte	0x51
 13564 352d 02       		.uleb128 0x2
 13565 352e 91       		.byte	0x91
 13566 352f 44       		.sleb128 -60
 13567 3530 38       		.uleb128 0x38
 13568 3531 01       		.uleb128 0x1
 13569 3532 50       		.byte	0x50
 13570 3533 02       		.uleb128 0x2
 13571 3534 74       		.byte	0x74
 13572 3535 00       		.sleb128 0
 13573 3536 00       		.byte	0
 13574 3537 37       		.uleb128 0x37
 13575 3538 BC010000 		.4byte	.LVL594
 13576 353c 49150000 		.4byte	0x1549
 13577 3540 38       		.uleb128 0x38
 13578 3541 01       		.uleb128 0x1
 13579 3542 53       		.byte	0x53
 13580 3543 02       		.uleb128 0x2
 13581 3544 75       		.byte	0x75
 13582 3545 00       		.sleb128 0
 13583 3546 38       		.uleb128 0x38
 13584 3547 01       		.uleb128 0x1
 13585 3548 52       		.byte	0x52
 13586 3549 02       		.uleb128 0x2
 13587 354a 91       		.byte	0x91
 13588 354b 48       		.sleb128 -56
 13589 354c 38       		.uleb128 0x38
 13590 354d 01       		.uleb128 0x1
 13591 354e 51       		.byte	0x51
 13592 354f 02       		.uleb128 0x2
 13593 3550 91       		.byte	0x91
 13594 3551 44       		.sleb128 -60
 13595 3552 38       		.uleb128 0x38
 13596 3553 01       		.uleb128 0x1
 13597 3554 50       		.byte	0x50
 13598 3555 02       		.uleb128 0x2
 13599 3556 74       		.byte	0x74
 13600 3557 00       		.sleb128 0
 13601 3558 00       		.byte	0
 13602 3559 00       		.byte	0
 13603 355a 00       		.byte	0
 13604 355b 3D       		.uleb128 0x3d
 13605 355c ED2F0000 		.4byte	0x2fed
 13606 3560 DC010000 		.4byte	.LBB176
 13607 3564 EA000000 		.4byte	.LBE176-.LBB176
 13608 3568 01       		.byte	0x1
 13609 3569 9A12     		.2byte	0x129a
 13610 356b AB360000 		.4byte	0x36ab
 13611 356f 27       		.uleb128 0x27
 13612 3570 15300000 		.4byte	0x3015
 13613 3574 DE2A0000 		.4byte	.LLST166
 13614 3578 27       		.uleb128 0x27
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 425


 13615 3579 0A300000 		.4byte	0x300a
 13616 357d F12A0000 		.4byte	.LLST167
 13617 3581 27       		.uleb128 0x27
 13618 3582 FE2F0000 		.4byte	0x2ffe
 13619 3586 042B0000 		.4byte	.LLST168
 13620 358a 32       		.uleb128 0x32
 13621 358b DC010000 		.4byte	.LBB177
 13622 358f EA000000 		.4byte	.LBE177-.LBB177
 13623 3593 3F       		.uleb128 0x3f
 13624 3594 21300000 		.4byte	0x3021
 13625 3598 02       		.uleb128 0x2
 13626 3599 91       		.byte	0x91
 13627 359a 44       		.sleb128 -60
 13628 359b 3F       		.uleb128 0x3f
 13629 359c 2D300000 		.4byte	0x302d
 13630 35a0 02       		.uleb128 0x2
 13631 35a1 91       		.byte	0x91
 13632 35a2 48       		.sleb128 -56
 13633 35a3 39       		.uleb128 0x39
 13634 35a4 EE010000 		.4byte	.LVL597
 13635 35a8 E4150000 		.4byte	0x15e4
 13636 35ac C9350000 		.4byte	0x35c9
 13637 35b0 38       		.uleb128 0x38
 13638 35b1 01       		.uleb128 0x1
 13639 35b2 53       		.byte	0x53
 13640 35b3 02       		.uleb128 0x2
 13641 35b4 75       		.byte	0x75
 13642 35b5 00       		.sleb128 0
 13643 35b6 38       		.uleb128 0x38
 13644 35b7 01       		.uleb128 0x1
 13645 35b8 52       		.byte	0x52
 13646 35b9 02       		.uleb128 0x2
 13647 35ba 91       		.byte	0x91
 13648 35bb 48       		.sleb128 -56
 13649 35bc 38       		.uleb128 0x38
 13650 35bd 01       		.uleb128 0x1
 13651 35be 51       		.byte	0x51
 13652 35bf 02       		.uleb128 0x2
 13653 35c0 91       		.byte	0x91
 13654 35c1 44       		.sleb128 -60
 13655 35c2 38       		.uleb128 0x38
 13656 35c3 01       		.uleb128 0x1
 13657 35c4 50       		.byte	0x50
 13658 35c5 02       		.uleb128 0x2
 13659 35c6 74       		.byte	0x74
 13660 35c7 00       		.sleb128 0
 13661 35c8 00       		.byte	0
 13662 35c9 39       		.uleb128 0x39
 13663 35ca 00020000 		.4byte	.LVL598
 13664 35ce E4150000 		.4byte	0x15e4
 13665 35d2 EF350000 		.4byte	0x35ef
 13666 35d6 38       		.uleb128 0x38
 13667 35d7 01       		.uleb128 0x1
 13668 35d8 53       		.byte	0x53
 13669 35d9 02       		.uleb128 0x2
 13670 35da 75       		.byte	0x75
 13671 35db 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 426


 13672 35dc 38       		.uleb128 0x38
 13673 35dd 01       		.uleb128 0x1
 13674 35de 52       		.byte	0x52
 13675 35df 02       		.uleb128 0x2
 13676 35e0 91       		.byte	0x91
 13677 35e1 48       		.sleb128 -56
 13678 35e2 38       		.uleb128 0x38
 13679 35e3 01       		.uleb128 0x1
 13680 35e4 51       		.byte	0x51
 13681 35e5 02       		.uleb128 0x2
 13682 35e6 91       		.byte	0x91
 13683 35e7 44       		.sleb128 -60
 13684 35e8 38       		.uleb128 0x38
 13685 35e9 01       		.uleb128 0x1
 13686 35ea 50       		.byte	0x50
 13687 35eb 02       		.uleb128 0x2
 13688 35ec 74       		.byte	0x74
 13689 35ed 00       		.sleb128 0
 13690 35ee 00       		.byte	0
 13691 35ef 39       		.uleb128 0x39
 13692 35f0 1E020000 		.4byte	.LVL599
 13693 35f4 49150000 		.4byte	0x1549
 13694 35f8 15360000 		.4byte	0x3615
 13695 35fc 38       		.uleb128 0x38
 13696 35fd 01       		.uleb128 0x1
 13697 35fe 53       		.byte	0x53
 13698 35ff 02       		.uleb128 0x2
 13699 3600 75       		.byte	0x75
 13700 3601 00       		.sleb128 0
 13701 3602 38       		.uleb128 0x38
 13702 3603 01       		.uleb128 0x1
 13703 3604 52       		.byte	0x52
 13704 3605 02       		.uleb128 0x2
 13705 3606 91       		.byte	0x91
 13706 3607 48       		.sleb128 -56
 13707 3608 38       		.uleb128 0x38
 13708 3609 01       		.uleb128 0x1
 13709 360a 51       		.byte	0x51
 13710 360b 02       		.uleb128 0x2
 13711 360c 91       		.byte	0x91
 13712 360d 44       		.sleb128 -60
 13713 360e 38       		.uleb128 0x38
 13714 360f 01       		.uleb128 0x1
 13715 3610 50       		.byte	0x50
 13716 3611 02       		.uleb128 0x2
 13717 3612 74       		.byte	0x74
 13718 3613 00       		.sleb128 0
 13719 3614 00       		.byte	0
 13720 3615 39       		.uleb128 0x39
 13721 3616 3C020000 		.4byte	.LVL600
 13722 361a 49150000 		.4byte	0x1549
 13723 361e 3B360000 		.4byte	0x363b
 13724 3622 38       		.uleb128 0x38
 13725 3623 01       		.uleb128 0x1
 13726 3624 53       		.byte	0x53
 13727 3625 02       		.uleb128 0x2
 13728 3626 75       		.byte	0x75
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 427


 13729 3627 00       		.sleb128 0
 13730 3628 38       		.uleb128 0x38
 13731 3629 01       		.uleb128 0x1
 13732 362a 52       		.byte	0x52
 13733 362b 02       		.uleb128 0x2
 13734 362c 91       		.byte	0x91
 13735 362d 48       		.sleb128 -56
 13736 362e 38       		.uleb128 0x38
 13737 362f 01       		.uleb128 0x1
 13738 3630 51       		.byte	0x51
 13739 3631 02       		.uleb128 0x2
 13740 3632 91       		.byte	0x91
 13741 3633 44       		.sleb128 -60
 13742 3634 38       		.uleb128 0x38
 13743 3635 01       		.uleb128 0x1
 13744 3636 50       		.byte	0x50
 13745 3637 02       		.uleb128 0x2
 13746 3638 74       		.byte	0x74
 13747 3639 00       		.sleb128 0
 13748 363a 00       		.byte	0
 13749 363b 39       		.uleb128 0x39
 13750 363c 5A020000 		.4byte	.LVL601
 13751 3640 49150000 		.4byte	0x1549
 13752 3644 61360000 		.4byte	0x3661
 13753 3648 38       		.uleb128 0x38
 13754 3649 01       		.uleb128 0x1
 13755 364a 53       		.byte	0x53
 13756 364b 02       		.uleb128 0x2
 13757 364c 75       		.byte	0x75
 13758 364d 00       		.sleb128 0
 13759 364e 38       		.uleb128 0x38
 13760 364f 01       		.uleb128 0x1
 13761 3650 52       		.byte	0x52
 13762 3651 02       		.uleb128 0x2
 13763 3652 91       		.byte	0x91
 13764 3653 48       		.sleb128 -56
 13765 3654 38       		.uleb128 0x38
 13766 3655 01       		.uleb128 0x1
 13767 3656 51       		.byte	0x51
 13768 3657 02       		.uleb128 0x2
 13769 3658 91       		.byte	0x91
 13770 3659 44       		.sleb128 -60
 13771 365a 38       		.uleb128 0x38
 13772 365b 01       		.uleb128 0x1
 13773 365c 50       		.byte	0x50
 13774 365d 02       		.uleb128 0x2
 13775 365e 74       		.byte	0x74
 13776 365f 00       		.sleb128 0
 13777 3660 00       		.byte	0
 13778 3661 39       		.uleb128 0x39
 13779 3662 96020000 		.4byte	.LVL602
 13780 3666 49150000 		.4byte	0x1549
 13781 366a 87360000 		.4byte	0x3687
 13782 366e 38       		.uleb128 0x38
 13783 366f 01       		.uleb128 0x1
 13784 3670 53       		.byte	0x53
 13785 3671 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 428


 13786 3672 75       		.byte	0x75
 13787 3673 00       		.sleb128 0
 13788 3674 38       		.uleb128 0x38
 13789 3675 01       		.uleb128 0x1
 13790 3676 52       		.byte	0x52
 13791 3677 02       		.uleb128 0x2
 13792 3678 91       		.byte	0x91
 13793 3679 48       		.sleb128 -56
 13794 367a 38       		.uleb128 0x38
 13795 367b 01       		.uleb128 0x1
 13796 367c 51       		.byte	0x51
 13797 367d 02       		.uleb128 0x2
 13798 367e 91       		.byte	0x91
 13799 367f 44       		.sleb128 -60
 13800 3680 38       		.uleb128 0x38
 13801 3681 01       		.uleb128 0x1
 13802 3682 50       		.byte	0x50
 13803 3683 02       		.uleb128 0x2
 13804 3684 74       		.byte	0x74
 13805 3685 00       		.sleb128 0
 13806 3686 00       		.byte	0
 13807 3687 37       		.uleb128 0x37
 13808 3688 C4020000 		.4byte	.LVL603
 13809 368c 49150000 		.4byte	0x1549
 13810 3690 38       		.uleb128 0x38
 13811 3691 01       		.uleb128 0x1
 13812 3692 53       		.byte	0x53
 13813 3693 02       		.uleb128 0x2
 13814 3694 75       		.byte	0x75
 13815 3695 00       		.sleb128 0
 13816 3696 38       		.uleb128 0x38
 13817 3697 01       		.uleb128 0x1
 13818 3698 52       		.byte	0x52
 13819 3699 02       		.uleb128 0x2
 13820 369a 91       		.byte	0x91
 13821 369b 48       		.sleb128 -56
 13822 369c 38       		.uleb128 0x38
 13823 369d 01       		.uleb128 0x1
 13824 369e 51       		.byte	0x51
 13825 369f 02       		.uleb128 0x2
 13826 36a0 91       		.byte	0x91
 13827 36a1 44       		.sleb128 -60
 13828 36a2 38       		.uleb128 0x38
 13829 36a3 01       		.uleb128 0x1
 13830 36a4 50       		.byte	0x50
 13831 36a5 02       		.uleb128 0x2
 13832 36a6 74       		.byte	0x74
 13833 36a7 00       		.sleb128 0
 13834 36a8 00       		.byte	0
 13835 36a9 00       		.byte	0
 13836 36aa 00       		.byte	0
 13837 36ab 26       		.uleb128 0x26
 13838 36ac 3A300000 		.4byte	0x303a
 13839 36b0 C8020000 		.4byte	.LBB178
 13840 36b4 A8010000 		.4byte	.Ldebug_ranges0+0x1a8
 13841 36b8 01       		.byte	0x1
 13842 36b9 9F12     		.2byte	0x129f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 429


 13843 36bb 9C370000 		.4byte	0x379c
 13844 36bf 27       		.uleb128 0x27
 13845 36c0 62300000 		.4byte	0x3062
 13846 36c4 172B0000 		.4byte	.LLST169
 13847 36c8 27       		.uleb128 0x27
 13848 36c9 57300000 		.4byte	0x3057
 13849 36cd 2A2B0000 		.4byte	.LLST170
 13850 36d1 27       		.uleb128 0x27
 13851 36d2 4B300000 		.4byte	0x304b
 13852 36d6 3D2B0000 		.4byte	.LLST171
 13853 36da 2E       		.uleb128 0x2e
 13854 36db A8010000 		.4byte	.Ldebug_ranges0+0x1a8
 13855 36df 3F       		.uleb128 0x3f
 13856 36e0 6E300000 		.4byte	0x306e
 13857 36e4 02       		.uleb128 0x2
 13858 36e5 91       		.byte	0x91
 13859 36e6 40       		.sleb128 -64
 13860 36e7 3F       		.uleb128 0x3f
 13861 36e8 7A300000 		.4byte	0x307a
 13862 36ec 02       		.uleb128 0x2
 13863 36ed 91       		.byte	0x91
 13864 36ee 44       		.sleb128 -60
 13865 36ef 30       		.uleb128 0x30
 13866 36f0 86300000 		.4byte	0x3086
 13867 36f4 5B2B0000 		.4byte	.LLST172
 13868 36f8 3F       		.uleb128 0x3f
 13869 36f9 90300000 		.4byte	0x3090
 13870 36fd 02       		.uleb128 0x2
 13871 36fe 91       		.byte	0x91
 13872 36ff 48       		.sleb128 -56
 13873 3700 39       		.uleb128 0x39
 13874 3701 DC020000 		.4byte	.LVL606
 13875 3705 E4150000 		.4byte	0x15e4
 13876 3709 26370000 		.4byte	0x3726
 13877 370d 38       		.uleb128 0x38
 13878 370e 01       		.uleb128 0x1
 13879 370f 53       		.byte	0x53
 13880 3710 02       		.uleb128 0x2
 13881 3711 75       		.byte	0x75
 13882 3712 00       		.sleb128 0
 13883 3713 38       		.uleb128 0x38
 13884 3714 01       		.uleb128 0x1
 13885 3715 52       		.byte	0x52
 13886 3716 02       		.uleb128 0x2
 13887 3717 91       		.byte	0x91
 13888 3718 44       		.sleb128 -60
 13889 3719 38       		.uleb128 0x38
 13890 371a 01       		.uleb128 0x1
 13891 371b 51       		.byte	0x51
 13892 371c 02       		.uleb128 0x2
 13893 371d 91       		.byte	0x91
 13894 371e 40       		.sleb128 -64
 13895 371f 38       		.uleb128 0x38
 13896 3720 01       		.uleb128 0x1
 13897 3721 50       		.byte	0x50
 13898 3722 02       		.uleb128 0x2
 13899 3723 74       		.byte	0x74
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 430


 13900 3724 00       		.sleb128 0
 13901 3725 00       		.byte	0
 13902 3726 39       		.uleb128 0x39
 13903 3727 F6020000 		.4byte	.LVL608
 13904 372b E4150000 		.4byte	0x15e4
 13905 372f 4C370000 		.4byte	0x374c
 13906 3733 38       		.uleb128 0x38
 13907 3734 01       		.uleb128 0x1
 13908 3735 53       		.byte	0x53
 13909 3736 02       		.uleb128 0x2
 13910 3737 75       		.byte	0x75
 13911 3738 00       		.sleb128 0
 13912 3739 38       		.uleb128 0x38
 13913 373a 01       		.uleb128 0x1
 13914 373b 52       		.byte	0x52
 13915 373c 02       		.uleb128 0x2
 13916 373d 91       		.byte	0x91
 13917 373e 44       		.sleb128 -60
 13918 373f 38       		.uleb128 0x38
 13919 3740 01       		.uleb128 0x1
 13920 3741 51       		.byte	0x51
 13921 3742 02       		.uleb128 0x2
 13922 3743 91       		.byte	0x91
 13923 3744 40       		.sleb128 -64
 13924 3745 38       		.uleb128 0x38
 13925 3746 01       		.uleb128 0x1
 13926 3747 50       		.byte	0x50
 13927 3748 02       		.uleb128 0x2
 13928 3749 74       		.byte	0x74
 13929 374a 00       		.sleb128 0
 13930 374b 00       		.byte	0
 13931 374c 39       		.uleb128 0x39
 13932 374d 0E030000 		.4byte	.LVL609
 13933 3751 C01B0000 		.4byte	0x1bc0
 13934 3755 78370000 		.4byte	0x3778
 13935 3759 38       		.uleb128 0x38
 13936 375a 01       		.uleb128 0x1
 13937 375b 53       		.byte	0x53
 13938 375c 01       		.uleb128 0x1
 13939 375d 37       		.byte	0x37
 13940 375e 38       		.uleb128 0x38
 13941 375f 01       		.uleb128 0x1
 13942 3760 52       		.byte	0x52
 13943 3761 02       		.uleb128 0x2
 13944 3762 91       		.byte	0x91
 13945 3763 48       		.sleb128 -56
 13946 3764 38       		.uleb128 0x38
 13947 3765 01       		.uleb128 0x1
 13948 3766 51       		.byte	0x51
 13949 3767 02       		.uleb128 0x2
 13950 3768 91       		.byte	0x91
 13951 3769 40       		.sleb128 -64
 13952 376a 38       		.uleb128 0x38
 13953 376b 01       		.uleb128 0x1
 13954 376c 50       		.byte	0x50
 13955 376d 02       		.uleb128 0x2
 13956 376e 74       		.byte	0x74
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 431


 13957 376f 00       		.sleb128 0
 13958 3770 38       		.uleb128 0x38
 13959 3771 02       		.uleb128 0x2
 13960 3772 7D       		.byte	0x7d
 13961 3773 00       		.sleb128 0
 13962 3774 02       		.uleb128 0x2
 13963 3775 75       		.byte	0x75
 13964 3776 00       		.sleb128 0
 13965 3777 00       		.byte	0
 13966 3778 37       		.uleb128 0x37
 13967 3779 28030000 		.4byte	.LVL611
 13968 377d 49150000 		.4byte	0x1549
 13969 3781 38       		.uleb128 0x38
 13970 3782 01       		.uleb128 0x1
 13971 3783 53       		.byte	0x53
 13972 3784 02       		.uleb128 0x2
 13973 3785 75       		.byte	0x75
 13974 3786 00       		.sleb128 0
 13975 3787 38       		.uleb128 0x38
 13976 3788 01       		.uleb128 0x1
 13977 3789 52       		.byte	0x52
 13978 378a 02       		.uleb128 0x2
 13979 378b 91       		.byte	0x91
 13980 378c 44       		.sleb128 -60
 13981 378d 38       		.uleb128 0x38
 13982 378e 01       		.uleb128 0x1
 13983 378f 51       		.byte	0x51
 13984 3790 02       		.uleb128 0x2
 13985 3791 91       		.byte	0x91
 13986 3792 40       		.sleb128 -64
 13987 3793 38       		.uleb128 0x38
 13988 3794 01       		.uleb128 0x1
 13989 3795 50       		.byte	0x50
 13990 3796 02       		.uleb128 0x2
 13991 3797 74       		.byte	0x74
 13992 3798 00       		.sleb128 0
 13993 3799 00       		.byte	0
 13994 379a 00       		.byte	0
 13995 379b 00       		.byte	0
 13996 379c 26       		.uleb128 0x26
 13997 379d 9D300000 		.4byte	0x309d
 13998 37a1 56030000 		.4byte	.LBB182
 13999 37a5 C0010000 		.4byte	.Ldebug_ranges0+0x1c0
 14000 37a9 01       		.byte	0x1
 14001 37aa A812     		.2byte	0x12a8
 14002 37ac 49390000 		.4byte	0x3949
 14003 37b0 27       		.uleb128 0x27
 14004 37b1 C5300000 		.4byte	0x30c5
 14005 37b5 6E2B0000 		.4byte	.LLST173
 14006 37b9 27       		.uleb128 0x27
 14007 37ba BA300000 		.4byte	0x30ba
 14008 37be 812B0000 		.4byte	.LLST174
 14009 37c2 27       		.uleb128 0x27
 14010 37c3 AE300000 		.4byte	0x30ae
 14011 37c7 942B0000 		.4byte	.LLST175
 14012 37cb 2E       		.uleb128 0x2e
 14013 37cc C0010000 		.4byte	.Ldebug_ranges0+0x1c0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 432


 14014 37d0 3F       		.uleb128 0x3f
 14015 37d1 D1300000 		.4byte	0x30d1
 14016 37d5 02       		.uleb128 0x2
 14017 37d6 91       		.byte	0x91
 14018 37d7 40       		.sleb128 -64
 14019 37d8 3F       		.uleb128 0x3f
 14020 37d9 DD300000 		.4byte	0x30dd
 14021 37dd 02       		.uleb128 0x2
 14022 37de 91       		.byte	0x91
 14023 37df 44       		.sleb128 -60
 14024 37e0 2F       		.uleb128 0x2f
 14025 37e1 80030000 		.4byte	.LBB184
 14026 37e5 E4000000 		.4byte	.LBE184-.LBB184
 14027 37e9 25390000 		.4byte	0x3925
 14028 37ed 30       		.uleb128 0x30
 14029 37ee EA300000 		.4byte	0x30ea
 14030 37f2 E92B0000 		.4byte	.LLST176
 14031 37f6 31       		.uleb128 0x31
 14032 37f7 D8010000 		.4byte	.Ldebug_ranges0+0x1d8
 14033 37fb 65380000 		.4byte	0x3865
 14034 37ff 30       		.uleb128 0x30
 14035 3800 F9300000 		.4byte	0x30f9
 14036 3804 122C0000 		.4byte	.LLST177
 14037 3808 3F       		.uleb128 0x3f
 14038 3809 05310000 		.4byte	0x3105
 14039 380d 02       		.uleb128 0x2
 14040 380e 91       		.byte	0x91
 14041 380f 48       		.sleb128 -56
 14042 3810 30       		.uleb128 0x30
 14043 3811 11310000 		.4byte	0x3111
 14044 3815 302C0000 		.4byte	.LLST178
 14045 3819 39       		.uleb128 0x39
 14046 381a 9C030000 		.4byte	.LVL621
 14047 381e 49150000 		.4byte	0x1549
 14048 3822 3F380000 		.4byte	0x383f
 14049 3826 38       		.uleb128 0x38
 14050 3827 01       		.uleb128 0x1
 14051 3828 53       		.byte	0x53
 14052 3829 02       		.uleb128 0x2
 14053 382a 75       		.byte	0x75
 14054 382b 00       		.sleb128 0
 14055 382c 38       		.uleb128 0x38
 14056 382d 01       		.uleb128 0x1
 14057 382e 52       		.byte	0x52
 14058 382f 02       		.uleb128 0x2
 14059 3830 91       		.byte	0x91
 14060 3831 48       		.sleb128 -56
 14061 3832 38       		.uleb128 0x38
 14062 3833 01       		.uleb128 0x1
 14063 3834 51       		.byte	0x51
 14064 3835 02       		.uleb128 0x2
 14065 3836 91       		.byte	0x91
 14066 3837 40       		.sleb128 -64
 14067 3838 38       		.uleb128 0x38
 14068 3839 01       		.uleb128 0x1
 14069 383a 50       		.byte	0x50
 14070 383b 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 433


 14071 383c 74       		.byte	0x74
 14072 383d 00       		.sleb128 0
 14073 383e 00       		.byte	0
 14074 383f 39       		.uleb128 0x39
 14075 3840 B2030000 		.4byte	.LVL623
 14076 3844 43480000 		.4byte	0x4843
 14077 3848 52380000 		.4byte	0x3852
 14078 384c 38       		.uleb128 0x38
 14079 384d 01       		.uleb128 0x1
 14080 384e 50       		.byte	0x50
 14081 384f 01       		.uleb128 0x1
 14082 3850 38       		.byte	0x38
 14083 3851 00       		.byte	0
 14084 3852 3A       		.uleb128 0x3a
 14085 3853 C0030000 		.4byte	.LVL626
 14086 3857 43480000 		.4byte	0x4843
 14087 385b 3A       		.uleb128 0x3a
 14088 385c D0030000 		.4byte	.LVL627
 14089 3860 15480000 		.4byte	0x4815
 14090 3864 00       		.byte	0
 14091 3865 2F       		.uleb128 0x2f
 14092 3866 E4030000 		.4byte	.LBB188
 14093 386a 60000000 		.4byte	.LBE188-.LBB188
 14094 386e F3380000 		.4byte	0x38f3
 14095 3872 30       		.uleb128 0x30
 14096 3873 30310000 		.4byte	0x3130
 14097 3877 432C0000 		.4byte	.LLST179
 14098 387b 3F       		.uleb128 0x3f
 14099 387c 3C310000 		.4byte	0x313c
 14100 3880 02       		.uleb128 0x2
 14101 3881 91       		.byte	0x91
 14102 3882 48       		.sleb128 -56
 14103 3883 30       		.uleb128 0x30
 14104 3884 48310000 		.4byte	0x3148
 14105 3888 6C2C0000 		.4byte	.LLST180
 14106 388c 2F       		.uleb128 0x2f
 14107 388d 16040000 		.4byte	.LBB189
 14108 3891 08000000 		.4byte	.LBE189-.LBB189
 14109 3895 B3380000 		.4byte	0x38b3
 14110 3899 30       		.uleb128 0x30
 14111 389a 55310000 		.4byte	0x3155
 14112 389e 7F2C0000 		.4byte	.LLST181
 14113 38a2 37       		.uleb128 0x37
 14114 38a3 1C040000 		.4byte	.LVL638
 14115 38a7 32480000 		.4byte	0x4832
 14116 38ab 38       		.uleb128 0x38
 14117 38ac 01       		.uleb128 0x1
 14118 38ad 50       		.byte	0x50
 14119 38ae 02       		.uleb128 0x2
 14120 38af 76       		.byte	0x76
 14121 38b0 00       		.sleb128 0
 14122 38b1 00       		.byte	0
 14123 38b2 00       		.byte	0
 14124 38b3 39       		.uleb128 0x39
 14125 38b4 EC030000 		.4byte	.LVL631
 14126 38b8 49150000 		.4byte	0x1549
 14127 38bc CD380000 		.4byte	0x38cd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 434


 14128 38c0 38       		.uleb128 0x38
 14129 38c1 01       		.uleb128 0x1
 14130 38c2 53       		.byte	0x53
 14131 38c3 02       		.uleb128 0x2
 14132 38c4 75       		.byte	0x75
 14133 38c5 00       		.sleb128 0
 14134 38c6 38       		.uleb128 0x38
 14135 38c7 01       		.uleb128 0x1
 14136 38c8 52       		.byte	0x52
 14137 38c9 02       		.uleb128 0x2
 14138 38ca 91       		.byte	0x91
 14139 38cb 48       		.sleb128 -56
 14140 38cc 00       		.byte	0
 14141 38cd 39       		.uleb128 0x39
 14142 38ce 02040000 		.4byte	.LVL633
 14143 38d2 43480000 		.4byte	0x4843
 14144 38d6 E0380000 		.4byte	0x38e0
 14145 38da 38       		.uleb128 0x38
 14146 38db 01       		.uleb128 0x1
 14147 38dc 50       		.byte	0x50
 14148 38dd 01       		.uleb128 0x1
 14149 38de 38       		.byte	0x38
 14150 38df 00       		.byte	0
 14151 38e0 3A       		.uleb128 0x3a
 14152 38e1 10040000 		.4byte	.LVL636
 14153 38e5 43480000 		.4byte	0x4843
 14154 38e9 3A       		.uleb128 0x3a
 14155 38ea 28040000 		.4byte	.LVL640
 14156 38ee 15480000 		.4byte	0x4815
 14157 38f2 00       		.byte	0
 14158 38f3 32       		.uleb128 0x32
 14159 38f4 44040000 		.4byte	.LBB190
 14160 38f8 20000000 		.4byte	.LBE190-.LBB190
 14161 38fc 3F       		.uleb128 0x3f
 14162 38fd 63310000 		.4byte	0x3163
 14163 3901 02       		.uleb128 0x2
 14164 3902 91       		.byte	0x91
 14165 3903 48       		.sleb128 -56
 14166 3904 30       		.uleb128 0x30
 14167 3905 6F310000 		.4byte	0x316f
 14168 3909 922C0000 		.4byte	.LLST182
 14169 390d 37       		.uleb128 0x37
 14170 390e 4C040000 		.4byte	.LVL644
 14171 3912 49150000 		.4byte	0x1549
 14172 3916 38       		.uleb128 0x38
 14173 3917 01       		.uleb128 0x1
 14174 3918 53       		.byte	0x53
 14175 3919 02       		.uleb128 0x2
 14176 391a 75       		.byte	0x75
 14177 391b 00       		.sleb128 0
 14178 391c 38       		.uleb128 0x38
 14179 391d 01       		.uleb128 0x1
 14180 391e 52       		.byte	0x52
 14181 391f 02       		.uleb128 0x2
 14182 3920 91       		.byte	0x91
 14183 3921 48       		.sleb128 -56
 14184 3922 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 435


 14185 3923 00       		.byte	0
 14186 3924 00       		.byte	0
 14187 3925 37       		.uleb128 0x37
 14188 3926 6A030000 		.4byte	.LVL616
 14189 392a E4150000 		.4byte	0x15e4
 14190 392e 38       		.uleb128 0x38
 14191 392f 01       		.uleb128 0x1
 14192 3930 53       		.byte	0x53
 14193 3931 02       		.uleb128 0x2
 14194 3932 75       		.byte	0x75
 14195 3933 00       		.sleb128 0
 14196 3934 38       		.uleb128 0x38
 14197 3935 01       		.uleb128 0x1
 14198 3936 52       		.byte	0x52
 14199 3937 02       		.uleb128 0x2
 14200 3938 91       		.byte	0x91
 14201 3939 44       		.sleb128 -60
 14202 393a 38       		.uleb128 0x38
 14203 393b 01       		.uleb128 0x1
 14204 393c 51       		.byte	0x51
 14205 393d 02       		.uleb128 0x2
 14206 393e 91       		.byte	0x91
 14207 393f 40       		.sleb128 -64
 14208 3940 38       		.uleb128 0x38
 14209 3941 01       		.uleb128 0x1
 14210 3942 50       		.byte	0x50
 14211 3943 02       		.uleb128 0x2
 14212 3944 74       		.byte	0x74
 14213 3945 00       		.sleb128 0
 14214 3946 00       		.byte	0
 14215 3947 00       		.byte	0
 14216 3948 00       		.byte	0
 14217 3949 26       		.uleb128 0x26
 14218 394a 7E310000 		.4byte	0x317e
 14219 394e 6E040000 		.4byte	.LBB193
 14220 3952 F8010000 		.4byte	.Ldebug_ranges0+0x1f8
 14221 3956 01       		.byte	0x1
 14222 3957 B112     		.2byte	0x12b1
 14223 3959 E0390000 		.4byte	0x39e0
 14224 395d 27       		.uleb128 0x27
 14225 395e A6310000 		.4byte	0x31a6
 14226 3962 A52C0000 		.4byte	.LLST183
 14227 3966 27       		.uleb128 0x27
 14228 3967 9B310000 		.4byte	0x319b
 14229 396b B82C0000 		.4byte	.LLST184
 14230 396f 27       		.uleb128 0x27
 14231 3970 8F310000 		.4byte	0x318f
 14232 3974 CB2C0000 		.4byte	.LLST185
 14233 3978 2E       		.uleb128 0x2e
 14234 3979 F8010000 		.4byte	.Ldebug_ranges0+0x1f8
 14235 397d 3F       		.uleb128 0x3f
 14236 397e B2310000 		.4byte	0x31b2
 14237 3982 02       		.uleb128 0x2
 14238 3983 91       		.byte	0x91
 14239 3984 44       		.sleb128 -60
 14240 3985 3F       		.uleb128 0x3f
 14241 3986 BE310000 		.4byte	0x31be
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 436


 14242 398a 02       		.uleb128 0x2
 14243 398b 91       		.byte	0x91
 14244 398c 48       		.sleb128 -56
 14245 398d 30       		.uleb128 0x30
 14246 398e CA310000 		.4byte	0x31ca
 14247 3992 DE2C0000 		.4byte	.LLST186
 14248 3996 39       		.uleb128 0x39
 14249 3997 82040000 		.4byte	.LVL649
 14250 399b E4150000 		.4byte	0x15e4
 14251 399f BC390000 		.4byte	0x39bc
 14252 39a3 38       		.uleb128 0x38
 14253 39a4 01       		.uleb128 0x1
 14254 39a5 53       		.byte	0x53
 14255 39a6 02       		.uleb128 0x2
 14256 39a7 75       		.byte	0x75
 14257 39a8 00       		.sleb128 0
 14258 39a9 38       		.uleb128 0x38
 14259 39aa 01       		.uleb128 0x1
 14260 39ab 52       		.byte	0x52
 14261 39ac 02       		.uleb128 0x2
 14262 39ad 91       		.byte	0x91
 14263 39ae 48       		.sleb128 -56
 14264 39af 38       		.uleb128 0x38
 14265 39b0 01       		.uleb128 0x1
 14266 39b1 51       		.byte	0x51
 14267 39b2 02       		.uleb128 0x2
 14268 39b3 91       		.byte	0x91
 14269 39b4 44       		.sleb128 -60
 14270 39b5 38       		.uleb128 0x38
 14271 39b6 01       		.uleb128 0x1
 14272 39b7 50       		.byte	0x50
 14273 39b8 02       		.uleb128 0x2
 14274 39b9 74       		.byte	0x74
 14275 39ba 00       		.sleb128 0
 14276 39bb 00       		.byte	0
 14277 39bc 37       		.uleb128 0x37
 14278 39bd A2040000 		.4byte	.LVL650
 14279 39c1 49150000 		.4byte	0x1549
 14280 39c5 38       		.uleb128 0x38
 14281 39c6 01       		.uleb128 0x1
 14282 39c7 53       		.byte	0x53
 14283 39c8 02       		.uleb128 0x2
 14284 39c9 75       		.byte	0x75
 14285 39ca 00       		.sleb128 0
 14286 39cb 38       		.uleb128 0x38
 14287 39cc 01       		.uleb128 0x1
 14288 39cd 52       		.byte	0x52
 14289 39ce 02       		.uleb128 0x2
 14290 39cf 91       		.byte	0x91
 14291 39d0 48       		.sleb128 -56
 14292 39d1 38       		.uleb128 0x38
 14293 39d2 01       		.uleb128 0x1
 14294 39d3 51       		.byte	0x51
 14295 39d4 02       		.uleb128 0x2
 14296 39d5 91       		.byte	0x91
 14297 39d6 44       		.sleb128 -60
 14298 39d7 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 437


 14299 39d8 01       		.uleb128 0x1
 14300 39d9 50       		.byte	0x50
 14301 39da 02       		.uleb128 0x2
 14302 39db 74       		.byte	0x74
 14303 39dc 00       		.sleb128 0
 14304 39dd 00       		.byte	0
 14305 39de 00       		.byte	0
 14306 39df 00       		.byte	0
 14307 39e0 26       		.uleb128 0x26
 14308 39e1 D7310000 		.4byte	0x31d7
 14309 39e5 BC040000 		.4byte	.LBB197
 14310 39e9 10020000 		.4byte	.Ldebug_ranges0+0x210
 14311 39ed 01       		.byte	0x1
 14312 39ee BA12     		.2byte	0x12ba
 14313 39f0 673A0000 		.4byte	0x3a67
 14314 39f4 27       		.uleb128 0x27
 14315 39f5 FF310000 		.4byte	0x31ff
 14316 39f9 F22C0000 		.4byte	.LLST187
 14317 39fd 27       		.uleb128 0x27
 14318 39fe F4310000 		.4byte	0x31f4
 14319 3a02 052D0000 		.4byte	.LLST188
 14320 3a06 27       		.uleb128 0x27
 14321 3a07 E8310000 		.4byte	0x31e8
 14322 3a0b 182D0000 		.4byte	.LLST189
 14323 3a0f 2E       		.uleb128 0x2e
 14324 3a10 10020000 		.4byte	.Ldebug_ranges0+0x210
 14325 3a14 3F       		.uleb128 0x3f
 14326 3a15 0B320000 		.4byte	0x320b
 14327 3a19 02       		.uleb128 0x2
 14328 3a1a 91       		.byte	0x91
 14329 3a1b 44       		.sleb128 -60
 14330 3a1c 3F       		.uleb128 0x3f
 14331 3a1d 17320000 		.4byte	0x3217
 14332 3a21 02       		.uleb128 0x2
 14333 3a22 91       		.byte	0x91
 14334 3a23 48       		.sleb128 -56
 14335 3a24 30       		.uleb128 0x30
 14336 3a25 23320000 		.4byte	0x3223
 14337 3a29 2B2D0000 		.4byte	.LLST190
 14338 3a2d 39       		.uleb128 0x39
 14339 3a2e D8040000 		.4byte	.LVL654
 14340 3a32 49150000 		.4byte	0x1549
 14341 3a36 533A0000 		.4byte	0x3a53
 14342 3a3a 38       		.uleb128 0x38
 14343 3a3b 01       		.uleb128 0x1
 14344 3a3c 53       		.byte	0x53
 14345 3a3d 02       		.uleb128 0x2
 14346 3a3e 75       		.byte	0x75
 14347 3a3f 00       		.sleb128 0
 14348 3a40 38       		.uleb128 0x38
 14349 3a41 01       		.uleb128 0x1
 14350 3a42 52       		.byte	0x52
 14351 3a43 02       		.uleb128 0x2
 14352 3a44 91       		.byte	0x91
 14353 3a45 48       		.sleb128 -56
 14354 3a46 38       		.uleb128 0x38
 14355 3a47 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 438


 14356 3a48 51       		.byte	0x51
 14357 3a49 02       		.uleb128 0x2
 14358 3a4a 91       		.byte	0x91
 14359 3a4b 44       		.sleb128 -60
 14360 3a4c 38       		.uleb128 0x38
 14361 3a4d 01       		.uleb128 0x1
 14362 3a4e 50       		.byte	0x50
 14363 3a4f 02       		.uleb128 0x2
 14364 3a50 74       		.byte	0x74
 14365 3a51 00       		.sleb128 0
 14366 3a52 00       		.byte	0
 14367 3a53 3A       		.uleb128 0x3a
 14368 3a54 F6040000 		.4byte	.LVL656
 14369 3a58 15480000 		.4byte	0x4815
 14370 3a5c 3A       		.uleb128 0x3a
 14371 3a5d 00050000 		.4byte	.LVL657
 14372 3a61 58480000 		.4byte	0x4858
 14373 3a65 00       		.byte	0
 14374 3a66 00       		.byte	0
 14375 3a67 26       		.uleb128 0x26
 14376 3a68 13110000 		.4byte	0x1113
 14377 3a6c 18050000 		.4byte	.LBB201
 14378 3a70 28020000 		.4byte	.Ldebug_ranges0+0x228
 14379 3a74 01       		.byte	0x1
 14380 3a75 D312     		.2byte	0x12d3
 14381 3a77 C53A0000 		.4byte	0x3ac5
 14382 3a7b 29       		.uleb128 0x29
 14383 3a7c 3B110000 		.4byte	0x113b
 14384 3a80 27       		.uleb128 0x27
 14385 3a81 30110000 		.4byte	0x1130
 14386 3a85 3F2D0000 		.4byte	.LLST191
 14387 3a89 27       		.uleb128 0x27
 14388 3a8a 24110000 		.4byte	0x1124
 14389 3a8e 522D0000 		.4byte	.LLST192
 14390 3a92 2E       		.uleb128 0x2e
 14391 3a93 28020000 		.4byte	.Ldebug_ranges0+0x228
 14392 3a97 3F       		.uleb128 0x3f
 14393 3a98 47110000 		.4byte	0x1147
 14394 3a9c 02       		.uleb128 0x2
 14395 3a9d 91       		.byte	0x91
 14396 3a9e 44       		.sleb128 -60
 14397 3a9f 3F       		.uleb128 0x3f
 14398 3aa0 53110000 		.4byte	0x1153
 14399 3aa4 02       		.uleb128 0x2
 14400 3aa5 91       		.byte	0x91
 14401 3aa6 48       		.sleb128 -56
 14402 3aa7 37       		.uleb128 0x37
 14403 3aa8 34050000 		.4byte	.LVL659
 14404 3aac 49150000 		.4byte	0x1549
 14405 3ab0 38       		.uleb128 0x38
 14406 3ab1 01       		.uleb128 0x1
 14407 3ab2 52       		.byte	0x52
 14408 3ab3 02       		.uleb128 0x2
 14409 3ab4 91       		.byte	0x91
 14410 3ab5 48       		.sleb128 -56
 14411 3ab6 38       		.uleb128 0x38
 14412 3ab7 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 439


 14413 3ab8 51       		.byte	0x51
 14414 3ab9 02       		.uleb128 0x2
 14415 3aba 91       		.byte	0x91
 14416 3abb 44       		.sleb128 -60
 14417 3abc 38       		.uleb128 0x38
 14418 3abd 01       		.uleb128 0x1
 14419 3abe 50       		.byte	0x50
 14420 3abf 02       		.uleb128 0x2
 14421 3ac0 74       		.byte	0x74
 14422 3ac1 00       		.sleb128 0
 14423 3ac2 00       		.byte	0
 14424 3ac3 00       		.byte	0
 14425 3ac4 00       		.byte	0
 14426 3ac5 3D       		.uleb128 0x3d
 14427 3ac6 51120000 		.4byte	0x1251
 14428 3aca 6C050000 		.4byte	.LBB207
 14429 3ace 6A000000 		.4byte	.LBE207-.LBB207
 14430 3ad2 01       		.byte	0x1
 14431 3ad3 DC12     		.2byte	0x12dc
 14432 3ad5 613B0000 		.4byte	0x3b61
 14433 3ad9 29       		.uleb128 0x29
 14434 3ada 79120000 		.4byte	0x1279
 14435 3ade 27       		.uleb128 0x27
 14436 3adf 6E120000 		.4byte	0x126e
 14437 3ae3 652D0000 		.4byte	.LLST193
 14438 3ae7 27       		.uleb128 0x27
 14439 3ae8 62120000 		.4byte	0x1262
 14440 3aec 782D0000 		.4byte	.LLST194
 14441 3af0 32       		.uleb128 0x32
 14442 3af1 6C050000 		.4byte	.LBB208
 14443 3af5 6A000000 		.4byte	.LBE208-.LBB208
 14444 3af9 3F       		.uleb128 0x3f
 14445 3afa 85120000 		.4byte	0x1285
 14446 3afe 02       		.uleb128 0x2
 14447 3aff 91       		.byte	0x91
 14448 3b00 40       		.sleb128 -64
 14449 3b01 3F       		.uleb128 0x3f
 14450 3b02 91120000 		.4byte	0x1291
 14451 3b06 02       		.uleb128 0x2
 14452 3b07 91       		.byte	0x91
 14453 3b08 44       		.sleb128 -60
 14454 3b09 3F       		.uleb128 0x3f
 14455 3b0a 9D120000 		.4byte	0x129d
 14456 3b0e 02       		.uleb128 0x2
 14457 3b0f 91       		.byte	0x91
 14458 3b10 48       		.sleb128 -56
 14459 3b11 39       		.uleb128 0x39
 14460 3b12 7C050000 		.4byte	.LVL664
 14461 3b16 E4150000 		.4byte	0x15e4
 14462 3b1a 373B0000 		.4byte	0x3b37
 14463 3b1e 38       		.uleb128 0x38
 14464 3b1f 01       		.uleb128 0x1
 14465 3b20 53       		.byte	0x53
 14466 3b21 02       		.uleb128 0x2
 14467 3b22 75       		.byte	0x75
 14468 3b23 00       		.sleb128 0
 14469 3b24 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 440


 14470 3b25 01       		.uleb128 0x1
 14471 3b26 52       		.byte	0x52
 14472 3b27 02       		.uleb128 0x2
 14473 3b28 91       		.byte	0x91
 14474 3b29 48       		.sleb128 -56
 14475 3b2a 38       		.uleb128 0x38
 14476 3b2b 01       		.uleb128 0x1
 14477 3b2c 51       		.byte	0x51
 14478 3b2d 02       		.uleb128 0x2
 14479 3b2e 91       		.byte	0x91
 14480 3b2f 40       		.sleb128 -64
 14481 3b30 38       		.uleb128 0x38
 14482 3b31 01       		.uleb128 0x1
 14483 3b32 50       		.byte	0x50
 14484 3b33 02       		.uleb128 0x2
 14485 3b34 74       		.byte	0x74
 14486 3b35 00       		.sleb128 0
 14487 3b36 00       		.byte	0
 14488 3b37 37       		.uleb128 0x37
 14489 3b38 98050000 		.4byte	.LVL665
 14490 3b3c C01B0000 		.4byte	0x1bc0
 14491 3b40 38       		.uleb128 0x38
 14492 3b41 01       		.uleb128 0x1
 14493 3b42 53       		.byte	0x53
 14494 3b43 01       		.uleb128 0x1
 14495 3b44 3A       		.byte	0x3a
 14496 3b45 38       		.uleb128 0x38
 14497 3b46 01       		.uleb128 0x1
 14498 3b47 52       		.byte	0x52
 14499 3b48 02       		.uleb128 0x2
 14500 3b49 91       		.byte	0x91
 14501 3b4a 44       		.sleb128 -60
 14502 3b4b 38       		.uleb128 0x38
 14503 3b4c 01       		.uleb128 0x1
 14504 3b4d 51       		.byte	0x51
 14505 3b4e 02       		.uleb128 0x2
 14506 3b4f 91       		.byte	0x91
 14507 3b50 40       		.sleb128 -64
 14508 3b51 38       		.uleb128 0x38
 14509 3b52 01       		.uleb128 0x1
 14510 3b53 50       		.byte	0x50
 14511 3b54 02       		.uleb128 0x2
 14512 3b55 74       		.byte	0x74
 14513 3b56 00       		.sleb128 0
 14514 3b57 38       		.uleb128 0x38
 14515 3b58 02       		.uleb128 0x2
 14516 3b59 7D       		.byte	0x7d
 14517 3b5a 00       		.sleb128 0
 14518 3b5b 02       		.uleb128 0x2
 14519 3b5c 75       		.byte	0x75
 14520 3b5d 00       		.sleb128 0
 14521 3b5e 00       		.byte	0
 14522 3b5f 00       		.byte	0
 14523 3b60 00       		.byte	0
 14524 3b61 26       		.uleb128 0x26
 14525 3b62 30320000 		.4byte	0x3230
 14526 3b66 DA050000 		.4byte	.LBB209
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 441


 14527 3b6a 48020000 		.4byte	.Ldebug_ranges0+0x248
 14528 3b6e 01       		.byte	0x1
 14529 3b6f E612     		.2byte	0x12e6
 14530 3b71 403D0000 		.4byte	0x3d40
 14531 3b75 27       		.uleb128 0x27
 14532 3b76 58320000 		.4byte	0x3258
 14533 3b7a 8B2D0000 		.4byte	.LLST195
 14534 3b7e 27       		.uleb128 0x27
 14535 3b7f 4D320000 		.4byte	0x324d
 14536 3b83 9E2D0000 		.4byte	.LLST196
 14537 3b87 27       		.uleb128 0x27
 14538 3b88 41320000 		.4byte	0x3241
 14539 3b8c CB2D0000 		.4byte	.LLST197
 14540 3b90 2E       		.uleb128 0x2e
 14541 3b91 48020000 		.4byte	.Ldebug_ranges0+0x248
 14542 3b95 3F       		.uleb128 0x3f
 14543 3b96 64320000 		.4byte	0x3264
 14544 3b9a 03       		.uleb128 0x3
 14545 3b9b 91       		.byte	0x91
 14546 3b9c B47F     		.sleb128 -76
 14547 3b9e 3F       		.uleb128 0x3f
 14548 3b9f 70320000 		.4byte	0x3270
 14549 3ba3 03       		.uleb128 0x3
 14550 3ba4 91       		.byte	0x91
 14551 3ba5 B87F     		.sleb128 -72
 14552 3ba7 2F       		.uleb128 0x2f
 14553 3ba8 0A060000 		.4byte	.LBB211
 14554 3bac CC000000 		.4byte	.LBE211-.LBB211
 14555 3bb0 163D0000 		.4byte	0x3d16
 14556 3bb4 30       		.uleb128 0x30
 14557 3bb5 7D320000 		.4byte	0x327d
 14558 3bb9 EB2D0000 		.4byte	.LLST198
 14559 3bbd 30       		.uleb128 0x30
 14560 3bbe 87320000 		.4byte	0x3287
 14561 3bc2 FE2D0000 		.4byte	.LLST199
 14562 3bc6 3D       		.uleb128 0x3d
 14563 3bc7 B3110000 		.4byte	0x11b3
 14564 3bcb 46060000 		.4byte	.LBB212
 14565 3bcf 86000000 		.4byte	.LBE212-.LBB212
 14566 3bd3 01       		.byte	0x1
 14567 3bd4 9611     		.2byte	0x1196
 14568 3bd6 ED3C0000 		.4byte	0x3ced
 14569 3bda 27       		.uleb128 0x27
 14570 3bdb E7110000 		.4byte	0x11e7
 14571 3bdf 342E0000 		.4byte	.LLST200
 14572 3be3 27       		.uleb128 0x27
 14573 3be4 DB110000 		.4byte	0x11db
 14574 3be8 492E0000 		.4byte	.LLST201
 14575 3bec 27       		.uleb128 0x27
 14576 3bed D0110000 		.4byte	0x11d0
 14577 3bf1 5C2E0000 		.4byte	.LLST202
 14578 3bf5 27       		.uleb128 0x27
 14579 3bf6 C4110000 		.4byte	0x11c4
 14580 3bfa 7C2E0000 		.4byte	.LLST203
 14581 3bfe 32       		.uleb128 0x32
 14582 3bff 46060000 		.4byte	.LBB213
 14583 3c03 86000000 		.4byte	.LBE213-.LBB213
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 442


 14584 3c07 3F       		.uleb128 0x3f
 14585 3c08 F3110000 		.4byte	0x11f3
 14586 3c0c 03       		.uleb128 0x3
 14587 3c0d 91       		.byte	0x91
 14588 3c0e BC7F     		.sleb128 -68
 14589 3c10 2E       		.uleb128 0x2e
 14590 3c11 68020000 		.4byte	.Ldebug_ranges0+0x268
 14591 3c15 3F       		.uleb128 0x3f
 14592 3c16 00120000 		.4byte	0x1200
 14593 3c1a 02       		.uleb128 0x2
 14594 3c1b 91       		.byte	0x91
 14595 3c1c 40       		.sleb128 -64
 14596 3c1d 3F       		.uleb128 0x3f
 14597 3c1e 0C120000 		.4byte	0x120c
 14598 3c22 02       		.uleb128 0x2
 14599 3c23 91       		.byte	0x91
 14600 3c24 44       		.sleb128 -60
 14601 3c25 3F       		.uleb128 0x3f
 14602 3c26 18120000 		.4byte	0x1218
 14603 3c2a 02       		.uleb128 0x2
 14604 3c2b 91       		.byte	0x91
 14605 3c2c 48       		.sleb128 -56
 14606 3c2d 30       		.uleb128 0x30
 14607 3c2e 24120000 		.4byte	0x1224
 14608 3c32 912E0000 		.4byte	.LLST204
 14609 3c36 2F       		.uleb128 0x2f
 14610 3c37 8A060000 		.4byte	.LBB215
 14611 3c3b 3A000000 		.4byte	.LBE215-.LBB215
 14612 3c3f 993C0000 		.4byte	0x3c99
 14613 3c43 30       		.uleb128 0x30
 14614 3c44 2F120000 		.4byte	0x122f
 14615 3c48 A42E0000 		.4byte	.LLST205
 14616 3c4c 2F       		.uleb128 0x2f
 14617 3c4d A0060000 		.4byte	.LBB216
 14618 3c51 08000000 		.4byte	.LBE216-.LBB216
 14619 3c55 733C0000 		.4byte	0x3c73
 14620 3c59 30       		.uleb128 0x30
 14621 3c5a 3C120000 		.4byte	0x123c
 14622 3c5e C22E0000 		.4byte	.LLST206
 14623 3c62 37       		.uleb128 0x37
 14624 3c63 A6060000 		.4byte	.LVL686
 14625 3c67 32480000 		.4byte	0x4832
 14626 3c6b 38       		.uleb128 0x38
 14627 3c6c 01       		.uleb128 0x1
 14628 3c6d 50       		.byte	0x50
 14629 3c6e 02       		.uleb128 0x2
 14630 3c6f 74       		.byte	0x74
 14631 3c70 00       		.sleb128 0
 14632 3c71 00       		.byte	0
 14633 3c72 00       		.byte	0
 14634 3c73 39       		.uleb128 0x39
 14635 3c74 90060000 		.4byte	.LVL681
 14636 3c78 43480000 		.4byte	0x4843
 14637 3c7c 863C0000 		.4byte	0x3c86
 14638 3c80 38       		.uleb128 0x38
 14639 3c81 01       		.uleb128 0x1
 14640 3c82 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 443


 14641 3c83 01       		.uleb128 0x1
 14642 3c84 40       		.byte	0x40
 14643 3c85 00       		.byte	0
 14644 3c86 3A       		.uleb128 0x3a
 14645 3c87 9A060000 		.4byte	.LVL684
 14646 3c8b 43480000 		.4byte	0x4843
 14647 3c8f 3A       		.uleb128 0x3a
 14648 3c90 B4060000 		.4byte	.LVL688
 14649 3c94 15480000 		.4byte	0x4815
 14650 3c98 00       		.byte	0
 14651 3c99 39       		.uleb128 0x39
 14652 3c9a 5E060000 		.4byte	.LVL678
 14653 3c9e E4150000 		.4byte	0x15e4
 14654 3ca2 C43C0000 		.4byte	0x3cc4
 14655 3ca6 38       		.uleb128 0x38
 14656 3ca7 01       		.uleb128 0x1
 14657 3ca8 53       		.byte	0x53
 14658 3ca9 04       		.uleb128 0x4
 14659 3caa 91       		.byte	0x91
 14660 3cab 987F     		.sleb128 -104
 14661 3cad 06       		.byte	0x6
 14662 3cae 38       		.uleb128 0x38
 14663 3caf 01       		.uleb128 0x1
 14664 3cb0 52       		.byte	0x52
 14665 3cb1 02       		.uleb128 0x2
 14666 3cb2 91       		.byte	0x91
 14667 3cb3 40       		.sleb128 -64
 14668 3cb4 38       		.uleb128 0x38
 14669 3cb5 01       		.uleb128 0x1
 14670 3cb6 51       		.byte	0x51
 14671 3cb7 03       		.uleb128 0x3
 14672 3cb8 91       		.byte	0x91
 14673 3cb9 BC7F     		.sleb128 -68
 14674 3cbb 38       		.uleb128 0x38
 14675 3cbc 01       		.uleb128 0x1
 14676 3cbd 50       		.byte	0x50
 14677 3cbe 04       		.uleb128 0x4
 14678 3cbf 91       		.byte	0x91
 14679 3cc0 8C7F     		.sleb128 -116
 14680 3cc2 06       		.byte	0x6
 14681 3cc3 00       		.byte	0
 14682 3cc4 37       		.uleb128 0x37
 14683 3cc5 78060000 		.4byte	.LVL680
 14684 3cc9 49150000 		.4byte	0x1549
 14685 3ccd 38       		.uleb128 0x38
 14686 3cce 01       		.uleb128 0x1
 14687 3ccf 53       		.byte	0x53
 14688 3cd0 04       		.uleb128 0x4
 14689 3cd1 91       		.byte	0x91
 14690 3cd2 987F     		.sleb128 -104
 14691 3cd4 06       		.byte	0x6
 14692 3cd5 38       		.uleb128 0x38
 14693 3cd6 01       		.uleb128 0x1
 14694 3cd7 52       		.byte	0x52
 14695 3cd8 02       		.uleb128 0x2
 14696 3cd9 91       		.byte	0x91
 14697 3cda 44       		.sleb128 -60
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 444


 14698 3cdb 38       		.uleb128 0x38
 14699 3cdc 01       		.uleb128 0x1
 14700 3cdd 51       		.byte	0x51
 14701 3cde 02       		.uleb128 0x2
 14702 3cdf 91       		.byte	0x91
 14703 3ce0 48       		.sleb128 -56
 14704 3ce1 38       		.uleb128 0x38
 14705 3ce2 01       		.uleb128 0x1
 14706 3ce3 50       		.byte	0x50
 14707 3ce4 04       		.uleb128 0x4
 14708 3ce5 91       		.byte	0x91
 14709 3ce6 8C7F     		.sleb128 -116
 14710 3ce8 06       		.byte	0x6
 14711 3ce9 00       		.byte	0
 14712 3cea 00       		.byte	0
 14713 3ceb 00       		.byte	0
 14714 3cec 00       		.byte	0
 14715 3ced 37       		.uleb128 0x37
 14716 3cee 1E060000 		.4byte	.LVL672
 14717 3cf2 49150000 		.4byte	0x1549
 14718 3cf6 38       		.uleb128 0x38
 14719 3cf7 01       		.uleb128 0x1
 14720 3cf8 53       		.byte	0x53
 14721 3cf9 04       		.uleb128 0x4
 14722 3cfa 91       		.byte	0x91
 14723 3cfb 907F     		.sleb128 -112
 14724 3cfd 06       		.byte	0x6
 14725 3cfe 38       		.uleb128 0x38
 14726 3cff 01       		.uleb128 0x1
 14727 3d00 52       		.byte	0x52
 14728 3d01 03       		.uleb128 0x3
 14729 3d02 91       		.byte	0x91
 14730 3d03 B87F     		.sleb128 -72
 14731 3d05 38       		.uleb128 0x38
 14732 3d06 01       		.uleb128 0x1
 14733 3d07 51       		.byte	0x51
 14734 3d08 03       		.uleb128 0x3
 14735 3d09 91       		.byte	0x91
 14736 3d0a B47F     		.sleb128 -76
 14737 3d0c 38       		.uleb128 0x38
 14738 3d0d 01       		.uleb128 0x1
 14739 3d0e 50       		.byte	0x50
 14740 3d0f 04       		.uleb128 0x4
 14741 3d10 91       		.byte	0x91
 14742 3d11 887F     		.sleb128 -120
 14743 3d13 06       		.byte	0x6
 14744 3d14 00       		.byte	0
 14745 3d15 00       		.byte	0
 14746 3d16 37       		.uleb128 0x37
 14747 3d17 FC050000 		.4byte	.LVL669
 14748 3d1b E4150000 		.4byte	0x15e4
 14749 3d1f 38       		.uleb128 0x38
 14750 3d20 01       		.uleb128 0x1
 14751 3d21 53       		.byte	0x53
 14752 3d22 04       		.uleb128 0x4
 14753 3d23 91       		.byte	0x91
 14754 3d24 907F     		.sleb128 -112
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 445


 14755 3d26 06       		.byte	0x6
 14756 3d27 38       		.uleb128 0x38
 14757 3d28 01       		.uleb128 0x1
 14758 3d29 52       		.byte	0x52
 14759 3d2a 03       		.uleb128 0x3
 14760 3d2b 91       		.byte	0x91
 14761 3d2c B87F     		.sleb128 -72
 14762 3d2e 38       		.uleb128 0x38
 14763 3d2f 01       		.uleb128 0x1
 14764 3d30 51       		.byte	0x51
 14765 3d31 03       		.uleb128 0x3
 14766 3d32 91       		.byte	0x91
 14767 3d33 B47F     		.sleb128 -76
 14768 3d35 38       		.uleb128 0x38
 14769 3d36 01       		.uleb128 0x1
 14770 3d37 50       		.byte	0x50
 14771 3d38 04       		.uleb128 0x4
 14772 3d39 91       		.byte	0x91
 14773 3d3a 887F     		.sleb128 -120
 14774 3d3c 06       		.byte	0x6
 14775 3d3d 00       		.byte	0
 14776 3d3e 00       		.byte	0
 14777 3d3f 00       		.byte	0
 14778 3d40 39       		.uleb128 0x39
 14779 3d41 84000000 		.4byte	.LVL582
 14780 3d45 49150000 		.4byte	0x1549
 14781 3d49 6C3D0000 		.4byte	0x3d6c
 14782 3d4d 38       		.uleb128 0x38
 14783 3d4e 01       		.uleb128 0x1
 14784 3d4f 53       		.byte	0x53
 14785 3d50 04       		.uleb128 0x4
 14786 3d51 91       		.byte	0x91
 14787 3d52 807F     		.sleb128 -128
 14788 3d54 06       		.byte	0x6
 14789 3d55 38       		.uleb128 0x38
 14790 3d56 01       		.uleb128 0x1
 14791 3d57 52       		.byte	0x52
 14792 3d58 03       		.uleb128 0x3
 14793 3d59 91       		.byte	0x91
 14794 3d5a AC7F     		.sleb128 -84
 14795 3d5c 38       		.uleb128 0x38
 14796 3d5d 01       		.uleb128 0x1
 14797 3d5e 51       		.byte	0x51
 14798 3d5f 03       		.uleb128 0x3
 14799 3d60 91       		.byte	0x91
 14800 3d61 A87F     		.sleb128 -88
 14801 3d63 38       		.uleb128 0x38
 14802 3d64 01       		.uleb128 0x1
 14803 3d65 50       		.byte	0x50
 14804 3d66 04       		.uleb128 0x4
 14805 3d67 91       		.byte	0x91
 14806 3d68 FC7E     		.sleb128 -132
 14807 3d6a 06       		.byte	0x6
 14808 3d6b 00       		.byte	0
 14809 3d6c 39       		.uleb128 0x39
 14810 3d6d 96000000 		.4byte	.LVL583
 14811 3d71 E4150000 		.4byte	0x15e4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 446


 14812 3d75 983D0000 		.4byte	0x3d98
 14813 3d79 38       		.uleb128 0x38
 14814 3d7a 01       		.uleb128 0x1
 14815 3d7b 53       		.byte	0x53
 14816 3d7c 04       		.uleb128 0x4
 14817 3d7d 91       		.byte	0x91
 14818 3d7e 807F     		.sleb128 -128
 14819 3d80 06       		.byte	0x6
 14820 3d81 38       		.uleb128 0x38
 14821 3d82 01       		.uleb128 0x1
 14822 3d83 52       		.byte	0x52
 14823 3d84 03       		.uleb128 0x3
 14824 3d85 91       		.byte	0x91
 14825 3d86 AC7F     		.sleb128 -84
 14826 3d88 38       		.uleb128 0x38
 14827 3d89 01       		.uleb128 0x1
 14828 3d8a 51       		.byte	0x51
 14829 3d8b 03       		.uleb128 0x3
 14830 3d8c 91       		.byte	0x91
 14831 3d8d A87F     		.sleb128 -88
 14832 3d8f 38       		.uleb128 0x38
 14833 3d90 01       		.uleb128 0x1
 14834 3d91 50       		.byte	0x50
 14835 3d92 04       		.uleb128 0x4
 14836 3d93 91       		.byte	0x91
 14837 3d94 FC7E     		.sleb128 -132
 14838 3d96 06       		.byte	0x6
 14839 3d97 00       		.byte	0
 14840 3d98 39       		.uleb128 0x39
 14841 3d99 B6000000 		.4byte	.LVL585
 14842 3d9d E4150000 		.4byte	0x15e4
 14843 3da1 C43D0000 		.4byte	0x3dc4
 14844 3da5 38       		.uleb128 0x38
 14845 3da6 01       		.uleb128 0x1
 14846 3da7 53       		.byte	0x53
 14847 3da8 04       		.uleb128 0x4
 14848 3da9 91       		.byte	0x91
 14849 3daa 807F     		.sleb128 -128
 14850 3dac 06       		.byte	0x6
 14851 3dad 38       		.uleb128 0x38
 14852 3dae 01       		.uleb128 0x1
 14853 3daf 52       		.byte	0x52
 14854 3db0 03       		.uleb128 0x3
 14855 3db1 91       		.byte	0x91
 14856 3db2 AC7F     		.sleb128 -84
 14857 3db4 38       		.uleb128 0x38
 14858 3db5 01       		.uleb128 0x1
 14859 3db6 51       		.byte	0x51
 14860 3db7 03       		.uleb128 0x3
 14861 3db8 91       		.byte	0x91
 14862 3db9 A87F     		.sleb128 -88
 14863 3dbb 38       		.uleb128 0x38
 14864 3dbc 01       		.uleb128 0x1
 14865 3dbd 50       		.byte	0x50
 14866 3dbe 04       		.uleb128 0x4
 14867 3dbf 91       		.byte	0x91
 14868 3dc0 FC7E     		.sleb128 -132
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 447


 14869 3dc2 06       		.byte	0x6
 14870 3dc3 00       		.byte	0
 14871 3dc4 39       		.uleb128 0x39
 14872 3dc5 D0000000 		.4byte	.LVL586
 14873 3dc9 C01B0000 		.4byte	0x1bc0
 14874 3dcd F63D0000 		.4byte	0x3df6
 14875 3dd1 38       		.uleb128 0x38
 14876 3dd2 01       		.uleb128 0x1
 14877 3dd3 53       		.byte	0x53
 14878 3dd4 01       		.uleb128 0x1
 14879 3dd5 36       		.byte	0x36
 14880 3dd6 38       		.uleb128 0x38
 14881 3dd7 01       		.uleb128 0x1
 14882 3dd8 52       		.byte	0x52
 14883 3dd9 03       		.uleb128 0x3
 14884 3dda 91       		.byte	0x91
 14885 3ddb B07F     		.sleb128 -80
 14886 3ddd 38       		.uleb128 0x38
 14887 3dde 01       		.uleb128 0x1
 14888 3ddf 51       		.byte	0x51
 14889 3de0 03       		.uleb128 0x3
 14890 3de1 91       		.byte	0x91
 14891 3de2 A87F     		.sleb128 -88
 14892 3de4 38       		.uleb128 0x38
 14893 3de5 01       		.uleb128 0x1
 14894 3de6 50       		.byte	0x50
 14895 3de7 04       		.uleb128 0x4
 14896 3de8 91       		.byte	0x91
 14897 3de9 FC7E     		.sleb128 -132
 14898 3deb 06       		.byte	0x6
 14899 3dec 38       		.uleb128 0x38
 14900 3ded 02       		.uleb128 0x2
 14901 3dee 7D       		.byte	0x7d
 14902 3def 00       		.sleb128 0
 14903 3df0 04       		.uleb128 0x4
 14904 3df1 91       		.byte	0x91
 14905 3df2 807F     		.sleb128 -128
 14906 3df4 06       		.byte	0x6
 14907 3df5 00       		.byte	0
 14908 3df6 37       		.uleb128 0x37
 14909 3df7 26010000 		.4byte	.LVL590
 14910 3dfb 49150000 		.4byte	0x1549
 14911 3dff 38       		.uleb128 0x38
 14912 3e00 01       		.uleb128 0x1
 14913 3e01 53       		.byte	0x53
 14914 3e02 04       		.uleb128 0x4
 14915 3e03 91       		.byte	0x91
 14916 3e04 807F     		.sleb128 -128
 14917 3e06 06       		.byte	0x6
 14918 3e07 38       		.uleb128 0x38
 14919 3e08 01       		.uleb128 0x1
 14920 3e09 52       		.byte	0x52
 14921 3e0a 03       		.uleb128 0x3
 14922 3e0b 91       		.byte	0x91
 14923 3e0c AC7F     		.sleb128 -84
 14924 3e0e 38       		.uleb128 0x38
 14925 3e0f 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 448


 14926 3e10 51       		.byte	0x51
 14927 3e11 03       		.uleb128 0x3
 14928 3e12 91       		.byte	0x91
 14929 3e13 A87F     		.sleb128 -88
 14930 3e15 38       		.uleb128 0x38
 14931 3e16 01       		.uleb128 0x1
 14932 3e17 50       		.byte	0x50
 14933 3e18 04       		.uleb128 0x4
 14934 3e19 91       		.byte	0x91
 14935 3e1a FC7E     		.sleb128 -132
 14936 3e1c 06       		.byte	0x6
 14937 3e1d 00       		.byte	0
 14938 3e1e 00       		.byte	0
 14939 3e1f 00       		.byte	0
 14940 3e20 26       		.uleb128 0x26
 14941 3e21 95320000 		.4byte	0x3295
 14942 3e25 2C070000 		.4byte	.LBB224
 14943 3e29 80020000 		.4byte	.Ldebug_ranges0+0x280
 14944 3e2d 01       		.byte	0x1
 14945 3e2e 7113     		.2byte	0x1371
 14946 3e30 6D3E0000 		.4byte	0x3e6d
 14947 3e34 27       		.uleb128 0x27
 14948 3e35 A6320000 		.4byte	0x32a6
 14949 3e39 D52E0000 		.4byte	.LLST207
 14950 3e3d 2E       		.uleb128 0x2e
 14951 3e3e 80020000 		.4byte	.Ldebug_ranges0+0x280
 14952 3e42 3F       		.uleb128 0x3f
 14953 3e43 B2320000 		.4byte	0x32b2
 14954 3e47 02       		.uleb128 0x2
 14955 3e48 91       		.byte	0x91
 14956 3e49 48       		.sleb128 -56
 14957 3e4a 30       		.uleb128 0x30
 14958 3e4b BE320000 		.4byte	0x32be
 14959 3e4f FE2E0000 		.4byte	.LLST208
 14960 3e53 37       		.uleb128 0x37
 14961 3e54 48070000 		.4byte	.LVL704
 14962 3e58 49150000 		.4byte	0x1549
 14963 3e5c 38       		.uleb128 0x38
 14964 3e5d 01       		.uleb128 0x1
 14965 3e5e 52       		.byte	0x52
 14966 3e5f 02       		.uleb128 0x2
 14967 3e60 91       		.byte	0x91
 14968 3e61 48       		.sleb128 -56
 14969 3e62 38       		.uleb128 0x38
 14970 3e63 01       		.uleb128 0x1
 14971 3e64 51       		.byte	0x51
 14972 3e65 04       		.uleb128 0x4
 14973 3e66 91       		.byte	0x91
 14974 3e67 807F     		.sleb128 -128
 14975 3e69 06       		.byte	0x6
 14976 3e6a 00       		.byte	0
 14977 3e6b 00       		.byte	0
 14978 3e6c 00       		.byte	0
 14979 3e6d 31       		.uleb128 0x31
 14980 3e6e A0020000 		.4byte	.Ldebug_ranges0+0x2a0
 14981 3e72 463F0000 		.4byte	0x3f46
 14982 3e76 25       		.uleb128 0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 449


 14983 3e77 636100   		.ascii	"ca\000"
 14984 3e7a 01       		.byte	0x1
 14985 3e7b 8713     		.2byte	0x1387
 14986 3e7d BF0B0000 		.4byte	0xbbf
 14987 3e81 E92F0000 		.4byte	.LLST209
 14988 3e85 26       		.uleb128 0x26
 14989 3e86 5A100000 		.4byte	0x105a
 14990 3e8a A0070000 		.4byte	.LBB231
 14991 3e8e B8020000 		.4byte	.Ldebug_ranges0+0x2b8
 14992 3e92 01       		.byte	0x1
 14993 3e93 A013     		.2byte	0x13a0
 14994 3e95 2C3F0000 		.4byte	0x3f2c
 14995 3e99 29       		.uleb128 0x29
 14996 3e9a 83100000 		.4byte	0x1083
 14997 3e9e 29       		.uleb128 0x29
 14998 3e9f 8F100000 		.4byte	0x108f
 14999 3ea3 29       		.uleb128 0x29
 15000 3ea4 9B100000 		.4byte	0x109b
 15001 3ea8 27       		.uleb128 0x27
 15002 3ea9 A7100000 		.4byte	0x10a7
 15003 3ead 08300000 		.4byte	.LLST210
 15004 3eb1 27       		.uleb128 0x27
 15005 3eb2 B3100000 		.4byte	0x10b3
 15006 3eb6 2A300000 		.4byte	.LLST211
 15007 3eba 27       		.uleb128 0x27
 15008 3ebb CB100000 		.4byte	0x10cb
 15009 3ebf 4A300000 		.4byte	.LLST212
 15010 3ec3 27       		.uleb128 0x27
 15011 3ec4 BF100000 		.4byte	0x10bf
 15012 3ec8 6C300000 		.4byte	.LLST213
 15013 3ecc 27       		.uleb128 0x27
 15014 3ecd 77100000 		.4byte	0x1077
 15015 3ed1 8B300000 		.4byte	.LLST214
 15016 3ed5 27       		.uleb128 0x27
 15017 3ed6 6B100000 		.4byte	0x106b
 15018 3eda A9300000 		.4byte	.LLST215
 15019 3ede 2E       		.uleb128 0x2e
 15020 3edf B8020000 		.4byte	.Ldebug_ranges0+0x2b8
 15021 3ee3 30       		.uleb128 0x30
 15022 3ee4 D7100000 		.4byte	0x10d7
 15023 3ee8 C7300000 		.4byte	.LLST216
 15024 3eec 30       		.uleb128 0x30
 15025 3eed E3100000 		.4byte	0x10e3
 15026 3ef1 C7300000 		.4byte	.LLST216
 15027 3ef5 30       		.uleb128 0x30
 15028 3ef6 EF100000 		.4byte	0x10ef
 15029 3efa C7300000 		.4byte	.LLST216
 15030 3efe 3F       		.uleb128 0x3f
 15031 3eff FB100000 		.4byte	0x10fb
 15032 3f03 02       		.uleb128 0x2
 15033 3f04 91       		.byte	0x91
 15034 3f05 48       		.sleb128 -56
 15035 3f06 39       		.uleb128 0x39
 15036 3f07 D8070000 		.4byte	.LVL720
 15037 3f0b 58480000 		.4byte	0x4858
 15038 3f0f 1A3F0000 		.4byte	0x3f1a
 15039 3f13 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 450


 15040 3f14 01       		.uleb128 0x1
 15041 3f15 52       		.byte	0x52
 15042 3f16 02       		.uleb128 0x2
 15043 3f17 91       		.byte	0x91
 15044 3f18 48       		.sleb128 -56
 15045 3f19 00       		.byte	0
 15046 3f1a 37       		.uleb128 0x37
 15047 3f1b E0070000 		.4byte	.LVL722
 15048 3f1f 8C490000 		.4byte	0x498c
 15049 3f23 38       		.uleb128 0x38
 15050 3f24 01       		.uleb128 0x1
 15051 3f25 52       		.byte	0x52
 15052 3f26 02       		.uleb128 0x2
 15053 3f27 91       		.byte	0x91
 15054 3f28 48       		.sleb128 -56
 15055 3f29 00       		.byte	0
 15056 3f2a 00       		.byte	0
 15057 3f2b 00       		.byte	0
 15058 3f2c 37       		.uleb128 0x37
 15059 3f2d 9A070000 		.4byte	.LVL717
 15060 3f31 AB490000 		.4byte	0x49ab
 15061 3f35 38       		.uleb128 0x38
 15062 3f36 01       		.uleb128 0x1
 15063 3f37 51       		.byte	0x51
 15064 3f38 03       		.uleb128 0x3
 15065 3f39 77       		.byte	0x77
 15066 3f3a C800     		.sleb128 72
 15067 3f3c 38       		.uleb128 0x38
 15068 3f3d 01       		.uleb128 0x1
 15069 3f3e 50       		.byte	0x50
 15070 3f3f 04       		.uleb128 0x4
 15071 3f40 91       		.byte	0x91
 15072 3f41 A47F     		.sleb128 -92
 15073 3f43 06       		.byte	0x6
 15074 3f44 00       		.byte	0
 15075 3f45 00       		.byte	0
 15076 3f46 39       		.uleb128 0x39
 15077 3f47 12000000 		.4byte	.LVL576
 15078 3f4b DB120000 		.4byte	0x12db
 15079 3f4f 623F0000 		.4byte	0x3f62
 15080 3f53 38       		.uleb128 0x38
 15081 3f54 01       		.uleb128 0x1
 15082 3f55 51       		.byte	0x51
 15083 3f56 04       		.uleb128 0x4
 15084 3f57 91       		.byte	0x91
 15085 3f58 A07F     		.sleb128 -96
 15086 3f5a 06       		.byte	0x6
 15087 3f5b 38       		.uleb128 0x38
 15088 3f5c 01       		.uleb128 0x1
 15089 3f5d 50       		.byte	0x50
 15090 3f5e 02       		.uleb128 0x2
 15091 3f5f 77       		.byte	0x77
 15092 3f60 00       		.sleb128 0
 15093 3f61 00       		.byte	0
 15094 3f62 37       		.uleb128 0x37
 15095 3f63 28070000 		.4byte	.LVL698
 15096 3f67 F01C0000 		.4byte	0x1cf0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 451


 15097 3f6b 38       		.uleb128 0x38
 15098 3f6c 01       		.uleb128 0x1
 15099 3f6d 53       		.byte	0x53
 15100 3f6e 01       		.uleb128 0x1
 15101 3f6f 31       		.byte	0x31
 15102 3f70 38       		.uleb128 0x38
 15103 3f71 01       		.uleb128 0x1
 15104 3f72 52       		.byte	0x52
 15105 3f73 02       		.uleb128 0x2
 15106 3f74 91       		.byte	0x91
 15107 3f75 44       		.sleb128 -60
 15108 3f76 38       		.uleb128 0x38
 15109 3f77 01       		.uleb128 0x1
 15110 3f78 51       		.byte	0x51
 15111 3f79 04       		.uleb128 0x4
 15112 3f7a 91       		.byte	0x91
 15113 3f7b 807F     		.sleb128 -128
 15114 3f7d 06       		.byte	0x6
 15115 3f7e 00       		.byte	0
 15116 3f7f 00       		.byte	0
 15117 3f80 33       		.uleb128 0x33
 15118 3f81 900D0000 		.4byte	.LASF583
 15119 3f85 01       		.byte	0x1
 15120 3f86 FF12     		.2byte	0x12ff
 15121 3f88 25000000 		.4byte	0x25
 15122 3f8c 00000000 		.4byte	.LFB63
 15123 3f90 6C000000 		.4byte	.LFE63-.LFB63
 15124 3f94 01       		.uleb128 0x1
 15125 3f95 9C       		.byte	0x9c
 15126 3f96 4E400000 		.4byte	0x404e
 15127 3f9a 23       		.uleb128 0x23
 15128 3f9b 24080000 		.4byte	.LASF461
 15129 3f9f 01       		.byte	0x1
 15130 3fa0 FF12     		.2byte	0x12ff
 15131 3fa2 60110000 		.4byte	0x1160
 15132 3fa6 DB300000 		.4byte	.LLST219
 15133 3faa 23       		.uleb128 0x23
 15134 3fab 51030000 		.4byte	.LASF256
 15135 3faf 01       		.byte	0x1
 15136 3fb0 FF12     		.2byte	0x12ff
 15137 3fb2 25000000 		.4byte	0x25
 15138 3fb6 07310000 		.4byte	.LLST220
 15139 3fba 23       		.uleb128 0x23
 15140 3fbb A8160000 		.4byte	.LASF280
 15141 3fbf 01       		.byte	0x1
 15142 3fc0 FF12     		.2byte	0x12ff
 15143 3fc2 25000000 		.4byte	0x25
 15144 3fc6 28310000 		.4byte	.LLST221
 15145 3fca 2B       		.uleb128 0x2b
 15146 3fcb 636D00   		.ascii	"cm\000"
 15147 3fce 01       		.byte	0x1
 15148 3fcf FF12     		.2byte	0x12ff
 15149 3fd1 B9000000 		.4byte	0xb9
 15150 3fd5 49310000 		.4byte	.LLST222
 15151 3fd9 25       		.uleb128 0x25
 15152 3fda 72657400 		.ascii	"ret\000"
 15153 3fde 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 452


 15154 3fdf 0113     		.2byte	0x1301
 15155 3fe1 25000000 		.4byte	0x25
 15156 3fe5 6A310000 		.4byte	.LLST223
 15157 3fe9 25       		.uleb128 0x25
 15158 3fea 70747200 		.ascii	"ptr\000"
 15159 3fee 01       		.byte	0x1
 15160 3fef 0213     		.2byte	0x1302
 15161 3ff1 C1000000 		.4byte	0xc1
 15162 3ff5 A9310000 		.4byte	.LLST224
 15163 3ff9 39       		.uleb128 0x39
 15164 3ffa 08000000 		.4byte	.LVL730
 15165 3ffe 9B330000 		.4byte	0x339b
 15166 4002 22400000 		.4byte	0x4022
 15167 4006 38       		.uleb128 0x38
 15168 4007 01       		.uleb128 0x1
 15169 4008 53       		.byte	0x53
 15170 4009 03       		.uleb128 0x3
 15171 400a F3       		.byte	0xf3
 15172 400b 01       		.uleb128 0x1
 15173 400c 53       		.byte	0x53
 15174 400d 38       		.uleb128 0x38
 15175 400e 01       		.uleb128 0x1
 15176 400f 52       		.byte	0x52
 15177 4010 03       		.uleb128 0x3
 15178 4011 F3       		.byte	0xf3
 15179 4012 01       		.uleb128 0x1
 15180 4013 52       		.byte	0x52
 15181 4014 38       		.uleb128 0x38
 15182 4015 01       		.uleb128 0x1
 15183 4016 51       		.byte	0x51
 15184 4017 03       		.uleb128 0x3
 15185 4018 F3       		.byte	0xf3
 15186 4019 01       		.uleb128 0x1
 15187 401a 51       		.byte	0x51
 15188 401b 38       		.uleb128 0x38
 15189 401c 01       		.uleb128 0x1
 15190 401d 50       		.byte	0x50
 15191 401e 02       		.uleb128 0x2
 15192 401f 74       		.byte	0x74
 15193 4020 00       		.sleb128 0
 15194 4021 00       		.byte	0
 15195 4022 3A       		.uleb128 0x3a
 15196 4023 1A000000 		.4byte	.LVL733
 15197 4027 43480000 		.4byte	0x4843
 15198 402b 3A       		.uleb128 0x3a
 15199 402c 2C000000 		.4byte	.LVL737
 15200 4030 15480000 		.4byte	0x4815
 15201 4034 3A       		.uleb128 0x3a
 15202 4035 52000000 		.4byte	.LVL740
 15203 4039 43480000 		.4byte	0x4843
 15204 403d 37       		.uleb128 0x37
 15205 403e 5E000000 		.4byte	.LVL742
 15206 4042 15480000 		.4byte	0x4815
 15207 4046 38       		.uleb128 0x38
 15208 4047 01       		.uleb128 0x1
 15209 4048 50       		.byte	0x50
 15210 4049 02       		.uleb128 0x2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 453


 15211 404a 76       		.byte	0x76
 15212 404b 00       		.sleb128 0
 15213 404c 00       		.byte	0
 15214 404d 00       		.byte	0
 15215 404e 33       		.uleb128 0x33
 15216 404f BE160000 		.4byte	.LASF584
 15217 4053 01       		.byte	0x1
 15218 4054 C313     		.2byte	0x13c3
 15219 4056 BF0B0000 		.4byte	0xbbf
 15220 405a 00000000 		.4byte	.LFB65
 15221 405e 20000000 		.4byte	.LFE65-.LFB65
 15222 4062 01       		.uleb128 0x1
 15223 4063 9C       		.byte	0x9c
 15224 4064 97400000 		.4byte	0x4097
 15225 4068 23       		.uleb128 0x23
 15226 4069 BA060000 		.4byte	.LASF284
 15227 406d 01       		.byte	0x1
 15228 406e C313     		.2byte	0x13c3
 15229 4070 B9000000 		.4byte	0xb9
 15230 4074 DD310000 		.4byte	.LLST225
 15231 4078 35       		.uleb128 0x35
 15232 4079 640E0000 		.4byte	.LASF573
 15233 407d 01       		.byte	0x1
 15234 407e C513     		.2byte	0x13c5
 15235 4080 BF0B0000 		.4byte	0xbbf
 15236 4084 01       		.uleb128 0x1
 15237 4085 50       		.byte	0x50
 15238 4086 37       		.uleb128 0x37
 15239 4087 08000000 		.4byte	.LVL747
 15240 408b 43480000 		.4byte	0x4843
 15241 408f 38       		.uleb128 0x38
 15242 4090 01       		.uleb128 0x1
 15243 4091 50       		.byte	0x50
 15244 4092 02       		.uleb128 0x2
 15245 4093 08       		.byte	0x8
 15246 4094 38       		.byte	0x38
 15247 4095 00       		.byte	0
 15248 4096 00       		.byte	0
 15249 4097 3B       		.uleb128 0x3b
 15250 4098 69180000 		.4byte	.LASF585
 15251 409c 01       		.byte	0x1
 15252 409d DA13     		.2byte	0x13da
 15253 409f 00000000 		.4byte	.LFB66
 15254 40a3 3A000000 		.4byte	.LFE66-.LFB66
 15255 40a7 01       		.uleb128 0x1
 15256 40a8 9C       		.byte	0x9c
 15257 40a9 67410000 		.4byte	0x4167
 15258 40ad 23       		.uleb128 0x23
 15259 40ae 640E0000 		.4byte	.LASF573
 15260 40b2 01       		.byte	0x1
 15261 40b3 DA13     		.2byte	0x13da
 15262 40b5 BF0B0000 		.4byte	0xbbf
 15263 40b9 FE310000 		.4byte	.LLST226
 15264 40bd 23       		.uleb128 0x23
 15265 40be BA060000 		.4byte	.LASF284
 15266 40c2 01       		.byte	0x1
 15267 40c3 DA13     		.2byte	0x13da
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 454


 15268 40c5 B9000000 		.4byte	0xb9
 15269 40c9 2A320000 		.4byte	.LLST227
 15270 40cd 31       		.uleb128 0x31
 15271 40ce D8020000 		.4byte	.Ldebug_ranges0+0x2d8
 15272 40d2 EF400000 		.4byte	0x40ef
 15273 40d6 25       		.uleb128 0x25
 15274 40d7 787000   		.ascii	"xp\000"
 15275 40da 01       		.byte	0x1
 15276 40db DC13     		.2byte	0x13dc
 15277 40dd B9000000 		.4byte	0xb9
 15278 40e1 56320000 		.4byte	.LLST228
 15279 40e5 3A       		.uleb128 0x3a
 15280 40e6 10000000 		.4byte	.LVL750
 15281 40ea 32480000 		.4byte	0x4832
 15282 40ee 00       		.byte	0
 15283 40ef 2F       		.uleb128 0x2f
 15284 40f0 10000000 		.4byte	.LBB240
 15285 40f4 0A000000 		.4byte	.LBE240-.LBB240
 15286 40f8 15410000 		.4byte	0x4115
 15287 40fc 25       		.uleb128 0x25
 15288 40fd 787000   		.ascii	"xp\000"
 15289 4100 01       		.byte	0x1
 15290 4101 DD13     		.2byte	0x13dd
 15291 4103 B9000000 		.4byte	0xb9
 15292 4107 69320000 		.4byte	.LLST229
 15293 410b 3A       		.uleb128 0x3a
 15294 410c 1A000000 		.4byte	.LVL752
 15295 4110 32480000 		.4byte	0x4832
 15296 4114 00       		.byte	0
 15297 4115 2F       		.uleb128 0x2f
 15298 4116 32000000 		.4byte	.LBB241
 15299 411a 06000000 		.4byte	.LBE241-.LBB241
 15300 411e 42410000 		.4byte	0x4142
 15301 4122 25       		.uleb128 0x25
 15302 4123 787000   		.ascii	"xp\000"
 15303 4126 01       		.byte	0x1
 15304 4127 E413     		.2byte	0x13e4
 15305 4129 B9000000 		.4byte	0xb9
 15306 412d 7C320000 		.4byte	.LLST230
 15307 4131 37       		.uleb128 0x37
 15308 4132 38000000 		.4byte	.LVL755
 15309 4136 32480000 		.4byte	0x4832
 15310 413a 38       		.uleb128 0x38
 15311 413b 01       		.uleb128 0x1
 15312 413c 50       		.byte	0x50
 15313 413d 02       		.uleb128 0x2
 15314 413e 74       		.byte	0x74
 15315 413f 00       		.sleb128 0
 15316 4140 00       		.byte	0
 15317 4141 00       		.byte	0
 15318 4142 39       		.uleb128 0x39
 15319 4143 26000000 		.4byte	.LVL753
 15320 4147 71200000 		.4byte	0x2071
 15321 414b 56410000 		.4byte	0x4156
 15322 414f 38       		.uleb128 0x38
 15323 4150 01       		.uleb128 0x1
 15324 4151 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 455


 15325 4152 02       		.uleb128 0x2
 15326 4153 75       		.byte	0x75
 15327 4154 00       		.sleb128 0
 15328 4155 00       		.byte	0
 15329 4156 37       		.uleb128 0x37
 15330 4157 32000000 		.4byte	.LVL754
 15331 415b 71200000 		.4byte	0x2071
 15332 415f 38       		.uleb128 0x38
 15333 4160 01       		.uleb128 0x1
 15334 4161 51       		.byte	0x51
 15335 4162 02       		.uleb128 0x2
 15336 4163 75       		.byte	0x75
 15337 4164 00       		.sleb128 0
 15338 4165 00       		.byte	0
 15339 4166 00       		.byte	0
 15340 4167 3B       		.uleb128 0x3b
 15341 4168 831A0000 		.4byte	.LASF586
 15342 416c 01       		.byte	0x1
 15343 416d EB13     		.2byte	0x13eb
 15344 416f 00000000 		.4byte	.LFB67
 15345 4173 28000000 		.4byte	.LFE67-.LFB67
 15346 4177 01       		.uleb128 0x1
 15347 4178 9C       		.byte	0x9c
 15348 4179 01420000 		.4byte	0x4201
 15349 417d 23       		.uleb128 0x23
 15350 417e 08090000 		.4byte	.LASF587
 15351 4182 01       		.byte	0x1
 15352 4183 EB13     		.2byte	0x13eb
 15353 4185 01420000 		.4byte	0x4201
 15354 4189 9D320000 		.4byte	.LLST231
 15355 418d 23       		.uleb128 0x23
 15356 418e 7E190000 		.4byte	.LASF588
 15357 4192 01       		.byte	0x1
 15358 4193 EB13     		.2byte	0x13eb
 15359 4195 25000000 		.4byte	0x25
 15360 4199 BE320000 		.4byte	.LLST232
 15361 419d 23       		.uleb128 0x23
 15362 419e BA060000 		.4byte	.LASF284
 15363 41a2 01       		.byte	0x1
 15364 41a3 EB13     		.2byte	0x13eb
 15365 41a5 B9000000 		.4byte	0xb9
 15366 41a9 EA320000 		.4byte	.LLST233
 15367 41ad 25       		.uleb128 0x25
 15368 41ae 6900     		.ascii	"i\000"
 15369 41b0 01       		.byte	0x1
 15370 41b1 ED13     		.2byte	0x13ed
 15371 41b3 25000000 		.4byte	0x25
 15372 41b7 09330000 		.4byte	.LLST234
 15373 41bb 32       		.uleb128 0x32
 15374 41bc 0E000000 		.4byte	.LBB242
 15375 41c0 14000000 		.4byte	.LBE242-.LBB242
 15376 41c4 34       		.uleb128 0x34
 15377 41c5 640E0000 		.4byte	.LASF573
 15378 41c9 01       		.byte	0x1
 15379 41ca F013     		.2byte	0x13f0
 15380 41cc BF0B0000 		.4byte	0xbbf
 15381 41d0 28330000 		.4byte	.LLST235
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 456


 15382 41d4 32       		.uleb128 0x32
 15383 41d5 14000000 		.4byte	.LBB243
 15384 41d9 0C000000 		.4byte	.LBE243-.LBB243
 15385 41dd 34       		.uleb128 0x34
 15386 41de 8E210000 		.4byte	.LASF252
 15387 41e2 01       		.byte	0x1
 15388 41e3 F213     		.2byte	0x13f2
 15389 41e5 BF0B0000 		.4byte	0xbbf
 15390 41e9 51330000 		.4byte	.LLST236
 15391 41ed 37       		.uleb128 0x37
 15392 41ee 1C000000 		.4byte	.LVL762
 15393 41f2 97400000 		.4byte	0x4097
 15394 41f6 38       		.uleb128 0x38
 15395 41f7 01       		.uleb128 0x1
 15396 41f8 51       		.byte	0x51
 15397 41f9 03       		.uleb128 0x3
 15398 41fa 91       		.byte	0x91
 15399 41fb 64       		.sleb128 -28
 15400 41fc 06       		.byte	0x6
 15401 41fd 00       		.byte	0
 15402 41fe 00       		.byte	0
 15403 41ff 00       		.byte	0
 15404 4200 00       		.byte	0
 15405 4201 08       		.uleb128 0x8
 15406 4202 04       		.byte	0x4
 15407 4203 BF0B0000 		.4byte	0xbbf
 15408 4207 33       		.uleb128 0x33
 15409 4208 E80B0000 		.4byte	.LASF589
 15410 420c 01       		.byte	0x1
 15411 420d 2514     		.2byte	0x1425
 15412 420f 25000000 		.4byte	0x25
 15413 4213 00000000 		.4byte	.LFB68
 15414 4217 2A000000 		.4byte	.LFE68-.LFB68
 15415 421b 01       		.uleb128 0x1
 15416 421c 9C       		.byte	0x9c
 15417 421d 60420000 		.4byte	0x4260
 15418 4221 23       		.uleb128 0x23
 15419 4222 99190000 		.4byte	.LASF266
 15420 4226 01       		.byte	0x1
 15421 4227 2514     		.2byte	0x1425
 15422 4229 50000000 		.4byte	0x50
 15423 422d 64330000 		.4byte	.LLST237
 15424 4231 23       		.uleb128 0x23
 15425 4232 11040000 		.4byte	.LASF475
 15426 4236 01       		.byte	0x1
 15427 4237 2514     		.2byte	0x1425
 15428 4239 890B0000 		.4byte	0xb89
 15429 423d 9E330000 		.4byte	.LLST238
 15430 4241 23       		.uleb128 0x23
 15431 4242 FD010000 		.4byte	.LASF590
 15432 4246 01       		.byte	0x1
 15433 4247 2514     		.2byte	0x1425
 15434 4249 25000000 		.4byte	0x25
 15435 424d D8330000 		.4byte	.LLST239
 15436 4251 25       		.uleb128 0x25
 15437 4252 6900     		.ascii	"i\000"
 15438 4254 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 457


 15439 4255 2714     		.2byte	0x1427
 15440 4257 25000000 		.4byte	0x25
 15441 425b 12340000 		.4byte	.LLST240
 15442 425f 00       		.byte	0
 15443 4260 33       		.uleb128 0x33
 15444 4261 F7040000 		.4byte	.LASF591
 15445 4265 01       		.byte	0x1
 15446 4266 3814     		.2byte	0x1438
 15447 4268 25000000 		.4byte	0x25
 15448 426c 00000000 		.4byte	.LFB69
 15449 4270 48000000 		.4byte	.LFE69-.LFB69
 15450 4274 01       		.uleb128 0x1
 15451 4275 9C       		.byte	0x9c
 15452 4276 FE420000 		.4byte	0x42fe
 15453 427a 2B       		.uleb128 0x2b
 15454 427b 736E00   		.ascii	"sn\000"
 15455 427e 01       		.byte	0x1
 15456 427f 3814     		.2byte	0x1438
 15457 4281 08110000 		.4byte	0x1108
 15458 4285 6F340000 		.4byte	.LLST241
 15459 4289 23       		.uleb128 0x23
 15460 428a 6B0E0000 		.4byte	.LASF592
 15461 428e 01       		.byte	0x1
 15462 428f 3814     		.2byte	0x1438
 15463 4291 50000000 		.4byte	0x50
 15464 4295 D8340000 		.4byte	.LLST242
 15465 4299 23       		.uleb128 0x23
 15466 429a 11040000 		.4byte	.LASF475
 15467 429e 01       		.byte	0x1
 15468 429f 3814     		.2byte	0x1438
 15469 42a1 890B0000 		.4byte	0xb89
 15470 42a5 1A350000 		.4byte	.LLST243
 15471 42a9 34       		.uleb128 0x34
 15472 42aa CB040000 		.4byte	.LASF593
 15473 42ae 01       		.byte	0x1
 15474 42af 3A14     		.2byte	0x143a
 15475 42b1 25000000 		.4byte	0x25
 15476 42b5 87350000 		.4byte	.LLST244
 15477 42b9 39       		.uleb128 0x39
 15478 42ba 2E000000 		.4byte	.LVL783
 15479 42be 15480000 		.4byte	0x4815
 15480 42c2 DD420000 		.4byte	0x42dd
 15481 42c6 38       		.uleb128 0x38
 15482 42c7 01       		.uleb128 0x1
 15483 42c8 52       		.byte	0x52
 15484 42c9 02       		.uleb128 0x2
 15485 42ca 74       		.byte	0x74
 15486 42cb 00       		.sleb128 0
 15487 42cc 38       		.uleb128 0x38
 15488 42cd 01       		.uleb128 0x1
 15489 42ce 51       		.byte	0x51
 15490 42cf 03       		.uleb128 0x3
 15491 42d0 F3       		.byte	0xf3
 15492 42d1 01       		.uleb128 0x1
 15493 42d2 50       		.byte	0x50
 15494 42d3 38       		.uleb128 0x38
 15495 42d4 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 458


 15496 42d5 50       		.byte	0x50
 15497 42d6 05       		.uleb128 0x5
 15498 42d7 F3       		.byte	0xf3
 15499 42d8 01       		.uleb128 0x1
 15500 42d9 52       		.byte	0x52
 15501 42da 23       		.byte	0x23
 15502 42db 03       		.uleb128 0x3
 15503 42dc 00       		.byte	0
 15504 42dd 37       		.uleb128 0x37
 15505 42de 3E000000 		.4byte	.LVL787
 15506 42e2 15480000 		.4byte	0x4815
 15507 42e6 38       		.uleb128 0x38
 15508 42e7 01       		.uleb128 0x1
 15509 42e8 52       		.byte	0x52
 15510 42e9 02       		.uleb128 0x2
 15511 42ea 74       		.byte	0x74
 15512 42eb 00       		.sleb128 0
 15513 42ec 38       		.uleb128 0x38
 15514 42ed 01       		.uleb128 0x1
 15515 42ee 51       		.byte	0x51
 15516 42ef 03       		.uleb128 0x3
 15517 42f0 F3       		.byte	0xf3
 15518 42f1 01       		.uleb128 0x1
 15519 42f2 50       		.byte	0x50
 15520 42f3 38       		.uleb128 0x38
 15521 42f4 01       		.uleb128 0x1
 15522 42f5 50       		.byte	0x50
 15523 42f6 05       		.uleb128 0x5
 15524 42f7 F3       		.byte	0xf3
 15525 42f8 01       		.uleb128 0x1
 15526 42f9 52       		.byte	0x52
 15527 42fa 23       		.byte	0x23
 15528 42fb 02       		.uleb128 0x2
 15529 42fc 00       		.byte	0
 15530 42fd 00       		.byte	0
 15531 42fe 33       		.uleb128 0x33
 15532 42ff 011F0000 		.4byte	.LASF594
 15533 4303 01       		.byte	0x1
 15534 4304 BC24     		.2byte	0x24bc
 15535 4306 25000000 		.4byte	0x25
 15536 430a 00000000 		.4byte	.LFB70
 15537 430e 5C000000 		.4byte	.LFE70-.LFB70
 15538 4312 01       		.uleb128 0x1
 15539 4313 9C       		.byte	0x9c
 15540 4314 EE430000 		.4byte	0x43ee
 15541 4318 23       		.uleb128 0x23
 15542 4319 760A0000 		.4byte	.LASF281
 15543 431d 01       		.byte	0x1
 15544 431e BC24     		.2byte	0x24bc
 15545 4320 08110000 		.4byte	0x1108
 15546 4324 B3350000 		.4byte	.LLST245
 15547 4328 2B       		.uleb128 0x2b
 15548 4329 69647800 		.ascii	"idx\000"
 15549 432d 01       		.byte	0x1
 15550 432e BC24     		.2byte	0x24bc
 15551 4330 3E140000 		.4byte	0x143e
 15552 4334 DF350000 		.4byte	.LLST246
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 459


 15553 4338 23       		.uleb128 0x23
 15554 4339 52210000 		.4byte	.LASF490
 15555 433d 01       		.byte	0x1
 15556 433e BC24     		.2byte	0x24bc
 15557 4340 890B0000 		.4byte	0xb89
 15558 4344 0B360000 		.4byte	.LLST247
 15559 4348 23       		.uleb128 0x23
 15560 4349 540E0000 		.4byte	.LASF283
 15561 434d 01       		.byte	0x1
 15562 434e BD24     		.2byte	0x24bd
 15563 4350 25000000 		.4byte	0x25
 15564 4354 2A360000 		.4byte	.LLST248
 15565 4358 35       		.uleb128 0x35
 15566 4359 D5170000 		.4byte	.LASF462
 15567 435d 01       		.byte	0x1
 15568 435e BF24     		.2byte	0x24bf
 15569 4360 25000000 		.4byte	0x25
 15570 4364 02       		.uleb128 0x2
 15571 4365 91       		.byte	0x91
 15572 4366 64       		.sleb128 -28
 15573 4367 25       		.uleb128 0x25
 15574 4368 72657400 		.ascii	"ret\000"
 15575 436c 01       		.byte	0x1
 15576 436d C024     		.2byte	0x24c0
 15577 436f 25000000 		.4byte	0x25
 15578 4373 56360000 		.4byte	.LLST249
 15579 4377 34       		.uleb128 0x34
 15580 4378 07050000 		.4byte	.LASF488
 15581 437c 01       		.byte	0x1
 15582 437d C124     		.2byte	0x24c1
 15583 437f 50000000 		.4byte	0x50
 15584 4383 69360000 		.4byte	.LLST250
 15585 4387 39       		.uleb128 0x39
 15586 4388 1C000000 		.4byte	.LVL796
 15587 438c 49150000 		.4byte	0x1549
 15588 4390 AD430000 		.4byte	0x43ad
 15589 4394 38       		.uleb128 0x38
 15590 4395 01       		.uleb128 0x1
 15591 4396 53       		.byte	0x53
 15592 4397 02       		.uleb128 0x2
 15593 4398 76       		.byte	0x76
 15594 4399 00       		.sleb128 0
 15595 439a 38       		.uleb128 0x38
 15596 439b 01       		.uleb128 0x1
 15597 439c 52       		.byte	0x52
 15598 439d 02       		.uleb128 0x2
 15599 439e 91       		.byte	0x91
 15600 439f 64       		.sleb128 -28
 15601 43a0 38       		.uleb128 0x38
 15602 43a1 01       		.uleb128 0x1
 15603 43a2 51       		.byte	0x51
 15604 43a3 02       		.uleb128 0x2
 15605 43a4 74       		.byte	0x74
 15606 43a5 00       		.sleb128 0
 15607 43a6 38       		.uleb128 0x38
 15608 43a7 01       		.uleb128 0x1
 15609 43a8 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 460


 15610 43a9 02       		.uleb128 0x2
 15611 43aa 75       		.byte	0x75
 15612 43ab 00       		.sleb128 0
 15613 43ac 00       		.byte	0
 15614 43ad 39       		.uleb128 0x39
 15615 43ae 3C000000 		.4byte	.LVL798
 15616 43b2 E4150000 		.4byte	0x15e4
 15617 43b6 D3430000 		.4byte	0x43d3
 15618 43ba 38       		.uleb128 0x38
 15619 43bb 01       		.uleb128 0x1
 15620 43bc 53       		.byte	0x53
 15621 43bd 02       		.uleb128 0x2
 15622 43be 76       		.byte	0x76
 15623 43bf 00       		.sleb128 0
 15624 43c0 38       		.uleb128 0x38
 15625 43c1 01       		.uleb128 0x1
 15626 43c2 52       		.byte	0x52
 15627 43c3 02       		.uleb128 0x2
 15628 43c4 91       		.byte	0x91
 15629 43c5 64       		.sleb128 -28
 15630 43c6 38       		.uleb128 0x38
 15631 43c7 01       		.uleb128 0x1
 15632 43c8 51       		.byte	0x51
 15633 43c9 02       		.uleb128 0x2
 15634 43ca 74       		.byte	0x74
 15635 43cb 00       		.sleb128 0
 15636 43cc 38       		.uleb128 0x38
 15637 43cd 01       		.uleb128 0x1
 15638 43ce 50       		.byte	0x50
 15639 43cf 02       		.uleb128 0x2
 15640 43d0 75       		.byte	0x75
 15641 43d1 00       		.sleb128 0
 15642 43d2 00       		.byte	0
 15643 43d3 37       		.uleb128 0x37
 15644 43d4 50000000 		.4byte	.LVL799
 15645 43d8 58480000 		.4byte	0x4858
 15646 43dc 38       		.uleb128 0x38
 15647 43dd 01       		.uleb128 0x1
 15648 43de 52       		.byte	0x52
 15649 43df 03       		.uleb128 0x3
 15650 43e0 91       		.byte	0x91
 15651 43e1 5C       		.sleb128 -36
 15652 43e2 06       		.byte	0x6
 15653 43e3 38       		.uleb128 0x38
 15654 43e4 01       		.uleb128 0x1
 15655 43e5 50       		.byte	0x50
 15656 43e6 05       		.uleb128 0x5
 15657 43e7 75       		.byte	0x75
 15658 43e8 00       		.sleb128 0
 15659 43e9 77       		.byte	0x77
 15660 43ea 00       		.sleb128 0
 15661 43eb 22       		.byte	0x22
 15662 43ec 00       		.byte	0
 15663 43ed 00       		.byte	0
 15664 43ee 16       		.uleb128 0x16
 15665 43ef 2C000000 		.4byte	0x2c
 15666 43f3 FE430000 		.4byte	0x43fe
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 461


 15667 43f7 17       		.uleb128 0x17
 15668 43f8 B2000000 		.4byte	0xb2
 15669 43fc 07       		.byte	0x7
 15670 43fd 00       		.byte	0
 15671 43fe 35       		.uleb128 0x35
 15672 43ff 7A0E0000 		.4byte	.LASF595
 15673 4403 01       		.byte	0x1
 15674 4404 A802     		.2byte	0x2a8
 15675 4406 10440000 		.4byte	0x4410
 15676 440a 05       		.uleb128 0x5
 15677 440b 03       		.byte	0x3
 15678 440c 00000000 		.4byte	hashMd2hOid
 15679 4410 09       		.uleb128 0x9
 15680 4411 EE430000 		.4byte	0x43ee
 15681 4415 35       		.uleb128 0x35
 15682 4416 510D0000 		.4byte	.LASF596
 15683 441a 01       		.byte	0x1
 15684 441b A902     		.2byte	0x2a9
 15685 441d 27440000 		.4byte	0x4427
 15686 4421 05       		.uleb128 0x5
 15687 4422 03       		.byte	0x3
 15688 4423 08000000 		.4byte	hashMd5hOid
 15689 4427 09       		.uleb128 0x9
 15690 4428 EE430000 		.4byte	0x43ee
 15691 442c 35       		.uleb128 0x35
 15692 442d 71190000 		.4byte	.LASF597
 15693 4431 01       		.byte	0x1
 15694 4432 AA02     		.2byte	0x2aa
 15695 4434 3E440000 		.4byte	0x443e
 15696 4438 05       		.uleb128 0x5
 15697 4439 03       		.byte	0x3
 15698 443a 50000000 		.4byte	hashSha1hOid
 15699 443e 09       		.uleb128 0x9
 15700 443f 332F0000 		.4byte	0x2f33
 15701 4443 16       		.uleb128 0x16
 15702 4444 2C000000 		.4byte	0x2c
 15703 4448 53440000 		.4byte	0x4453
 15704 444c 17       		.uleb128 0x17
 15705 444d B2000000 		.4byte	0xb2
 15706 4451 08       		.byte	0x8
 15707 4452 00       		.byte	0
 15708 4453 35       		.uleb128 0x35
 15709 4454 880B0000 		.4byte	.LASF598
 15710 4458 01       		.byte	0x1
 15711 4459 AB02     		.2byte	0x2ab
 15712 445b 65440000 		.4byte	0x4465
 15713 445f 05       		.uleb128 0x5
 15714 4460 03       		.byte	0x3
 15715 4461 47000000 		.4byte	hashSha256hOid
 15716 4465 09       		.uleb128 0x9
 15717 4466 43440000 		.4byte	0x4443
 15718 446a 35       		.uleb128 0x35
 15719 446b E4100000 		.4byte	.LASF599
 15720 446f 01       		.byte	0x1
 15721 4470 AC02     		.2byte	0x2ac
 15722 4472 7C440000 		.4byte	0x447c
 15723 4476 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 462


 15724 4477 03       		.byte	0x3
 15725 4478 3E000000 		.4byte	hashSha384hOid
 15726 447c 09       		.uleb128 0x9
 15727 447d 43440000 		.4byte	0x4443
 15728 4481 35       		.uleb128 0x35
 15729 4482 0E0B0000 		.4byte	.LASF600
 15730 4486 01       		.byte	0x1
 15731 4487 AD02     		.2byte	0x2ad
 15732 4489 93440000 		.4byte	0x4493
 15733 448d 05       		.uleb128 0x5
 15734 448e 03       		.byte	0x3
 15735 448f 35000000 		.4byte	hashSha512hOid
 15736 4493 09       		.uleb128 0x9
 15737 4494 43440000 		.4byte	0x4443
 15738 4498 35       		.uleb128 0x35
 15739 4499 C6100000 		.4byte	.LASF601
 15740 449d 01       		.byte	0x1
 15741 449e E702     		.2byte	0x2e7
 15742 44a0 AA440000 		.4byte	0x44aa
 15743 44a4 05       		.uleb128 0x5
 15744 44a5 03       		.byte	0x3
 15745 44a6 10000000 		.4byte	blkDesCbcOid
 15746 44aa 09       		.uleb128 0x9
 15747 44ab 332F0000 		.4byte	0x2f33
 15748 44af 35       		.uleb128 0x35
 15749 44b0 F50B0000 		.4byte	.LASF602
 15750 44b4 01       		.byte	0x1
 15751 44b5 E802     		.2byte	0x2e8
 15752 44b7 C1440000 		.4byte	0x44c1
 15753 44bb 05       		.uleb128 0x5
 15754 44bc 03       		.byte	0x3
 15755 44bd 55000000 		.4byte	blkDes3CbcOid
 15756 44c1 09       		.uleb128 0x9
 15757 44c2 EE430000 		.4byte	0x43ee
 15758 44c6 16       		.uleb128 0x16
 15759 44c7 2C000000 		.4byte	0x2c
 15760 44cb D6440000 		.4byte	0x44d6
 15761 44cf 17       		.uleb128 0x17
 15762 44d0 B2000000 		.4byte	0xb2
 15763 44d4 02       		.byte	0x2
 15764 44d5 00       		.byte	0
 15765 44d6 35       		.uleb128 0x35
 15766 44d7 55040000 		.4byte	.LASF603
 15767 44db 01       		.byte	0x1
 15768 44dc F102     		.2byte	0x2f1
 15769 44de E8440000 		.4byte	0x44e8
 15770 44e2 05       		.uleb128 0x5
 15771 44e3 03       		.byte	0x3
 15772 44e4 15000000 		.4byte	extBasicCaOid
 15773 44e8 09       		.uleb128 0x9
 15774 44e9 C6440000 		.4byte	0x44c6
 15775 44ed 35       		.uleb128 0x35
 15776 44ee C6170000 		.4byte	.LASF604
 15777 44f2 01       		.byte	0x1
 15778 44f3 F202     		.2byte	0x2f2
 15779 44f5 FF440000 		.4byte	0x44ff
 15780 44f9 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 463


 15781 44fa 03       		.byte	0x3
 15782 44fb 7D000000 		.4byte	extAltNamesOid
 15783 44ff 09       		.uleb128 0x9
 15784 4500 C6440000 		.4byte	0x44c6
 15785 4504 35       		.uleb128 0x35
 15786 4505 A8210000 		.4byte	.LASF605
 15787 4509 01       		.byte	0x1
 15788 450a F302     		.2byte	0x2f3
 15789 450c 16450000 		.4byte	0x4516
 15790 4510 05       		.uleb128 0x5
 15791 4511 03       		.byte	0x3
 15792 4512 7A000000 		.4byte	extCrlDistOid
 15793 4516 09       		.uleb128 0x9
 15794 4517 C6440000 		.4byte	0x44c6
 15795 451b 35       		.uleb128 0x35
 15796 451c 1F180000 		.4byte	.LASF606
 15797 4520 01       		.byte	0x1
 15798 4521 F402     		.2byte	0x2f4
 15799 4523 2D450000 		.4byte	0x452d
 15800 4527 05       		.uleb128 0x5
 15801 4528 03       		.byte	0x3
 15802 4529 72000000 		.4byte	extAuthInfoOid
 15803 452d 09       		.uleb128 0x9
 15804 452e EE430000 		.4byte	0x43ee
 15805 4532 35       		.uleb128 0x35
 15806 4533 63040000 		.4byte	.LASF607
 15807 4537 01       		.byte	0x1
 15808 4538 F502     		.2byte	0x2f5
 15809 453a 44450000 		.4byte	0x4544
 15810 453e 05       		.uleb128 0x5
 15811 453f 03       		.byte	0x3
 15812 4540 6F000000 		.4byte	extAuthKeyOid
 15813 4544 09       		.uleb128 0x9
 15814 4545 C6440000 		.4byte	0x44c6
 15815 4549 35       		.uleb128 0x35
 15816 454a 4D080000 		.4byte	.LASF608
 15817 454e 01       		.byte	0x1
 15818 454f F602     		.2byte	0x2f6
 15819 4551 5B450000 		.4byte	0x455b
 15820 4555 05       		.uleb128 0x5
 15821 4556 03       		.byte	0x3
 15822 4557 6C000000 		.4byte	extSubjKeyOid
 15823 455b 09       		.uleb128 0x9
 15824 455c C6440000 		.4byte	0x44c6
 15825 4560 35       		.uleb128 0x35
 15826 4561 88050000 		.4byte	.LASF609
 15827 4565 01       		.byte	0x1
 15828 4566 F702     		.2byte	0x2f7
 15829 4568 72450000 		.4byte	0x4572
 15830 456c 05       		.uleb128 0x5
 15831 456d 03       		.byte	0x3
 15832 456e 69000000 		.4byte	extCertPolicyOid
 15833 4572 09       		.uleb128 0x9
 15834 4573 C6440000 		.4byte	0x44c6
 15835 4577 35       		.uleb128 0x35
 15836 4578 0D1F0000 		.4byte	.LASF610
 15837 457c 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 464


 15838 457d F802     		.2byte	0x2f8
 15839 457f 89450000 		.4byte	0x4589
 15840 4583 05       		.uleb128 0x5
 15841 4584 03       		.byte	0x3
 15842 4585 66000000 		.4byte	extKeyUsageOid
 15843 4589 09       		.uleb128 0x9
 15844 458a C6440000 		.4byte	0x44c6
 15845 458e 35       		.uleb128 0x35
 15846 458f E8080000 		.4byte	.LASF611
 15847 4593 01       		.byte	0x1
 15848 4594 F902     		.2byte	0x2f9
 15849 4596 A0450000 		.4byte	0x45a0
 15850 459a 05       		.uleb128 0x5
 15851 459b 03       		.byte	0x3
 15852 459c 63000000 		.4byte	extInhibitAnyOid
 15853 45a0 09       		.uleb128 0x9
 15854 45a1 C6440000 		.4byte	0x44c6
 15855 45a5 35       		.uleb128 0x35
 15856 45a6 7A110000 		.4byte	.LASF612
 15857 45aa 01       		.byte	0x1
 15858 45ab FA02     		.2byte	0x2fa
 15859 45ad B7450000 		.4byte	0x45b7
 15860 45b1 05       		.uleb128 0x5
 15861 45b2 03       		.byte	0x3
 15862 45b3 60000000 		.4byte	extExtKeyUsageOid
 15863 45b7 09       		.uleb128 0x9
 15864 45b8 C6440000 		.4byte	0x44c6
 15865 45bc 35       		.uleb128 0x35
 15866 45bd B10A0000 		.4byte	.LASF613
 15867 45c1 01       		.byte	0x1
 15868 45c2 FB02     		.2byte	0x2fb
 15869 45c4 CE450000 		.4byte	0x45ce
 15870 45c8 05       		.uleb128 0x5
 15871 45c9 03       		.byte	0x3
 15872 45ca 5D000000 		.4byte	extNameConsOid
 15873 45ce 09       		.uleb128 0x9
 15874 45cf C6440000 		.4byte	0x44c6
 15875 45d3 35       		.uleb128 0x35
 15876 45d4 12110000 		.4byte	.LASF614
 15877 45d8 01       		.byte	0x1
 15878 45d9 FE02     		.2byte	0x2fe
 15879 45db E5450000 		.4byte	0x45e5
 15880 45df 05       		.uleb128 0x5
 15881 45e0 03       		.byte	0x3
 15882 45e1 18000000 		.4byte	extAuthInfoOcspOid
 15883 45e5 09       		.uleb128 0x9
 15884 45e6 EE430000 		.4byte	0x43ee
 15885 45ea 35       		.uleb128 0x35
 15886 45eb D90F0000 		.4byte	.LASF615
 15887 45ef 01       		.byte	0x1
 15888 45f0 FF02     		.2byte	0x2ff
 15889 45f2 FC450000 		.4byte	0x45fc
 15890 45f6 05       		.uleb128 0x5
 15891 45f7 03       		.byte	0x3
 15892 45f8 80000000 		.4byte	extAuthInfoCaIssuerOid
 15893 45fc 09       		.uleb128 0x9
 15894 45fd EE430000 		.4byte	0x43ee
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 465


 15895 4601 35       		.uleb128 0x35
 15896 4602 C71D0000 		.4byte	.LASF616
 15897 4606 01       		.byte	0x1
 15898 4607 0203     		.2byte	0x302
 15899 4609 13460000 		.4byte	0x4613
 15900 460d 05       		.uleb128 0x5
 15901 460e 03       		.byte	0x3
 15902 460f 20000000 		.4byte	extCertPolicyAnyOid
 15903 4613 09       		.uleb128 0x9
 15904 4614 1E2D0000 		.4byte	0x2d1e
 15905 4618 35       		.uleb128 0x35
 15906 4619 51020000 		.4byte	.LASF617
 15907 461d 01       		.byte	0x1
 15908 461e 0503     		.2byte	0x305
 15909 4620 2A460000 		.4byte	0x462a
 15910 4624 05       		.uleb128 0x5
 15911 4625 03       		.byte	0x3
 15912 4626 24000000 		.4byte	extAltNamesHwNameOid
 15913 462a 09       		.uleb128 0x9
 15914 462b EE430000 		.4byte	0x43ee
 15915 462f 35       		.uleb128 0x35
 15916 4630 93210000 		.4byte	.LASF618
 15917 4634 01       		.byte	0x1
 15918 4635 0803     		.2byte	0x308
 15919 4637 41460000 		.4byte	0x4641
 15920 463b 05       		.uleb128 0x5
 15921 463c 03       		.byte	0x3
 15922 463d A0000000 		.4byte	extExtKeyUsageAnyOid
 15923 4641 09       		.uleb128 0x9
 15924 4642 1E2D0000 		.4byte	0x2d1e
 15925 4646 35       		.uleb128 0x35
 15926 4647 38060000 		.4byte	.LASF619
 15927 464b 01       		.byte	0x1
 15928 464c 0903     		.2byte	0x309
 15929 464e 58460000 		.4byte	0x4658
 15930 4652 05       		.uleb128 0x5
 15931 4653 03       		.byte	0x3
 15932 4654 98000000 		.4byte	extExtKeyUsageServerAuthOid
 15933 4658 09       		.uleb128 0x9
 15934 4659 EE430000 		.4byte	0x43ee
 15935 465d 35       		.uleb128 0x35
 15936 465e E70A0000 		.4byte	.LASF620
 15937 4662 01       		.byte	0x1
 15938 4663 0A03     		.2byte	0x30a
 15939 4665 6F460000 		.4byte	0x466f
 15940 4669 05       		.uleb128 0x5
 15941 466a 03       		.byte	0x3
 15942 466b 90000000 		.4byte	extExtKeyUsageClientAuthOid
 15943 466f 09       		.uleb128 0x9
 15944 4670 EE430000 		.4byte	0x43ee
 15945 4674 35       		.uleb128 0x35
 15946 4675 81030000 		.4byte	.LASF621
 15947 4679 01       		.byte	0x1
 15948 467a 0B03     		.2byte	0x30b
 15949 467c 86460000 		.4byte	0x4686
 15950 4680 05       		.uleb128 0x5
 15951 4681 03       		.byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 466


 15952 4682 88000000 		.4byte	extExtKeyUsageOcspSignOid
 15953 4686 09       		.uleb128 0x9
 15954 4687 EE430000 		.4byte	0x43ee
 15955 468b 35       		.uleb128 0x35
 15956 468c 700E0000 		.4byte	.LASF622
 15957 4690 01       		.byte	0x1
 15958 4691 0E03     		.2byte	0x30e
 15959 4693 9D460000 		.4byte	0x469d
 15960 4697 05       		.uleb128 0x5
 15961 4698 03       		.byte	0x3
 15962 4699 2C000000 		.4byte	pbkdf2Oid
 15963 469d 09       		.uleb128 0x9
 15964 469e 43440000 		.4byte	0x4443
 15965 46a2 41       		.uleb128 0x41
 15966 46a3 02160000 		.4byte	.LASF623
 15967 46a7 0D       		.byte	0xd
 15968 46a8 2D       		.byte	0x2d
 15969 46a9 CE000000 		.4byte	0xce
 15970 46ad 42       		.uleb128 0x42
 15971 46ae 52090000 		.4byte	.LASF624
 15972 46b2 01       		.byte	0x1
 15973 46b3 5714     		.2byte	0x1457
 15974 46b5 CE000000 		.4byte	0xce
 15975 46b9 05       		.uleb128 0x5
 15976 46ba 03       		.byte	0x3
 15977 46bb 00000000 		.4byte	BEGIN_CERT
 15978 46bf 42       		.uleb128 0x42
 15979 46c0 1B030000 		.4byte	.LASF625
 15980 46c4 01       		.byte	0x1
 15981 46c5 5814     		.2byte	0x1458
 15982 46c7 CE000000 		.4byte	0xce
 15983 46cb 05       		.uleb128 0x5
 15984 46cc 03       		.byte	0x3
 15985 46cd 00000000 		.4byte	END_CERT
 15986 46d1 42       		.uleb128 0x42
 15987 46d2 11020000 		.4byte	.LASF626
 15988 46d6 01       		.byte	0x1
 15989 46d7 5914     		.2byte	0x1459
 15990 46d9 CE000000 		.4byte	0xce
 15991 46dd 05       		.uleb128 0x5
 15992 46de 03       		.byte	0x3
 15993 46df 00000000 		.4byte	BEGIN_CERT_REQ
 15994 46e3 42       		.uleb128 0x42
 15995 46e4 3F1B0000 		.4byte	.LASF627
 15996 46e8 01       		.byte	0x1
 15997 46e9 5A14     		.2byte	0x145a
 15998 46eb CE000000 		.4byte	0xce
 15999 46ef 05       		.uleb128 0x5
 16000 46f0 03       		.byte	0x3
 16001 46f1 00000000 		.4byte	END_CERT_REQ
 16002 46f5 42       		.uleb128 0x42
 16003 46f6 231B0000 		.4byte	.LASF628
 16004 46fa 01       		.byte	0x1
 16005 46fb 5B14     		.2byte	0x145b
 16006 46fd CE000000 		.4byte	0xce
 16007 4701 05       		.uleb128 0x5
 16008 4702 03       		.byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 467


 16009 4703 00000000 		.4byte	BEGIN_DH_PARAM
 16010 4707 42       		.uleb128 0x42
 16011 4708 B9100000 		.4byte	.LASF629
 16012 470c 01       		.byte	0x1
 16013 470d 5C14     		.2byte	0x145c
 16014 470f CE000000 		.4byte	0xce
 16015 4713 05       		.uleb128 0x5
 16016 4714 03       		.byte	0x3
 16017 4715 00000000 		.4byte	END_DH_PARAM
 16018 4719 42       		.uleb128 0x42
 16019 471a 36170000 		.4byte	.LASF630
 16020 471e 01       		.byte	0x1
 16021 471f 5D14     		.2byte	0x145d
 16022 4721 CE000000 		.4byte	0xce
 16023 4725 05       		.uleb128 0x5
 16024 4726 03       		.byte	0x3
 16025 4727 00000000 		.4byte	BEGIN_X509_CRL
 16026 472b 42       		.uleb128 0x42
 16027 472c 9F1A0000 		.4byte	.LASF631
 16028 4730 01       		.byte	0x1
 16029 4731 5E14     		.2byte	0x145e
 16030 4733 CE000000 		.4byte	0xce
 16031 4737 05       		.uleb128 0x5
 16032 4738 03       		.byte	0x3
 16033 4739 00000000 		.4byte	END_X509_CRL
 16034 473d 42       		.uleb128 0x42
 16035 473e 41010000 		.4byte	.LASF632
 16036 4742 01       		.byte	0x1
 16037 4743 5F14     		.2byte	0x145f
 16038 4745 CE000000 		.4byte	0xce
 16039 4749 05       		.uleb128 0x5
 16040 474a 03       		.byte	0x3
 16041 474b 00000000 		.4byte	BEGIN_RSA_PRIV
 16042 474f 42       		.uleb128 0x42
 16043 4750 610F0000 		.4byte	.LASF633
 16044 4754 01       		.byte	0x1
 16045 4755 6014     		.2byte	0x1460
 16046 4757 CE000000 		.4byte	0xce
 16047 475b 05       		.uleb128 0x5
 16048 475c 03       		.byte	0x3
 16049 475d 00000000 		.4byte	END_RSA_PRIV
 16050 4761 42       		.uleb128 0x42
 16051 4762 76010000 		.4byte	.LASF634
 16052 4766 01       		.byte	0x1
 16053 4767 6114     		.2byte	0x1461
 16054 4769 CE000000 		.4byte	0xce
 16055 476d 05       		.uleb128 0x5
 16056 476e 03       		.byte	0x3
 16057 476f 00000000 		.4byte	BEGIN_PRIV_KEY
 16058 4773 42       		.uleb128 0x42
 16059 4774 7A080000 		.4byte	.LASF635
 16060 4778 01       		.byte	0x1
 16061 4779 6214     		.2byte	0x1462
 16062 477b CE000000 		.4byte	0xce
 16063 477f 05       		.uleb128 0x5
 16064 4780 03       		.byte	0x3
 16065 4781 00000000 		.4byte	END_PRIV_KEY
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 468


 16066 4785 42       		.uleb128 0x42
 16067 4786 C3130000 		.4byte	.LASF636
 16068 478a 01       		.byte	0x1
 16069 478b 6314     		.2byte	0x1463
 16070 478d CE000000 		.4byte	0xce
 16071 4791 05       		.uleb128 0x5
 16072 4792 03       		.byte	0x3
 16073 4793 00000000 		.4byte	BEGIN_ENC_PRIV_KEY
 16074 4797 42       		.uleb128 0x42
 16075 4798 8C110000 		.4byte	.LASF637
 16076 479c 01       		.byte	0x1
 16077 479d 6414     		.2byte	0x1464
 16078 479f CE000000 		.4byte	0xce
 16079 47a3 05       		.uleb128 0x5
 16080 47a4 03       		.byte	0x3
 16081 47a5 00000000 		.4byte	END_ENC_PRIV_KEY
 16082 47a9 42       		.uleb128 0x42
 16083 47aa 3F090000 		.4byte	.LASF638
 16084 47ae 01       		.byte	0x1
 16085 47af 6514     		.2byte	0x1465
 16086 47b1 CE000000 		.4byte	0xce
 16087 47b5 05       		.uleb128 0x5
 16088 47b6 03       		.byte	0x3
 16089 47b7 00000000 		.4byte	BEGIN_EC_PRIV
 16090 47bb 42       		.uleb128 0x42
 16091 47bc 4C1B0000 		.4byte	.LASF639
 16092 47c0 01       		.byte	0x1
 16093 47c1 6614     		.2byte	0x1466
 16094 47c3 CE000000 		.4byte	0xce
 16095 47c7 05       		.uleb128 0x5
 16096 47c8 03       		.byte	0x3
 16097 47c9 00000000 		.4byte	END_EC_PRIV
 16098 47cd 42       		.uleb128 0x42
 16099 47ce 54100000 		.4byte	.LASF640
 16100 47d2 01       		.byte	0x1
 16101 47d3 6714     		.2byte	0x1467
 16102 47d5 CE000000 		.4byte	0xce
 16103 47d9 05       		.uleb128 0x5
 16104 47da 03       		.byte	0x3
 16105 47db 00000000 		.4byte	BEGIN_DSA_PRIV
 16106 47df 42       		.uleb128 0x42
 16107 47e0 D81E0000 		.4byte	.LASF641
 16108 47e4 01       		.byte	0x1
 16109 47e5 6814     		.2byte	0x1468
 16110 47e7 CE000000 		.4byte	0xce
 16111 47eb 05       		.uleb128 0x5
 16112 47ec 03       		.byte	0x3
 16113 47ed 00000000 		.4byte	END_DSA_PRIV
 16114 47f1 42       		.uleb128 0x42
 16115 47f2 0C0D0000 		.4byte	.LASF642
 16116 47f6 01       		.byte	0x1
 16117 47f7 6914     		.2byte	0x1469
 16118 47f9 CE000000 		.4byte	0xce
 16119 47fd 05       		.uleb128 0x5
 16120 47fe 03       		.byte	0x3
 16121 47ff 00000000 		.4byte	BEGIN_PUB_KEY
 16122 4803 42       		.uleb128 0x42
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 469


 16123 4804 EE070000 		.4byte	.LASF643
 16124 4808 01       		.byte	0x1
 16125 4809 6A14     		.2byte	0x146a
 16126 480b CE000000 		.4byte	0xce
 16127 480f 05       		.uleb128 0x5
 16128 4810 03       		.byte	0x3
 16129 4811 00000000 		.4byte	END_PUB_KEY
 16130 4815 43       		.uleb128 0x43
 16131 4816 4F110000 		.4byte	.LASF644
 16132 481a B9000000 		.4byte	0xb9
 16133 481e 32480000 		.4byte	0x4832
 16134 4822 44       		.uleb128 0x44
 16135 4823 B9000000 		.4byte	0xb9
 16136 4827 44       		.uleb128 0x44
 16137 4828 D9000000 		.4byte	0xd9
 16138 482c 44       		.uleb128 0x44
 16139 482d B2000000 		.4byte	0xb2
 16140 4831 00       		.byte	0
 16141 4832 45       		.uleb128 0x45
 16142 4833 740F0000 		.4byte	.LASF645
 16143 4837 0E       		.byte	0xe
 16144 4838 30       		.byte	0x30
 16145 4839 43480000 		.4byte	0x4843
 16146 483d 44       		.uleb128 0x44
 16147 483e B9000000 		.4byte	0xb9
 16148 4842 00       		.byte	0
 16149 4843 46       		.uleb128 0x46
 16150 4844 F4190000 		.4byte	.LASF646
 16151 4848 0E       		.byte	0xe
 16152 4849 2F       		.byte	0x2f
 16153 484a B9000000 		.4byte	0xb9
 16154 484e 58480000 		.4byte	0x4858
 16155 4852 44       		.uleb128 0x44
 16156 4853 84000000 		.4byte	0x84
 16157 4857 00       		.byte	0
 16158 4858 46       		.uleb128 0x46
 16159 4859 3B0C0000 		.4byte	.LASF647
 16160 485d 0F       		.byte	0xf
 16161 485e 55       		.byte	0x55
 16162 485f 25000000 		.4byte	0x25
 16163 4863 77480000 		.4byte	0x4877
 16164 4867 44       		.uleb128 0x44
 16165 4868 08110000 		.4byte	0x1108
 16166 486c 44       		.uleb128 0x44
 16167 486d 50000000 		.4byte	0x50
 16168 4871 44       		.uleb128 0x44
 16169 4872 890B0000 		.4byte	0xb89
 16170 4876 00       		.byte	0
 16171 4877 46       		.uleb128 0x46
 16172 4878 B3190000 		.4byte	.LASF648
 16173 487c 05       		.byte	0x5
 16174 487d E7       		.byte	0xe7
 16175 487e 25000000 		.4byte	0x25
 16176 4882 8C480000 		.4byte	0x488c
 16177 4886 44       		.uleb128 0x44
 16178 4887 BA1B0000 		.4byte	0x1bba
 16179 488b 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 470


 16180 488c 46       		.uleb128 0x46
 16181 488d 00190000 		.4byte	.LASF649
 16182 4891 05       		.byte	0x5
 16183 4892 EA       		.byte	0xea
 16184 4893 25000000 		.4byte	0x25
 16185 4897 AB480000 		.4byte	0x48ab
 16186 489b 44       		.uleb128 0x44
 16187 489c BA1B0000 		.4byte	0x1bba
 16188 48a0 44       		.uleb128 0x44
 16189 48a1 AB480000 		.4byte	0x48ab
 16190 48a5 44       		.uleb128 0x44
 16191 48a6 25000000 		.4byte	0x25
 16192 48aa 00       		.byte	0
 16193 48ab 08       		.uleb128 0x8
 16194 48ac 04       		.byte	0x4
 16195 48ad B1480000 		.4byte	0x48b1
 16196 48b1 09       		.uleb128 0x9
 16197 48b2 37000000 		.4byte	0x37
 16198 48b6 45       		.uleb128 0x45
 16199 48b7 331A0000 		.4byte	.LASF650
 16200 48bb 05       		.byte	0x5
 16201 48bc E8       		.byte	0xe8
 16202 48bd C7480000 		.4byte	0x48c7
 16203 48c1 44       		.uleb128 0x44
 16204 48c2 BA1B0000 		.4byte	0x1bba
 16205 48c6 00       		.byte	0
 16206 48c7 46       		.uleb128 0x46
 16207 48c8 B71A0000 		.4byte	.LASF651
 16208 48cc 10       		.byte	0x10
 16209 48cd 16       		.byte	0x16
 16210 48ce 25000000 		.4byte	0x25
 16211 48d2 E6480000 		.4byte	0x48e6
 16212 48d6 44       		.uleb128 0x44
 16213 48d7 D9000000 		.4byte	0xd9
 16214 48db 44       		.uleb128 0x44
 16215 48dc D9000000 		.4byte	0xd9
 16216 48e0 44       		.uleb128 0x44
 16217 48e1 84000000 		.4byte	0x84
 16218 48e5 00       		.byte	0
 16219 48e6 46       		.uleb128 0x46
 16220 48e7 73050000 		.4byte	.LASF652
 16221 48eb 10       		.byte	0x10
 16222 48ec 18       		.byte	0x18
 16223 48ed B9000000 		.4byte	0xb9
 16224 48f1 05490000 		.4byte	0x4905
 16225 48f5 44       		.uleb128 0x44
 16226 48f6 B9000000 		.4byte	0xb9
 16227 48fa 44       		.uleb128 0x44
 16228 48fb D9000000 		.4byte	0xd9
 16229 48ff 44       		.uleb128 0x44
 16230 4900 84000000 		.4byte	0x84
 16231 4904 00       		.byte	0
 16232 4905 43       		.uleb128 0x43
 16233 4906 64090000 		.4byte	.LASF653
 16234 490a B9000000 		.4byte	0xb9
 16235 490e 22490000 		.4byte	0x4922
 16236 4912 44       		.uleb128 0x44
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 471


 16237 4913 B9000000 		.4byte	0xb9
 16238 4917 44       		.uleb128 0x44
 16239 4918 25000000 		.4byte	0x25
 16240 491c 44       		.uleb128 0x44
 16241 491d B2000000 		.4byte	0xb2
 16242 4921 00       		.byte	0
 16243 4922 46       		.uleb128 0x46
 16244 4923 561A0000 		.4byte	.LASF654
 16245 4927 0C       		.byte	0xc
 16246 4928 35       		.byte	0x35
 16247 4929 1F0F0000 		.4byte	0xf1f
 16248 492d 37490000 		.4byte	0x4937
 16249 4931 44       		.uleb128 0x44
 16250 4932 37490000 		.4byte	0x4937
 16251 4936 00       		.byte	0
 16252 4937 08       		.uleb128 0x8
 16253 4938 04       		.byte	0x4
 16254 4939 1F0F0000 		.4byte	0xf1f
 16255 493d 46       		.uleb128 0x46
 16256 493e C01C0000 		.4byte	.LASF655
 16257 4942 0C       		.byte	0xc
 16258 4943 39       		.byte	0x39
 16259 4944 4C240000 		.4byte	0x244c
 16260 4948 52490000 		.4byte	0x4952
 16261 494c 44       		.uleb128 0x44
 16262 494d 52490000 		.4byte	0x4952
 16263 4951 00       		.byte	0
 16264 4952 08       		.uleb128 0x8
 16265 4953 04       		.byte	0x4
 16266 4954 58490000 		.4byte	0x4958
 16267 4958 09       		.uleb128 0x9
 16268 4959 1F0F0000 		.4byte	0xf1f
 16269 495d 46       		.uleb128 0x46
 16270 495e AD040000 		.4byte	.LASF656
 16271 4962 05       		.byte	0x5
 16272 4963 E9       		.byte	0xe9
 16273 4964 25000000 		.4byte	0x25
 16274 4968 72490000 		.4byte	0x4972
 16275 496c 44       		.uleb128 0x44
 16276 496d BA1B0000 		.4byte	0x1bba
 16277 4971 00       		.byte	0
 16278 4972 46       		.uleb128 0x46
 16279 4973 CF030000 		.4byte	.LASF657
 16280 4977 05       		.byte	0x5
 16281 4978 EB       		.byte	0xeb
 16282 4979 25000000 		.4byte	0x25
 16283 497d 8C490000 		.4byte	0x498c
 16284 4981 44       		.uleb128 0x44
 16285 4982 BA1B0000 		.4byte	0x1bba
 16286 4986 44       		.uleb128 0x44
 16287 4987 BB000000 		.4byte	0xbb
 16288 498b 00       		.byte	0
 16289 498c 46       		.uleb128 0x46
 16290 498d 580A0000 		.4byte	.LASF658
 16291 4991 0F       		.byte	0xf
 16292 4992 61       		.byte	0x61
 16293 4993 25000000 		.4byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 472


 16294 4997 AB490000 		.4byte	0x49ab
 16295 499b 44       		.uleb128 0x44
 16296 499c 08110000 		.4byte	0x1108
 16297 49a0 44       		.uleb128 0x44
 16298 49a1 50000000 		.4byte	0x50
 16299 49a5 44       		.uleb128 0x44
 16300 49a6 890B0000 		.4byte	0xb89
 16301 49aa 00       		.byte	0
 16302 49ab 47       		.uleb128 0x47
 16303 49ac BF060000 		.4byte	.LASF659
 16304 49b0 01       		.byte	0x1
 16305 49b1 2713     		.2byte	0x1327
 16306 49b3 BF0B0000 		.4byte	0xbbf
 16307 49b7 44       		.uleb128 0x44
 16308 49b8 B9000000 		.4byte	0xb9
 16309 49bc 44       		.uleb128 0x44
 16310 49bd 890B0000 		.4byte	0xb89
 16311 49c1 00       		.byte	0
 16312 49c2 00       		.byte	0
 16313              		.section	.debug_abbrev,"",%progbits
 16314              	.Ldebug_abbrev0:
 16315 0000 01       		.uleb128 0x1
 16316 0001 11       		.uleb128 0x11
 16317 0002 01       		.byte	0x1
 16318 0003 25       		.uleb128 0x25
 16319 0004 0E       		.uleb128 0xe
 16320 0005 13       		.uleb128 0x13
 16321 0006 0B       		.uleb128 0xb
 16322 0007 03       		.uleb128 0x3
 16323 0008 0E       		.uleb128 0xe
 16324 0009 1B       		.uleb128 0x1b
 16325 000a 0E       		.uleb128 0xe
 16326 000b 55       		.uleb128 0x55
 16327 000c 17       		.uleb128 0x17
 16328 000d 11       		.uleb128 0x11
 16329 000e 01       		.uleb128 0x1
 16330 000f 10       		.uleb128 0x10
 16331 0010 17       		.uleb128 0x17
 16332 0011 00       		.byte	0
 16333 0012 00       		.byte	0
 16334 0013 02       		.uleb128 0x2
 16335 0014 24       		.uleb128 0x24
 16336 0015 00       		.byte	0
 16337 0016 0B       		.uleb128 0xb
 16338 0017 0B       		.uleb128 0xb
 16339 0018 3E       		.uleb128 0x3e
 16340 0019 0B       		.uleb128 0xb
 16341 001a 03       		.uleb128 0x3
 16342 001b 08       		.uleb128 0x8
 16343 001c 00       		.byte	0
 16344 001d 00       		.byte	0
 16345 001e 03       		.uleb128 0x3
 16346 001f 16       		.uleb128 0x16
 16347 0020 00       		.byte	0
 16348 0021 03       		.uleb128 0x3
 16349 0022 0E       		.uleb128 0xe
 16350 0023 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 473


 16351 0024 0B       		.uleb128 0xb
 16352 0025 3B       		.uleb128 0x3b
 16353 0026 0B       		.uleb128 0xb
 16354 0027 49       		.uleb128 0x49
 16355 0028 13       		.uleb128 0x13
 16356 0029 00       		.byte	0
 16357 002a 00       		.byte	0
 16358 002b 04       		.uleb128 0x4
 16359 002c 24       		.uleb128 0x24
 16360 002d 00       		.byte	0
 16361 002e 0B       		.uleb128 0xb
 16362 002f 0B       		.uleb128 0xb
 16363 0030 3E       		.uleb128 0x3e
 16364 0031 0B       		.uleb128 0xb
 16365 0032 03       		.uleb128 0x3
 16366 0033 0E       		.uleb128 0xe
 16367 0034 00       		.byte	0
 16368 0035 00       		.byte	0
 16369 0036 05       		.uleb128 0x5
 16370 0037 04       		.uleb128 0x4
 16371 0038 01       		.byte	0x1
 16372 0039 0B       		.uleb128 0xb
 16373 003a 0B       		.uleb128 0xb
 16374 003b 3A       		.uleb128 0x3a
 16375 003c 0B       		.uleb128 0xb
 16376 003d 3B       		.uleb128 0x3b
 16377 003e 0B       		.uleb128 0xb
 16378 003f 01       		.uleb128 0x1
 16379 0040 13       		.uleb128 0x13
 16380 0041 00       		.byte	0
 16381 0042 00       		.byte	0
 16382 0043 06       		.uleb128 0x6
 16383 0044 28       		.uleb128 0x28
 16384 0045 00       		.byte	0
 16385 0046 03       		.uleb128 0x3
 16386 0047 0E       		.uleb128 0xe
 16387 0048 1C       		.uleb128 0x1c
 16388 0049 0D       		.uleb128 0xd
 16389 004a 00       		.byte	0
 16390 004b 00       		.byte	0
 16391 004c 07       		.uleb128 0x7
 16392 004d 0F       		.uleb128 0xf
 16393 004e 00       		.byte	0
 16394 004f 0B       		.uleb128 0xb
 16395 0050 0B       		.uleb128 0xb
 16396 0051 00       		.byte	0
 16397 0052 00       		.byte	0
 16398 0053 08       		.uleb128 0x8
 16399 0054 0F       		.uleb128 0xf
 16400 0055 00       		.byte	0
 16401 0056 0B       		.uleb128 0xb
 16402 0057 0B       		.uleb128 0xb
 16403 0058 49       		.uleb128 0x49
 16404 0059 13       		.uleb128 0x13
 16405 005a 00       		.byte	0
 16406 005b 00       		.byte	0
 16407 005c 09       		.uleb128 0x9
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 474


 16408 005d 26       		.uleb128 0x26
 16409 005e 00       		.byte	0
 16410 005f 49       		.uleb128 0x49
 16411 0060 13       		.uleb128 0x13
 16412 0061 00       		.byte	0
 16413 0062 00       		.byte	0
 16414 0063 0A       		.uleb128 0xa
 16415 0064 26       		.uleb128 0x26
 16416 0065 00       		.byte	0
 16417 0066 00       		.byte	0
 16418 0067 00       		.byte	0
 16419 0068 0B       		.uleb128 0xb
 16420 0069 13       		.uleb128 0x13
 16421 006a 01       		.byte	0x1
 16422 006b 0B       		.uleb128 0xb
 16423 006c 0B       		.uleb128 0xb
 16424 006d 3A       		.uleb128 0x3a
 16425 006e 0B       		.uleb128 0xb
 16426 006f 3B       		.uleb128 0x3b
 16427 0070 0B       		.uleb128 0xb
 16428 0071 01       		.uleb128 0x1
 16429 0072 13       		.uleb128 0x13
 16430 0073 00       		.byte	0
 16431 0074 00       		.byte	0
 16432 0075 0C       		.uleb128 0xc
 16433 0076 0D       		.uleb128 0xd
 16434 0077 00       		.byte	0
 16435 0078 03       		.uleb128 0x3
 16436 0079 0E       		.uleb128 0xe
 16437 007a 3A       		.uleb128 0x3a
 16438 007b 0B       		.uleb128 0xb
 16439 007c 3B       		.uleb128 0x3b
 16440 007d 0B       		.uleb128 0xb
 16441 007e 49       		.uleb128 0x49
 16442 007f 13       		.uleb128 0x13
 16443 0080 38       		.uleb128 0x38
 16444 0081 0B       		.uleb128 0xb
 16445 0082 00       		.byte	0
 16446 0083 00       		.byte	0
 16447 0084 0D       		.uleb128 0xd
 16448 0085 0D       		.uleb128 0xd
 16449 0086 00       		.byte	0
 16450 0087 03       		.uleb128 0x3
 16451 0088 08       		.uleb128 0x8
 16452 0089 3A       		.uleb128 0x3a
 16453 008a 0B       		.uleb128 0xb
 16454 008b 3B       		.uleb128 0x3b
 16455 008c 0B       		.uleb128 0xb
 16456 008d 49       		.uleb128 0x49
 16457 008e 13       		.uleb128 0x13
 16458 008f 38       		.uleb128 0x38
 16459 0090 0B       		.uleb128 0xb
 16460 0091 00       		.byte	0
 16461 0092 00       		.byte	0
 16462 0093 0E       		.uleb128 0xe
 16463 0094 28       		.uleb128 0x28
 16464 0095 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 475


 16465 0096 03       		.uleb128 0x3
 16466 0097 08       		.uleb128 0x8
 16467 0098 1C       		.uleb128 0x1c
 16468 0099 0D       		.uleb128 0xd
 16469 009a 00       		.byte	0
 16470 009b 00       		.byte	0
 16471 009c 0F       		.uleb128 0xf
 16472 009d 04       		.uleb128 0x4
 16473 009e 01       		.byte	0x1
 16474 009f 03       		.uleb128 0x3
 16475 00a0 0E       		.uleb128 0xe
 16476 00a1 0B       		.uleb128 0xb
 16477 00a2 0B       		.uleb128 0xb
 16478 00a3 3A       		.uleb128 0x3a
 16479 00a4 0B       		.uleb128 0xb
 16480 00a5 3B       		.uleb128 0x3b
 16481 00a6 0B       		.uleb128 0xb
 16482 00a7 01       		.uleb128 0x1
 16483 00a8 13       		.uleb128 0x13
 16484 00a9 00       		.byte	0
 16485 00aa 00       		.byte	0
 16486 00ab 10       		.uleb128 0x10
 16487 00ac 04       		.uleb128 0x4
 16488 00ad 01       		.byte	0x1
 16489 00ae 03       		.uleb128 0x3
 16490 00af 0E       		.uleb128 0xe
 16491 00b0 0B       		.uleb128 0xb
 16492 00b1 0B       		.uleb128 0xb
 16493 00b2 3A       		.uleb128 0x3a
 16494 00b3 0B       		.uleb128 0xb
 16495 00b4 3B       		.uleb128 0x3b
 16496 00b5 05       		.uleb128 0x5
 16497 00b6 01       		.uleb128 0x1
 16498 00b7 13       		.uleb128 0x13
 16499 00b8 00       		.byte	0
 16500 00b9 00       		.byte	0
 16501 00ba 11       		.uleb128 0x11
 16502 00bb 16       		.uleb128 0x16
 16503 00bc 00       		.byte	0
 16504 00bd 03       		.uleb128 0x3
 16505 00be 0E       		.uleb128 0xe
 16506 00bf 3A       		.uleb128 0x3a
 16507 00c0 0B       		.uleb128 0xb
 16508 00c1 3B       		.uleb128 0x3b
 16509 00c2 05       		.uleb128 0x5
 16510 00c3 49       		.uleb128 0x49
 16511 00c4 13       		.uleb128 0x13
 16512 00c5 00       		.byte	0
 16513 00c6 00       		.byte	0
 16514 00c7 12       		.uleb128 0x12
 16515 00c8 13       		.uleb128 0x13
 16516 00c9 01       		.byte	0x1
 16517 00ca 03       		.uleb128 0x3
 16518 00cb 0E       		.uleb128 0xe
 16519 00cc 0B       		.uleb128 0xb
 16520 00cd 0B       		.uleb128 0xb
 16521 00ce 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 476


 16522 00cf 0B       		.uleb128 0xb
 16523 00d0 3B       		.uleb128 0x3b
 16524 00d1 05       		.uleb128 0x5
 16525 00d2 01       		.uleb128 0x1
 16526 00d3 13       		.uleb128 0x13
 16527 00d4 00       		.byte	0
 16528 00d5 00       		.byte	0
 16529 00d6 13       		.uleb128 0x13
 16530 00d7 0D       		.uleb128 0xd
 16531 00d8 00       		.byte	0
 16532 00d9 03       		.uleb128 0x3
 16533 00da 0E       		.uleb128 0xe
 16534 00db 3A       		.uleb128 0x3a
 16535 00dc 0B       		.uleb128 0xb
 16536 00dd 3B       		.uleb128 0x3b
 16537 00de 05       		.uleb128 0x5
 16538 00df 49       		.uleb128 0x49
 16539 00e0 13       		.uleb128 0x13
 16540 00e1 38       		.uleb128 0x38
 16541 00e2 0B       		.uleb128 0xb
 16542 00e3 00       		.byte	0
 16543 00e4 00       		.byte	0
 16544 00e5 14       		.uleb128 0x14
 16545 00e6 13       		.uleb128 0x13
 16546 00e7 01       		.byte	0x1
 16547 00e8 03       		.uleb128 0x3
 16548 00e9 0E       		.uleb128 0xe
 16549 00ea 0B       		.uleb128 0xb
 16550 00eb 05       		.uleb128 0x5
 16551 00ec 3A       		.uleb128 0x3a
 16552 00ed 0B       		.uleb128 0xb
 16553 00ee 3B       		.uleb128 0x3b
 16554 00ef 05       		.uleb128 0x5
 16555 00f0 01       		.uleb128 0x1
 16556 00f1 13       		.uleb128 0x13
 16557 00f2 00       		.byte	0
 16558 00f3 00       		.byte	0
 16559 00f4 15       		.uleb128 0x15
 16560 00f5 0D       		.uleb128 0xd
 16561 00f6 00       		.byte	0
 16562 00f7 03       		.uleb128 0x3
 16563 00f8 0E       		.uleb128 0xe
 16564 00f9 3A       		.uleb128 0x3a
 16565 00fa 0B       		.uleb128 0xb
 16566 00fb 3B       		.uleb128 0x3b
 16567 00fc 05       		.uleb128 0x5
 16568 00fd 49       		.uleb128 0x49
 16569 00fe 13       		.uleb128 0x13
 16570 00ff 38       		.uleb128 0x38
 16571 0100 05       		.uleb128 0x5
 16572 0101 00       		.byte	0
 16573 0102 00       		.byte	0
 16574 0103 16       		.uleb128 0x16
 16575 0104 01       		.uleb128 0x1
 16576 0105 01       		.byte	0x1
 16577 0106 49       		.uleb128 0x49
 16578 0107 13       		.uleb128 0x13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 477


 16579 0108 01       		.uleb128 0x1
 16580 0109 13       		.uleb128 0x13
 16581 010a 00       		.byte	0
 16582 010b 00       		.byte	0
 16583 010c 17       		.uleb128 0x17
 16584 010d 21       		.uleb128 0x21
 16585 010e 00       		.byte	0
 16586 010f 49       		.uleb128 0x49
 16587 0110 13       		.uleb128 0x13
 16588 0111 2F       		.uleb128 0x2f
 16589 0112 0B       		.uleb128 0xb
 16590 0113 00       		.byte	0
 16591 0114 00       		.byte	0
 16592 0115 18       		.uleb128 0x18
 16593 0116 13       		.uleb128 0x13
 16594 0117 01       		.byte	0x1
 16595 0118 03       		.uleb128 0x3
 16596 0119 08       		.uleb128 0x8
 16597 011a 0B       		.uleb128 0xb
 16598 011b 0B       		.uleb128 0xb
 16599 011c 3A       		.uleb128 0x3a
 16600 011d 0B       		.uleb128 0xb
 16601 011e 3B       		.uleb128 0x3b
 16602 011f 0B       		.uleb128 0xb
 16603 0120 01       		.uleb128 0x1
 16604 0121 13       		.uleb128 0x13
 16605 0122 00       		.byte	0
 16606 0123 00       		.byte	0
 16607 0124 19       		.uleb128 0x19
 16608 0125 2E       		.uleb128 0x2e
 16609 0126 01       		.byte	0x1
 16610 0127 03       		.uleb128 0x3
 16611 0128 0E       		.uleb128 0xe
 16612 0129 3A       		.uleb128 0x3a
 16613 012a 0B       		.uleb128 0xb
 16614 012b 3B       		.uleb128 0x3b
 16615 012c 05       		.uleb128 0x5
 16616 012d 27       		.uleb128 0x27
 16617 012e 19       		.uleb128 0x19
 16618 012f 49       		.uleb128 0x49
 16619 0130 13       		.uleb128 0x13
 16620 0131 20       		.uleb128 0x20
 16621 0132 0B       		.uleb128 0xb
 16622 0133 01       		.uleb128 0x1
 16623 0134 13       		.uleb128 0x13
 16624 0135 00       		.byte	0
 16625 0136 00       		.byte	0
 16626 0137 1A       		.uleb128 0x1a
 16627 0138 05       		.uleb128 0x5
 16628 0139 00       		.byte	0
 16629 013a 03       		.uleb128 0x3
 16630 013b 08       		.uleb128 0x8
 16631 013c 3A       		.uleb128 0x3a
 16632 013d 0B       		.uleb128 0xb
 16633 013e 3B       		.uleb128 0x3b
 16634 013f 05       		.uleb128 0x5
 16635 0140 49       		.uleb128 0x49
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 478


 16636 0141 13       		.uleb128 0x13
 16637 0142 00       		.byte	0
 16638 0143 00       		.byte	0
 16639 0144 1B       		.uleb128 0x1b
 16640 0145 05       		.uleb128 0x5
 16641 0146 00       		.byte	0
 16642 0147 03       		.uleb128 0x3
 16643 0148 0E       		.uleb128 0xe
 16644 0149 3A       		.uleb128 0x3a
 16645 014a 0B       		.uleb128 0xb
 16646 014b 3B       		.uleb128 0x3b
 16647 014c 05       		.uleb128 0x5
 16648 014d 49       		.uleb128 0x49
 16649 014e 13       		.uleb128 0x13
 16650 014f 00       		.byte	0
 16651 0150 00       		.byte	0
 16652 0151 1C       		.uleb128 0x1c
 16653 0152 0B       		.uleb128 0xb
 16654 0153 01       		.byte	0x1
 16655 0154 01       		.uleb128 0x1
 16656 0155 13       		.uleb128 0x13
 16657 0156 00       		.byte	0
 16658 0157 00       		.byte	0
 16659 0158 1D       		.uleb128 0x1d
 16660 0159 34       		.uleb128 0x34
 16661 015a 00       		.byte	0
 16662 015b 03       		.uleb128 0x3
 16663 015c 08       		.uleb128 0x8
 16664 015d 3A       		.uleb128 0x3a
 16665 015e 0B       		.uleb128 0xb
 16666 015f 3B       		.uleb128 0x3b
 16667 0160 05       		.uleb128 0x5
 16668 0161 49       		.uleb128 0x49
 16669 0162 13       		.uleb128 0x13
 16670 0163 00       		.byte	0
 16671 0164 00       		.byte	0
 16672 0165 1E       		.uleb128 0x1e
 16673 0166 34       		.uleb128 0x34
 16674 0167 00       		.byte	0
 16675 0168 03       		.uleb128 0x3
 16676 0169 0E       		.uleb128 0xe
 16677 016a 3A       		.uleb128 0x3a
 16678 016b 0B       		.uleb128 0xb
 16679 016c 3B       		.uleb128 0x3b
 16680 016d 05       		.uleb128 0x5
 16681 016e 49       		.uleb128 0x49
 16682 016f 13       		.uleb128 0x13
 16683 0170 00       		.byte	0
 16684 0171 00       		.byte	0
 16685 0172 1F       		.uleb128 0x1f
 16686 0173 0B       		.uleb128 0xb
 16687 0174 01       		.byte	0x1
 16688 0175 00       		.byte	0
 16689 0176 00       		.byte	0
 16690 0177 20       		.uleb128 0x20
 16691 0178 2E       		.uleb128 0x2e
 16692 0179 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 479


 16693 017a 3F       		.uleb128 0x3f
 16694 017b 19       		.uleb128 0x19
 16695 017c 03       		.uleb128 0x3
 16696 017d 0E       		.uleb128 0xe
 16697 017e 3A       		.uleb128 0x3a
 16698 017f 0B       		.uleb128 0xb
 16699 0180 3B       		.uleb128 0x3b
 16700 0181 05       		.uleb128 0x5
 16701 0182 27       		.uleb128 0x27
 16702 0183 19       		.uleb128 0x19
 16703 0184 49       		.uleb128 0x49
 16704 0185 13       		.uleb128 0x13
 16705 0186 20       		.uleb128 0x20
 16706 0187 0B       		.uleb128 0xb
 16707 0188 01       		.uleb128 0x1
 16708 0189 13       		.uleb128 0x13
 16709 018a 00       		.byte	0
 16710 018b 00       		.byte	0
 16711 018c 21       		.uleb128 0x21
 16712 018d 2E       		.uleb128 0x2e
 16713 018e 01       		.byte	0x1
 16714 018f 03       		.uleb128 0x3
 16715 0190 0E       		.uleb128 0xe
 16716 0191 3A       		.uleb128 0x3a
 16717 0192 0B       		.uleb128 0xb
 16718 0193 3B       		.uleb128 0x3b
 16719 0194 05       		.uleb128 0x5
 16720 0195 27       		.uleb128 0x27
 16721 0196 19       		.uleb128 0x19
 16722 0197 11       		.uleb128 0x11
 16723 0198 01       		.uleb128 0x1
 16724 0199 12       		.uleb128 0x12
 16725 019a 06       		.uleb128 0x6
 16726 019b 40       		.uleb128 0x40
 16727 019c 18       		.uleb128 0x18
 16728 019d 9742     		.uleb128 0x2117
 16729 019f 19       		.uleb128 0x19
 16730 01a0 01       		.uleb128 0x1
 16731 01a1 13       		.uleb128 0x13
 16732 01a2 00       		.byte	0
 16733 01a3 00       		.byte	0
 16734 01a4 22       		.uleb128 0x22
 16735 01a5 05       		.uleb128 0x5
 16736 01a6 00       		.byte	0
 16737 01a7 03       		.uleb128 0x3
 16738 01a8 0E       		.uleb128 0xe
 16739 01a9 3A       		.uleb128 0x3a
 16740 01aa 0B       		.uleb128 0xb
 16741 01ab 3B       		.uleb128 0x3b
 16742 01ac 05       		.uleb128 0x5
 16743 01ad 49       		.uleb128 0x49
 16744 01ae 13       		.uleb128 0x13
 16745 01af 02       		.uleb128 0x2
 16746 01b0 18       		.uleb128 0x18
 16747 01b1 00       		.byte	0
 16748 01b2 00       		.byte	0
 16749 01b3 23       		.uleb128 0x23
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 480


 16750 01b4 05       		.uleb128 0x5
 16751 01b5 00       		.byte	0
 16752 01b6 03       		.uleb128 0x3
 16753 01b7 0E       		.uleb128 0xe
 16754 01b8 3A       		.uleb128 0x3a
 16755 01b9 0B       		.uleb128 0xb
 16756 01ba 3B       		.uleb128 0x3b
 16757 01bb 05       		.uleb128 0x5
 16758 01bc 49       		.uleb128 0x49
 16759 01bd 13       		.uleb128 0x13
 16760 01be 02       		.uleb128 0x2
 16761 01bf 17       		.uleb128 0x17
 16762 01c0 00       		.byte	0
 16763 01c1 00       		.byte	0
 16764 01c2 24       		.uleb128 0x24
 16765 01c3 05       		.uleb128 0x5
 16766 01c4 00       		.byte	0
 16767 01c5 03       		.uleb128 0x3
 16768 01c6 08       		.uleb128 0x8
 16769 01c7 3A       		.uleb128 0x3a
 16770 01c8 0B       		.uleb128 0xb
 16771 01c9 3B       		.uleb128 0x3b
 16772 01ca 05       		.uleb128 0x5
 16773 01cb 49       		.uleb128 0x49
 16774 01cc 13       		.uleb128 0x13
 16775 01cd 02       		.uleb128 0x2
 16776 01ce 18       		.uleb128 0x18
 16777 01cf 00       		.byte	0
 16778 01d0 00       		.byte	0
 16779 01d1 25       		.uleb128 0x25
 16780 01d2 34       		.uleb128 0x34
 16781 01d3 00       		.byte	0
 16782 01d4 03       		.uleb128 0x3
 16783 01d5 08       		.uleb128 0x8
 16784 01d6 3A       		.uleb128 0x3a
 16785 01d7 0B       		.uleb128 0xb
 16786 01d8 3B       		.uleb128 0x3b
 16787 01d9 05       		.uleb128 0x5
 16788 01da 49       		.uleb128 0x49
 16789 01db 13       		.uleb128 0x13
 16790 01dc 02       		.uleb128 0x2
 16791 01dd 17       		.uleb128 0x17
 16792 01de 00       		.byte	0
 16793 01df 00       		.byte	0
 16794 01e0 26       		.uleb128 0x26
 16795 01e1 1D       		.uleb128 0x1d
 16796 01e2 01       		.byte	0x1
 16797 01e3 31       		.uleb128 0x31
 16798 01e4 13       		.uleb128 0x13
 16799 01e5 52       		.uleb128 0x52
 16800 01e6 01       		.uleb128 0x1
 16801 01e7 55       		.uleb128 0x55
 16802 01e8 17       		.uleb128 0x17
 16803 01e9 58       		.uleb128 0x58
 16804 01ea 0B       		.uleb128 0xb
 16805 01eb 59       		.uleb128 0x59
 16806 01ec 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 481


 16807 01ed 01       		.uleb128 0x1
 16808 01ee 13       		.uleb128 0x13
 16809 01ef 00       		.byte	0
 16810 01f0 00       		.byte	0
 16811 01f1 27       		.uleb128 0x27
 16812 01f2 05       		.uleb128 0x5
 16813 01f3 00       		.byte	0
 16814 01f4 31       		.uleb128 0x31
 16815 01f5 13       		.uleb128 0x13
 16816 01f6 02       		.uleb128 0x2
 16817 01f7 17       		.uleb128 0x17
 16818 01f8 00       		.byte	0
 16819 01f9 00       		.byte	0
 16820 01fa 28       		.uleb128 0x28
 16821 01fb 1D       		.uleb128 0x1d
 16822 01fc 01       		.byte	0x1
 16823 01fd 31       		.uleb128 0x31
 16824 01fe 13       		.uleb128 0x13
 16825 01ff 11       		.uleb128 0x11
 16826 0200 01       		.uleb128 0x1
 16827 0201 12       		.uleb128 0x12
 16828 0202 06       		.uleb128 0x6
 16829 0203 58       		.uleb128 0x58
 16830 0204 0B       		.uleb128 0xb
 16831 0205 59       		.uleb128 0x59
 16832 0206 05       		.uleb128 0x5
 16833 0207 00       		.byte	0
 16834 0208 00       		.byte	0
 16835 0209 29       		.uleb128 0x29
 16836 020a 05       		.uleb128 0x5
 16837 020b 00       		.byte	0
 16838 020c 31       		.uleb128 0x31
 16839 020d 13       		.uleb128 0x13
 16840 020e 00       		.byte	0
 16841 020f 00       		.byte	0
 16842 0210 2A       		.uleb128 0x2a
 16843 0211 2E       		.uleb128 0x2e
 16844 0212 01       		.byte	0x1
 16845 0213 03       		.uleb128 0x3
 16846 0214 0E       		.uleb128 0xe
 16847 0215 3A       		.uleb128 0x3a
 16848 0216 0B       		.uleb128 0xb
 16849 0217 3B       		.uleb128 0x3b
 16850 0218 05       		.uleb128 0x5
 16851 0219 27       		.uleb128 0x27
 16852 021a 19       		.uleb128 0x19
 16853 021b 49       		.uleb128 0x49
 16854 021c 13       		.uleb128 0x13
 16855 021d 11       		.uleb128 0x11
 16856 021e 01       		.uleb128 0x1
 16857 021f 12       		.uleb128 0x12
 16858 0220 06       		.uleb128 0x6
 16859 0221 40       		.uleb128 0x40
 16860 0222 18       		.uleb128 0x18
 16861 0223 9742     		.uleb128 0x2117
 16862 0225 19       		.uleb128 0x19
 16863 0226 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 482


 16864 0227 13       		.uleb128 0x13
 16865 0228 00       		.byte	0
 16866 0229 00       		.byte	0
 16867 022a 2B       		.uleb128 0x2b
 16868 022b 05       		.uleb128 0x5
 16869 022c 00       		.byte	0
 16870 022d 03       		.uleb128 0x3
 16871 022e 08       		.uleb128 0x8
 16872 022f 3A       		.uleb128 0x3a
 16873 0230 0B       		.uleb128 0xb
 16874 0231 3B       		.uleb128 0x3b
 16875 0232 05       		.uleb128 0x5
 16876 0233 49       		.uleb128 0x49
 16877 0234 13       		.uleb128 0x13
 16878 0235 02       		.uleb128 0x2
 16879 0236 17       		.uleb128 0x17
 16880 0237 00       		.byte	0
 16881 0238 00       		.byte	0
 16882 0239 2C       		.uleb128 0x2c
 16883 023a 2E       		.uleb128 0x2e
 16884 023b 01       		.byte	0x1
 16885 023c 31       		.uleb128 0x31
 16886 023d 13       		.uleb128 0x13
 16887 023e 11       		.uleb128 0x11
 16888 023f 01       		.uleb128 0x1
 16889 0240 12       		.uleb128 0x12
 16890 0241 06       		.uleb128 0x6
 16891 0242 40       		.uleb128 0x40
 16892 0243 18       		.uleb128 0x18
 16893 0244 9742     		.uleb128 0x2117
 16894 0246 19       		.uleb128 0x19
 16895 0247 01       		.uleb128 0x1
 16896 0248 13       		.uleb128 0x13
 16897 0249 00       		.byte	0
 16898 024a 00       		.byte	0
 16899 024b 2D       		.uleb128 0x2d
 16900 024c 05       		.uleb128 0x5
 16901 024d 00       		.byte	0
 16902 024e 31       		.uleb128 0x31
 16903 024f 13       		.uleb128 0x13
 16904 0250 02       		.uleb128 0x2
 16905 0251 18       		.uleb128 0x18
 16906 0252 00       		.byte	0
 16907 0253 00       		.byte	0
 16908 0254 2E       		.uleb128 0x2e
 16909 0255 0B       		.uleb128 0xb
 16910 0256 01       		.byte	0x1
 16911 0257 55       		.uleb128 0x55
 16912 0258 17       		.uleb128 0x17
 16913 0259 00       		.byte	0
 16914 025a 00       		.byte	0
 16915 025b 2F       		.uleb128 0x2f
 16916 025c 0B       		.uleb128 0xb
 16917 025d 01       		.byte	0x1
 16918 025e 11       		.uleb128 0x11
 16919 025f 01       		.uleb128 0x1
 16920 0260 12       		.uleb128 0x12
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 483


 16921 0261 06       		.uleb128 0x6
 16922 0262 01       		.uleb128 0x1
 16923 0263 13       		.uleb128 0x13
 16924 0264 00       		.byte	0
 16925 0265 00       		.byte	0
 16926 0266 30       		.uleb128 0x30
 16927 0267 34       		.uleb128 0x34
 16928 0268 00       		.byte	0
 16929 0269 31       		.uleb128 0x31
 16930 026a 13       		.uleb128 0x13
 16931 026b 02       		.uleb128 0x2
 16932 026c 17       		.uleb128 0x17
 16933 026d 00       		.byte	0
 16934 026e 00       		.byte	0
 16935 026f 31       		.uleb128 0x31
 16936 0270 0B       		.uleb128 0xb
 16937 0271 01       		.byte	0x1
 16938 0272 55       		.uleb128 0x55
 16939 0273 17       		.uleb128 0x17
 16940 0274 01       		.uleb128 0x1
 16941 0275 13       		.uleb128 0x13
 16942 0276 00       		.byte	0
 16943 0277 00       		.byte	0
 16944 0278 32       		.uleb128 0x32
 16945 0279 0B       		.uleb128 0xb
 16946 027a 01       		.byte	0x1
 16947 027b 11       		.uleb128 0x11
 16948 027c 01       		.uleb128 0x1
 16949 027d 12       		.uleb128 0x12
 16950 027e 06       		.uleb128 0x6
 16951 027f 00       		.byte	0
 16952 0280 00       		.byte	0
 16953 0281 33       		.uleb128 0x33
 16954 0282 2E       		.uleb128 0x2e
 16955 0283 01       		.byte	0x1
 16956 0284 3F       		.uleb128 0x3f
 16957 0285 19       		.uleb128 0x19
 16958 0286 03       		.uleb128 0x3
 16959 0287 0E       		.uleb128 0xe
 16960 0288 3A       		.uleb128 0x3a
 16961 0289 0B       		.uleb128 0xb
 16962 028a 3B       		.uleb128 0x3b
 16963 028b 05       		.uleb128 0x5
 16964 028c 27       		.uleb128 0x27
 16965 028d 19       		.uleb128 0x19
 16966 028e 49       		.uleb128 0x49
 16967 028f 13       		.uleb128 0x13
 16968 0290 11       		.uleb128 0x11
 16969 0291 01       		.uleb128 0x1
 16970 0292 12       		.uleb128 0x12
 16971 0293 06       		.uleb128 0x6
 16972 0294 40       		.uleb128 0x40
 16973 0295 18       		.uleb128 0x18
 16974 0296 9742     		.uleb128 0x2117
 16975 0298 19       		.uleb128 0x19
 16976 0299 01       		.uleb128 0x1
 16977 029a 13       		.uleb128 0x13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 484


 16978 029b 00       		.byte	0
 16979 029c 00       		.byte	0
 16980 029d 34       		.uleb128 0x34
 16981 029e 34       		.uleb128 0x34
 16982 029f 00       		.byte	0
 16983 02a0 03       		.uleb128 0x3
 16984 02a1 0E       		.uleb128 0xe
 16985 02a2 3A       		.uleb128 0x3a
 16986 02a3 0B       		.uleb128 0xb
 16987 02a4 3B       		.uleb128 0x3b
 16988 02a5 05       		.uleb128 0x5
 16989 02a6 49       		.uleb128 0x49
 16990 02a7 13       		.uleb128 0x13
 16991 02a8 02       		.uleb128 0x2
 16992 02a9 17       		.uleb128 0x17
 16993 02aa 00       		.byte	0
 16994 02ab 00       		.byte	0
 16995 02ac 35       		.uleb128 0x35
 16996 02ad 34       		.uleb128 0x34
 16997 02ae 00       		.byte	0
 16998 02af 03       		.uleb128 0x3
 16999 02b0 0E       		.uleb128 0xe
 17000 02b1 3A       		.uleb128 0x3a
 17001 02b2 0B       		.uleb128 0xb
 17002 02b3 3B       		.uleb128 0x3b
 17003 02b4 05       		.uleb128 0x5
 17004 02b5 49       		.uleb128 0x49
 17005 02b6 13       		.uleb128 0x13
 17006 02b7 02       		.uleb128 0x2
 17007 02b8 18       		.uleb128 0x18
 17008 02b9 00       		.byte	0
 17009 02ba 00       		.byte	0
 17010 02bb 36       		.uleb128 0x36
 17011 02bc 34       		.uleb128 0x34
 17012 02bd 00       		.byte	0
 17013 02be 03       		.uleb128 0x3
 17014 02bf 08       		.uleb128 0x8
 17015 02c0 3A       		.uleb128 0x3a
 17016 02c1 0B       		.uleb128 0xb
 17017 02c2 3B       		.uleb128 0x3b
 17018 02c3 05       		.uleb128 0x5
 17019 02c4 49       		.uleb128 0x49
 17020 02c5 13       		.uleb128 0x13
 17021 02c6 02       		.uleb128 0x2
 17022 02c7 18       		.uleb128 0x18
 17023 02c8 00       		.byte	0
 17024 02c9 00       		.byte	0
 17025 02ca 37       		.uleb128 0x37
 17026 02cb 898201   		.uleb128 0x4109
 17027 02ce 01       		.byte	0x1
 17028 02cf 11       		.uleb128 0x11
 17029 02d0 01       		.uleb128 0x1
 17030 02d1 31       		.uleb128 0x31
 17031 02d2 13       		.uleb128 0x13
 17032 02d3 00       		.byte	0
 17033 02d4 00       		.byte	0
 17034 02d5 38       		.uleb128 0x38
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 485


 17035 02d6 8A8201   		.uleb128 0x410a
 17036 02d9 00       		.byte	0
 17037 02da 02       		.uleb128 0x2
 17038 02db 18       		.uleb128 0x18
 17039 02dc 9142     		.uleb128 0x2111
 17040 02de 18       		.uleb128 0x18
 17041 02df 00       		.byte	0
 17042 02e0 00       		.byte	0
 17043 02e1 39       		.uleb128 0x39
 17044 02e2 898201   		.uleb128 0x4109
 17045 02e5 01       		.byte	0x1
 17046 02e6 11       		.uleb128 0x11
 17047 02e7 01       		.uleb128 0x1
 17048 02e8 31       		.uleb128 0x31
 17049 02e9 13       		.uleb128 0x13
 17050 02ea 01       		.uleb128 0x1
 17051 02eb 13       		.uleb128 0x13
 17052 02ec 00       		.byte	0
 17053 02ed 00       		.byte	0
 17054 02ee 3A       		.uleb128 0x3a
 17055 02ef 898201   		.uleb128 0x4109
 17056 02f2 00       		.byte	0
 17057 02f3 11       		.uleb128 0x11
 17058 02f4 01       		.uleb128 0x1
 17059 02f5 31       		.uleb128 0x31
 17060 02f6 13       		.uleb128 0x13
 17061 02f7 00       		.byte	0
 17062 02f8 00       		.byte	0
 17063 02f9 3B       		.uleb128 0x3b
 17064 02fa 2E       		.uleb128 0x2e
 17065 02fb 01       		.byte	0x1
 17066 02fc 3F       		.uleb128 0x3f
 17067 02fd 19       		.uleb128 0x19
 17068 02fe 03       		.uleb128 0x3
 17069 02ff 0E       		.uleb128 0xe
 17070 0300 3A       		.uleb128 0x3a
 17071 0301 0B       		.uleb128 0xb
 17072 0302 3B       		.uleb128 0x3b
 17073 0303 05       		.uleb128 0x5
 17074 0304 27       		.uleb128 0x27
 17075 0305 19       		.uleb128 0x19
 17076 0306 11       		.uleb128 0x11
 17077 0307 01       		.uleb128 0x1
 17078 0308 12       		.uleb128 0x12
 17079 0309 06       		.uleb128 0x6
 17080 030a 40       		.uleb128 0x40
 17081 030b 18       		.uleb128 0x18
 17082 030c 9742     		.uleb128 0x2117
 17083 030e 19       		.uleb128 0x19
 17084 030f 01       		.uleb128 0x1
 17085 0310 13       		.uleb128 0x13
 17086 0311 00       		.byte	0
 17087 0312 00       		.byte	0
 17088 0313 3C       		.uleb128 0x3c
 17089 0314 34       		.uleb128 0x34
 17090 0315 00       		.byte	0
 17091 0316 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 486


 17092 0317 0E       		.uleb128 0xe
 17093 0318 3A       		.uleb128 0x3a
 17094 0319 0B       		.uleb128 0xb
 17095 031a 3B       		.uleb128 0x3b
 17096 031b 05       		.uleb128 0x5
 17097 031c 49       		.uleb128 0x49
 17098 031d 13       		.uleb128 0x13
 17099 031e 1C       		.uleb128 0x1c
 17100 031f 0B       		.uleb128 0xb
 17101 0320 00       		.byte	0
 17102 0321 00       		.byte	0
 17103 0322 3D       		.uleb128 0x3d
 17104 0323 1D       		.uleb128 0x1d
 17105 0324 01       		.byte	0x1
 17106 0325 31       		.uleb128 0x31
 17107 0326 13       		.uleb128 0x13
 17108 0327 11       		.uleb128 0x11
 17109 0328 01       		.uleb128 0x1
 17110 0329 12       		.uleb128 0x12
 17111 032a 06       		.uleb128 0x6
 17112 032b 58       		.uleb128 0x58
 17113 032c 0B       		.uleb128 0xb
 17114 032d 59       		.uleb128 0x59
 17115 032e 05       		.uleb128 0x5
 17116 032f 01       		.uleb128 0x1
 17117 0330 13       		.uleb128 0x13
 17118 0331 00       		.byte	0
 17119 0332 00       		.byte	0
 17120 0333 3E       		.uleb128 0x3e
 17121 0334 34       		.uleb128 0x34
 17122 0335 00       		.byte	0
 17123 0336 31       		.uleb128 0x31
 17124 0337 13       		.uleb128 0x13
 17125 0338 1C       		.uleb128 0x1c
 17126 0339 0B       		.uleb128 0xb
 17127 033a 00       		.byte	0
 17128 033b 00       		.byte	0
 17129 033c 3F       		.uleb128 0x3f
 17130 033d 34       		.uleb128 0x34
 17131 033e 00       		.byte	0
 17132 033f 31       		.uleb128 0x31
 17133 0340 13       		.uleb128 0x13
 17134 0341 02       		.uleb128 0x2
 17135 0342 18       		.uleb128 0x18
 17136 0343 00       		.byte	0
 17137 0344 00       		.byte	0
 17138 0345 40       		.uleb128 0x40
 17139 0346 34       		.uleb128 0x34
 17140 0347 00       		.byte	0
 17141 0348 31       		.uleb128 0x31
 17142 0349 13       		.uleb128 0x13
 17143 034a 00       		.byte	0
 17144 034b 00       		.byte	0
 17145 034c 41       		.uleb128 0x41
 17146 034d 34       		.uleb128 0x34
 17147 034e 00       		.byte	0
 17148 034f 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 487


 17149 0350 0E       		.uleb128 0xe
 17150 0351 3A       		.uleb128 0x3a
 17151 0352 0B       		.uleb128 0xb
 17152 0353 3B       		.uleb128 0x3b
 17153 0354 0B       		.uleb128 0xb
 17154 0355 49       		.uleb128 0x49
 17155 0356 13       		.uleb128 0x13
 17156 0357 3F       		.uleb128 0x3f
 17157 0358 19       		.uleb128 0x19
 17158 0359 3C       		.uleb128 0x3c
 17159 035a 19       		.uleb128 0x19
 17160 035b 00       		.byte	0
 17161 035c 00       		.byte	0
 17162 035d 42       		.uleb128 0x42
 17163 035e 34       		.uleb128 0x34
 17164 035f 00       		.byte	0
 17165 0360 03       		.uleb128 0x3
 17166 0361 0E       		.uleb128 0xe
 17167 0362 3A       		.uleb128 0x3a
 17168 0363 0B       		.uleb128 0xb
 17169 0364 3B       		.uleb128 0x3b
 17170 0365 05       		.uleb128 0x5
 17171 0366 49       		.uleb128 0x49
 17172 0367 13       		.uleb128 0x13
 17173 0368 3F       		.uleb128 0x3f
 17174 0369 19       		.uleb128 0x19
 17175 036a 02       		.uleb128 0x2
 17176 036b 18       		.uleb128 0x18
 17177 036c 00       		.byte	0
 17178 036d 00       		.byte	0
 17179 036e 43       		.uleb128 0x43
 17180 036f 2E       		.uleb128 0x2e
 17181 0370 01       		.byte	0x1
 17182 0371 3F       		.uleb128 0x3f
 17183 0372 19       		.uleb128 0x19
 17184 0373 03       		.uleb128 0x3
 17185 0374 0E       		.uleb128 0xe
 17186 0375 27       		.uleb128 0x27
 17187 0376 19       		.uleb128 0x19
 17188 0377 49       		.uleb128 0x49
 17189 0378 13       		.uleb128 0x13
 17190 0379 34       		.uleb128 0x34
 17191 037a 19       		.uleb128 0x19
 17192 037b 3C       		.uleb128 0x3c
 17193 037c 19       		.uleb128 0x19
 17194 037d 01       		.uleb128 0x1
 17195 037e 13       		.uleb128 0x13
 17196 037f 00       		.byte	0
 17197 0380 00       		.byte	0
 17198 0381 44       		.uleb128 0x44
 17199 0382 05       		.uleb128 0x5
 17200 0383 00       		.byte	0
 17201 0384 49       		.uleb128 0x49
 17202 0385 13       		.uleb128 0x13
 17203 0386 00       		.byte	0
 17204 0387 00       		.byte	0
 17205 0388 45       		.uleb128 0x45
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 488


 17206 0389 2E       		.uleb128 0x2e
 17207 038a 01       		.byte	0x1
 17208 038b 3F       		.uleb128 0x3f
 17209 038c 19       		.uleb128 0x19
 17210 038d 03       		.uleb128 0x3
 17211 038e 0E       		.uleb128 0xe
 17212 038f 3A       		.uleb128 0x3a
 17213 0390 0B       		.uleb128 0xb
 17214 0391 3B       		.uleb128 0x3b
 17215 0392 0B       		.uleb128 0xb
 17216 0393 27       		.uleb128 0x27
 17217 0394 19       		.uleb128 0x19
 17218 0395 3C       		.uleb128 0x3c
 17219 0396 19       		.uleb128 0x19
 17220 0397 01       		.uleb128 0x1
 17221 0398 13       		.uleb128 0x13
 17222 0399 00       		.byte	0
 17223 039a 00       		.byte	0
 17224 039b 46       		.uleb128 0x46
 17225 039c 2E       		.uleb128 0x2e
 17226 039d 01       		.byte	0x1
 17227 039e 3F       		.uleb128 0x3f
 17228 039f 19       		.uleb128 0x19
 17229 03a0 03       		.uleb128 0x3
 17230 03a1 0E       		.uleb128 0xe
 17231 03a2 3A       		.uleb128 0x3a
 17232 03a3 0B       		.uleb128 0xb
 17233 03a4 3B       		.uleb128 0x3b
 17234 03a5 0B       		.uleb128 0xb
 17235 03a6 27       		.uleb128 0x27
 17236 03a7 19       		.uleb128 0x19
 17237 03a8 49       		.uleb128 0x49
 17238 03a9 13       		.uleb128 0x13
 17239 03aa 3C       		.uleb128 0x3c
 17240 03ab 19       		.uleb128 0x19
 17241 03ac 01       		.uleb128 0x1
 17242 03ad 13       		.uleb128 0x13
 17243 03ae 00       		.byte	0
 17244 03af 00       		.byte	0
 17245 03b0 47       		.uleb128 0x47
 17246 03b1 2E       		.uleb128 0x2e
 17247 03b2 01       		.byte	0x1
 17248 03b3 3F       		.uleb128 0x3f
 17249 03b4 19       		.uleb128 0x19
 17250 03b5 03       		.uleb128 0x3
 17251 03b6 0E       		.uleb128 0xe
 17252 03b7 3A       		.uleb128 0x3a
 17253 03b8 0B       		.uleb128 0xb
 17254 03b9 3B       		.uleb128 0x3b
 17255 03ba 05       		.uleb128 0x5
 17256 03bb 27       		.uleb128 0x27
 17257 03bc 19       		.uleb128 0x19
 17258 03bd 49       		.uleb128 0x49
 17259 03be 13       		.uleb128 0x13
 17260 03bf 3C       		.uleb128 0x3c
 17261 03c0 19       		.uleb128 0x19
 17262 03c1 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 489


 17263 03c2 00       		.byte	0
 17264 03c3 00       		.byte	0
 17265              		.section	.debug_loc,"",%progbits
 17266              	.Ldebug_loc0:
 17267              	.LLST0:
 17268 0000 00000000 		.4byte	.LVL0
 17269 0004 0A000000 		.4byte	.LVL2
 17270 0008 0100     		.2byte	0x1
 17271 000a 51       		.byte	0x51
 17272 000b 0A000000 		.4byte	.LVL2
 17273 000f 22000000 		.4byte	.LFE13
 17274 0013 0400     		.2byte	0x4
 17275 0015 F3       		.byte	0xf3
 17276 0016 01       		.uleb128 0x1
 17277 0017 51       		.byte	0x51
 17278 0018 9F       		.byte	0x9f
 17279 0019 00000000 		.4byte	0
 17280 001d 00000000 		.4byte	0
 17281              	.LLST1:
 17282 0021 06000000 		.4byte	.LVL1
 17283 0025 12000000 		.4byte	.LVL3
 17284 0029 0300     		.2byte	0x3
 17285 002b 73       		.byte	0x73
 17286 002c 01       		.sleb128 1
 17287 002d 9F       		.byte	0x9f
 17288 002e 12000000 		.4byte	.LVL3
 17289 0032 16000000 		.4byte	.LVL4
 17290 0036 0600     		.2byte	0x6
 17291 0038 72       		.byte	0x72
 17292 0039 00       		.sleb128 0
 17293 003a 06       		.byte	0x6
 17294 003b 23       		.byte	0x23
 17295 003c 01       		.uleb128 0x1
 17296 003d 9F       		.byte	0x9f
 17297 003e 00000000 		.4byte	0
 17298 0042 00000000 		.4byte	0
 17299              	.LLST2:
 17300 0046 06000000 		.4byte	.LVL1
 17301 004a 0A000000 		.4byte	.LVL2
 17302 004e 0500     		.2byte	0x5
 17303 0050 71       		.byte	0x71
 17304 0051 00       		.sleb128 0
 17305 0052 73       		.byte	0x73
 17306 0053 00       		.sleb128 0
 17307 0054 22       		.byte	0x22
 17308 0055 0A000000 		.4byte	.LVL2
 17309 0059 16000000 		.4byte	.LVL4
 17310 005d 0200     		.2byte	0x2
 17311 005f 71       		.byte	0x71
 17312 0060 00       		.sleb128 0
 17313 0061 00000000 		.4byte	0
 17314 0065 00000000 		.4byte	0
 17315              	.LLST3:
 17316 0069 00000000 		.4byte	.LVL5
 17317 006d 04000000 		.4byte	.LVL6
 17318 0071 0100     		.2byte	0x1
 17319 0073 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 490


 17320 0074 04000000 		.4byte	.LVL6
 17321 0078 38000000 		.4byte	.LVL9
 17322 007c 0100     		.2byte	0x1
 17323 007e 53       		.byte	0x53
 17324 007f 38000000 		.4byte	.LVL9
 17325 0083 40000000 		.4byte	.LVL11
 17326 0087 0400     		.2byte	0x4
 17327 0089 F3       		.byte	0xf3
 17328 008a 01       		.uleb128 0x1
 17329 008b 50       		.byte	0x50
 17330 008c 9F       		.byte	0x9f
 17331 008d 40000000 		.4byte	.LVL11
 17332 0091 56000000 		.4byte	.LVL13
 17333 0095 0100     		.2byte	0x1
 17334 0097 53       		.byte	0x53
 17335 0098 56000000 		.4byte	.LVL13
 17336 009c 5E000000 		.4byte	.LVL15
 17337 00a0 0400     		.2byte	0x4
 17338 00a2 F3       		.byte	0xf3
 17339 00a3 01       		.uleb128 0x1
 17340 00a4 50       		.byte	0x50
 17341 00a5 9F       		.byte	0x9f
 17342 00a6 5E000000 		.4byte	.LVL15
 17343 00aa 60000000 		.4byte	.LVL16
 17344 00ae 0100     		.2byte	0x1
 17345 00b0 53       		.byte	0x53
 17346 00b1 60000000 		.4byte	.LVL16
 17347 00b5 66000000 		.4byte	.LVL18
 17348 00b9 0400     		.2byte	0x4
 17349 00bb F3       		.byte	0xf3
 17350 00bc 01       		.uleb128 0x1
 17351 00bd 50       		.byte	0x50
 17352 00be 9F       		.byte	0x9f
 17353 00bf 66000000 		.4byte	.LVL18
 17354 00c3 68000000 		.4byte	.LVL19
 17355 00c7 0100     		.2byte	0x1
 17356 00c9 53       		.byte	0x53
 17357 00ca 68000000 		.4byte	.LVL19
 17358 00ce 6E000000 		.4byte	.LVL21
 17359 00d2 0400     		.2byte	0x4
 17360 00d4 F3       		.byte	0xf3
 17361 00d5 01       		.uleb128 0x1
 17362 00d6 50       		.byte	0x50
 17363 00d7 9F       		.byte	0x9f
 17364 00d8 6E000000 		.4byte	.LVL21
 17365 00dc 70000000 		.4byte	.LVL22
 17366 00e0 0100     		.2byte	0x1
 17367 00e2 53       		.byte	0x53
 17368 00e3 70000000 		.4byte	.LVL22
 17369 00e7 78000000 		.4byte	.LVL24
 17370 00eb 0400     		.2byte	0x4
 17371 00ed F3       		.byte	0xf3
 17372 00ee 01       		.uleb128 0x1
 17373 00ef 50       		.byte	0x50
 17374 00f0 9F       		.byte	0x9f
 17375 00f1 78000000 		.4byte	.LVL24
 17376 00f5 7A000000 		.4byte	.LVL25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 491


 17377 00f9 0100     		.2byte	0x1
 17378 00fb 53       		.byte	0x53
 17379 00fc 7A000000 		.4byte	.LVL25
 17380 0100 82000000 		.4byte	.LVL27
 17381 0104 0400     		.2byte	0x4
 17382 0106 F3       		.byte	0xf3
 17383 0107 01       		.uleb128 0x1
 17384 0108 50       		.byte	0x50
 17385 0109 9F       		.byte	0x9f
 17386 010a 82000000 		.4byte	.LVL27
 17387 010e 92000000 		.4byte	.LVL29
 17388 0112 0100     		.2byte	0x1
 17389 0114 53       		.byte	0x53
 17390 0115 92000000 		.4byte	.LVL29
 17391 0119 9A000000 		.4byte	.LVL31
 17392 011d 0400     		.2byte	0x4
 17393 011f F3       		.byte	0xf3
 17394 0120 01       		.uleb128 0x1
 17395 0121 50       		.byte	0x50
 17396 0122 9F       		.byte	0x9f
 17397 0123 9A000000 		.4byte	.LVL31
 17398 0127 9C000000 		.4byte	.LVL32
 17399 012b 0100     		.2byte	0x1
 17400 012d 53       		.byte	0x53
 17401 012e 9C000000 		.4byte	.LVL32
 17402 0132 A2000000 		.4byte	.LVL34
 17403 0136 0400     		.2byte	0x4
 17404 0138 F3       		.byte	0xf3
 17405 0139 01       		.uleb128 0x1
 17406 013a 50       		.byte	0x50
 17407 013b 9F       		.byte	0x9f
 17408 013c A2000000 		.4byte	.LVL34
 17409 0140 BA000000 		.4byte	.LVL36
 17410 0144 0100     		.2byte	0x1
 17411 0146 53       		.byte	0x53
 17412 0147 BA000000 		.4byte	.LVL36
 17413 014b C2000000 		.4byte	.LVL38
 17414 014f 0400     		.2byte	0x4
 17415 0151 F3       		.byte	0xf3
 17416 0152 01       		.uleb128 0x1
 17417 0153 50       		.byte	0x50
 17418 0154 9F       		.byte	0x9f
 17419 0155 C2000000 		.4byte	.LVL38
 17420 0159 CC000000 		.4byte	.LVL40
 17421 015d 0100     		.2byte	0x1
 17422 015f 53       		.byte	0x53
 17423 0160 CC000000 		.4byte	.LVL40
 17424 0164 D4000000 		.4byte	.LVL42
 17425 0168 0400     		.2byte	0x4
 17426 016a F3       		.byte	0xf3
 17427 016b 01       		.uleb128 0x1
 17428 016c 50       		.byte	0x50
 17429 016d 9F       		.byte	0x9f
 17430 016e D4000000 		.4byte	.LVL42
 17431 0172 E4000000 		.4byte	.LVL44
 17432 0176 0100     		.2byte	0x1
 17433 0178 53       		.byte	0x53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 492


 17434 0179 E4000000 		.4byte	.LVL44
 17435 017d EC000000 		.4byte	.LVL46
 17436 0181 0400     		.2byte	0x4
 17437 0183 F3       		.byte	0xf3
 17438 0184 01       		.uleb128 0x1
 17439 0185 50       		.byte	0x50
 17440 0186 9F       		.byte	0x9f
 17441 0187 EC000000 		.4byte	.LVL46
 17442 018b F6000000 		.4byte	.LVL48
 17443 018f 0100     		.2byte	0x1
 17444 0191 53       		.byte	0x53
 17445 0192 F6000000 		.4byte	.LVL48
 17446 0196 FE000000 		.4byte	.LVL50
 17447 019a 0400     		.2byte	0x4
 17448 019c F3       		.byte	0xf3
 17449 019d 01       		.uleb128 0x1
 17450 019e 50       		.byte	0x50
 17451 019f 9F       		.byte	0x9f
 17452 01a0 FE000000 		.4byte	.LVL50
 17453 01a4 00010000 		.4byte	.LVL51
 17454 01a8 0100     		.2byte	0x1
 17455 01aa 53       		.byte	0x53
 17456 01ab 00010000 		.4byte	.LVL51
 17457 01af 08010000 		.4byte	.LVL53
 17458 01b3 0400     		.2byte	0x4
 17459 01b5 F3       		.byte	0xf3
 17460 01b6 01       		.uleb128 0x1
 17461 01b7 50       		.byte	0x50
 17462 01b8 9F       		.byte	0x9f
 17463 01b9 08010000 		.4byte	.LVL53
 17464 01bd 0A010000 		.4byte	.LVL54
 17465 01c1 0100     		.2byte	0x1
 17466 01c3 53       		.byte	0x53
 17467 01c4 0A010000 		.4byte	.LVL54
 17468 01c8 12010000 		.4byte	.LVL56
 17469 01cc 0400     		.2byte	0x4
 17470 01ce F3       		.byte	0xf3
 17471 01cf 01       		.uleb128 0x1
 17472 01d0 50       		.byte	0x50
 17473 01d1 9F       		.byte	0x9f
 17474 01d2 12010000 		.4byte	.LVL56
 17475 01d6 14010000 		.4byte	.LVL57
 17476 01da 0100     		.2byte	0x1
 17477 01dc 53       		.byte	0x53
 17478 01dd 14010000 		.4byte	.LVL57
 17479 01e1 1C010000 		.4byte	.LVL59
 17480 01e5 0400     		.2byte	0x4
 17481 01e7 F3       		.byte	0xf3
 17482 01e8 01       		.uleb128 0x1
 17483 01e9 50       		.byte	0x50
 17484 01ea 9F       		.byte	0x9f
 17485 01eb 1C010000 		.4byte	.LVL59
 17486 01ef 1E010000 		.4byte	.LVL60
 17487 01f3 0100     		.2byte	0x1
 17488 01f5 53       		.byte	0x53
 17489 01f6 1E010000 		.4byte	.LVL60
 17490 01fa 26010000 		.4byte	.LVL62
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 493


 17491 01fe 0400     		.2byte	0x4
 17492 0200 F3       		.byte	0xf3
 17493 0201 01       		.uleb128 0x1
 17494 0202 50       		.byte	0x50
 17495 0203 9F       		.byte	0x9f
 17496 0204 26010000 		.4byte	.LVL62
 17497 0208 28010000 		.4byte	.LVL63
 17498 020c 0100     		.2byte	0x1
 17499 020e 53       		.byte	0x53
 17500 020f 28010000 		.4byte	.LVL63
 17501 0213 30010000 		.4byte	.LVL65
 17502 0217 0400     		.2byte	0x4
 17503 0219 F3       		.byte	0xf3
 17504 021a 01       		.uleb128 0x1
 17505 021b 50       		.byte	0x50
 17506 021c 9F       		.byte	0x9f
 17507 021d 30010000 		.4byte	.LVL65
 17508 0221 32010000 		.4byte	.LVL66
 17509 0225 0100     		.2byte	0x1
 17510 0227 53       		.byte	0x53
 17511 0228 32010000 		.4byte	.LVL66
 17512 022c 3A010000 		.4byte	.LVL68
 17513 0230 0400     		.2byte	0x4
 17514 0232 F3       		.byte	0xf3
 17515 0233 01       		.uleb128 0x1
 17516 0234 50       		.byte	0x50
 17517 0235 9F       		.byte	0x9f
 17518 0236 3A010000 		.4byte	.LVL68
 17519 023a 3C010000 		.4byte	.LVL69
 17520 023e 0100     		.2byte	0x1
 17521 0240 53       		.byte	0x53
 17522 0241 3C010000 		.4byte	.LVL69
 17523 0245 44010000 		.4byte	.LVL71
 17524 0249 0400     		.2byte	0x4
 17525 024b F3       		.byte	0xf3
 17526 024c 01       		.uleb128 0x1
 17527 024d 50       		.byte	0x50
 17528 024e 9F       		.byte	0x9f
 17529 024f 44010000 		.4byte	.LVL71
 17530 0253 4E010000 		.4byte	.LVL73
 17531 0257 0100     		.2byte	0x1
 17532 0259 53       		.byte	0x53
 17533 025a 4E010000 		.4byte	.LVL73
 17534 025e 54010000 		.4byte	.LVL75
 17535 0262 0400     		.2byte	0x4
 17536 0264 F3       		.byte	0xf3
 17537 0265 01       		.uleb128 0x1
 17538 0266 50       		.byte	0x50
 17539 0267 9F       		.byte	0x9f
 17540 0268 54010000 		.4byte	.LVL75
 17541 026c 56010000 		.4byte	.LVL76
 17542 0270 0100     		.2byte	0x1
 17543 0272 53       		.byte	0x53
 17544 0273 56010000 		.4byte	.LVL76
 17545 0277 5C010000 		.4byte	.LVL78
 17546 027b 0400     		.2byte	0x4
 17547 027d F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 494


 17548 027e 01       		.uleb128 0x1
 17549 027f 50       		.byte	0x50
 17550 0280 9F       		.byte	0x9f
 17551 0281 5C010000 		.4byte	.LVL78
 17552 0285 62010000 		.4byte	.LVL80
 17553 0289 0100     		.2byte	0x1
 17554 028b 53       		.byte	0x53
 17555 028c 62010000 		.4byte	.LVL80
 17556 0290 68010000 		.4byte	.LVL82
 17557 0294 0400     		.2byte	0x4
 17558 0296 73       		.byte	0x73
 17559 0297 8E01     		.sleb128 142
 17560 0299 9F       		.byte	0x9f
 17561 029a 68010000 		.4byte	.LVL82
 17562 029e 70010000 		.4byte	.LVL85
 17563 02a2 0100     		.2byte	0x1
 17564 02a4 53       		.byte	0x53
 17565 02a5 70010000 		.4byte	.LVL85
 17566 02a9 76010000 		.4byte	.LVL86
 17567 02ad 0400     		.2byte	0x4
 17568 02af 73       		.byte	0x73
 17569 02b0 C700     		.sleb128 71
 17570 02b2 9F       		.byte	0x9f
 17571 02b3 76010000 		.4byte	.LVL86
 17572 02b7 82010000 		.4byte	.LVL88
 17573 02bb 0100     		.2byte	0x1
 17574 02bd 53       		.byte	0x53
 17575 02be 82010000 		.4byte	.LVL88
 17576 02c2 88010000 		.4byte	.LVL90
 17577 02c6 0400     		.2byte	0x4
 17578 02c8 F3       		.byte	0xf3
 17579 02c9 01       		.uleb128 0x1
 17580 02ca 50       		.byte	0x50
 17581 02cb 9F       		.byte	0x9f
 17582 02cc 88010000 		.4byte	.LVL90
 17583 02d0 92010000 		.4byte	.LVL92
 17584 02d4 0100     		.2byte	0x1
 17585 02d6 53       		.byte	0x53
 17586 02d7 92010000 		.4byte	.LVL92
 17587 02db 96010000 		.4byte	.LVL94
 17588 02df 0400     		.2byte	0x4
 17589 02e1 73       		.byte	0x73
 17590 02e2 9301     		.sleb128 147
 17591 02e4 9F       		.byte	0x9f
 17592 02e5 96010000 		.4byte	.LVL94
 17593 02e9 9E010000 		.4byte	.LVL95
 17594 02ed 0400     		.2byte	0x4
 17595 02ef F3       		.byte	0xf3
 17596 02f0 01       		.uleb128 0x1
 17597 02f1 50       		.byte	0x50
 17598 02f2 9F       		.byte	0x9f
 17599 02f3 9E010000 		.4byte	.LVL95
 17600 02f7 A0010000 		.4byte	.LVL96
 17601 02fb 0100     		.2byte	0x1
 17602 02fd 53       		.byte	0x53
 17603 02fe A0010000 		.4byte	.LVL96
 17604 0302 A8010000 		.4byte	.LVL99
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 495


 17605 0306 0400     		.2byte	0x4
 17606 0308 F3       		.byte	0xf3
 17607 0309 01       		.uleb128 0x1
 17608 030a 50       		.byte	0x50
 17609 030b 9F       		.byte	0x9f
 17610 030c A8010000 		.4byte	.LVL99
 17611 0310 AA010000 		.4byte	.LVL100
 17612 0314 0100     		.2byte	0x1
 17613 0316 53       		.byte	0x53
 17614 0317 AA010000 		.4byte	.LVL100
 17615 031b B2010000 		.4byte	.LVL103
 17616 031f 0400     		.2byte	0x4
 17617 0321 F3       		.byte	0xf3
 17618 0322 01       		.uleb128 0x1
 17619 0323 50       		.byte	0x50
 17620 0324 9F       		.byte	0x9f
 17621 0325 B2010000 		.4byte	.LVL103
 17622 0329 BC010000 		.4byte	.LVL105
 17623 032d 0100     		.2byte	0x1
 17624 032f 53       		.byte	0x53
 17625 0330 BC010000 		.4byte	.LVL105
 17626 0334 C4010000 		.4byte	.LVL107
 17627 0338 0400     		.2byte	0x4
 17628 033a F3       		.byte	0xf3
 17629 033b 01       		.uleb128 0x1
 17630 033c 50       		.byte	0x50
 17631 033d 9F       		.byte	0x9f
 17632 033e C4010000 		.4byte	.LVL107
 17633 0342 C6010000 		.4byte	.LVL108
 17634 0346 0100     		.2byte	0x1
 17635 0348 53       		.byte	0x53
 17636 0349 C6010000 		.4byte	.LVL108
 17637 034d D8010000 		.4byte	.LFE20
 17638 0351 0400     		.2byte	0x4
 17639 0353 F3       		.byte	0xf3
 17640 0354 01       		.uleb128 0x1
 17641 0355 50       		.byte	0x50
 17642 0356 9F       		.byte	0x9f
 17643 0357 00000000 		.4byte	0
 17644 035b 00000000 		.4byte	0
 17645              	.LLST4:
 17646 035f 00000000 		.4byte	.LVL5
 17647 0363 22000000 		.4byte	.LVL7
 17648 0367 0100     		.2byte	0x1
 17649 0369 51       		.byte	0x51
 17650 036a 22000000 		.4byte	.LVL7
 17651 036e 3A000000 		.4byte	.LVL10
 17652 0372 0100     		.2byte	0x1
 17653 0374 50       		.byte	0x50
 17654 0375 3A000000 		.4byte	.LVL10
 17655 0379 40000000 		.4byte	.LVL11
 17656 037d 0400     		.2byte	0x4
 17657 037f F3       		.byte	0xf3
 17658 0380 01       		.uleb128 0x1
 17659 0381 51       		.byte	0x51
 17660 0382 9F       		.byte	0x9f
 17661 0383 40000000 		.4byte	.LVL11
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 496


 17662 0387 58000000 		.4byte	.LVL14
 17663 038b 0100     		.2byte	0x1
 17664 038d 50       		.byte	0x50
 17665 038e 58000000 		.4byte	.LVL14
 17666 0392 5E000000 		.4byte	.LVL15
 17667 0396 0400     		.2byte	0x4
 17668 0398 F3       		.byte	0xf3
 17669 0399 01       		.uleb128 0x1
 17670 039a 51       		.byte	0x51
 17671 039b 9F       		.byte	0x9f
 17672 039c 5E000000 		.4byte	.LVL15
 17673 03a0 62000000 		.4byte	.LVL17
 17674 03a4 0100     		.2byte	0x1
 17675 03a6 50       		.byte	0x50
 17676 03a7 62000000 		.4byte	.LVL17
 17677 03ab 66000000 		.4byte	.LVL18
 17678 03af 0400     		.2byte	0x4
 17679 03b1 F3       		.byte	0xf3
 17680 03b2 01       		.uleb128 0x1
 17681 03b3 51       		.byte	0x51
 17682 03b4 9F       		.byte	0x9f
 17683 03b5 66000000 		.4byte	.LVL18
 17684 03b9 6A000000 		.4byte	.LVL20
 17685 03bd 0100     		.2byte	0x1
 17686 03bf 50       		.byte	0x50
 17687 03c0 6A000000 		.4byte	.LVL20
 17688 03c4 6E000000 		.4byte	.LVL21
 17689 03c8 0400     		.2byte	0x4
 17690 03ca F3       		.byte	0xf3
 17691 03cb 01       		.uleb128 0x1
 17692 03cc 51       		.byte	0x51
 17693 03cd 9F       		.byte	0x9f
 17694 03ce 6E000000 		.4byte	.LVL21
 17695 03d2 72000000 		.4byte	.LVL23
 17696 03d6 0100     		.2byte	0x1
 17697 03d8 50       		.byte	0x50
 17698 03d9 72000000 		.4byte	.LVL23
 17699 03dd 78000000 		.4byte	.LVL24
 17700 03e1 0400     		.2byte	0x4
 17701 03e3 F3       		.byte	0xf3
 17702 03e4 01       		.uleb128 0x1
 17703 03e5 51       		.byte	0x51
 17704 03e6 9F       		.byte	0x9f
 17705 03e7 78000000 		.4byte	.LVL24
 17706 03eb 7C000000 		.4byte	.LVL26
 17707 03ef 0100     		.2byte	0x1
 17708 03f1 50       		.byte	0x50
 17709 03f2 7C000000 		.4byte	.LVL26
 17710 03f6 82000000 		.4byte	.LVL27
 17711 03fa 0400     		.2byte	0x4
 17712 03fc F3       		.byte	0xf3
 17713 03fd 01       		.uleb128 0x1
 17714 03fe 51       		.byte	0x51
 17715 03ff 9F       		.byte	0x9f
 17716 0400 82000000 		.4byte	.LVL27
 17717 0404 94000000 		.4byte	.LVL30
 17718 0408 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 497


 17719 040a 50       		.byte	0x50
 17720 040b 94000000 		.4byte	.LVL30
 17721 040f 9A000000 		.4byte	.LVL31
 17722 0413 0400     		.2byte	0x4
 17723 0415 F3       		.byte	0xf3
 17724 0416 01       		.uleb128 0x1
 17725 0417 51       		.byte	0x51
 17726 0418 9F       		.byte	0x9f
 17727 0419 9A000000 		.4byte	.LVL31
 17728 041d 9E000000 		.4byte	.LVL33
 17729 0421 0100     		.2byte	0x1
 17730 0423 50       		.byte	0x50
 17731 0424 9E000000 		.4byte	.LVL33
 17732 0428 A2000000 		.4byte	.LVL34
 17733 042c 0100     		.2byte	0x1
 17734 042e 51       		.byte	0x51
 17735 042f A2000000 		.4byte	.LVL34
 17736 0433 BC000000 		.4byte	.LVL37
 17737 0437 0100     		.2byte	0x1
 17738 0439 50       		.byte	0x50
 17739 043a BC000000 		.4byte	.LVL37
 17740 043e C2000000 		.4byte	.LVL38
 17741 0442 0100     		.2byte	0x1
 17742 0444 51       		.byte	0x51
 17743 0445 C2000000 		.4byte	.LVL38
 17744 0449 CE000000 		.4byte	.LVL41
 17745 044d 0100     		.2byte	0x1
 17746 044f 50       		.byte	0x50
 17747 0450 CE000000 		.4byte	.LVL41
 17748 0454 D4000000 		.4byte	.LVL42
 17749 0458 0100     		.2byte	0x1
 17750 045a 51       		.byte	0x51
 17751 045b D4000000 		.4byte	.LVL42
 17752 045f E6000000 		.4byte	.LVL45
 17753 0463 0100     		.2byte	0x1
 17754 0465 50       		.byte	0x50
 17755 0466 E6000000 		.4byte	.LVL45
 17756 046a EC000000 		.4byte	.LVL46
 17757 046e 0100     		.2byte	0x1
 17758 0470 51       		.byte	0x51
 17759 0471 EC000000 		.4byte	.LVL46
 17760 0475 F8000000 		.4byte	.LVL49
 17761 0479 0100     		.2byte	0x1
 17762 047b 50       		.byte	0x50
 17763 047c F8000000 		.4byte	.LVL49
 17764 0480 FE000000 		.4byte	.LVL50
 17765 0484 0100     		.2byte	0x1
 17766 0486 51       		.byte	0x51
 17767 0487 FE000000 		.4byte	.LVL50
 17768 048b 02010000 		.4byte	.LVL52
 17769 048f 0100     		.2byte	0x1
 17770 0491 50       		.byte	0x50
 17771 0492 02010000 		.4byte	.LVL52
 17772 0496 08010000 		.4byte	.LVL53
 17773 049a 0100     		.2byte	0x1
 17774 049c 51       		.byte	0x51
 17775 049d 08010000 		.4byte	.LVL53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 498


 17776 04a1 0C010000 		.4byte	.LVL55
 17777 04a5 0100     		.2byte	0x1
 17778 04a7 50       		.byte	0x50
 17779 04a8 0C010000 		.4byte	.LVL55
 17780 04ac 12010000 		.4byte	.LVL56
 17781 04b0 0100     		.2byte	0x1
 17782 04b2 51       		.byte	0x51
 17783 04b3 12010000 		.4byte	.LVL56
 17784 04b7 16010000 		.4byte	.LVL58
 17785 04bb 0100     		.2byte	0x1
 17786 04bd 50       		.byte	0x50
 17787 04be 16010000 		.4byte	.LVL58
 17788 04c2 1C010000 		.4byte	.LVL59
 17789 04c6 0100     		.2byte	0x1
 17790 04c8 51       		.byte	0x51
 17791 04c9 1C010000 		.4byte	.LVL59
 17792 04cd 20010000 		.4byte	.LVL61
 17793 04d1 0100     		.2byte	0x1
 17794 04d3 50       		.byte	0x50
 17795 04d4 20010000 		.4byte	.LVL61
 17796 04d8 26010000 		.4byte	.LVL62
 17797 04dc 0100     		.2byte	0x1
 17798 04de 51       		.byte	0x51
 17799 04df 26010000 		.4byte	.LVL62
 17800 04e3 2A010000 		.4byte	.LVL64
 17801 04e7 0100     		.2byte	0x1
 17802 04e9 50       		.byte	0x50
 17803 04ea 2A010000 		.4byte	.LVL64
 17804 04ee 30010000 		.4byte	.LVL65
 17805 04f2 0100     		.2byte	0x1
 17806 04f4 51       		.byte	0x51
 17807 04f5 30010000 		.4byte	.LVL65
 17808 04f9 34010000 		.4byte	.LVL67
 17809 04fd 0100     		.2byte	0x1
 17810 04ff 50       		.byte	0x50
 17811 0500 34010000 		.4byte	.LVL67
 17812 0504 3A010000 		.4byte	.LVL68
 17813 0508 0100     		.2byte	0x1
 17814 050a 51       		.byte	0x51
 17815 050b 3A010000 		.4byte	.LVL68
 17816 050f 3E010000 		.4byte	.LVL70
 17817 0513 0100     		.2byte	0x1
 17818 0515 50       		.byte	0x50
 17819 0516 3E010000 		.4byte	.LVL70
 17820 051a 44010000 		.4byte	.LVL71
 17821 051e 0100     		.2byte	0x1
 17822 0520 51       		.byte	0x51
 17823 0521 44010000 		.4byte	.LVL71
 17824 0525 50010000 		.4byte	.LVL74
 17825 0529 0100     		.2byte	0x1
 17826 052b 50       		.byte	0x50
 17827 052c 50010000 		.4byte	.LVL74
 17828 0530 54010000 		.4byte	.LVL75
 17829 0534 0100     		.2byte	0x1
 17830 0536 51       		.byte	0x51
 17831 0537 54010000 		.4byte	.LVL75
 17832 053b 58010000 		.4byte	.LVL77
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 499


 17833 053f 0100     		.2byte	0x1
 17834 0541 50       		.byte	0x50
 17835 0542 58010000 		.4byte	.LVL77
 17836 0546 5C010000 		.4byte	.LVL78
 17837 054a 0100     		.2byte	0x1
 17838 054c 51       		.byte	0x51
 17839 054d 5C010000 		.4byte	.LVL78
 17840 0551 66010000 		.4byte	.LVL81
 17841 0555 0100     		.2byte	0x1
 17842 0557 50       		.byte	0x50
 17843 0558 66010000 		.4byte	.LVL81
 17844 055c 68010000 		.4byte	.LVL82
 17845 0560 0100     		.2byte	0x1
 17846 0562 51       		.byte	0x51
 17847 0563 68010000 		.4byte	.LVL82
 17848 0567 6E010000 		.4byte	.LVL84
 17849 056b 0100     		.2byte	0x1
 17850 056d 50       		.byte	0x50
 17851 056e 6E010000 		.4byte	.LVL84
 17852 0572 76010000 		.4byte	.LVL86
 17853 0576 0100     		.2byte	0x1
 17854 0578 51       		.byte	0x51
 17855 0579 76010000 		.4byte	.LVL86
 17856 057d 84010000 		.4byte	.LVL89
 17857 0581 0100     		.2byte	0x1
 17858 0583 50       		.byte	0x50
 17859 0584 84010000 		.4byte	.LVL89
 17860 0588 88010000 		.4byte	.LVL90
 17861 058c 0100     		.2byte	0x1
 17862 058e 51       		.byte	0x51
 17863 058f 88010000 		.4byte	.LVL90
 17864 0593 94010000 		.4byte	.LVL93
 17865 0597 0100     		.2byte	0x1
 17866 0599 50       		.byte	0x50
 17867 059a 94010000 		.4byte	.LVL93
 17868 059e 9E010000 		.4byte	.LVL95
 17869 05a2 0100     		.2byte	0x1
 17870 05a4 51       		.byte	0x51
 17871 05a5 9E010000 		.4byte	.LVL95
 17872 05a9 A2010000 		.4byte	.LVL97
 17873 05ad 0100     		.2byte	0x1
 17874 05af 50       		.byte	0x50
 17875 05b0 A2010000 		.4byte	.LVL97
 17876 05b4 A8010000 		.4byte	.LVL99
 17877 05b8 0100     		.2byte	0x1
 17878 05ba 51       		.byte	0x51
 17879 05bb A8010000 		.4byte	.LVL99
 17880 05bf AC010000 		.4byte	.LVL101
 17881 05c3 0100     		.2byte	0x1
 17882 05c5 50       		.byte	0x50
 17883 05c6 AC010000 		.4byte	.LVL101
 17884 05ca AE010000 		.4byte	.LVL102
 17885 05ce 0100     		.2byte	0x1
 17886 05d0 51       		.byte	0x51
 17887 05d1 AE010000 		.4byte	.LVL102
 17888 05d5 B2010000 		.4byte	.LVL103
 17889 05d9 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 500


 17890 05db F3       		.byte	0xf3
 17891 05dc 01       		.uleb128 0x1
 17892 05dd 51       		.byte	0x51
 17893 05de 9F       		.byte	0x9f
 17894 05df B2010000 		.4byte	.LVL103
 17895 05e3 BE010000 		.4byte	.LVL106
 17896 05e7 0100     		.2byte	0x1
 17897 05e9 50       		.byte	0x50
 17898 05ea BE010000 		.4byte	.LVL106
 17899 05ee D8010000 		.4byte	.LFE20
 17900 05f2 0400     		.2byte	0x4
 17901 05f4 F3       		.byte	0xf3
 17902 05f5 01       		.uleb128 0x1
 17903 05f6 51       		.byte	0x51
 17904 05f7 9F       		.byte	0x9f
 17905 05f8 00000000 		.4byte	0
 17906 05fc 00000000 		.4byte	0
 17907              	.LLST5:
 17908 0600 00000000 		.4byte	.LVL5
 17909 0604 36000000 		.4byte	.LVL8
 17910 0608 0200     		.2byte	0x2
 17911 060a 30       		.byte	0x30
 17912 060b 9F       		.byte	0x9f
 17913 060c 36000000 		.4byte	.LVL8
 17914 0610 40000000 		.4byte	.LVL11
 17915 0614 0600     		.2byte	0x6
 17916 0616 03       		.byte	0x3
 17917 0617 47000000 		.4byte	hashSha256hOid
 17918 061b 9F       		.byte	0x9f
 17919 061c 40000000 		.4byte	.LVL11
 17920 0620 54000000 		.4byte	.LVL12
 17921 0624 0200     		.2byte	0x2
 17922 0626 30       		.byte	0x30
 17923 0627 9F       		.byte	0x9f
 17924 0628 54000000 		.4byte	.LVL12
 17925 062c 5E000000 		.4byte	.LVL15
 17926 0630 0600     		.2byte	0x6
 17927 0632 03       		.byte	0x3
 17928 0633 35000000 		.4byte	hashSha512hOid
 17929 0637 9F       		.byte	0x9f
 17930 0638 5E000000 		.4byte	.LVL15
 17931 063c 66000000 		.4byte	.LVL18
 17932 0640 0600     		.2byte	0x6
 17933 0642 03       		.byte	0x3
 17934 0643 00000000 		.4byte	hashMd2hOid
 17935 0647 9F       		.byte	0x9f
 17936 0648 66000000 		.4byte	.LVL18
 17937 064c 6E000000 		.4byte	.LVL21
 17938 0650 0600     		.2byte	0x6
 17939 0652 03       		.byte	0x3
 17940 0653 08000000 		.4byte	hashMd5hOid
 17941 0657 9F       		.byte	0x9f
 17942 0658 6E000000 		.4byte	.LVL21
 17943 065c 78000000 		.4byte	.LVL24
 17944 0660 0600     		.2byte	0x6
 17945 0662 03       		.byte	0x3
 17946 0663 50000000 		.4byte	hashSha1hOid
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 501


 17947 0667 9F       		.byte	0x9f
 17948 0668 78000000 		.4byte	.LVL24
 17949 066c 82000000 		.4byte	.LVL27
 17950 0670 0600     		.2byte	0x6
 17951 0672 03       		.byte	0x3
 17952 0673 3E000000 		.4byte	hashSha384hOid
 17953 0677 9F       		.byte	0x9f
 17954 0678 82000000 		.4byte	.LVL27
 17955 067c 90000000 		.4byte	.LVL28
 17956 0680 0200     		.2byte	0x2
 17957 0682 30       		.byte	0x30
 17958 0683 9F       		.byte	0x9f
 17959 0684 90000000 		.4byte	.LVL28
 17960 0688 9A000000 		.4byte	.LVL31
 17961 068c 0600     		.2byte	0x6
 17962 068e 03       		.byte	0x3
 17963 068f 55000000 		.4byte	blkDes3CbcOid
 17964 0693 9F       		.byte	0x9f
 17965 0694 9A000000 		.4byte	.LVL31
 17966 0698 A2000000 		.4byte	.LVL34
 17967 069c 0600     		.2byte	0x6
 17968 069e 03       		.byte	0x3
 17969 069f 10000000 		.4byte	blkDesCbcOid
 17970 06a3 9F       		.byte	0x9f
 17971 06a4 A2000000 		.4byte	.LVL34
 17972 06a8 B8000000 		.4byte	.LVL35
 17973 06ac 0200     		.2byte	0x2
 17974 06ae 30       		.byte	0x30
 17975 06af 9F       		.byte	0x9f
 17976 06b0 B8000000 		.4byte	.LVL35
 17977 06b4 C2000000 		.4byte	.LVL38
 17978 06b8 0600     		.2byte	0x6
 17979 06ba 03       		.byte	0x3
 17980 06bb 6C000000 		.4byte	extSubjKeyOid
 17981 06bf 9F       		.byte	0x9f
 17982 06c0 C2000000 		.4byte	.LVL38
 17983 06c4 CA000000 		.4byte	.LVL39
 17984 06c8 0200     		.2byte	0x2
 17985 06ca 30       		.byte	0x30
 17986 06cb 9F       		.byte	0x9f
 17987 06cc CA000000 		.4byte	.LVL39
 17988 06d0 D4000000 		.4byte	.LVL42
 17989 06d4 0600     		.2byte	0x6
 17990 06d6 03       		.byte	0x3
 17991 06d7 15000000 		.4byte	extBasicCaOid
 17992 06db 9F       		.byte	0x9f
 17993 06dc D4000000 		.4byte	.LVL42
 17994 06e0 E2000000 		.4byte	.LVL43
 17995 06e4 0200     		.2byte	0x2
 17996 06e6 30       		.byte	0x30
 17997 06e7 9F       		.byte	0x9f
 17998 06e8 E2000000 		.4byte	.LVL43
 17999 06ec EC000000 		.4byte	.LVL46
 18000 06f0 0600     		.2byte	0x6
 18001 06f2 03       		.byte	0x3
 18002 06f3 69000000 		.4byte	extCertPolicyOid
 18003 06f7 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 502


 18004 06f8 EC000000 		.4byte	.LVL46
 18005 06fc F4000000 		.4byte	.LVL47
 18006 0700 0200     		.2byte	0x2
 18007 0702 30       		.byte	0x30
 18008 0703 9F       		.byte	0x9f
 18009 0704 F4000000 		.4byte	.LVL47
 18010 0708 FE000000 		.4byte	.LVL50
 18011 070c 0600     		.2byte	0x6
 18012 070e 03       		.byte	0x3
 18013 070f 63000000 		.4byte	extInhibitAnyOid
 18014 0713 9F       		.byte	0x9f
 18015 0714 FE000000 		.4byte	.LVL50
 18016 0718 08010000 		.4byte	.LVL53
 18017 071c 0600     		.2byte	0x6
 18018 071e 03       		.byte	0x3
 18019 071f 7D000000 		.4byte	extAltNamesOid
 18020 0723 9F       		.byte	0x9f
 18021 0724 08010000 		.4byte	.LVL53
 18022 0728 12010000 		.4byte	.LVL56
 18023 072c 0600     		.2byte	0x6
 18024 072e 03       		.byte	0x3
 18025 072f 7A000000 		.4byte	extCrlDistOid
 18026 0733 9F       		.byte	0x9f
 18027 0734 12010000 		.4byte	.LVL56
 18028 0738 1C010000 		.4byte	.LVL59
 18029 073c 0600     		.2byte	0x6
 18030 073e 03       		.byte	0x3
 18031 073f 72000000 		.4byte	extAuthInfoOid
 18032 0743 9F       		.byte	0x9f
 18033 0744 1C010000 		.4byte	.LVL59
 18034 0748 26010000 		.4byte	.LVL62
 18035 074c 0600     		.2byte	0x6
 18036 074e 03       		.byte	0x3
 18037 074f 6F000000 		.4byte	extAuthKeyOid
 18038 0753 9F       		.byte	0x9f
 18039 0754 26010000 		.4byte	.LVL62
 18040 0758 30010000 		.4byte	.LVL65
 18041 075c 0600     		.2byte	0x6
 18042 075e 03       		.byte	0x3
 18043 075f 66000000 		.4byte	extKeyUsageOid
 18044 0763 9F       		.byte	0x9f
 18045 0764 30010000 		.4byte	.LVL65
 18046 0768 3A010000 		.4byte	.LVL68
 18047 076c 0600     		.2byte	0x6
 18048 076e 03       		.byte	0x3
 18049 076f 60000000 		.4byte	extExtKeyUsageOid
 18050 0773 9F       		.byte	0x9f
 18051 0774 3A010000 		.4byte	.LVL68
 18052 0778 44010000 		.4byte	.LVL71
 18053 077c 0600     		.2byte	0x6
 18054 077e 03       		.byte	0x3
 18055 077f 5D000000 		.4byte	extNameConsOid
 18056 0783 9F       		.byte	0x9f
 18057 0784 44010000 		.4byte	.LVL71
 18058 0788 4C010000 		.4byte	.LVL72
 18059 078c 0200     		.2byte	0x2
 18060 078e 30       		.byte	0x30
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 503


 18061 078f 9F       		.byte	0x9f
 18062 0790 4C010000 		.4byte	.LVL72
 18063 0794 54010000 		.4byte	.LVL75
 18064 0798 0600     		.2byte	0x6
 18065 079a 03       		.byte	0x3
 18066 079b 80000000 		.4byte	extAuthInfoCaIssuerOid
 18067 079f 9F       		.byte	0x9f
 18068 07a0 54010000 		.4byte	.LVL75
 18069 07a4 5C010000 		.4byte	.LVL78
 18070 07a8 0600     		.2byte	0x6
 18071 07aa 03       		.byte	0x3
 18072 07ab 18000000 		.4byte	extAuthInfoOcspOid
 18073 07af 9F       		.byte	0x9f
 18074 07b0 5C010000 		.4byte	.LVL78
 18075 07b4 60010000 		.4byte	.LVL79
 18076 07b8 0200     		.2byte	0x2
 18077 07ba 30       		.byte	0x30
 18078 07bb 9F       		.byte	0x9f
 18079 07bc 60010000 		.4byte	.LVL79
 18080 07c0 68010000 		.4byte	.LVL82
 18081 07c4 0600     		.2byte	0x6
 18082 07c6 03       		.byte	0x3
 18083 07c7 20000000 		.4byte	extCertPolicyAnyOid
 18084 07cb 9F       		.byte	0x9f
 18085 07cc 68010000 		.4byte	.LVL82
 18086 07d0 6C010000 		.4byte	.LVL83
 18087 07d4 0200     		.2byte	0x2
 18088 07d6 30       		.byte	0x30
 18089 07d7 9F       		.byte	0x9f
 18090 07d8 6C010000 		.4byte	.LVL83
 18091 07dc 76010000 		.4byte	.LVL86
 18092 07e0 0600     		.2byte	0x6
 18093 07e2 03       		.byte	0x3
 18094 07e3 24000000 		.4byte	extAltNamesHwNameOid
 18095 07e7 9F       		.byte	0x9f
 18096 07e8 76010000 		.4byte	.LVL86
 18097 07ec 80010000 		.4byte	.LVL87
 18098 07f0 0200     		.2byte	0x2
 18099 07f2 30       		.byte	0x30
 18100 07f3 9F       		.byte	0x9f
 18101 07f4 80010000 		.4byte	.LVL87
 18102 07f8 88010000 		.4byte	.LVL90
 18103 07fc 0600     		.2byte	0x6
 18104 07fe 03       		.byte	0x3
 18105 07ff 98000000 		.4byte	extExtKeyUsageServerAuthOid
 18106 0803 9F       		.byte	0x9f
 18107 0804 88010000 		.4byte	.LVL90
 18108 0808 90010000 		.4byte	.LVL91
 18109 080c 0200     		.2byte	0x2
 18110 080e 30       		.byte	0x30
 18111 080f 9F       		.byte	0x9f
 18112 0810 90010000 		.4byte	.LVL91
 18113 0814 96010000 		.4byte	.LVL94
 18114 0818 0600     		.2byte	0x6
 18115 081a 03       		.byte	0x3
 18116 081b A0000000 		.4byte	extExtKeyUsageAnyOid
 18117 081f 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 504


 18118 0820 9E010000 		.4byte	.LVL95
 18119 0824 A4010000 		.4byte	.LVL98
 18120 0828 0600     		.2byte	0x6
 18121 082a 03       		.byte	0x3
 18122 082b 90000000 		.4byte	extExtKeyUsageClientAuthOid
 18123 082f 9F       		.byte	0x9f
 18124 0830 A8010000 		.4byte	.LVL99
 18125 0834 AE010000 		.4byte	.LVL102
 18126 0838 0600     		.2byte	0x6
 18127 083a 03       		.byte	0x3
 18128 083b 88000000 		.4byte	extExtKeyUsageOcspSignOid
 18129 083f 9F       		.byte	0x9f
 18130 0840 B2010000 		.4byte	.LVL103
 18131 0844 BA010000 		.4byte	.LVL104
 18132 0848 0200     		.2byte	0x2
 18133 084a 30       		.byte	0x30
 18134 084b 9F       		.byte	0x9f
 18135 084c BA010000 		.4byte	.LVL104
 18136 0850 C4010000 		.4byte	.LVL107
 18137 0854 0600     		.2byte	0x6
 18138 0856 03       		.byte	0x3
 18139 0857 2C000000 		.4byte	pbkdf2Oid
 18140 085b 9F       		.byte	0x9f
 18141 085c C4010000 		.4byte	.LVL107
 18142 0860 C6010000 		.4byte	.LVL108
 18143 0864 0200     		.2byte	0x2
 18144 0866 30       		.byte	0x30
 18145 0867 9F       		.byte	0x9f
 18146 0868 C6010000 		.4byte	.LVL108
 18147 086c D8010000 		.4byte	.LFE20
 18148 0870 0100     		.2byte	0x1
 18149 0872 50       		.byte	0x50
 18150 0873 00000000 		.4byte	0
 18151 0877 00000000 		.4byte	0
 18152              	.LLST6:
 18153 087b 00000000 		.4byte	.LVL109
 18154 087f 68000000 		.4byte	.LVL110
 18155 0883 0100     		.2byte	0x1
 18156 0885 50       		.byte	0x50
 18157 0886 68000000 		.4byte	.LVL110
 18158 088a 78000000 		.4byte	.LFE31
 18159 088e 0400     		.2byte	0x4
 18160 0890 F3       		.byte	0xf3
 18161 0891 01       		.uleb128 0x1
 18162 0892 50       		.byte	0x50
 18163 0893 9F       		.byte	0x9f
 18164 0894 00000000 		.4byte	0
 18165 0898 00000000 		.4byte	0
 18166              	.LLST7:
 18167 089c 00000000 		.4byte	.LVL109
 18168 08a0 6A000000 		.4byte	.LVL111
 18169 08a4 0100     		.2byte	0x1
 18170 08a6 51       		.byte	0x51
 18171 08a7 6A000000 		.4byte	.LVL111
 18172 08ab 78000000 		.4byte	.LFE31
 18173 08af 0400     		.2byte	0x4
 18174 08b1 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 505


 18175 08b2 01       		.uleb128 0x1
 18176 08b3 51       		.byte	0x51
 18177 08b4 9F       		.byte	0x9f
 18178 08b5 00000000 		.4byte	0
 18179 08b9 00000000 		.4byte	0
 18180              	.LLST8:
 18181 08bd 00000000 		.4byte	.LVL112
 18182 08c1 08000000 		.4byte	.LVL113
 18183 08c5 0100     		.2byte	0x1
 18184 08c7 50       		.byte	0x50
 18185 08c8 08000000 		.4byte	.LVL113
 18186 08cc 34000000 		.4byte	.LVL116
 18187 08d0 0100     		.2byte	0x1
 18188 08d2 55       		.byte	0x55
 18189 08d3 34000000 		.4byte	.LVL116
 18190 08d7 B8000000 		.4byte	.LFE50
 18191 08db 0400     		.2byte	0x4
 18192 08dd F3       		.byte	0xf3
 18193 08de 01       		.uleb128 0x1
 18194 08df 50       		.byte	0x50
 18195 08e0 9F       		.byte	0x9f
 18196 08e1 00000000 		.4byte	0
 18197 08e5 00000000 		.4byte	0
 18198              	.LLST9:
 18199 08e9 00000000 		.4byte	.LVL112
 18200 08ed 66000000 		.4byte	.LVL125
 18201 08f1 0100     		.2byte	0x1
 18202 08f3 51       		.byte	0x51
 18203 08f4 66000000 		.4byte	.LVL125
 18204 08f8 B8000000 		.4byte	.LFE50
 18205 08fc 0400     		.2byte	0x4
 18206 08fe F3       		.byte	0xf3
 18207 08ff 01       		.uleb128 0x1
 18208 0900 51       		.byte	0x51
 18209 0901 9F       		.byte	0x9f
 18210 0902 00000000 		.4byte	0
 18211 0906 00000000 		.4byte	0
 18212              	.LLST10:
 18213 090a 00000000 		.4byte	.LVL112
 18214 090e 68000000 		.4byte	.LVL126
 18215 0912 0100     		.2byte	0x1
 18216 0914 52       		.byte	0x52
 18217 0915 68000000 		.4byte	.LVL126
 18218 0919 B8000000 		.4byte	.LFE50
 18219 091d 0400     		.2byte	0x4
 18220 091f F3       		.byte	0xf3
 18221 0920 01       		.uleb128 0x1
 18222 0921 52       		.byte	0x52
 18223 0922 9F       		.byte	0x9f
 18224 0923 00000000 		.4byte	0
 18225 0927 00000000 		.4byte	0
 18226              	.LLST11:
 18227 092b 24000000 		.4byte	.LVL114
 18228 092f 78000000 		.4byte	.LVL131
 18229 0933 0100     		.2byte	0x1
 18230 0935 54       		.byte	0x54
 18231 0936 78000000 		.4byte	.LVL131
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 506


 18232 093a B2000000 		.4byte	.LVL140
 18233 093e 0200     		.2byte	0x2
 18234 0940 91       		.byte	0x91
 18235 0941 00       		.sleb128 0
 18236 0942 00000000 		.4byte	0
 18237 0946 00000000 		.4byte	0
 18238              	.LLST12:
 18239 094a 24000000 		.4byte	.LVL114
 18240 094e 78000000 		.4byte	.LVL131
 18241 0952 0100     		.2byte	0x1
 18242 0954 53       		.byte	0x53
 18243 0955 78000000 		.4byte	.LVL131
 18244 0959 8E000000 		.4byte	.LVL136
 18245 095d 0600     		.2byte	0x6
 18246 095f 73       		.byte	0x73
 18247 0960 00       		.sleb128 0
 18248 0961 75       		.byte	0x75
 18249 0962 00       		.sleb128 0
 18250 0963 22       		.byte	0x22
 18251 0964 9F       		.byte	0x9f
 18252 0965 8E000000 		.4byte	.LVL136
 18253 0969 A8000000 		.4byte	.LVL138
 18254 096d 0800     		.2byte	0x8
 18255 096f 73       		.byte	0x73
 18256 0970 00       		.sleb128 0
 18257 0971 75       		.byte	0x75
 18258 0972 00       		.sleb128 0
 18259 0973 22       		.byte	0x22
 18260 0974 23       		.byte	0x23
 18261 0975 01       		.uleb128 0x1
 18262 0976 9F       		.byte	0x9f
 18263 0977 A8000000 		.4byte	.LVL138
 18264 097b B2000000 		.4byte	.LVL140
 18265 097f 0600     		.2byte	0x6
 18266 0981 73       		.byte	0x73
 18267 0982 00       		.sleb128 0
 18268 0983 75       		.byte	0x75
 18269 0984 00       		.sleb128 0
 18270 0985 22       		.byte	0x22
 18271 0986 9F       		.byte	0x9f
 18272 0987 00000000 		.4byte	0
 18273 098b 00000000 		.4byte	0
 18274              	.LLST13:
 18275 098f 24000000 		.4byte	.LVL114
 18276 0993 6E000000 		.4byte	.LVL128
 18277 0997 0100     		.2byte	0x1
 18278 0999 52       		.byte	0x52
 18279 099a 70000000 		.4byte	.LVL129
 18280 099e 72000000 		.4byte	.LVL130
 18281 09a2 0100     		.2byte	0x1
 18282 09a4 54       		.byte	0x54
 18283 09a5 72000000 		.4byte	.LVL130
 18284 09a9 78000000 		.4byte	.LVL131
 18285 09ad 0100     		.2byte	0x1
 18286 09af 52       		.byte	0x52
 18287 09b0 78000000 		.4byte	.LVL131
 18288 09b4 7A000000 		.4byte	.LVL132
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 507


 18289 09b8 0600     		.2byte	0x6
 18290 09ba 72       		.byte	0x72
 18291 09bb 00       		.sleb128 0
 18292 09bc 75       		.byte	0x75
 18293 09bd 00       		.sleb128 0
 18294 09be 1C       		.byte	0x1c
 18295 09bf 9F       		.byte	0x9f
 18296 09c0 7A000000 		.4byte	.LVL132
 18297 09c4 82000000 		.4byte	.LVL135
 18298 09c8 0100     		.2byte	0x1
 18299 09ca 50       		.byte	0x50
 18300 09cb 82000000 		.4byte	.LVL135
 18301 09cf A8000000 		.4byte	.LVL138
 18302 09d3 0600     		.2byte	0x6
 18303 09d5 72       		.byte	0x72
 18304 09d6 00       		.sleb128 0
 18305 09d7 75       		.byte	0x75
 18306 09d8 00       		.sleb128 0
 18307 09d9 1C       		.byte	0x1c
 18308 09da 9F       		.byte	0x9f
 18309 09db A8000000 		.4byte	.LVL138
 18310 09df B0000000 		.4byte	.LVL139
 18311 09e3 0800     		.2byte	0x8
 18312 09e5 72       		.byte	0x72
 18313 09e6 00       		.sleb128 0
 18314 09e7 75       		.byte	0x75
 18315 09e8 00       		.sleb128 0
 18316 09e9 1C       		.byte	0x1c
 18317 09ea 23       		.byte	0x23
 18318 09eb 01       		.uleb128 0x1
 18319 09ec 9F       		.byte	0x9f
 18320 09ed B0000000 		.4byte	.LVL139
 18321 09f1 B2000000 		.4byte	.LVL140
 18322 09f5 0100     		.2byte	0x1
 18323 09f7 50       		.byte	0x50
 18324 09f8 00000000 		.4byte	0
 18325 09fc 00000000 		.4byte	0
 18326              	.LLST14:
 18327 0a00 24000000 		.4byte	.LVL114
 18328 0a04 78000000 		.4byte	.LVL131
 18329 0a08 0100     		.2byte	0x1
 18330 0a0a 51       		.byte	0x51
 18331 0a0b 78000000 		.4byte	.LVL131
 18332 0a0f 7E000000 		.4byte	.LVL133
 18333 0a13 0600     		.2byte	0x6
 18334 0a15 71       		.byte	0x71
 18335 0a16 00       		.sleb128 0
 18336 0a17 75       		.byte	0x75
 18337 0a18 00       		.sleb128 0
 18338 0a19 22       		.byte	0x22
 18339 0a1a 9F       		.byte	0x9f
 18340 0a1b 7E000000 		.4byte	.LVL133
 18341 0a1f A8000000 		.4byte	.LVL138
 18342 0a23 0800     		.2byte	0x8
 18343 0a25 71       		.byte	0x71
 18344 0a26 00       		.sleb128 0
 18345 0a27 75       		.byte	0x75
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 508


 18346 0a28 00       		.sleb128 0
 18347 0a29 22       		.byte	0x22
 18348 0a2a 23       		.byte	0x23
 18349 0a2b 01       		.uleb128 0x1
 18350 0a2c 9F       		.byte	0x9f
 18351 0a2d A8000000 		.4byte	.LVL138
 18352 0a31 B2000000 		.4byte	.LVL140
 18353 0a35 0600     		.2byte	0x6
 18354 0a37 71       		.byte	0x71
 18355 0a38 00       		.sleb128 0
 18356 0a39 75       		.byte	0x75
 18357 0a3a 00       		.sleb128 0
 18358 0a3b 22       		.byte	0x22
 18359 0a3c 9F       		.byte	0x9f
 18360 0a3d 00000000 		.4byte	0
 18361 0a41 00000000 		.4byte	0
 18362              	.LLST15:
 18363 0a45 24000000 		.4byte	.LVL114
 18364 0a49 34000000 		.4byte	.LVL116
 18365 0a4d 0100     		.2byte	0x1
 18366 0a4f 55       		.byte	0x55
 18367 0a50 34000000 		.4byte	.LVL116
 18368 0a54 B2000000 		.4byte	.LVL140
 18369 0a58 0400     		.2byte	0x4
 18370 0a5a F3       		.byte	0xf3
 18371 0a5b 01       		.uleb128 0x1
 18372 0a5c 50       		.byte	0x50
 18373 0a5d 9F       		.byte	0x9f
 18374 0a5e 00000000 		.4byte	0
 18375 0a62 00000000 		.4byte	0
 18376              	.LLST16:
 18377 0a66 30000000 		.4byte	.LVL115
 18378 0a6a 34000000 		.4byte	.LVL116
 18379 0a6e 0200     		.2byte	0x2
 18380 0a70 30       		.byte	0x30
 18381 0a71 9F       		.byte	0x9f
 18382 0a72 34000000 		.4byte	.LVL116
 18383 0a76 46000000 		.4byte	.LVL118
 18384 0a7a 0600     		.2byte	0x6
 18385 0a7c 73       		.byte	0x73
 18386 0a7d 00       		.sleb128 0
 18387 0a7e 70       		.byte	0x70
 18388 0a7f 00       		.sleb128 0
 18389 0a80 22       		.byte	0x22
 18390 0a81 9F       		.byte	0x9f
 18391 0a82 4E000000 		.4byte	.LVL119
 18392 0a86 56000000 		.4byte	.LVL122
 18393 0a8a 0100     		.2byte	0x1
 18394 0a8c 50       		.byte	0x50
 18395 0a8d 5A000000 		.4byte	.LVL123
 18396 0a91 68000000 		.4byte	.LVL126
 18397 0a95 0100     		.2byte	0x1
 18398 0a97 50       		.byte	0x50
 18399 0a98 00000000 		.4byte	0
 18400 0a9c 00000000 		.4byte	0
 18401              	.LLST17:
 18402 0aa0 30000000 		.4byte	.LVL115
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 509


 18403 0aa4 34000000 		.4byte	.LVL116
 18404 0aa8 0200     		.2byte	0x2
 18405 0aaa 30       		.byte	0x30
 18406 0aab 9F       		.byte	0x9f
 18407 0aac 34000000 		.4byte	.LVL116
 18408 0ab0 46000000 		.4byte	.LVL118
 18409 0ab4 0100     		.2byte	0x1
 18410 0ab6 50       		.byte	0x50
 18411 0ab7 4E000000 		.4byte	.LVL119
 18412 0abb 50000000 		.4byte	.LVL120
 18413 0abf 0100     		.2byte	0x1
 18414 0ac1 55       		.byte	0x55
 18415 0ac2 50000000 		.4byte	.LVL120
 18416 0ac6 54000000 		.4byte	.LVL121
 18417 0aca 0600     		.2byte	0x6
 18418 0acc 70       		.byte	0x70
 18419 0acd 00       		.sleb128 0
 18420 0ace 71       		.byte	0x71
 18421 0acf 00       		.sleb128 0
 18422 0ad0 1C       		.byte	0x1c
 18423 0ad1 9F       		.byte	0x9f
 18424 0ad2 54000000 		.4byte	.LVL121
 18425 0ad6 56000000 		.4byte	.LVL122
 18426 0ada 0800     		.2byte	0x8
 18427 0adc 70       		.byte	0x70
 18428 0add 00       		.sleb128 0
 18429 0ade 71       		.byte	0x71
 18430 0adf 00       		.sleb128 0
 18431 0ae0 1C       		.byte	0x1c
 18432 0ae1 23       		.byte	0x23
 18433 0ae2 01       		.uleb128 0x1
 18434 0ae3 9F       		.byte	0x9f
 18435 0ae4 5A000000 		.4byte	.LVL123
 18436 0ae8 64000000 		.4byte	.LVL124
 18437 0aec 0100     		.2byte	0x1
 18438 0aee 55       		.byte	0x55
 18439 0aef 64000000 		.4byte	.LVL124
 18440 0af3 68000000 		.4byte	.LVL126
 18441 0af7 0400     		.2byte	0x4
 18442 0af9 75       		.byte	0x75
 18443 0afa 00       		.sleb128 0
 18444 0afb 20       		.byte	0x20
 18445 0afc 9F       		.byte	0x9f
 18446 0afd 00000000 		.4byte	0
 18447 0b01 00000000 		.4byte	0
 18448              	.LLST18:
 18449 0b05 6C000000 		.4byte	.LVL127
 18450 0b09 6E000000 		.4byte	.LVL128
 18451 0b0d 0600     		.2byte	0x6
 18452 0b0f 72       		.byte	0x72
 18453 0b10 00       		.sleb128 0
 18454 0b11 74       		.byte	0x74
 18455 0b12 00       		.sleb128 0
 18456 0b13 1C       		.byte	0x1c
 18457 0b14 9F       		.byte	0x9f
 18458 0b15 6E000000 		.4byte	.LVL128
 18459 0b19 72000000 		.4byte	.LVL130
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 510


 18460 0b1d 0100     		.2byte	0x1
 18461 0b1f 52       		.byte	0x52
 18462 0b20 00000000 		.4byte	0
 18463 0b24 00000000 		.4byte	0
 18464              	.LLST19:
 18465 0b28 80000000 		.4byte	.LVL134
 18466 0b2c 8E000000 		.4byte	.LVL136
 18467 0b30 0100     		.2byte	0x1
 18468 0b32 54       		.byte	0x54
 18469 0b33 8E000000 		.4byte	.LVL136
 18470 0b37 A8000000 		.4byte	.LVL138
 18471 0b3b 0500     		.2byte	0x5
 18472 0b3d 71       		.byte	0x71
 18473 0b3e 00       		.sleb128 0
 18474 0b3f 75       		.byte	0x75
 18475 0b40 00       		.sleb128 0
 18476 0b41 22       		.byte	0x22
 18477 0b42 A8000000 		.4byte	.LVL138
 18478 0b46 B0000000 		.4byte	.LVL139
 18479 0b4a 0700     		.2byte	0x7
 18480 0b4c 71       		.byte	0x71
 18481 0b4d 00       		.sleb128 0
 18482 0b4e 75       		.byte	0x75
 18483 0b4f 00       		.sleb128 0
 18484 0b50 22       		.byte	0x22
 18485 0b51 31       		.byte	0x31
 18486 0b52 1C       		.byte	0x1c
 18487 0b53 00000000 		.4byte	0
 18488 0b57 00000000 		.4byte	0
 18489              	.LLST20:
 18490 0b5b 96000000 		.4byte	.LVL137
 18491 0b5f B0000000 		.4byte	.LVL139
 18492 0b63 0200     		.2byte	0x2
 18493 0b65 91       		.byte	0x91
 18494 0b66 64       		.sleb128 -28
 18495 0b67 00000000 		.4byte	0
 18496 0b6b 00000000 		.4byte	0
 18497              	.LLST21:
 18498 0b6f 00000000 		.4byte	.LVL141
 18499 0b73 10000000 		.4byte	.LVL144
 18500 0b77 0100     		.2byte	0x1
 18501 0b79 50       		.byte	0x50
 18502 0b7a 10000000 		.4byte	.LVL144
 18503 0b7e 48000000 		.4byte	.LFE14
 18504 0b82 0400     		.2byte	0x4
 18505 0b84 F3       		.byte	0xf3
 18506 0b85 01       		.uleb128 0x1
 18507 0b86 50       		.byte	0x50
 18508 0b87 9F       		.byte	0x9f
 18509 0b88 00000000 		.4byte	0
 18510 0b8c 00000000 		.4byte	0
 18511              	.LLST22:
 18512 0b90 00000000 		.4byte	.LVL141
 18513 0b94 24000000 		.4byte	.LVL149
 18514 0b98 0200     		.2byte	0x2
 18515 0b9a 30       		.byte	0x30
 18516 0b9b 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 511


 18517 0b9c 24000000 		.4byte	.LVL149
 18518 0ba0 2E000000 		.4byte	.LVL152
 18519 0ba4 0100     		.2byte	0x1
 18520 0ba6 54       		.byte	0x54
 18521 0ba7 30000000 		.4byte	.LVL153
 18522 0bab 42000000 		.4byte	.LVL155
 18523 0baf 0100     		.2byte	0x1
 18524 0bb1 54       		.byte	0x54
 18525 0bb2 00000000 		.4byte	0
 18526 0bb6 00000000 		.4byte	0
 18527              	.LLST23:
 18528 0bba 06000000 		.4byte	.LVL142
 18529 0bbe 0E000000 		.4byte	.LVL143
 18530 0bc2 0100     		.2byte	0x1
 18531 0bc4 54       		.byte	0x54
 18532 0bc5 0E000000 		.4byte	.LVL143
 18533 0bc9 1E000000 		.4byte	.LVL147
 18534 0bcd 0100     		.2byte	0x1
 18535 0bcf 55       		.byte	0x55
 18536 0bd0 24000000 		.4byte	.LVL149
 18537 0bd4 26000000 		.4byte	.LVL150
 18538 0bd8 0900     		.2byte	0x9
 18539 0bda 70       		.byte	0x70
 18540 0bdb 00       		.sleb128 0
 18541 0bdc F3       		.byte	0xf3
 18542 0bdd 01       		.uleb128 0x1
 18543 0bde 50       		.byte	0x50
 18544 0bdf 1C       		.byte	0x1c
 18545 0be0 23       		.byte	0x23
 18546 0be1 01       		.uleb128 0x1
 18547 0be2 9F       		.byte	0x9f
 18548 0be3 26000000 		.4byte	.LVL150
 18549 0be7 2A000000 		.4byte	.LVL151
 18550 0beb 0700     		.2byte	0x7
 18551 0bed 70       		.byte	0x70
 18552 0bee 00       		.sleb128 0
 18553 0bef F3       		.byte	0xf3
 18554 0bf0 01       		.uleb128 0x1
 18555 0bf1 50       		.byte	0x50
 18556 0bf2 1C       		.byte	0x1c
 18557 0bf3 9F       		.byte	0x9f
 18558 0bf4 2A000000 		.4byte	.LVL151
 18559 0bf8 32000000 		.4byte	.LVL154
 18560 0bfc 0900     		.2byte	0x9
 18561 0bfe 70       		.byte	0x70
 18562 0bff 00       		.sleb128 0
 18563 0c00 F3       		.byte	0xf3
 18564 0c01 01       		.uleb128 0x1
 18565 0c02 50       		.byte	0x50
 18566 0c03 1C       		.byte	0x1c
 18567 0c04 23       		.byte	0x23
 18568 0c05 01       		.uleb128 0x1
 18569 0c06 9F       		.byte	0x9f
 18570 0c07 32000000 		.4byte	.LVL154
 18571 0c0b 42000000 		.4byte	.LVL155
 18572 0c0f 0100     		.2byte	0x1
 18573 0c11 55       		.byte	0x55
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 512


 18574 0c12 00000000 		.4byte	0
 18575 0c16 00000000 		.4byte	0
 18576              	.LLST24:
 18577 0c1a 12000000 		.4byte	.LVL145
 18578 0c1e 20000000 		.4byte	.LVL148
 18579 0c22 0100     		.2byte	0x1
 18580 0c24 54       		.byte	0x54
 18581 0c25 20000000 		.4byte	.LVL148
 18582 0c29 24000000 		.4byte	.LVL149
 18583 0c2d 0200     		.2byte	0x2
 18584 0c2f 70       		.byte	0x70
 18585 0c30 00       		.sleb128 0
 18586 0c31 2A000000 		.4byte	.LVL151
 18587 0c35 32000000 		.4byte	.LVL154
 18588 0c39 0200     		.2byte	0x2
 18589 0c3b 70       		.byte	0x70
 18590 0c3c 00       		.sleb128 0
 18591 0c3d 00000000 		.4byte	0
 18592 0c41 00000000 		.4byte	0
 18593              	.LLST25:
 18594 0c45 1C000000 		.4byte	.LVL146
 18595 0c49 24000000 		.4byte	.LVL149
 18596 0c4d 0100     		.2byte	0x1
 18597 0c4f 57       		.byte	0x57
 18598 0c50 24000000 		.4byte	.LVL149
 18599 0c54 2A000000 		.4byte	.LVL151
 18600 0c58 0300     		.2byte	0x3
 18601 0c5a 77       		.byte	0x77
 18602 0c5b 7F       		.sleb128 -1
 18603 0c5c 9F       		.byte	0x9f
 18604 0c5d 2A000000 		.4byte	.LVL151
 18605 0c61 32000000 		.4byte	.LVL154
 18606 0c65 0100     		.2byte	0x1
 18607 0c67 57       		.byte	0x57
 18608 0c68 00000000 		.4byte	0
 18609 0c6c 00000000 		.4byte	0
 18610              	.LLST26:
 18611 0c70 00000000 		.4byte	.LVL156
 18612 0c74 14000000 		.4byte	.LVL157
 18613 0c78 0100     		.2byte	0x1
 18614 0c7a 50       		.byte	0x50
 18615 0c7b 14000000 		.4byte	.LVL157
 18616 0c7f 1A000000 		.4byte	.LVL158
 18617 0c83 0400     		.2byte	0x4
 18618 0c85 F3       		.byte	0xf3
 18619 0c86 01       		.uleb128 0x1
 18620 0c87 50       		.byte	0x50
 18621 0c88 9F       		.byte	0x9f
 18622 0c89 1A000000 		.4byte	.LVL158
 18623 0c8d 25000000 		.4byte	.LVL161-1
 18624 0c91 0100     		.2byte	0x1
 18625 0c93 50       		.byte	0x50
 18626 0c94 25000000 		.4byte	.LVL161-1
 18627 0c98 34000000 		.4byte	.LFE15
 18628 0c9c 0400     		.2byte	0x4
 18629 0c9e F3       		.byte	0xf3
 18630 0c9f 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 513


 18631 0ca0 50       		.byte	0x50
 18632 0ca1 9F       		.byte	0x9f
 18633 0ca2 00000000 		.4byte	0
 18634 0ca6 00000000 		.4byte	0
 18635              	.LLST27:
 18636 0caa 00000000 		.4byte	.LVL156
 18637 0cae 14000000 		.4byte	.LVL157
 18638 0cb2 0100     		.2byte	0x1
 18639 0cb4 51       		.byte	0x51
 18640 0cb5 14000000 		.4byte	.LVL157
 18641 0cb9 1A000000 		.4byte	.LVL158
 18642 0cbd 0400     		.2byte	0x4
 18643 0cbf F3       		.byte	0xf3
 18644 0cc0 01       		.uleb128 0x1
 18645 0cc1 51       		.byte	0x51
 18646 0cc2 9F       		.byte	0x9f
 18647 0cc3 1A000000 		.4byte	.LVL158
 18648 0cc7 22000000 		.4byte	.LVL160
 18649 0ccb 0100     		.2byte	0x1
 18650 0ccd 51       		.byte	0x51
 18651 0cce 22000000 		.4byte	.LVL160
 18652 0cd2 32000000 		.4byte	.LVL162
 18653 0cd6 0100     		.2byte	0x1
 18654 0cd8 54       		.byte	0x54
 18655 0cd9 32000000 		.4byte	.LVL162
 18656 0cdd 34000000 		.4byte	.LFE15
 18657 0ce1 0400     		.2byte	0x4
 18658 0ce3 F3       		.byte	0xf3
 18659 0ce4 01       		.uleb128 0x1
 18660 0ce5 51       		.byte	0x51
 18661 0ce6 9F       		.byte	0x9f
 18662 0ce7 00000000 		.4byte	0
 18663 0ceb 00000000 		.4byte	0
 18664              	.LLST28:
 18665 0cef 00000000 		.4byte	.LVL156
 18666 0cf3 14000000 		.4byte	.LVL157
 18667 0cf7 0100     		.2byte	0x1
 18668 0cf9 52       		.byte	0x52
 18669 0cfa 14000000 		.4byte	.LVL157
 18670 0cfe 1A000000 		.4byte	.LVL158
 18671 0d02 0400     		.2byte	0x4
 18672 0d04 F3       		.byte	0xf3
 18673 0d05 01       		.uleb128 0x1
 18674 0d06 52       		.byte	0x52
 18675 0d07 9F       		.byte	0x9f
 18676 0d08 1A000000 		.4byte	.LVL158
 18677 0d0c 20000000 		.4byte	.LVL159
 18678 0d10 0100     		.2byte	0x1
 18679 0d12 52       		.byte	0x52
 18680 0d13 20000000 		.4byte	.LVL159
 18681 0d17 32000000 		.4byte	.LVL162
 18682 0d1b 0100     		.2byte	0x1
 18683 0d1d 55       		.byte	0x55
 18684 0d1e 32000000 		.4byte	.LVL162
 18685 0d22 34000000 		.4byte	.LFE15
 18686 0d26 0400     		.2byte	0x4
 18687 0d28 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 514


 18688 0d29 01       		.uleb128 0x1
 18689 0d2a 52       		.byte	0x52
 18690 0d2b 9F       		.byte	0x9f
 18691 0d2c 00000000 		.4byte	0
 18692 0d30 00000000 		.4byte	0
 18693              	.LLST29:
 18694 0d34 00000000 		.4byte	.LVL156
 18695 0d38 14000000 		.4byte	.LVL157
 18696 0d3c 0100     		.2byte	0x1
 18697 0d3e 53       		.byte	0x53
 18698 0d3f 14000000 		.4byte	.LVL157
 18699 0d43 1A000000 		.4byte	.LVL158
 18700 0d47 0400     		.2byte	0x4
 18701 0d49 F3       		.byte	0xf3
 18702 0d4a 01       		.uleb128 0x1
 18703 0d4b 53       		.byte	0x53
 18704 0d4c 9F       		.byte	0x9f
 18705 0d4d 1A000000 		.4byte	.LVL158
 18706 0d51 25000000 		.4byte	.LVL161-1
 18707 0d55 0100     		.2byte	0x1
 18708 0d57 53       		.byte	0x53
 18709 0d58 25000000 		.4byte	.LVL161-1
 18710 0d5c 34000000 		.4byte	.LFE15
 18711 0d60 0400     		.2byte	0x4
 18712 0d62 F3       		.byte	0xf3
 18713 0d63 01       		.uleb128 0x1
 18714 0d64 53       		.byte	0x53
 18715 0d65 9F       		.byte	0x9f
 18716 0d66 00000000 		.4byte	0
 18717 0d6a 00000000 		.4byte	0
 18718              	.LLST30:
 18719 0d6e 00000000 		.4byte	.LVL163
 18720 0d72 14000000 		.4byte	.LVL164
 18721 0d76 0100     		.2byte	0x1
 18722 0d78 50       		.byte	0x50
 18723 0d79 14000000 		.4byte	.LVL164
 18724 0d7d 1A000000 		.4byte	.LVL165
 18725 0d81 0400     		.2byte	0x4
 18726 0d83 F3       		.byte	0xf3
 18727 0d84 01       		.uleb128 0x1
 18728 0d85 50       		.byte	0x50
 18729 0d86 9F       		.byte	0x9f
 18730 0d87 1A000000 		.4byte	.LVL165
 18731 0d8b 25000000 		.4byte	.LVL168-1
 18732 0d8f 0100     		.2byte	0x1
 18733 0d91 50       		.byte	0x50
 18734 0d92 25000000 		.4byte	.LVL168-1
 18735 0d96 34000000 		.4byte	.LFE16
 18736 0d9a 0400     		.2byte	0x4
 18737 0d9c F3       		.byte	0xf3
 18738 0d9d 01       		.uleb128 0x1
 18739 0d9e 50       		.byte	0x50
 18740 0d9f 9F       		.byte	0x9f
 18741 0da0 00000000 		.4byte	0
 18742 0da4 00000000 		.4byte	0
 18743              	.LLST31:
 18744 0da8 00000000 		.4byte	.LVL163
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 515


 18745 0dac 14000000 		.4byte	.LVL164
 18746 0db0 0100     		.2byte	0x1
 18747 0db2 51       		.byte	0x51
 18748 0db3 14000000 		.4byte	.LVL164
 18749 0db7 1A000000 		.4byte	.LVL165
 18750 0dbb 0400     		.2byte	0x4
 18751 0dbd F3       		.byte	0xf3
 18752 0dbe 01       		.uleb128 0x1
 18753 0dbf 51       		.byte	0x51
 18754 0dc0 9F       		.byte	0x9f
 18755 0dc1 1A000000 		.4byte	.LVL165
 18756 0dc5 22000000 		.4byte	.LVL167
 18757 0dc9 0100     		.2byte	0x1
 18758 0dcb 51       		.byte	0x51
 18759 0dcc 22000000 		.4byte	.LVL167
 18760 0dd0 32000000 		.4byte	.LVL169
 18761 0dd4 0100     		.2byte	0x1
 18762 0dd6 54       		.byte	0x54
 18763 0dd7 32000000 		.4byte	.LVL169
 18764 0ddb 34000000 		.4byte	.LFE16
 18765 0ddf 0400     		.2byte	0x4
 18766 0de1 F3       		.byte	0xf3
 18767 0de2 01       		.uleb128 0x1
 18768 0de3 51       		.byte	0x51
 18769 0de4 9F       		.byte	0x9f
 18770 0de5 00000000 		.4byte	0
 18771 0de9 00000000 		.4byte	0
 18772              	.LLST32:
 18773 0ded 00000000 		.4byte	.LVL163
 18774 0df1 14000000 		.4byte	.LVL164
 18775 0df5 0100     		.2byte	0x1
 18776 0df7 52       		.byte	0x52
 18777 0df8 14000000 		.4byte	.LVL164
 18778 0dfc 1A000000 		.4byte	.LVL165
 18779 0e00 0400     		.2byte	0x4
 18780 0e02 F3       		.byte	0xf3
 18781 0e03 01       		.uleb128 0x1
 18782 0e04 52       		.byte	0x52
 18783 0e05 9F       		.byte	0x9f
 18784 0e06 1A000000 		.4byte	.LVL165
 18785 0e0a 20000000 		.4byte	.LVL166
 18786 0e0e 0100     		.2byte	0x1
 18787 0e10 52       		.byte	0x52
 18788 0e11 20000000 		.4byte	.LVL166
 18789 0e15 32000000 		.4byte	.LVL169
 18790 0e19 0100     		.2byte	0x1
 18791 0e1b 55       		.byte	0x55
 18792 0e1c 32000000 		.4byte	.LVL169
 18793 0e20 34000000 		.4byte	.LFE16
 18794 0e24 0400     		.2byte	0x4
 18795 0e26 F3       		.byte	0xf3
 18796 0e27 01       		.uleb128 0x1
 18797 0e28 52       		.byte	0x52
 18798 0e29 9F       		.byte	0x9f
 18799 0e2a 00000000 		.4byte	0
 18800 0e2e 00000000 		.4byte	0
 18801              	.LLST33:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 516


 18802 0e32 00000000 		.4byte	.LVL163
 18803 0e36 14000000 		.4byte	.LVL164
 18804 0e3a 0100     		.2byte	0x1
 18805 0e3c 53       		.byte	0x53
 18806 0e3d 14000000 		.4byte	.LVL164
 18807 0e41 1A000000 		.4byte	.LVL165
 18808 0e45 0400     		.2byte	0x4
 18809 0e47 F3       		.byte	0xf3
 18810 0e48 01       		.uleb128 0x1
 18811 0e49 53       		.byte	0x53
 18812 0e4a 9F       		.byte	0x9f
 18813 0e4b 1A000000 		.4byte	.LVL165
 18814 0e4f 25000000 		.4byte	.LVL168-1
 18815 0e53 0100     		.2byte	0x1
 18816 0e55 53       		.byte	0x53
 18817 0e56 25000000 		.4byte	.LVL168-1
 18818 0e5a 34000000 		.4byte	.LFE16
 18819 0e5e 0400     		.2byte	0x4
 18820 0e60 F3       		.byte	0xf3
 18821 0e61 01       		.uleb128 0x1
 18822 0e62 53       		.byte	0x53
 18823 0e63 9F       		.byte	0x9f
 18824 0e64 00000000 		.4byte	0
 18825 0e68 00000000 		.4byte	0
 18826              	.LLST34:
 18827 0e6c 00000000 		.4byte	.LVL170
 18828 0e70 2E000000 		.4byte	.LVL176
 18829 0e74 0100     		.2byte	0x1
 18830 0e76 50       		.byte	0x50
 18831 0e77 2E000000 		.4byte	.LVL176
 18832 0e7b A8030000 		.4byte	.LVL289
 18833 0e7f 0100     		.2byte	0x1
 18834 0e81 54       		.byte	0x54
 18835 0e82 A8030000 		.4byte	.LVL289
 18836 0e86 D4030000 		.4byte	.LFE30
 18837 0e8a 0400     		.2byte	0x4
 18838 0e8c F3       		.byte	0xf3
 18839 0e8d 01       		.uleb128 0x1
 18840 0e8e 50       		.byte	0x50
 18841 0e8f 9F       		.byte	0x9f
 18842 0e90 00000000 		.4byte	0
 18843 0e94 00000000 		.4byte	0
 18844              	.LLST35:
 18845 0e98 00000000 		.4byte	.LVL170
 18846 0e9c 3C000000 		.4byte	.LVL177
 18847 0ea0 0100     		.2byte	0x1
 18848 0ea2 51       		.byte	0x51
 18849 0ea3 3C000000 		.4byte	.LVL177
 18850 0ea7 D4030000 		.4byte	.LFE30
 18851 0eab 0200     		.2byte	0x2
 18852 0ead 91       		.byte	0x91
 18853 0eae 4C       		.sleb128 -52
 18854 0eaf 00000000 		.4byte	0
 18855 0eb3 00000000 		.4byte	0
 18856              	.LLST36:
 18857 0eb7 8C000000 		.4byte	.LVL183
 18858 0ebb B4000000 		.4byte	.LVL185
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 517


 18859 0ebf 0100     		.2byte	0x1
 18860 0ec1 50       		.byte	0x50
 18861 0ec2 00000000 		.4byte	0
 18862 0ec6 00000000 		.4byte	0
 18863              	.LLST37:
 18864 0eca 14000000 		.4byte	.LVL171
 18865 0ece 18000000 		.4byte	.LVL173
 18866 0ed2 0100     		.2byte	0x1
 18867 0ed4 53       		.byte	0x53
 18868 0ed5 22000000 		.4byte	.LVL174
 18869 0ed9 24000000 		.4byte	.LVL175
 18870 0edd 0100     		.2byte	0x1
 18871 0edf 53       		.byte	0x53
 18872 0ee0 24000000 		.4byte	.LVL175
 18873 0ee4 A8030000 		.4byte	.LVL288
 18874 0ee8 0200     		.2byte	0x2
 18875 0eea 7D       		.byte	0x7d
 18876 0eeb 00       		.sleb128 0
 18877 0eec A8030000 		.4byte	.LVL288
 18878 0ef0 D4030000 		.4byte	.LFE30
 18879 0ef4 0200     		.2byte	0x2
 18880 0ef6 91       		.byte	0x91
 18881 0ef7 40       		.sleb128 -64
 18882 0ef8 00000000 		.4byte	0
 18883 0efc 00000000 		.4byte	0
 18884              	.LLST38:
 18885 0f00 16000000 		.4byte	.LVL172
 18886 0f04 18000000 		.4byte	.LVL173
 18887 0f08 0100     		.2byte	0x1
 18888 0f0a 57       		.byte	0x57
 18889 0f0b 24000000 		.4byte	.LVL175
 18890 0f0f B4000000 		.4byte	.LVL185
 18891 0f13 0100     		.2byte	0x1
 18892 0f15 57       		.byte	0x57
 18893 0f16 00000000 		.4byte	0
 18894 0f1a 00000000 		.4byte	0
 18895              	.LLST39:
 18896 0f1e 5C000000 		.4byte	.LVL179
 18897 0f22 5E000000 		.4byte	.LVL180
 18898 0f26 0100     		.2byte	0x1
 18899 0f28 53       		.byte	0x53
 18900 0f29 5E000000 		.4byte	.LVL180
 18901 0f2d 64000000 		.4byte	.LVL181
 18902 0f31 0200     		.2byte	0x2
 18903 0f33 73       		.byte	0x73
 18904 0f34 00       		.sleb128 0
 18905 0f35 64000000 		.4byte	.LVL181
 18906 0f39 71000000 		.4byte	.LVL182-1
 18907 0f3d 0200     		.2byte	0x2
 18908 0f3f 71       		.byte	0x71
 18909 0f40 00       		.sleb128 0
 18910 0f41 71000000 		.4byte	.LVL182-1
 18911 0f45 9A000000 		.4byte	.LVL184
 18912 0f49 0200     		.2byte	0x2
 18913 0f4b 91       		.byte	0x91
 18914 0f4c 48       		.sleb128 -56
 18915 0f4d 9A000000 		.4byte	.LVL184
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 518


 18916 0f51 B4000000 		.4byte	.LVL185
 18917 0f55 0200     		.2byte	0x2
 18918 0f57 30       		.byte	0x30
 18919 0f58 9F       		.byte	0x9f
 18920 0f59 B4000000 		.4byte	.LVL185
 18921 0f5d 9C010000 		.4byte	.LVL205
 18922 0f61 0100     		.2byte	0x1
 18923 0f63 55       		.byte	0x55
 18924 0f64 A0010000 		.4byte	.LVL206
 18925 0f68 0C020000 		.4byte	.LVL219
 18926 0f6c 0100     		.2byte	0x1
 18927 0f6e 55       		.byte	0x55
 18928 0f6f 10020000 		.4byte	.LVL220
 18929 0f73 84030000 		.4byte	.LVL283
 18930 0f77 0100     		.2byte	0x1
 18931 0f79 55       		.byte	0x55
 18932 0f7a 84030000 		.4byte	.LVL283
 18933 0f7e 8C030000 		.4byte	.LVL284
 18934 0f82 0300     		.2byte	0x3
 18935 0f84 75       		.byte	0x75
 18936 0f85 01       		.sleb128 1
 18937 0f86 9F       		.byte	0x9f
 18938 0f87 8C030000 		.4byte	.LVL284
 18939 0f8b 9E030000 		.4byte	.LVL285
 18940 0f8f 0100     		.2byte	0x1
 18941 0f91 55       		.byte	0x55
 18942 0f92 A4030000 		.4byte	.LVL286
 18943 0f96 A6030000 		.4byte	.LVL287
 18944 0f9a 0100     		.2byte	0x1
 18945 0f9c 55       		.byte	0x55
 18946 0f9d 00000000 		.4byte	0
 18947 0fa1 00000000 		.4byte	0
 18948              	.LLST40:
 18949 0fa5 C6000000 		.4byte	.LVL186
 18950 0fa9 C8000000 		.4byte	.LVL187
 18951 0fad 0500     		.2byte	0x5
 18952 0faf 70       		.byte	0x70
 18953 0fb0 00       		.sleb128 0
 18954 0fb1 73       		.byte	0x73
 18955 0fb2 00       		.sleb128 0
 18956 0fb3 22       		.byte	0x22
 18957 0fb4 C8000000 		.4byte	.LVL187
 18958 0fb8 D2000000 		.4byte	.LVL188
 18959 0fbc 0700     		.2byte	0x7
 18960 0fbe 70       		.byte	0x70
 18961 0fbf 00       		.sleb128 0
 18962 0fc0 72       		.byte	0x72
 18963 0fc1 00       		.sleb128 0
 18964 0fc2 22       		.byte	0x22
 18965 0fc3 31       		.byte	0x31
 18966 0fc4 1C       		.byte	0x1c
 18967 0fc5 D2000000 		.4byte	.LVL188
 18968 0fc9 D7000000 		.4byte	.LVL189-1
 18969 0fcd 0900     		.2byte	0x9
 18970 0fcf 70       		.byte	0x70
 18971 0fd0 00       		.sleb128 0
 18972 0fd1 74       		.byte	0x74
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 519


 18973 0fd2 F804     		.sleb128 632
 18974 0fd4 06       		.byte	0x6
 18975 0fd5 22       		.byte	0x22
 18976 0fd6 31       		.byte	0x31
 18977 0fd7 1C       		.byte	0x1c
 18978 0fd8 0A010000 		.4byte	.LVL197
 18979 0fdc 64010000 		.4byte	.LVL201
 18980 0fe0 0200     		.2byte	0x2
 18981 0fe2 91       		.byte	0x91
 18982 0fe3 48       		.sleb128 -56
 18983 0fe4 10020000 		.4byte	.LVL220
 18984 0fe8 B2020000 		.4byte	.LVL259
 18985 0fec 0200     		.2byte	0x2
 18986 0fee 91       		.byte	0x91
 18987 0fef 48       		.sleb128 -56
 18988 0ff0 80030000 		.4byte	.LVL281
 18989 0ff4 82030000 		.4byte	.LVL282
 18990 0ff8 0700     		.2byte	0x7
 18991 0ffa 70       		.byte	0x70
 18992 0ffb 00       		.sleb128 0
 18993 0ffc 72       		.byte	0x72
 18994 0ffd 00       		.sleb128 0
 18995 0ffe 22       		.byte	0x22
 18996 0fff 31       		.byte	0x31
 18997 1000 1C       		.byte	0x1c
 18998 1001 82030000 		.4byte	.LVL282
 18999 1005 84030000 		.4byte	.LVL283
 19000 1009 0900     		.2byte	0x9
 19001 100b 74       		.byte	0x74
 19002 100c F404     		.sleb128 628
 19003 100e 06       		.byte	0x6
 19004 100f 72       		.byte	0x72
 19005 1010 00       		.sleb128 0
 19006 1011 22       		.byte	0x22
 19007 1012 31       		.byte	0x31
 19008 1013 1C       		.byte	0x1c
 19009 1014 8C030000 		.4byte	.LVL284
 19010 1018 A6030000 		.4byte	.LVL287
 19011 101c 0200     		.2byte	0x2
 19012 101e 91       		.byte	0x91
 19013 101f 48       		.sleb128 -56
 19014 1020 00000000 		.4byte	0
 19015 1024 00000000 		.4byte	0
 19016              	.LLST41:
 19017 1028 EA000000 		.4byte	.LVL190
 19018 102c EC000000 		.4byte	.LVL191
 19019 1030 0500     		.2byte	0x5
 19020 1032 51       		.byte	0x51
 19021 1033 93       		.byte	0x93
 19022 1034 01       		.uleb128 0x1
 19023 1035 93       		.byte	0x93
 19024 1036 01       		.uleb128 0x1
 19025 1037 EC000000 		.4byte	.LVL191
 19026 103b F8000000 		.4byte	.LVL193
 19027 103f 0600     		.2byte	0x6
 19028 1041 51       		.byte	0x51
 19029 1042 93       		.byte	0x93
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 520


 19030 1043 01       		.uleb128 0x1
 19031 1044 53       		.byte	0x53
 19032 1045 93       		.byte	0x93
 19033 1046 01       		.uleb128 0x1
 19034 1047 F8000000 		.4byte	.LVL193
 19035 104b FA000000 		.4byte	.LVL194
 19036 104f 0700     		.2byte	0x7
 19037 1051 76       		.byte	0x76
 19038 1052 00       		.sleb128 0
 19039 1053 93       		.byte	0x93
 19040 1054 01       		.uleb128 0x1
 19041 1055 53       		.byte	0x53
 19042 1056 93       		.byte	0x93
 19043 1057 01       		.uleb128 0x1
 19044 1058 FA000000 		.4byte	.LVL194
 19045 105c FE000000 		.4byte	.LVL195
 19046 1060 0800     		.2byte	0x8
 19047 1062 76       		.byte	0x76
 19048 1063 00       		.sleb128 0
 19049 1064 93       		.byte	0x93
 19050 1065 01       		.uleb128 0x1
 19051 1066 76       		.byte	0x76
 19052 1067 01       		.sleb128 1
 19053 1068 93       		.byte	0x93
 19054 1069 01       		.uleb128 0x1
 19055 106a A0010000 		.4byte	.LVL206
 19056 106e A8010000 		.4byte	.LVL207
 19057 1072 0600     		.2byte	0x6
 19058 1074 51       		.byte	0x51
 19059 1075 93       		.byte	0x93
 19060 1076 01       		.uleb128 0x1
 19061 1077 53       		.byte	0x53
 19062 1078 93       		.byte	0x93
 19063 1079 01       		.uleb128 0x1
 19064 107a A8010000 		.4byte	.LVL207
 19065 107e AE010000 		.4byte	.LVL208
 19066 1082 0900     		.2byte	0x9
 19067 1084 51       		.byte	0x51
 19068 1085 93       		.byte	0x93
 19069 1086 01       		.uleb128 0x1
 19070 1087 73       		.byte	0x73
 19071 1088 8601     		.sleb128 134
 19072 108a 9F       		.byte	0x9f
 19073 108b 93       		.byte	0x93
 19074 108c 01       		.uleb128 0x1
 19075 108d AE010000 		.4byte	.LVL208
 19076 1091 B2010000 		.4byte	.LVL209
 19077 1095 0A00     		.2byte	0xa
 19078 1097 76       		.byte	0x76
 19079 1098 00       		.sleb128 0
 19080 1099 93       		.byte	0x93
 19081 109a 01       		.uleb128 0x1
 19082 109b 77       		.byte	0x77
 19083 109c 8601     		.sleb128 134
 19084 109e 9F       		.byte	0x9f
 19085 109f 93       		.byte	0x93
 19086 10a0 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 521


 19087 10a1 B2010000 		.4byte	.LVL209
 19088 10a5 C0010000 		.4byte	.LVL211
 19089 10a9 0800     		.2byte	0x8
 19090 10ab 76       		.byte	0x76
 19091 10ac 00       		.sleb128 0
 19092 10ad 93       		.byte	0x93
 19093 10ae 01       		.uleb128 0x1
 19094 10af 76       		.byte	0x76
 19095 10b0 01       		.sleb128 1
 19096 10b1 93       		.byte	0x93
 19097 10b2 01       		.uleb128 0x1
 19098 10b3 B2020000 		.4byte	.LVL259
 19099 10b7 B8020000 		.4byte	.LVL260
 19100 10bb 0600     		.2byte	0x6
 19101 10bd 51       		.byte	0x51
 19102 10be 93       		.byte	0x93
 19103 10bf 01       		.uleb128 0x1
 19104 10c0 53       		.byte	0x53
 19105 10c1 93       		.byte	0x93
 19106 10c2 01       		.uleb128 0x1
 19107 10c3 B8020000 		.4byte	.LVL260
 19108 10c7 BC020000 		.4byte	.LVL261
 19109 10cb 0900     		.2byte	0x9
 19110 10cd 51       		.byte	0x51
 19111 10ce 93       		.byte	0x93
 19112 10cf 01       		.uleb128 0x1
 19113 10d0 73       		.byte	0x73
 19114 10d1 9201     		.sleb128 146
 19115 10d3 9F       		.byte	0x9f
 19116 10d4 93       		.byte	0x93
 19117 10d5 01       		.uleb128 0x1
 19118 10d6 BC020000 		.4byte	.LVL261
 19119 10da BE020000 		.4byte	.LVL262
 19120 10de 0A00     		.2byte	0xa
 19121 10e0 76       		.byte	0x76
 19122 10e1 00       		.sleb128 0
 19123 10e2 93       		.byte	0x93
 19124 10e3 01       		.uleb128 0x1
 19125 10e4 73       		.byte	0x73
 19126 10e5 9201     		.sleb128 146
 19127 10e7 9F       		.byte	0x9f
 19128 10e8 93       		.byte	0x93
 19129 10e9 01       		.uleb128 0x1
 19130 10ea BE020000 		.4byte	.LVL262
 19131 10ee C4020000 		.4byte	.LVL263
 19132 10f2 0800     		.2byte	0x8
 19133 10f4 76       		.byte	0x76
 19134 10f5 00       		.sleb128 0
 19135 10f6 93       		.byte	0x93
 19136 10f7 01       		.uleb128 0x1
 19137 10f8 76       		.byte	0x76
 19138 10f9 01       		.sleb128 1
 19139 10fa 93       		.byte	0x93
 19140 10fb 01       		.uleb128 0x1
 19141 10fc C4020000 		.4byte	.LVL263
 19142 1100 CA020000 		.4byte	.LVL264
 19143 1104 0600     		.2byte	0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 522


 19144 1106 51       		.byte	0x51
 19145 1107 93       		.byte	0x93
 19146 1108 01       		.uleb128 0x1
 19147 1109 53       		.byte	0x53
 19148 110a 93       		.byte	0x93
 19149 110b 01       		.uleb128 0x1
 19150 110c 00000000 		.4byte	0
 19151 1110 00000000 		.4byte	0
 19152              	.LLST42:
 19153 1114 B4000000 		.4byte	.LVL185
 19154 1118 2C010000 		.4byte	.LVL199
 19155 111c 0200     		.2byte	0x2
 19156 111e 30       		.byte	0x30
 19157 111f 9F       		.byte	0x9f
 19158 1120 2C010000 		.4byte	.LVL199
 19159 1124 5A010000 		.4byte	.LVL200
 19160 1128 0100     		.2byte	0x1
 19161 112a 53       		.byte	0x53
 19162 112b 74010000 		.4byte	.LVL202
 19163 112f 9C010000 		.4byte	.LVL205
 19164 1133 0200     		.2byte	0x2
 19165 1135 30       		.byte	0x30
 19166 1136 9F       		.byte	0x9f
 19167 1137 A0010000 		.4byte	.LVL206
 19168 113b E2010000 		.4byte	.LVL213
 19169 113f 0200     		.2byte	0x2
 19170 1141 30       		.byte	0x30
 19171 1142 9F       		.byte	0x9f
 19172 1143 10020000 		.4byte	.LVL220
 19173 1147 36020000 		.4byte	.LVL221
 19174 114b 0100     		.2byte	0x1
 19175 114d 53       		.byte	0x53
 19176 114e 36020000 		.4byte	.LVL221
 19177 1152 3A020000 		.4byte	.LVL222
 19178 1156 1E00     		.2byte	0x1e
 19179 1158 0A       		.byte	0xa
 19180 1159 0001     		.2byte	0x100
 19181 115b 75       		.byte	0x75
 19182 115c 00       		.sleb128 0
 19183 115d 1C       		.byte	0x1c
 19184 115e 4F       		.byte	0x4f
 19185 115f 25       		.byte	0x25
 19186 1160 70       		.byte	0x70
 19187 1161 00       		.sleb128 0
 19188 1162 22       		.byte	0x22
 19189 1163 77       		.byte	0x77
 19190 1164 0D       		.sleb128 13
 19191 1165 40       		.byte	0x40
 19192 1166 4B       		.byte	0x4b
 19193 1167 24       		.byte	0x24
 19194 1168 22       		.byte	0x22
 19195 1169 0A       		.byte	0xa
 19196 116a 0001     		.2byte	0x100
 19197 116c 75       		.byte	0x75
 19198 116d 00       		.sleb128 0
 19199 116e 1C       		.byte	0x1c
 19200 116f 40       		.byte	0x40
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 523


 19201 1170 4B       		.byte	0x4b
 19202 1171 24       		.byte	0x24
 19203 1172 22       		.byte	0x22
 19204 1173 2A       		.byte	0x2a
 19205 1174 22       		.byte	0x22
 19206 1175 9F       		.byte	0x9f
 19207 1176 3A020000 		.4byte	.LVL222
 19208 117a 3C020000 		.4byte	.LVL223
 19209 117e 2000     		.2byte	0x20
 19210 1180 0A       		.byte	0xa
 19211 1181 0001     		.2byte	0x100
 19212 1183 75       		.byte	0x75
 19213 1184 00       		.sleb128 0
 19214 1185 1C       		.byte	0x1c
 19215 1186 4F       		.byte	0x4f
 19216 1187 25       		.byte	0x25
 19217 1188 77       		.byte	0x77
 19218 1189 0D       		.sleb128 13
 19219 118a 4F       		.byte	0x4f
 19220 118b 26       		.byte	0x26
 19221 118c 22       		.byte	0x22
 19222 118d 77       		.byte	0x77
 19223 118e 0D       		.sleb128 13
 19224 118f 40       		.byte	0x40
 19225 1190 4B       		.byte	0x4b
 19226 1191 24       		.byte	0x24
 19227 1192 22       		.byte	0x22
 19228 1193 0A       		.byte	0xa
 19229 1194 0001     		.2byte	0x100
 19230 1196 75       		.byte	0x75
 19231 1197 00       		.sleb128 0
 19232 1198 1C       		.byte	0x1c
 19233 1199 40       		.byte	0x40
 19234 119a 4B       		.byte	0x4b
 19235 119b 24       		.byte	0x24
 19236 119c 22       		.byte	0x22
 19237 119d 2A       		.byte	0x2a
 19238 119e 22       		.byte	0x22
 19239 119f 9F       		.byte	0x9f
 19240 11a0 3C020000 		.4byte	.LVL223
 19241 11a4 42020000 		.4byte	.LVL224
 19242 11a8 0100     		.2byte	0x1
 19243 11aa 53       		.byte	0x53
 19244 11ab 42020000 		.4byte	.LVL224
 19245 11af 44020000 		.4byte	.LVL225
 19246 11b3 1600     		.2byte	0x16
 19247 11b5 72       		.byte	0x72
 19248 11b6 00       		.sleb128 0
 19249 11b7 4F       		.byte	0x4f
 19250 11b8 25       		.byte	0x25
 19251 11b9 70       		.byte	0x70
 19252 11ba 00       		.sleb128 0
 19253 11bb 22       		.byte	0x22
 19254 11bc 71       		.byte	0x71
 19255 11bd 00       		.sleb128 0
 19256 11be 40       		.byte	0x40
 19257 11bf 4B       		.byte	0x4b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 524


 19258 11c0 24       		.byte	0x24
 19259 11c1 22       		.byte	0x22
 19260 11c2 72       		.byte	0x72
 19261 11c3 00       		.sleb128 0
 19262 11c4 40       		.byte	0x40
 19263 11c5 4B       		.byte	0x4b
 19264 11c6 24       		.byte	0x24
 19265 11c7 22       		.byte	0x22
 19266 11c8 2A       		.byte	0x2a
 19267 11c9 22       		.byte	0x22
 19268 11ca 9F       		.byte	0x9f
 19269 11cb 44020000 		.4byte	.LVL225
 19270 11cf 46020000 		.4byte	.LVL226
 19271 11d3 1600     		.2byte	0x16
 19272 11d5 72       		.byte	0x72
 19273 11d6 00       		.sleb128 0
 19274 11d7 4F       		.byte	0x4f
 19275 11d8 25       		.byte	0x25
 19276 11d9 70       		.byte	0x70
 19277 11da 00       		.sleb128 0
 19278 11db 22       		.byte	0x22
 19279 11dc 77       		.byte	0x77
 19280 11dd 0D       		.sleb128 13
 19281 11de 40       		.byte	0x40
 19282 11df 4B       		.byte	0x4b
 19283 11e0 24       		.byte	0x24
 19284 11e1 22       		.byte	0x22
 19285 11e2 72       		.byte	0x72
 19286 11e3 00       		.sleb128 0
 19287 11e4 40       		.byte	0x40
 19288 11e5 4B       		.byte	0x4b
 19289 11e6 24       		.byte	0x24
 19290 11e7 22       		.byte	0x22
 19291 11e8 2A       		.byte	0x2a
 19292 11e9 22       		.byte	0x22
 19293 11ea 9F       		.byte	0x9f
 19294 11eb 46020000 		.4byte	.LVL226
 19295 11ef 48020000 		.4byte	.LVL227
 19296 11f3 1800     		.2byte	0x18
 19297 11f5 72       		.byte	0x72
 19298 11f6 00       		.sleb128 0
 19299 11f7 4F       		.byte	0x4f
 19300 11f8 25       		.byte	0x25
 19301 11f9 77       		.byte	0x77
 19302 11fa 0D       		.sleb128 13
 19303 11fb 4F       		.byte	0x4f
 19304 11fc 26       		.byte	0x26
 19305 11fd 22       		.byte	0x22
 19306 11fe 77       		.byte	0x77
 19307 11ff 0D       		.sleb128 13
 19308 1200 40       		.byte	0x40
 19309 1201 4B       		.byte	0x4b
 19310 1202 24       		.byte	0x24
 19311 1203 22       		.byte	0x22
 19312 1204 72       		.byte	0x72
 19313 1205 00       		.sleb128 0
 19314 1206 40       		.byte	0x40
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 525


 19315 1207 4B       		.byte	0x4b
 19316 1208 24       		.byte	0x24
 19317 1209 22       		.byte	0x22
 19318 120a 2A       		.byte	0x2a
 19319 120b 22       		.byte	0x22
 19320 120c 9F       		.byte	0x9f
 19321 120d 48020000 		.4byte	.LVL227
 19322 1211 4E020000 		.4byte	.LVL228
 19323 1215 0100     		.2byte	0x1
 19324 1217 53       		.byte	0x53
 19325 1218 4E020000 		.4byte	.LVL228
 19326 121c 50020000 		.4byte	.LVL229
 19327 1220 1600     		.2byte	0x16
 19328 1222 72       		.byte	0x72
 19329 1223 00       		.sleb128 0
 19330 1224 4F       		.byte	0x4f
 19331 1225 25       		.byte	0x25
 19332 1226 70       		.byte	0x70
 19333 1227 00       		.sleb128 0
 19334 1228 22       		.byte	0x22
 19335 1229 71       		.byte	0x71
 19336 122a 00       		.sleb128 0
 19337 122b 40       		.byte	0x40
 19338 122c 4B       		.byte	0x4b
 19339 122d 24       		.byte	0x24
 19340 122e 22       		.byte	0x22
 19341 122f 72       		.byte	0x72
 19342 1230 00       		.sleb128 0
 19343 1231 40       		.byte	0x40
 19344 1232 4B       		.byte	0x4b
 19345 1233 24       		.byte	0x24
 19346 1234 22       		.byte	0x22
 19347 1235 2A       		.byte	0x2a
 19348 1236 22       		.byte	0x22
 19349 1237 9F       		.byte	0x9f
 19350 1238 50020000 		.4byte	.LVL229
 19351 123c 52020000 		.4byte	.LVL230
 19352 1240 1600     		.2byte	0x16
 19353 1242 72       		.byte	0x72
 19354 1243 00       		.sleb128 0
 19355 1244 4F       		.byte	0x4f
 19356 1245 25       		.byte	0x25
 19357 1246 70       		.byte	0x70
 19358 1247 00       		.sleb128 0
 19359 1248 22       		.byte	0x22
 19360 1249 77       		.byte	0x77
 19361 124a 0D       		.sleb128 13
 19362 124b 40       		.byte	0x40
 19363 124c 4B       		.byte	0x4b
 19364 124d 24       		.byte	0x24
 19365 124e 22       		.byte	0x22
 19366 124f 72       		.byte	0x72
 19367 1250 00       		.sleb128 0
 19368 1251 40       		.byte	0x40
 19369 1252 4B       		.byte	0x4b
 19370 1253 24       		.byte	0x24
 19371 1254 22       		.byte	0x22
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 526


 19372 1255 2A       		.byte	0x2a
 19373 1256 22       		.byte	0x22
 19374 1257 9F       		.byte	0x9f
 19375 1258 52020000 		.4byte	.LVL230
 19376 125c 54020000 		.4byte	.LVL231
 19377 1260 1800     		.2byte	0x18
 19378 1262 72       		.byte	0x72
 19379 1263 00       		.sleb128 0
 19380 1264 4F       		.byte	0x4f
 19381 1265 25       		.byte	0x25
 19382 1266 77       		.byte	0x77
 19383 1267 0D       		.sleb128 13
 19384 1268 4F       		.byte	0x4f
 19385 1269 26       		.byte	0x26
 19386 126a 22       		.byte	0x22
 19387 126b 77       		.byte	0x77
 19388 126c 0D       		.sleb128 13
 19389 126d 40       		.byte	0x40
 19390 126e 4B       		.byte	0x4b
 19391 126f 24       		.byte	0x24
 19392 1270 22       		.byte	0x22
 19393 1271 72       		.byte	0x72
 19394 1272 00       		.sleb128 0
 19395 1273 40       		.byte	0x40
 19396 1274 4B       		.byte	0x4b
 19397 1275 24       		.byte	0x24
 19398 1276 22       		.byte	0x22
 19399 1277 2A       		.byte	0x2a
 19400 1278 22       		.byte	0x22
 19401 1279 9F       		.byte	0x9f
 19402 127a 54020000 		.4byte	.LVL231
 19403 127e 5C020000 		.4byte	.LVL232
 19404 1282 0100     		.2byte	0x1
 19405 1284 53       		.byte	0x53
 19406 1285 5C020000 		.4byte	.LVL232
 19407 1289 5E020000 		.4byte	.LVL233
 19408 128d 1600     		.2byte	0x16
 19409 128f 72       		.byte	0x72
 19410 1290 00       		.sleb128 0
 19411 1291 4F       		.byte	0x4f
 19412 1292 25       		.byte	0x25
 19413 1293 70       		.byte	0x70
 19414 1294 00       		.sleb128 0
 19415 1295 22       		.byte	0x22
 19416 1296 71       		.byte	0x71
 19417 1297 00       		.sleb128 0
 19418 1298 40       		.byte	0x40
 19419 1299 4B       		.byte	0x4b
 19420 129a 24       		.byte	0x24
 19421 129b 22       		.byte	0x22
 19422 129c 72       		.byte	0x72
 19423 129d 00       		.sleb128 0
 19424 129e 40       		.byte	0x40
 19425 129f 4B       		.byte	0x4b
 19426 12a0 24       		.byte	0x24
 19427 12a1 22       		.byte	0x22
 19428 12a2 2A       		.byte	0x2a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 527


 19429 12a3 22       		.byte	0x22
 19430 12a4 9F       		.byte	0x9f
 19431 12a5 5E020000 		.4byte	.LVL233
 19432 12a9 60020000 		.4byte	.LVL234
 19433 12ad 1600     		.2byte	0x16
 19434 12af 72       		.byte	0x72
 19435 12b0 00       		.sleb128 0
 19436 12b1 4F       		.byte	0x4f
 19437 12b2 25       		.byte	0x25
 19438 12b3 70       		.byte	0x70
 19439 12b4 00       		.sleb128 0
 19440 12b5 22       		.byte	0x22
 19441 12b6 77       		.byte	0x77
 19442 12b7 0D       		.sleb128 13
 19443 12b8 40       		.byte	0x40
 19444 12b9 4B       		.byte	0x4b
 19445 12ba 24       		.byte	0x24
 19446 12bb 22       		.byte	0x22
 19447 12bc 72       		.byte	0x72
 19448 12bd 00       		.sleb128 0
 19449 12be 40       		.byte	0x40
 19450 12bf 4B       		.byte	0x4b
 19451 12c0 24       		.byte	0x24
 19452 12c1 22       		.byte	0x22
 19453 12c2 2A       		.byte	0x2a
 19454 12c3 22       		.byte	0x22
 19455 12c4 9F       		.byte	0x9f
 19456 12c5 60020000 		.4byte	.LVL234
 19457 12c9 62020000 		.4byte	.LVL235
 19458 12cd 1800     		.2byte	0x18
 19459 12cf 72       		.byte	0x72
 19460 12d0 00       		.sleb128 0
 19461 12d1 4F       		.byte	0x4f
 19462 12d2 25       		.byte	0x25
 19463 12d3 77       		.byte	0x77
 19464 12d4 0D       		.sleb128 13
 19465 12d5 4F       		.byte	0x4f
 19466 12d6 26       		.byte	0x26
 19467 12d7 22       		.byte	0x22
 19468 12d8 77       		.byte	0x77
 19469 12d9 0D       		.sleb128 13
 19470 12da 40       		.byte	0x40
 19471 12db 4B       		.byte	0x4b
 19472 12dc 24       		.byte	0x24
 19473 12dd 22       		.byte	0x22
 19474 12de 72       		.byte	0x72
 19475 12df 00       		.sleb128 0
 19476 12e0 40       		.byte	0x40
 19477 12e1 4B       		.byte	0x4b
 19478 12e2 24       		.byte	0x24
 19479 12e3 22       		.byte	0x22
 19480 12e4 2A       		.byte	0x2a
 19481 12e5 22       		.byte	0x22
 19482 12e6 9F       		.byte	0x9f
 19483 12e7 62020000 		.4byte	.LVL235
 19484 12eb 6A020000 		.4byte	.LVL236
 19485 12ef 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 528


 19486 12f1 53       		.byte	0x53
 19487 12f2 6A020000 		.4byte	.LVL236
 19488 12f6 6C020000 		.4byte	.LVL237
 19489 12fa 1600     		.2byte	0x16
 19490 12fc 72       		.byte	0x72
 19491 12fd 00       		.sleb128 0
 19492 12fe 4F       		.byte	0x4f
 19493 12ff 25       		.byte	0x25
 19494 1300 70       		.byte	0x70
 19495 1301 00       		.sleb128 0
 19496 1302 22       		.byte	0x22
 19497 1303 71       		.byte	0x71
 19498 1304 00       		.sleb128 0
 19499 1305 40       		.byte	0x40
 19500 1306 4B       		.byte	0x4b
 19501 1307 24       		.byte	0x24
 19502 1308 22       		.byte	0x22
 19503 1309 72       		.byte	0x72
 19504 130a 00       		.sleb128 0
 19505 130b 40       		.byte	0x40
 19506 130c 4B       		.byte	0x4b
 19507 130d 24       		.byte	0x24
 19508 130e 22       		.byte	0x22
 19509 130f 2A       		.byte	0x2a
 19510 1310 22       		.byte	0x22
 19511 1311 9F       		.byte	0x9f
 19512 1312 6C020000 		.4byte	.LVL237
 19513 1316 6E020000 		.4byte	.LVL238
 19514 131a 1600     		.2byte	0x16
 19515 131c 72       		.byte	0x72
 19516 131d 00       		.sleb128 0
 19517 131e 4F       		.byte	0x4f
 19518 131f 25       		.byte	0x25
 19519 1320 70       		.byte	0x70
 19520 1321 00       		.sleb128 0
 19521 1322 22       		.byte	0x22
 19522 1323 77       		.byte	0x77
 19523 1324 0D       		.sleb128 13
 19524 1325 40       		.byte	0x40
 19525 1326 4B       		.byte	0x4b
 19526 1327 24       		.byte	0x24
 19527 1328 22       		.byte	0x22
 19528 1329 72       		.byte	0x72
 19529 132a 00       		.sleb128 0
 19530 132b 40       		.byte	0x40
 19531 132c 4B       		.byte	0x4b
 19532 132d 24       		.byte	0x24
 19533 132e 22       		.byte	0x22
 19534 132f 2A       		.byte	0x2a
 19535 1330 22       		.byte	0x22
 19536 1331 9F       		.byte	0x9f
 19537 1332 6E020000 		.4byte	.LVL238
 19538 1336 70020000 		.4byte	.LVL239
 19539 133a 1800     		.2byte	0x18
 19540 133c 72       		.byte	0x72
 19541 133d 00       		.sleb128 0
 19542 133e 4F       		.byte	0x4f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 529


 19543 133f 25       		.byte	0x25
 19544 1340 77       		.byte	0x77
 19545 1341 0D       		.sleb128 13
 19546 1342 4F       		.byte	0x4f
 19547 1343 26       		.byte	0x26
 19548 1344 22       		.byte	0x22
 19549 1345 77       		.byte	0x77
 19550 1346 0D       		.sleb128 13
 19551 1347 40       		.byte	0x40
 19552 1348 4B       		.byte	0x4b
 19553 1349 24       		.byte	0x24
 19554 134a 22       		.byte	0x22
 19555 134b 72       		.byte	0x72
 19556 134c 00       		.sleb128 0
 19557 134d 40       		.byte	0x40
 19558 134e 4B       		.byte	0x4b
 19559 134f 24       		.byte	0x24
 19560 1350 22       		.byte	0x22
 19561 1351 2A       		.byte	0x2a
 19562 1352 22       		.byte	0x22
 19563 1353 9F       		.byte	0x9f
 19564 1354 70020000 		.4byte	.LVL239
 19565 1358 78020000 		.4byte	.LVL240
 19566 135c 0100     		.2byte	0x1
 19567 135e 53       		.byte	0x53
 19568 135f 78020000 		.4byte	.LVL240
 19569 1363 7A020000 		.4byte	.LVL241
 19570 1367 1600     		.2byte	0x16
 19571 1369 72       		.byte	0x72
 19572 136a 00       		.sleb128 0
 19573 136b 4F       		.byte	0x4f
 19574 136c 25       		.byte	0x25
 19575 136d 70       		.byte	0x70
 19576 136e 00       		.sleb128 0
 19577 136f 22       		.byte	0x22
 19578 1370 71       		.byte	0x71
 19579 1371 00       		.sleb128 0
 19580 1372 40       		.byte	0x40
 19581 1373 4B       		.byte	0x4b
 19582 1374 24       		.byte	0x24
 19583 1375 22       		.byte	0x22
 19584 1376 72       		.byte	0x72
 19585 1377 00       		.sleb128 0
 19586 1378 40       		.byte	0x40
 19587 1379 4B       		.byte	0x4b
 19588 137a 24       		.byte	0x24
 19589 137b 22       		.byte	0x22
 19590 137c 2A       		.byte	0x2a
 19591 137d 22       		.byte	0x22
 19592 137e 9F       		.byte	0x9f
 19593 137f 7A020000 		.4byte	.LVL241
 19594 1383 7C020000 		.4byte	.LVL242
 19595 1387 1600     		.2byte	0x16
 19596 1389 72       		.byte	0x72
 19597 138a 00       		.sleb128 0
 19598 138b 4F       		.byte	0x4f
 19599 138c 25       		.byte	0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 530


 19600 138d 70       		.byte	0x70
 19601 138e 00       		.sleb128 0
 19602 138f 22       		.byte	0x22
 19603 1390 77       		.byte	0x77
 19604 1391 0D       		.sleb128 13
 19605 1392 40       		.byte	0x40
 19606 1393 4B       		.byte	0x4b
 19607 1394 24       		.byte	0x24
 19608 1395 22       		.byte	0x22
 19609 1396 72       		.byte	0x72
 19610 1397 00       		.sleb128 0
 19611 1398 40       		.byte	0x40
 19612 1399 4B       		.byte	0x4b
 19613 139a 24       		.byte	0x24
 19614 139b 22       		.byte	0x22
 19615 139c 2A       		.byte	0x2a
 19616 139d 22       		.byte	0x22
 19617 139e 9F       		.byte	0x9f
 19618 139f 7C020000 		.4byte	.LVL242
 19619 13a3 7E020000 		.4byte	.LVL243
 19620 13a7 1800     		.2byte	0x18
 19621 13a9 72       		.byte	0x72
 19622 13aa 00       		.sleb128 0
 19623 13ab 4F       		.byte	0x4f
 19624 13ac 25       		.byte	0x25
 19625 13ad 77       		.byte	0x77
 19626 13ae 0D       		.sleb128 13
 19627 13af 4F       		.byte	0x4f
 19628 13b0 26       		.byte	0x26
 19629 13b1 22       		.byte	0x22
 19630 13b2 77       		.byte	0x77
 19631 13b3 0D       		.sleb128 13
 19632 13b4 40       		.byte	0x40
 19633 13b5 4B       		.byte	0x4b
 19634 13b6 24       		.byte	0x24
 19635 13b7 22       		.byte	0x22
 19636 13b8 72       		.byte	0x72
 19637 13b9 00       		.sleb128 0
 19638 13ba 40       		.byte	0x40
 19639 13bb 4B       		.byte	0x4b
 19640 13bc 24       		.byte	0x24
 19641 13bd 22       		.byte	0x22
 19642 13be 2A       		.byte	0x2a
 19643 13bf 22       		.byte	0x22
 19644 13c0 9F       		.byte	0x9f
 19645 13c1 7E020000 		.4byte	.LVL243
 19646 13c5 84020000 		.4byte	.LVL245
 19647 13c9 2000     		.2byte	0x20
 19648 13cb 0A       		.byte	0xa
 19649 13cc 0001     		.2byte	0x100
 19650 13ce 75       		.byte	0x75
 19651 13cf 00       		.sleb128 0
 19652 13d0 1C       		.byte	0x1c
 19653 13d1 4F       		.byte	0x4f
 19654 13d2 25       		.byte	0x25
 19655 13d3 77       		.byte	0x77
 19656 13d4 0D       		.sleb128 13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 531


 19657 13d5 4F       		.byte	0x4f
 19658 13d6 26       		.byte	0x26
 19659 13d7 22       		.byte	0x22
 19660 13d8 77       		.byte	0x77
 19661 13d9 0D       		.sleb128 13
 19662 13da 40       		.byte	0x40
 19663 13db 4B       		.byte	0x4b
 19664 13dc 24       		.byte	0x24
 19665 13dd 22       		.byte	0x22
 19666 13de 0A       		.byte	0xa
 19667 13df 0001     		.2byte	0x100
 19668 13e1 75       		.byte	0x75
 19669 13e2 00       		.sleb128 0
 19670 13e3 1C       		.byte	0x1c
 19671 13e4 40       		.byte	0x40
 19672 13e5 4B       		.byte	0x4b
 19673 13e6 24       		.byte	0x24
 19674 13e7 22       		.byte	0x22
 19675 13e8 2A       		.byte	0x2a
 19676 13e9 22       		.byte	0x22
 19677 13ea 9F       		.byte	0x9f
 19678 13eb 84020000 		.4byte	.LVL245
 19679 13ef 86020000 		.4byte	.LVL246
 19680 13f3 2000     		.2byte	0x20
 19681 13f5 0A       		.byte	0xa
 19682 13f6 0301     		.2byte	0x103
 19683 13f8 75       		.byte	0x75
 19684 13f9 00       		.sleb128 0
 19685 13fa 1C       		.byte	0x1c
 19686 13fb 4F       		.byte	0x4f
 19687 13fc 25       		.byte	0x25
 19688 13fd 77       		.byte	0x77
 19689 13fe 0D       		.sleb128 13
 19690 13ff 4F       		.byte	0x4f
 19691 1400 26       		.byte	0x26
 19692 1401 22       		.byte	0x22
 19693 1402 77       		.byte	0x77
 19694 1403 0D       		.sleb128 13
 19695 1404 40       		.byte	0x40
 19696 1405 4B       		.byte	0x4b
 19697 1406 24       		.byte	0x24
 19698 1407 22       		.byte	0x22
 19699 1408 0A       		.byte	0xa
 19700 1409 0301     		.2byte	0x103
 19701 140b 75       		.byte	0x75
 19702 140c 00       		.sleb128 0
 19703 140d 1C       		.byte	0x1c
 19704 140e 40       		.byte	0x40
 19705 140f 4B       		.byte	0x4b
 19706 1410 24       		.byte	0x24
 19707 1411 22       		.byte	0x22
 19708 1412 2A       		.byte	0x2a
 19709 1413 22       		.byte	0x22
 19710 1414 9F       		.byte	0x9f
 19711 1415 86020000 		.4byte	.LVL246
 19712 1419 8E020000 		.4byte	.LVL247
 19713 141d 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 532


 19714 141f 53       		.byte	0x53
 19715 1420 8E020000 		.4byte	.LVL247
 19716 1424 90020000 		.4byte	.LVL248
 19717 1428 1600     		.2byte	0x16
 19718 142a 72       		.byte	0x72
 19719 142b 00       		.sleb128 0
 19720 142c 4F       		.byte	0x4f
 19721 142d 25       		.byte	0x25
 19722 142e 70       		.byte	0x70
 19723 142f 00       		.sleb128 0
 19724 1430 22       		.byte	0x22
 19725 1431 71       		.byte	0x71
 19726 1432 00       		.sleb128 0
 19727 1433 40       		.byte	0x40
 19728 1434 4B       		.byte	0x4b
 19729 1435 24       		.byte	0x24
 19730 1436 22       		.byte	0x22
 19731 1437 72       		.byte	0x72
 19732 1438 00       		.sleb128 0
 19733 1439 40       		.byte	0x40
 19734 143a 4B       		.byte	0x4b
 19735 143b 24       		.byte	0x24
 19736 143c 22       		.byte	0x22
 19737 143d 2A       		.byte	0x2a
 19738 143e 22       		.byte	0x22
 19739 143f 9F       		.byte	0x9f
 19740 1440 90020000 		.4byte	.LVL248
 19741 1444 92020000 		.4byte	.LVL249
 19742 1448 1600     		.2byte	0x16
 19743 144a 72       		.byte	0x72
 19744 144b 00       		.sleb128 0
 19745 144c 4F       		.byte	0x4f
 19746 144d 25       		.byte	0x25
 19747 144e 70       		.byte	0x70
 19748 144f 00       		.sleb128 0
 19749 1450 22       		.byte	0x22
 19750 1451 77       		.byte	0x77
 19751 1452 0D       		.sleb128 13
 19752 1453 40       		.byte	0x40
 19753 1454 4B       		.byte	0x4b
 19754 1455 24       		.byte	0x24
 19755 1456 22       		.byte	0x22
 19756 1457 72       		.byte	0x72
 19757 1458 00       		.sleb128 0
 19758 1459 40       		.byte	0x40
 19759 145a 4B       		.byte	0x4b
 19760 145b 24       		.byte	0x24
 19761 145c 22       		.byte	0x22
 19762 145d 2A       		.byte	0x2a
 19763 145e 22       		.byte	0x22
 19764 145f 9F       		.byte	0x9f
 19765 1460 92020000 		.4byte	.LVL249
 19766 1464 9A020000 		.4byte	.LVL251
 19767 1468 2000     		.2byte	0x20
 19768 146a 0A       		.byte	0xa
 19769 146b 0001     		.2byte	0x100
 19770 146d 75       		.byte	0x75
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 533


 19771 146e 00       		.sleb128 0
 19772 146f 1C       		.byte	0x1c
 19773 1470 4F       		.byte	0x4f
 19774 1471 25       		.byte	0x25
 19775 1472 77       		.byte	0x77
 19776 1473 0D       		.sleb128 13
 19777 1474 4F       		.byte	0x4f
 19778 1475 26       		.byte	0x26
 19779 1476 22       		.byte	0x22
 19780 1477 77       		.byte	0x77
 19781 1478 0D       		.sleb128 13
 19782 1479 40       		.byte	0x40
 19783 147a 4B       		.byte	0x4b
 19784 147b 24       		.byte	0x24
 19785 147c 22       		.byte	0x22
 19786 147d 0A       		.byte	0xa
 19787 147e 0001     		.2byte	0x100
 19788 1480 75       		.byte	0x75
 19789 1481 00       		.sleb128 0
 19790 1482 1C       		.byte	0x1c
 19791 1483 40       		.byte	0x40
 19792 1484 4B       		.byte	0x4b
 19793 1485 24       		.byte	0x24
 19794 1486 22       		.byte	0x22
 19795 1487 2A       		.byte	0x2a
 19796 1488 22       		.byte	0x22
 19797 1489 9F       		.byte	0x9f
 19798 148a 9A020000 		.4byte	.LVL251
 19799 148e 9C020000 		.4byte	.LVL252
 19800 1492 2000     		.2byte	0x20
 19801 1494 0A       		.byte	0xa
 19802 1495 0401     		.2byte	0x104
 19803 1497 75       		.byte	0x75
 19804 1498 00       		.sleb128 0
 19805 1499 1C       		.byte	0x1c
 19806 149a 4F       		.byte	0x4f
 19807 149b 25       		.byte	0x25
 19808 149c 77       		.byte	0x77
 19809 149d 0D       		.sleb128 13
 19810 149e 4F       		.byte	0x4f
 19811 149f 26       		.byte	0x26
 19812 14a0 22       		.byte	0x22
 19813 14a1 77       		.byte	0x77
 19814 14a2 0D       		.sleb128 13
 19815 14a3 40       		.byte	0x40
 19816 14a4 4B       		.byte	0x4b
 19817 14a5 24       		.byte	0x24
 19818 14a6 22       		.byte	0x22
 19819 14a7 0A       		.byte	0xa
 19820 14a8 0401     		.2byte	0x104
 19821 14aa 75       		.byte	0x75
 19822 14ab 00       		.sleb128 0
 19823 14ac 1C       		.byte	0x1c
 19824 14ad 40       		.byte	0x40
 19825 14ae 4B       		.byte	0x4b
 19826 14af 24       		.byte	0x24
 19827 14b0 22       		.byte	0x22
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 534


 19828 14b1 2A       		.byte	0x2a
 19829 14b2 22       		.byte	0x22
 19830 14b3 9F       		.byte	0x9f
 19831 14b4 9C020000 		.4byte	.LVL252
 19832 14b8 A4020000 		.4byte	.LVL253
 19833 14bc 0100     		.2byte	0x1
 19834 14be 53       		.byte	0x53
 19835 14bf A4020000 		.4byte	.LVL253
 19836 14c3 A6020000 		.4byte	.LVL254
 19837 14c7 1600     		.2byte	0x16
 19838 14c9 72       		.byte	0x72
 19839 14ca 00       		.sleb128 0
 19840 14cb 4F       		.byte	0x4f
 19841 14cc 25       		.byte	0x25
 19842 14cd 70       		.byte	0x70
 19843 14ce 00       		.sleb128 0
 19844 14cf 22       		.byte	0x22
 19845 14d0 71       		.byte	0x71
 19846 14d1 00       		.sleb128 0
 19847 14d2 40       		.byte	0x40
 19848 14d3 4B       		.byte	0x4b
 19849 14d4 24       		.byte	0x24
 19850 14d5 22       		.byte	0x22
 19851 14d6 72       		.byte	0x72
 19852 14d7 00       		.sleb128 0
 19853 14d8 40       		.byte	0x40
 19854 14d9 4B       		.byte	0x4b
 19855 14da 24       		.byte	0x24
 19856 14db 22       		.byte	0x22
 19857 14dc 2A       		.byte	0x2a
 19858 14dd 22       		.byte	0x22
 19859 14de 9F       		.byte	0x9f
 19860 14df A6020000 		.4byte	.LVL254
 19861 14e3 A8020000 		.4byte	.LVL255
 19862 14e7 1600     		.2byte	0x16
 19863 14e9 72       		.byte	0x72
 19864 14ea 00       		.sleb128 0
 19865 14eb 4F       		.byte	0x4f
 19866 14ec 25       		.byte	0x25
 19867 14ed 70       		.byte	0x70
 19868 14ee 00       		.sleb128 0
 19869 14ef 22       		.byte	0x22
 19870 14f0 77       		.byte	0x77
 19871 14f1 0D       		.sleb128 13
 19872 14f2 40       		.byte	0x40
 19873 14f3 4B       		.byte	0x4b
 19874 14f4 24       		.byte	0x24
 19875 14f5 22       		.byte	0x22
 19876 14f6 72       		.byte	0x72
 19877 14f7 00       		.sleb128 0
 19878 14f8 40       		.byte	0x40
 19879 14f9 4B       		.byte	0x4b
 19880 14fa 24       		.byte	0x24
 19881 14fb 22       		.byte	0x22
 19882 14fc 2A       		.byte	0x2a
 19883 14fd 22       		.byte	0x22
 19884 14fe 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 535


 19885 14ff A8020000 		.4byte	.LVL255
 19886 1503 AA020000 		.4byte	.LVL256
 19887 1507 1800     		.2byte	0x18
 19888 1509 72       		.byte	0x72
 19889 150a 00       		.sleb128 0
 19890 150b 4F       		.byte	0x4f
 19891 150c 25       		.byte	0x25
 19892 150d 77       		.byte	0x77
 19893 150e 0D       		.sleb128 13
 19894 150f 4F       		.byte	0x4f
 19895 1510 26       		.byte	0x26
 19896 1511 22       		.byte	0x22
 19897 1512 77       		.byte	0x77
 19898 1513 0D       		.sleb128 13
 19899 1514 40       		.byte	0x40
 19900 1515 4B       		.byte	0x4b
 19901 1516 24       		.byte	0x24
 19902 1517 22       		.byte	0x22
 19903 1518 72       		.byte	0x72
 19904 1519 00       		.sleb128 0
 19905 151a 40       		.byte	0x40
 19906 151b 4B       		.byte	0x4b
 19907 151c 24       		.byte	0x24
 19908 151d 22       		.byte	0x22
 19909 151e 2A       		.byte	0x2a
 19910 151f 22       		.byte	0x22
 19911 1520 9F       		.byte	0x9f
 19912 1521 AA020000 		.4byte	.LVL256
 19913 1525 B0020000 		.4byte	.LVL258
 19914 1529 2000     		.2byte	0x20
 19915 152b 0A       		.byte	0xa
 19916 152c 0001     		.2byte	0x100
 19917 152e 75       		.byte	0x75
 19918 152f 00       		.sleb128 0
 19919 1530 1C       		.byte	0x1c
 19920 1531 4F       		.byte	0x4f
 19921 1532 25       		.byte	0x25
 19922 1533 77       		.byte	0x77
 19923 1534 0D       		.sleb128 13
 19924 1535 4F       		.byte	0x4f
 19925 1536 26       		.byte	0x26
 19926 1537 22       		.byte	0x22
 19927 1538 77       		.byte	0x77
 19928 1539 0D       		.sleb128 13
 19929 153a 40       		.byte	0x40
 19930 153b 4B       		.byte	0x4b
 19931 153c 24       		.byte	0x24
 19932 153d 22       		.byte	0x22
 19933 153e 0A       		.byte	0xa
 19934 153f 0001     		.2byte	0x100
 19935 1541 75       		.byte	0x75
 19936 1542 00       		.sleb128 0
 19937 1543 1C       		.byte	0x1c
 19938 1544 40       		.byte	0x40
 19939 1545 4B       		.byte	0x4b
 19940 1546 24       		.byte	0x24
 19941 1547 22       		.byte	0x22
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 536


 19942 1548 2A       		.byte	0x2a
 19943 1549 22       		.byte	0x22
 19944 154a 9F       		.byte	0x9f
 19945 154b B0020000 		.4byte	.LVL258
 19946 154f B2020000 		.4byte	.LVL259
 19947 1553 2000     		.2byte	0x20
 19948 1555 0A       		.byte	0xa
 19949 1556 0E01     		.2byte	0x10e
 19950 1558 75       		.byte	0x75
 19951 1559 00       		.sleb128 0
 19952 155a 1C       		.byte	0x1c
 19953 155b 4F       		.byte	0x4f
 19954 155c 25       		.byte	0x25
 19955 155d 77       		.byte	0x77
 19956 155e 0D       		.sleb128 13
 19957 155f 4F       		.byte	0x4f
 19958 1560 26       		.byte	0x26
 19959 1561 22       		.byte	0x22
 19960 1562 77       		.byte	0x77
 19961 1563 0D       		.sleb128 13
 19962 1564 40       		.byte	0x40
 19963 1565 4B       		.byte	0x4b
 19964 1566 24       		.byte	0x24
 19965 1567 22       		.byte	0x22
 19966 1568 0A       		.byte	0xa
 19967 1569 0E01     		.2byte	0x10e
 19968 156b 75       		.byte	0x75
 19969 156c 00       		.sleb128 0
 19970 156d 1C       		.byte	0x1c
 19971 156e 40       		.byte	0x40
 19972 156f 4B       		.byte	0x4b
 19973 1570 24       		.byte	0x24
 19974 1571 22       		.byte	0x22
 19975 1572 2A       		.byte	0x2a
 19976 1573 22       		.byte	0x22
 19977 1574 9F       		.byte	0x9f
 19978 1575 B2020000 		.4byte	.LVL259
 19979 1579 CA020000 		.4byte	.LVL264
 19980 157d 0200     		.2byte	0x2
 19981 157f 30       		.byte	0x30
 19982 1580 9F       		.byte	0x9f
 19983 1581 CA020000 		.4byte	.LVL264
 19984 1585 CE020000 		.4byte	.LVL265
 19985 1589 0200     		.2byte	0x2
 19986 158b 31       		.byte	0x31
 19987 158c 9F       		.byte	0x9f
 19988 158d 32030000 		.4byte	.LVL275
 19989 1591 34030000 		.4byte	.LVL276
 19990 1595 0200     		.2byte	0x2
 19991 1597 31       		.byte	0x31
 19992 1598 9F       		.byte	0x9f
 19993 1599 80030000 		.4byte	.LVL281
 19994 159d 84030000 		.4byte	.LVL283
 19995 15a1 0200     		.2byte	0x2
 19996 15a3 30       		.byte	0x30
 19997 15a4 9F       		.byte	0x9f
 19998 15a5 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 537


 19999 15a9 00000000 		.4byte	0
 20000              	.LLST43:
 20001 15ad 02010000 		.4byte	.LVL196
 20002 15b1 64010000 		.4byte	.LVL201
 20003 15b5 0100     		.2byte	0x1
 20004 15b7 56       		.byte	0x56
 20005 15b8 10020000 		.4byte	.LVL220
 20006 15bc B2020000 		.4byte	.LVL259
 20007 15c0 0100     		.2byte	0x1
 20008 15c2 56       		.byte	0x56
 20009 15c3 8C030000 		.4byte	.LVL284
 20010 15c7 A6030000 		.4byte	.LVL287
 20011 15cb 0100     		.2byte	0x1
 20012 15cd 56       		.byte	0x56
 20013 15ce 00000000 		.4byte	0
 20014 15d2 00000000 		.4byte	0
 20015              	.LLST44:
 20016 15d6 F6000000 		.4byte	.LVL192
 20017 15da 5A010000 		.4byte	.LVL200
 20018 15de 0200     		.2byte	0x2
 20019 15e0 30       		.byte	0x30
 20020 15e1 9F       		.byte	0x9f
 20021 15e2 10020000 		.4byte	.LVL220
 20022 15e6 84020000 		.4byte	.LVL245
 20023 15ea 0200     		.2byte	0x2
 20024 15ec 30       		.byte	0x30
 20025 15ed 9F       		.byte	0x9f
 20026 15ee 84020000 		.4byte	.LVL245
 20027 15f2 86020000 		.4byte	.LVL246
 20028 15f6 0200     		.2byte	0x2
 20029 15f8 31       		.byte	0x31
 20030 15f9 9F       		.byte	0x9f
 20031 15fa 86020000 		.4byte	.LVL246
 20032 15fe 9A020000 		.4byte	.LVL251
 20033 1602 0200     		.2byte	0x2
 20034 1604 30       		.byte	0x30
 20035 1605 9F       		.byte	0x9f
 20036 1606 9A020000 		.4byte	.LVL251
 20037 160a 9C020000 		.4byte	.LVL252
 20038 160e 0200     		.2byte	0x2
 20039 1610 31       		.byte	0x31
 20040 1611 9F       		.byte	0x9f
 20041 1612 9C020000 		.4byte	.LVL252
 20042 1616 B0020000 		.4byte	.LVL258
 20043 161a 0200     		.2byte	0x2
 20044 161c 30       		.byte	0x30
 20045 161d 9F       		.byte	0x9f
 20046 161e B0020000 		.4byte	.LVL258
 20047 1622 B2020000 		.4byte	.LVL259
 20048 1626 0200     		.2byte	0x2
 20049 1628 31       		.byte	0x31
 20050 1629 9F       		.byte	0x9f
 20051 162a 8C030000 		.4byte	.LVL284
 20052 162e A6030000 		.4byte	.LVL287
 20053 1632 0200     		.2byte	0x2
 20054 1634 31       		.byte	0x31
 20055 1635 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 538


 20056 1636 00000000 		.4byte	0
 20057 163a 00000000 		.4byte	0
 20058              	.LLST45:
 20059 163e A0010000 		.4byte	.LVL206
 20060 1642 B2010000 		.4byte	.LVL209
 20061 1646 0200     		.2byte	0x2
 20062 1648 30       		.byte	0x30
 20063 1649 9F       		.byte	0x9f
 20064 164a B2010000 		.4byte	.LVL209
 20065 164e B4010000 		.4byte	.LVL210
 20066 1652 0100     		.2byte	0x1
 20067 1654 57       		.byte	0x57
 20068 1655 B2020000 		.4byte	.LVL259
 20069 1659 C4020000 		.4byte	.LVL263
 20070 165d 0200     		.2byte	0x2
 20071 165f 30       		.byte	0x30
 20072 1660 9F       		.byte	0x9f
 20073 1661 00000000 		.4byte	0
 20074 1665 00000000 		.4byte	0
 20075              	.LLST46:
 20076 1669 A0010000 		.4byte	.LVL206
 20077 166d B4010000 		.4byte	.LVL210
 20078 1671 0200     		.2byte	0x2
 20079 1673 30       		.byte	0x30
 20080 1674 9F       		.byte	0x9f
 20081 1675 B4010000 		.4byte	.LVL210
 20082 1679 0C020000 		.4byte	.LVL219
 20083 167d 0200     		.2byte	0x2
 20084 167f 91       		.byte	0x91
 20085 1680 48       		.sleb128 -56
 20086 1681 B2020000 		.4byte	.LVL259
 20087 1685 C4020000 		.4byte	.LVL263
 20088 1689 0200     		.2byte	0x2
 20089 168b 30       		.byte	0x30
 20090 168c 9F       		.byte	0x9f
 20091 168d CA020000 		.4byte	.LVL264
 20092 1691 80030000 		.4byte	.LVL281
 20093 1695 0200     		.2byte	0x2
 20094 1697 91       		.byte	0x91
 20095 1698 48       		.sleb128 -56
 20096 1699 00000000 		.4byte	0
 20097 169d 00000000 		.4byte	0
 20098              	.LLST47:
 20099 16a1 00020000 		.4byte	.LVL215
 20100 16a5 08020000 		.4byte	.LVL217
 20101 16a9 0200     		.2byte	0x2
 20102 16ab 30       		.byte	0x30
 20103 16ac 9F       		.byte	0x9f
 20104 16ad 08020000 		.4byte	.LVL217
 20105 16b1 0A020000 		.4byte	.LVL218
 20106 16b5 0100     		.2byte	0x1
 20107 16b7 50       		.byte	0x50
 20108 16b8 0A020000 		.4byte	.LVL218
 20109 16bc 0C020000 		.4byte	.LVL219
 20110 16c0 0100     		.2byte	0x1
 20111 16c2 57       		.byte	0x57
 20112 16c3 CE020000 		.4byte	.LVL265
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 539


 20113 16c7 D2020000 		.4byte	.LVL266
 20114 16cb 0100     		.2byte	0x1
 20115 16cd 50       		.byte	0x50
 20116 16ce D2020000 		.4byte	.LVL266
 20117 16d2 1A030000 		.4byte	.LVL272
 20118 16d6 0100     		.2byte	0x1
 20119 16d8 57       		.byte	0x57
 20120 16d9 1A030000 		.4byte	.LVL272
 20121 16dd 2D030000 		.4byte	.LVL273-1
 20122 16e1 0200     		.2byte	0x2
 20123 16e3 74       		.byte	0x74
 20124 16e4 28       		.sleb128 40
 20125 16e5 32030000 		.4byte	.LVL275
 20126 16e9 34030000 		.4byte	.LVL276
 20127 16ed 0100     		.2byte	0x1
 20128 16ef 57       		.byte	0x57
 20129 16f0 00000000 		.4byte	0
 20130 16f4 00000000 		.4byte	0
 20131              	.LLST48:
 20132 16f8 DC020000 		.4byte	.LVL268
 20133 16fc E4020000 		.4byte	.LVL270
 20134 1700 0100     		.2byte	0x1
 20135 1702 57       		.byte	0x57
 20136 1703 00000000 		.4byte	0
 20137 1707 00000000 		.4byte	0
 20138              	.LLST49:
 20139 170b 00000000 		.4byte	.LVL290
 20140 170f 16000000 		.4byte	.LVL296
 20141 1713 0100     		.2byte	0x1
 20142 1715 50       		.byte	0x50
 20143 1716 16000000 		.4byte	.LVL296
 20144 171a 20000000 		.4byte	.LVL298
 20145 171e 0400     		.2byte	0x4
 20146 1720 F3       		.byte	0xf3
 20147 1721 01       		.uleb128 0x1
 20148 1722 50       		.byte	0x50
 20149 1723 9F       		.byte	0x9f
 20150 1724 20000000 		.4byte	.LVL298
 20151 1728 22000000 		.4byte	.LVL299
 20152 172c 0100     		.2byte	0x1
 20153 172e 50       		.byte	0x50
 20154 172f 22000000 		.4byte	.LVL299
 20155 1733 24000000 		.4byte	.LVL300
 20156 1737 0400     		.2byte	0x4
 20157 1739 F3       		.byte	0xf3
 20158 173a 01       		.uleb128 0x1
 20159 173b 50       		.byte	0x50
 20160 173c 9F       		.byte	0x9f
 20161 173d 24000000 		.4byte	.LVL300
 20162 1741 26000000 		.4byte	.LVL301
 20163 1745 0100     		.2byte	0x1
 20164 1747 50       		.byte	0x50
 20165 1748 26000000 		.4byte	.LVL301
 20166 174c 2A000000 		.4byte	.LFE17
 20167 1750 0400     		.2byte	0x4
 20168 1752 F3       		.byte	0xf3
 20169 1753 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 540


 20170 1754 50       		.byte	0x50
 20171 1755 9F       		.byte	0x9f
 20172 1756 00000000 		.4byte	0
 20173 175a 00000000 		.4byte	0
 20174              	.LLST50:
 20175 175e 04000000 		.4byte	.LVL291
 20176 1762 08000000 		.4byte	.LVL292
 20177 1766 0100     		.2byte	0x1
 20178 1768 53       		.byte	0x53
 20179 1769 08000000 		.4byte	.LVL292
 20180 176d 0E000000 		.4byte	.LVL293
 20181 1771 0100     		.2byte	0x1
 20182 1773 55       		.byte	0x55
 20183 1774 0E000000 		.4byte	.LVL293
 20184 1778 10000000 		.4byte	.LVL294
 20185 177c 0300     		.2byte	0x3
 20186 177e 73       		.byte	0x73
 20187 177f 01       		.sleb128 1
 20188 1780 9F       		.byte	0x9f
 20189 1781 10000000 		.4byte	.LVL294
 20190 1785 14000000 		.4byte	.LVL295
 20191 1789 0100     		.2byte	0x1
 20192 178b 54       		.byte	0x54
 20193 178c 14000000 		.4byte	.LVL295
 20194 1790 18000000 		.4byte	.LVL297
 20195 1794 0300     		.2byte	0x3
 20196 1796 73       		.byte	0x73
 20197 1797 03       		.sleb128 3
 20198 1798 9F       		.byte	0x9f
 20199 1799 18000000 		.4byte	.LVL297
 20200 179d 20000000 		.4byte	.LVL298
 20201 17a1 0100     		.2byte	0x1
 20202 17a3 53       		.byte	0x53
 20203 17a4 20000000 		.4byte	.LVL298
 20204 17a8 24000000 		.4byte	.LVL300
 20205 17ac 0100     		.2byte	0x1
 20206 17ae 55       		.byte	0x55
 20207 17af 24000000 		.4byte	.LVL300
 20208 17b3 26000000 		.4byte	.LVL301
 20209 17b7 0100     		.2byte	0x1
 20210 17b9 54       		.byte	0x54
 20211 17ba 00000000 		.4byte	0
 20212 17be 00000000 		.4byte	0
 20213              	.LLST51:
 20214 17c2 00000000 		.4byte	.LVL302
 20215 17c6 0E000000 		.4byte	.LVL303
 20216 17ca 0100     		.2byte	0x1
 20217 17cc 50       		.byte	0x50
 20218 17cd 0E000000 		.4byte	.LVL303
 20219 17d1 12000000 		.4byte	.LVL304
 20220 17d5 0400     		.2byte	0x4
 20221 17d7 F3       		.byte	0xf3
 20222 17d8 01       		.uleb128 0x1
 20223 17d9 50       		.byte	0x50
 20224 17da 9F       		.byte	0x9f
 20225 17db 12000000 		.4byte	.LVL304
 20226 17df 1C000000 		.4byte	.LVL306
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 541


 20227 17e3 0100     		.2byte	0x1
 20228 17e5 50       		.byte	0x50
 20229 17e6 1C000000 		.4byte	.LVL306
 20230 17ea 6C000000 		.4byte	.LVL316
 20231 17ee 0100     		.2byte	0x1
 20232 17f0 55       		.byte	0x55
 20233 17f1 6C000000 		.4byte	.LVL316
 20234 17f5 70000000 		.4byte	.LFE19
 20235 17f9 0400     		.2byte	0x4
 20236 17fb F3       		.byte	0xf3
 20237 17fc 01       		.uleb128 0x1
 20238 17fd 50       		.byte	0x50
 20239 17fe 9F       		.byte	0x9f
 20240 17ff 00000000 		.4byte	0
 20241 1803 00000000 		.4byte	0
 20242              	.LLST52:
 20243 1807 00000000 		.4byte	.LVL302
 20244 180b 0E000000 		.4byte	.LVL303
 20245 180f 0100     		.2byte	0x1
 20246 1811 51       		.byte	0x51
 20247 1812 0E000000 		.4byte	.LVL303
 20248 1816 12000000 		.4byte	.LVL304
 20249 181a 0400     		.2byte	0x4
 20250 181c F3       		.byte	0xf3
 20251 181d 01       		.uleb128 0x1
 20252 181e 51       		.byte	0x51
 20253 181f 9F       		.byte	0x9f
 20254 1820 12000000 		.4byte	.LVL304
 20255 1824 1E000000 		.4byte	.LVL307
 20256 1828 0100     		.2byte	0x1
 20257 182a 51       		.byte	0x51
 20258 182b 1E000000 		.4byte	.LVL307
 20259 182f 21000000 		.4byte	.LVL308-1
 20260 1833 0100     		.2byte	0x1
 20261 1835 50       		.byte	0x50
 20262 1836 21000000 		.4byte	.LVL308-1
 20263 183a 6C000000 		.4byte	.LVL316
 20264 183e 0100     		.2byte	0x1
 20265 1840 54       		.byte	0x54
 20266 1841 6C000000 		.4byte	.LVL316
 20267 1845 70000000 		.4byte	.LFE19
 20268 1849 0400     		.2byte	0x4
 20269 184b F3       		.byte	0xf3
 20270 184c 01       		.uleb128 0x1
 20271 184d 51       		.byte	0x51
 20272 184e 9F       		.byte	0x9f
 20273 184f 00000000 		.4byte	0
 20274 1853 00000000 		.4byte	0
 20275              	.LLST53:
 20276 1857 00000000 		.4byte	.LVL302
 20277 185b 0E000000 		.4byte	.LVL303
 20278 185f 0100     		.2byte	0x1
 20279 1861 52       		.byte	0x52
 20280 1862 0E000000 		.4byte	.LVL303
 20281 1866 12000000 		.4byte	.LVL304
 20282 186a 0400     		.2byte	0x4
 20283 186c F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 542


 20284 186d 01       		.uleb128 0x1
 20285 186e 52       		.byte	0x52
 20286 186f 9F       		.byte	0x9f
 20287 1870 12000000 		.4byte	.LVL304
 20288 1874 1A000000 		.4byte	.LVL305
 20289 1878 0100     		.2byte	0x1
 20290 187a 52       		.byte	0x52
 20291 187b 1A000000 		.4byte	.LVL305
 20292 187f 6C000000 		.4byte	.LVL316
 20293 1883 0100     		.2byte	0x1
 20294 1885 56       		.byte	0x56
 20295 1886 6C000000 		.4byte	.LVL316
 20296 188a 70000000 		.4byte	.LFE19
 20297 188e 0400     		.2byte	0x4
 20298 1890 F3       		.byte	0xf3
 20299 1891 01       		.uleb128 0x1
 20300 1892 52       		.byte	0x52
 20301 1893 9F       		.byte	0x9f
 20302 1894 00000000 		.4byte	0
 20303 1898 00000000 		.4byte	0
 20304              	.LLST54:
 20305 189c 00000000 		.4byte	.LVL302
 20306 18a0 0E000000 		.4byte	.LVL303
 20307 18a4 0100     		.2byte	0x1
 20308 18a6 53       		.byte	0x53
 20309 18a7 0E000000 		.4byte	.LVL303
 20310 18ab 12000000 		.4byte	.LVL304
 20311 18af 0400     		.2byte	0x4
 20312 18b1 F3       		.byte	0xf3
 20313 18b2 01       		.uleb128 0x1
 20314 18b3 53       		.byte	0x53
 20315 18b4 9F       		.byte	0x9f
 20316 18b5 12000000 		.4byte	.LVL304
 20317 18b9 21000000 		.4byte	.LVL308-1
 20318 18bd 0100     		.2byte	0x1
 20319 18bf 53       		.byte	0x53
 20320 18c0 21000000 		.4byte	.LVL308-1
 20321 18c4 70000000 		.4byte	.LFE19
 20322 18c8 0400     		.2byte	0x4
 20323 18ca F3       		.byte	0xf3
 20324 18cb 01       		.uleb128 0x1
 20325 18cc 53       		.byte	0x53
 20326 18cd 9F       		.byte	0x9f
 20327 18ce 00000000 		.4byte	0
 20328 18d2 00000000 		.4byte	0
 20329              	.LLST55:
 20330 18d6 2C000000 		.4byte	.LVL309
 20331 18da 34000000 		.4byte	.LVL310
 20332 18de 0500     		.2byte	0x5
 20333 18e0 74       		.byte	0x74
 20334 18e1 00       		.sleb128 0
 20335 18e2 73       		.byte	0x73
 20336 18e3 00       		.sleb128 0
 20337 18e4 22       		.byte	0x22
 20338 18e5 34000000 		.4byte	.LVL310
 20339 18e9 3A000000 		.4byte	.LVL311
 20340 18ed 0800     		.2byte	0x8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 543


 20341 18ef 74       		.byte	0x74
 20342 18f0 00       		.sleb128 0
 20343 18f1 7D       		.byte	0x7d
 20344 18f2 00       		.sleb128 0
 20345 18f3 06       		.byte	0x6
 20346 18f4 22       		.byte	0x22
 20347 18f5 31       		.byte	0x31
 20348 18f6 1C       		.byte	0x1c
 20349 18f7 3A000000 		.4byte	.LVL311
 20350 18fb 3C000000 		.4byte	.LVL312
 20351 18ff 0500     		.2byte	0x5
 20352 1901 74       		.byte	0x74
 20353 1902 00       		.sleb128 0
 20354 1903 73       		.byte	0x73
 20355 1904 00       		.sleb128 0
 20356 1905 22       		.byte	0x22
 20357 1906 3C000000 		.4byte	.LVL312
 20358 190a 41000000 		.4byte	.LVL313-1
 20359 190e 0100     		.2byte	0x1
 20360 1910 52       		.byte	0x52
 20361 1911 00000000 		.4byte	0
 20362 1915 00000000 		.4byte	0
 20363              	.LLST56:
 20364 1919 00000000 		.4byte	.LVL317
 20365 191d 25000000 		.4byte	.LVL322-1
 20366 1921 0100     		.2byte	0x1
 20367 1923 50       		.byte	0x50
 20368 1924 25000000 		.4byte	.LVL322-1
 20369 1928 82000000 		.4byte	.LVL331
 20370 192c 0100     		.2byte	0x1
 20371 192e 55       		.byte	0x55
 20372 192f 82000000 		.4byte	.LVL331
 20373 1933 84000000 		.4byte	.LVL332
 20374 1937 0100     		.2byte	0x1
 20375 1939 50       		.byte	0x50
 20376 193a 84000000 		.4byte	.LVL332
 20377 193e 86000000 		.4byte	.LVL333
 20378 1942 0400     		.2byte	0x4
 20379 1944 F3       		.byte	0xf3
 20380 1945 01       		.uleb128 0x1
 20381 1946 50       		.byte	0x50
 20382 1947 9F       		.byte	0x9f
 20383 1948 86000000 		.4byte	.LVL333
 20384 194c 88000000 		.4byte	.LVL334
 20385 1950 0100     		.2byte	0x1
 20386 1952 55       		.byte	0x55
 20387 1953 88000000 		.4byte	.LVL334
 20388 1957 8E000000 		.4byte	.LFE21
 20389 195b 0400     		.2byte	0x4
 20390 195d F3       		.byte	0xf3
 20391 195e 01       		.uleb128 0x1
 20392 195f 50       		.byte	0x50
 20393 1960 9F       		.byte	0x9f
 20394 1961 00000000 		.4byte	0
 20395 1965 00000000 		.4byte	0
 20396              	.LLST57:
 20397 1969 00000000 		.4byte	.LVL317
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 544


 20398 196d 1E000000 		.4byte	.LVL320
 20399 1971 0100     		.2byte	0x1
 20400 1973 51       		.byte	0x51
 20401 1974 1E000000 		.4byte	.LVL320
 20402 1978 82000000 		.4byte	.LVL331
 20403 197c 0200     		.2byte	0x2
 20404 197e 91       		.byte	0x91
 20405 197f 54       		.sleb128 -44
 20406 1980 82000000 		.4byte	.LVL331
 20407 1984 86000000 		.4byte	.LVL333
 20408 1988 0100     		.2byte	0x1
 20409 198a 51       		.byte	0x51
 20410 198b 86000000 		.4byte	.LVL333
 20411 198f 88000000 		.4byte	.LVL334
 20412 1993 0200     		.2byte	0x2
 20413 1995 91       		.byte	0x91
 20414 1996 54       		.sleb128 -44
 20415 1997 88000000 		.4byte	.LVL334
 20416 199b 8E000000 		.4byte	.LFE21
 20417 199f 0400     		.2byte	0x4
 20418 19a1 F3       		.byte	0xf3
 20419 19a2 01       		.uleb128 0x1
 20420 19a3 51       		.byte	0x51
 20421 19a4 9F       		.byte	0x9f
 20422 19a5 00000000 		.4byte	0
 20423 19a9 00000000 		.4byte	0
 20424              	.LLST58:
 20425 19ad 00000000 		.4byte	.LVL317
 20426 19b1 1C000000 		.4byte	.LVL319
 20427 19b5 0100     		.2byte	0x1
 20428 19b7 52       		.byte	0x52
 20429 19b8 1C000000 		.4byte	.LVL319
 20430 19bc 82000000 		.4byte	.LVL331
 20431 19c0 0100     		.2byte	0x1
 20432 19c2 56       		.byte	0x56
 20433 19c3 82000000 		.4byte	.LVL331
 20434 19c7 86000000 		.4byte	.LVL333
 20435 19cb 0100     		.2byte	0x1
 20436 19cd 52       		.byte	0x52
 20437 19ce 86000000 		.4byte	.LVL333
 20438 19d2 88000000 		.4byte	.LVL334
 20439 19d6 0100     		.2byte	0x1
 20440 19d8 56       		.byte	0x56
 20441 19d9 88000000 		.4byte	.LVL334
 20442 19dd 8E000000 		.4byte	.LFE21
 20443 19e1 0400     		.2byte	0x4
 20444 19e3 F3       		.byte	0xf3
 20445 19e4 01       		.uleb128 0x1
 20446 19e5 52       		.byte	0x52
 20447 19e6 9F       		.byte	0x9f
 20448 19e7 00000000 		.4byte	0
 20449 19eb 00000000 		.4byte	0
 20450              	.LLST59:
 20451 19ef 00000000 		.4byte	.LVL317
 20452 19f3 20000000 		.4byte	.LVL321
 20453 19f7 0100     		.2byte	0x1
 20454 19f9 53       		.byte	0x53
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 545


 20455 19fa 20000000 		.4byte	.LVL321
 20456 19fe 82000000 		.4byte	.LVL331
 20457 1a02 0200     		.2byte	0x2
 20458 1a04 7D       		.byte	0x7d
 20459 1a05 00       		.sleb128 0
 20460 1a06 82000000 		.4byte	.LVL331
 20461 1a0a 86000000 		.4byte	.LVL333
 20462 1a0e 0100     		.2byte	0x1
 20463 1a10 53       		.byte	0x53
 20464 1a11 86000000 		.4byte	.LVL333
 20465 1a15 88000000 		.4byte	.LVL334
 20466 1a19 0200     		.2byte	0x2
 20467 1a1b 7D       		.byte	0x7d
 20468 1a1c 00       		.sleb128 0
 20469 1a1d 88000000 		.4byte	.LVL334
 20470 1a21 8E000000 		.4byte	.LFE21
 20471 1a25 0400     		.2byte	0x4
 20472 1a27 F3       		.byte	0xf3
 20473 1a28 01       		.uleb128 0x1
 20474 1a29 53       		.byte	0x53
 20475 1a2a 9F       		.byte	0x9f
 20476 1a2b 00000000 		.4byte	0
 20477 1a2f 00000000 		.4byte	0
 20478              	.LLST60:
 20479 1a33 06000000 		.4byte	.LVL318
 20480 1a37 34000000 		.4byte	.LVL324
 20481 1a3b 0200     		.2byte	0x2
 20482 1a3d 30       		.byte	0x30
 20483 1a3e 9F       		.byte	0x9f
 20484 1a3f 38000000 		.4byte	.LVL325
 20485 1a43 82000000 		.4byte	.LVL331
 20486 1a47 0100     		.2byte	0x1
 20487 1a49 54       		.byte	0x54
 20488 1a4a 82000000 		.4byte	.LVL331
 20489 1a4e 88000000 		.4byte	.LVL334
 20490 1a52 0200     		.2byte	0x2
 20491 1a54 30       		.byte	0x30
 20492 1a55 9F       		.byte	0x9f
 20493 1a56 00000000 		.4byte	0
 20494 1a5a 00000000 		.4byte	0
 20495              	.LLST61:
 20496 1a5e 2E000000 		.4byte	.LVL323
 20497 1a62 82000000 		.4byte	.LVL331
 20498 1a66 0600     		.2byte	0x6
 20499 1a68 75       		.byte	0x75
 20500 1a69 00       		.sleb128 0
 20501 1a6a 77       		.byte	0x77
 20502 1a6b 00       		.sleb128 0
 20503 1a6c 22       		.byte	0x22
 20504 1a6d 9F       		.byte	0x9f
 20505 1a6e 00000000 		.4byte	0
 20506 1a72 00000000 		.4byte	0
 20507              	.LLST62:
 20508 1a76 54000000 		.4byte	.LVL326
 20509 1a7a 66000000 		.4byte	.LVL328
 20510 1a7e 0200     		.2byte	0x2
 20511 1a80 30       		.byte	0x30
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 546


 20512 1a81 9F       		.byte	0x9f
 20513 1a82 66000000 		.4byte	.LVL328
 20514 1a86 70000000 		.4byte	.LVL329
 20515 1a8a 0100     		.2byte	0x1
 20516 1a8c 50       		.byte	0x50
 20517 1a8d 70000000 		.4byte	.LVL329
 20518 1a91 75000000 		.4byte	.LVL330-1
 20519 1a95 0100     		.2byte	0x1
 20520 1a97 51       		.byte	0x51
 20521 1a98 00000000 		.4byte	0
 20522 1a9c 00000000 		.4byte	0
 20523              	.LLST63:
 20524 1aa0 00000000 		.4byte	.LVL335
 20525 1aa4 1D000000 		.4byte	.LVL339-1
 20526 1aa8 0100     		.2byte	0x1
 20527 1aaa 50       		.byte	0x50
 20528 1aab 1D000000 		.4byte	.LVL339-1
 20529 1aaf 60000000 		.4byte	.LVL346
 20530 1ab3 0100     		.2byte	0x1
 20531 1ab5 54       		.byte	0x54
 20532 1ab6 60000000 		.4byte	.LVL346
 20533 1aba 62000000 		.4byte	.LFE22
 20534 1abe 0400     		.2byte	0x4
 20535 1ac0 F3       		.byte	0xf3
 20536 1ac1 01       		.uleb128 0x1
 20537 1ac2 50       		.byte	0x50
 20538 1ac3 9F       		.byte	0x9f
 20539 1ac4 00000000 		.4byte	0
 20540 1ac8 00000000 		.4byte	0
 20541              	.LLST64:
 20542 1acc 00000000 		.4byte	.LVL335
 20543 1ad0 14000000 		.4byte	.LVL337
 20544 1ad4 0100     		.2byte	0x1
 20545 1ad6 51       		.byte	0x51
 20546 1ad7 14000000 		.4byte	.LVL337
 20547 1adb 60000000 		.4byte	.LVL347
 20548 1adf 0100     		.2byte	0x1
 20549 1ae1 55       		.byte	0x55
 20550 1ae2 60000000 		.4byte	.LVL347
 20551 1ae6 62000000 		.4byte	.LFE22
 20552 1aea 0400     		.2byte	0x4
 20553 1aec F3       		.byte	0xf3
 20554 1aed 01       		.uleb128 0x1
 20555 1aee 51       		.byte	0x51
 20556 1aef 9F       		.byte	0x9f
 20557 1af0 00000000 		.4byte	0
 20558 1af4 00000000 		.4byte	0
 20559              	.LLST65:
 20560 1af8 00000000 		.4byte	.LVL335
 20561 1afc 16000000 		.4byte	.LVL338
 20562 1b00 0100     		.2byte	0x1
 20563 1b02 52       		.byte	0x52
 20564 1b03 16000000 		.4byte	.LVL338
 20565 1b07 60000000 		.4byte	.LVL348
 20566 1b0b 0100     		.2byte	0x1
 20567 1b0d 56       		.byte	0x56
 20568 1b0e 60000000 		.4byte	.LVL348
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 547


 20569 1b12 62000000 		.4byte	.LFE22
 20570 1b16 0400     		.2byte	0x4
 20571 1b18 F3       		.byte	0xf3
 20572 1b19 01       		.uleb128 0x1
 20573 1b1a 52       		.byte	0x52
 20574 1b1b 9F       		.byte	0x9f
 20575 1b1c 00000000 		.4byte	0
 20576 1b20 00000000 		.4byte	0
 20577              	.LLST66:
 20578 1b24 00000000 		.4byte	.LVL335
 20579 1b28 06000000 		.4byte	.LVL336
 20580 1b2c 0100     		.2byte	0x1
 20581 1b2e 53       		.byte	0x53
 20582 1b2f 06000000 		.4byte	.LVL336
 20583 1b33 60000000 		.4byte	.LVL349
 20584 1b37 0100     		.2byte	0x1
 20585 1b39 57       		.byte	0x57
 20586 1b3a 60000000 		.4byte	.LVL349
 20587 1b3e 62000000 		.4byte	.LFE22
 20588 1b42 0400     		.2byte	0x4
 20589 1b44 F3       		.byte	0xf3
 20590 1b45 01       		.uleb128 0x1
 20591 1b46 53       		.byte	0x53
 20592 1b47 9F       		.byte	0x9f
 20593 1b48 00000000 		.4byte	0
 20594 1b4c 00000000 		.4byte	0
 20595              	.LLST67:
 20596 1b50 38000000 		.4byte	.LVL341
 20597 1b54 3E000000 		.4byte	.LVL342
 20598 1b58 0500     		.2byte	0x5
 20599 1b5a 74       		.byte	0x74
 20600 1b5b 00       		.sleb128 0
 20601 1b5c 70       		.byte	0x70
 20602 1b5d 00       		.sleb128 0
 20603 1b5e 22       		.byte	0x22
 20604 1b5f 46000000 		.4byte	.LVL343
 20605 1b63 4A000000 		.4byte	.LVL344
 20606 1b67 0500     		.2byte	0x5
 20607 1b69 74       		.byte	0x74
 20608 1b6a 00       		.sleb128 0
 20609 1b6b 70       		.byte	0x70
 20610 1b6c 00       		.sleb128 0
 20611 1b6d 22       		.byte	0x22
 20612 1b6e 4A000000 		.4byte	.LVL344
 20613 1b72 4C000000 		.4byte	.LVL345
 20614 1b76 0600     		.2byte	0x6
 20615 1b78 74       		.byte	0x74
 20616 1b79 00       		.sleb128 0
 20617 1b7a 91       		.byte	0x91
 20618 1b7b 64       		.sleb128 -28
 20619 1b7c 06       		.byte	0x6
 20620 1b7d 22       		.byte	0x22
 20621 1b7e 00000000 		.4byte	0
 20622 1b82 00000000 		.4byte	0
 20623              	.LLST68:
 20624 1b86 00000000 		.4byte	.LVL350
 20625 1b8a 15000000 		.4byte	.LVL352-1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 548


 20626 1b8e 0100     		.2byte	0x1
 20627 1b90 50       		.byte	0x50
 20628 1b91 15000000 		.4byte	.LVL352-1
 20629 1b95 92000000 		.4byte	.LVL361
 20630 1b99 0100     		.2byte	0x1
 20631 1b9b 54       		.byte	0x54
 20632 1b9c 92000000 		.4byte	.LVL361
 20633 1ba0 94000000 		.4byte	.LFE23
 20634 1ba4 0400     		.2byte	0x4
 20635 1ba6 F3       		.byte	0xf3
 20636 1ba7 01       		.uleb128 0x1
 20637 1ba8 50       		.byte	0x50
 20638 1ba9 9F       		.byte	0x9f
 20639 1baa 00000000 		.4byte	0
 20640 1bae 00000000 		.4byte	0
 20641              	.LLST69:
 20642 1bb2 00000000 		.4byte	.LVL350
 20643 1bb6 0C000000 		.4byte	.LVL351
 20644 1bba 0100     		.2byte	0x1
 20645 1bbc 51       		.byte	0x51
 20646 1bbd 0C000000 		.4byte	.LVL351
 20647 1bc1 1C000000 		.4byte	.LVL353
 20648 1bc5 0100     		.2byte	0x1
 20649 1bc7 55       		.byte	0x55
 20650 1bc8 1C000000 		.4byte	.LVL353
 20651 1bcc 20000000 		.4byte	.LVL354
 20652 1bd0 0400     		.2byte	0x4
 20653 1bd2 F3       		.byte	0xf3
 20654 1bd3 01       		.uleb128 0x1
 20655 1bd4 51       		.byte	0x51
 20656 1bd5 9F       		.byte	0x9f
 20657 1bd6 20000000 		.4byte	.LVL354
 20658 1bda 82000000 		.4byte	.LVL359
 20659 1bde 0100     		.2byte	0x1
 20660 1be0 55       		.byte	0x55
 20661 1be1 82000000 		.4byte	.LVL359
 20662 1be5 94000000 		.4byte	.LFE23
 20663 1be9 0400     		.2byte	0x4
 20664 1beb F3       		.byte	0xf3
 20665 1bec 01       		.uleb128 0x1
 20666 1bed 51       		.byte	0x51
 20667 1bee 9F       		.byte	0x9f
 20668 1bef 00000000 		.4byte	0
 20669 1bf3 00000000 		.4byte	0
 20670              	.LLST70:
 20671 1bf7 00000000 		.4byte	.LVL362
 20672 1bfb 18000000 		.4byte	.LVL363
 20673 1bff 0100     		.2byte	0x1
 20674 1c01 50       		.byte	0x50
 20675 1c02 18000000 		.4byte	.LVL363
 20676 1c06 C8000000 		.4byte	.LVL373
 20677 1c0a 0100     		.2byte	0x1
 20678 1c0c 54       		.byte	0x54
 20679 1c0d C8000000 		.4byte	.LVL373
 20680 1c11 E8000000 		.4byte	.LFE24
 20681 1c15 0400     		.2byte	0x4
 20682 1c17 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 549


 20683 1c18 01       		.uleb128 0x1
 20684 1c19 50       		.byte	0x50
 20685 1c1a 9F       		.byte	0x9f
 20686 1c1b 00000000 		.4byte	0
 20687 1c1f 00000000 		.4byte	0
 20688              	.LLST71:
 20689 1c23 00000000 		.4byte	.LVL362
 20690 1c27 3E000000 		.4byte	.LVL364
 20691 1c2b 0100     		.2byte	0x1
 20692 1c2d 51       		.byte	0x51
 20693 1c2e 3E000000 		.4byte	.LVL364
 20694 1c32 54000000 		.4byte	.LVL368
 20695 1c36 0500     		.2byte	0x5
 20696 1c38 74       		.byte	0x74
 20697 1c39 00       		.sleb128 0
 20698 1c3a 70       		.byte	0x70
 20699 1c3b 00       		.sleb128 0
 20700 1c3c 22       		.byte	0x22
 20701 1c3d 54000000 		.4byte	.LVL368
 20702 1c41 59000000 		.4byte	.LVL370-1
 20703 1c45 0300     		.2byte	0x3
 20704 1c47 74       		.byte	0x74
 20705 1c48 F404     		.sleb128 628
 20706 1c4a 59000000 		.4byte	.LVL370-1
 20707 1c4e E8000000 		.4byte	.LFE24
 20708 1c52 0400     		.2byte	0x4
 20709 1c54 F3       		.byte	0xf3
 20710 1c55 01       		.uleb128 0x1
 20711 1c56 51       		.byte	0x51
 20712 1c57 9F       		.byte	0x9f
 20713 1c58 00000000 		.4byte	0
 20714 1c5c 00000000 		.4byte	0
 20715              	.LLST72:
 20716 1c60 00000000 		.4byte	.LVL362
 20717 1c64 48000000 		.4byte	.LVL365
 20718 1c68 0100     		.2byte	0x1
 20719 1c6a 52       		.byte	0x52
 20720 1c6b 48000000 		.4byte	.LVL365
 20721 1c6f 52000000 		.4byte	.LVL367
 20722 1c73 0500     		.2byte	0x5
 20723 1c75 74       		.byte	0x74
 20724 1c76 00       		.sleb128 0
 20725 1c77 71       		.byte	0x71
 20726 1c78 00       		.sleb128 0
 20727 1c79 22       		.byte	0x22
 20728 1c7a 52000000 		.4byte	.LVL367
 20729 1c7e 59000000 		.4byte	.LVL370-1
 20730 1c82 0300     		.2byte	0x3
 20731 1c84 74       		.byte	0x74
 20732 1c85 FC04     		.sleb128 636
 20733 1c87 59000000 		.4byte	.LVL370-1
 20734 1c8b E8000000 		.4byte	.LFE24
 20735 1c8f 0400     		.2byte	0x4
 20736 1c91 F3       		.byte	0xf3
 20737 1c92 01       		.uleb128 0x1
 20738 1c93 52       		.byte	0x52
 20739 1c94 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 550


 20740 1c95 00000000 		.4byte	0
 20741 1c99 00000000 		.4byte	0
 20742              	.LLST73:
 20743 1c9d 00000000 		.4byte	.LVL362
 20744 1ca1 4E000000 		.4byte	.LVL366
 20745 1ca5 0100     		.2byte	0x1
 20746 1ca7 53       		.byte	0x53
 20747 1ca8 4E000000 		.4byte	.LVL366
 20748 1cac 56000000 		.4byte	.LVL369
 20749 1cb0 0500     		.2byte	0x5
 20750 1cb2 74       		.byte	0x74
 20751 1cb3 00       		.sleb128 0
 20752 1cb4 72       		.byte	0x72
 20753 1cb5 00       		.sleb128 0
 20754 1cb6 22       		.byte	0x22
 20755 1cb7 56000000 		.4byte	.LVL369
 20756 1cbb 59000000 		.4byte	.LVL370-1
 20757 1cbf 0300     		.2byte	0x3
 20758 1cc1 74       		.byte	0x74
 20759 1cc2 8005     		.sleb128 640
 20760 1cc4 59000000 		.4byte	.LVL370-1
 20761 1cc8 E8000000 		.4byte	.LFE24
 20762 1ccc 0400     		.2byte	0x4
 20763 1cce F3       		.byte	0xf3
 20764 1ccf 01       		.uleb128 0x1
 20765 1cd0 53       		.byte	0x53
 20766 1cd1 9F       		.byte	0x9f
 20767 1cd2 00000000 		.4byte	0
 20768 1cd6 00000000 		.4byte	0
 20769              	.LLST74:
 20770 1cda 00000000 		.4byte	.LVL374
 20771 1cde 04000000 		.4byte	.LVL375
 20772 1ce2 0100     		.2byte	0x1
 20773 1ce4 50       		.byte	0x50
 20774 1ce5 04000000 		.4byte	.LVL375
 20775 1ce9 1C000000 		.4byte	.LVL379
 20776 1ced 0100     		.2byte	0x1
 20777 1cef 54       		.byte	0x54
 20778 1cf0 1E000000 		.4byte	.LVL380
 20779 1cf4 1E000000 		.4byte	.LVL381
 20780 1cf8 0100     		.2byte	0x1
 20781 1cfa 54       		.byte	0x54
 20782 1cfb 00000000 		.4byte	0
 20783 1cff 00000000 		.4byte	0
 20784              	.LLST75:
 20785 1d03 00000000 		.4byte	.LVL374
 20786 1d07 04000000 		.4byte	.LVL375
 20787 1d0b 0100     		.2byte	0x1
 20788 1d0d 51       		.byte	0x51
 20789 1d0e 04000000 		.4byte	.LVL375
 20790 1d12 20000000 		.4byte	.LFE25
 20791 1d16 0400     		.2byte	0x4
 20792 1d18 F3       		.byte	0xf3
 20793 1d19 01       		.uleb128 0x1
 20794 1d1a 51       		.byte	0x51
 20795 1d1b 9F       		.byte	0x9f
 20796 1d1c 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 551


 20797 1d20 00000000 		.4byte	0
 20798              	.LLST76:
 20799 1d24 0C000000 		.4byte	.LVL376
 20800 1d28 1E000000 		.4byte	.LVL380
 20801 1d2c 0100     		.2byte	0x1
 20802 1d2e 55       		.byte	0x55
 20803 1d2f 00000000 		.4byte	0
 20804 1d33 00000000 		.4byte	0
 20805              	.LLST77:
 20806 1d37 0C000000 		.4byte	.LVL376
 20807 1d3b 13000000 		.4byte	.LVL377-1
 20808 1d3f 0100     		.2byte	0x1
 20809 1d41 50       		.byte	0x50
 20810 1d42 00000000 		.4byte	0
 20811 1d46 00000000 		.4byte	0
 20812              	.LLST78:
 20813 1d4a 14000000 		.4byte	.LVL377
 20814 1d4e 1C000000 		.4byte	.LVL379
 20815 1d52 0100     		.2byte	0x1
 20816 1d54 54       		.byte	0x54
 20817 1d55 00000000 		.4byte	0
 20818 1d59 00000000 		.4byte	0
 20819              	.LLST79:
 20820 1d5d 00000000 		.4byte	.LVL382
 20821 1d61 04000000 		.4byte	.LVL383
 20822 1d65 0100     		.2byte	0x1
 20823 1d67 50       		.byte	0x50
 20824 1d68 04000000 		.4byte	.LVL383
 20825 1d6c 1C000000 		.4byte	.LVL387
 20826 1d70 0100     		.2byte	0x1
 20827 1d72 54       		.byte	0x54
 20828 1d73 1E000000 		.4byte	.LVL388
 20829 1d77 1E000000 		.4byte	.LVL389
 20830 1d7b 0100     		.2byte	0x1
 20831 1d7d 54       		.byte	0x54
 20832 1d7e 00000000 		.4byte	0
 20833 1d82 00000000 		.4byte	0
 20834              	.LLST80:
 20835 1d86 00000000 		.4byte	.LVL382
 20836 1d8a 04000000 		.4byte	.LVL383
 20837 1d8e 0100     		.2byte	0x1
 20838 1d90 51       		.byte	0x51
 20839 1d91 04000000 		.4byte	.LVL383
 20840 1d95 20000000 		.4byte	.LFE26
 20841 1d99 0400     		.2byte	0x4
 20842 1d9b F3       		.byte	0xf3
 20843 1d9c 01       		.uleb128 0x1
 20844 1d9d 51       		.byte	0x51
 20845 1d9e 9F       		.byte	0x9f
 20846 1d9f 00000000 		.4byte	0
 20847 1da3 00000000 		.4byte	0
 20848              	.LLST81:
 20849 1da7 0C000000 		.4byte	.LVL384
 20850 1dab 1E000000 		.4byte	.LVL388
 20851 1daf 0100     		.2byte	0x1
 20852 1db1 55       		.byte	0x55
 20853 1db2 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 552


 20854 1db6 00000000 		.4byte	0
 20855              	.LLST82:
 20856 1dba 0C000000 		.4byte	.LVL384
 20857 1dbe 13000000 		.4byte	.LVL385-1
 20858 1dc2 0100     		.2byte	0x1
 20859 1dc4 50       		.byte	0x50
 20860 1dc5 00000000 		.4byte	0
 20861 1dc9 00000000 		.4byte	0
 20862              	.LLST83:
 20863 1dcd 14000000 		.4byte	.LVL385
 20864 1dd1 1C000000 		.4byte	.LVL387
 20865 1dd5 0100     		.2byte	0x1
 20866 1dd7 54       		.byte	0x54
 20867 1dd8 00000000 		.4byte	0
 20868 1ddc 00000000 		.4byte	0
 20869              	.LLST84:
 20870 1de0 00000000 		.4byte	.LVL390
 20871 1de4 0C000000 		.4byte	.LVL391
 20872 1de8 0100     		.2byte	0x1
 20873 1dea 50       		.byte	0x50
 20874 1deb 0C000000 		.4byte	.LVL391
 20875 1def 6E000000 		.4byte	.LVL399
 20876 1df3 0100     		.2byte	0x1
 20877 1df5 54       		.byte	0x54
 20878 1df6 6E000000 		.4byte	.LVL399
 20879 1dfa 70000000 		.4byte	.LFE27
 20880 1dfe 0400     		.2byte	0x4
 20881 1e00 F3       		.byte	0xf3
 20882 1e01 01       		.uleb128 0x1
 20883 1e02 50       		.byte	0x50
 20884 1e03 9F       		.byte	0x9f
 20885 1e04 00000000 		.4byte	0
 20886 1e08 00000000 		.4byte	0
 20887              	.LLST85:
 20888 1e0c 0C000000 		.4byte	.LVL391
 20889 1e10 13000000 		.4byte	.LVL392-1
 20890 1e14 0100     		.2byte	0x1
 20891 1e16 50       		.byte	0x50
 20892 1e17 00000000 		.4byte	0
 20893 1e1b 00000000 		.4byte	0
 20894              	.LLST86:
 20895 1e1f 1C000000 		.4byte	.LVL393
 20896 1e23 23000000 		.4byte	.LVL394-1
 20897 1e27 0100     		.2byte	0x1
 20898 1e29 50       		.byte	0x50
 20899 1e2a 00000000 		.4byte	0
 20900 1e2e 00000000 		.4byte	0
 20901              	.LLST87:
 20902 1e32 00000000 		.4byte	.LVL400
 20903 1e36 0A000000 		.4byte	.LVL401
 20904 1e3a 0100     		.2byte	0x1
 20905 1e3c 50       		.byte	0x50
 20906 1e3d 0A000000 		.4byte	.LVL401
 20907 1e41 18010000 		.4byte	.LVL434
 20908 1e45 0100     		.2byte	0x1
 20909 1e47 54       		.byte	0x54
 20910 1e48 18010000 		.4byte	.LVL434
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 553


 20911 1e4c 24010000 		.4byte	.LFE33
 20912 1e50 0400     		.2byte	0x4
 20913 1e52 F3       		.byte	0xf3
 20914 1e53 01       		.uleb128 0x1
 20915 1e54 50       		.byte	0x50
 20916 1e55 9F       		.byte	0x9f
 20917 1e56 00000000 		.4byte	0
 20918 1e5a 00000000 		.4byte	0
 20919              	.LLST88:
 20920 1e5e 00000000 		.4byte	.LVL400
 20921 1e62 17000000 		.4byte	.LVL404-1
 20922 1e66 0100     		.2byte	0x1
 20923 1e68 51       		.byte	0x51
 20924 1e69 17000000 		.4byte	.LVL404-1
 20925 1e6d 24010000 		.4byte	.LFE33
 20926 1e71 0400     		.2byte	0x4
 20927 1e73 F3       		.byte	0xf3
 20928 1e74 01       		.uleb128 0x1
 20929 1e75 51       		.byte	0x51
 20930 1e76 9F       		.byte	0x9f
 20931 1e77 00000000 		.4byte	0
 20932 1e7b 00000000 		.4byte	0
 20933              	.LLST89:
 20934 1e7f 00000000 		.4byte	.LVL400
 20935 1e83 17000000 		.4byte	.LVL404-1
 20936 1e87 0100     		.2byte	0x1
 20937 1e89 52       		.byte	0x52
 20938 1e8a 17000000 		.4byte	.LVL404-1
 20939 1e8e 18010000 		.4byte	.LVL435
 20940 1e92 0100     		.2byte	0x1
 20941 1e94 56       		.byte	0x56
 20942 1e95 18010000 		.4byte	.LVL435
 20943 1e99 24010000 		.4byte	.LFE33
 20944 1e9d 0400     		.2byte	0x4
 20945 1e9f F3       		.byte	0xf3
 20946 1ea0 01       		.uleb128 0x1
 20947 1ea1 52       		.byte	0x52
 20948 1ea2 9F       		.byte	0x9f
 20949 1ea3 00000000 		.4byte	0
 20950 1ea7 00000000 		.4byte	0
 20951              	.LLST90:
 20952 1eab 00010000 		.4byte	.LVL430
 20953 1eaf 04010000 		.4byte	.LVL431
 20954 1eb3 0100     		.2byte	0x1
 20955 1eb5 50       		.byte	0x50
 20956 1eb6 04010000 		.4byte	.LVL431
 20957 1eba 0C010000 		.4byte	.LVL432
 20958 1ebe 0100     		.2byte	0x1
 20959 1ec0 51       		.byte	0x51
 20960 1ec1 00000000 		.4byte	0
 20961 1ec5 00000000 		.4byte	0
 20962              	.LLST91:
 20963 1ec9 10000000 		.4byte	.LVL402
 20964 1ecd E6000000 		.4byte	.LVL423
 20965 1ed1 0200     		.2byte	0x2
 20966 1ed3 30       		.byte	0x30
 20967 1ed4 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 554


 20968 1ed5 E6000000 		.4byte	.LVL423
 20969 1ed9 E8000000 		.4byte	.LVL424
 20970 1edd 0100     		.2byte	0x1
 20971 1edf 55       		.byte	0x55
 20972 1ee0 E8000000 		.4byte	.LVL424
 20973 1ee4 EC000000 		.4byte	.LVL425
 20974 1ee8 0200     		.2byte	0x2
 20975 1eea 30       		.byte	0x30
 20976 1eeb 9F       		.byte	0x9f
 20977 1eec F0000000 		.4byte	.LVL426
 20978 1ef0 F2000000 		.4byte	.LVL427
 20979 1ef4 0200     		.2byte	0x2
 20980 1ef6 30       		.byte	0x30
 20981 1ef7 9F       		.byte	0x9f
 20982 1ef8 F2000000 		.4byte	.LVL427
 20983 1efc F8000000 		.4byte	.LVL428
 20984 1f00 0100     		.2byte	0x1
 20985 1f02 55       		.byte	0x55
 20986 1f03 00000000 		.4byte	0
 20987 1f07 00000000 		.4byte	0
 20988              	.LLST92:
 20989 1f0b 14000000 		.4byte	.LVL403
 20990 1f0f CA000000 		.4byte	.LVL419
 20991 1f13 0200     		.2byte	0x2
 20992 1f15 30       		.byte	0x30
 20993 1f16 9F       		.byte	0x9f
 20994 1f17 CA000000 		.4byte	.LVL419
 20995 1f1b E4000000 		.4byte	.LVL422
 20996 1f1f 0100     		.2byte	0x1
 20997 1f21 55       		.byte	0x55
 20998 1f22 E8000000 		.4byte	.LVL424
 20999 1f26 EC000000 		.4byte	.LVL425
 21000 1f2a 0200     		.2byte	0x2
 21001 1f2c 30       		.byte	0x30
 21002 1f2d 9F       		.byte	0x9f
 21003 1f2e F0000000 		.4byte	.LVL426
 21004 1f32 F2000000 		.4byte	.LVL427
 21005 1f36 0200     		.2byte	0x2
 21006 1f38 30       		.byte	0x30
 21007 1f39 9F       		.byte	0x9f
 21008 1f3a 00000000 		.4byte	0
 21009 1f3e 00000000 		.4byte	0
 21010              	.LLST93:
 21011 1f42 28000000 		.4byte	.LVL406
 21012 1f46 3A000000 		.4byte	.LVL407
 21013 1f4a 0200     		.2byte	0x2
 21014 1f4c 74       		.byte	0x74
 21015 1f4d 00       		.sleb128 0
 21016 1f4e 00000000 		.4byte	0
 21017 1f52 00000000 		.4byte	0
 21018              	.LLST94:
 21019 1f56 3E000000 		.4byte	.LVL408
 21020 1f5a 4E000000 		.4byte	.LVL410
 21021 1f5e 0500     		.2byte	0x5
 21022 1f60 74       		.byte	0x74
 21023 1f61 00       		.sleb128 0
 21024 1f62 73       		.byte	0x73
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 555


 21025 1f63 00       		.sleb128 0
 21026 1f64 22       		.byte	0x22
 21027 1f65 4E000000 		.4byte	.LVL410
 21028 1f69 50000000 		.4byte	.LVL411
 21029 1f6d 0200     		.2byte	0x2
 21030 1f6f 73       		.byte	0x73
 21031 1f70 00       		.sleb128 0
 21032 1f71 50000000 		.4byte	.LVL411
 21033 1f75 56000000 		.4byte	.LVL412
 21034 1f79 0900     		.2byte	0x9
 21035 1f7b 74       		.byte	0x74
 21036 1f7c 00       		.sleb128 0
 21037 1f7d 91       		.byte	0x91
 21038 1f7e B87F     		.sleb128 -72
 21039 1f80 06       		.byte	0x6
 21040 1f81 22       		.byte	0x22
 21041 1f82 32       		.byte	0x32
 21042 1f83 1C       		.byte	0x1c
 21043 1f84 00000000 		.4byte	0
 21044 1f88 00000000 		.4byte	0
 21045              	.LLST95:
 21046 1f8c 4A000000 		.4byte	.LVL409
 21047 1f90 4E000000 		.4byte	.LVL410
 21048 1f94 0700     		.2byte	0x7
 21049 1f96 74       		.byte	0x74
 21050 1f97 00       		.sleb128 0
 21051 1f98 73       		.byte	0x73
 21052 1f99 00       		.sleb128 0
 21053 1f9a 22       		.byte	0x22
 21054 1f9b 23       		.byte	0x23
 21055 1f9c 01       		.uleb128 0x1
 21056 1f9d 4E000000 		.4byte	.LVL410
 21057 1fa1 56000000 		.4byte	.LVL412
 21058 1fa5 0900     		.2byte	0x9
 21059 1fa7 74       		.byte	0x74
 21060 1fa8 00       		.sleb128 0
 21061 1fa9 91       		.byte	0x91
 21062 1faa B87F     		.sleb128 -72
 21063 1fac 06       		.byte	0x6
 21064 1fad 22       		.byte	0x22
 21065 1fae 31       		.byte	0x31
 21066 1faf 1C       		.byte	0x1c
 21067 1fb0 00000000 		.4byte	0
 21068 1fb4 00000000 		.4byte	0
 21069              	.LLST96:
 21070 1fb8 00000000 		.4byte	.LVL436
 21071 1fbc 10000000 		.4byte	.LVL437
 21072 1fc0 0100     		.2byte	0x1
 21073 1fc2 50       		.byte	0x50
 21074 1fc3 10000000 		.4byte	.LVL437
 21075 1fc7 B0000000 		.4byte	.LVL450
 21076 1fcb 0100     		.2byte	0x1
 21077 1fcd 54       		.byte	0x54
 21078 1fce B0000000 		.4byte	.LVL450
 21079 1fd2 B2000000 		.4byte	.LFE34
 21080 1fd6 0400     		.2byte	0x4
 21081 1fd8 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 556


 21082 1fd9 01       		.uleb128 0x1
 21083 1fda 50       		.byte	0x50
 21084 1fdb 9F       		.byte	0x9f
 21085 1fdc 00000000 		.4byte	0
 21086 1fe0 00000000 		.4byte	0
 21087              	.LLST97:
 21088 1fe4 00000000 		.4byte	.LVL436
 21089 1fe8 44000000 		.4byte	.LVL441
 21090 1fec 0100     		.2byte	0x1
 21091 1fee 51       		.byte	0x51
 21092 1fef 44000000 		.4byte	.LVL441
 21093 1ff3 A0000000 		.4byte	.LVL445
 21094 1ff7 0100     		.2byte	0x1
 21095 1ff9 57       		.byte	0x57
 21096 1ffa A0000000 		.4byte	.LVL445
 21097 1ffe A2000000 		.4byte	.LVL446
 21098 2002 0100     		.2byte	0x1
 21099 2004 51       		.byte	0x51
 21100 2005 A2000000 		.4byte	.LVL446
 21101 2009 A4000000 		.4byte	.LVL447
 21102 200d 0400     		.2byte	0x4
 21103 200f F3       		.byte	0xf3
 21104 2010 01       		.uleb128 0x1
 21105 2011 51       		.byte	0x51
 21106 2012 9F       		.byte	0x9f
 21107 2013 A4000000 		.4byte	.LVL447
 21108 2017 AA000000 		.4byte	.LVL448
 21109 201b 0100     		.2byte	0x1
 21110 201d 57       		.byte	0x57
 21111 201e AA000000 		.4byte	.LVL448
 21112 2022 B2000000 		.4byte	.LFE34
 21113 2026 0400     		.2byte	0x4
 21114 2028 F3       		.byte	0xf3
 21115 2029 01       		.uleb128 0x1
 21116 202a 51       		.byte	0x51
 21117 202b 9F       		.byte	0x9f
 21118 202c 00000000 		.4byte	0
 21119 2030 00000000 		.4byte	0
 21120              	.LLST98:
 21121 2034 00000000 		.4byte	.LVL436
 21122 2038 24000000 		.4byte	.LVL438
 21123 203c 0200     		.2byte	0x2
 21124 203e 30       		.byte	0x30
 21125 203f 9F       		.byte	0x9f
 21126 2040 24000000 		.4byte	.LVL438
 21127 2044 26000000 		.4byte	.LVL439
 21128 2048 0100     		.2byte	0x1
 21129 204a 52       		.byte	0x52
 21130 204b 26000000 		.4byte	.LVL439
 21131 204f B0000000 		.4byte	.LVL449
 21132 2053 0200     		.2byte	0x2
 21133 2055 7D       		.byte	0x7d
 21134 2056 00       		.sleb128 0
 21135 2057 B0000000 		.4byte	.LVL449
 21136 205b B2000000 		.4byte	.LFE34
 21137 205f 0300     		.2byte	0x3
 21138 2061 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 557


 21139 2062 B87F     		.sleb128 -72
 21140 2064 00000000 		.4byte	0
 21141 2068 00000000 		.4byte	0
 21142              	.LLST99:
 21143 206c 00000000 		.4byte	.LVL451
 21144 2070 14000000 		.4byte	.LVL453
 21145 2074 0100     		.2byte	0x1
 21146 2076 50       		.byte	0x50
 21147 2077 14000000 		.4byte	.LVL453
 21148 207b 48010000 		.4byte	.LVL497
 21149 207f 0100     		.2byte	0x1
 21150 2081 54       		.byte	0x54
 21151 2082 48010000 		.4byte	.LVL497
 21152 2086 48010000 		.4byte	.LVL498
 21153 208a 0400     		.2byte	0x4
 21154 208c 75       		.byte	0x75
 21155 208d 887B     		.sleb128 -632
 21156 208f 9F       		.byte	0x9f
 21157 2090 48010000 		.4byte	.LVL498
 21158 2094 4A010000 		.4byte	.LFE36
 21159 2098 0400     		.2byte	0x4
 21160 209a F3       		.byte	0xf3
 21161 209b 01       		.uleb128 0x1
 21162 209c 50       		.byte	0x50
 21163 209d 9F       		.byte	0x9f
 21164 209e 00000000 		.4byte	0
 21165 20a2 00000000 		.4byte	0
 21166              	.LLST100:
 21167 20a6 00000000 		.4byte	.LVL451
 21168 20aa 16000000 		.4byte	.LVL454
 21169 20ae 0100     		.2byte	0x1
 21170 20b0 51       		.byte	0x51
 21171 20b1 16000000 		.4byte	.LVL454
 21172 20b5 4A010000 		.4byte	.LFE36
 21173 20b9 0400     		.2byte	0x4
 21174 20bb F3       		.byte	0xf3
 21175 20bc 01       		.uleb128 0x1
 21176 20bd 51       		.byte	0x51
 21177 20be 9F       		.byte	0x9f
 21178 20bf 00000000 		.4byte	0
 21179 20c3 00000000 		.4byte	0
 21180              	.LLST101:
 21181 20c7 D2000000 		.4byte	.LVL479
 21182 20cb D8000000 		.4byte	.LVL480
 21183 20cf 0100     		.2byte	0x1
 21184 20d1 50       		.byte	0x50
 21185 20d2 D8000000 		.4byte	.LVL480
 21186 20d6 DD000000 		.4byte	.LVL481-1
 21187 20da 0100     		.2byte	0x1
 21188 20dc 53       		.byte	0x53
 21189 20dd DE000000 		.4byte	.LVL481
 21190 20e1 E4000000 		.4byte	.LVL483
 21191 20e5 0100     		.2byte	0x1
 21192 20e7 50       		.byte	0x50
 21193 20e8 E4000000 		.4byte	.LVL483
 21194 20ec EA000000 		.4byte	.LVL484
 21195 20f0 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 558


 21196 20f2 53       		.byte	0x53
 21197 20f3 00000000 		.4byte	0
 21198 20f7 00000000 		.4byte	0
 21199              	.LLST103:
 21200 20fb 00000000 		.4byte	.LVL451
 21201 20ff 96000000 		.4byte	.LVL471
 21202 2103 0200     		.2byte	0x2
 21203 2105 30       		.byte	0x30
 21204 2106 9F       		.byte	0x9f
 21205 2107 96000000 		.4byte	.LVL471
 21206 210b A0000000 		.4byte	.LVL472
 21207 210f 0100     		.2byte	0x1
 21208 2111 50       		.byte	0x50
 21209 2112 A0000000 		.4byte	.LVL472
 21210 2116 BA000000 		.4byte	.LVL477
 21211 211a 0100     		.2byte	0x1
 21212 211c 56       		.byte	0x56
 21213 211d BA000000 		.4byte	.LVL477
 21214 2121 C2000000 		.4byte	.LVL478
 21215 2125 0100     		.2byte	0x1
 21216 2127 53       		.byte	0x53
 21217 2128 00000000 		.4byte	0
 21218 212c 00000000 		.4byte	0
 21219              	.LLST104:
 21220 2130 0E000000 		.4byte	.LVL452
 21221 2134 72000000 		.4byte	.LVL465
 21222 2138 0400     		.2byte	0x4
 21223 213a 91       		.byte	0x91
 21224 213b B87F     		.sleb128 -72
 21225 213d 9F       		.byte	0x9f
 21226 213e 72000000 		.4byte	.LVL465
 21227 2142 79000000 		.4byte	.LVL466-1
 21228 2146 0100     		.2byte	0x1
 21229 2148 50       		.byte	0x50
 21230 2149 79000000 		.4byte	.LVL466-1
 21231 214d 80000000 		.4byte	.LVL467
 21232 2151 0400     		.2byte	0x4
 21233 2153 91       		.byte	0x91
 21234 2154 B87F     		.sleb128 -72
 21235 2156 9F       		.byte	0x9f
 21236 2157 80000000 		.4byte	.LVL467
 21237 215b 83000000 		.4byte	.LVL468-1
 21238 215f 0100     		.2byte	0x1
 21239 2161 50       		.byte	0x50
 21240 2162 83000000 		.4byte	.LVL468-1
 21241 2166 8E000000 		.4byte	.LVL469
 21242 216a 0400     		.2byte	0x4
 21243 216c 91       		.byte	0x91
 21244 216d B87F     		.sleb128 -72
 21245 216f 9F       		.byte	0x9f
 21246 2170 8E000000 		.4byte	.LVL469
 21247 2174 93000000 		.4byte	.LVL470-1
 21248 2178 0100     		.2byte	0x1
 21249 217a 50       		.byte	0x50
 21250 217b 93000000 		.4byte	.LVL470-1
 21251 217f B0000000 		.4byte	.LVL475
 21252 2183 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 559


 21253 2185 91       		.byte	0x91
 21254 2186 B87F     		.sleb128 -72
 21255 2188 9F       		.byte	0x9f
 21256 2189 B0000000 		.4byte	.LVL475
 21257 218d B3000000 		.4byte	.LVL476-1
 21258 2191 0100     		.2byte	0x1
 21259 2193 50       		.byte	0x50
 21260 2194 B3000000 		.4byte	.LVL476-1
 21261 2198 4A010000 		.4byte	.LFE36
 21262 219c 0400     		.2byte	0x4
 21263 219e 91       		.byte	0x91
 21264 219f B87F     		.sleb128 -72
 21265 21a1 9F       		.byte	0x9f
 21266 21a2 00000000 		.4byte	0
 21267 21a6 00000000 		.4byte	0
 21268              	.LLST105:
 21269 21aa 46000000 		.4byte	.LVL457
 21270 21ae 5A000000 		.4byte	.LVL460
 21271 21b2 0300     		.2byte	0x3
 21272 21b4 74       		.byte	0x74
 21273 21b5 20       		.sleb128 32
 21274 21b6 9F       		.byte	0x9f
 21275 21b7 5A000000 		.4byte	.LVL460
 21276 21bb 5D000000 		.4byte	.LVL461-1
 21277 21bf 0100     		.2byte	0x1
 21278 21c1 52       		.byte	0x52
 21279 21c2 5D000000 		.4byte	.LVL461-1
 21280 21c6 26010000 		.4byte	.LVL493
 21281 21ca 0300     		.2byte	0x3
 21282 21cc 74       		.byte	0x74
 21283 21cd 20       		.sleb128 32
 21284 21ce 9F       		.byte	0x9f
 21285 21cf 2A010000 		.4byte	.LVL494
 21286 21d3 42010000 		.4byte	.LVL496
 21287 21d7 0300     		.2byte	0x3
 21288 21d9 74       		.byte	0x74
 21289 21da 20       		.sleb128 32
 21290 21db 9F       		.byte	0x9f
 21291 21dc 00000000 		.4byte	0
 21292 21e0 00000000 		.4byte	0
 21293              	.LLST106:
 21294 21e4 46000000 		.4byte	.LVL457
 21295 21e8 26010000 		.4byte	.LVL493
 21296 21ec 0100     		.2byte	0x1
 21297 21ee 55       		.byte	0x55
 21298 21ef 2A010000 		.4byte	.LVL494
 21299 21f3 42010000 		.4byte	.LVL496
 21300 21f7 0100     		.2byte	0x1
 21301 21f9 55       		.byte	0x55
 21302 21fa 00000000 		.4byte	0
 21303 21fe 00000000 		.4byte	0
 21304              	.LLST107:
 21305 2202 46000000 		.4byte	.LVL457
 21306 2206 5D000000 		.4byte	.LVL461-1
 21307 220a 0100     		.2byte	0x1
 21308 220c 50       		.byte	0x50
 21309 220d 64000000 		.4byte	.LVL462
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 560


 21310 2211 68000000 		.4byte	.LVL464
 21311 2215 0100     		.2byte	0x1
 21312 2217 50       		.byte	0x50
 21313 2218 00000000 		.4byte	0
 21314 221c 00000000 		.4byte	0
 21315              	.LLST108:
 21316 2220 46000000 		.4byte	.LVL457
 21317 2224 50000000 		.4byte	.LVL458
 21318 2228 0300     		.2byte	0x3
 21319 222a 73       		.byte	0x73
 21320 222b 01       		.sleb128 1
 21321 222c 9F       		.byte	0x9f
 21322 222d 50000000 		.4byte	.LVL458
 21323 2231 54000000 		.4byte	.LVL459
 21324 2235 0300     		.2byte	0x3
 21325 2237 73       		.byte	0x73
 21326 2238 02       		.sleb128 2
 21327 2239 9F       		.byte	0x9f
 21328 223a 54000000 		.4byte	.LVL459
 21329 223e 5D000000 		.4byte	.LVL461-1
 21330 2242 0100     		.2byte	0x1
 21331 2244 53       		.byte	0x53
 21332 2245 64000000 		.4byte	.LVL462
 21333 2249 66000000 		.4byte	.LVL463
 21334 224d 0300     		.2byte	0x3
 21335 224f 73       		.byte	0x73
 21336 2250 01       		.sleb128 1
 21337 2251 9F       		.byte	0x9f
 21338 2252 66000000 		.4byte	.LVL463
 21339 2256 68000000 		.4byte	.LVL464
 21340 225a 0600     		.2byte	0x6
 21341 225c 75       		.byte	0x75
 21342 225d 00       		.sleb128 0
 21343 225e 06       		.byte	0x6
 21344 225f 23       		.byte	0x23
 21345 2260 01       		.uleb128 0x1
 21346 2261 9F       		.byte	0x9f
 21347 2262 00000000 		.4byte	0
 21348 2266 00000000 		.4byte	0
 21349              	.LLST109:
 21350 226a E2000000 		.4byte	.LVL482
 21351 226e 26010000 		.4byte	.LVL493
 21352 2272 0400     		.2byte	0x4
 21353 2274 F3       		.byte	0xf3
 21354 2275 01       		.uleb128 0x1
 21355 2276 51       		.byte	0x51
 21356 2277 9F       		.byte	0x9f
 21357 2278 2A010000 		.4byte	.LVL494
 21358 227c 42010000 		.4byte	.LVL496
 21359 2280 0400     		.2byte	0x4
 21360 2282 F3       		.byte	0xf3
 21361 2283 01       		.uleb128 0x1
 21362 2284 51       		.byte	0x51
 21363 2285 9F       		.byte	0x9f
 21364 2286 00000000 		.4byte	0
 21365 228a 00000000 		.4byte	0
 21366              	.LLST110:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 561


 21367 228e E2000000 		.4byte	.LVL482
 21368 2292 26010000 		.4byte	.LVL493
 21369 2296 0100     		.2byte	0x1
 21370 2298 54       		.byte	0x54
 21371 2299 2A010000 		.4byte	.LVL494
 21372 229d 42010000 		.4byte	.LVL496
 21373 22a1 0100     		.2byte	0x1
 21374 22a3 54       		.byte	0x54
 21375 22a4 00000000 		.4byte	0
 21376 22a8 00000000 		.4byte	0
 21377              	.LLST111:
 21378 22ac 0A010000 		.4byte	.LVL488
 21379 22b0 18010000 		.4byte	.LVL490
 21380 22b4 0100     		.2byte	0x1
 21381 22b6 50       		.byte	0x50
 21382 22b7 18010000 		.4byte	.LVL490
 21383 22bb 1E010000 		.4byte	.LVL491
 21384 22bf 0100     		.2byte	0x1
 21385 22c1 53       		.byte	0x53
 21386 22c2 00000000 		.4byte	0
 21387 22c6 00000000 		.4byte	0
 21388              	.LLST114:
 21389 22ca E2000000 		.4byte	.LVL482
 21390 22ce FA000000 		.4byte	.LVL486
 21391 22d2 0200     		.2byte	0x2
 21392 22d4 30       		.byte	0x30
 21393 22d5 9F       		.byte	0x9f
 21394 22d6 00000000 		.4byte	0
 21395 22da 00000000 		.4byte	0
 21396              	.LLST115:
 21397 22de 0E010000 		.4byte	.LVL489
 21398 22e2 26010000 		.4byte	.LVL493
 21399 22e6 0100     		.2byte	0x1
 21400 22e8 54       		.byte	0x54
 21401 22e9 2A010000 		.4byte	.LVL494
 21402 22ed 42010000 		.4byte	.LVL496
 21403 22f1 0100     		.2byte	0x1
 21404 22f3 54       		.byte	0x54
 21405 22f4 00000000 		.4byte	0
 21406 22f8 00000000 		.4byte	0
 21407              	.LLST116:
 21408 22fc 00000000 		.4byte	.LVL499
 21409 2300 0A000000 		.4byte	.LVL501
 21410 2304 0100     		.2byte	0x1
 21411 2306 50       		.byte	0x50
 21412 2307 0A000000 		.4byte	.LVL501
 21413 230b 0C000000 		.4byte	.LVL502
 21414 230f 0400     		.2byte	0x4
 21415 2311 F3       		.byte	0xf3
 21416 2312 01       		.uleb128 0x1
 21417 2313 50       		.byte	0x50
 21418 2314 9F       		.byte	0x9f
 21419 2315 0C000000 		.4byte	.LVL502
 21420 2319 48000000 		.4byte	.LVL510
 21421 231d 0100     		.2byte	0x1
 21422 231f 50       		.byte	0x50
 21423 2320 48000000 		.4byte	.LVL510
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 562


 21424 2324 50000000 		.4byte	.LFE40
 21425 2328 0400     		.2byte	0x4
 21426 232a F3       		.byte	0xf3
 21427 232b 01       		.uleb128 0x1
 21428 232c 50       		.byte	0x50
 21429 232d 9F       		.byte	0x9f
 21430 232e 00000000 		.4byte	0
 21431 2332 00000000 		.4byte	0
 21432              	.LLST117:
 21433 2336 00000000 		.4byte	.LVL499
 21434 233a 34000000 		.4byte	.LVL506
 21435 233e 0100     		.2byte	0x1
 21436 2340 51       		.byte	0x51
 21437 2341 34000000 		.4byte	.LVL506
 21438 2345 50000000 		.4byte	.LFE40
 21439 2349 0400     		.2byte	0x4
 21440 234b F3       		.byte	0xf3
 21441 234c 01       		.uleb128 0x1
 21442 234d 51       		.byte	0x51
 21443 234e 9F       		.byte	0x9f
 21444 234f 00000000 		.4byte	0
 21445 2353 00000000 		.4byte	0
 21446              	.LLST118:
 21447 2357 00000000 		.4byte	.LVL499
 21448 235b 06000000 		.4byte	.LVL500
 21449 235f 0200     		.2byte	0x2
 21450 2361 30       		.byte	0x30
 21451 2362 9F       		.byte	0x9f
 21452 2363 06000000 		.4byte	.LVL500
 21453 2367 0C000000 		.4byte	.LVL502
 21454 236b 0200     		.2byte	0x2
 21455 236d 31       		.byte	0x31
 21456 236e 9F       		.byte	0x9f
 21457 236f 0C000000 		.4byte	.LVL502
 21458 2373 48000000 		.4byte	.LVL510
 21459 2377 0200     		.2byte	0x2
 21460 2379 30       		.byte	0x30
 21461 237a 9F       		.byte	0x9f
 21462 237b 48000000 		.4byte	.LVL510
 21463 237f 50000000 		.4byte	.LFE40
 21464 2383 0100     		.2byte	0x1
 21465 2385 50       		.byte	0x50
 21466 2386 00000000 		.4byte	0
 21467 238a 00000000 		.4byte	0
 21468              	.LLST119:
 21469 238e 38000000 		.4byte	.LVL507
 21470 2392 44000000 		.4byte	.LVL508
 21471 2396 0700     		.2byte	0x7
 21472 2398 71       		.byte	0x71
 21473 2399 00       		.sleb128 0
 21474 239a F3       		.byte	0xf3
 21475 239b 01       		.uleb128 0x1
 21476 239c 51       		.byte	0x51
 21477 239d 1C       		.byte	0x1c
 21478 239e 9F       		.byte	0x9f
 21479 239f 44000000 		.4byte	.LVL508
 21480 23a3 46000000 		.4byte	.LVL509
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 563


 21481 23a7 0900     		.2byte	0x9
 21482 23a9 71       		.byte	0x71
 21483 23aa 00       		.sleb128 0
 21484 23ab F3       		.byte	0xf3
 21485 23ac 01       		.uleb128 0x1
 21486 23ad 51       		.byte	0x51
 21487 23ae 1C       		.byte	0x1c
 21488 23af 23       		.byte	0x23
 21489 23b0 01       		.uleb128 0x1
 21490 23b1 9F       		.byte	0x9f
 21491 23b2 46000000 		.4byte	.LVL509
 21492 23b6 48000000 		.4byte	.LVL510
 21493 23ba 0700     		.2byte	0x7
 21494 23bc 71       		.byte	0x71
 21495 23bd 00       		.sleb128 0
 21496 23be F3       		.byte	0xf3
 21497 23bf 01       		.uleb128 0x1
 21498 23c0 51       		.byte	0x51
 21499 23c1 1C       		.byte	0x1c
 21500 23c2 9F       		.byte	0x9f
 21501 23c3 00000000 		.4byte	0
 21502 23c7 00000000 		.4byte	0
 21503              	.LLST120:
 21504 23cb 0C000000 		.4byte	.LVL502
 21505 23cf 14000000 		.4byte	.LVL503
 21506 23d3 0200     		.2byte	0x2
 21507 23d5 34       		.byte	0x34
 21508 23d6 9F       		.byte	0x9f
 21509 23d7 14000000 		.4byte	.LVL503
 21510 23db 1C000000 		.4byte	.LVL504
 21511 23df 0200     		.2byte	0x2
 21512 23e1 33       		.byte	0x33
 21513 23e2 9F       		.byte	0x9f
 21514 23e3 1C000000 		.4byte	.LVL504
 21515 23e7 26000000 		.4byte	.LVL505
 21516 23eb 0200     		.2byte	0x2
 21517 23ed 32       		.byte	0x32
 21518 23ee 9F       		.byte	0x9f
 21519 23ef 00000000 		.4byte	0
 21520 23f3 00000000 		.4byte	0
 21521              	.LLST121:
 21522 23f7 00000000 		.4byte	.LVL511
 21523 23fb 0B000000 		.4byte	.LVL513-1
 21524 23ff 0100     		.2byte	0x1
 21525 2401 50       		.byte	0x50
 21526 2402 0B000000 		.4byte	.LVL513-1
 21527 2406 10000000 		.4byte	.LFE41
 21528 240a 0400     		.2byte	0x4
 21529 240c F3       		.byte	0xf3
 21530 240d 01       		.uleb128 0x1
 21531 240e 50       		.byte	0x50
 21532 240f 9F       		.byte	0x9f
 21533 2410 00000000 		.4byte	0
 21534 2414 00000000 		.4byte	0
 21535              	.LLST122:
 21536 2418 00000000 		.4byte	.LVL511
 21537 241c 08000000 		.4byte	.LVL512
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 564


 21538 2420 0100     		.2byte	0x1
 21539 2422 51       		.byte	0x51
 21540 2423 08000000 		.4byte	.LVL512
 21541 2427 0B000000 		.4byte	.LVL513-1
 21542 242b 0300     		.2byte	0x3
 21543 242d 71       		.byte	0x71
 21544 242e 7F       		.sleb128 -1
 21545 242f 9F       		.byte	0x9f
 21546 2430 0B000000 		.4byte	.LVL513-1
 21547 2434 10000000 		.4byte	.LFE41
 21548 2438 0400     		.2byte	0x4
 21549 243a F3       		.byte	0xf3
 21550 243b 01       		.uleb128 0x1
 21551 243c 51       		.byte	0x51
 21552 243d 9F       		.byte	0x9f
 21553 243e 00000000 		.4byte	0
 21554 2442 00000000 		.4byte	0
 21555              	.LLST123:
 21556 2446 00000000 		.4byte	.LVL514
 21557 244a 0B000000 		.4byte	.LVL516-1
 21558 244e 0100     		.2byte	0x1
 21559 2450 50       		.byte	0x50
 21560 2451 0B000000 		.4byte	.LVL516-1
 21561 2455 10000000 		.4byte	.LFE42
 21562 2459 0400     		.2byte	0x4
 21563 245b F3       		.byte	0xf3
 21564 245c 01       		.uleb128 0x1
 21565 245d 50       		.byte	0x50
 21566 245e 9F       		.byte	0x9f
 21567 245f 00000000 		.4byte	0
 21568 2463 00000000 		.4byte	0
 21569              	.LLST124:
 21570 2467 00000000 		.4byte	.LVL514
 21571 246b 08000000 		.4byte	.LVL515
 21572 246f 0100     		.2byte	0x1
 21573 2471 51       		.byte	0x51
 21574 2472 08000000 		.4byte	.LVL515
 21575 2476 0B000000 		.4byte	.LVL516-1
 21576 247a 0300     		.2byte	0x3
 21577 247c 71       		.byte	0x71
 21578 247d 7F       		.sleb128 -1
 21579 247e 9F       		.byte	0x9f
 21580 247f 0B000000 		.4byte	.LVL516-1
 21581 2483 10000000 		.4byte	.LFE42
 21582 2487 0400     		.2byte	0x4
 21583 2489 F3       		.byte	0xf3
 21584 248a 01       		.uleb128 0x1
 21585 248b 51       		.byte	0x51
 21586 248c 9F       		.byte	0x9f
 21587 248d 00000000 		.4byte	0
 21588 2491 00000000 		.4byte	0
 21589              	.LLST125:
 21590 2495 00000000 		.4byte	.LVL517
 21591 2499 0B000000 		.4byte	.LVL519-1
 21592 249d 0100     		.2byte	0x1
 21593 249f 50       		.byte	0x50
 21594 24a0 0B000000 		.4byte	.LVL519-1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 565


 21595 24a4 10000000 		.4byte	.LFE43
 21596 24a8 0400     		.2byte	0x4
 21597 24aa F3       		.byte	0xf3
 21598 24ab 01       		.uleb128 0x1
 21599 24ac 50       		.byte	0x50
 21600 24ad 9F       		.byte	0x9f
 21601 24ae 00000000 		.4byte	0
 21602 24b2 00000000 		.4byte	0
 21603              	.LLST126:
 21604 24b6 00000000 		.4byte	.LVL517
 21605 24ba 08000000 		.4byte	.LVL518
 21606 24be 0100     		.2byte	0x1
 21607 24c0 51       		.byte	0x51
 21608 24c1 08000000 		.4byte	.LVL518
 21609 24c5 0B000000 		.4byte	.LVL519-1
 21610 24c9 0300     		.2byte	0x3
 21611 24cb 71       		.byte	0x71
 21612 24cc 7F       		.sleb128 -1
 21613 24cd 9F       		.byte	0x9f
 21614 24ce 0B000000 		.4byte	.LVL519-1
 21615 24d2 10000000 		.4byte	.LFE43
 21616 24d6 0400     		.2byte	0x4
 21617 24d8 F3       		.byte	0xf3
 21618 24d9 01       		.uleb128 0x1
 21619 24da 51       		.byte	0x51
 21620 24db 9F       		.byte	0x9f
 21621 24dc 00000000 		.4byte	0
 21622 24e0 00000000 		.4byte	0
 21623              	.LLST127:
 21624 24e4 00000000 		.4byte	.LVL520
 21625 24e8 02000000 		.4byte	.LVL521
 21626 24ec 0100     		.2byte	0x1
 21627 24ee 50       		.byte	0x50
 21628 24ef 02000000 		.4byte	.LVL521
 21629 24f3 1C000000 		.4byte	.LFE44
 21630 24f7 0400     		.2byte	0x4
 21631 24f9 F3       		.byte	0xf3
 21632 24fa 01       		.uleb128 0x1
 21633 24fb 50       		.byte	0x50
 21634 24fc 9F       		.byte	0x9f
 21635 24fd 00000000 		.4byte	0
 21636 2501 00000000 		.4byte	0
 21637              	.LLST128:
 21638 2505 00000000 		.4byte	.LVL520
 21639 2509 0E000000 		.4byte	.LVL522
 21640 250d 0100     		.2byte	0x1
 21641 250f 51       		.byte	0x51
 21642 2510 0E000000 		.4byte	.LVL522
 21643 2514 1C000000 		.4byte	.LFE44
 21644 2518 0400     		.2byte	0x4
 21645 251a F3       		.byte	0xf3
 21646 251b 01       		.uleb128 0x1
 21647 251c 51       		.byte	0x51
 21648 251d 9F       		.byte	0x9f
 21649 251e 00000000 		.4byte	0
 21650 2522 00000000 		.4byte	0
 21651              	.LLST129:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 566


 21652 2526 00000000 		.4byte	.LVL520
 21653 252a 17000000 		.4byte	.LVL523-1
 21654 252e 0100     		.2byte	0x1
 21655 2530 52       		.byte	0x52
 21656 2531 17000000 		.4byte	.LVL523-1
 21657 2535 1C000000 		.4byte	.LFE44
 21658 2539 0400     		.2byte	0x4
 21659 253b F3       		.byte	0xf3
 21660 253c 01       		.uleb128 0x1
 21661 253d 52       		.byte	0x52
 21662 253e 9F       		.byte	0x9f
 21663 253f 00000000 		.4byte	0
 21664 2543 00000000 		.4byte	0
 21665              	.LLST130:
 21666 2547 00000000 		.4byte	.LVL520
 21667 254b 17000000 		.4byte	.LVL523-1
 21668 254f 0100     		.2byte	0x1
 21669 2551 53       		.byte	0x53
 21670 2552 17000000 		.4byte	.LVL523-1
 21671 2556 1C000000 		.4byte	.LFE44
 21672 255a 0400     		.2byte	0x4
 21673 255c F3       		.byte	0xf3
 21674 255d 01       		.uleb128 0x1
 21675 255e 53       		.byte	0x53
 21676 255f 9F       		.byte	0x9f
 21677 2560 00000000 		.4byte	0
 21678 2564 00000000 		.4byte	0
 21679              	.LLST131:
 21680 2568 00000000 		.4byte	.LVL524
 21681 256c 06000000 		.4byte	.LVL525
 21682 2570 0100     		.2byte	0x1
 21683 2572 50       		.byte	0x50
 21684 2573 06000000 		.4byte	.LVL525
 21685 2577 1A000000 		.4byte	.LFE45
 21686 257b 0400     		.2byte	0x4
 21687 257d F3       		.byte	0xf3
 21688 257e 01       		.uleb128 0x1
 21689 257f 50       		.byte	0x50
 21690 2580 9F       		.byte	0x9f
 21691 2581 00000000 		.4byte	0
 21692 2585 00000000 		.4byte	0
 21693              	.LLST132:
 21694 2589 00000000 		.4byte	.LVL524
 21695 258d 12000000 		.4byte	.LVL527
 21696 2591 0100     		.2byte	0x1
 21697 2593 51       		.byte	0x51
 21698 2594 12000000 		.4byte	.LVL527
 21699 2598 15000000 		.4byte	.LVL528-1
 21700 259c 0100     		.2byte	0x1
 21701 259e 50       		.byte	0x50
 21702 259f 15000000 		.4byte	.LVL528-1
 21703 25a3 1A000000 		.4byte	.LFE45
 21704 25a7 0400     		.2byte	0x4
 21705 25a9 F3       		.byte	0xf3
 21706 25aa 01       		.uleb128 0x1
 21707 25ab 51       		.byte	0x51
 21708 25ac 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 567


 21709 25ad 00000000 		.4byte	0
 21710 25b1 00000000 		.4byte	0
 21711              	.LLST133:
 21712 25b5 00000000 		.4byte	.LVL524
 21713 25b9 0E000000 		.4byte	.LVL526
 21714 25bd 0100     		.2byte	0x1
 21715 25bf 52       		.byte	0x52
 21716 25c0 0E000000 		.4byte	.LVL526
 21717 25c4 15000000 		.4byte	.LVL528-1
 21718 25c8 0300     		.2byte	0x3
 21719 25ca 72       		.byte	0x72
 21720 25cb 7F       		.sleb128 -1
 21721 25cc 9F       		.byte	0x9f
 21722 25cd 15000000 		.4byte	.LVL528-1
 21723 25d1 1A000000 		.4byte	.LFE45
 21724 25d5 0400     		.2byte	0x4
 21725 25d7 F3       		.byte	0xf3
 21726 25d8 01       		.uleb128 0x1
 21727 25d9 52       		.byte	0x52
 21728 25da 9F       		.byte	0x9f
 21729 25db 00000000 		.4byte	0
 21730 25df 00000000 		.4byte	0
 21731              	.LLST134:
 21732 25e3 00000000 		.4byte	.LVL529
 21733 25e7 29000000 		.4byte	.LVL535-1
 21734 25eb 0100     		.2byte	0x1
 21735 25ed 50       		.byte	0x50
 21736 25ee 29000000 		.4byte	.LVL535-1
 21737 25f2 98000000 		.4byte	.LFE46
 21738 25f6 0400     		.2byte	0x4
 21739 25f8 F3       		.byte	0xf3
 21740 25f9 01       		.uleb128 0x1
 21741 25fa 50       		.byte	0x50
 21742 25fb 9F       		.byte	0x9f
 21743 25fc 00000000 		.4byte	0
 21744 2600 00000000 		.4byte	0
 21745              	.LLST135:
 21746 2604 00000000 		.4byte	.LVL529
 21747 2608 24000000 		.4byte	.LVL533
 21748 260c 0100     		.2byte	0x1
 21749 260e 51       		.byte	0x51
 21750 260f 24000000 		.4byte	.LVL533
 21751 2613 86000000 		.4byte	.LVL549
 21752 2617 0100     		.2byte	0x1
 21753 2619 55       		.byte	0x55
 21754 261a 86000000 		.4byte	.LVL549
 21755 261e 98000000 		.4byte	.LFE46
 21756 2622 0400     		.2byte	0x4
 21757 2624 F3       		.byte	0xf3
 21758 2625 01       		.uleb128 0x1
 21759 2626 51       		.byte	0x51
 21760 2627 9F       		.byte	0x9f
 21761 2628 00000000 		.4byte	0
 21762 262c 00000000 		.4byte	0
 21763              	.LLST136:
 21764 2630 00000000 		.4byte	.LVL529
 21765 2634 26000000 		.4byte	.LVL534
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 568


 21766 2638 0100     		.2byte	0x1
 21767 263a 52       		.byte	0x52
 21768 263b 26000000 		.4byte	.LVL534
 21769 263f 29000000 		.4byte	.LVL535-1
 21770 2643 0100     		.2byte	0x1
 21771 2645 51       		.byte	0x51
 21772 2646 29000000 		.4byte	.LVL535-1
 21773 264a 98000000 		.4byte	.LFE46
 21774 264e 0400     		.2byte	0x4
 21775 2650 F3       		.byte	0xf3
 21776 2651 01       		.uleb128 0x1
 21777 2652 52       		.byte	0x52
 21778 2653 9F       		.byte	0x9f
 21779 2654 00000000 		.4byte	0
 21780 2658 00000000 		.4byte	0
 21781              	.LLST137:
 21782 265c 00000000 		.4byte	.LVL529
 21783 2660 06000000 		.4byte	.LVL530
 21784 2664 0100     		.2byte	0x1
 21785 2666 53       		.byte	0x53
 21786 2667 06000000 		.4byte	.LVL530
 21787 266b 44000000 		.4byte	.LVL541
 21788 266f 0100     		.2byte	0x1
 21789 2671 57       		.byte	0x57
 21790 2672 44000000 		.4byte	.LVL541
 21791 2676 98000000 		.4byte	.LFE46
 21792 267a 0400     		.2byte	0x4
 21793 267c F3       		.byte	0xf3
 21794 267d 01       		.uleb128 0x1
 21795 267e 53       		.byte	0x53
 21796 267f 9F       		.byte	0x9f
 21797 2680 00000000 		.4byte	0
 21798 2684 00000000 		.4byte	0
 21799              	.LLST138:
 21800 2688 22000000 		.4byte	.LVL532
 21801 268c 90000000 		.4byte	.LVL552
 21802 2690 0100     		.2byte	0x1
 21803 2692 54       		.byte	0x54
 21804 2693 00000000 		.4byte	0
 21805 2697 00000000 		.4byte	0
 21806              	.LLST139:
 21807 269b 3A000000 		.4byte	.LVL539
 21808 269f 3E000000 		.4byte	.LVL540
 21809 26a3 0100     		.2byte	0x1
 21810 26a5 50       		.byte	0x50
 21811 26a6 3E000000 		.4byte	.LVL540
 21812 26aa 72000000 		.4byte	.LVL547
 21813 26ae 0100     		.2byte	0x1
 21814 26b0 56       		.byte	0x56
 21815 26b1 00000000 		.4byte	0
 21816 26b5 00000000 		.4byte	0
 21817              	.LLST140:
 21818 26b9 4C000000 		.4byte	.LVL542
 21819 26bd 50000000 		.4byte	.LVL543
 21820 26c1 0100     		.2byte	0x1
 21821 26c3 50       		.byte	0x50
 21822 26c4 50000000 		.4byte	.LVL543
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 569


 21823 26c8 52000000 		.4byte	.LVL544
 21824 26cc 0100     		.2byte	0x1
 21825 26ce 53       		.byte	0x53
 21826 26cf 52000000 		.4byte	.LVL544
 21827 26d3 8E000000 		.4byte	.LVL550
 21828 26d7 0200     		.2byte	0x2
 21829 26d9 91       		.byte	0x91
 21830 26da 54       		.sleb128 -44
 21831 26db 00000000 		.4byte	0
 21832 26df 00000000 		.4byte	0
 21833              	.LLST141:
 21834 26e3 0C000000 		.4byte	.LVL531
 21835 26e7 2C000000 		.4byte	.LVL536
 21836 26eb 0200     		.2byte	0x2
 21837 26ed 30       		.byte	0x30
 21838 26ee 9F       		.byte	0x9f
 21839 26ef 2C000000 		.4byte	.LVL536
 21840 26f3 34000000 		.4byte	.LVL537
 21841 26f7 0100     		.2byte	0x1
 21842 26f9 50       		.byte	0x50
 21843 26fa 34000000 		.4byte	.LVL537
 21844 26fe 90000000 		.4byte	.LVL551
 21845 2702 0200     		.2byte	0x2
 21846 2704 7D       		.byte	0x7d
 21847 2705 00       		.sleb128 0
 21848 2706 90000000 		.4byte	.LVL551
 21849 270a 98000000 		.4byte	.LFE46
 21850 270e 0200     		.2byte	0x2
 21851 2710 91       		.byte	0x91
 21852 2711 50       		.sleb128 -48
 21853 2712 00000000 		.4byte	0
 21854 2716 00000000 		.4byte	0
 21855              	.LLST142:
 21856 271a 00000000 		.4byte	.LVL553
 21857 271e 0A000000 		.4byte	.LVL555
 21858 2722 0100     		.2byte	0x1
 21859 2724 50       		.byte	0x50
 21860 2725 0A000000 		.4byte	.LVL555
 21861 2729 64000000 		.4byte	.LVL571
 21862 272d 0100     		.2byte	0x1
 21863 272f 57       		.byte	0x57
 21864 2730 64000000 		.4byte	.LVL571
 21865 2734 66000000 		.4byte	.LFE47
 21866 2738 0400     		.2byte	0x4
 21867 273a F3       		.byte	0xf3
 21868 273b 01       		.uleb128 0x1
 21869 273c 50       		.byte	0x50
 21870 273d 9F       		.byte	0x9f
 21871 273e 00000000 		.4byte	0
 21872 2742 00000000 		.4byte	0
 21873              	.LLST143:
 21874 2746 00000000 		.4byte	.LVL553
 21875 274a 1B000000 		.4byte	.LVL558-1
 21876 274e 0100     		.2byte	0x1
 21877 2750 51       		.byte	0x51
 21878 2751 1B000000 		.4byte	.LVL558-1
 21879 2755 66000000 		.4byte	.LFE47
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 570


 21880 2759 0400     		.2byte	0x4
 21881 275b F3       		.byte	0xf3
 21882 275c 01       		.uleb128 0x1
 21883 275d 51       		.byte	0x51
 21884 275e 9F       		.byte	0x9f
 21885 275f 00000000 		.4byte	0
 21886 2763 00000000 		.4byte	0
 21887              	.LLST144:
 21888 2767 00000000 		.4byte	.LVL553
 21889 276b 1B000000 		.4byte	.LVL558-1
 21890 276f 0100     		.2byte	0x1
 21891 2771 52       		.byte	0x52
 21892 2772 1B000000 		.4byte	.LVL558-1
 21893 2776 3E000000 		.4byte	.LVL563
 21894 277a 0100     		.2byte	0x1
 21895 277c 55       		.byte	0x55
 21896 277d 3E000000 		.4byte	.LVL563
 21897 2781 66000000 		.4byte	.LFE47
 21898 2785 0700     		.2byte	0x7
 21899 2787 91       		.byte	0x91
 21900 2788 FC7E     		.sleb128 -132
 21901 278a 06       		.byte	0x6
 21902 278b 32       		.byte	0x32
 21903 278c 1C       		.byte	0x1c
 21904 278d 9F       		.byte	0x9f
 21905 278e 00000000 		.4byte	0
 21906 2792 00000000 		.4byte	0
 21907              	.LLST145:
 21908 2796 00000000 		.4byte	.LVL553
 21909 279a 06000000 		.4byte	.LVL554
 21910 279e 0100     		.2byte	0x1
 21911 27a0 53       		.byte	0x53
 21912 27a1 06000000 		.4byte	.LVL554
 21913 27a5 30000000 		.4byte	.LVL560
 21914 27a9 0100     		.2byte	0x1
 21915 27ab 54       		.byte	0x54
 21916 27ac 30000000 		.4byte	.LVL560
 21917 27b0 66000000 		.4byte	.LFE47
 21918 27b4 0400     		.2byte	0x4
 21919 27b6 F3       		.byte	0xf3
 21920 27b7 01       		.uleb128 0x1
 21921 27b8 53       		.byte	0x53
 21922 27b9 9F       		.byte	0x9f
 21923 27ba 00000000 		.4byte	0
 21924 27be 00000000 		.4byte	0
 21925              	.LLST146:
 21926 27c2 30000000 		.4byte	.LVL560
 21927 27c6 34000000 		.4byte	.LVL561
 21928 27ca 0100     		.2byte	0x1
 21929 27cc 50       		.byte	0x50
 21930 27cd 34000000 		.4byte	.LVL561
 21931 27d1 64000000 		.4byte	.LVL568
 21932 27d5 0100     		.2byte	0x1
 21933 27d7 54       		.byte	0x54
 21934 27d8 00000000 		.4byte	0
 21935 27dc 00000000 		.4byte	0
 21936              	.LLST147:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 571


 21937 27e0 3E000000 		.4byte	.LVL563
 21938 27e4 44000000 		.4byte	.LVL564
 21939 27e8 0100     		.2byte	0x1
 21940 27ea 50       		.byte	0x50
 21941 27eb 44000000 		.4byte	.LVL564
 21942 27ef 47000000 		.4byte	.LVL565-1
 21943 27f3 0100     		.2byte	0x1
 21944 27f5 52       		.byte	0x52
 21945 27f6 47000000 		.4byte	.LVL565-1
 21946 27fa 64000000 		.4byte	.LVL569
 21947 27fe 0100     		.2byte	0x1
 21948 2800 55       		.byte	0x55
 21949 2801 00000000 		.4byte	0
 21950 2805 00000000 		.4byte	0
 21951              	.LLST148:
 21952 2809 0C000000 		.4byte	.LVL556
 21953 280d 0E000000 		.4byte	.LVL557
 21954 2811 0400     		.2byte	0x4
 21955 2813 91       		.byte	0x91
 21956 2814 9C7F     		.sleb128 -100
 21957 2816 9F       		.byte	0x9f
 21958 2817 0E000000 		.4byte	.LVL557
 21959 281b 64000000 		.4byte	.LVL570
 21960 281f 0100     		.2byte	0x1
 21961 2821 56       		.byte	0x56
 21962 2822 64000000 		.4byte	.LVL570
 21963 2826 66000000 		.4byte	.LFE47
 21964 282a 0400     		.2byte	0x4
 21965 282c 91       		.byte	0x91
 21966 282d 9C7F     		.sleb128 -100
 21967 282f 9F       		.byte	0x9f
 21968 2830 00000000 		.4byte	0
 21969 2834 00000000 		.4byte	0
 21970              	.LLST151:
 21971 2838 00000000 		.4byte	.LVL572
 21972 283c 14000000 		.4byte	.LVL573
 21973 2840 0100     		.2byte	0x1
 21974 2842 50       		.byte	0x50
 21975 2843 14000000 		.4byte	.LVL573
 21976 2847 16000000 		.4byte	.LFE48
 21977 284b 0400     		.2byte	0x4
 21978 284d F3       		.byte	0xf3
 21979 284e 01       		.uleb128 0x1
 21980 284f 50       		.byte	0x50
 21981 2850 9F       		.byte	0x9f
 21982 2851 00000000 		.4byte	0
 21983 2855 00000000 		.4byte	0
 21984              	.LLST152:
 21985 2859 00000000 		.4byte	.LVL574
 21986 285d 11000000 		.4byte	.LVL576-1
 21987 2861 0100     		.2byte	0x1
 21988 2863 50       		.byte	0x50
 21989 2864 11000000 		.4byte	.LVL576-1
 21990 2868 FC070000 		.4byte	.LVL728
 21991 286c 0100     		.2byte	0x1
 21992 286e 57       		.byte	0x57
 21993 286f FC070000 		.4byte	.LVL728
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 572


 21994 2873 1C080000 		.4byte	.LFE64
 21995 2877 0400     		.2byte	0x4
 21996 2879 F3       		.byte	0xf3
 21997 287a 01       		.uleb128 0x1
 21998 287b 50       		.byte	0x50
 21999 287c 9F       		.byte	0x9f
 22000 287d 00000000 		.4byte	0
 22001 2881 00000000 		.4byte	0
 22002              	.LLST153:
 22003 2885 00000000 		.4byte	.LVL574
 22004 2889 08000000 		.4byte	.LVL575
 22005 288d 0100     		.2byte	0x1
 22006 288f 51       		.byte	0x51
 22007 2890 08000000 		.4byte	.LVL575
 22008 2894 1C080000 		.4byte	.LFE64
 22009 2898 0300     		.2byte	0x3
 22010 289a 91       		.byte	0x91
 22011 289b 9C7F     		.sleb128 -100
 22012 289d 00000000 		.4byte	0
 22013 28a1 00000000 		.4byte	0
 22014              	.LLST154:
 22015 28a5 00000000 		.4byte	.LVL574
 22016 28a9 11000000 		.4byte	.LVL576-1
 22017 28ad 0100     		.2byte	0x1
 22018 28af 52       		.byte	0x52
 22019 28b0 11000000 		.4byte	.LVL576-1
 22020 28b4 1C080000 		.4byte	.LFE64
 22021 28b8 0300     		.2byte	0x3
 22022 28ba 91       		.byte	0x91
 22023 28bb A07F     		.sleb128 -96
 22024 28bd 00000000 		.4byte	0
 22025 28c1 00000000 		.4byte	0
 22026              	.LLST155:
 22027 28c5 00000000 		.4byte	.LVL574
 22028 28c9 11000000 		.4byte	.LVL576-1
 22029 28cd 0100     		.2byte	0x1
 22030 28cf 53       		.byte	0x53
 22031 28d0 11000000 		.4byte	.LVL576-1
 22032 28d4 1C080000 		.4byte	.LFE64
 22033 28d8 0300     		.2byte	0x3
 22034 28da 91       		.byte	0x91
 22035 28db A47F     		.sleb128 -92
 22036 28dd 00000000 		.4byte	0
 22037 28e1 00000000 		.4byte	0
 22038              	.LLST156:
 22039 28e5 14000000 		.4byte	.LVL577
 22040 28e9 52000000 		.4byte	.LVL579
 22041 28ed 0100     		.2byte	0x1
 22042 28ef 50       		.byte	0x50
 22043 28f0 04070000 		.4byte	.LVL696
 22044 28f4 08070000 		.4byte	.LVL697
 22045 28f8 0100     		.2byte	0x1
 22046 28fa 50       		.byte	0x50
 22047 28fb 28070000 		.4byte	.LVL698
 22048 28ff 34070000 		.4byte	.LVL700
 22049 2903 0100     		.2byte	0x1
 22050 2905 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 573


 22051 2906 F0070000 		.4byte	.LVL724
 22052 290a F4070000 		.4byte	.LVL725
 22053 290e 0100     		.2byte	0x1
 22054 2910 50       		.byte	0x50
 22055 2911 00000000 		.4byte	0
 22056 2915 00000000 		.4byte	0
 22057              	.LLST157:
 22058 2919 00000000 		.4byte	.LVL574
 22059 291d 28000000 		.4byte	.LVL578
 22060 2921 0200     		.2byte	0x2
 22061 2923 30       		.byte	0x30
 22062 2924 9F       		.byte	0x9f
 22063 2925 28000000 		.4byte	.LVL578
 22064 2929 F8070000 		.4byte	.LVL727
 22065 292d 0300     		.2byte	0x3
 22066 292f 91       		.byte	0x91
 22067 2930 847F     		.sleb128 -124
 22068 2932 00000000 		.4byte	0
 22069 2936 00000000 		.4byte	0
 22070              	.LLST158:
 22071 293a 00000000 		.4byte	.LVL574
 22072 293e FA060000 		.4byte	.LVL695
 22073 2942 0200     		.2byte	0x2
 22074 2944 30       		.byte	0x30
 22075 2945 9F       		.byte	0x9f
 22076 2946 04070000 		.4byte	.LVL696
 22077 294a 08070000 		.4byte	.LVL697
 22078 294e 0200     		.2byte	0x2
 22079 2950 30       		.byte	0x30
 22080 2951 9F       		.byte	0x9f
 22081 2952 08070000 		.4byte	.LVL697
 22082 2956 78070000 		.4byte	.LVL711
 22083 295a 0300     		.2byte	0x3
 22084 295c 91       		.byte	0x91
 22085 295d FC7E     		.sleb128 -132
 22086 295f 7C070000 		.4byte	.LVL712
 22087 2963 F0070000 		.4byte	.LVL724
 22088 2967 0300     		.2byte	0x3
 22089 2969 91       		.byte	0x91
 22090 296a FC7E     		.sleb128 -132
 22091 296c F0070000 		.4byte	.LVL724
 22092 2970 F4070000 		.4byte	.LVL725
 22093 2974 0200     		.2byte	0x2
 22094 2976 30       		.byte	0x30
 22095 2977 9F       		.byte	0x9f
 22096 2978 F4070000 		.4byte	.LVL725
 22097 297c F6070000 		.4byte	.LVL726
 22098 2980 0300     		.2byte	0x3
 22099 2982 91       		.byte	0x91
 22100 2983 FC7E     		.sleb128 -132
 22101 2985 00000000 		.4byte	0
 22102 2989 00000000 		.4byte	0
 22103              	.LLST159:
 22104 298d 60000000 		.4byte	.LVL580
 22105 2991 04070000 		.4byte	.LVL696
 22106 2995 0100     		.2byte	0x1
 22107 2997 57       		.byte	0x57
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 574


 22108 2998 00000000 		.4byte	0
 22109 299c 00000000 		.4byte	0
 22110              	.LLST160:
 22111 29a0 60000000 		.4byte	.LVL580
 22112 29a4 7C000000 		.4byte	.LVL581
 22113 29a8 0100     		.2byte	0x1
 22114 29aa 51       		.byte	0x51
 22115 29ab 7C000000 		.4byte	.LVL581
 22116 29af F4060000 		.4byte	.LVL693
 22117 29b3 0300     		.2byte	0x3
 22118 29b5 91       		.byte	0x91
 22119 29b6 807F     		.sleb128 -128
 22120 29b8 F4060000 		.4byte	.LVL693
 22121 29bc F8060000 		.4byte	.LVL694
 22122 29c0 0100     		.2byte	0x1
 22123 29c2 51       		.byte	0x51
 22124 29c3 F8060000 		.4byte	.LVL694
 22125 29c7 04070000 		.4byte	.LVL696
 22126 29cb 0300     		.2byte	0x3
 22127 29cd 91       		.byte	0x91
 22128 29ce 807F     		.sleb128 -128
 22129 29d0 00000000 		.4byte	0
 22130 29d4 00000000 		.4byte	0
 22131              	.LLST161:
 22132 29d8 60000000 		.4byte	.LVL580
 22133 29dc 83000000 		.4byte	.LVL582-1
 22134 29e0 0100     		.2byte	0x1
 22135 29e2 50       		.byte	0x50
 22136 29e3 83000000 		.4byte	.LVL582-1
 22137 29e7 F4060000 		.4byte	.LVL693
 22138 29eb 0300     		.2byte	0x3
 22139 29ed 91       		.byte	0x91
 22140 29ee FC7E     		.sleb128 -132
 22141 29f0 F4060000 		.4byte	.LVL693
 22142 29f4 F8060000 		.4byte	.LVL694
 22143 29f8 0100     		.2byte	0x1
 22144 29fa 50       		.byte	0x50
 22145 29fb F8060000 		.4byte	.LVL694
 22146 29ff FA060000 		.4byte	.LVL695
 22147 2a03 0300     		.2byte	0x3
 22148 2a05 91       		.byte	0x91
 22149 2a06 FC7E     		.sleb128 -132
 22150 2a08 00000000 		.4byte	0
 22151 2a0c 00000000 		.4byte	0
 22152              	.LLST162:
 22153 2a10 60000000 		.4byte	.LVL580
 22154 2a14 A0000000 		.4byte	.LVL584
 22155 2a18 0200     		.2byte	0x2
 22156 2a1a 30       		.byte	0x30
 22157 2a1b 9F       		.byte	0x9f
 22158 2a1c D6000000 		.4byte	.LVL587
 22159 2a20 0A010000 		.4byte	.LVL589
 22160 2a24 0200     		.2byte	0x2
 22161 2a26 30       		.byte	0x30
 22162 2a27 9F       		.byte	0x9f
 22163 2a28 0A010000 		.4byte	.LVL589
 22164 2a2c AA010000 		.4byte	.LVL593
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 575


 22165 2a30 0100     		.2byte	0x1
 22166 2a32 56       		.byte	0x56
 22167 2a33 D6010000 		.4byte	.LVL595
 22168 2a37 E2020000 		.4byte	.LVL607
 22169 2a3b 0100     		.2byte	0x1
 22170 2a3d 56       		.byte	0x56
 22171 2a3e 54030000 		.4byte	.LVL614
 22172 2a42 78030000 		.4byte	.LVL617
 22173 2a46 0100     		.2byte	0x1
 22174 2a48 56       		.byte	0x56
 22175 2a49 64040000 		.4byte	.LVL646
 22176 2a4d 48050000 		.4byte	.LVL660
 22177 2a51 0100     		.2byte	0x1
 22178 2a53 56       		.byte	0x56
 22179 2a54 5E050000 		.4byte	.LVL662
 22180 2a58 02060000 		.4byte	.LVL670
 22181 2a5c 0100     		.2byte	0x1
 22182 2a5e 56       		.byte	0x56
 22183 2a5f D6060000 		.4byte	.LVL691
 22184 2a63 DE060000 		.4byte	.LVL692
 22185 2a67 0100     		.2byte	0x1
 22186 2a69 56       		.byte	0x56
 22187 2a6a F4060000 		.4byte	.LVL693
 22188 2a6e F8060000 		.4byte	.LVL694
 22189 2a72 0200     		.2byte	0x2
 22190 2a74 30       		.byte	0x30
 22191 2a75 9F       		.byte	0x9f
 22192 2a76 00000000 		.4byte	0
 22193 2a7a 00000000 		.4byte	0
 22194              	.LLST163:
 22195 2a7e 60000000 		.4byte	.LVL580
 22196 2a82 A0000000 		.4byte	.LVL584
 22197 2a86 0200     		.2byte	0x2
 22198 2a88 30       		.byte	0x30
 22199 2a89 9F       		.byte	0x9f
 22200 2a8a A0000000 		.4byte	.LVL584
 22201 2a8e F4060000 		.4byte	.LVL693
 22202 2a92 0300     		.2byte	0x3
 22203 2a94 91       		.byte	0x91
 22204 2a95 947F     		.sleb128 -108
 22205 2a97 F4060000 		.4byte	.LVL693
 22206 2a9b F8060000 		.4byte	.LVL694
 22207 2a9f 0200     		.2byte	0x2
 22208 2aa1 30       		.byte	0x30
 22209 2aa2 9F       		.byte	0x9f
 22210 2aa3 F8060000 		.4byte	.LVL694
 22211 2aa7 04070000 		.4byte	.LVL696
 22212 2aab 0300     		.2byte	0x3
 22213 2aad 91       		.byte	0x91
 22214 2aae 947F     		.sleb128 -108
 22215 2ab0 00000000 		.4byte	0
 22216 2ab4 00000000 		.4byte	0
 22217              	.LLST164:
 22218 2ab8 84010000 		.4byte	.LVL591
 22219 2abc D6010000 		.4byte	.LVL595
 22220 2ac0 0100     		.2byte	0x1
 22221 2ac2 55       		.byte	0x55
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 576


 22222 2ac3 00000000 		.4byte	0
 22223 2ac7 00000000 		.4byte	0
 22224              	.LLST165:
 22225 2acb 84010000 		.4byte	.LVL591
 22226 2acf D6010000 		.4byte	.LVL595
 22227 2ad3 0100     		.2byte	0x1
 22228 2ad5 54       		.byte	0x54
 22229 2ad6 00000000 		.4byte	0
 22230 2ada 00000000 		.4byte	0
 22231              	.LLST166:
 22232 2ade DC010000 		.4byte	.LVL596
 22233 2ae2 C6020000 		.4byte	.LVL604
 22234 2ae6 0100     		.2byte	0x1
 22235 2ae8 57       		.byte	0x57
 22236 2ae9 00000000 		.4byte	0
 22237 2aed 00000000 		.4byte	0
 22238              	.LLST167:
 22239 2af1 DC010000 		.4byte	.LVL596
 22240 2af5 C6020000 		.4byte	.LVL604
 22241 2af9 0100     		.2byte	0x1
 22242 2afb 55       		.byte	0x55
 22243 2afc 00000000 		.4byte	0
 22244 2b00 00000000 		.4byte	0
 22245              	.LLST168:
 22246 2b04 DC010000 		.4byte	.LVL596
 22247 2b08 C6020000 		.4byte	.LVL604
 22248 2b0c 0100     		.2byte	0x1
 22249 2b0e 54       		.byte	0x54
 22250 2b0f 00000000 		.4byte	0
 22251 2b13 00000000 		.4byte	0
 22252              	.LLST169:
 22253 2b17 CC020000 		.4byte	.LVL605
 22254 2b1b 54030000 		.4byte	.LVL614
 22255 2b1f 0100     		.2byte	0x1
 22256 2b21 57       		.byte	0x57
 22257 2b22 00000000 		.4byte	0
 22258 2b26 00000000 		.4byte	0
 22259              	.LLST170:
 22260 2b2a CC020000 		.4byte	.LVL605
 22261 2b2e 54030000 		.4byte	.LVL614
 22262 2b32 0100     		.2byte	0x1
 22263 2b34 55       		.byte	0x55
 22264 2b35 00000000 		.4byte	0
 22265 2b39 00000000 		.4byte	0
 22266              	.LLST171:
 22267 2b3d CC020000 		.4byte	.LVL605
 22268 2b41 44030000 		.4byte	.LVL612
 22269 2b45 0100     		.2byte	0x1
 22270 2b47 54       		.byte	0x54
 22271 2b48 4C030000 		.4byte	.LVL613
 22272 2b4c 54030000 		.4byte	.LVL614
 22273 2b50 0100     		.2byte	0x1
 22274 2b52 54       		.byte	0x54
 22275 2b53 00000000 		.4byte	0
 22276 2b57 00000000 		.4byte	0
 22277              	.LLST172:
 22278 2b5b 1E030000 		.4byte	.LVL610
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 577


 22279 2b5f 54030000 		.4byte	.LVL614
 22280 2b63 0100     		.2byte	0x1
 22281 2b65 56       		.byte	0x56
 22282 2b66 00000000 		.4byte	0
 22283 2b6a 00000000 		.4byte	0
 22284              	.LLST173:
 22285 2b6e 5A030000 		.4byte	.LVL615
 22286 2b72 64040000 		.4byte	.LVL646
 22287 2b76 0100     		.2byte	0x1
 22288 2b78 57       		.byte	0x57
 22289 2b79 00000000 		.4byte	0
 22290 2b7d 00000000 		.4byte	0
 22291              	.LLST174:
 22292 2b81 5A030000 		.4byte	.LVL615
 22293 2b85 64040000 		.4byte	.LVL646
 22294 2b89 0100     		.2byte	0x1
 22295 2b8b 55       		.byte	0x55
 22296 2b8c 00000000 		.4byte	0
 22297 2b90 00000000 		.4byte	0
 22298              	.LLST175:
 22299 2b94 5A030000 		.4byte	.LVL615
 22300 2b98 94030000 		.4byte	.LVL619
 22301 2b9c 0100     		.2byte	0x1
 22302 2b9e 54       		.byte	0x54
 22303 2b9f 94030000 		.4byte	.LVL619
 22304 2ba3 9B030000 		.4byte	.LVL621-1
 22305 2ba7 0100     		.2byte	0x1
 22306 2ba9 50       		.byte	0x50
 22307 2baa 9B030000 		.4byte	.LVL621-1
 22308 2bae E0030000 		.4byte	.LVL628
 22309 2bb2 0100     		.2byte	0x1
 22310 2bb4 54       		.byte	0x54
 22311 2bb5 E0030000 		.4byte	.LVL628
 22312 2bb9 EB030000 		.4byte	.LVL631-1
 22313 2bbd 0100     		.2byte	0x1
 22314 2bbf 50       		.byte	0x50
 22315 2bc0 EB030000 		.4byte	.LVL631-1
 22316 2bc4 44040000 		.4byte	.LVL642
 22317 2bc8 0100     		.2byte	0x1
 22318 2bca 54       		.byte	0x54
 22319 2bcb 44040000 		.4byte	.LVL642
 22320 2bcf 4B040000 		.4byte	.LVL644-1
 22321 2bd3 0100     		.2byte	0x1
 22322 2bd5 50       		.byte	0x50
 22323 2bd6 4B040000 		.4byte	.LVL644-1
 22324 2bda 64040000 		.4byte	.LVL646
 22325 2bde 0100     		.2byte	0x1
 22326 2be0 54       		.byte	0x54
 22327 2be1 00000000 		.4byte	0
 22328 2be5 00000000 		.4byte	0
 22329              	.LLST176:
 22330 2be9 8A030000 		.4byte	.LVL618
 22331 2bed 96030000 		.4byte	.LVL620
 22332 2bf1 0100     		.2byte	0x1
 22333 2bf3 52       		.byte	0x52
 22334 2bf4 E0030000 		.4byte	.LVL628
 22335 2bf8 E6030000 		.4byte	.LVL630
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 578


 22336 2bfc 0100     		.2byte	0x1
 22337 2bfe 52       		.byte	0x52
 22338 2bff 44040000 		.4byte	.LVL642
 22339 2c03 46040000 		.4byte	.LVL643
 22340 2c07 0100     		.2byte	0x1
 22341 2c09 52       		.byte	0x52
 22342 2c0a 00000000 		.4byte	0
 22343 2c0e 00000000 		.4byte	0
 22344              	.LLST177:
 22345 2c12 B4030000 		.4byte	.LVL624
 22346 2c16 BC030000 		.4byte	.LVL625
 22347 2c1a 0100     		.2byte	0x1
 22348 2c1c 50       		.byte	0x50
 22349 2c1d BC030000 		.4byte	.LVL625
 22350 2c21 E0030000 		.4byte	.LVL628
 22351 2c25 0100     		.2byte	0x1
 22352 2c27 56       		.byte	0x56
 22353 2c28 00000000 		.4byte	0
 22354 2c2c 00000000 		.4byte	0
 22355              	.LLST178:
 22356 2c30 94030000 		.4byte	.LVL619
 22357 2c34 A8030000 		.4byte	.LVL622
 22358 2c38 0100     		.2byte	0x1
 22359 2c3a 56       		.byte	0x56
 22360 2c3b 00000000 		.4byte	0
 22361 2c3f 00000000 		.4byte	0
 22362              	.LLST179:
 22363 2c43 04040000 		.4byte	.LVL634
 22364 2c47 0C040000 		.4byte	.LVL635
 22365 2c4b 0100     		.2byte	0x1
 22366 2c4d 50       		.byte	0x50
 22367 2c4e 0C040000 		.4byte	.LVL635
 22368 2c52 16040000 		.4byte	.LVL637
 22369 2c56 0100     		.2byte	0x1
 22370 2c58 56       		.byte	0x56
 22371 2c59 1E040000 		.4byte	.LVL639
 22372 2c5d 36040000 		.4byte	.LVL641
 22373 2c61 0100     		.2byte	0x1
 22374 2c63 56       		.byte	0x56
 22375 2c64 00000000 		.4byte	0
 22376 2c68 00000000 		.4byte	0
 22377              	.LLST180:
 22378 2c6c E4030000 		.4byte	.LVL629
 22379 2c70 F8030000 		.4byte	.LVL632
 22380 2c74 0100     		.2byte	0x1
 22381 2c76 56       		.byte	0x56
 22382 2c77 00000000 		.4byte	0
 22383 2c7b 00000000 		.4byte	0
 22384              	.LLST181:
 22385 2c7f 16040000 		.4byte	.LVL637
 22386 2c83 1E040000 		.4byte	.LVL639
 22387 2c87 0100     		.2byte	0x1
 22388 2c89 56       		.byte	0x56
 22389 2c8a 00000000 		.4byte	0
 22390 2c8e 00000000 		.4byte	0
 22391              	.LLST182:
 22392 2c92 44040000 		.4byte	.LVL642
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 579


 22393 2c96 5C040000 		.4byte	.LVL645
 22394 2c9a 0100     		.2byte	0x1
 22395 2c9c 56       		.byte	0x56
 22396 2c9d 00000000 		.4byte	0
 22397 2ca1 00000000 		.4byte	0
 22398              	.LLST183:
 22399 2ca5 72040000 		.4byte	.LVL647
 22400 2ca9 B2040000 		.4byte	.LVL651
 22401 2cad 0100     		.2byte	0x1
 22402 2caf 57       		.byte	0x57
 22403 2cb0 00000000 		.4byte	0
 22404 2cb4 00000000 		.4byte	0
 22405              	.LLST184:
 22406 2cb8 72040000 		.4byte	.LVL647
 22407 2cbc B2040000 		.4byte	.LVL651
 22408 2cc0 0100     		.2byte	0x1
 22409 2cc2 55       		.byte	0x55
 22410 2cc3 00000000 		.4byte	0
 22411 2cc7 00000000 		.4byte	0
 22412              	.LLST185:
 22413 2ccb 72040000 		.4byte	.LVL647
 22414 2ccf B2040000 		.4byte	.LVL651
 22415 2cd3 0100     		.2byte	0x1
 22416 2cd5 54       		.byte	0x54
 22417 2cd6 00000000 		.4byte	0
 22418 2cda 00000000 		.4byte	0
 22419              	.LLST186:
 22420 2cde 7A040000 		.4byte	.LVL648
 22421 2ce2 B2040000 		.4byte	.LVL651
 22422 2ce6 0200     		.2byte	0x2
 22423 2ce8 30       		.byte	0x30
 22424 2ce9 9F       		.byte	0x9f
 22425 2cea 00000000 		.4byte	0
 22426 2cee 00000000 		.4byte	0
 22427              	.LLST187:
 22428 2cf2 C0040000 		.4byte	.LVL652
 22429 2cf6 E8040000 		.4byte	.LVL655
 22430 2cfa 0100     		.2byte	0x1
 22431 2cfc 57       		.byte	0x57
 22432 2cfd 00000000 		.4byte	0
 22433 2d01 00000000 		.4byte	0
 22434              	.LLST188:
 22435 2d05 C0040000 		.4byte	.LVL652
 22436 2d09 E8040000 		.4byte	.LVL655
 22437 2d0d 0100     		.2byte	0x1
 22438 2d0f 55       		.byte	0x55
 22439 2d10 00000000 		.4byte	0
 22440 2d14 00000000 		.4byte	0
 22441              	.LLST189:
 22442 2d18 C0040000 		.4byte	.LVL652
 22443 2d1c E8040000 		.4byte	.LVL655
 22444 2d20 0100     		.2byte	0x1
 22445 2d22 54       		.byte	0x54
 22446 2d23 00000000 		.4byte	0
 22447 2d27 00000000 		.4byte	0
 22448              	.LLST190:
 22449 2d2b C4040000 		.4byte	.LVL653
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 580


 22450 2d2f E8040000 		.4byte	.LVL655
 22451 2d33 0200     		.2byte	0x2
 22452 2d35 30       		.byte	0x30
 22453 2d36 9F       		.byte	0x9f
 22454 2d37 00000000 		.4byte	0
 22455 2d3b 00000000 		.4byte	0
 22456              	.LLST191:
 22457 2d3f 24050000 		.4byte	.LVL658
 22458 2d43 33050000 		.4byte	.LVL659-1
 22459 2d47 0100     		.2byte	0x1
 22460 2d49 53       		.byte	0x53
 22461 2d4a 00000000 		.4byte	0
 22462 2d4e 00000000 		.4byte	0
 22463              	.LLST192:
 22464 2d52 24050000 		.4byte	.LVL658
 22465 2d56 54050000 		.4byte	.LVL661
 22466 2d5a 0100     		.2byte	0x1
 22467 2d5c 54       		.byte	0x54
 22468 2d5d 00000000 		.4byte	0
 22469 2d61 00000000 		.4byte	0
 22470              	.LLST193:
 22471 2d65 6C050000 		.4byte	.LVL663
 22472 2d69 D6050000 		.4byte	.LVL666
 22473 2d6d 0100     		.2byte	0x1
 22474 2d6f 55       		.byte	0x55
 22475 2d70 00000000 		.4byte	0
 22476 2d74 00000000 		.4byte	0
 22477              	.LLST194:
 22478 2d78 6C050000 		.4byte	.LVL663
 22479 2d7c D6050000 		.4byte	.LVL666
 22480 2d80 0100     		.2byte	0x1
 22481 2d82 54       		.byte	0x54
 22482 2d83 00000000 		.4byte	0
 22483 2d87 00000000 		.4byte	0
 22484              	.LLST195:
 22485 2d8b EE050000 		.4byte	.LVL667
 22486 2d8f D6060000 		.4byte	.LVL691
 22487 2d93 0100     		.2byte	0x1
 22488 2d95 57       		.byte	0x57
 22489 2d96 00000000 		.4byte	0
 22490 2d9a 00000000 		.4byte	0
 22491              	.LLST196:
 22492 2d9e EE050000 		.4byte	.LVL667
 22493 2da2 F0050000 		.4byte	.LVL668
 22494 2da6 0100     		.2byte	0x1
 22495 2da8 53       		.byte	0x53
 22496 2da9 F0050000 		.4byte	.LVL668
 22497 2dad FB050000 		.4byte	.LVL669-1
 22498 2db1 0300     		.2byte	0x3
 22499 2db3 91       		.byte	0x91
 22500 2db4 AC7F     		.sleb128 -84
 22501 2db6 FB050000 		.4byte	.LVL669-1
 22502 2dba D6060000 		.4byte	.LVL691
 22503 2dbe 0300     		.2byte	0x3
 22504 2dc0 91       		.byte	0x91
 22505 2dc1 907F     		.sleb128 -112
 22506 2dc3 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 581


 22507 2dc7 00000000 		.4byte	0
 22508              	.LLST197:
 22509 2dcb EE050000 		.4byte	.LVL667
 22510 2dcf FB050000 		.4byte	.LVL669-1
 22511 2dd3 0100     		.2byte	0x1
 22512 2dd5 50       		.byte	0x50
 22513 2dd6 FB050000 		.4byte	.LVL669-1
 22514 2dda D6060000 		.4byte	.LVL691
 22515 2dde 0300     		.2byte	0x3
 22516 2de0 91       		.byte	0x91
 22517 2de1 887F     		.sleb128 -120
 22518 2de3 00000000 		.4byte	0
 22519 2de7 00000000 		.4byte	0
 22520              	.LLST198:
 22521 2deb 14060000 		.4byte	.LVL671
 22522 2def 48060000 		.4byte	.LVL677
 22523 2df3 0100     		.2byte	0x1
 22524 2df5 54       		.byte	0x54
 22525 2df6 00000000 		.4byte	0
 22526 2dfa 00000000 		.4byte	0
 22527              	.LLST199:
 22528 2dfe 14060000 		.4byte	.LVL671
 22529 2e02 2C060000 		.4byte	.LVL673
 22530 2e06 0200     		.2byte	0x2
 22531 2e08 30       		.byte	0x30
 22532 2e09 9F       		.byte	0x9f
 22533 2e0a 2C060000 		.4byte	.LVL673
 22534 2e0e 2E060000 		.4byte	.LVL674
 22535 2e12 0100     		.2byte	0x1
 22536 2e14 55       		.byte	0x55
 22537 2e15 2E060000 		.4byte	.LVL674
 22538 2e19 38060000 		.4byte	.LVL675
 22539 2e1d 0200     		.2byte	0x2
 22540 2e1f 30       		.byte	0x30
 22541 2e20 9F       		.byte	0x9f
 22542 2e21 38060000 		.4byte	.LVL675
 22543 2e25 D6060000 		.4byte	.LVL691
 22544 2e29 0100     		.2byte	0x1
 22545 2e2b 55       		.byte	0x55
 22546 2e2c 00000000 		.4byte	0
 22547 2e30 00000000 		.4byte	0
 22548              	.LLST200:
 22549 2e34 46060000 		.4byte	.LVL676
 22550 2e38 48060000 		.4byte	.LVL677
 22551 2e3c 0300     		.2byte	0x3
 22552 2e3e 77       		.byte	0x77
 22553 2e3f 8005     		.sleb128 640
 22554 2e41 00000000 		.4byte	0
 22555 2e45 00000000 		.4byte	0
 22556              	.LLST201:
 22557 2e49 46060000 		.4byte	.LVL676
 22558 2e4d D6060000 		.4byte	.LVL691
 22559 2e51 0100     		.2byte	0x1
 22560 2e53 55       		.byte	0x55
 22561 2e54 00000000 		.4byte	0
 22562 2e58 00000000 		.4byte	0
 22563              	.LLST202:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 582


 22564 2e5c 46060000 		.4byte	.LVL676
 22565 2e60 48060000 		.4byte	.LVL677
 22566 2e64 0100     		.2byte	0x1
 22567 2e66 53       		.byte	0x53
 22568 2e67 48060000 		.4byte	.LVL677
 22569 2e6b D6060000 		.4byte	.LVL691
 22570 2e6f 0300     		.2byte	0x3
 22571 2e71 91       		.byte	0x91
 22572 2e72 987F     		.sleb128 -104
 22573 2e74 00000000 		.4byte	0
 22574 2e78 00000000 		.4byte	0
 22575              	.LLST203:
 22576 2e7c 46060000 		.4byte	.LVL676
 22577 2e80 D6060000 		.4byte	.LVL691
 22578 2e84 0300     		.2byte	0x3
 22579 2e86 91       		.byte	0x91
 22580 2e87 8C7F     		.sleb128 -116
 22581 2e89 00000000 		.4byte	0
 22582 2e8d 00000000 		.4byte	0
 22583              	.LLST204:
 22584 2e91 6E060000 		.4byte	.LVL679
 22585 2e95 BC060000 		.4byte	.LVL689
 22586 2e99 0100     		.2byte	0x1
 22587 2e9b 56       		.byte	0x56
 22588 2e9c 00000000 		.4byte	0
 22589 2ea0 00000000 		.4byte	0
 22590              	.LLST205:
 22591 2ea4 92060000 		.4byte	.LVL682
 22592 2ea8 96060000 		.4byte	.LVL683
 22593 2eac 0100     		.2byte	0x1
 22594 2eae 50       		.byte	0x50
 22595 2eaf 96060000 		.4byte	.LVL683
 22596 2eb3 C4060000 		.4byte	.LVL690
 22597 2eb7 0100     		.2byte	0x1
 22598 2eb9 54       		.byte	0x54
 22599 2eba 00000000 		.4byte	0
 22600 2ebe 00000000 		.4byte	0
 22601              	.LLST206:
 22602 2ec2 A0060000 		.4byte	.LVL685
 22603 2ec6 A8060000 		.4byte	.LVL687
 22604 2eca 0100     		.2byte	0x1
 22605 2ecc 54       		.byte	0x54
 22606 2ecd 00000000 		.4byte	0
 22607 2ed1 00000000 		.4byte	0
 22608              	.LLST207:
 22609 2ed5 2C070000 		.4byte	.LVL699
 22610 2ed9 78070000 		.4byte	.LVL711
 22611 2edd 0100     		.2byte	0x1
 22612 2edf 57       		.byte	0x57
 22613 2ee0 7C070000 		.4byte	.LVL712
 22614 2ee4 F0070000 		.4byte	.LVL724
 22615 2ee8 0100     		.2byte	0x1
 22616 2eea 57       		.byte	0x57
 22617 2eeb F4070000 		.4byte	.LVL725
 22618 2eef F6070000 		.4byte	.LVL726
 22619 2ef3 0100     		.2byte	0x1
 22620 2ef5 57       		.byte	0x57
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 583


 22621 2ef6 00000000 		.4byte	0
 22622 2efa 00000000 		.4byte	0
 22623              	.LLST208:
 22624 2efe 38070000 		.4byte	.LVL701
 22625 2f02 3A070000 		.4byte	.LVL702
 22626 2f06 0500     		.2byte	0x5
 22627 2f08 70       		.byte	0x70
 22628 2f09 00       		.sleb128 0
 22629 2f0a 73       		.byte	0x73
 22630 2f0b 00       		.sleb128 0
 22631 2f0c 22       		.byte	0x22
 22632 2f0d 3A070000 		.4byte	.LVL702
 22633 2f11 42070000 		.4byte	.LVL703
 22634 2f15 0700     		.2byte	0x7
 22635 2f17 70       		.byte	0x70
 22636 2f18 00       		.sleb128 0
 22637 2f19 72       		.byte	0x72
 22638 2f1a 00       		.sleb128 0
 22639 2f1b 22       		.byte	0x22
 22640 2f1c 31       		.byte	0x31
 22641 2f1d 1C       		.byte	0x1c
 22642 2f1e 42070000 		.4byte	.LVL703
 22643 2f22 47070000 		.4byte	.LVL704-1
 22644 2f26 0A00     		.2byte	0xa
 22645 2f28 70       		.byte	0x70
 22646 2f29 00       		.sleb128 0
 22647 2f2a 91       		.byte	0x91
 22648 2f2b 807F     		.sleb128 -128
 22649 2f2d 06       		.byte	0x6
 22650 2f2e 06       		.byte	0x6
 22651 2f2f 22       		.byte	0x22
 22652 2f30 31       		.byte	0x31
 22653 2f31 1C       		.byte	0x1c
 22654 2f32 58070000 		.4byte	.LVL705
 22655 2f36 5A070000 		.4byte	.LVL706
 22656 2f3a 0500     		.2byte	0x5
 22657 2f3c 71       		.byte	0x71
 22658 2f3d 00       		.sleb128 0
 22659 2f3e 70       		.byte	0x70
 22660 2f3f 00       		.sleb128 0
 22661 2f40 22       		.byte	0x22
 22662 2f41 5A070000 		.4byte	.LVL706
 22663 2f45 62070000 		.4byte	.LVL707
 22664 2f49 0700     		.2byte	0x7
 22665 2f4b 71       		.byte	0x71
 22666 2f4c 00       		.sleb128 0
 22667 2f4d 73       		.byte	0x73
 22668 2f4e 00       		.sleb128 0
 22669 2f4f 22       		.byte	0x22
 22670 2f50 31       		.byte	0x31
 22671 2f51 1C       		.byte	0x1c
 22672 2f52 62070000 		.4byte	.LVL707
 22673 2f56 64070000 		.4byte	.LVL708
 22674 2f5a 0B00     		.2byte	0xb
 22675 2f5c 77       		.byte	0x77
 22676 2f5d 00       		.sleb128 0
 22677 2f5e 75       		.byte	0x75
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 584


 22678 2f5f 00       		.sleb128 0
 22679 2f60 22       		.byte	0x22
 22680 2f61 06       		.byte	0x6
 22681 2f62 73       		.byte	0x73
 22682 2f63 00       		.sleb128 0
 22683 2f64 22       		.byte	0x22
 22684 2f65 31       		.byte	0x31
 22685 2f66 1C       		.byte	0x1c
 22686 2f67 64070000 		.4byte	.LVL708
 22687 2f6b 66070000 		.4byte	.LVL709
 22688 2f6f 0E00     		.2byte	0xe
 22689 2f71 77       		.byte	0x77
 22690 2f72 00       		.sleb128 0
 22691 2f73 75       		.byte	0x75
 22692 2f74 00       		.sleb128 0
 22693 2f75 22       		.byte	0x22
 22694 2f76 06       		.byte	0x6
 22695 2f77 91       		.byte	0x91
 22696 2f78 807F     		.sleb128 -128
 22697 2f7a 06       		.byte	0x6
 22698 2f7b 06       		.byte	0x6
 22699 2f7c 22       		.byte	0x22
 22700 2f7d 31       		.byte	0x31
 22701 2f7e 1C       		.byte	0x1c
 22702 2f7f 66070000 		.4byte	.LVL709
 22703 2f83 74070000 		.4byte	.LVL710
 22704 2f87 0100     		.2byte	0x1
 22705 2f89 50       		.byte	0x50
 22706 2f8a 74070000 		.4byte	.LVL710
 22707 2f8e 78070000 		.4byte	.LVL711
 22708 2f92 0700     		.2byte	0x7
 22709 2f94 70       		.byte	0x70
 22710 2f95 00       		.sleb128 0
 22711 2f96 72       		.byte	0x72
 22712 2f97 00       		.sleb128 0
 22713 2f98 22       		.byte	0x22
 22714 2f99 31       		.byte	0x31
 22715 2f9a 1C       		.byte	0x1c
 22716 2f9b 7C070000 		.4byte	.LVL712
 22717 2f9f 7E070000 		.4byte	.LVL713
 22718 2fa3 0700     		.2byte	0x7
 22719 2fa5 71       		.byte	0x71
 22720 2fa6 00       		.sleb128 0
 22721 2fa7 73       		.byte	0x73
 22722 2fa8 00       		.sleb128 0
 22723 2fa9 22       		.byte	0x22
 22724 2faa 31       		.byte	0x31
 22725 2fab 1C       		.byte	0x1c
 22726 2fac 7E070000 		.4byte	.LVL713
 22727 2fb0 80070000 		.4byte	.LVL714
 22728 2fb4 0A00     		.2byte	0xa
 22729 2fb6 71       		.byte	0x71
 22730 2fb7 00       		.sleb128 0
 22731 2fb8 91       		.byte	0x91
 22732 2fb9 807F     		.sleb128 -128
 22733 2fbb 06       		.byte	0x6
 22734 2fbc 06       		.byte	0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 585


 22735 2fbd 22       		.byte	0x22
 22736 2fbe 31       		.byte	0x31
 22737 2fbf 1C       		.byte	0x1c
 22738 2fc0 80070000 		.4byte	.LVL714
 22739 2fc4 94070000 		.4byte	.LVL716
 22740 2fc8 0100     		.2byte	0x1
 22741 2fca 50       		.byte	0x50
 22742 2fcb E4070000 		.4byte	.LVL723
 22743 2fcf F0070000 		.4byte	.LVL724
 22744 2fd3 0100     		.2byte	0x1
 22745 2fd5 50       		.byte	0x50
 22746 2fd6 F4070000 		.4byte	.LVL725
 22747 2fda F6070000 		.4byte	.LVL726
 22748 2fde 0100     		.2byte	0x1
 22749 2fe0 50       		.byte	0x50
 22750 2fe1 00000000 		.4byte	0
 22751 2fe5 00000000 		.4byte	0
 22752              	.LLST209:
 22753 2fe9 90070000 		.4byte	.LVL715
 22754 2fed 9A070000 		.4byte	.LVL717
 22755 2ff1 0200     		.2byte	0x2
 22756 2ff3 30       		.byte	0x30
 22757 2ff4 9F       		.byte	0x9f
 22758 2ff5 9A070000 		.4byte	.LVL717
 22759 2ff9 A8070000 		.4byte	.LVL718
 22760 2ffd 0100     		.2byte	0x1
 22761 2fff 50       		.byte	0x50
 22762 3000 00000000 		.4byte	0
 22763 3004 00000000 		.4byte	0
 22764              	.LLST210:
 22765 3008 AE070000 		.4byte	.LVL719
 22766 300c D7070000 		.4byte	.LVL720-1
 22767 3010 0300     		.2byte	0x3
 22768 3012 77       		.byte	0x77
 22769 3013 DC00     		.sleb128 92
 22770 3015 DA070000 		.4byte	.LVL721
 22771 3019 DF070000 		.4byte	.LVL722-1
 22772 301d 0300     		.2byte	0x3
 22773 301f 77       		.byte	0x77
 22774 3020 DC00     		.sleb128 92
 22775 3022 00000000 		.4byte	0
 22776 3026 00000000 		.4byte	0
 22777              	.LLST211:
 22778 302a AE070000 		.4byte	.LVL719
 22779 302e D7070000 		.4byte	.LVL720-1
 22780 3032 0200     		.2byte	0x2
 22781 3034 77       		.byte	0x77
 22782 3035 14       		.sleb128 20
 22783 3036 DA070000 		.4byte	.LVL721
 22784 303a DF070000 		.4byte	.LVL722-1
 22785 303e 0200     		.2byte	0x2
 22786 3040 77       		.byte	0x77
 22787 3041 14       		.sleb128 20
 22788 3042 00000000 		.4byte	0
 22789 3046 00000000 		.4byte	0
 22790              	.LLST212:
 22791 304a AE070000 		.4byte	.LVL719
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 586


 22792 304e D7070000 		.4byte	.LVL720-1
 22793 3052 0300     		.2byte	0x3
 22794 3054 77       		.byte	0x77
 22795 3055 8005     		.sleb128 640
 22796 3057 DA070000 		.4byte	.LVL721
 22797 305b DF070000 		.4byte	.LVL722-1
 22798 305f 0300     		.2byte	0x3
 22799 3061 77       		.byte	0x77
 22800 3062 8005     		.sleb128 640
 22801 3064 00000000 		.4byte	0
 22802 3068 00000000 		.4byte	0
 22803              	.LLST213:
 22804 306c AE070000 		.4byte	.LVL719
 22805 3070 D7070000 		.4byte	.LVL720-1
 22806 3074 0200     		.2byte	0x2
 22807 3076 77       		.byte	0x77
 22808 3077 18       		.sleb128 24
 22809 3078 DA070000 		.4byte	.LVL721
 22810 307c DF070000 		.4byte	.LVL722-1
 22811 3080 0100     		.2byte	0x1
 22812 3082 53       		.byte	0x53
 22813 3083 00000000 		.4byte	0
 22814 3087 00000000 		.4byte	0
 22815              	.LLST214:
 22816 308b AE070000 		.4byte	.LVL719
 22817 308f D7070000 		.4byte	.LVL720-1
 22818 3093 0100     		.2byte	0x1
 22819 3095 51       		.byte	0x51
 22820 3096 DA070000 		.4byte	.LVL721
 22821 309a DF070000 		.4byte	.LVL722-1
 22822 309e 0100     		.2byte	0x1
 22823 30a0 51       		.byte	0x51
 22824 30a1 00000000 		.4byte	0
 22825 30a5 00000000 		.4byte	0
 22826              	.LLST215:
 22827 30a9 AE070000 		.4byte	.LVL719
 22828 30ad D7070000 		.4byte	.LVL720-1
 22829 30b1 0100     		.2byte	0x1
 22830 30b3 50       		.byte	0x50
 22831 30b4 DA070000 		.4byte	.LVL721
 22832 30b8 DF070000 		.4byte	.LVL722-1
 22833 30bc 0100     		.2byte	0x1
 22834 30be 50       		.byte	0x50
 22835 30bf 00000000 		.4byte	0
 22836 30c3 00000000 		.4byte	0
 22837              	.LLST216:
 22838 30c7 AE070000 		.4byte	.LVL719
 22839 30cb E4070000 		.4byte	.LVL723
 22840 30cf 0200     		.2byte	0x2
 22841 30d1 30       		.byte	0x30
 22842 30d2 9F       		.byte	0x9f
 22843 30d3 00000000 		.4byte	0
 22844 30d7 00000000 		.4byte	0
 22845              	.LLST219:
 22846 30db 00000000 		.4byte	.LVL729
 22847 30df 07000000 		.4byte	.LVL730-1
 22848 30e3 0100     		.2byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 587


 22849 30e5 50       		.byte	0x50
 22850 30e6 07000000 		.4byte	.LVL730-1
 22851 30ea 66000000 		.4byte	.LVL744
 22852 30ee 0100     		.2byte	0x1
 22853 30f0 54       		.byte	0x54
 22854 30f1 66000000 		.4byte	.LVL744
 22855 30f5 6C000000 		.4byte	.LFE63
 22856 30f9 0400     		.2byte	0x4
 22857 30fb F3       		.byte	0xf3
 22858 30fc 01       		.uleb128 0x1
 22859 30fd 50       		.byte	0x50
 22860 30fe 9F       		.byte	0x9f
 22861 30ff 00000000 		.4byte	0
 22862 3103 00000000 		.4byte	0
 22863              	.LLST220:
 22864 3107 00000000 		.4byte	.LVL729
 22865 310b 07000000 		.4byte	.LVL730-1
 22866 310f 0100     		.2byte	0x1
 22867 3111 51       		.byte	0x51
 22868 3112 07000000 		.4byte	.LVL730-1
 22869 3116 6C000000 		.4byte	.LFE63
 22870 311a 0400     		.2byte	0x4
 22871 311c F3       		.byte	0xf3
 22872 311d 01       		.uleb128 0x1
 22873 311e 51       		.byte	0x51
 22874 311f 9F       		.byte	0x9f
 22875 3120 00000000 		.4byte	0
 22876 3124 00000000 		.4byte	0
 22877              	.LLST221:
 22878 3128 00000000 		.4byte	.LVL729
 22879 312c 07000000 		.4byte	.LVL730-1
 22880 3130 0100     		.2byte	0x1
 22881 3132 52       		.byte	0x52
 22882 3133 07000000 		.4byte	.LVL730-1
 22883 3137 6C000000 		.4byte	.LFE63
 22884 313b 0400     		.2byte	0x4
 22885 313d F3       		.byte	0xf3
 22886 313e 01       		.uleb128 0x1
 22887 313f 52       		.byte	0x52
 22888 3140 9F       		.byte	0x9f
 22889 3141 00000000 		.4byte	0
 22890 3145 00000000 		.4byte	0
 22891              	.LLST222:
 22892 3149 00000000 		.4byte	.LVL729
 22893 314d 07000000 		.4byte	.LVL730-1
 22894 3151 0100     		.2byte	0x1
 22895 3153 53       		.byte	0x53
 22896 3154 07000000 		.4byte	.LVL730-1
 22897 3158 6C000000 		.4byte	.LFE63
 22898 315c 0400     		.2byte	0x4
 22899 315e F3       		.byte	0xf3
 22900 315f 01       		.uleb128 0x1
 22901 3160 53       		.byte	0x53
 22902 3161 9F       		.byte	0x9f
 22903 3162 00000000 		.4byte	0
 22904 3166 00000000 		.4byte	0
 22905              	.LLST223:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 588


 22906 316a 0A000000 		.4byte	.LVL731
 22907 316e 10000000 		.4byte	.LVL732
 22908 3172 0100     		.2byte	0x1
 22909 3174 50       		.byte	0x50
 22910 3175 10000000 		.4byte	.LVL732
 22911 3179 1C000000 		.4byte	.LVL734
 22912 317d 0100     		.2byte	0x1
 22913 317f 55       		.byte	0x55
 22914 3180 1C000000 		.4byte	.LVL734
 22915 3184 1E000000 		.4byte	.LVL735
 22916 3188 0100     		.2byte	0x1
 22917 318a 56       		.byte	0x56
 22918 318b 24000000 		.4byte	.LVL736
 22919 318f 42000000 		.4byte	.LVL739
 22920 3193 0100     		.2byte	0x1
 22921 3195 56       		.byte	0x56
 22922 3196 42000000 		.4byte	.LVL739
 22923 319a 64000000 		.4byte	.LVL743
 22924 319e 0100     		.2byte	0x1
 22925 31a0 55       		.byte	0x55
 22926 31a1 00000000 		.4byte	0
 22927 31a5 00000000 		.4byte	0
 22928              	.LLST224:
 22929 31a9 1C000000 		.4byte	.LVL734
 22930 31ad 2B000000 		.4byte	.LVL737-1
 22931 31b1 0100     		.2byte	0x1
 22932 31b3 50       		.byte	0x50
 22933 31b4 2B000000 		.4byte	.LVL737-1
 22934 31b8 38000000 		.4byte	.LVL738
 22935 31bc 0100     		.2byte	0x1
 22936 31be 55       		.byte	0x55
 22937 31bf 54000000 		.4byte	.LVL741
 22938 31c3 5D000000 		.4byte	.LVL742-1
 22939 31c7 0100     		.2byte	0x1
 22940 31c9 50       		.byte	0x50
 22941 31ca 5D000000 		.4byte	.LVL742-1
 22942 31ce 64000000 		.4byte	.LVL743
 22943 31d2 0100     		.2byte	0x1
 22944 31d4 56       		.byte	0x56
 22945 31d5 00000000 		.4byte	0
 22946 31d9 00000000 		.4byte	0
 22947              	.LLST225:
 22948 31dd 00000000 		.4byte	.LVL745
 22949 31e1 04000000 		.4byte	.LVL746
 22950 31e5 0100     		.2byte	0x1
 22951 31e7 50       		.byte	0x50
 22952 31e8 04000000 		.4byte	.LVL746
 22953 31ec 20000000 		.4byte	.LFE65
 22954 31f0 0400     		.2byte	0x4
 22955 31f2 F3       		.byte	0xf3
 22956 31f3 01       		.uleb128 0x1
 22957 31f4 50       		.byte	0x50
 22958 31f5 9F       		.byte	0x9f
 22959 31f6 00000000 		.4byte	0
 22960 31fa 00000000 		.4byte	0
 22961              	.LLST226:
 22962 31fe 00000000 		.4byte	.LVL748
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 589


 22963 3202 06000000 		.4byte	.LVL749
 22964 3206 0100     		.2byte	0x1
 22965 3208 50       		.byte	0x50
 22966 3209 06000000 		.4byte	.LVL749
 22967 320d 38000000 		.4byte	.LVL756
 22968 3211 0100     		.2byte	0x1
 22969 3213 54       		.byte	0x54
 22970 3214 38000000 		.4byte	.LVL756
 22971 3218 3A000000 		.4byte	.LFE66
 22972 321c 0400     		.2byte	0x4
 22973 321e F3       		.byte	0xf3
 22974 321f 01       		.uleb128 0x1
 22975 3220 50       		.byte	0x50
 22976 3221 9F       		.byte	0x9f
 22977 3222 00000000 		.4byte	0
 22978 3226 00000000 		.4byte	0
 22979              	.LLST227:
 22980 322a 00000000 		.4byte	.LVL748
 22981 322e 0F000000 		.4byte	.LVL750-1
 22982 3232 0100     		.2byte	0x1
 22983 3234 51       		.byte	0x51
 22984 3235 0F000000 		.4byte	.LVL750-1
 22985 3239 38000000 		.4byte	.LVL757
 22986 323d 0100     		.2byte	0x1
 22987 323f 55       		.byte	0x55
 22988 3240 38000000 		.4byte	.LVL757
 22989 3244 3A000000 		.4byte	.LFE66
 22990 3248 0400     		.2byte	0x4
 22991 324a F3       		.byte	0xf3
 22992 324b 01       		.uleb128 0x1
 22993 324c 51       		.byte	0x51
 22994 324d 9F       		.byte	0x9f
 22995 324e 00000000 		.4byte	0
 22996 3252 00000000 		.4byte	0
 22997              	.LLST228:
 22998 3256 06000000 		.4byte	.LVL749
 22999 325a 0F000000 		.4byte	.LVL750-1
 23000 325e 0100     		.2byte	0x1
 23001 3260 50       		.byte	0x50
 23002 3261 00000000 		.4byte	0
 23003 3265 00000000 		.4byte	0
 23004              	.LLST229:
 23005 3269 12000000 		.4byte	.LVL751
 23006 326d 19000000 		.4byte	.LVL752-1
 23007 3271 0100     		.2byte	0x1
 23008 3273 50       		.byte	0x50
 23009 3274 00000000 		.4byte	0
 23010 3278 00000000 		.4byte	0
 23011              	.LLST230:
 23012 327c 32000000 		.4byte	.LVL754
 23013 3280 38000000 		.4byte	.LVL756
 23014 3284 0100     		.2byte	0x1
 23015 3286 54       		.byte	0x54
 23016 3287 38000000 		.4byte	.LVL756
 23017 328b 3A000000 		.4byte	.LFE66
 23018 328f 0400     		.2byte	0x4
 23019 3291 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 590


 23020 3292 01       		.uleb128 0x1
 23021 3293 50       		.byte	0x50
 23022 3294 9F       		.byte	0x9f
 23023 3295 00000000 		.4byte	0
 23024 3299 00000000 		.4byte	0
 23025              	.LLST231:
 23026 329d 00000000 		.4byte	.LVL758
 23027 32a1 0A000000 		.4byte	.LVL759
 23028 32a5 0100     		.2byte	0x1
 23029 32a7 50       		.byte	0x50
 23030 32a8 0A000000 		.4byte	.LVL759
 23031 32ac 28000000 		.4byte	.LFE67
 23032 32b0 0400     		.2byte	0x4
 23033 32b2 F3       		.byte	0xf3
 23034 32b3 01       		.uleb128 0x1
 23035 32b4 50       		.byte	0x50
 23036 32b5 9F       		.byte	0x9f
 23037 32b6 00000000 		.4byte	0
 23038 32ba 00000000 		.4byte	0
 23039              	.LLST232:
 23040 32be 00000000 		.4byte	.LVL758
 23041 32c2 0A000000 		.4byte	.LVL759
 23042 32c6 0100     		.2byte	0x1
 23043 32c8 51       		.byte	0x51
 23044 32c9 0A000000 		.4byte	.LVL759
 23045 32cd 26000000 		.4byte	.LVL767
 23046 32d1 0100     		.2byte	0x1
 23047 32d3 56       		.byte	0x56
 23048 32d4 26000000 		.4byte	.LVL767
 23049 32d8 28000000 		.4byte	.LFE67
 23050 32dc 0400     		.2byte	0x4
 23051 32de F3       		.byte	0xf3
 23052 32df 01       		.uleb128 0x1
 23053 32e0 51       		.byte	0x51
 23054 32e1 9F       		.byte	0x9f
 23055 32e2 00000000 		.4byte	0
 23056 32e6 00000000 		.4byte	0
 23057              	.LLST233:
 23058 32ea 00000000 		.4byte	.LVL758
 23059 32ee 0A000000 		.4byte	.LVL759
 23060 32f2 0100     		.2byte	0x1
 23061 32f4 52       		.byte	0x52
 23062 32f5 0A000000 		.4byte	.LVL759
 23063 32f9 28000000 		.4byte	.LFE67
 23064 32fd 0200     		.2byte	0x2
 23065 32ff 91       		.byte	0x91
 23066 3300 64       		.sleb128 -28
 23067 3301 00000000 		.4byte	0
 23068 3305 00000000 		.4byte	0
 23069              	.LLST234:
 23070 3309 00000000 		.4byte	.LVL758
 23071 330d 0A000000 		.4byte	.LVL759
 23072 3311 0200     		.2byte	0x2
 23073 3313 30       		.byte	0x30
 23074 3314 9F       		.byte	0x9f
 23075 3315 0A000000 		.4byte	.LVL759
 23076 3319 26000000 		.4byte	.LVL766
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 591


 23077 331d 0100     		.2byte	0x1
 23078 331f 55       		.byte	0x55
 23079 3320 00000000 		.4byte	0
 23080 3324 00000000 		.4byte	0
 23081              	.LLST235:
 23082 3328 10000000 		.4byte	.LVL760
 23083 332c 1B000000 		.4byte	.LVL762-1
 23084 3330 0100     		.2byte	0x1
 23085 3332 50       		.byte	0x50
 23086 3333 1C000000 		.4byte	.LVL762
 23087 3337 20000000 		.4byte	.LVL763
 23088 333b 0100     		.2byte	0x1
 23089 333d 57       		.byte	0x57
 23090 333e 20000000 		.4byte	.LVL763
 23091 3342 26000000 		.4byte	.LVL765
 23092 3346 0100     		.2byte	0x1
 23093 3348 50       		.byte	0x50
 23094 3349 00000000 		.4byte	0
 23095 334d 00000000 		.4byte	0
 23096              	.LLST236:
 23097 3351 16000000 		.4byte	.LVL761
 23098 3355 20000000 		.4byte	.LVL763
 23099 3359 0100     		.2byte	0x1
 23100 335b 57       		.byte	0x57
 23101 335c 00000000 		.4byte	0
 23102 3360 00000000 		.4byte	0
 23103              	.LLST237:
 23104 3364 00000000 		.4byte	.LVL768
 23105 3368 22000000 		.4byte	.LVL775
 23106 336c 0100     		.2byte	0x1
 23107 336e 50       		.byte	0x50
 23108 336f 22000000 		.4byte	.LVL775
 23109 3373 24000000 		.4byte	.LVL776
 23110 3377 0400     		.2byte	0x4
 23111 3379 F3       		.byte	0xf3
 23112 337a 01       		.uleb128 0x1
 23113 337b 50       		.byte	0x50
 23114 337c 9F       		.byte	0x9f
 23115 337d 24000000 		.4byte	.LVL776
 23116 3381 26000000 		.4byte	.LVL777
 23117 3385 0100     		.2byte	0x1
 23118 3387 50       		.byte	0x50
 23119 3388 26000000 		.4byte	.LVL777
 23120 338c 2A000000 		.4byte	.LFE68
 23121 3390 0400     		.2byte	0x4
 23122 3392 F3       		.byte	0xf3
 23123 3393 01       		.uleb128 0x1
 23124 3394 50       		.byte	0x50
 23125 3395 9F       		.byte	0x9f
 23126 3396 00000000 		.4byte	0
 23127 339a 00000000 		.4byte	0
 23128              	.LLST238:
 23129 339e 00000000 		.4byte	.LVL768
 23130 33a2 1A000000 		.4byte	.LVL774
 23131 33a6 0100     		.2byte	0x1
 23132 33a8 51       		.byte	0x51
 23133 33a9 1A000000 		.4byte	.LVL774
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 592


 23134 33ad 24000000 		.4byte	.LVL776
 23135 33b1 0400     		.2byte	0x4
 23136 33b3 F3       		.byte	0xf3
 23137 33b4 01       		.uleb128 0x1
 23138 33b5 51       		.byte	0x51
 23139 33b6 9F       		.byte	0x9f
 23140 33b7 24000000 		.4byte	.LVL776
 23141 33bb 28000000 		.4byte	.LVL778
 23142 33bf 0100     		.2byte	0x1
 23143 33c1 51       		.byte	0x51
 23144 33c2 28000000 		.4byte	.LVL778
 23145 33c6 2A000000 		.4byte	.LFE68
 23146 33ca 0400     		.2byte	0x4
 23147 33cc F3       		.byte	0xf3
 23148 33cd 01       		.uleb128 0x1
 23149 33ce 51       		.byte	0x51
 23150 33cf 9F       		.byte	0x9f
 23151 33d0 00000000 		.4byte	0
 23152 33d4 00000000 		.4byte	0
 23153              	.LLST239:
 23154 33d8 00000000 		.4byte	.LVL768
 23155 33dc 16000000 		.4byte	.LVL772
 23156 33e0 0100     		.2byte	0x1
 23157 33e2 52       		.byte	0x52
 23158 33e3 16000000 		.4byte	.LVL772
 23159 33e7 24000000 		.4byte	.LVL776
 23160 33eb 0400     		.2byte	0x4
 23161 33ed F3       		.byte	0xf3
 23162 33ee 01       		.uleb128 0x1
 23163 33ef 52       		.byte	0x52
 23164 33f0 9F       		.byte	0x9f
 23165 33f1 24000000 		.4byte	.LVL776
 23166 33f5 28000000 		.4byte	.LVL778
 23167 33f9 0100     		.2byte	0x1
 23168 33fb 52       		.byte	0x52
 23169 33fc 28000000 		.4byte	.LVL778
 23170 3400 2A000000 		.4byte	.LFE68
 23171 3404 0400     		.2byte	0x4
 23172 3406 F3       		.byte	0xf3
 23173 3407 01       		.uleb128 0x1
 23174 3408 52       		.byte	0x52
 23175 3409 9F       		.byte	0x9f
 23176 340a 00000000 		.4byte	0
 23177 340e 00000000 		.4byte	0
 23178              	.LLST240:
 23179 3412 00000000 		.4byte	.LVL768
 23180 3416 0A000000 		.4byte	.LVL769
 23181 341a 0200     		.2byte	0x2
 23182 341c 30       		.byte	0x30
 23183 341d 9F       		.byte	0x9f
 23184 341e 0A000000 		.4byte	.LVL769
 23185 3422 0E000000 		.4byte	.LVL770
 23186 3426 0200     		.2byte	0x2
 23187 3428 31       		.byte	0x31
 23188 3429 9F       		.byte	0x9f
 23189 342a 0E000000 		.4byte	.LVL770
 23190 342e 14000000 		.4byte	.LVL771
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 593


 23191 3432 0200     		.2byte	0x2
 23192 3434 32       		.byte	0x32
 23193 3435 9F       		.byte	0x9f
 23194 3436 14000000 		.4byte	.LVL771
 23195 343a 18000000 		.4byte	.LVL773
 23196 343e 0300     		.2byte	0x3
 23197 3440 73       		.byte	0x73
 23198 3441 01       		.sleb128 1
 23199 3442 9F       		.byte	0x9f
 23200 3443 18000000 		.4byte	.LVL773
 23201 3447 22000000 		.4byte	.LVL775
 23202 344b 0300     		.2byte	0x3
 23203 344d 73       		.byte	0x73
 23204 344e 03       		.sleb128 3
 23205 344f 9F       		.byte	0x9f
 23206 3450 22000000 		.4byte	.LVL775
 23207 3454 24000000 		.4byte	.LVL776
 23208 3458 0100     		.2byte	0x1
 23209 345a 50       		.byte	0x50
 23210 345b 24000000 		.4byte	.LVL776
 23211 345f 28000000 		.4byte	.LVL778
 23212 3463 0200     		.2byte	0x2
 23213 3465 30       		.byte	0x30
 23214 3466 9F       		.byte	0x9f
 23215 3467 00000000 		.4byte	0
 23216 346b 00000000 		.4byte	0
 23217              	.LLST241:
 23218 346f 00000000 		.4byte	.LVL779
 23219 3473 10000000 		.4byte	.LVL780
 23220 3477 0100     		.2byte	0x1
 23221 3479 50       		.byte	0x50
 23222 347a 10000000 		.4byte	.LVL780
 23223 347e 2D000000 		.4byte	.LVL783-1
 23224 3482 0100     		.2byte	0x1
 23225 3484 53       		.byte	0x53
 23226 3485 2D000000 		.4byte	.LVL783-1
 23227 3489 32000000 		.4byte	.LVL785
 23228 348d 0400     		.2byte	0x4
 23229 348f F3       		.byte	0xf3
 23230 3490 01       		.uleb128 0x1
 23231 3491 50       		.byte	0x50
 23232 3492 9F       		.byte	0x9f
 23233 3493 32000000 		.4byte	.LVL785
 23234 3497 3D000000 		.4byte	.LVL787-1
 23235 349b 0100     		.2byte	0x1
 23236 349d 53       		.byte	0x53
 23237 349e 3D000000 		.4byte	.LVL787-1
 23238 34a2 42000000 		.4byte	.LVL789
 23239 34a6 0400     		.2byte	0x4
 23240 34a8 F3       		.byte	0xf3
 23241 34a9 01       		.uleb128 0x1
 23242 34aa 50       		.byte	0x50
 23243 34ab 9F       		.byte	0x9f
 23244 34ac 42000000 		.4byte	.LVL789
 23245 34b0 44000000 		.4byte	.LVL790
 23246 34b4 0100     		.2byte	0x1
 23247 34b6 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 594


 23248 34b7 44000000 		.4byte	.LVL790
 23249 34bb 46000000 		.4byte	.LVL791
 23250 34bf 0100     		.2byte	0x1
 23251 34c1 53       		.byte	0x53
 23252 34c2 46000000 		.4byte	.LVL791
 23253 34c6 48000000 		.4byte	.LFE69
 23254 34ca 0400     		.2byte	0x4
 23255 34cc F3       		.byte	0xf3
 23256 34cd 01       		.uleb128 0x1
 23257 34ce 50       		.byte	0x50
 23258 34cf 9F       		.byte	0x9f
 23259 34d0 00000000 		.4byte	0
 23260 34d4 00000000 		.4byte	0
 23261              	.LLST242:
 23262 34d8 00000000 		.4byte	.LVL779
 23263 34dc 16000000 		.4byte	.LVL781
 23264 34e0 0100     		.2byte	0x1
 23265 34e2 51       		.byte	0x51
 23266 34e3 16000000 		.4byte	.LVL781
 23267 34e7 42000000 		.4byte	.LVL789
 23268 34eb 0100     		.2byte	0x1
 23269 34ed 54       		.byte	0x54
 23270 34ee 42000000 		.4byte	.LVL789
 23271 34f2 46000000 		.4byte	.LVL791
 23272 34f6 0100     		.2byte	0x1
 23273 34f8 51       		.byte	0x51
 23274 34f9 46000000 		.4byte	.LVL791
 23275 34fd 46000000 		.4byte	.LVL792
 23276 3501 0100     		.2byte	0x1
 23277 3503 54       		.byte	0x54
 23278 3504 46000000 		.4byte	.LVL792
 23279 3508 48000000 		.4byte	.LFE69
 23280 350c 0400     		.2byte	0x4
 23281 350e F3       		.byte	0xf3
 23282 350f 01       		.uleb128 0x1
 23283 3510 51       		.byte	0x51
 23284 3511 9F       		.byte	0x9f
 23285 3512 00000000 		.4byte	0
 23286 3516 00000000 		.4byte	0
 23287              	.LLST243:
 23288 351a 00000000 		.4byte	.LVL779
 23289 351e 2A000000 		.4byte	.LVL782
 23290 3522 0100     		.2byte	0x1
 23291 3524 52       		.byte	0x52
 23292 3525 2A000000 		.4byte	.LVL782
 23293 3529 2D000000 		.4byte	.LVL783-1
 23294 352d 0300     		.2byte	0x3
 23295 352f 70       		.byte	0x70
 23296 3530 7D       		.sleb128 -3
 23297 3531 9F       		.byte	0x9f
 23298 3532 2D000000 		.4byte	.LVL783-1
 23299 3536 32000000 		.4byte	.LVL785
 23300 353a 0400     		.2byte	0x4
 23301 353c F3       		.byte	0xf3
 23302 353d 01       		.uleb128 0x1
 23303 353e 52       		.byte	0x52
 23304 353f 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 595


 23305 3540 32000000 		.4byte	.LVL785
 23306 3544 3A000000 		.4byte	.LVL786
 23307 3548 0100     		.2byte	0x1
 23308 354a 52       		.byte	0x52
 23309 354b 3A000000 		.4byte	.LVL786
 23310 354f 3D000000 		.4byte	.LVL787-1
 23311 3553 0300     		.2byte	0x3
 23312 3555 70       		.byte	0x70
 23313 3556 7E       		.sleb128 -2
 23314 3557 9F       		.byte	0x9f
 23315 3558 3D000000 		.4byte	.LVL787-1
 23316 355c 42000000 		.4byte	.LVL789
 23317 3560 0400     		.2byte	0x4
 23318 3562 F3       		.byte	0xf3
 23319 3563 01       		.uleb128 0x1
 23320 3564 52       		.byte	0x52
 23321 3565 9F       		.byte	0x9f
 23322 3566 42000000 		.4byte	.LVL789
 23323 356a 46000000 		.4byte	.LVL791
 23324 356e 0100     		.2byte	0x1
 23325 3570 52       		.byte	0x52
 23326 3571 46000000 		.4byte	.LVL791
 23327 3575 48000000 		.4byte	.LFE69
 23328 3579 0400     		.2byte	0x4
 23329 357b F3       		.byte	0xf3
 23330 357c 01       		.uleb128 0x1
 23331 357d 52       		.byte	0x52
 23332 357e 9F       		.byte	0x9f
 23333 357f 00000000 		.4byte	0
 23334 3583 00000000 		.4byte	0
 23335              	.LLST244:
 23336 3587 00000000 		.4byte	.LVL779
 23337 358b 30000000 		.4byte	.LVL784
 23338 358f 0200     		.2byte	0x2
 23339 3591 30       		.byte	0x30
 23340 3592 9F       		.byte	0x9f
 23341 3593 32000000 		.4byte	.LVL785
 23342 3597 40000000 		.4byte	.LVL788
 23343 359b 0200     		.2byte	0x2
 23344 359d 30       		.byte	0x30
 23345 359e 9F       		.byte	0x9f
 23346 359f 42000000 		.4byte	.LVL789
 23347 35a3 46000000 		.4byte	.LVL791
 23348 35a7 0200     		.2byte	0x2
 23349 35a9 30       		.byte	0x30
 23350 35aa 9F       		.byte	0x9f
 23351 35ab 00000000 		.4byte	0
 23352 35af 00000000 		.4byte	0
 23353              	.LLST245:
 23354 35b3 00000000 		.4byte	.LVL793
 23355 35b7 1B000000 		.4byte	.LVL796-1
 23356 35bb 0100     		.2byte	0x1
 23357 35bd 50       		.byte	0x50
 23358 35be 1B000000 		.4byte	.LVL796-1
 23359 35c2 5A000000 		.4byte	.LVL802
 23360 35c6 0100     		.2byte	0x1
 23361 35c8 55       		.byte	0x55
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 596


 23362 35c9 5A000000 		.4byte	.LVL802
 23363 35cd 5C000000 		.4byte	.LFE70
 23364 35d1 0400     		.2byte	0x4
 23365 35d3 F3       		.byte	0xf3
 23366 35d4 01       		.uleb128 0x1
 23367 35d5 50       		.byte	0x50
 23368 35d6 9F       		.byte	0x9f
 23369 35d7 00000000 		.4byte	0
 23370 35db 00000000 		.4byte	0
 23371              	.LLST246:
 23372 35df 00000000 		.4byte	.LVL793
 23373 35e3 1B000000 		.4byte	.LVL796-1
 23374 35e7 0100     		.2byte	0x1
 23375 35e9 51       		.byte	0x51
 23376 35ea 1B000000 		.4byte	.LVL796-1
 23377 35ee 5A000000 		.4byte	.LVL801
 23378 35f2 0100     		.2byte	0x1
 23379 35f4 54       		.byte	0x54
 23380 35f5 5A000000 		.4byte	.LVL801
 23381 35f9 5C000000 		.4byte	.LFE70
 23382 35fd 0400     		.2byte	0x4
 23383 35ff F3       		.byte	0xf3
 23384 3600 01       		.uleb128 0x1
 23385 3601 51       		.byte	0x51
 23386 3602 9F       		.byte	0x9f
 23387 3603 00000000 		.4byte	0
 23388 3607 00000000 		.4byte	0
 23389              	.LLST247:
 23390 360b 00000000 		.4byte	.LVL793
 23391 360f 16000000 		.4byte	.LVL795
 23392 3613 0100     		.2byte	0x1
 23393 3615 52       		.byte	0x52
 23394 3616 16000000 		.4byte	.LVL795
 23395 361a 5C000000 		.4byte	.LFE70
 23396 361e 0200     		.2byte	0x2
 23397 3620 91       		.byte	0x91
 23398 3621 5C       		.sleb128 -36
 23399 3622 00000000 		.4byte	0
 23400 3626 00000000 		.4byte	0
 23401              	.LLST248:
 23402 362a 00000000 		.4byte	.LVL793
 23403 362e 06000000 		.4byte	.LVL794
 23404 3632 0100     		.2byte	0x1
 23405 3634 53       		.byte	0x53
 23406 3635 06000000 		.4byte	.LVL794
 23407 3639 5A000000 		.4byte	.LVL803
 23408 363d 0100     		.2byte	0x1
 23409 363f 56       		.byte	0x56
 23410 3640 5A000000 		.4byte	.LVL803
 23411 3644 5C000000 		.4byte	.LFE70
 23412 3648 0400     		.2byte	0x4
 23413 364a F3       		.byte	0xf3
 23414 364b 01       		.uleb128 0x1
 23415 364c 53       		.byte	0x53
 23416 364d 9F       		.byte	0x9f
 23417 364e 00000000 		.4byte	0
 23418 3652 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 597


 23419              	.LLST249:
 23420 3656 50000000 		.4byte	.LVL799
 23421 365a 58000000 		.4byte	.LVL800
 23422 365e 0100     		.2byte	0x1
 23423 3660 50       		.byte	0x50
 23424 3661 00000000 		.4byte	0
 23425 3665 00000000 		.4byte	0
 23426              	.LLST250:
 23427 3669 38000000 		.4byte	.LVL797
 23428 366d 58000000 		.4byte	.LVL800
 23429 3671 0100     		.2byte	0x1
 23430 3673 57       		.byte	0x57
 23431 3674 00000000 		.4byte	0
 23432 3678 00000000 		.4byte	0
 23433              		.section	.debug_aranges,"",%progbits
 23434 0000 3C010000 		.4byte	0x13c
 23435 0004 0200     		.2byte	0x2
 23436 0006 00000000 		.4byte	.Ldebug_info0
 23437 000a 04       		.byte	0x4
 23438 000b 00       		.byte	0
 23439 000c 0000     		.2byte	0
 23440 000e 0000     		.2byte	0
 23441 0010 00000000 		.4byte	.LFB13
 23442 0014 22000000 		.4byte	.LFE13-.LFB13
 23443 0018 00000000 		.4byte	.LFB20
 23444 001c D8010000 		.4byte	.LFE20-.LFB20
 23445 0020 00000000 		.4byte	.LFB31
 23446 0024 78000000 		.4byte	.LFE31-.LFB31
 23447 0028 00000000 		.4byte	.LFB50
 23448 002c B8000000 		.4byte	.LFE50-.LFB50
 23449 0030 00000000 		.4byte	.LFB14
 23450 0034 48000000 		.4byte	.LFE14-.LFB14
 23451 0038 00000000 		.4byte	.LFB15
 23452 003c 34000000 		.4byte	.LFE15-.LFB15
 23453 0040 00000000 		.4byte	.LFB16
 23454 0044 34000000 		.4byte	.LFE16-.LFB16
 23455 0048 00000000 		.4byte	.LFB30
 23456 004c D4030000 		.4byte	.LFE30-.LFB30
 23457 0050 00000000 		.4byte	.LFB17
 23458 0054 2A000000 		.4byte	.LFE17-.LFB17
 23459 0058 00000000 		.4byte	.LFB19
 23460 005c 70000000 		.4byte	.LFE19-.LFB19
 23461 0060 00000000 		.4byte	.LFB21
 23462 0064 8E000000 		.4byte	.LFE21-.LFB21
 23463 0068 00000000 		.4byte	.LFB22
 23464 006c 62000000 		.4byte	.LFE22-.LFB22
 23465 0070 00000000 		.4byte	.LFB23
 23466 0074 94000000 		.4byte	.LFE23-.LFB23
 23467 0078 00000000 		.4byte	.LFB24
 23468 007c E8000000 		.4byte	.LFE24-.LFB24
 23469 0080 00000000 		.4byte	.LFB25
 23470 0084 20000000 		.4byte	.LFE25-.LFB25
 23471 0088 00000000 		.4byte	.LFB26
 23472 008c 20000000 		.4byte	.LFE26-.LFB26
 23473 0090 00000000 		.4byte	.LFB27
 23474 0094 70000000 		.4byte	.LFE27-.LFB27
 23475 0098 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 598


 23476 009c 24010000 		.4byte	.LFE33-.LFB33
 23477 00a0 00000000 		.4byte	.LFB34
 23478 00a4 B2000000 		.4byte	.LFE34-.LFB34
 23479 00a8 00000000 		.4byte	.LFB36
 23480 00ac 4A010000 		.4byte	.LFE36-.LFB36
 23481 00b0 00000000 		.4byte	.LFB40
 23482 00b4 50000000 		.4byte	.LFE40-.LFB40
 23483 00b8 00000000 		.4byte	.LFB41
 23484 00bc 10000000 		.4byte	.LFE41-.LFB41
 23485 00c0 00000000 		.4byte	.LFB42
 23486 00c4 10000000 		.4byte	.LFE42-.LFB42
 23487 00c8 00000000 		.4byte	.LFB43
 23488 00cc 10000000 		.4byte	.LFE43-.LFB43
 23489 00d0 00000000 		.4byte	.LFB44
 23490 00d4 1C000000 		.4byte	.LFE44-.LFB44
 23491 00d8 00000000 		.4byte	.LFB45
 23492 00dc 1A000000 		.4byte	.LFE45-.LFB45
 23493 00e0 00000000 		.4byte	.LFB46
 23494 00e4 98000000 		.4byte	.LFE46-.LFB46
 23495 00e8 00000000 		.4byte	.LFB47
 23496 00ec 66000000 		.4byte	.LFE47-.LFB47
 23497 00f0 00000000 		.4byte	.LFB48
 23498 00f4 16000000 		.4byte	.LFE48-.LFB48
 23499 00f8 00000000 		.4byte	.LFB64
 23500 00fc 1C080000 		.4byte	.LFE64-.LFB64
 23501 0100 00000000 		.4byte	.LFB63
 23502 0104 6C000000 		.4byte	.LFE63-.LFB63
 23503 0108 00000000 		.4byte	.LFB65
 23504 010c 20000000 		.4byte	.LFE65-.LFB65
 23505 0110 00000000 		.4byte	.LFB66
 23506 0114 3A000000 		.4byte	.LFE66-.LFB66
 23507 0118 00000000 		.4byte	.LFB67
 23508 011c 28000000 		.4byte	.LFE67-.LFB67
 23509 0120 00000000 		.4byte	.LFB68
 23510 0124 2A000000 		.4byte	.LFE68-.LFB68
 23511 0128 00000000 		.4byte	.LFB69
 23512 012c 48000000 		.4byte	.LFE69-.LFB69
 23513 0130 00000000 		.4byte	.LFB70
 23514 0134 5C000000 		.4byte	.LFE70-.LFB70
 23515 0138 00000000 		.4byte	0
 23516 013c 00000000 		.4byte	0
 23517              		.section	.debug_ranges,"",%progbits
 23518              	.Ldebug_ranges0:
 23519 0000 06000000 		.4byte	.LBB21
 23520 0004 08000000 		.4byte	.LBE21
 23521 0008 0A000000 		.4byte	.LBB24
 23522 000c 0C000000 		.4byte	.LBE24
 23523 0010 00000000 		.4byte	0
 23524 0014 00000000 		.4byte	0
 23525 0018 24000000 		.4byte	.LBB33
 23526 001c AC000000 		.4byte	.LBE33
 23527 0020 B0000000 		.4byte	.LBB41
 23528 0024 B2000000 		.4byte	.LBE41
 23529 0028 00000000 		.4byte	0
 23530 002c 00000000 		.4byte	0
 23531 0030 72000000 		.4byte	.LBB37
 23532 0034 7A000000 		.4byte	.LBE37
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 599


 23533 0038 7E000000 		.4byte	.LBB38
 23534 003c 8E000000 		.4byte	.LBE38
 23535 0040 00000000 		.4byte	0
 23536 0044 00000000 		.4byte	0
 23537 0048 B0000000 		.4byte	.LBB43
 23538 004c 64010000 		.4byte	.LBE43
 23539 0050 74010000 		.4byte	.LBB53
 23540 0054 84030000 		.4byte	.LBE53
 23541 0058 8C030000 		.4byte	.LBB54
 23542 005c A6030000 		.4byte	.LBE54
 23543 0060 00000000 		.4byte	0
 23544 0064 00000000 		.4byte	0
 23545 0068 B0000000 		.4byte	.LBB44
 23546 006c B4000000 		.4byte	.LBE44
 23547 0070 F6000000 		.4byte	.LBB45
 23548 0074 64010000 		.4byte	.LBE45
 23549 0078 10020000 		.4byte	.LBB50
 23550 007c B2020000 		.4byte	.LBE50
 23551 0080 8C030000 		.4byte	.LBB52
 23552 0084 A6030000 		.4byte	.LBE52
 23553 0088 00000000 		.4byte	0
 23554 008c 00000000 		.4byte	0
 23555 0090 A0010000 		.4byte	.LBB46
 23556 0094 0C020000 		.4byte	.LBE46
 23557 0098 B2020000 		.4byte	.LBB51
 23558 009c 80030000 		.4byte	.LBE51
 23559 00a0 00000000 		.4byte	0
 23560 00a4 00000000 		.4byte	0
 23561 00a8 00020000 		.4byte	.LBB47
 23562 00ac 0C020000 		.4byte	.LBE47
 23563 00b0 CE020000 		.4byte	.LBB49
 23564 00b4 12030000 		.4byte	.LBE49
 23565 00b8 00000000 		.4byte	0
 23566 00bc 00000000 		.4byte	0
 23567 00c0 54000000 		.4byte	.LBB55
 23568 00c4 6E000000 		.4byte	.LBE55
 23569 00c8 70000000 		.4byte	.LBB56
 23570 00cc 7E000000 		.4byte	.LBE56
 23571 00d0 00000000 		.4byte	0
 23572 00d4 00000000 		.4byte	0
 23573 00d8 08000000 		.4byte	.LBB58
 23574 00dc 0A000000 		.4byte	.LBE58
 23575 00e0 0C000000 		.4byte	.LBB59
 23576 00e4 14000000 		.4byte	.LBE59
 23577 00e8 00000000 		.4byte	0
 23578 00ec 00000000 		.4byte	0
 23579 00f0 08000000 		.4byte	.LBB62
 23580 00f4 0A000000 		.4byte	.LBE62
 23581 00f8 0C000000 		.4byte	.LBB63
 23582 00fc 14000000 		.4byte	.LBE63
 23583 0100 00000000 		.4byte	0
 23584 0104 00000000 		.4byte	0
 23585 0108 00000000 		.4byte	.LBB85
 23586 010c 02000000 		.4byte	.LBE85
 23587 0110 04000000 		.4byte	.LBB94
 23588 0114 06000000 		.4byte	.LBE94
 23589 0118 08000000 		.4byte	.LBB95
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 600


 23590 011c 0C000000 		.4byte	.LBE95
 23591 0120 0E000000 		.4byte	.LBB96
 23592 0124 B6000000 		.4byte	.LBE96
 23593 0128 00000000 		.4byte	0
 23594 012c 00000000 		.4byte	0
 23595 0130 4A000000 		.4byte	.LBB87
 23596 0134 5E000000 		.4byte	.LBE87
 23597 0138 64000000 		.4byte	.LBB90
 23598 013c 68000000 		.4byte	.LBE90
 23599 0140 00000000 		.4byte	0
 23600 0144 00000000 		.4byte	0
 23601 0148 04000000 		.4byte	.LBB113
 23602 014c 06000000 		.4byte	.LBE113
 23603 0150 08000000 		.4byte	.LBB119
 23604 0154 0A000000 		.4byte	.LBE119
 23605 0158 0C000000 		.4byte	.LBB120
 23606 015c 12000000 		.4byte	.LBE120
 23607 0160 14000000 		.4byte	.LBB121
 23608 0164 1C000000 		.4byte	.LBE121
 23609 0168 1E000000 		.4byte	.LBB122
 23610 016c 22000000 		.4byte	.LBE122
 23611 0170 00000000 		.4byte	0
 23612 0174 00000000 		.4byte	0
 23613 0178 60000000 		.4byte	.LBB169
 23614 017c EE060000 		.4byte	.LBE169
 23615 0180 F4060000 		.4byte	.LBB223
 23616 0184 F8060000 		.4byte	.LBE223
 23617 0188 00000000 		.4byte	0
 23618 018c 00000000 		.4byte	0
 23619 0190 80010000 		.4byte	.LBB172
 23620 0194 82010000 		.4byte	.LBE172
 23621 0198 84010000 		.4byte	.LBB175
 23622 019c D6010000 		.4byte	.LBE175
 23623 01a0 00000000 		.4byte	0
 23624 01a4 00000000 		.4byte	0
 23625 01a8 C8020000 		.4byte	.LBB178
 23626 01ac CA020000 		.4byte	.LBE178
 23627 01b0 CC020000 		.4byte	.LBB181
 23628 01b4 54030000 		.4byte	.LBE181
 23629 01b8 00000000 		.4byte	0
 23630 01bc 00000000 		.4byte	0
 23631 01c0 56030000 		.4byte	.LBB182
 23632 01c4 58030000 		.4byte	.LBE182
 23633 01c8 5A030000 		.4byte	.LBB192
 23634 01cc 64040000 		.4byte	.LBE192
 23635 01d0 00000000 		.4byte	0
 23636 01d4 00000000 		.4byte	0
 23637 01d8 8A030000 		.4byte	.LBB185
 23638 01dc 8C030000 		.4byte	.LBE185
 23639 01e0 8E030000 		.4byte	.LBB186
 23640 01e4 90030000 		.4byte	.LBE186
 23641 01e8 94030000 		.4byte	.LBB187
 23642 01ec E0030000 		.4byte	.LBE187
 23643 01f0 00000000 		.4byte	0
 23644 01f4 00000000 		.4byte	0
 23645 01f8 6E040000 		.4byte	.LBB193
 23646 01fc 70040000 		.4byte	.LBE193
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 601


 23647 0200 72040000 		.4byte	.LBB196
 23648 0204 B2040000 		.4byte	.LBE196
 23649 0208 00000000 		.4byte	0
 23650 020c 00000000 		.4byte	0
 23651 0210 BC040000 		.4byte	.LBB197
 23652 0214 BE040000 		.4byte	.LBE197
 23653 0218 C0040000 		.4byte	.LBB200
 23654 021c 00050000 		.4byte	.LBE200
 23655 0220 00000000 		.4byte	0
 23656 0224 00000000 		.4byte	0
 23657 0228 18050000 		.4byte	.LBB201
 23658 022c 1A050000 		.4byte	.LBE201
 23659 0230 20050000 		.4byte	.LBB205
 23660 0234 22050000 		.4byte	.LBE205
 23661 0238 24050000 		.4byte	.LBB206
 23662 023c 5E050000 		.4byte	.LBE206
 23663 0240 00000000 		.4byte	0
 23664 0244 00000000 		.4byte	0
 23665 0248 DA050000 		.4byte	.LBB209
 23666 024c DC050000 		.4byte	.LBE209
 23667 0250 EA050000 		.4byte	.LBB220
 23668 0254 EC050000 		.4byte	.LBE220
 23669 0258 EE050000 		.4byte	.LBB221
 23670 025c D6060000 		.4byte	.LBE221
 23671 0260 00000000 		.4byte	0
 23672 0264 00000000 		.4byte	0
 23673 0268 48060000 		.4byte	.LBB214
 23674 026c 4A060000 		.4byte	.LBE214
 23675 0270 52060000 		.4byte	.LBB217
 23676 0274 CC060000 		.4byte	.LBE217
 23677 0278 00000000 		.4byte	0
 23678 027c 00000000 		.4byte	0
 23679 0280 2C070000 		.4byte	.LBB224
 23680 0284 68070000 		.4byte	.LBE224
 23681 0288 6A070000 		.4byte	.LBB228
 23682 028c 6C070000 		.4byte	.LBE228
 23683 0290 74070000 		.4byte	.LBB229
 23684 0294 80070000 		.4byte	.LBE229
 23685 0298 00000000 		.4byte	0
 23686 029c 00000000 		.4byte	0
 23687 02a0 90070000 		.4byte	.LBB230
 23688 02a4 E4070000 		.4byte	.LBE230
 23689 02a8 F6070000 		.4byte	.LBB237
 23690 02ac F8070000 		.4byte	.LBE237
 23691 02b0 00000000 		.4byte	0
 23692 02b4 00000000 		.4byte	0
 23693 02b8 A0070000 		.4byte	.LBB231
 23694 02bc A2070000 		.4byte	.LBE231
 23695 02c0 A8070000 		.4byte	.LBB235
 23696 02c4 AA070000 		.4byte	.LBE235
 23697 02c8 AE070000 		.4byte	.LBB236
 23698 02cc E0070000 		.4byte	.LBE236
 23699 02d0 00000000 		.4byte	0
 23700 02d4 00000000 		.4byte	0
 23701 02d8 04000000 		.4byte	.LBB238
 23702 02dc 06000000 		.4byte	.LBE238
 23703 02e0 08000000 		.4byte	.LBB239
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 602


 23704 02e4 10000000 		.4byte	.LBE239
 23705 02e8 00000000 		.4byte	0
 23706 02ec 00000000 		.4byte	0
 23707 02f0 00000000 		.4byte	.LFB13
 23708 02f4 22000000 		.4byte	.LFE13
 23709 02f8 00000000 		.4byte	.LFB20
 23710 02fc D8010000 		.4byte	.LFE20
 23711 0300 00000000 		.4byte	.LFB31
 23712 0304 78000000 		.4byte	.LFE31
 23713 0308 00000000 		.4byte	.LFB50
 23714 030c B8000000 		.4byte	.LFE50
 23715 0310 00000000 		.4byte	.LFB14
 23716 0314 48000000 		.4byte	.LFE14
 23717 0318 00000000 		.4byte	.LFB15
 23718 031c 34000000 		.4byte	.LFE15
 23719 0320 00000000 		.4byte	.LFB16
 23720 0324 34000000 		.4byte	.LFE16
 23721 0328 00000000 		.4byte	.LFB30
 23722 032c D4030000 		.4byte	.LFE30
 23723 0330 00000000 		.4byte	.LFB17
 23724 0334 2A000000 		.4byte	.LFE17
 23725 0338 00000000 		.4byte	.LFB19
 23726 033c 70000000 		.4byte	.LFE19
 23727 0340 00000000 		.4byte	.LFB21
 23728 0344 8E000000 		.4byte	.LFE21
 23729 0348 00000000 		.4byte	.LFB22
 23730 034c 62000000 		.4byte	.LFE22
 23731 0350 00000000 		.4byte	.LFB23
 23732 0354 94000000 		.4byte	.LFE23
 23733 0358 00000000 		.4byte	.LFB24
 23734 035c E8000000 		.4byte	.LFE24
 23735 0360 00000000 		.4byte	.LFB25
 23736 0364 20000000 		.4byte	.LFE25
 23737 0368 00000000 		.4byte	.LFB26
 23738 036c 20000000 		.4byte	.LFE26
 23739 0370 00000000 		.4byte	.LFB27
 23740 0374 70000000 		.4byte	.LFE27
 23741 0378 00000000 		.4byte	.LFB33
 23742 037c 24010000 		.4byte	.LFE33
 23743 0380 00000000 		.4byte	.LFB34
 23744 0384 B2000000 		.4byte	.LFE34
 23745 0388 00000000 		.4byte	.LFB36
 23746 038c 4A010000 		.4byte	.LFE36
 23747 0390 00000000 		.4byte	.LFB40
 23748 0394 50000000 		.4byte	.LFE40
 23749 0398 00000000 		.4byte	.LFB41
 23750 039c 10000000 		.4byte	.LFE41
 23751 03a0 00000000 		.4byte	.LFB42
 23752 03a4 10000000 		.4byte	.LFE42
 23753 03a8 00000000 		.4byte	.LFB43
 23754 03ac 10000000 		.4byte	.LFE43
 23755 03b0 00000000 		.4byte	.LFB44
 23756 03b4 1C000000 		.4byte	.LFE44
 23757 03b8 00000000 		.4byte	.LFB45
 23758 03bc 1A000000 		.4byte	.LFE45
 23759 03c0 00000000 		.4byte	.LFB46
 23760 03c4 98000000 		.4byte	.LFE46
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 603


 23761 03c8 00000000 		.4byte	.LFB47
 23762 03cc 66000000 		.4byte	.LFE47
 23763 03d0 00000000 		.4byte	.LFB48
 23764 03d4 16000000 		.4byte	.LFE48
 23765 03d8 00000000 		.4byte	.LFB64
 23766 03dc 1C080000 		.4byte	.LFE64
 23767 03e0 00000000 		.4byte	.LFB63
 23768 03e4 6C000000 		.4byte	.LFE63
 23769 03e8 00000000 		.4byte	.LFB65
 23770 03ec 20000000 		.4byte	.LFE65
 23771 03f0 00000000 		.4byte	.LFB66
 23772 03f4 3A000000 		.4byte	.LFE66
 23773 03f8 00000000 		.4byte	.LFB67
 23774 03fc 28000000 		.4byte	.LFE67
 23775 0400 00000000 		.4byte	.LFB68
 23776 0404 2A000000 		.4byte	.LFE68
 23777 0408 00000000 		.4byte	.LFB69
 23778 040c 48000000 		.4byte	.LFE69
 23779 0410 00000000 		.4byte	.LFB70
 23780 0414 5C000000 		.4byte	.LFE70
 23781 0418 00000000 		.4byte	0
 23782 041c 00000000 		.4byte	0
 23783              		.section	.debug_line,"",%progbits
 23784              	.Ldebug_line0:
 23785 0000 A50C0000 		.section	.debug_str,"MS",%progbits,1
 23785      02006702 
 23785      00000201 
 23785      FB0E0D00 
 23785      01010101 
 23786              	.LASF319:
 23787 0000 53484133 		.ascii	"SHA384\000"
 23787      383400
 23788              	.LASF287:
 23789 0007 65787465 		.ascii	"extensions\000"
 23789      6E73696F 
 23789      6E7300
 23790              	.LASF244:
 23791 0012 4149415F 		.ascii	"AIA_OCSP_OID\000"
 23791      4F435350 
 23791      5F4F4944 
 23791      00
 23792              	.LASF491:
 23793 001f 6A6F696E 		.ascii	"joint\000"
 23793      7400
 23794              	.LASF354:
 23795 0025 41534E5F 		.ascii	"ASN_VERSION_E\000"
 23795      56455253 
 23795      494F4E5F 
 23795      4500
 23796              	.LASF268:
 23797 0033 616C7445 		.ascii	"altEmailNames\000"
 23797      6D61696C 
 23797      4E616D65 
 23797      7300
 23798              	.LASF417:
 23799 0041 4543435F 		.ascii	"ECC_INF_E\000"
 23799      494E465F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 604


 23799      4500
 23800              	.LASF503:
 23801 004b 63686563 		.ascii	"checkOid\000"
 23801      6B4F6964 
 23801      00
 23802              	.LASF53:
 23803 0054 44594E41 		.ascii	"DYNAMIC_TYPE_LIBZ\000"
 23803      4D49435F 
 23803      54595045 
 23803      5F4C4942 
 23803      5A00
 23804              	.LASF200:
 23805 0066 63757276 		.ascii	"curveType\000"
 23805      65547970 
 23805      6500
 23806              	.LASF10:
 23807 0070 73697A65 		.ascii	"size_t\000"
 23807      5F7400
 23808              	.LASF196:
 23809 0077 4F69645F 		.ascii	"Oid_Types\000"
 23809      54797065 
 23809      7300
 23810              	.LASF402:
 23811 0081 484D4143 		.ascii	"HMAC_MIN_KEYLEN_E\000"
 23811      5F4D494E 
 23811      5F4B4559 
 23811      4C454E5F 
 23811      4500
 23812              	.LASF424:
 23813 0093 41534E5F 		.ascii	"ASN_NO_KEYUSAGE\000"
 23813      4E4F5F4B 
 23813      45595553 
 23813      41474500 
 23814              	.LASF16:
 23815 00a3 73697A65 		.ascii	"sizetype\000"
 23815      74797065 
 23815      00
 23816              	.LASF438:
 23817 00ac 746D5F68 		.ascii	"tm_hour\000"
 23817      6F757200 
 23818              	.LASF139:
 23819 00b4 43524C5F 		.ascii	"CRL_EXTENSIONS\000"
 23819      45585445 
 23819      4E53494F 
 23819      4E5300
 23820              	.LASF136:
 23821 00c3 41534E5F 		.ascii	"ASN_DNS_TYPE\000"
 23821      444E535F 
 23821      54595045 
 23821      00
 23822              	.LASF329:
 23823 00d0 4241445F 		.ascii	"BAD_MUTEX_E\000"
 23823      4D555445 
 23823      585F4500 
 23824              	.LASF202:
 23825 00dc 6F637370 		.ascii	"ocspType\000"
 23825      54797065 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 605


 23825      00
 23826              	.LASF562:
 23827 00e5 4465636F 		.ascii	"DecodeAuthInfo\000"
 23827      64654175 
 23827      7468496E 
 23827      666F00
 23828              	.LASF297:
 23829 00f4 65787441 		.ascii	"extAuthKeyIdSet\000"
 23829      7574684B 
 23829      65794964 
 23829      53657400 
 23830              	.LASF79:
 23831 0104 75736564 		.ascii	"used\000"
 23831      00
 23832              	.LASF239:
 23833 0109 43657274 		.ascii	"CertificatePolicy_Sum\000"
 23833      69666963 
 23833      61746550 
 23833      6F6C6963 
 23833      795F5375 
 23834              	.LASF215:
 23835 011f 53484133 		.ascii	"SHA384h\000"
 23835      38346800 
 23836              	.LASF50:
 23837 0127 44594E41 		.ascii	"DYNAMIC_TYPE_ARRAYS\000"
 23837      4D49435F 
 23837      54595045 
 23837      5F415252 
 23837      41595300 
 23838              	.LASF495:
 23839 013b 656D6169 		.ascii	"email\000"
 23839      6C00
 23840              	.LASF632:
 23841 0141 42454749 		.ascii	"BEGIN_RSA_PRIV\000"
 23841      4E5F5253 
 23841      415F5052 
 23841      495600
 23842              	.LASF150:
 23843 0150 41534E5F 		.ascii	"ASN_LOCALITY_NAME\000"
 23843      4C4F4341 
 23843      4C495459 
 23843      5F4E414D 
 23843      4500
 23844              	.LASF130:
 23845 0162 41534E5F 		.ascii	"ASN_UTF8STRING\000"
 23845      55544638 
 23845      53545249 
 23845      4E4700
 23846              	.LASF543:
 23847 0171 6964537A 		.ascii	"idSz\000"
 23847      00
 23848              	.LASF634:
 23849 0176 42454749 		.ascii	"BEGIN_PRIV_KEY\000"
 23849      4E5F5052 
 23849      49565F4B 
 23849      455900
 23850              	.LASF545:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 606


 23851 0185 616C676F 		.ascii	"algoSz\000"
 23851      537A00
 23852              	.LASF356:
 23853 018c 41534E5F 		.ascii	"ASN_RSA_KEY_E\000"
 23853      5253415F 
 23853      4B45595F 
 23853      4500
 23854              	.LASF77:
 23855 019a 53484132 		.ascii	"SHA256_PAD_SIZE\000"
 23855      35365F50 
 23855      41445F53 
 23855      495A4500 
 23856              	.LASF365:
 23857 01aa 41534E5F 		.ascii	"ASN_SIG_OID_E\000"
 23857      5349475F 
 23857      4F49445F 
 23857      4500
 23858              	.LASF269:
 23859 01b8 7065726D 		.ascii	"permittedNames\000"
 23859      69747465 
 23859      644E616D 
 23859      657300
 23860              	.LASF181:
 23861 01c7 4D41585F 		.ascii	"MAX_ENCODED_DIG_SZ\000"
 23861      454E434F 
 23861      4445445F 
 23861      4449475F 
 23861      535A00
 23862              	.LASF68:
 23863 01da 44594E41 		.ascii	"DYNAMIC_TYPE_X509_EXT\000"
 23863      4D49435F 
 23863      54595045 
 23863      5F583530 
 23863      395F4558 
 23864              	.LASF275:
 23865 01f0 7375626A 		.ascii	"subjectCNLen\000"
 23865      65637443 
 23865      4E4C656E 
 23865      00
 23866              	.LASF590:
 23867 01fd 68656164 		.ascii	"header\000"
 23867      657200
 23868              	.LASF360:
 23869 0204 41534E5F 		.ascii	"ASN_BITSTR_E\000"
 23869      42495453 
 23869      54525F45 
 23869      00
 23870              	.LASF626:
 23871 0211 42454749 		.ascii	"BEGIN_CERT_REQ\000"
 23871      4E5F4345 
 23871      52545F52 
 23871      455100
 23872              	.LASF507:
 23873 0220 696E537A 		.ascii	"inSz\000"
 23873      00
 23874              	.LASF55:
 23875 0225 44594E41 		.ascii	"DYNAMIC_TYPE_TMP_BUFFER\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 607


 23875      4D49435F 
 23875      54595045 
 23875      5F544D50 
 23875      5F425546 
 23876              	.LASF533:
 23877 023d 53657453 		.ascii	"SetSequence\000"
 23877      65717565 
 23877      6E636500 
 23878              	.LASF201:
 23879 0249 626C6B54 		.ascii	"blkType\000"
 23879      79706500 
 23880              	.LASF617:
 23881 0251 65787441 		.ascii	"extAltNamesHwNameOid\000"
 23881      6C744E61 
 23881      6D657348 
 23881      774E616D 
 23881      654F6964 
 23882              	.LASF470:
 23883 0266 4465636F 		.ascii	"DecodeExtKeyUsage\000"
 23883      64654578 
 23883      744B6579 
 23883      55736167 
 23883      6500
 23884              	.LASF435:
 23885 0278 74696D65 		.ascii	"time_t\000"
 23885      5F7400
 23886              	.LASF306:
 23887 027f 6265666F 		.ascii	"beforeDateLen\000"
 23887      72654461 
 23887      74654C65 
 23887      6E00
 23888              	.LASF175:
 23889 028d 4D41585F 		.ascii	"MAX_SEQ_SZ\000"
 23889      5345515F 
 23889      535A00
 23890              	.LASF81:
 23891 0298 7369676E 		.ascii	"sign\000"
 23891      00
 23892              	.LASF128:
 23893 029d 41534E5F 		.ascii	"ASN_OBJECT_ID\000"
 23893      4F424A45 
 23893      43545F49 
 23893      4400
 23894              	.LASF94:
 23895 02ab 4453415F 		.ascii	"DSA_TYPE\000"
 23895      54595045 
 23895      00
 23896              	.LASF304:
 23897 02b4 65787445 		.ascii	"extExtKeyUsage\000"
 23897      78744B65 
 23897      79557361 
 23897      676500
 23898              	.LASF148:
 23899 02c3 41534E5F 		.ascii	"ASN_SERIAL_NUMBER\000"
 23899      53455249 
 23899      414C5F4E 
 23899      554D4245 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 608


 23899      5200
 23900              	.LASF105:
 23901 02d5 4354435F 		.ascii	"CTC_MD5wRSA\000"
 23901      4D443577 
 23901      52534100 
 23902              	.LASF140:
 23903 02e1 41534E5F 		.ascii	"ASN_EXTENSIONS\000"
 23903      45585445 
 23903      4E53494F 
 23903      4E5300
 23904              	.LASF399:
 23905 02f0 46495053 		.ascii	"FIPS_NOT_ALLOWED_E\000"
 23905      5F4E4F54 
 23905      5F414C4C 
 23905      4F574544 
 23905      5F4500
 23906              	.LASF22:
 23907 0303 44594E41 		.ascii	"DYNAMIC_TYPE_SUBJECT_CN\000"
 23907      4D49435F 
 23907      54595045 
 23907      5F535542 
 23907      4A454354 
 23908              	.LASF625:
 23909 031b 454E445F 		.ascii	"END_CERT\000"
 23909      43455254 
 23909      00
 23910              	.LASF2:
 23911 0324 776F7264 		.ascii	"word16\000"
 23911      313600
 23912              	.LASF431:
 23913 032b 4241445F 		.ascii	"BAD_COND_E\000"
 23913      434F4E44 
 23913      5F4500
 23914              	.LASF218:
 23915 0336 44455362 		.ascii	"DESb\000"
 23915      00
 23916              	.LASF473:
 23917 033b 4465636F 		.ascii	"DecodeToKey\000"
 23917      6465546F 
 23917      4B657900 
 23918              	.LASF331:
 23919 0347 4D505F52 		.ascii	"MP_READ_E\000"
 23919      4541445F 
 23919      4500
 23920              	.LASF256:
 23921 0351 74797065 		.ascii	"type\000"
 23921      00
 23922              	.LASF121:
 23923 0356 41465445 		.ascii	"AFTER\000"
 23923      5200
 23924              	.LASF383:
 23925 035c 4145535F 		.ascii	"AES_CCM_AUTH_E\000"
 23925      43434D5F 
 23925      41555448 
 23925      5F4500
 23926              	.LASF371:
 23927 036b 41534E5F 		.ascii	"ASN_DH_KEY_E\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 609


 23927      44485F4B 
 23927      45595F45 
 23927      00
 23928              	.LASF262:
 23929 0378 73696749 		.ascii	"sigIndex\000"
 23929      6E646578 
 23929      00
 23930              	.LASF621:
 23931 0381 65787445 		.ascii	"extExtKeyUsageOcspSignOid\000"
 23931      78744B65 
 23931      79557361 
 23931      67654F63 
 23931      73705369 
 23932              	.LASF57:
 23933 039b 44594E41 		.ascii	"DYNAMIC_TYPE_CAVIUM_TMP\000"
 23933      4D49435F 
 23933      54595045 
 23933      5F434156 
 23933      49554D5F 
 23934              	.LASF347:
 23935 03b3 5055424C 		.ascii	"PUBLIC_KEY_E\000"
 23935      49435F4B 
 23935      45595F45 
 23935      00
 23936              	.LASF207:
 23937 03c0 63657274 		.ascii	"certKeyUseType\000"
 23937      4B657955 
 23937      73655479 
 23937      706500
 23938              	.LASF657:
 23939 03cf 6D705F74 		.ascii	"mp_to_unsigned_bin\000"
 23939      6F5F756E 
 23939      7369676E 
 23939      65645F62 
 23939      696E00
 23940              	.LASF394:
 23941 03e2 4241445F 		.ascii	"BAD_ENC_STATE_E\000"
 23941      454E435F 
 23941      53544154 
 23941      455F4500 
 23942              	.LASF153:
 23943 03f2 41534E5F 		.ascii	"ASN_ORGUNIT_NAME\000"
 23943      4F524755 
 23943      4E49545F 
 23943      4E414D45 
 23943      00
 23944              	.LASF310:
 23945 0403 7375626A 		.ascii	"subjectRawLen\000"
 23945      65637452 
 23945      61774C65 
 23945      6E00
 23946              	.LASF475:
 23947 0411 6F757470 		.ascii	"output\000"
 23947      757400
 23948              	.LASF428:
 23949 0418 43455254 		.ascii	"CERTPOLICIES_E\000"
 23949      504F4C49 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 610


 23949      43494553 
 23949      5F4500
 23950              	.LASF359:
 23951 0427 41534E5F 		.ascii	"ASN_EXPECT_0_E\000"
 23951      45585045 
 23951      43545F30 
 23951      5F4500
 23952              	.LASF62:
 23953 0436 44594E41 		.ascii	"DYNAMIC_TYPE_SIGNATURE\000"
 23953      4D49435F 
 23953      54595045 
 23953      5F534947 
 23953      4E415455 
 23954              	.LASF160:
 23955 044d 504B4353 		.ascii	"PKCS5v2\000"
 23955      35763200 
 23956              	.LASF603:
 23957 0455 65787442 		.ascii	"extBasicCaOid\000"
 23957      61736963 
 23957      43614F69 
 23957      6400
 23958              	.LASF607:
 23959 0463 65787441 		.ascii	"extAuthKeyOid\000"
 23959      7574684B 
 23959      65794F69 
 23959      6400
 23960              	.LASF51:
 23961 0471 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_POOL\000"
 23961      4D49435F 
 23961      54595045 
 23961      5F44544C 
 23961      535F504F 
 23962              	.LASF86:
 23963 0488 43455254 		.ascii	"CERT_TYPE\000"
 23963      5F545950 
 23963      4500
 23964              	.LASF116:
 23965 0492 4354435F 		.ascii	"CTC_PRINTABLE\000"
 23965      5052494E 
 23965      5441424C 
 23965      4500
 23966              	.LASF497:
 23967 04a0 4765744D 		.ascii	"GetMyVersion\000"
 23967      79566572 
 23967      73696F6E 
 23967      00
 23968              	.LASF656:
 23969 04ad 6D705F75 		.ascii	"mp_unsigned_bin_size\000"
 23969      6E736967 
 23969      6E65645F 
 23969      62696E5F 
 23969      73697A65 
 23970              	.LASF89:
 23971 04c2 43524C5F 		.ascii	"CRL_TYPE\000"
 23971      54595045 
 23971      00
 23972              	.LASF593:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 611


 23973 04cb 72657375 		.ascii	"result\000"
 23973      6C7400
 23974              	.LASF468:
 23975 04d2 6E616D65 		.ascii	"nameIdx\000"
 23975      49647800 
 23976              	.LASF232:
 23977 04da 41555448 		.ascii	"AUTH_KEY_OID\000"
 23977      5F4B4559 
 23977      5F4F4944 
 23977      00
 23978              	.LASF410:
 23979 04e7 44524247 		.ascii	"DRBG_KAT_FIPS_E\000"
 23979      5F4B4154 
 23979      5F464950 
 23979      535F4500 
 23980              	.LASF591:
 23981 04f7 53657453 		.ascii	"SetSerialNumber\000"
 23981      65726961 
 23981      6C4E756D 
 23981      62657200 
 23982              	.LASF488:
 23983 0507 64756D6D 		.ascii	"dummy\000"
 23983      7900
 23984              	.LASF286:
 23985 050d 73657269 		.ascii	"serialSz\000"
 23985      616C537A 
 23985      00
 23986              	.LASF481:
 23987 0516 696E4F75 		.ascii	"inOutIdx\000"
 23987      74496478 
 23987      00
 23988              	.LASF95:
 23989 051f 4543435F 		.ascii	"ECC_TYPE\000"
 23989      54595045 
 23989      00
 23990              	.LASF195:
 23991 0528 48454144 		.ascii	"HEADER_ENCRYPTED_KEY_SIZE\000"
 23991      45525F45 
 23991      4E435259 
 23991      50544544 
 23991      5F4B4559 
 23992              	.LASF576:
 23993 0542 6E656564 		.ascii	"needEmail\000"
 23993      456D6169 
 23993      6C00
 23994              	.LASF210:
 23995 054c 48617368 		.ascii	"Hash_Sum\000"
 23995      5F53756D 
 23995      00
 23996              	.LASF156:
 23997 0555 4D41585F 		.ascii	"MAX_SALT_SIZE\000"
 23997      53414C54 
 23997      5F53495A 
 23997      4500
 23998              	.LASF4:
 23999 0563 776F7264 		.ascii	"word32\000"
 23999      333200
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 612


 24000              	.LASF13:
 24001 056a 6C6F6E67 		.ascii	"long int\000"
 24001      20696E74 
 24001      00
 24002              	.LASF652:
 24003 0573 6D656D6D 		.ascii	"memmove\000"
 24003      6F766500 
 24004              	.LASF471:
 24005 057b 44617465 		.ascii	"DateLessThan\000"
 24005      4C657373 
 24005      5468616E 
 24005      00
 24006              	.LASF609:
 24007 0588 65787443 		.ascii	"extCertPolicyOid\000"
 24007      65727450 
 24007      6F6C6963 
 24007      794F6964 
 24007      00
 24008              	.LASF109:
 24009 0599 4354435F 		.ascii	"CTC_SHA256wECDSA\000"
 24009      53484132 
 24009      35367745 
 24009      43445341 
 24009      00
 24010              	.LASF427:
 24011 05aa 4B455955 		.ascii	"KEYUSAGE_E\000"
 24011      53414745 
 24011      5F4500
 24012              	.LASF467:
 24013 05b5 7374724C 		.ascii	"strLength\000"
 24013      656E6774 
 24013      6800
 24014              	.LASF381:
 24015 05bf 414C545F 		.ascii	"ALT_NAME_E\000"
 24015      4E414D45 
 24015      5F4500
 24016              	.LASF155:
 24017 05ca 41534E5F 		.ascii	"ASN_NAME_MAX\000"
 24017      4E414D45 
 24017      5F4D4158 
 24017      00
 24018              	.LASF564:
 24019 05d7 646E7345 		.ascii	"dnsEntry\000"
 24019      6E747279 
 24019      00
 24020              	.LASF142:
 24021 05e0 41534E5F 		.ascii	"ASN_Flags\000"
 24021      466C6167 
 24021      7300
 24022              	.LASF174:
 24023 05ea 4D41585F 		.ascii	"MAX_ALGO_SZ\000"
 24023      414C474F 
 24023      5F535A00 
 24024              	.LASF567:
 24025 05f6 4465636F 		.ascii	"DecodeAuthKeyId\000"
 24025      64654175 
 24025      74684B65 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 613


 24025      79496400 
 24026              	.LASF318:
 24027 0606 53484135 		.ascii	"SHA512\000"
 24027      313200
 24028              	.LASF493:
 24029 060d 636F7079 		.ascii	"copy\000"
 24029      00
 24030              	.LASF453:
 24031 0612 6B657953 		.ascii	"keySz\000"
 24031      7A00
 24032              	.LASF19:
 24033 0618 44594E41 		.ascii	"DYNAMIC_TYPE_CERT\000"
 24033      4D49435F 
 24033      54595045 
 24033      5F434552 
 24033      5400
 24034              	.LASF465:
 24035 062a 68656164 		.ascii	"head\000"
 24035      00
 24036              	.LASF335:
 24037 062f 4D505F41 		.ascii	"MP_ADD_E\000"
 24037      44445F45 
 24037      00
 24038              	.LASF619:
 24039 0638 65787445 		.ascii	"extExtKeyUsageServerAuthOid\000"
 24039      78744B65 
 24039      79557361 
 24039      67655365 
 24039      72766572 
 24040              	.LASF518:
 24041 0654 6C6F6361 		.ascii	"localTime\000"
 24041      6C54696D 
 24041      6500
 24042              	.LASF111:
 24043 065e 4354435F 		.ascii	"CTC_SHA384wECDSA\000"
 24043      53484133 
 24043      38347745 
 24043      43445341 
 24043      00
 24044              	.LASF505:
 24045 066f 47657441 		.ascii	"GetAlgoId\000"
 24045      6C676F49 
 24045      6400
 24046              	.LASF397:
 24047 0679 504B4353 		.ascii	"PKCS7_OID_E\000"
 24047      375F4F49 
 24047      445F4500 
 24048              	.LASF66:
 24049 0685 44594E41 		.ascii	"DYNAMIC_TYPE_USER_CRYPTO\000"
 24049      4D49435F 
 24049      54595045 
 24049      5F555345 
 24049      525F4352 
 24050              	.LASF114:
 24051 069e 4374635F 		.ascii	"Ctc_Encoding\000"
 24051      456E636F 
 24051      64696E67 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 614


 24051      00
 24052              	.LASF418:
 24053 06ab 4543435F 		.ascii	"ECC_PRIV_KEY_E\000"
 24053      50524956 
 24053      5F4B4559 
 24053      5F4500
 24054              	.LASF284:
 24055 06ba 68656170 		.ascii	"heap\000"
 24055      00
 24056              	.LASF659:
 24057 06bf 47657443 		.ascii	"GetCA\000"
 24057      4100
 24058              	.LASF115:
 24059 06c5 4354435F 		.ascii	"CTC_UTF8\000"
 24059      55544638 
 24059      00
 24060              	.LASF90:
 24061 06ce 43415F54 		.ascii	"CA_TYPE\000"
 24061      59504500 
 24062              	.LASF220:
 24063 06d6 4B65795F 		.ascii	"Key_Sum\000"
 24063      53756D00 
 24064              	.LASF11:
 24065 06de 7369676E 		.ascii	"signed char\000"
 24065      65642063 
 24065      68617200 
 24066              	.LASF554:
 24067 06ea 616C676F 		.ascii	"algoArray\000"
 24067      41727261 
 24067      7900
 24068              	.LASF129:
 24069 06f4 41534E5F 		.ascii	"ASN_ENUMERATED\000"
 24069      454E554D 
 24069      45524154 
 24069      454400
 24070              	.LASF358:
 24071 0703 41534E5F 		.ascii	"ASN_TAG_NULL_E\000"
 24071      5441475F 
 24071      4E554C4C 
 24071      5F4500
 24072              	.LASF351:
 24073 0712 43415F54 		.ascii	"CA_TRUE_E\000"
 24073      5255455F 
 24073      4500
 24074              	.LASF131:
 24075 071c 41534E5F 		.ascii	"ASN_SEQUENCE\000"
 24075      53455155 
 24075      454E4345 
 24075      00
 24076              	.LASF69:
 24077 0729 44594E41 		.ascii	"DYNAMIC_TYPE_X509_STORE\000"
 24077      4D49435F 
 24077      54595045 
 24077      5F583530 
 24077      395F5354 
 24078              	.LASF152:
 24079 0741 41534E5F 		.ascii	"ASN_ORG_NAME\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 615


 24079      4F52475F 
 24079      4E414D45 
 24079      00
 24080              	.LASF60:
 24081 074e 44594E41 		.ascii	"DYNAMIC_TYPE_TLSX\000"
 24081      4D49435F 
 24081      54595045 
 24081      5F544C53 
 24081      5800
 24082              	.LASF47:
 24083 0760 44594E41 		.ascii	"DYNAMIC_TYPE_SUITES\000"
 24083      4D49435F 
 24083      54595045 
 24083      5F535549 
 24083      54455300 
 24084              	.LASF72:
 24085 0774 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_FRAG\000"
 24085      4D49435F 
 24085      54595045 
 24085      5F44544C 
 24085      535F4652 
 24086              	.LASF344:
 24087 078b 5253415F 		.ascii	"RSA_BUFFER_E\000"
 24087      42554646 
 24087      45525F45 
 24087      00
 24088              	.LASF363:
 24089 0798 41534E5F 		.ascii	"ASN_BEFORE_DATE_E\000"
 24089      4245464F 
 24089      52455F44 
 24089      4154455F 
 24089      4500
 24090              	.LASF191:
 24091 07aa 4D41585F 		.ascii	"MAX_OCSP_EXT_SZ\000"
 24091      4F435350 
 24091      5F455854 
 24091      5F535A00 
 24092              	.LASF278:
 24093 07ba 69737375 		.ascii	"issuer\000"
 24093      657200
 24094              	.LASF357:
 24095 07c1 41534E5F 		.ascii	"ASN_OBJECT_ID_E\000"
 24095      4F424A45 
 24095      43545F49 
 24095      445F4500 
 24096              	.LASF384:
 24097 07d1 43415649 		.ascii	"CAVIUM_INIT_E\000"
 24097      554D5F49 
 24097      4E49545F 
 24097      4500
 24098              	.LASF534:
 24099 07df 5365744F 		.ascii	"SetOctetString\000"
 24099      63746574 
 24099      53747269 
 24099      6E6700
 24100              	.LASF643:
 24101 07ee 454E445F 		.ascii	"END_PUB_KEY\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 616


 24101      5055425F 
 24101      4B455900 
 24102              	.LASF243:
 24103 07fa 41757468 		.ascii	"AuthInfo_Sum\000"
 24103      496E666F 
 24103      5F53756D 
 24103      00
 24104              	.LASF385:
 24105 0807 434F4D50 		.ascii	"COMPRESS_INIT_E\000"
 24105      52455353 
 24105      5F494E49 
 24105      545F4500 
 24106              	.LASF264:
 24107 0817 7369676E 		.ascii	"signatureOID\000"
 24107      61747572 
 24107      654F4944 
 24107      00
 24108              	.LASF461:
 24109 0824 63657274 		.ascii	"cert\000"
 24109      00
 24110              	.LASF523:
 24111 0829 64696666 		.ascii	"diffSign\000"
 24111      5369676E 
 24111      00
 24112              	.LASF127:
 24113 0832 41534E5F 		.ascii	"ASN_TAG_NULL\000"
 24113      5441475F 
 24113      4E554C4C 
 24113      00
 24114              	.LASF0:
 24115 083f 756E7369 		.ascii	"unsigned char\000"
 24115      676E6564 
 24115      20636861 
 24115      7200
 24116              	.LASF608:
 24117 084d 65787453 		.ascii	"extSubjKeyOid\000"
 24117      75626A4B 
 24117      65794F69 
 24117      6400
 24118              	.LASF535:
 24119 085b 53657453 		.ascii	"SetSet\000"
 24119      657400
 24120              	.LASF149:
 24121 0862 41534E5F 		.ascii	"ASN_COUNTRY_NAME\000"
 24121      434F554E 
 24121      5452595F 
 24121      4E414D45 
 24121      00
 24122              	.LASF455:
 24123 0873 7369674F 		.ascii	"sigOID\000"
 24123      494400
 24124              	.LASF635:
 24125 087a 454E445F 		.ascii	"END_PRIV_KEY\000"
 24125      50524956 
 24125      5F4B4559 
 24125      00
 24126              	.LASF448:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 617


 24127 0887 62617365 		.ascii	"baseSz\000"
 24127      537A00
 24128              	.LASF257:
 24129 088e 4465636F 		.ascii	"DecodedCert\000"
 24129      64656443 
 24129      65727400 
 24130              	.LASF82:
 24131 089a 6D705F69 		.ascii	"mp_int\000"
 24131      6E7400
 24132              	.LASF205:
 24133 08a1 63657274 		.ascii	"certPolicyType\000"
 24133      506F6C69 
 24133      63795479 
 24133      706500
 24134              	.LASF373:
 24135 08b0 41534E5F 		.ascii	"ASN_CRIT_EXT_E\000"
 24135      43524954 
 24135      5F455854 
 24135      5F4500
 24136              	.LASF317:
 24137 08bf 4F504144 		.ascii	"OPAD\000"
 24137      00
 24138              	.LASF369:
 24139 08c4 41534E5F 		.ascii	"ASN_SIG_HASH_E\000"
 24139      5349475F 
 24139      48415348 
 24139      5F4500
 24140              	.LASF110:
 24141 08d3 4354435F 		.ascii	"CTC_SHA384wRSA\000"
 24141      53484133 
 24141      38347752 
 24141      534100
 24142              	.LASF482:
 24143 08e2 62797465 		.ascii	"bytes\000"
 24143      7300
 24144              	.LASF611:
 24145 08e8 65787449 		.ascii	"extInhibitAnyOid\000"
 24145      6E686962 
 24145      6974416E 
 24145      794F6964 
 24145      00
 24146              	.LASF409:
 24147 08f9 5253415F 		.ascii	"RSA_KAT_FIPS_E\000"
 24147      4B41545F 
 24147      46495053 
 24147      5F4500
 24148              	.LASF587:
 24149 0908 7461626C 		.ascii	"table\000"
 24149      6500
 24150              	.LASF476:
 24151 090e 76616C75 		.ascii	"value\000"
 24151      6500
 24152              	.LASF145:
 24153 0914 444E5F54 		.ascii	"DN_Tags\000"
 24153      61677300 
 24154              	.LASF528:
 24155 091c 73746163 		.ascii	"stack_mpi\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 618


 24155      6B5F6D70 
 24155      6900
 24156              	.LASF101:
 24157 0926 43657274 		.ascii	"CertType\000"
 24157      54797065 
 24157      00
 24158              	.LASF234:
 24159 092f 43455254 		.ascii	"CERT_POLICY_OID\000"
 24159      5F504F4C 
 24159      4943595F 
 24159      4F494400 
 24160              	.LASF638:
 24161 093f 42454749 		.ascii	"BEGIN_EC_PRIV\000"
 24161      4E5F4543 
 24161      5F505249 
 24161      5600
 24162              	.LASF17:
 24163 094d 63686172 		.ascii	"char\000"
 24163      00
 24164              	.LASF624:
 24165 0952 42454749 		.ascii	"BEGIN_CERT\000"
 24165      4E5F4345 
 24165      525400
 24166              	.LASF426:
 24167 095d 414B4944 		.ascii	"AKID_E\000"
 24167      5F4500
 24168              	.LASF653:
 24169 0964 6D656D73 		.ascii	"memset\000"
 24169      657400
 24170              	.LASF67:
 24171 096b 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_REQUEST\000"
 24171      4D49435F 
 24171      54595045 
 24171      5F4F4353 
 24171      505F5245 
 24172              	.LASF566:
 24173 0985 656D6169 		.ascii	"emailEntry\000"
 24173      6C456E74 
 24173      727900
 24174              	.LASF517:
 24175 0990 63657274 		.ascii	"certTime\000"
 24175      54696D65 
 24175      00
 24176              	.LASF464:
 24177 0999 4465636F 		.ascii	"DecodeSubtree\000"
 24177      64655375 
 24177      62747265 
 24177      6500
 24178              	.LASF368:
 24179 09a7 41534E5F 		.ascii	"ASN_SIG_CONFIRM_E\000"
 24179      5349475F 
 24179      434F4E46 
 24179      49524D5F 
 24179      4500
 24180              	.LASF253:
 24181 09b9 6E616D65 		.ascii	"name\000"
 24181      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 619


 24182              	.LASF71:
 24183 09be 44594E41 		.ascii	"DYNAMIC_TYPE_URL\000"
 24183      4D49435F 
 24183      54595045 
 24183      5F55524C 
 24183      00
 24184              	.LASF328:
 24185 09cf 52414E5F 		.ascii	"RAN_BLOCK_E\000"
 24185      424C4F43 
 24185      4B5F4500 
 24186              	.LASF223:
 24187 09db 4E545255 		.ascii	"NTRUk\000"
 24187      6B00
 24188              	.LASF389:
 24189 09e1 4241445F 		.ascii	"BAD_ALIGN_E\000"
 24189      414C4947 
 24189      4E5F4500 
 24190              	.LASF288:
 24191 09ed 65787465 		.ascii	"extensionsSz\000"
 24191      6E73696F 
 24191      6E73537A 
 24191      00
 24192              	.LASF472:
 24193 09fa 62616444 		.ascii	"badDate\000"
 24193      61746500 
 24194              	.LASF536:
 24195 0a02 53657449 		.ascii	"SetImplicit\000"
 24195      6D706C69 
 24195      63697400 
 24196              	.LASF301:
 24197 0a0e 6578744B 		.ascii	"extKeyUsageSet\000"
 24197      65795573 
 24197      61676553 
 24197      657400
 24198              	.LASF425:
 24199 0a1d 534B4944 		.ascii	"SKID_E\000"
 24199      5F4500
 24200              	.LASF314:
 24201 0a24 7375626A 		.ascii	"subjectNameHash\000"
 24201      6563744E 
 24201      616D6548 
 24201      61736800 
 24202              	.LASF21:
 24203 0a34 44594E41 		.ascii	"DYNAMIC_TYPE_FILE\000"
 24203      4D49435F 
 24203      54595045 
 24203      5F46494C 
 24203      4500
 24204              	.LASF315:
 24205 0a46 484D4143 		.ascii	"HMAC_FIPS_MIN_KEY\000"
 24205      5F464950 
 24205      535F4D49 
 24205      4E5F4B45 
 24205      5900
 24206              	.LASF658:
 24207 0a58 77635F53 		.ascii	"wc_Sha256Hash\000"
 24207      68613235 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 620


 24207      36486173 
 24207      6800
 24208              	.LASF183:
 24209 0a66 4D41585F 		.ascii	"MAX_NTRU_KEY_SZ\000"
 24209      4E545255 
 24209      5F4B4559 
 24209      5F535A00 
 24210              	.LASF281:
 24211 0a76 736F7572 		.ascii	"source\000"
 24211      636500
 24212              	.LASF251:
 24213 0a7d 444E535F 		.ascii	"DNS_entry\000"
 24213      656E7472 
 24213      7900
 24214              	.LASF421:
 24215 0a87 5352505F 		.ascii	"SRP_BAD_KEY_E\000"
 24215      4241445F 
 24215      4B45595F 
 24215      4500
 24216              	.LASF99:
 24217 0a95 4543435F 		.ascii	"ECC_PUBLICKEY_TYPE\000"
 24217      5055424C 
 24217      49434B45 
 24217      595F5459 
 24217      504500
 24218              	.LASF312:
 24219 0aa8 6B657955 		.ascii	"keyUsage\000"
 24219      73616765 
 24219      00
 24220              	.LASF613:
 24221 0ab1 6578744E 		.ascii	"extNameConsOid\000"
 24221      616D6543 
 24221      6F6E734F 
 24221      696400
 24222              	.LASF437:
 24223 0ac0 746D5F6D 		.ascii	"tm_min\000"
 24223      696E00
 24224              	.LASF582:
 24225 0ac7 63726974 		.ascii	"criticalExt\000"
 24225      6963616C 
 24225      45787400 
 24226              	.LASF159:
 24227 0ad3 504B4353 		.ascii	"PKCS5\000"
 24227      3500
 24228              	.LASF291:
 24229 0ad9 65787441 		.ascii	"extAuthInfoSz\000"
 24229      75746849 
 24229      6E666F53 
 24229      7A00
 24230              	.LASF620:
 24231 0ae7 65787445 		.ascii	"extExtKeyUsageClientAuthOid\000"
 24231      78744B65 
 24231      79557361 
 24231      6765436C 
 24231      69656E74 
 24232              	.LASF193:
 24233 0b03 45494748 		.ascii	"EIGHTK_BUF\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 621


 24233      544B5F42 
 24233      554600
 24234              	.LASF600:
 24235 0b0e 68617368 		.ascii	"hashSha512hOid\000"
 24235      53686135 
 24235      3132684F 
 24235      696400
 24236              	.LASF563:
 24237 0b1d 4465636F 		.ascii	"DecodeAltNames\000"
 24237      6465416C 
 24237      744E616D 
 24237      657300
 24238              	.LASF392:
 24239 0b2c 41534E5F 		.ascii	"ASN_CRL_NO_SIGNER_E\000"
 24239      43524C5F 
 24239      4E4F5F53 
 24239      49474E45 
 24239      525F4500 
 24240              	.LASF221:
 24241 0b40 4453416B 		.ascii	"DSAk\000"
 24241      00
 24242              	.LASF52:
 24243 0b45 44594E41 		.ascii	"DYNAMIC_TYPE_SOCKADDR\000"
 24243      4D49435F 
 24243      54595045 
 24243      5F534F43 
 24243      4B414444 
 24244              	.LASF190:
 24245 0b5b 4F435350 		.ascii	"OCSP_NONCE_EXT_SZ\000"
 24245      5F4E4F4E 
 24245      43455F45 
 24245      58545F53 
 24245      5A00
 24246              	.LASF446:
 24247 0b6d 4D617463 		.ascii	"MatchBaseName\000"
 24247      68426173 
 24247      654E616D 
 24247      6500
 24248              	.LASF293:
 24249 0b7b 65787443 		.ascii	"extCrlInfoSz\000"
 24249      726C496E 
 24249      666F537A 
 24249      00
 24250              	.LASF598:
 24251 0b88 68617368 		.ascii	"hashSha256hOid\000"
 24251      53686132 
 24251      3536684F 
 24251      696400
 24252              	.LASF350:
 24253 0b97 49535355 		.ascii	"ISSUER_E\000"
 24253      45525F45 
 24253      00
 24254              	.LASF391:
 24255 0ba0 41534E5F 		.ascii	"ASN_CRL_CONFIRM_E\000"
 24255      43524C5F 
 24255      434F4E46 
 24255      49524D5F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 622


 24255      4500
 24256              	.LASF219:
 24257 0bb2 44455333 		.ascii	"DES3b\000"
 24257      6200
 24258              	.LASF324:
 24259 0bb8 4F50454E 		.ascii	"OPEN_RAN_E\000"
 24259      5F52414E 
 24259      5F4500
 24260              	.LASF322:
 24261 0bc3 484D4143 		.ascii	"HMAC_BLOCK_SIZE\000"
 24261      5F424C4F 
 24261      434B5F53 
 24261      495A4500 
 24262              	.LASF37:
 24263 0bd3 44594E41 		.ascii	"DYNAMIC_TYPE_OPENSSL\000"
 24263      4D49435F 
 24263      54595045 
 24263      5F4F5045 
 24263      4E53534C 
 24264              	.LASF589:
 24265 0be8 5365744D 		.ascii	"SetMyVersion\000"
 24265      79566572 
 24265      73696F6E 
 24265      00
 24266              	.LASF602:
 24267 0bf5 626C6B44 		.ascii	"blkDes3CbcOid\000"
 24267      65733343 
 24267      62634F69 
 24267      6400
 24268              	.LASF377:
 24269 0c03 4241445F 		.ascii	"BAD_FUNC_ARG\000"
 24269      46554E43 
 24269      5F415247 
 24269      00
 24270              	.LASF478:
 24271 0c10 6F696453 		.ascii	"oidSz\000"
 24271      7A00
 24272              	.LASF179:
 24273 0c16 4D41585F 		.ascii	"MAX_PRSTR_SZ\000"
 24273      50525354 
 24273      525F535A 
 24273      00
 24274              	.LASF496:
 24275 0c23 656D6169 		.ascii	"emailName\000"
 24275      6C4E616D 
 24275      6500
 24276              	.LASF526:
 24277 0c2d 47657443 		.ascii	"GetCertHeader\000"
 24277      65727448 
 24277      65616465 
 24277      7200
 24278              	.LASF647:
 24279 0c3b 77635F53 		.ascii	"wc_ShaHash\000"
 24279      68614861 
 24279      736800
 24280              	.LASF211:
 24281 0c46 4D443268 		.ascii	"MD2h\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 623


 24281      00
 24282              	.LASF405:
 24283 0c4b 494E5F43 		.ascii	"IN_CORE_FIPS_E\000"
 24283      4F52455F 
 24283      46495053 
 24283      5F4500
 24284              	.LASF42:
 24285 0c5a 44594E41 		.ascii	"DYNAMIC_TYPE_CERT_MANAGER\000"
 24285      4D49435F 
 24285      54595045 
 24285      5F434552 
 24285      545F4D41 
 24286              	.LASF474:
 24287 0c74 5365744C 		.ascii	"SetLength\000"
 24287      656E6774 
 24287      6800
 24288              	.LASF352:
 24289 0c7e 45585445 		.ascii	"EXTENSIONS_E\000"
 24289      4E53494F 
 24289      4E535F45 
 24289      00
 24290              	.LASF333:
 24291 0c8b 4D505F54 		.ascii	"MP_TO_E\000"
 24291      4F5F4500 
 24292              	.LASF323:
 24293 0c93 4D41585F 		.ascii	"MAX_CODE_E\000"
 24293      434F4445 
 24293      5F4500
 24294              	.LASF248:
 24295 0c9e 454B555F 		.ascii	"EKU_SERVER_AUTH_OID\000"
 24295      53455256 
 24295      45525F41 
 24295      5554485F 
 24295      4F494400 
 24296              	.LASF229:
 24297 0cb2 414C545F 		.ascii	"ALT_NAMES_OID\000"
 24297      4E414D45 
 24297      535F4F49 
 24297      4400
 24298              	.LASF568:
 24299 0cc0 4465636F 		.ascii	"DecodeSubjKeyId\000"
 24299      64655375 
 24299      626A4B65 
 24299      79496400 
 24300              	.LASF581:
 24301 0cd0 636F6E66 		.ascii	"confirmOID\000"
 24301      69726D4F 
 24301      494400
 24302              	.LASF506:
 24303 0cdb 546F5472 		.ascii	"ToTraditional\000"
 24303      61646974 
 24303      696F6E61 
 24303      6C00
 24304              	.LASF308:
 24305 0ce9 61667465 		.ascii	"afterDateLen\000"
 24305      72446174 
 24305      654C656E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 624


 24305      00
 24306              	.LASF382:
 24307 0cf6 4145535F 		.ascii	"AES_GCM_AUTH_E\000"
 24307      47434D5F 
 24307      41555448 
 24307      5F4500
 24308              	.LASF265:
 24309 0d05 6B65794F 		.ascii	"keyOID\000"
 24309      494400
 24310              	.LASF642:
 24311 0d0c 42454749 		.ascii	"BEGIN_PUB_KEY\000"
 24311      4E5F5055 
 24311      425F4B45 
 24311      5900
 24312              	.LASF404:
 24313 0d1a 4C454E47 		.ascii	"LENGTH_ONLY_E\000"
 24313      54485F4F 
 24313      4E4C595F 
 24313      4500
 24314              	.LASF186:
 24315 0d28 4D41585F 		.ascii	"MAX_RSA_E_SZ\000"
 24315      5253415F 
 24315      455F535A 
 24315      00
 24316              	.LASF46:
 24317 0d35 44594E41 		.ascii	"DYNAMIC_TYPE_ALTNAME\000"
 24317      4D49435F 
 24317      54595045 
 24317      5F414C54 
 24317      4E414D45 
 24318              	.LASF436:
 24319 0d4a 746D5F73 		.ascii	"tm_sec\000"
 24319      656300
 24320              	.LASF596:
 24321 0d51 68617368 		.ascii	"hashMd5hOid\000"
 24321      4D643568 
 24321      4F696400 
 24322              	.LASF197:
 24323 0d5d 68617368 		.ascii	"hashType\000"
 24323      54797065 
 24323      00
 24324              	.LASF199:
 24325 0d66 6B657954 		.ascii	"keyType\000"
 24325      79706500 
 24326              	.LASF444:
 24327 0d6e 746D5F69 		.ascii	"tm_isdst\000"
 24327      73647374 
 24327      00
 24328              	.LASF422:
 24329 0d77 41534E5F 		.ascii	"ASN_NO_SKID\000"
 24329      4E4F5F53 
 24329      4B494400 
 24330              	.LASF663:
 24331 0d83 47657454 		.ascii	"GetTime\000"
 24331      696D6500 
 24332              	.LASF222:
 24333 0d8b 5253416B 		.ascii	"RSAk\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 625


 24333      00
 24334              	.LASF583:
 24335 0d90 50617273 		.ascii	"ParseCert\000"
 24335      65436572 
 24335      7400
 24336              	.LASF173:
 24337 0d9a 4D41585F 		.ascii	"MAX_SIG_SZ\000"
 24337      5349475F 
 24337      535A00
 24338              	.LASF48:
 24339 0da5 44594E41 		.ascii	"DYNAMIC_TYPE_CIPHER\000"
 24339      4D49435F 
 24339      54595045 
 24339      5F434950 
 24339      48455200 
 24340              	.LASF337:
 24341 0db9 4D505F4D 		.ascii	"MP_MULMOD_E\000"
 24341      554C4D4F 
 24341      445F4500 
 24342              	.LASF509:
 24343 0dc5 46726565 		.ascii	"FreeAltNames\000"
 24343      416C744E 
 24343      616D6573 
 24343      00
 24344              	.LASF492:
 24345 0dd2 746F6F42 		.ascii	"tooBig\000"
 24345      696700
 24346              	.LASF572:
 24347 0dd9 436F6E66 		.ascii	"ConfirmNameConstraints\000"
 24347      69726D4E 
 24347      616D6543 
 24347      6F6E7374 
 24347      7261696E 
 24348              	.LASF338:
 24349 0df0 4D505F4D 		.ascii	"MP_MOD_E\000"
 24349      4F445F45 
 24349      00
 24350              	.LASF120:
 24351 0df9 4245464F 		.ascii	"BEFORE\000"
 24351      524500
 24352              	.LASF548:
 24353 0e00 73657141 		.ascii	"seqArray\000"
 24353      72726179 
 24353      00
 24354              	.LASF14:
 24355 0e09 6C6F6E67 		.ascii	"long unsigned int\000"
 24355      20756E73 
 24355      69676E65 
 24355      6420696E 
 24355      7400
 24356              	.LASF73:
 24357 0e1b 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_BUFFER\000"
 24357      4D49435F 
 24357      54595045 
 24357      5F44544C 
 24357      535F4255 
 24358              	.LASF514:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 626


 24359 0e34 666F726D 		.ascii	"format\000"
 24359      617400
 24360              	.LASF494:
 24361 0e3b 7374724C 		.ascii	"strLen\000"
 24361      656E00
 24362              	.LASF237:
 24363 0e42 4558545F 		.ascii	"EXT_KEY_USAGE_OID\000"
 24363      4B45595F 
 24363      55534147 
 24363      455F4F49 
 24363      4400
 24364              	.LASF283:
 24365 0e54 6D617849 		.ascii	"maxIdx\000"
 24365      647800
 24366              	.LASF575:
 24367 0e5b 6D617463 		.ascii	"matchDns\000"
 24367      68446E73 
 24367      00
 24368              	.LASF573:
 24369 0e64 7369676E 		.ascii	"signer\000"
 24369      657200
 24370              	.LASF592:
 24371 0e6b 736E537A 		.ascii	"snSz\000"
 24371      00
 24372              	.LASF622:
 24373 0e70 70626B64 		.ascii	"pbkdf2Oid\000"
 24373      66324F69 
 24373      6400
 24374              	.LASF595:
 24375 0e7a 68617368 		.ascii	"hashMd2hOid\000"
 24375      4D643268 
 24375      4F696400 
 24376              	.LASF23:
 24377 0e86 44594E41 		.ascii	"DYNAMIC_TYPE_PUBLIC_KEY\000"
 24377      4D49435F 
 24377      54595045 
 24377      5F505542 
 24377      4C49435F 
 24378              	.LASF294:
 24379 0e9e 65787453 		.ascii	"extSubjKeyId\000"
 24379      75626A4B 
 24379      65794964 
 24379      00
 24380              	.LASF56:
 24381 0eab 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_MSG\000"
 24381      4D49435F 
 24381      54595045 
 24381      5F44544C 
 24381      535F4D53 
 24382              	.LASF168:
 24383 0ec1 4453415F 		.ascii	"DSA_INTS\000"
 24383      494E5453 
 24383      00
 24384              	.LASF296:
 24385 0eca 65787441 		.ascii	"extAuthKeyId\000"
 24385      7574684B 
 24385      65794964 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 627


 24385      00
 24386              	.LASF166:
 24387 0ed7 4B455949 		.ascii	"KEYID_SIZE\000"
 24387      445F5349 
 24387      5A4500
 24388              	.LASF406:
 24389 0ee2 4145535F 		.ascii	"AES_KAT_FIPS_E\000"
 24389      4B41545F 
 24389      46495053 
 24389      5F4500
 24390              	.LASF41:
 24391 0ef1 44594E41 		.ascii	"DYNAMIC_TYPE_CRL_ENTRY\000"
 24391      4D49435F 
 24391      54595045 
 24391      5F43524C 
 24391      5F454E54 
 24392              	.LASF432:
 24393 0f08 5349475F 		.ascii	"SIG_TYPE_E\000"
 24393      54595045 
 24393      5F4500
 24394              	.LASF45:
 24395 0f13 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_ENTRY\000"
 24395      4D49435F 
 24395      54595045 
 24395      5F4F4353 
 24395      505F454E 
 24396              	.LASF212:
 24397 0f2b 4D443568 		.ascii	"MD5h\000"
 24397      00
 24398              	.LASF407:
 24399 0f30 44455333 		.ascii	"DES3_KAT_FIPS_E\000"
 24399      5F4B4154 
 24399      5F464950 
 24399      535F4500 
 24400              	.LASF204:
 24401 0f40 63657274 		.ascii	"certAuthInfoType\000"
 24401      41757468 
 24401      496E666F 
 24401      54797065 
 24401      00
 24402              	.LASF184:
 24403 0f51 4D41585F 		.ascii	"MAX_NTRU_ENC_SZ\000"
 24403      4E545255 
 24403      5F454E43 
 24403      5F535A00 
 24404              	.LASF633:
 24405 0f61 454E445F 		.ascii	"END_RSA_PRIV\000"
 24405      5253415F 
 24405      50524956 
 24405      00
 24406              	.LASF542:
 24407 0f6e 74616753 		.ascii	"tagSz\000"
 24407      7A00
 24408              	.LASF645:
 24409 0f74 776F6C66 		.ascii	"wolfSSL_Free\000"
 24409      53534C5F 
 24409      46726565 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 628


 24409      00
 24410              	.LASF285:
 24411 0f81 73657269 		.ascii	"serial\000"
 24411      616C00
 24412              	.LASF135:
 24413 0f88 41534E5F 		.ascii	"ASN_RFC822_TYPE\000"
 24413      52464338 
 24413      32325F54 
 24413      59504500 
 24414              	.LASF412:
 24415 0f98 41455347 		.ascii	"AESGCM_KAT_FIPS_E\000"
 24415      434D5F4B 
 24415      41545F46 
 24415      4950535F 
 24415      4500
 24416              	.LASF557:
 24417 0faa 4465636F 		.ascii	"DecodeCertExtensions\000"
 24417      64654365 
 24417      72744578 
 24417      74656E73 
 24417      696F6E73 
 24418              	.LASF290:
 24419 0fbf 65787441 		.ascii	"extAuthInfo\000"
 24419      75746849 
 24419      6E666F00 
 24420              	.LASF289:
 24421 0fcb 65787465 		.ascii	"extensionsIdx\000"
 24421      6E73696F 
 24421      6E734964 
 24421      7800
 24422              	.LASF615:
 24423 0fd9 65787441 		.ascii	"extAuthInfoCaIssuerOid\000"
 24423      75746849 
 24423      6E666F43 
 24423      61497373 
 24423      7565724F 
 24424              	.LASF249:
 24425 0ff0 454B555F 		.ascii	"EKU_CLIENT_AUTH_OID\000"
 24425      434C4945 
 24425      4E545F41 
 24425      5554485F 
 24425      4F494400 
 24426              	.LASF36:
 24427 1004 44594E41 		.ascii	"DYNAMIC_TYPE_WRITEV\000"
 24427      4D49435F 
 24427      54595045 
 24427      5F575249 
 24427      54455600 
 24428              	.LASF341:
 24429 1018 4D505F5A 		.ascii	"MP_ZERO_E\000"
 24429      45524F5F 
 24429      4500
 24430              	.LASF458:
 24431 1022 64696765 		.ascii	"digest\000"
 24431      737400
 24432              	.LASF579:
 24433 1029 6D617463 		.ascii	"matchDir\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 629


 24433      68446972 
 24433      00
 24434              	.LASF138:
 24435 1032 41534E5F 		.ascii	"ASN_GENERALIZED_TIME\000"
 24435      47454E45 
 24435      52414C49 
 24435      5A45445F 
 24435      54494D45 
 24436              	.LASF85:
 24437 1047 5348415F 		.ascii	"SHA_PAD_SIZE\000"
 24437      5041445F 
 24437      53495A45 
 24437      00
 24438              	.LASF640:
 24439 1054 42454749 		.ascii	"BEGIN_DSA_PRIV\000"
 24439      4E5F4453 
 24439      415F5052 
 24439      495600
 24440              	.LASF521:
 24441 1063 64696666 		.ascii	"diffHH\000"
 24441      484800
 24442              	.LASF194:
 24443 106a 4D41585F 		.ascii	"MAX_PUBLIC_KEY_SZ\000"
 24443      5055424C 
 24443      49435F4B 
 24443      45595F53 
 24443      5A00
 24444              	.LASF311:
 24445 107c 5369676E 		.ascii	"Signer\000"
 24445      657200
 24446              	.LASF551:
 24447 1083 77635F45 		.ascii	"wc_EncodeSignature\000"
 24447      6E636F64 
 24447      65536967 
 24447      6E617475 
 24447      726500
 24448              	.LASF532:
 24449 1096 42797465 		.ascii	"BytePrecision\000"
 24449      50726563 
 24449      6973696F 
 24449      6E00
 24450              	.LASF459:
 24451 10a4 4465636F 		.ascii	"DecodeKeyUsage\000"
 24451      64654B65 
 24451      79557361 
 24451      676500
 24452              	.LASF516:
 24453 10b3 6C74696D 		.ascii	"ltime\000"
 24453      6500
 24454              	.LASF629:
 24455 10b9 454E445F 		.ascii	"END_DH_PARAM\000"
 24455      44485F50 
 24455      4152414D 
 24455      00
 24456              	.LASF601:
 24457 10c6 626C6B44 		.ascii	"blkDesCbcOid\000"
 24457      65734362 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 630


 24457      634F6964 
 24457      00
 24458              	.LASF415:
 24459 10d3 4D41435F 		.ascii	"MAC_CMP_FAILED_E\000"
 24459      434D505F 
 24459      4641494C 
 24459      45445F45 
 24459      00
 24460              	.LASF599:
 24461 10e4 68617368 		.ascii	"hashSha384hOid\000"
 24461      53686133 
 24461      3834684F 
 24461      696400
 24462              	.LASF15:
 24463 10f3 6C6F6E67 		.ascii	"long long int\000"
 24463      206C6F6E 
 24463      6720696E 
 24463      7400
 24464              	.LASF510:
 24465 1101 46726565 		.ascii	"FreeNameSubtrees\000"
 24465      4E616D65 
 24465      53756274 
 24465      72656573 
 24465      00
 24466              	.LASF614:
 24467 1112 65787441 		.ascii	"extAuthInfoOcspOid\000"
 24467      75746849 
 24467      6E666F4F 
 24467      6373704F 
 24467      696400
 24468              	.LASF440:
 24469 1125 746D5F6D 		.ascii	"tm_mon\000"
 24469      6F6E00
 24470              	.LASF299:
 24471 112c 69734341 		.ascii	"isCA\000"
 24471      00
 24472              	.LASF206:
 24473 1131 63657274 		.ascii	"certAltNameType\000"
 24473      416C744E 
 24473      616D6554 
 24473      79706500 
 24474              	.LASF395:
 24475 1141 4241445F 		.ascii	"BAD_PADDING_E\000"
 24475      50414444 
 24475      494E475F 
 24475      4500
 24476              	.LASF644:
 24477 114f 6D656D63 		.ascii	"memcpy\000"
 24477      707900
 24478              	.LASF70:
 24479 1156 44594E41 		.ascii	"DYNAMIC_TYPE_X509_CTX\000"
 24479      4D49435F 
 24479      54595045 
 24479      5F583530 
 24479      395F4354 
 24480              	.LASF235:
 24481 116c 4B45595F 		.ascii	"KEY_USAGE_OID\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 631


 24481      55534147 
 24481      455F4F49 
 24481      4400
 24482              	.LASF612:
 24483 117a 65787445 		.ascii	"extExtKeyUsageOid\000"
 24483      78744B65 
 24483      79557361 
 24483      67654F69 
 24483      6400
 24484              	.LASF637:
 24485 118c 454E445F 		.ascii	"END_ENC_PRIV_KEY\000"
 24485      454E435F 
 24485      50524956 
 24485      5F4B4559 
 24485      00
 24486              	.LASF282:
 24487 119d 73726349 		.ascii	"srcIdx\000"
 24487      647800
 24488              	.LASF569:
 24489 11a4 4465636F 		.ascii	"DecodeNameConstraints\000"
 24489      64654E61 
 24489      6D65436F 
 24489      6E737472 
 24489      61696E74 
 24490              	.LASF336:
 24491 11ba 4D505F4D 		.ascii	"MP_MUL_E\000"
 24491      554C5F45 
 24491      00
 24492              	.LASF180:
 24493 11c3 4D41585F 		.ascii	"MAX_VERSION_SZ\000"
 24493      56455253 
 24493      494F4E5F 
 24493      535A00
 24494              	.LASF7:
 24495 11d2 574F4C46 		.ascii	"WOLFSSL_WORD_SIZE\000"
 24495      53534C5F 
 24495      574F5244 
 24495      5F53495A 
 24495      4500
 24496              	.LASF570:
 24497 11e4 73756274 		.ascii	"subtree\000"
 24497      72656500 
 24498              	.LASF380:
 24499 11ec 4E4F5F50 		.ascii	"NO_PASSWORD\000"
 24499      41535357 
 24499      4F524400 
 24500              	.LASF24:
 24501 11f8 44594E41 		.ascii	"DYNAMIC_TYPE_SIGNER\000"
 24501      4D49435F 
 24501      54595045 
 24501      5F534947 
 24501      4E455200 
 24502              	.LASF246:
 24503 120c 4578744B 		.ascii	"ExtKeyUsage_Sum\000"
 24503      65795573 
 24503      6167655F 
 24503      53756D00 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 632


 24504              	.LASF512:
 24505 121c 46726565 		.ascii	"FreeDecodedCert\000"
 24505      4465636F 
 24505      64656443 
 24505      65727400 
 24506              	.LASF40:
 24507 122c 44594E41 		.ascii	"DYNAMIC_TYPE_REVOKED\000"
 24507      4D49435F 
 24507      54595045 
 24507      5F524556 
 24507      4F4B4544 
 24508              	.LASF104:
 24509 1241 4354435F 		.ascii	"CTC_MD2wRSA\000"
 24509      4D443277 
 24509      52534100 
 24510              	.LASF414:
 24511 124d 54485245 		.ascii	"THREAD_STORE_SET_E\000"
 24511      41445F53 
 24511      544F5245 
 24511      5F534554 
 24511      5F4500
 24512              	.LASF242:
 24513 1260 48575F4E 		.ascii	"HW_NAME_OID\000"
 24513      414D455F 
 24513      4F494400 
 24514              	.LASF254:
 24515 126c 42617365 		.ascii	"Base_entry\000"
 24515      5F656E74 
 24515      727900
 24516              	.LASF49:
 24517 1277 44594E41 		.ascii	"DYNAMIC_TYPE_RNG\000"
 24517      4D49435F 
 24517      54595045 
 24517      5F524E47 
 24517      00
 24518              	.LASF144:
 24519 1288 41534E5F 		.ascii	"ASN_CONTEXT_SPECIFIC\000"
 24519      434F4E54 
 24519      4558545F 
 24519      53504543 
 24519      49464943 
 24520              	.LASF236:
 24521 129d 494E4849 		.ascii	"INHIBIT_ANY_OID\000"
 24521      4249545F 
 24521      414E595F 
 24521      4F494400 
 24522              	.LASF501:
 24523 12ad 61637475 		.ascii	"actualOidSz\000"
 24523      616C4F69 
 24523      64537A00 
 24524              	.LASF485:
 24525 12b9 47657453 		.ascii	"GetSet\000"
 24525      657400
 24526              	.LASF449:
 24527 12c0 636F756E 		.ascii	"count\000"
 24527      7400
 24528              	.LASF91:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 633


 24529 12c6 4543435F 		.ascii	"ECC_PRIVATEKEY_TYPE\000"
 24529      50524956 
 24529      4154454B 
 24529      45595F54 
 24529      59504500 
 24530              	.LASF520:
 24531 12da 74696D65 		.ascii	"timeDiff\000"
 24531      44696666 
 24531      00
 24532              	.LASF225:
 24533 12e3 4B44465F 		.ascii	"KDF_Sum\000"
 24533      53756D00 
 24534              	.LASF80:
 24535 12eb 616C6C6F 		.ascii	"alloc\000"
 24535      6300
 24536              	.LASF117:
 24537 12f1 49535355 		.ascii	"ISSUER\000"
 24537      455200
 24538              	.LASF403:
 24539 12f8 5253415F 		.ascii	"RSA_PAD_E\000"
 24539      5041445F 
 24539      4500
 24540              	.LASF303:
 24541 1302 65787445 		.ascii	"extExtKeyUsageSet\000"
 24541      78744B65 
 24541      79557361 
 24541      67655365 
 24541      7400
 24542              	.LASF54:
 24543 1314 44594E41 		.ascii	"DYNAMIC_TYPE_ECC\000"
 24543      4D49435F 
 24543      54595045 
 24543      5F454343 
 24543      00
 24544              	.LASF5:
 24545 1325 756E7369 		.ascii	"unsigned int\000"
 24545      676E6564 
 24545      20696E74 
 24545      00
 24546              	.LASF216:
 24547 1332 53484135 		.ascii	"SHA512h\000"
 24547      31326800 
 24548              	.LASF529:
 24549 133a 47657445 		.ascii	"GetExplicitVersion\000"
 24549      78706C69 
 24549      63697456 
 24549      65727369 
 24549      6F6E00
 24550              	.LASF361:
 24551 134d 41534E5F 		.ascii	"ASN_UNKNOWN_OID_E\000"
 24551      554E4B4E 
 24551      4F574E5F 
 24551      4F49445F 
 24551      4500
 24552              	.LASF305:
 24553 135f 6265666F 		.ascii	"beforeDate\000"
 24553      72654461 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 634


 24553      746500
 24554              	.LASF255:
 24555 136a 6E616D65 		.ascii	"nameSz\000"
 24555      537A00
 24556              	.LASF192:
 24557 1371 4D41585F 		.ascii	"MAX_OCSP_NONCE_SZ\000"
 24557      4F435350 
 24557      5F4E4F4E 
 24557      43455F53 
 24557      5A00
 24558              	.LASF44:
 24559 1383 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_STATUS\000"
 24559      4D49435F 
 24559      54595045 
 24559      5F4F4353 
 24559      505F5354 
 24560              	.LASF334:
 24561 139c 4D505F53 		.ascii	"MP_SUB_E\000"
 24561      55425F45 
 24561      00
 24562              	.LASF172:
 24563 13a5 4D41585F 		.ascii	"MAX_ENCODED_SIG_SZ\000"
 24563      454E434F 
 24563      4445445F 
 24563      5349475F 
 24563      535A00
 24564              	.LASF176:
 24565 13b8 4D41585F 		.ascii	"MAX_SET_SZ\000"
 24565      5345545F 
 24565      535A00
 24566              	.LASF636:
 24567 13c3 42454749 		.ascii	"BEGIN_ENC_PRIV_KEY\000"
 24567      4E5F454E 
 24567      435F5052 
 24567      49565F4B 
 24567      455900
 24568              	.LASF300:
 24569 13d6 77654F77 		.ascii	"weOwnAltNames\000"
 24569      6E416C74 
 24569      4E616D65 
 24569      7300
 24570              	.LASF307:
 24571 13e4 61667465 		.ascii	"afterDate\000"
 24571      72446174 
 24571      6500
 24572              	.LASF499:
 24573 13ee 4765744F 		.ascii	"GetObjectId\000"
 24573      626A6563 
 24573      74496400 
 24574              	.LASF29:
 24575 13fa 44594E41 		.ascii	"DYNAMIC_TYPE_OUT_BUFFER\000"
 24575      4D49435F 
 24575      54595045 
 24575      5F4F5554 
 24575      5F425546 
 24576              	.LASF525:
 24577 1412 73746172 		.ascii	"startIdx\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 635


 24577      74496478 
 24577      00
 24578              	.LASF161:
 24579 141b 504B4353 		.ascii	"PKCS12\000"
 24579      313200
 24580              	.LASF580:
 24581 1422 50617273 		.ascii	"ParseCertRelative\000"
 24581      65436572 
 24581      7452656C 
 24581      61746976 
 24581      6500
 24582              	.LASF177:
 24583 1434 4D41585F 		.ascii	"MAX_OCTET_STR_SZ\000"
 24583      4F435445 
 24583      545F5354 
 24583      525F535A 
 24583      00
 24584              	.LASF374:
 24585 1445 4543435F 		.ascii	"ECC_BAD_ARG_E\000"
 24585      4241445F 
 24585      4152475F 
 24585      4500
 24586              	.LASF660:
 24587 1453 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 24587      4320342E 
 24587      392E3320 
 24587      32303135 
 24587      30333033 
 24588 1486 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 24588      20726576 
 24588      6973696F 
 24588      6E203232 
 24588      31323230 
 24589 14b9 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 24589      66756E63 
 24589      74696F6E 
 24589      2D736563 
 24589      74696F6E 
 24590              	.LASF163:
 24591 14e1 41534E5F 		.ascii	"ASN_BOOL_SIZE\000"
 24591      424F4F4C 
 24591      5F53495A 
 24591      4500
 24592              	.LASF343:
 24593 14ef 5253415F 		.ascii	"RSA_WRONG_TYPE_E\000"
 24593      57524F4E 
 24593      475F5459 
 24593      50455F45 
 24593      00
 24594              	.LASF124:
 24595 1500 41534E5F 		.ascii	"ASN_INTEGER\000"
 24595      494E5445 
 24595      47455200 
 24596              	.LASF33:
 24597 150c 44594E41 		.ascii	"DYNAMIC_TYPE_DOMAIN\000"
 24597      4D49435F 
 24597      54595045 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 636


 24597      5F444F4D 
 24597      41494E00 
 24598              	.LASF25:
 24599 1520 44594E41 		.ascii	"DYNAMIC_TYPE_NONE\000"
 24599      4D49435F 
 24599      54595045 
 24599      5F4E4F4E 
 24599      4500
 24600              	.LASF527:
 24601 1532 73657269 		.ascii	"serialTmp\000"
 24601      616C546D 
 24601      7000
 24602              	.LASF100:
 24603 153c 54525553 		.ascii	"TRUSTED_PEER_TYPE\000"
 24603      5445445F 
 24603      50454552 
 24603      5F545950 
 24603      4500
 24604              	.LASF83:
 24605 154e 5348415F 		.ascii	"SHA_BLOCK_SIZE\000"
 24605      424C4F43 
 24605      4B5F5349 
 24605      5A4500
 24606              	.LASF93:
 24607 155d 43455254 		.ascii	"CERTREQ_TYPE\000"
 24607      5245515F 
 24607      54595045 
 24607      00
 24608              	.LASF106:
 24609 156a 4354435F 		.ascii	"CTC_SHAwRSA\000"
 24609      53484177 
 24609      52534100 
 24610              	.LASF480:
 24611 1576 44617465 		.ascii	"DateGreaterThan\000"
 24611      47726561 
 24611      74657254 
 24611      68616E00 
 24612              	.LASF96:
 24613 1586 5253415F 		.ascii	"RSA_TYPE\000"
 24613      54595045 
 24613      00
 24614              	.LASF393:
 24615 158f 41534E5F 		.ascii	"ASN_OCSP_CONFIRM_E\000"
 24615      4F435350 
 24615      5F434F4E 
 24615      4649524D 
 24615      5F4500
 24616              	.LASF165:
 24617 15a2 41534E5F 		.ascii	"ASN_ECC_CONTEXT_SZ\000"
 24617      4543435F 
 24617      434F4E54 
 24617      4558545F 
 24617      535A00
 24618              	.LASF31:
 24619 15b5 44594E41 		.ascii	"DYNAMIC_TYPE_INFO\000"
 24619      4D49435F 
 24619      54595045 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 637


 24619      5F494E46 
 24619      4F00
 24620              	.LASF349:
 24621 15c7 5355424A 		.ascii	"SUBJECT_E\000"
 24621      4543545F 
 24621      4500
 24622              	.LASF185:
 24623 15d1 4D41585F 		.ascii	"MAX_LENGTH_SZ\000"
 24623      4C454E47 
 24623      54485F53 
 24623      5A00
 24624              	.LASF30:
 24625 15df 44594E41 		.ascii	"DYNAMIC_TYPE_IN_BUFFER\000"
 24625      4D49435F 
 24625      54595045 
 24625      5F494E5F 
 24625      42554646 
 24626              	.LASF538:
 24627 15f6 53657445 		.ascii	"SetExplicit\000"
 24627      78706C69 
 24627      63697400 
 24628              	.LASF623:
 24629 1602 5F5F6374 		.ascii	"__ctype_ptr__\000"
 24629      7970655F 
 24629      7074725F 
 24629      5F00
 24630              	.LASF445:
 24631 1610 62746F69 		.ascii	"btoi\000"
 24631      00
 24632              	.LASF92:
 24633 1615 4453415F 		.ascii	"DSA_PRIVATEKEY_TYPE\000"
 24633      50524956 
 24633      4154454B 
 24633      45595F54 
 24633      59504500 
 24634              	.LASF76:
 24635 1629 53484132 		.ascii	"SHA256_DIGEST_SIZE\000"
 24635      35365F44 
 24635      49474553 
 24635      545F5349 
 24635      5A4500
 24636              	.LASF376:
 24637 163c 4543435F 		.ascii	"ECC_CURVE_OID_E\000"
 24637      43555256 
 24637      455F4F49 
 24637      445F4500 
 24638              	.LASF123:
 24639 164c 41534E5F 		.ascii	"ASN_BOOLEAN\000"
 24639      424F4F4C 
 24639      45414E00 
 24640              	.LASF487:
 24641 1658 6E616D65 		.ascii	"nameType\000"
 24641      54797065 
 24641      00
 24642              	.LASF522:
 24643 1661 64696666 		.ascii	"diffMM\000"
 24643      4D4D00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 638


 24644              	.LASF258:
 24645 1668 7075626C 		.ascii	"publicKey\000"
 24645      69634B65 
 24645      7900
 24646              	.LASF151:
 24647 1672 41534E5F 		.ascii	"ASN_STATE_NAME\000"
 24647      53544154 
 24647      455F4E41 
 24647      4D4500
 24648              	.LASF454:
 24649 1681 73696753 		.ascii	"sigSz\000"
 24649      7A00
 24650              	.LASF39:
 24651 1687 44594E41 		.ascii	"DYNAMIC_TYPE_CRL\000"
 24651      4D49435F 
 24651      54595045 
 24651      5F43524C 
 24651      00
 24652              	.LASF550:
 24653 1698 64696753 		.ascii	"digSz\000"
 24653      7A00
 24654              	.LASF483:
 24655 169e 4765744C 		.ascii	"GetLength\000"
 24655      656E6774 
 24655      6800
 24656              	.LASF280:
 24657 16a8 76657269 		.ascii	"verify\000"
 24657      667900
 24658              	.LASF134:
 24659 16af 41534E5F 		.ascii	"ASN_OTHER_TYPE\000"
 24659      4F544845 
 24659      525F5459 
 24659      504500
 24660              	.LASF584:
 24661 16be 4D616B65 		.ascii	"MakeSigner\000"
 24661      5369676E 
 24661      657200
 24662              	.LASF469:
 24663 16c9 656E7472 		.ascii	"entry\000"
 24663      7900
 24664              	.LASF450:
 24665 16cf 737A4164 		.ascii	"szAdjust\000"
 24665      6A757374 
 24665      00
 24666              	.LASF559:
 24667 16d8 63726974 		.ascii	"criticalFail\000"
 24667      6963616C 
 24667      4661696C 
 24667      00
 24668              	.LASF439:
 24669 16e5 746D5F6D 		.ascii	"tm_mday\000"
 24669      64617900 
 24670              	.LASF320:
 24671 16ed 424C414B 		.ascii	"BLAKE2B_ID\000"
 24671      4532425F 
 24671      494400
 24672              	.LASF364:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 639


 24673 16f8 41534E5F 		.ascii	"ASN_AFTER_DATE_E\000"
 24673      41465445 
 24673      525F4441 
 24673      54455F45 
 24673      00
 24674              	.LASF531:
 24675 1709 4765744B 		.ascii	"GetKey\000"
 24675      657900
 24676              	.LASF277:
 24677 1710 7375626A 		.ascii	"subjectCNStored\000"
 24677      65637443 
 24677      4E53746F 
 24677      72656400 
 24678              	.LASF213:
 24679 1720 53484168 		.ascii	"SHAh\000"
 24679      00
 24680              	.LASF198:
 24681 1725 73696754 		.ascii	"sigType\000"
 24681      79706500 
 24682              	.LASF345:
 24683 172d 42554646 		.ascii	"BUFFER_E\000"
 24683      45525F45 
 24683      00
 24684              	.LASF630:
 24685 1736 42454749 		.ascii	"BEGIN_X509_CRL\000"
 24685      4E5F5835 
 24685      30395F43 
 24685      524C00
 24686              	.LASF396:
 24687 1745 5245515F 		.ascii	"REQ_ATTRIBUTE_E\000"
 24687      41545452 
 24687      49425554 
 24687      455F4500 
 24688              	.LASF217:
 24689 1755 426C6F63 		.ascii	"Block_Sum\000"
 24689      6B5F5375 
 24689      6D00
 24690              	.LASF250:
 24691 175f 454B555F 		.ascii	"EKU_OCSP_SIGN_OID\000"
 24691      4F435350 
 24691      5F534947 
 24691      4E5F4F49 
 24691      4400
 24692              	.LASF182:
 24693 1771 4D41585F 		.ascii	"MAX_RSA_INT_SZ\000"
 24693      5253415F 
 24693      494E545F 
 24693      535A00
 24694              	.LASF6:
 24695 1780 6C6F6E67 		.ascii	"long long unsigned int\000"
 24695      206C6F6E 
 24695      6720756E 
 24695      7369676E 
 24695      65642069 
 24696              	.LASF362:
 24697 1797 41534E5F 		.ascii	"ASN_DATE_SZ_E\000"
 24697      44415445 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 640


 24697      5F535A5F 
 24697      4500
 24698              	.LASF555:
 24699 17a5 656E6344 		.ascii	"encDigSz\000"
 24699      6967537A 
 24699      00
 24700              	.LASF502:
 24701 17ae 61637475 		.ascii	"actualOid\000"
 24701      616C4F69 
 24701      6400
 24702              	.LASF170:
 24703 17b8 4D41585F 		.ascii	"MAX_DATE_SIZE\000"
 24703      44415445 
 24703      5F53495A 
 24703      4500
 24704              	.LASF604:
 24705 17c6 65787441 		.ascii	"extAltNamesOid\000"
 24705      6C744E61 
 24705      6D65734F 
 24705      696400
 24706              	.LASF462:
 24707 17d5 6C656E67 		.ascii	"length\000"
 24707      746800
 24708              	.LASF74:
 24709 17dc 53484132 		.ascii	"SHA256\000"
 24709      353600
 24710              	.LASF146:
 24711 17e3 41534E5F 		.ascii	"ASN_COMMON_NAME\000"
 24711      434F4D4D 
 24711      4F4E5F4E 
 24711      414D4500 
 24712              	.LASF88:
 24713 17f3 44485F50 		.ascii	"DH_PARAM_TYPE\000"
 24713      4152414D 
 24713      5F545950 
 24713      4500
 24714              	.LASF230:
 24715 1801 43524C5F 		.ascii	"CRL_DIST_OID\000"
 24715      44495354 
 24715      5F4F4944 
 24715      00
 24716              	.LASF27:
 24717 180e 44594E41 		.ascii	"DYNAMIC_TYPE_RSA\000"
 24717      4D49435F 
 24717      54595045 
 24717      5F525341 
 24717      00
 24718              	.LASF606:
 24719 181f 65787441 		.ascii	"extAuthInfoOid\000"
 24719      75746849 
 24719      6E666F4F 
 24719      696400
 24720              	.LASF434:
 24721 182e 4D494E5F 		.ascii	"MIN_CODE_E\000"
 24721      434F4445 
 24721      5F4500
 24722              	.LASF112:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 641


 24723 1839 4354435F 		.ascii	"CTC_SHA512wRSA\000"
 24723      53484135 
 24723      31327752 
 24723      534100
 24724              	.LASF154:
 24725 1848 4D697363 		.ascii	"Misc_ASN\000"
 24725      5F41534E 
 24725      00
 24726              	.LASF208:
 24727 1851 6B646654 		.ascii	"kdfType\000"
 24727      79706500 
 24728              	.LASF378:
 24729 1859 4E4F545F 		.ascii	"NOT_COMPILED_IN\000"
 24729      434F4D50 
 24729      494C4544 
 24729      5F494E00 
 24730              	.LASF585:
 24731 1869 46726565 		.ascii	"FreeSigner\000"
 24731      5369676E 
 24731      657200
 24732              	.LASF552:
 24733 1874 68617368 		.ascii	"hashOID\000"
 24733      4F494400 
 24734              	.LASF420:
 24735 187c 5352505F 		.ascii	"SRP_VERIFY_E\000"
 24735      56455249 
 24735      46595F45 
 24735      00
 24736              	.LASF463:
 24737 1889 4465636F 		.ascii	"DecodeBasicCaConstraint\000"
 24737      64654261 
 24737      73696343 
 24737      61436F6E 
 24737      73747261 
 24738              	.LASF87:
 24739 18a1 50524956 		.ascii	"PRIVATEKEY_TYPE\000"
 24739      4154454B 
 24739      45595F54 
 24739      59504500 
 24740              	.LASF327:
 24741 18b1 43525950 		.ascii	"CRYPTGEN_E\000"
 24741      5447454E 
 24741      5F4500
 24742              	.LASF442:
 24743 18bc 746D5F77 		.ascii	"tm_wday\000"
 24743      64617900 
 24744              	.LASF162:
 24745 18c4 4D41585F 		.ascii	"MAX_UNICODE_SZ\000"
 24745      554E4943 
 24745      4F44455F 
 24745      535A00
 24746              	.LASF108:
 24747 18d3 4354435F 		.ascii	"CTC_SHA256wRSA\000"
 24747      53484132 
 24747      35367752 
 24747      534100
 24748              	.LASF35:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 642


 24749 18e2 44594E41 		.ascii	"DYNAMIC_TYPE_CTX\000"
 24749      4D49435F 
 24749      54595045 
 24749      5F435458 
 24749      00
 24750              	.LASF316:
 24751 18f3 49504144 		.ascii	"IPAD\000"
 24751      00
 24752              	.LASF443:
 24753 18f8 746D5F79 		.ascii	"tm_yday\000"
 24753      64617900 
 24754              	.LASF649:
 24755 1900 6D705F72 		.ascii	"mp_read_unsigned_bin\000"
 24755      6561645F 
 24755      756E7369 
 24755      676E6564 
 24755      5F62696E 
 24756              	.LASF26:
 24757 1915 44594E41 		.ascii	"DYNAMIC_TYPE_BIGINT\000"
 24757      4D49435F 
 24757      54595045 
 24757      5F424947 
 24757      494E5400 
 24758              	.LASF178:
 24759 1929 4D41585F 		.ascii	"MAX_EXP_SZ\000"
 24759      4558505F 
 24759      535A00
 24760              	.LASF541:
 24761 1934 63757276 		.ascii	"curveSz\000"
 24761      65537A00 
 24762              	.LASF171:
 24763 193c 41534E5F 		.ascii	"ASN_GEN_TIME_SZ\000"
 24763      47454E5F 
 24763      54494D45 
 24763      5F535A00 
 24764              	.LASF401:
 24765 194c 524E475F 		.ascii	"RNG_FAILURE_E\000"
 24765      4641494C 
 24765      5552455F 
 24765      4500
 24766              	.LASF169:
 24767 195a 4D494E5F 		.ascii	"MIN_DATE_SIZE\000"
 24767      44415445 
 24767      5F53495A 
 24767      4500
 24768              	.LASF546:
 24769 1968 616C676F 		.ascii	"algoName\000"
 24769      4E616D65 
 24769      00
 24770              	.LASF597:
 24771 1971 68617368 		.ascii	"hashSha1hOid\000"
 24771      53686131 
 24771      684F6964 
 24771      00
 24772              	.LASF588:
 24773 197e 726F7773 		.ascii	"rows\000"
 24773      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 643


 24774              	.LASF429:
 24775 1983 57435F49 		.ascii	"WC_INIT_E\000"
 24775      4E49545F 
 24775      4500
 24776              	.LASF484:
 24777 198d 47657453 		.ascii	"GetSequence\000"
 24777      65717565 
 24777      6E636500 
 24778              	.LASF266:
 24779 1999 76657273 		.ascii	"version\000"
 24779      696F6E00 
 24780              	.LASF558:
 24781 19a1 63726974 		.ascii	"critical\000"
 24781      6963616C 
 24781      00
 24782              	.LASF342:
 24783 19aa 4D454D4F 		.ascii	"MEMORY_E\000"
 24783      52595F45 
 24783      00
 24784              	.LASF648:
 24785 19b3 6D705F69 		.ascii	"mp_init\000"
 24785      6E697400 
 24786              	.LASF486:
 24787 19bb 4765744E 		.ascii	"GetName\000"
 24787      616D6500 
 24788              	.LASF227:
 24789 19c3 45787465 		.ascii	"Extensions_Sum\000"
 24789      6E73696F 
 24789      6E735F53 
 24789      756D00
 24790              	.LASF348:
 24791 19d2 44415445 		.ascii	"DATE_E\000"
 24791      5F4500
 24792              	.LASF553:
 24793 19d9 64696741 		.ascii	"digArray\000"
 24793      72726179 
 24793      00
 24794              	.LASF9:
 24795 19e2 574F4C46 		.ascii	"WOLFSSL_WORD_BITS\000"
 24795      53534C5F 
 24795      574F5244 
 24795      5F424954 
 24795      5300
 24796              	.LASF646:
 24797 19f4 776F6C66 		.ascii	"wolfSSL_Malloc\000"
 24797      53534C5F 
 24797      4D616C6C 
 24797      6F6300
 24798              	.LASF113:
 24799 1a03 4354435F 		.ascii	"CTC_SHA512wECDSA\000"
 24799      53484135 
 24799      31327745 
 24799      43445341 
 24799      00
 24800              	.LASF18:
 24801 1a14 44594E41 		.ascii	"DYNAMIC_TYPE_CA\000"
 24801      4D49435F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 644


 24801      54595045 
 24801      5F434100 
 24802              	.LASF460:
 24803 1a24 696E7075 		.ascii	"input\000"
 24803      7400
 24804              	.LASF78:
 24805 1a2a 6D705F64 		.ascii	"mp_digit\000"
 24805      69676974 
 24805      00
 24806              	.LASF650:
 24807 1a33 6D705F63 		.ascii	"mp_clear\000"
 24807      6C656172 
 24807      00
 24808              	.LASF489:
 24809 1a3c 66756C6C 		.ascii	"full\000"
 24809      00
 24810              	.LASF313:
 24811 1a41 6E616D65 		.ascii	"nameLen\000"
 24811      4C656E00 
 24812              	.LASF332:
 24813 1a49 4D505F45 		.ascii	"MP_EXPTMOD_E\000"
 24813      5850544D 
 24813      4F445F45 
 24813      00
 24814              	.LASF654:
 24815 1a56 74696D65 		.ascii	"time\000"
 24815      00
 24816              	.LASF298:
 24817 1a5b 6578744E 		.ascii	"extNameConstraintSet\000"
 24817      616D6543 
 24817      6F6E7374 
 24817      7261696E 
 24817      74536574 
 24818              	.LASF537:
 24819 1a70 6E756D62 		.ascii	"number\000"
 24819      657200
 24820              	.LASF565:
 24821 1a77 6C656E53 		.ascii	"lenStartIdx\000"
 24821      74617274 
 24821      49647800 
 24822              	.LASF586:
 24823 1a83 46726565 		.ascii	"FreeSignerTable\000"
 24823      5369676E 
 24823      65725461 
 24823      626C6500 
 24824              	.LASF367:
 24825 1a93 41534E5F 		.ascii	"ASN_INPUT_E\000"
 24825      494E5055 
 24825      545F4500 
 24826              	.LASF631:
 24827 1a9f 454E445F 		.ascii	"END_X509_CRL\000"
 24827      58353039 
 24827      5F43524C 
 24827      00
 24828              	.LASF366:
 24829 1aac 41534E5F 		.ascii	"ASN_TIME_E\000"
 24829      54494D45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 645


 24829      5F4500
 24830              	.LASF651:
 24831 1ab7 6D656D63 		.ascii	"memcmp\000"
 24831      6D7000
 24832              	.LASF102:
 24833 1abe 4374635F 		.ascii	"Ctc_SigType\000"
 24833      53696754 
 24833      79706500 
 24834              	.LASF238:
 24835 1aca 4E414D45 		.ascii	"NAME_CONS_OID\000"
 24835      5F434F4E 
 24835      535F4F49 
 24835      4400
 24836              	.LASF157:
 24837 1ad8 4D41585F 		.ascii	"MAX_IV_SIZE\000"
 24837      49565F53 
 24837      495A4500 
 24838              	.LASF261:
 24839 1ae4 63657274 		.ascii	"certBegin\000"
 24839      42656769 
 24839      6E00
 24840              	.LASF413:
 24841 1aee 54485245 		.ascii	"THREAD_STORE_KEY_E\000"
 24841      41445F53 
 24841      544F5245 
 24841      5F4B4559 
 24841      5F4500
 24842              	.LASF32:
 24843 1b01 44594E41 		.ascii	"DYNAMIC_TYPE_DH\000"
 24843      4D49435F 
 24843      54595045 
 24843      5F444800 
 24844              	.LASF75:
 24845 1b11 53484132 		.ascii	"SHA256_BLOCK_SIZE\000"
 24845      35365F42 
 24845      4C4F434B 
 24845      5F53495A 
 24845      4500
 24846              	.LASF628:
 24847 1b23 42454749 		.ascii	"BEGIN_DH_PARAM\000"
 24847      4E5F4448 
 24847      5F504152 
 24847      414D00
 24848              	.LASF276:
 24849 1b32 7375626A 		.ascii	"subjectCNEnc\000"
 24849      65637443 
 24849      4E456E63 
 24849      00
 24850              	.LASF627:
 24851 1b3f 454E445F 		.ascii	"END_CERT_REQ\000"
 24851      43455254 
 24851      5F524551 
 24851      00
 24852              	.LASF639:
 24853 1b4c 454E445F 		.ascii	"END_EC_PRIV\000"
 24853      45435F50 
 24853      52495600 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 646


 24854              	.LASF107:
 24855 1b58 4354435F 		.ascii	"CTC_SHAwECDSA\000"
 24855      53484177 
 24855      45434453 
 24855      4100
 24856              	.LASF158:
 24857 1b66 4D41585F 		.ascii	"MAX_KEY_SIZE\000"
 24857      4B45595F 
 24857      53495A45 
 24857      00
 24858              	.LASF279:
 24859 1b73 7375626A 		.ascii	"subject\000"
 24859      65637400 
 24860              	.LASF103:
 24861 1b7b 4354435F 		.ascii	"CTC_SHAwDSA\000"
 24861      53484177 
 24861      44534100 
 24862              	.LASF388:
 24863 1b87 4445434F 		.ascii	"DECOMPRESS_E\000"
 24863      4D505245 
 24863      53535F45 
 24863      00
 24864              	.LASF353:
 24865 1b94 41534E5F 		.ascii	"ASN_PARSE_E\000"
 24865      50415253 
 24865      455F4500 
 24866              	.LASF578:
 24867 1ba0 6E656564 		.ascii	"needDir\000"
 24867      44697200 
 24868              	.LASF419:
 24869 1ba8 5352505F 		.ascii	"SRP_CALL_ORDER_E\000"
 24869      43414C4C 
 24869      5F4F5244 
 24869      45525F45 
 24869      00
 24870              	.LASF1:
 24871 1bb9 62797465 		.ascii	"byte\000"
 24871      00
 24872              	.LASF539:
 24873 1bbe 53657441 		.ascii	"SetAlgoID\000"
 24873      6C676F49 
 24873      4400
 24874              	.LASF228:
 24875 1bc8 42415349 		.ascii	"BASIC_CA_OID\000"
 24875      435F4341 
 24875      5F4F4944 
 24875      00
 24876              	.LASF390:
 24877 1bd5 41534E5F 		.ascii	"ASN_NO_SIGNER_E\000"
 24877      4E4F5F53 
 24877      49474E45 
 24877      525F4500 
 24878              	.LASF28:
 24879 1be5 44594E41 		.ascii	"DYNAMIC_TYPE_METHOD\000"
 24879      4D49435F 
 24879      54595045 
 24879      5F4D4554 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 647


 24879      484F4400 
 24880              	.LASF433:
 24881 1bf9 48415348 		.ascii	"HASH_TYPE_E\000"
 24881      5F545950 
 24881      455F4500 
 24882              	.LASF260:
 24883 1c05 7075624B 		.ascii	"pubKeyStored\000"
 24883      65795374 
 24883      6F726564 
 24883      00
 24884              	.LASF662:
 24885 1c12 433A5C55 		.ascii	"C:\\Users\\ddemidov\\Documents\\PSoC Creator\\BLE_F"
 24885      73657273 
 24885      5C646465 
 24885      6D69646F 
 24885      765C446F 
 24886 1c40 696E644D 		.ascii	"indMe01\\SenseAbility.cydsn\000"
 24886      6530315C 
 24886      53656E73 
 24886      65416269 
 24886      6C697479 
 24887              	.LASF12:
 24888 1c5b 73686F72 		.ascii	"short int\000"
 24888      7420696E 
 24888      7400
 24889              	.LASF125:
 24890 1c65 41534E5F 		.ascii	"ASN_BIT_STRING\000"
 24890      4249545F 
 24890      53545249 
 24890      4E4700
 24891              	.LASF274:
 24892 1c74 7375626A 		.ascii	"subjectCN\000"
 24892      65637443 
 24892      4E00
 24893              	.LASF452:
 24894 1c7e 62756653 		.ascii	"bufSz\000"
 24894      7A00
 24895              	.LASF498:
 24896 1c84 47657449 		.ascii	"GetInt\000"
 24896      6E7400
 24897              	.LASF224:
 24898 1c8b 45434453 		.ascii	"ECDSAk\000"
 24898      416B00
 24899              	.LASF240:
 24900 1c92 43505F41 		.ascii	"CP_ANY_OID\000"
 24900      4E595F4F 
 24900      494400
 24901              	.LASF137:
 24902 1c9d 41534E5F 		.ascii	"ASN_DIR_TYPE\000"
 24902      4449525F 
 24902      54595045 
 24902      00
 24903              	.LASF549:
 24904 1caa 53657444 		.ascii	"SetDigest\000"
 24904      69676573 
 24904      7400
 24905              	.LASF339:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 648


 24906 1cb4 4D505F49 		.ascii	"MP_INVMOD_E\000"
 24906      4E564D4F 
 24906      445F4500 
 24907              	.LASF655:
 24908 1cc0 676D7469 		.ascii	"gmtime\000"
 24908      6D6500
 24909              	.LASF508:
 24910 1cc7 496E6974 		.ascii	"InitDecodedCert\000"
 24910      4465636F 
 24910      64656443 
 24910      65727400 
 24911              	.LASF661:
 24912 1cd7 2E2E5C61 		.ascii	"..\\acn-sdk-c\\src\\wolfSSL\\wolfcrypt\\src\\asn.c\000"
 24912      636E2D73 
 24912      646B2D63 
 24912      5C737263 
 24912      5C776F6C 
 24913              	.LASF340:
 24914 1d04 4D505F43 		.ascii	"MP_CMP_E\000"
 24914      4D505F45 
 24914      00
 24915              	.LASF504:
 24916 1d0d 63686563 		.ascii	"checkOidSz\000"
 24916      6B4F6964 
 24916      537A00
 24917              	.LASF295:
 24918 1d18 65787453 		.ascii	"extSubjKeyIdSet\000"
 24918      75626A4B 
 24918      65794964 
 24918      53657400 
 24919              	.LASF561:
 24920 1d28 4465636F 		.ascii	"DecodeCrlDist\000"
 24920      64654372 
 24920      6C446973 
 24920      7400
 24921              	.LASF556:
 24922 1d36 77635F47 		.ascii	"wc_GetCTC_HashOID\000"
 24922      65744354 
 24922      435F4861 
 24922      73684F49 
 24922      4400
 24923              	.LASF20:
 24924 1d48 44594E41 		.ascii	"DYNAMIC_TYPE_KEY\000"
 24924      4D49435F 
 24924      54595045 
 24924      5F4B4559 
 24924      00
 24925              	.LASF270:
 24926 1d59 6578636C 		.ascii	"excludedNames\000"
 24926      75646564 
 24926      4E616D65 
 24926      7300
 24927              	.LASF97:
 24928 1d67 5055424C 		.ascii	"PUBLICKEY_TYPE\000"
 24928      49434B45 
 24928      595F5459 
 24928      504500
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 649


 24929              	.LASF122:
 24930 1d76 41534E5F 		.ascii	"ASN_Tags\000"
 24930      54616773 
 24930      00
 24931              	.LASF119:
 24932 1d7f 45585445 		.ascii	"EXTERNAL_SERIAL_SIZE\000"
 24932      524E414C 
 24932      5F534552 
 24932      49414C5F 
 24932      53495A45 
 24933              	.LASF247:
 24934 1d94 454B555F 		.ascii	"EKU_ANY_OID\000"
 24934      414E595F 
 24934      4F494400 
 24935              	.LASF231:
 24936 1da0 41555448 		.ascii	"AUTH_INFO_OID\000"
 24936      5F494E46 
 24936      4F5F4F49 
 24936      4400
 24937              	.LASF430:
 24938 1dae 5349475F 		.ascii	"SIG_VERIFY_E\000"
 24938      56455249 
 24938      46595F45 
 24938      00
 24939              	.LASF203:
 24940 1dbb 63657274 		.ascii	"certExtType\000"
 24940      45787454 
 24940      79706500 
 24941              	.LASF616:
 24942 1dc7 65787443 		.ascii	"extCertPolicyAnyOid\000"
 24942      65727450 
 24942      6F6C6963 
 24942      79416E79 
 24942      4F696400 
 24943              	.LASF511:
 24944 1ddb 6E616D65 		.ascii	"names\000"
 24944      7300
 24945              	.LASF273:
 24946 1de1 7369676E 		.ascii	"signature\000"
 24946      61747572 
 24946      6500
 24947              	.LASF513:
 24948 1deb 56616C69 		.ascii	"ValidateDate\000"
 24948      64617465 
 24948      44617465 
 24948      00
 24949              	.LASF577:
 24950 1df8 6D617463 		.ascii	"matchEmail\000"
 24950      68456D61 
 24950      696C00
 24951              	.LASF61:
 24952 1e03 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP\000"
 24952      4D49435F 
 24952      54595045 
 24952      5F4F4353 
 24952      5000
 24953              	.LASF330:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 650


 24954 1e15 4D505F49 		.ascii	"MP_INIT_E\000"
 24954      4E49545F 
 24954      4500
 24955              	.LASF411:
 24956 1e1f 44524247 		.ascii	"DRBG_CONT_FIPS_E\000"
 24956      5F434F4E 
 24956      545F4649 
 24956      50535F45 
 24956      00
 24957              	.LASF370:
 24958 1e30 41534E5F 		.ascii	"ASN_SIG_KEY_E\000"
 24958      5349475F 
 24958      4B45595F 
 24958      4500
 24959              	.LASF63:
 24960 1e3e 44594E41 		.ascii	"DYNAMIC_TYPE_HASHES\000"
 24960      4D49435F 
 24960      54595045 
 24960      5F484153 
 24960      48455300 
 24961              	.LASF64:
 24962 1e52 44594E41 		.ascii	"DYNAMIC_TYPE_SRP\000"
 24962      4D49435F 
 24962      54595045 
 24962      5F535250 
 24962      00
 24963              	.LASF38:
 24964 1e63 44594E41 		.ascii	"DYNAMIC_TYPE_DSA\000"
 24964      4D49435F 
 24964      54595045 
 24964      5F445341 
 24964      00
 24965              	.LASF98:
 24966 1e74 5253415F 		.ascii	"RSA_PUBLICKEY_TYPE\000"
 24966      5055424C 
 24966      49434B45 
 24966      595F5459 
 24966      504500
 24967              	.LASF245:
 24968 1e87 4149415F 		.ascii	"AIA_CA_ISSUER_OID\000"
 24968      43415F49 
 24968      53535545 
 24968      525F4F49 
 24968      4400
 24969              	.LASF346:
 24970 1e99 414C474F 		.ascii	"ALGO_ID_E\000"
 24970      5F49445F 
 24970      4500
 24971              	.LASF58:
 24972 1ea3 44594E41 		.ascii	"DYNAMIC_TYPE_CAVIUM_RSA\000"
 24972      4D49435F 
 24972      54595045 
 24972      5F434156 
 24972      49554D5F 
 24973              	.LASF309:
 24974 1ebb 7375626A 		.ascii	"subjectRaw\000"
 24974      65637452 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 651


 24974      617700
 24975              	.LASF118:
 24976 1ec6 5355424A 		.ascii	"SUBJECT\000"
 24976      45435400 
 24977              	.LASF187:
 24978 1ece 4D41585F 		.ascii	"MAX_CA_SZ\000"
 24978      43415F53 
 24978      5A00
 24979              	.LASF641:
 24980 1ed8 454E445F 		.ascii	"END_DSA_PRIV\000"
 24980      4453415F 
 24980      50524956 
 24980      00
 24981              	.LASF292:
 24982 1ee5 65787443 		.ascii	"extCrlInfo\000"
 24982      726C496E 
 24982      666F00
 24983              	.LASF451:
 24984 1ef0 436F6E66 		.ascii	"ConfirmSignature\000"
 24984      69726D53 
 24984      69676E61 
 24984      74757265 
 24984      00
 24985              	.LASF594:
 24986 1f01 4765744E 		.ascii	"GetNameHash\000"
 24986      616D6548 
 24986      61736800 
 24987              	.LASF610:
 24988 1f0d 6578744B 		.ascii	"extKeyUsageOid\000"
 24988      65795573 
 24988      6167654F 
 24988      696400
 24989              	.LASF379:
 24990 1f1c 554E4943 		.ascii	"UNICODE_SIZE_E\000"
 24990      4F44455F 
 24990      53495A45 
 24990      5F4500
 24991              	.LASF321:
 24992 1f2b 4D41585F 		.ascii	"MAX_DIGEST_SIZE\000"
 24992      44494745 
 24992      53545F53 
 24992      495A4500 
 24993              	.LASF43:
 24994 1f3b 44594E41 		.ascii	"DYNAMIC_TYPE_CRL_MONITOR\000"
 24994      4D49435F 
 24994      54595045 
 24994      5F43524C 
 24994      5F4D4F4E 
 24995              	.LASF126:
 24996 1f54 41534E5F 		.ascii	"ASN_OCTET_STRING\000"
 24996      4F435445 
 24996      545F5354 
 24996      52494E47 
 24996      00
 24997              	.LASF34:
 24998 1f65 44594E41 		.ascii	"DYNAMIC_TYPE_SSL\000"
 24998      4D49435F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 652


 24998      54595045 
 24998      5F53534C 
 24998      00
 24999              	.LASF267:
 25000 1f76 616C744E 		.ascii	"altNames\000"
 25000      616D6573 
 25000      00
 25001              	.LASF65:
 25002 1f7f 44594E41 		.ascii	"DYNAMIC_TYPE_COOKIE_PWD\000"
 25002      4D49435F 
 25002      54595045 
 25002      5F434F4F 
 25002      4B49455F 
 25003              	.LASF515:
 25004 1f97 64617465 		.ascii	"dateType\000"
 25004      54797065 
 25004      00
 25005              	.LASF479:
 25006 1fa0 4F696446 		.ascii	"OidFromId\000"
 25006      726F6D49 
 25006      6400
 25007              	.LASF400:
 25008 1faa 41534E5F 		.ascii	"ASN_NAME_INVALID_E\000"
 25008      4E414D45 
 25008      5F494E56 
 25008      414C4944 
 25008      5F4500
 25009              	.LASF560:
 25010 1fbd 626F6F6C 		.ascii	"boolLength\000"
 25010      4C656E67 
 25010      746800
 25011              	.LASF466:
 25012 1fc8 7365714C 		.ascii	"seqLength\000"
 25012      656E6774 
 25012      6800
 25013              	.LASF132:
 25014 1fd2 41534E5F 		.ascii	"ASN_SET\000"
 25014      53455400 
 25015              	.LASF387:
 25016 1fda 4445434F 		.ascii	"DECOMPRESS_INIT_E\000"
 25016      4D505245 
 25016      53535F49 
 25016      4E49545F 
 25016      4500
 25017              	.LASF524:
 25018 1fec 47657444 		.ascii	"GetDate\000"
 25018      61746500 
 25019              	.LASF189:
 25020 1ff4 4D41585F 		.ascii	"MAX_DER_DIGEST_SZ\000"
 25020      4445525F 
 25020      44494745 
 25020      53545F53 
 25020      5A00
 25021              	.LASF326:
 25022 2006 57494E43 		.ascii	"WINCRYPT_E\000"
 25022      52595054 
 25022      5F4500
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 653


 25023              	.LASF59:
 25024 2011 44594E41 		.ascii	"DYNAMIC_TYPE_X509\000"
 25024      4D49435F 
 25024      54595045 
 25024      5F583530 
 25024      3900
 25025              	.LASF84:
 25026 2023 5348415F 		.ascii	"SHA_DIGEST_SIZE\000"
 25026      44494745 
 25026      53545F53 
 25026      495A4500 
 25027              	.LASF141:
 25028 2033 41534E5F 		.ascii	"ASN_LONG_LENGTH\000"
 25028      4C4F4E47 
 25028      5F4C454E 
 25028      47544800 
 25029              	.LASF441:
 25030 2043 746D5F79 		.ascii	"tm_year\000"
 25030      65617200 
 25031              	.LASF540:
 25032 204b 616C676F 		.ascii	"algoOID\000"
 25032      4F494400 
 25033              	.LASF3:
 25034 2053 73686F72 		.ascii	"short unsigned int\000"
 25034      7420756E 
 25034      7369676E 
 25034      65642069 
 25034      6E7400
 25035              	.LASF259:
 25036 2066 7075624B 		.ascii	"pubKeySize\000"
 25036      65795369 
 25036      7A6500
 25037              	.LASF386:
 25038 2071 434F4D50 		.ascii	"COMPRESS_E\000"
 25038      52455353 
 25038      5F4500
 25039              	.LASF8:
 25040 207c 574F4C46 		.ascii	"WOLFSSL_BIT_SIZE\000"
 25040      53534C5F 
 25040      4249545F 
 25040      53495A45 
 25040      00
 25041              	.LASF447:
 25042 208d 62617365 		.ascii	"base\000"
 25042      00
 25043              	.LASF547:
 25044 2092 49445F4C 		.ascii	"ID_Length\000"
 25044      656E6774 
 25044      6800
 25045              	.LASF408:
 25046 209c 484D4143 		.ascii	"HMAC_KAT_FIPS_E\000"
 25046      5F4B4154 
 25046      5F464950 
 25046      535F4500 
 25047              	.LASF209:
 25048 20ac 69676E6F 		.ascii	"ignoreType\000"
 25048      72655479 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 654


 25048      706500
 25049              	.LASF500:
 25050 20b7 6F696454 		.ascii	"oidType\000"
 25050      79706500 
 25051              	.LASF519:
 25052 20bf 746D7054 		.ascii	"tmpTime\000"
 25052      696D6500 
 25053              	.LASF233:
 25054 20c7 5355424A 		.ascii	"SUBJ_KEY_OID\000"
 25054      5F4B4559 
 25054      5F4F4944 
 25054      00
 25055              	.LASF164:
 25056 20d4 41534E5F 		.ascii	"ASN_ECC_HEADER_SZ\000"
 25056      4543435F 
 25056      48454144 
 25056      45525F53 
 25056      5A00
 25057              	.LASF355:
 25058 20e6 41534E5F 		.ascii	"ASN_GETINT_E\000"
 25058      47455449 
 25058      4E545F45 
 25058      00
 25059              	.LASF457:
 25060 20f3 64696765 		.ascii	"digestSz\000"
 25060      7374537A 
 25060      00
 25061              	.LASF456:
 25062 20fc 74797065 		.ascii	"typeH\000"
 25062      4800
 25063              	.LASF544:
 25064 2102 73657153 		.ascii	"seqSz\000"
 25064      7A00
 25065              	.LASF530:
 25066 2108 47657456 		.ascii	"GetValidity\000"
 25066      616C6964 
 25066      69747900 
 25067              	.LASF398:
 25068 2114 504B4353 		.ascii	"PKCS7_RECIP_E\000"
 25068      375F5245 
 25068      4349505F 
 25068      4500
 25069              	.LASF263:
 25070 2122 7369674C 		.ascii	"sigLength\000"
 25070      656E6774 
 25070      6800
 25071              	.LASF372:
 25072 212c 41534E5F 		.ascii	"ASN_NTRU_KEY_E\000"
 25072      4E545255 
 25072      5F4B4559 
 25072      5F4500
 25073              	.LASF271:
 25074 213b 7375626A 		.ascii	"subjectHash\000"
 25074      65637448 
 25074      61736800 
 25075              	.LASF272:
 25076 2147 69737375 		.ascii	"issuerHash\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 655


 25076      65724861 
 25076      736800
 25077              	.LASF490:
 25078 2152 68617368 		.ascii	"hash\000"
 25078      00
 25079              	.LASF574:
 25080 2157 6E656564 		.ascii	"needDns\000"
 25080      446E7300 
 25081              	.LASF241:
 25082 215f 53657048 		.ascii	"SepHardwareName_Sum\000"
 25082      61726477 
 25082      6172654E 
 25082      616D655F 
 25082      53756D00 
 25083              	.LASF147:
 25084 2173 41534E5F 		.ascii	"ASN_SUR_NAME\000"
 25084      5355525F 
 25084      4E414D45 
 25084      00
 25085              	.LASF375:
 25086 2180 41534E5F 		.ascii	"ASN_ECC_KEY_E\000"
 25086      4543435F 
 25086      4B45595F 
 25086      4500
 25087              	.LASF252:
 25088 218e 6E657874 		.ascii	"next\000"
 25088      00
 25089              	.LASF618:
 25090 2193 65787445 		.ascii	"extExtKeyUsageAnyOid\000"
 25090      78744B65 
 25090      79557361 
 25090      6765416E 
 25090      794F6964 
 25091              	.LASF605:
 25092 21a8 65787443 		.ascii	"extCrlDistOid\000"
 25092      726C4469 
 25092      73744F69 
 25092      6400
 25093              	.LASF477:
 25094 21b6 64617465 		.ascii	"date\000"
 25094      00
 25095              	.LASF188:
 25096 21bb 4D41585F 		.ascii	"MAX_SN_SZ\000"
 25096      534E5F53 
 25096      5A00
 25097              	.LASF143:
 25098 21c5 41534E5F 		.ascii	"ASN_CONSTRUCTED\000"
 25098      434F4E53 
 25098      54525543 
 25098      54454400 
 25099              	.LASF214:
 25100 21d5 53484132 		.ascii	"SHA256h\000"
 25100      35366800 
 25101              	.LASF133:
 25102 21dd 41534E5F 		.ascii	"ASN_UTC_TIME\000"
 25102      5554435F 
 25102      54494D45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\ccPZV1ly.s 			page 656


 25102      00
 25103              	.LASF226:
 25104 21ea 50424B44 		.ascii	"PBKDF2_OID\000"
 25104      46325F4F 
 25104      494400
 25105              	.LASF167:
 25106 21f5 5253415F 		.ascii	"RSA_INTS\000"
 25106      494E5453 
 25106      00
 25107              	.LASF571:
 25108 21fe 47657453 		.ascii	"GetSignature\000"
 25108      69676E61 
 25108      74757265 
 25108      00
 25109              	.LASF325:
 25110 220b 52454144 		.ascii	"READ_RAN_E\000"
 25110      5F52414E 
 25110      5F4500
 25111              	.LASF423:
 25112 2216 41534E5F 		.ascii	"ASN_NO_AKID\000"
 25112      4E4F5F41 
 25112      4B494400 
 25113              	.LASF302:
 25114 2222 6578744B 		.ascii	"extKeyUsage\000"
 25114      65795573 
 25114      61676500 
 25115              	.LASF416:
 25116 222e 49535F50 		.ascii	"IS_POINT_E\000"
 25116      4F494E54 
 25116      5F4500
 25117              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
