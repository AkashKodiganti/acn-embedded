ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"tls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_uidiv
  18              		.global	__aeabi_uidivmod
  19              		.section	.text.PRF,"ax",%progbits
  20              		.align	1
  21              		.code	16
  22              		.thumb_func
  23              		.type	PRF, %function
  24              	PRF:
  25              	.LFB14:
  26              		.file 1 "..\\acn-sdk-c\\src\\wolfSSL\\src\\tls.c"
   1:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* tls.c
   2:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
   3:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Copyright (C) 2006-2016 wolfSSL Inc.
   4:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
   5:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * This file is part of wolfSSL.
   6:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
   7:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * wolfSSL is free software; you can redistribute it and/or modify
   8:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * it under the terms of the GNU General Public License as published by
   9:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * (at your option) any later version.
  11:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
  12:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * wolfSSL is distributed in the hope that it will be useful,
  13:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * GNU General Public License for more details.
  16:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
  17:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * You should have received a copy of the GNU General Public License
  18:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * along with this program; if not, write to the Free Software
  19:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA
  20:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
  21:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  22:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  23:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  24:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_CONFIG_H
  25:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #include <config.h>
  26:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
  27:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  28:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #include <wolfssl/wolfcrypt/settings.h>
  29:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  30:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef WOLFCRYPT_ONLY
  31:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 2


  32:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #include <wolfssl/ssl.h>
  33:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #include <wolfssl/internal.h>
  34:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #include <wolfssl/error-ssl.h>
  35:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #include <wolfssl/wolfcrypt/hmac.h>
  36:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef NO_INLINE
  37:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #include <wolfssl/wolfcrypt/misc.h>
  38:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
  39:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #include <wolfcrypt/src/misc.c>
  40:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
  41:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  42:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_NTRU
  43:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #include "libntruencrypt/ntru_crypto.h"
  44:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #include <wolfssl/wolfcrypt/random.h>
  45:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
  46:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_QSH
  47:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     static int TLSX_AddQSHKey(QSHKey** list, QSHKey* key);
  48:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     static byte* TLSX_QSHKeyFind_Pub(QSHKey* qsh, word16* pubLen, word16 name);
  49:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     static int TLSX_CreateNtruKey(WOLFSSL* ssl, int type);
  50:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
  51:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  52:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  53:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_TLS
  54:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  55:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  56:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef WOLFSSL_HAVE_MIN
  57:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define WOLFSSL_HAVE_MIN
  58:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  59:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     static INLINE word32 min(word32 a, word32 b)
  60:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     {
  61:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return a > b ? b : a;
  62:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
  63:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  64:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* WOLFSSL_HAVE_MIN */
  65:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  66:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  67:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SHA384
  68:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #define P_HASH_MAX_SIZE SHA384_DIGEST_SIZE
  69:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
  70:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #define P_HASH_MAX_SIZE SHA256_DIGEST_SIZE
  71:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
  72:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  73:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* compute p_hash for MD5, SHA-1, SHA-256, or SHA-384 for TLSv1 PRF */
  74:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int p_hash(byte* result, word32 resLen, const byte* secret,
  75:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    word32 secLen, const byte* seed, word32 seedLen, int hash)
  76:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
  77:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 len = P_HASH_MAX_SIZE;
  78:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 times;
  79:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 lastLen;
  80:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 lastTime;
  81:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 i;
  82:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 idx = 0;
  83:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int    ret = 0;
  84:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
  85:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte*  previous;
  86:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte*  current;
  87:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     Hmac*  hmac;
  88:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 3


  89:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte   previous[P_HASH_MAX_SIZE];  /* max size */
  90:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte   current[P_HASH_MAX_SIZE];   /* max size */
  91:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     Hmac   hmac[1];
  92:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
  93:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  94:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
  95:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     previous = (byte*)XMALLOC(P_HASH_MAX_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
  96:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     current  = (byte*)XMALLOC(P_HASH_MAX_SIZE, NULL, DYNAMIC_TYPE_TMP_BUFFER);
  97:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     hmac     = (Hmac*)XMALLOC(sizeof(Hmac),    NULL, DYNAMIC_TYPE_TMP_BUFFER);
  98:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
  99:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (previous == NULL || current == NULL || hmac == NULL) {
 100:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (previous) XFREE(previous, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 101:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (current)  XFREE(current,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
 102:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (hmac)     XFREE(hmac,     NULL, DYNAMIC_TYPE_TMP_BUFFER);
 103:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 104:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
 105:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 106:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 107:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 108:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (hash) {
 109:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_MD5
 110:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case md5_mac:
 111:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 hash = MD5;
 112:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 len  = MD5_DIGEST_SIZE;
 113:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
 114:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 115:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 116:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_SHA256
 117:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case sha256_mac:
 118:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 hash = SHA256;
 119:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 len  = SHA256_DIGEST_SIZE;
 120:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
 121:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 122:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 123:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifdef WOLFSSL_SHA384
 124:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case sha384_mac:
 125:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 hash = SHA384;
 126:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 len  = SHA384_DIGEST_SIZE;
 127:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
 128:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 129:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 130:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_SHA
 131:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case sha_mac:
 132:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             default:
 133:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 hash = SHA;
 134:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 len  = SHA_DIGEST_SIZE;
 135:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
 136:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 137:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 138:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 139:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     times   = resLen / len;
 140:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     lastLen = resLen % len;
 141:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 142:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (lastLen)
 143:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         times += 1;
 144:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 145:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     lastTime = times - 1;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 4


 146:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 147:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = wc_HmacSetKey(hmac, hash, secret, secLen)) == 0) {
 148:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((ret = wc_HmacUpdate(hmac, seed, seedLen)) == 0) { /* A0 = seed */
 149:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if ((ret = wc_HmacFinal(hmac, previous)) == 0) {   /* A1 */
 150:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 for (i = 0; i < times; i++) {
 151:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = wc_HmacUpdate(hmac, previous, len);
 152:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ret != 0)
 153:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         break;
 154:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = wc_HmacUpdate(hmac, seed, seedLen);
 155:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ret != 0)
 156:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         break;
 157:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = wc_HmacFinal(hmac, current);
 158:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ret != 0)
 159:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         break;
 160:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 161:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if ((i == lastTime) && lastLen)
 162:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         XMEMCPY(&result[idx], current,
 163:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  min(lastLen, P_HASH_MAX_SIZE));
 164:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     else {
 165:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         XMEMCPY(&result[idx], current, len);
 166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         idx += len;
 167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         ret = wc_HmacUpdate(hmac, previous, len);
 168:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (ret != 0)
 169:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             break;
 170:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         ret = wc_HmacFinal(hmac, previous);
 171:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (ret != 0)
 172:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             break;
 173:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
 174:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
 175:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
 176:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 177:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 178:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 179:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ForceZero(previous,  P_HASH_MAX_SIZE);
 180:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ForceZero(current,   P_HASH_MAX_SIZE);
 181:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ForceZero(hmac,      sizeof(Hmac));
 182:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 183:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 184:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(previous, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 185:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(current,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
 186:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(hmac,     NULL, DYNAMIC_TYPE_TMP_BUFFER);
 187:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 188:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 189:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
 190:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 191:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 192:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #undef P_HASH_MAX_SIZE
 193:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 194:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 195:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_OLD_TLS
 196:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 197:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* calculate XOR for TLSv1 PRF */
 198:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE void get_xor(byte *digest, word32 digLen, byte* md5, byte* sha)
 199:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 200:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 i;
 201:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 202:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (i = 0; i < digLen; i++)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 5


 203:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         digest[i] = md5[i] ^ sha[i];
 204:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 205:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 206:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 207:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* compute TLSv1 PRF (pseudo random function using HMAC) */
 208:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int doPRF(byte* digest, word32 digLen, const byte* secret,word32 secLen,
 209:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                  const byte* label, word32 labLen, const byte* seed,
 210:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                  word32 seedLen)
 211:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 212:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int    ret  = 0;
 213:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 half = (secLen + 1) / 2;
 214:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 215:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 216:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* md5_half;
 217:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* sha_half;
 218:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* labelSeed;
 219:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* md5_result;
 220:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* sha_result;
 221:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
 222:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  md5_half[MAX_PRF_HALF];     /* half is real size */
 223:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  sha_half[MAX_PRF_HALF];     /* half is real size */
 224:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  labelSeed[MAX_PRF_LABSEED]; /* labLen + seedLen is real size */
 225:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  md5_result[MAX_PRF_DIG];    /* digLen is real size */
 226:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  sha_result[MAX_PRF_DIG];    /* digLen is real size */
 227:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 228:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 229:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (half > MAX_PRF_HALF)
 230:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_E;
 231:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (labLen + seedLen > MAX_PRF_LABSEED)
 232:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_E;
 233:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (digLen > MAX_PRF_DIG)
 234:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_E;
 235:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 236:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 237:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     md5_half   = (byte*)XMALLOC(MAX_PRF_HALF,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
 238:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     sha_half   = (byte*)XMALLOC(MAX_PRF_HALF,    NULL, DYNAMIC_TYPE_TMP_BUFFER);
 239:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     labelSeed  = (byte*)XMALLOC(MAX_PRF_LABSEED, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 240:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     md5_result = (byte*)XMALLOC(MAX_PRF_DIG,     NULL, DYNAMIC_TYPE_TMP_BUFFER);
 241:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     sha_result = (byte*)XMALLOC(MAX_PRF_DIG,     NULL, DYNAMIC_TYPE_TMP_BUFFER);
 242:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 243:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (md5_half == NULL || sha_half == NULL || labelSeed == NULL ||
 244:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                      md5_result == NULL || sha_result == NULL) {
 245:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (md5_half)   XFREE(md5_half,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
 246:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (sha_half)   XFREE(sha_half,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
 247:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (labelSeed)  XFREE(labelSeed,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
 248:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (md5_result) XFREE(md5_result, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 249:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (sha_result) XFREE(sha_result, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 250:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 251:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
 252:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 253:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 254:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 255:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMSET(md5_result, 0, digLen);
 256:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMSET(sha_result, 0, digLen);
 257:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 258:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(md5_half, secret, half);
 259:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(sha_half, secret + half - secLen % 2, half);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 6


 260:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 261:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(labelSeed, label, labLen);
 262:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(labelSeed + labLen, seed, seedLen);
 263:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 264:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = p_hash(md5_result, digLen, md5_half, half, labelSeed,
 265:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                              labLen + seedLen, md5_mac)) == 0) {
 266:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((ret = p_hash(sha_result, digLen, sha_half, half, labelSeed,
 267:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                              labLen + seedLen, sha_mac)) == 0) {
 268:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             get_xor(digest, digLen, md5_result, sha_result);
 269:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 270:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 271:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 272:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 273:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(md5_half,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
 274:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(sha_half,   NULL, DYNAMIC_TYPE_TMP_BUFFER);
 275:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(labelSeed,  NULL, DYNAMIC_TYPE_TMP_BUFFER);
 276:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(md5_result, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 277:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(sha_result, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 278:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 279:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 280:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
 281:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 282:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 283:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 284:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 285:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 286:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Wrapper to call straight thru to p_hash in TSL 1.2 cases to remove stack
 287:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    use */
 288:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int PRF(byte* digest, word32 digLen, const byte* secret, word32 secLen,
 289:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             const byte* label, word32 labLen, const byte* seed, word32 seedLen,
 290:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             int useAtLeastSha256, int hash_type)
 291:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
  27              		.loc 1 291 0
  28              		.cfi_startproc
  29              	.LVL0:
  30 0000 8446     		mov	ip, r0
 292:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
  31              		.loc 1 292 0
  32 0002 0020     		mov	r0, #0
  33              	.LVL1:
 291:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
  34              		.loc 1 291 0
  35 0004 F0B5     		push	{r4, r5, r6, r7, lr}
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0006 F9B0     		sub	sp, sp, #484
  43              		.cfi_def_cfa_offset 504
 293:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 294:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (useAtLeastSha256) {
  44              		.loc 1 294 0
  45 0008 829D     		ldr	r5, [sp, #520]
 291:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
  46              		.loc 1 291 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 7


  47 000a 7F9C     		ldr	r4, [sp, #508]
  48 000c 839F     		ldr	r7, [sp, #524]
  49              		.loc 1 294 0
  50 000e 8542     		cmp	r5, r0
  51 0010 00D1     		bne	.LCB33
  52 0012 A4E0     		b	.L2	@long jump
  53              	.LCB33:
  54              	.LBB21:
 295:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 296:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte* labelSeed;
 297:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
 298:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte labelSeed[MAX_PRF_LABSEED]; /* labLen + seedLen is real size */
 299:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 300:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 301:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (labLen + seedLen > MAX_PRF_LABSEED)
  55              		.loc 1 301 0
  56 0014 8198     		ldr	r0, [sp, #516]
  57 0016 2018     		add	r0, r4, r0
  58 0018 0190     		str	r0, [sp, #4]
  59 001a 8028     		cmp	r0, #128
  60 001c 02D9     		bls	.L3
 302:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_E;
  61              		.loc 1 302 0
  62 001e 8420     		mov	r0, #132
  63 0020 4042     		neg	r0, r0
  64 0022 9CE0     		b	.L2
  65              	.L3:
  66 0024 0293     		str	r3, [sp, #8]
  67 0026 6346     		mov	r3, ip
  68              	.LVL2:
  69 0028 161C     		mov	r6, r2
  70 002a 0D1C     		mov	r5, r1
 303:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 304:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 305:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         labelSeed = (byte*)XMALLOC(MAX_PRF_LABSEED, NULL,
 306:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                        DYNAMIC_TYPE_TMP_BUFFER);
 307:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (labelSeed == NULL)
 308:..\acn-sdk-c\src\wolfSSL\src/tls.c ****            return MEMORY_E;
 309:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 310:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 311:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(labelSeed, label, labLen);
  71              		.loc 1 311 0
  72 002c 221C     		mov	r2, r4
  73              	.LVL3:
  74 002e 7E99     		ldr	r1, [sp, #504]
  75              	.LVL4:
  76 0030 14A8     		add	r0, sp, #80
  77 0032 0393     		str	r3, [sp, #12]
  78 0034 FFF7FEFF 		bl	memcpy
  79              	.LVL5:
 312:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(labelSeed + labLen, seed, seedLen);
  80              		.loc 1 312 0
  81 0038 14AB     		add	r3, sp, #80
  82 003a 1819     		add	r0, r3, r4
  83 003c 8099     		ldr	r1, [sp, #512]
  84 003e 819A     		ldr	r2, [sp, #516]
  85 0040 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 8


  86              	.LVL6:
 313:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 314:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* If a cipher suite wants an algorithm better than sha256, it
 315:..\acn-sdk-c\src\wolfSSL\src/tls.c ****          * should use better. */
 316:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (hash_type < sha256_mac || hash_type == blake2b_mac)
  87              		.loc 1 316 0
  88 0044 032F     		cmp	r7, #3
  89 0046 06DD     		ble	.L22
  90              		.loc 1 316 0 is_stmt 0 discriminator 1
  91 0048 082F     		cmp	r7, #8
  92 004a 04D0     		beq	.L22
  93              	.LVL7:
  94              	.LBB22:
  95              	.LBB23:
 108:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_MD5
  96              		.loc 1 108 0 is_stmt 1
  97 004c 042F     		cmp	r7, #4
  98 004e 02D0     		beq	.L22
 134:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
  99              		.loc 1 134 0
 100 0050 1427     		mov	r7, #20
 101              	.LVL8:
 133:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 len  = SHA_DIGEST_SIZE;
 102              		.loc 1 133 0
 103 0052 0124     		mov	r4, #1
 104 0054 01E0     		b	.L4
 105              	.LVL9:
 106              	.L22:
 119:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
 107              		.loc 1 119 0
 108 0056 2027     		mov	r7, #32
 118:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 len  = SHA256_DIGEST_SIZE;
 109              		.loc 1 118 0
 110 0058 0224     		mov	r4, #2
 111              	.L4:
 112              	.LVL10:
 139:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     lastLen = resLen % len;
 113              		.loc 1 139 0
 114 005a 281C     		mov	r0, r5
 115 005c 391C     		mov	r1, r7
 116 005e FFF7FEFF 		bl	__aeabi_uidiv
 117              	.LVL11:
 140:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 118              		.loc 1 140 0
 119 0062 391C     		mov	r1, r7
 139:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     lastLen = resLen % len;
 120              		.loc 1 139 0
 121 0064 0090     		str	r0, [sp]
 122              	.LVL12:
 140:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 123              		.loc 1 140 0
 124 0066 281C     		mov	r0, r5
 125              	.LVL13:
 126 0068 FFF7FEFF 		bl	__aeabi_uidivmod
 127              	.LVL14:
 143:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 128              		.loc 1 143 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 9


 129 006c 0B1C     		mov	r3, r1
 130 006e 5A1E     		sub	r2, r3, #1
 131 0070 9341     		sbc	r3, r3, r2
 132 0072 009A     		ldr	r2, [sp]
 140:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 133              		.loc 1 140 0
 134 0074 0D1C     		mov	r5, r1
 135              	.LVL15:
 143:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 136              		.loc 1 143 0
 137 0076 D318     		add	r3, r2, r3
 138 0078 0093     		str	r3, [sp]
 139              	.LVL16:
 147:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((ret = wc_HmacUpdate(hmac, seed, seedLen)) == 0) { /* A0 = seed */
 140              		.loc 1 147 0
 141 007a 211C     		mov	r1, r4
 142              	.LVL17:
 143 007c 34A8     		add	r0, sp, #208
 144 007e 321C     		mov	r2, r6
 145 0080 029B     		ldr	r3, [sp, #8]
 146              	.LVL18:
 147 0082 FFF7FEFF 		bl	wc_HmacSetKey
 148              	.LVL19:
 149 0086 041E     		sub	r4, r0, #0
 150              	.LVL20:
 151 0088 4DD1     		bne	.L7
 148:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if ((ret = wc_HmacFinal(hmac, previous)) == 0) {   /* A1 */
 152              		.loc 1 148 0
 153 008a 34A8     		add	r0, sp, #208
 154              	.LVL21:
 155 008c 14A9     		add	r1, sp, #80
 156 008e 019A     		ldr	r2, [sp, #4]
 157 0090 FFF7FEFF 		bl	wc_HmacUpdate
 158              	.LVL22:
 159 0094 041E     		sub	r4, r0, #0
 160              	.LVL23:
 161 0096 46D1     		bne	.L7
 149:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 for (i = 0; i < times; i++) {
 162              		.loc 1 149 0
 163 0098 34A8     		add	r0, sp, #208
 164              	.LVL24:
 165 009a 04A9     		add	r1, sp, #16
 166 009c FFF7FEFF 		bl	wc_HmacFinal
 167              	.LVL25:
 168 00a0 041E     		sub	r4, r0, #0
 169              	.LVL26:
 170 00a2 40D1     		bne	.L7
 171 00a4 061C     		mov	r6, r0
 172              	.LVL27:
 173 00a6 0290     		str	r0, [sp, #8]
 174              	.LVL28:
 175              	.L8:
 150:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = wc_HmacUpdate(hmac, previous, len);
 176              		.loc 1 150 0
 177 00a8 009B     		ldr	r3, [sp]
 178 00aa 9E42     		cmp	r6, r3
 179 00ac 3BD0     		beq	.L7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 10


 151:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ret != 0)
 180              		.loc 1 151 0
 181 00ae 34A8     		add	r0, sp, #208
 182 00b0 04A9     		add	r1, sp, #16
 183 00b2 3A1C     		mov	r2, r7
 184 00b4 FFF7FEFF 		bl	wc_HmacUpdate
 185              	.LVL29:
 152:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         break;
 186              		.loc 1 152 0
 187 00b8 0028     		cmp	r0, #0
 188 00ba 33D1     		bne	.L28
 154:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ret != 0)
 189              		.loc 1 154 0
 190 00bc 34A8     		add	r0, sp, #208
 191              	.LVL30:
 192 00be 14A9     		add	r1, sp, #80
 193 00c0 019A     		ldr	r2, [sp, #4]
 194 00c2 FFF7FEFF 		bl	wc_HmacUpdate
 195              	.LVL31:
 155:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         break;
 196              		.loc 1 155 0
 197 00c6 0028     		cmp	r0, #0
 198 00c8 2CD1     		bne	.L28
 157:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ret != 0)
 199              		.loc 1 157 0
 200 00ca 34A8     		add	r0, sp, #208
 201              	.LVL32:
 202 00cc 0CA9     		add	r1, sp, #48
 203 00ce FFF7FEFF 		bl	wc_HmacFinal
 204              	.LVL33:
 158:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         break;
 205              		.loc 1 158 0
 206 00d2 0028     		cmp	r0, #0
 207 00d4 26D1     		bne	.L28
 145:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 208              		.loc 1 145 0
 209 00d6 009B     		ldr	r3, [sp]
 210 00d8 039A     		ldr	r2, [sp, #12]
 211 00da 0299     		ldr	r1, [sp, #8]
 212 00dc 013B     		sub	r3, r3, #1
 213 00de 5018     		add	r0, r2, r1
 214              	.LVL34:
 161:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         XMEMCPY(&result[idx], current,
 215              		.loc 1 161 0
 216 00e0 9E42     		cmp	r6, r3
 217 00e2 09D1     		bne	.L9
 218 00e4 002D     		cmp	r5, #0
 219 00e6 07D0     		beq	.L9
 220              	.LVL35:
 221              	.LBB24:
 222              	.LBB25:
  61:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 223              		.loc 1 61 0
 224 00e8 2A1E     		sub	r2, r5, #0
 225 00ea 202A     		cmp	r2, #32
 226 00ec 00D9     		bls	.L10
 227              	.LVL36:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 11


 228 00ee 2022     		mov	r2, #32
 229              	.LVL37:
 230              	.L10:
 231              	.LBE25:
 232              	.LBE24:
 162:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  min(lastLen, P_HASH_MAX_SIZE));
 233              		.loc 1 162 0
 234 00f0 0CA9     		add	r1, sp, #48
 235 00f2 FFF7FEFF 		bl	memcpy
 236              	.LVL38:
 237 00f6 13E0     		b	.L11
 238              	.LVL39:
 239              	.L9:
 165:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         idx += len;
 240              		.loc 1 165 0
 241 00f8 0CA9     		add	r1, sp, #48
 242 00fa 3A1C     		mov	r2, r7
 243 00fc FFF7FEFF 		bl	memcpy
 244              	.LVL40:
 166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         ret = wc_HmacUpdate(hmac, previous, len);
 245              		.loc 1 166 0
 246 0100 029B     		ldr	r3, [sp, #8]
 167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (ret != 0)
 247              		.loc 1 167 0
 248 0102 34A8     		add	r0, sp, #208
 166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         ret = wc_HmacUpdate(hmac, previous, len);
 249              		.loc 1 166 0
 250 0104 DB19     		add	r3, r3, r7
 167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (ret != 0)
 251              		.loc 1 167 0
 252 0106 04A9     		add	r1, sp, #16
 253 0108 3A1C     		mov	r2, r7
 166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         ret = wc_HmacUpdate(hmac, previous, len);
 254              		.loc 1 166 0
 255 010a 0293     		str	r3, [sp, #8]
 256              	.LVL41:
 167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (ret != 0)
 257              		.loc 1 167 0
 258 010c FFF7FEFF 		bl	wc_HmacUpdate
 259              	.LVL42:
 168:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             break;
 260              		.loc 1 168 0
 261 0110 0028     		cmp	r0, #0
 262 0112 07D1     		bne	.L28
 170:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (ret != 0)
 263              		.loc 1 170 0
 264 0114 34A8     		add	r0, sp, #208
 265              	.LVL43:
 266 0116 04A9     		add	r1, sp, #16
 267 0118 FFF7FEFF 		bl	wc_HmacFinal
 268              	.LVL44:
 171:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             break;
 269              		.loc 1 171 0
 270 011c 0028     		cmp	r0, #0
 271 011e 01D1     		bne	.L28
 272              	.LVL45:
 273              	.L11:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 12


 150:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = wc_HmacUpdate(hmac, previous, len);
 274              		.loc 1 150 0
 275 0120 0136     		add	r6, r6, #1
 276              	.LVL46:
 277 0122 C1E7     		b	.L8
 278              	.LVL47:
 279              	.L28:
 171:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             break;
 280              		.loc 1 171 0
 281 0124 041C     		mov	r4, r0
 282              	.LVL48:
 283              	.L7:
 284 0126 0023     		mov	r3, #0
 285              	.LVL49:
 286              	.L13:
 287 0128 04AA     		add	r2, sp, #16
 288              	.LVL50:
 289 012a 9918     		add	r1, r3, r2
 290              	.LVL51:
 291 012c 0133     		add	r3, r3, #1
 292              	.LVL52:
 293 012e 0022     		mov	r2, #0
 294              	.LVL53:
 295              	.LBB26:
 296              	.LBB27:
 297              		.file 2 "..\\acn-sdk-c\\src\\wolfSSL/wolfcrypt/src/misc.c"
   1:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** /* misc.c
   2:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
   3:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * Copyright (C) 2006-2016 wolfSSL Inc.
   4:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
   5:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * This file is part of wolfSSL.
   6:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
   7:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * wolfSSL is free software; you can redistribute it and/or modify
   8:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * it under the terms of the GNU General Public License as published by
   9:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * the Free Software Foundation; either version 2 of the License, or
  10:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * (at your option) any later version.
  11:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
  12:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * wolfSSL is distributed in the hope that it will be useful,
  13:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * GNU General Public License for more details.
  16:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  *
  17:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * You should have received a copy of the GNU General Public License
  18:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * along with this program; if not, write to the Free Software
  19:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA
  20:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  */
  21:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  22:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  23:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef HAVE_CONFIG_H
  24:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #include <config.h>
  25:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  26:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  27:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #include <wolfssl/wolfcrypt/settings.h>
  28:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  29:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifndef WOLF_CRYPT_MISC_C
  30:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #define WOLF_CRYPT_MISC_C
  31:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 13


  32:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #include <wolfssl/wolfcrypt/misc.h>
  33:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  34:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** /* inlining these functions is a huge speed increase and a small size decrease, 
  35:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    because the functions are smaller than function call setup/cleanup, e.g.,
  36:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    md5 benchmark is twice as fast with inline.  If you don't want it, then
  37:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    define NO_INLINE and compile this file into wolfssl, otherwise it's used as
  38:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****    a source header
  39:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****  */
  40:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  41:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef NO_INLINE
  42:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #define STATIC
  43:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else
  44:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #define STATIC static
  45:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  46:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  47:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  48:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef INTEL_INTRINSICS
  49:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  50:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #include <stdlib.h>      /* get intrinsic definitions */
  51:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  52:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* for non visual studio probably need no long version, 32 bit only
  53:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****      * i.e., _rotl and _rotr */
  54:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     #pragma intrinsic(_lrotl, _lrotr)
  55:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  56:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotlFixed(word32 x, word32 y)
  57:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  58:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return y ? _lrotl(x, y) : x;
  59:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
  60:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  61:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotrFixed(word32 x, word32 y)
  62:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  63:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return y ? _lrotr(x, y) : x;
  64:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
  65:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  66:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else /* generic */
  67:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  68:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotlFixed(word32 x, word32 y)
  69:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  70:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return (x << y) | (x >> (sizeof(y) * 8 - y));
  71:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }   
  72:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  73:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  74:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     STATIC INLINE word32 rotrFixed(word32 x, word32 y)
  75:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     {
  76:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         return (x >> y) | (x << (sizeof(y) * 8 - y));
  77:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
  78:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  79:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  80:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  81:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
  82:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word32 ByteReverseWord32(word32 value)
  83:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
  84:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef PPC_INTRINSICS
  85:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* PPC: load reverse indexed instruction */
  86:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (word32)__lwbrx(&value,0);
  87:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #elif defined(KEIL_INTRINSICS)
  88:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (word32)__rev(value);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 14


  89:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #elif defined(FAST_ROTATE)
  90:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* 5 instructions with rotate instruction, 9 without */
  91:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (rotrFixed(value, 8U) & 0xff00ff00) |
  92:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****            (rotlFixed(value, 8U) & 0x00ff00ff);
  93:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else
  94:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     /* 6 instructions with rotate instruction, 8 without */
  95:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     value = ((value & 0xFF00FF00) >> 8) | ((value & 0x00FF00FF) << 8);
  96:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return rotlFixed(value, 16U);
  97:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
  98:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
  99:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 100:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 101:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void ByteReverseWords(word32* out, const word32* in,
 102:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                                     word32 byteCount)
 103:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 104:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     word32 count = byteCount/(word32)sizeof(word32), i;
 105:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 106:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     for (i = 0; i < count; i++)
 107:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         out[i] = ByteReverseWord32(in[i]);
 108:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 109:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 110:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 111:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 112:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef WORD64_AVAILABLE
 113:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 114:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 115:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word64 rotlFixed64(word64 x, word64 y)
 116:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 117:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (x << y) | (x >> (sizeof(y) * 8 - y));
 118:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }  
 119:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 120:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 121:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word64 rotrFixed64(word64 x, word64 y)
 122:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 123:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     return (x >> y) | (x << (sizeof(y) * 8 - y));
 124:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 125:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 126:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 127:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE word64 ByteReverseWord64(word64 value)
 128:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 129:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #ifdef WOLFCRYPT_SLOW_WORD64
 130:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	return (word64)(ByteReverseWord32((word32)value)) << 32 | 
 131:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                     ByteReverseWord32((word32)(value>>32));
 132:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #else
 133:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	value = ((value & W64LIT(0xFF00FF00FF00FF00)) >> 8) |
 134:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****             ((value & W64LIT(0x00FF00FF00FF00FF)) << 8);
 135:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	value = ((value & W64LIT(0xFFFF0000FFFF0000)) >> 16) |
 136:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****             ((value & W64LIT(0x0000FFFF0000FFFF)) << 16);
 137:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 	return rotlFixed64(value, 32U);
 138:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif
 139:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 140:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 141:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 142:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void ByteReverseWords64(word64* out, const word64* in,
 143:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                                       word32 byteCount)
 144:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 145:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     word32 count = byteCount/(word32)sizeof(word64), i;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 15


 146:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 147:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     for (i = 0; i < count; i++)
 148:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         out[i] = ByteReverseWord64(in[i]);
 149:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 150:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 151:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 152:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** #endif /* WORD64_AVAILABLE */
 153:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 154:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 155:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void XorWords(wolfssl_word* r, const wolfssl_word* a, word32 n)
 156:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 157:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     word32 i;
 158:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 159:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     for (i = 0; i < n; i++) r[i] ^= a[i];
 160:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 161:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 162:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 163:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void xorbuf(void* buf, const void* mask, word32 count)
 164:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 165:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     if (((wolfssl_word)buf | (wolfssl_word)mask | count) % WOLFSSL_WORD_SIZE == 0)
 166:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         XorWords( (wolfssl_word*)buf,
 167:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****                   (const wolfssl_word*)mask, count / WOLFSSL_WORD_SIZE);
 168:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     else {
 169:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         word32 i;
 170:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         byte*       b = (byte*)buf;
 171:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         const byte* m = (const byte*)mask;
 172:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 173:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****         for (i = 0; i < count; i++) b[i] ^= m[i];
 174:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     }
 175:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** }
 176:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 177:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 178:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** /* Make sure compiler doesn't skip */
 179:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** STATIC INLINE void ForceZero(const void* mem, word32 len)
 180:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** {
 181:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     volatile byte* z = (volatile byte*)mem;
 182:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c **** 
 183:..\acn-sdk-c\src\wolfSSL/wolfcrypt/src/misc.c ****     while (len--) *z++ = 0;
 298              		.loc 2 183 0
 299 0130 212B     		cmp	r3, #33
 300 0132 01D0     		beq	.L15
 301              	.LVL54:
 302 0134 0A70     		strb	r2, [r1]
 303 0136 F7E7     		b	.L13
 304              	.LVL55:
 305              	.L15:
 306 0138 0CAB     		add	r3, sp, #48
 307 013a 9918     		add	r1, r3, r2
 308              	.LVL56:
 309 013c 0132     		add	r2, r2, #1
 310              	.LVL57:
 311 013e 0023     		mov	r3, #0
 312              	.LBE27:
 313              	.LBE26:
 314              	.LBB28:
 315              	.LBB29:
 316 0140 212A     		cmp	r2, #33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 16


 317 0142 01D0     		beq	.L17
 318              	.LVL58:
 319 0144 0B70     		strb	r3, [r1]
 320 0146 F7E7     		b	.L15
 321              	.LVL59:
 322              	.L17:
 323              	.LBE29:
 324              	.LBE28:
 325              	.LBB30:
 326              	.LBB31:
 327 0148 1221     		mov	r1, #18
 328 014a 34AA     		add	r2, sp, #208
 329 014c D218     		add	r2, r2, r3
 330              	.LVL60:
 331 014e FF31     		add	r1, r1, #255
 332 0150 0133     		add	r3, r3, #1
 333              	.LVL61:
 334 0152 8B42     		cmp	r3, r1
 335 0154 02D0     		beq	.L36
 336              	.LVL62:
 337 0156 0021     		mov	r1, #0
 338 0158 1170     		strb	r1, [r2]
 339 015a F5E7     		b	.L17
 340              	.LVL63:
 341              	.L36:
 342              	.LBE31:
 343              	.LBE30:
 344              	.LBE23:
 345              	.LBE22:
 317:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             hash_type = sha256_mac;
 318:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = p_hash(digest, digLen, secret, secLen, labelSeed,
 346              		.loc 1 318 0
 347 015c 201C     		mov	r0, r4
 348              	.LVL64:
 349              	.L2:
 350              	.LBE21:
 319:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      labLen + seedLen, hash_type);
 320:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 321:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 322:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(labelSeed, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 323:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 324:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 325:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_OLD_TLS
 326:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
 327:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = doPRF(digest, digLen, secret, secLen, label, labLen, seed,
 328:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     seedLen);
 329:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 330:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 331:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 332:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
 333:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 351              		.loc 1 333 0
 352 015e 79B0     		add	sp, sp, #484
 353              		@ sp needed
 354 0160 F0BD     		pop	{r4, r5, r6, r7, pc}
 355              		.cfi_endproc
 356              	.LFE14:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 17


 357              		.size	PRF, .-PRF
 358              		.section	.text.BuildTlsFinished,"ax",%progbits
 359              		.align	1
 360              		.global	BuildTlsFinished
 361              		.code	16
 362              		.thumb_func
 363              		.type	BuildTlsFinished, %function
 364              	BuildTlsFinished:
 365              	.LFB15:
 334:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 335:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 336:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SHA384
 337:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #define HSHASH_SZ SHA384_DIGEST_SIZE
 338:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
 339:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #define HSHASH_SZ FINISHED_SZ
 340:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 341:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 342:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 343:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int BuildTlsFinished(WOLFSSL* ssl, Hashes* hashes, const byte* sender)
 344:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 366              		.loc 1 344 0
 367              		.cfi_startproc
 368              	.LVL65:
 369 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 370              		.cfi_def_cfa_offset 20
 371              		.cfi_offset 4, -20
 372              		.cfi_offset 5, -16
 373              		.cfi_offset 6, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 93B0     		sub	sp, sp, #76
 377              		.cfi_def_cfa_offset 96
 378              		.loc 1 344 0
 379 0004 041C     		mov	r4, r0
 380 0006 0791     		str	r1, [sp, #28]
 381 0008 171C     		mov	r7, r2
 345:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     const byte* side;
 346:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte        handshake_hash[HSHASH_SZ];
 347:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32      hashSz = FINISHED_SZ;
 348:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 349:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_OLD_TLS
 350:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     wc_Md5GetHash(&ssl->hsHashes->hashMd5, handshake_hash);
 351:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     wc_ShaGetHash(&ssl->hsHashes->hashSha, &handshake_hash[MD5_DIGEST_SIZE]);
 352:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 353:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 354:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (IsAtLeastTLSv1_2(ssl)) {
 382              		.loc 1 354 0
 383 000a FFF7FEFF 		bl	IsAtLeastTLSv1_2
 384              	.LVL66:
 385 000e 0028     		cmp	r0, #0
 386 0010 10D0     		beq	.L42
 355:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_SHA256
 356:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->specs.mac_algorithm <= sha256_mac || ssl->specs.mac_algorithm == blake2b_mac) {
 387              		.loc 1 356 0
 388 0012 A823     		mov	r3, #168
 389 0014 5B00     		lsl	r3, r3, #1
 390 0016 E35C     		ldrb	r3, [r4, r3]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 18


 391 0018 042B     		cmp	r3, #4
 392 001a 02D9     		bls	.L39
 347:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 393              		.loc 1 347 0 discriminator 1
 394 001c 2426     		mov	r6, #36
 395              		.loc 1 356 0 discriminator 1
 396 001e 082B     		cmp	r3, #8
 397 0020 09D1     		bne	.L38
 398              	.L39:
 399              	.LBB32:
 357:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             int ret = wc_Sha256GetHash(&ssl->hsHashes->hashSha256,handshake_hash);
 400              		.loc 1 357 0
 401 0022 E068     		ldr	r0, [r4, #12]
 402 0024 09A9     		add	r1, sp, #36
 403 0026 6830     		add	r0, r0, #104
 404 0028 FFF7FEFF 		bl	wc_Sha256GetHash
 405              	.LVL67:
 358:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 359:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ret != 0)
 360:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return ret;
 361:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 362:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             hashSz = SHA256_DIGEST_SIZE;
 406              		.loc 1 362 0
 407 002c 2026     		mov	r6, #32
 359:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return ret;
 408              		.loc 1 359 0
 409 002e 0028     		cmp	r0, #0
 410 0030 01D0     		beq	.L38
 411 0032 21E0     		b	.L40
 412              	.LVL68:
 413              	.L42:
 414              	.LBE32:
 347:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 415              		.loc 1 347 0
 416 0034 2426     		mov	r6, #36
 417              	.L38:
 418              	.LVL69:
 363:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 364:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 365:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SHA384
 366:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->specs.mac_algorithm == sha384_mac) {
 367:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             int ret = wc_Sha384Final(&ssl->hsHashes->hashSha384,handshake_hash);
 368:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 369:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ret != 0)
 370:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return ret;
 371:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 372:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             hashSz = SHA384_DIGEST_SIZE;
 373:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 374:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 375:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 376:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 377:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ( XSTRNCMP((const char*)sender, (const char*)client, SIZEOF_SENDER) == 0)
 419              		.loc 1 377 0
 420 0036 114D     		ldr	r5, .L47
 421 0038 381C     		mov	r0, r7
 422 003a 291C     		mov	r1, r5
 423 003c 0422     		mov	r2, #4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 19


 424 003e 2031     		add	r1, r1, #32
 425 0040 FFF7FEFF 		bl	strncmp
 426              	.LVL70:
 427 0044 0028     		cmp	r0, #0
 428 0046 00D0     		beq	.L41
 378:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         side = tls_client;
 379:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else
 380:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         side = tls_server;
 429              		.loc 1 380 0
 430 0048 1035     		add	r5, r5, #16
 431              	.L41:
 432              	.LVL71:
 381:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 382:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return PRF((byte*)hashes, TLS_FINISHED_SZ, ssl->arrays->masterSecret,
 433              		.loc 1 382 0
 434 004a A368     		ldr	r3, [r4, #8]
 435 004c 0C4A     		ldr	r2, .L47+4
 436 004e 201C     		mov	r0, r4
 437 0050 9F18     		add	r7, r3, r2
 438              	.LVL72:
 439 0052 FFF7FEFF 		bl	IsAtLeastTLSv1_2
 440              	.LVL73:
 441 0056 0F23     		mov	r3, #15
 442 0058 0193     		str	r3, [sp, #4]
 443 005a 09AB     		add	r3, sp, #36
 444 005c 0293     		str	r3, [sp, #8]
 383:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                SECRET_LEN, side, FINISHED_LABEL_SZ, handshake_hash, hashSz,
 384:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                IsAtLeastTLSv1_2(ssl), ssl->specs.mac_algorithm);
 445              		.loc 1 384 0
 446 005e A823     		mov	r3, #168
 447 0060 5B00     		lsl	r3, r3, #1
 382:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                SECRET_LEN, side, FINISHED_LABEL_SZ, handshake_hash, hashSz,
 448              		.loc 1 382 0
 449 0062 E35C     		ldrb	r3, [r4, r3]
 450 0064 0490     		str	r0, [sp, #16]
 451 0066 0593     		str	r3, [sp, #20]
 452 0068 0095     		str	r5, [sp]
 453 006a 0396     		str	r6, [sp, #12]
 454 006c 0798     		ldr	r0, [sp, #28]
 455 006e 0C21     		mov	r1, #12
 456 0070 3A1C     		mov	r2, r7
 457 0072 3023     		mov	r3, #48
 458 0074 FFF7FEFF 		bl	PRF
 459              	.LVL74:
 460              	.L40:
 385:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 461              		.loc 1 385 0
 462 0078 13B0     		add	sp, sp, #76
 463              		@ sp needed
 464              	.LVL75:
 465 007a F0BD     		pop	{r4, r5, r6, r7, pc}
 466              	.L48:
 467              		.align	2
 468              	.L47:
 469 007c 00000000 		.word	.LANCHOR0
 470 0080 71020000 		.word	625
 471              		.cfi_endproc
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 20


 472              	.LFE15:
 473              		.size	BuildTlsFinished, .-BuildTlsFinished
 474              		.section	.rodata.cst2,"aM",%progbits,2
 475              		.align	1
 476              	.LC2:
 477 0000 0303     		.short	771
 478              		.section	.text.MakeTLSv1_2,"ax",%progbits
 479              		.align	1
 480              		.global	MakeTLSv1_2
 481              		.code	16
 482              		.thumb_func
 483              		.type	MakeTLSv1_2, %function
 484              	MakeTLSv1_2:
 485              	.LFB16:
 386:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 387:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 388:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_OLD_TLS
 389:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 390:..\acn-sdk-c\src\wolfSSL\src/tls.c **** ProtocolVersion MakeTLSv1(void)
 391:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 392:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ProtocolVersion pv;
 393:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pv.major = SSLv3_MAJOR;
 394:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pv.minor = TLSv1_MINOR;
 395:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 396:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return pv;
 397:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 398:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 399:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 400:..\acn-sdk-c\src\wolfSSL\src/tls.c **** ProtocolVersion MakeTLSv1_1(void)
 401:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 402:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ProtocolVersion pv;
 403:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pv.major = SSLv3_MAJOR;
 404:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pv.minor = TLSv1_1_MINOR;
 405:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 406:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return pv;
 407:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 408:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 409:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 410:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 411:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 412:..\acn-sdk-c\src\wolfSSL\src/tls.c **** ProtocolVersion MakeTLSv1_2(void)
 413:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 486              		.loc 1 413 0
 487              		.cfi_startproc
 488              	.LVL76:
 414:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ProtocolVersion pv;
 415:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pv.major = SSLv3_MAJOR;
 416:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pv.minor = TLSv1_2_MINOR;
 417:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 418:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return pv;
 419:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 489              		.loc 1 419 0
 490 0000 024B     		ldr	r3, .L50
 413:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ProtocolVersion pv;
 491              		.loc 1 413 0
 492 0002 82B0     		sub	sp, sp, #8
 493              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 21


 494              		.loc 1 419 0
 495 0004 1888     		ldrh	r0, [r3]
 496 0006 02B0     		add	sp, sp, #8
 497              		@ sp needed
 498 0008 7047     		bx	lr
 499              	.L51:
 500 000a C046     		.align	2
 501              	.L50:
 502 000c 00000000 		.word	.LC2
 503              		.cfi_endproc
 504              	.LFE16:
 505              		.size	MakeTLSv1_2, .-MakeTLSv1_2
 506              		.section	.text.wolfSSL_DeriveTlsKeys,"ax",%progbits
 507              		.align	1
 508              		.global	wolfSSL_DeriveTlsKeys
 509              		.code	16
 510              		.thumb_func
 511              		.type	wolfSSL_DeriveTlsKeys, %function
 512              	wolfSSL_DeriveTlsKeys:
 513              	.LFB17:
 420:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 421:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 422:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static const byte master_label[MASTER_LABEL_SZ + 1] = "master secret";
 423:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static const byte key_label   [KEY_LABEL_SZ + 1]    = "key expansion";
 424:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 425:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 426:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* External facing wrapper so user can call as well, 0 on success */
 427:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int wolfSSL_DeriveTlsKeys(byte* key_data, word32 keyLen,
 428:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          const byte* ms, word32 msLen,
 429:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          const byte* sr, const byte* cr,
 430:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          int tls1_2, int hash_type)
 431:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 514              		.loc 1 431 0
 515              		.cfi_startproc
 516              	.LVL77:
 517 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 518              		.cfi_def_cfa_offset 20
 519              		.cfi_offset 4, -20
 520              		.cfi_offset 5, -16
 521              		.cfi_offset 6, -12
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 432:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 433:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 434:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(seed,           sr, RAN_LEN);
 524              		.loc 1 434 0
 525 0002 2024     		mov	r4, #32
 431:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 526              		.loc 1 431 0
 527 0004 99B0     		sub	sp, sp, #100
 528              		.cfi_def_cfa_offset 120
 529              		.loc 1 434 0
 530 0006 08AD     		add	r5, sp, #32
 431:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 531              		.loc 1 431 0
 532 0008 071C     		mov	r7, r0
 533 000a 0E1C     		mov	r6, r1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 22


 534 000c 0692     		str	r2, [sp, #24]
 535              		.loc 1 434 0
 536 000e 1E99     		ldr	r1, [sp, #120]
 537              	.LVL78:
 538 0010 221C     		mov	r2, r4
 539              	.LVL79:
 540 0012 281C     		mov	r0, r5
 541              	.LVL80:
 431:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 542              		.loc 1 431 0
 543 0014 0793     		str	r3, [sp, #28]
 544              		.loc 1 434 0
 545 0016 FFF7FEFF 		bl	memcpy
 546              	.LVL81:
 435:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(seed + RAN_LEN, cr, RAN_LEN);
 547              		.loc 1 435 0
 548 001a 1F99     		ldr	r1, [sp, #124]
 549 001c 221C     		mov	r2, r4
 550 001e 10A8     		add	r0, sp, #64
 551 0020 FFF7FEFF 		bl	memcpy
 552              	.LVL82:
 436:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 437:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return PRF(key_data, keyLen, ms, msLen, key_label, KEY_LABEL_SZ,
 553              		.loc 1 437 0
 554 0024 094B     		ldr	r3, .L53
 555 0026 0295     		str	r5, [sp, #8]
 556 0028 2433     		add	r3, r3, #36
 557 002a 0093     		str	r3, [sp]
 558 002c 0D23     		mov	r3, #13
 559 002e 0193     		str	r3, [sp, #4]
 560 0030 3333     		add	r3, r3, #51
 561 0032 0393     		str	r3, [sp, #12]
 562 0034 209B     		ldr	r3, [sp, #128]
 563 0036 381C     		mov	r0, r7
 564 0038 0493     		str	r3, [sp, #16]
 565 003a 219B     		ldr	r3, [sp, #132]
 566 003c 311C     		mov	r1, r6
 567 003e 0593     		str	r3, [sp, #20]
 568 0040 069A     		ldr	r2, [sp, #24]
 569 0042 079B     		ldr	r3, [sp, #28]
 570 0044 FFF7FEFF 		bl	PRF
 571              	.LVL83:
 438:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                seed, SEED_LEN, tls1_2, hash_type);
 439:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 572              		.loc 1 439 0
 573 0048 19B0     		add	sp, sp, #100
 574              		@ sp needed
 575              	.LVL84:
 576              	.LVL85:
 577 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 578              	.L54:
 579              		.align	2
 580              	.L53:
 581 004c 00000000 		.word	.LANCHOR0
 582              		.cfi_endproc
 583              	.LFE17:
 584              		.size	wolfSSL_DeriveTlsKeys, .-wolfSSL_DeriveTlsKeys
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 23


 585              		.section	.text.DeriveTlsKeys,"ax",%progbits
 586              		.align	1
 587              		.global	DeriveTlsKeys
 588              		.code	16
 589              		.thumb_func
 590              		.type	DeriveTlsKeys, %function
 591              	DeriveTlsKeys:
 592              	.LFB18:
 440:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 441:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 442:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int DeriveTlsKeys(WOLFSSL* ssl)
 443:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 593              		.loc 1 443 0
 594              		.cfi_startproc
 595              	.LVL86:
 444:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   length = 2 * ssl->specs.hash_size +
 596              		.loc 1 445 0
 597 0000 5423     		mov	r3, #84
 443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 598              		.loc 1 443 0
 599 0002 70B5     		push	{r4, r5, r6, lr}
 600              		.cfi_def_cfa_offset 16
 601              		.cfi_offset 4, -16
 602              		.cfi_offset 5, -12
 603              		.cfi_offset 6, -8
 604              		.cfi_offset 14, -4
 605              		.loc 1 445 0
 606 0004 FF33     		add	r3, r3, #255
 607 0006 C55C     		ldrb	r5, [r0, r3]
 446:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.key_size  +
 608              		.loc 1 446 0
 609 0008 0D3B     		sub	r3, r3, #13
 445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.key_size  +
 610              		.loc 1 445 0
 611 000a C35A     		ldrh	r3, [r0, r3]
 443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 612              		.loc 1 443 0
 613 000c BCB0     		sub	sp, sp, #240
 614              		.cfi_def_cfa_offset 256
 445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.key_size  +
 615              		.loc 1 445 0
 616 000e ED18     		add	r5, r5, r3
 447:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.iv_size;
 617              		.loc 1 447 0
 618 0010 A423     		mov	r3, #164
 619 0012 5B00     		lsl	r3, r3, #1
 446:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.key_size  +
 620              		.loc 1 446 0
 621 0014 C35A     		ldrh	r3, [r0, r3]
 448:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 449:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* key_data;
 450:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
 451:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  key_data[MAX_PRF_DIG];
 452:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 453:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 454:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 24


 455:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     key_data = (byte*)XMALLOC(MAX_PRF_DIG, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 456:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (key_data == NULL) {
 457:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
 458:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 459:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 460:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = wolfSSL_DeriveTlsKeys(key_data, length,
 462:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->masterSecret, SECRET_LEN,
 622              		.loc 1 462 0
 623 0016 8668     		ldr	r6, [r0, #8]
 446:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.iv_size;
 624              		.loc 1 446 0
 625 0018 ED18     		add	r5, r5, r3
 443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 626              		.loc 1 443 0
 627 001a 041C     		mov	r4, r0
 461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->masterSecret, SECRET_LEN,
 628              		.loc 1 461 0
 629 001c FFF7FEFF 		bl	IsAtLeastTLSv1_2
 630              	.LVL87:
 631              		.loc 1 462 0
 632 0020 0C4B     		ldr	r3, .L57
 445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    2 * ssl->specs.key_size  +
 633              		.loc 1 445 0
 634 0022 6D00     		lsl	r5, r5, #1
 635              		.loc 1 462 0
 636 0024 F218     		add	r2, r6, r3
 463:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->serverRandom, ssl->arrays->clientRandom,
 637              		.loc 1 463 0
 638 0026 331C     		mov	r3, r6
 639 0028 3033     		add	r3, r3, #48
 461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->masterSecret, SECRET_LEN,
 640              		.loc 1 461 0
 641 002a 0093     		str	r3, [sp]
 464:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            IsAtLeastTLSv1_2(ssl), ssl->specs.mac_algorithm);
 642              		.loc 1 464 0
 643 002c A823     		mov	r3, #168
 644 002e 5B00     		lsl	r3, r3, #1
 461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->masterSecret, SECRET_LEN,
 645              		.loc 1 461 0
 646 0030 E35C     		ldrb	r3, [r4, r3]
 463:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->serverRandom, ssl->arrays->clientRandom,
 647              		.loc 1 463 0
 648 0032 1036     		add	r6, r6, #16
 461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            ssl->arrays->masterSecret, SECRET_LEN,
 649              		.loc 1 461 0
 650 0034 0290     		str	r0, [sp, #8]
 651 0036 0393     		str	r3, [sp, #12]
 652 0038 0196     		str	r6, [sp, #4]
 653 003a 04A8     		add	r0, sp, #16
 654 003c 291C     		mov	r1, r5
 655 003e 3023     		mov	r3, #48
 656 0040 FFF7FEFF 		bl	wolfSSL_DeriveTlsKeys
 657              	.LVL88:
 465:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret == 0)
 658              		.loc 1 465 0
 659 0044 0028     		cmp	r0, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 25


 660 0046 03D1     		bne	.L56
 466:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = StoreKeys(ssl, key_data);
 661              		.loc 1 466 0
 662 0048 201C     		mov	r0, r4
 663              	.LVL89:
 664 004a 04A9     		add	r1, sp, #16
 665 004c FFF7FEFF 		bl	StoreKeys
 666              	.LVL90:
 667              	.L56:
 467:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 468:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 469:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(key_data, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 470:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 471:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 472:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
 473:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 668              		.loc 1 473 0
 669 0050 3CB0     		add	sp, sp, #240
 670              		@ sp needed
 671              	.LVL91:
 672 0052 70BD     		pop	{r4, r5, r6, pc}
 673              	.L58:
 674              		.align	2
 675              	.L57:
 676 0054 71020000 		.word	625
 677              		.cfi_endproc
 678              	.LFE18:
 679              		.size	DeriveTlsKeys, .-DeriveTlsKeys
 680              		.section	.text.wolfSSL_MakeTlsMasterSecret,"ax",%progbits
 681              		.align	1
 682              		.global	wolfSSL_MakeTlsMasterSecret
 683              		.code	16
 684              		.thumb_func
 685              		.type	wolfSSL_MakeTlsMasterSecret, %function
 686              	wolfSSL_MakeTlsMasterSecret:
 687              	.LFB19:
 474:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 475:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 476:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* External facing wrapper so user can call as well, 0 on success */
 477:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int wolfSSL_MakeTlsMasterSecret(byte* ms, word32 msLen,
 478:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                const byte* pms, word32 pmsLen,
 479:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                const byte* cr, const byte* sr,
 480:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                int tls1_2, int hash_type)
 481:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 688              		.loc 1 481 0
 689              		.cfi_startproc
 690              	.LVL92:
 691 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 692              		.cfi_def_cfa_offset 20
 693              		.cfi_offset 4, -20
 694              		.cfi_offset 5, -16
 695              		.cfi_offset 6, -12
 696              		.cfi_offset 7, -8
 697              		.cfi_offset 14, -4
 482:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 483:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 484:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(seed,           cr, RAN_LEN);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 26


 698              		.loc 1 484 0
 699 0002 2024     		mov	r4, #32
 481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 700              		.loc 1 481 0
 701 0004 99B0     		sub	sp, sp, #100
 702              		.cfi_def_cfa_offset 120
 703              		.loc 1 484 0
 704 0006 08AD     		add	r5, sp, #32
 481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 705              		.loc 1 481 0
 706 0008 071C     		mov	r7, r0
 707 000a 0E1C     		mov	r6, r1
 708 000c 0692     		str	r2, [sp, #24]
 709              		.loc 1 484 0
 710 000e 1E99     		ldr	r1, [sp, #120]
 711              	.LVL93:
 712 0010 221C     		mov	r2, r4
 713              	.LVL94:
 714 0012 281C     		mov	r0, r5
 715              	.LVL95:
 481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 716              		.loc 1 481 0
 717 0014 0793     		str	r3, [sp, #28]
 718              		.loc 1 484 0
 719 0016 FFF7FEFF 		bl	memcpy
 720              	.LVL96:
 485:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(seed + RAN_LEN, sr, RAN_LEN);
 721              		.loc 1 485 0
 722 001a 1F99     		ldr	r1, [sp, #124]
 723 001c 221C     		mov	r2, r4
 724 001e 10A8     		add	r0, sp, #64
 725 0020 FFF7FEFF 		bl	memcpy
 726              	.LVL97:
 486:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 487:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return PRF(ms, msLen, pms, pmsLen, master_label, MASTER_LABEL_SZ,
 727              		.loc 1 487 0
 728 0024 094B     		ldr	r3, .L60
 729 0026 0295     		str	r5, [sp, #8]
 730 0028 3233     		add	r3, r3, #50
 731 002a 0093     		str	r3, [sp]
 732 002c 0D23     		mov	r3, #13
 733 002e 0193     		str	r3, [sp, #4]
 734 0030 3333     		add	r3, r3, #51
 735 0032 0393     		str	r3, [sp, #12]
 736 0034 209B     		ldr	r3, [sp, #128]
 737 0036 381C     		mov	r0, r7
 738 0038 0493     		str	r3, [sp, #16]
 739 003a 219B     		ldr	r3, [sp, #132]
 740 003c 311C     		mov	r1, r6
 741 003e 0593     		str	r3, [sp, #20]
 742 0040 069A     		ldr	r2, [sp, #24]
 743 0042 079B     		ldr	r3, [sp, #28]
 744 0044 FFF7FEFF 		bl	PRF
 745              	.LVL98:
 488:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                seed, SEED_LEN, tls1_2, hash_type);
 489:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 746              		.loc 1 489 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 27


 747 0048 19B0     		add	sp, sp, #100
 748              		@ sp needed
 749              	.LVL99:
 750              	.LVL100:
 751 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 752              	.L61:
 753              		.align	2
 754              	.L60:
 755 004c 00000000 		.word	.LANCHOR0
 756              		.cfi_endproc
 757              	.LFE19:
 758              		.size	wolfSSL_MakeTlsMasterSecret, .-wolfSSL_MakeTlsMasterSecret
 759              		.section	.text.MakeTlsMasterSecret,"ax",%progbits
 760              		.align	1
 761              		.global	MakeTlsMasterSecret
 762              		.code	16
 763              		.thumb_func
 764              		.type	MakeTlsMasterSecret, %function
 765              	MakeTlsMasterSecret:
 766              	.LFB20:
 490:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 491:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 492:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int MakeTlsMasterSecret(WOLFSSL* ssl)
 493:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 767              		.loc 1 493 0
 768              		.cfi_startproc
 769              	.LVL101:
 770 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 771              		.cfi_def_cfa_offset 32
 772              		.cfi_offset 0, -32
 773              		.cfi_offset 1, -28
 774              		.cfi_offset 2, -24
 775              		.cfi_offset 3, -20
 776              		.cfi_offset 4, -16
 777              		.cfi_offset 5, -12
 778              		.cfi_offset 6, -8
 779              		.cfi_offset 14, -4
 494:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 495:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = wolfSSL_MakeTlsMasterSecret(ssl->arrays->masterSecret, SECRET_LEN,
 780              		.loc 1 496 0
 781 0002 8468     		ldr	r4, [r0, #8]
 493:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 782              		.loc 1 493 0
 783 0004 051C     		mov	r5, r0
 784              		.loc 1 496 0
 785 0006 6668     		ldr	r6, [r4, #4]
 786 0008 FFF7FEFF 		bl	IsAtLeastTLSv1_2
 787              	.LVL102:
 497:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 498:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->clientRandom, ssl->arrays->serverRandom,
 788              		.loc 1 498 0
 789 000c 211C     		mov	r1, r4
 790 000e 1031     		add	r1, r1, #16
 496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 791              		.loc 1 496 0
 792 0010 0091     		str	r1, [sp]
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 28


 499:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               IsAtLeastTLSv1_2(ssl), ssl->specs.mac_algorithm);
 793              		.loc 1 499 0
 794 0012 A821     		mov	r1, #168
 497:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 795              		.loc 1 497 0
 796 0014 221C     		mov	r2, r4
 496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 797              		.loc 1 496 0
 798 0016 0A4B     		ldr	r3, .L64
 799              		.loc 1 499 0
 800 0018 4900     		lsl	r1, r1, #1
 496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 801              		.loc 1 496 0
 802 001a 695C     		ldrb	r1, [r5, r1]
 803 001c E318     		add	r3, r4, r3
 498:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               IsAtLeastTLSv1_2(ssl), ssl->specs.mac_algorithm);
 804              		.loc 1 498 0
 805 001e 3034     		add	r4, r4, #48
 496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 806              		.loc 1 496 0
 807 0020 0290     		str	r0, [sp, #8]
 808 0022 0391     		str	r1, [sp, #12]
 809 0024 181C     		mov	r0, r3
 497:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->clientRandom, ssl->arrays->serverRandom,
 810              		.loc 1 497 0
 811 0026 7132     		add	r2, r2, #113
 496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               ssl->arrays->preMasterSecret, ssl->arrays->preMasterSz,
 812              		.loc 1 496 0
 813 0028 0194     		str	r4, [sp, #4]
 814 002a 3021     		mov	r1, #48
 815 002c 331C     		mov	r3, r6
 816 002e FFF7FEFF 		bl	wolfSSL_MakeTlsMasterSecret
 817              	.LVL103:
 500:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 501:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret == 0) {
 818              		.loc 1 501 0
 819 0032 0028     		cmp	r0, #0
 820 0034 02D1     		bne	.L63
 502:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #ifdef SHOW_SECRETS
 503:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         int i;
 504:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 505:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         printf("master secret: ");
 506:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         for (i = 0; i < SECRET_LEN; i++)
 507:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             printf("%02x", ssl->arrays->masterSecret[i]);
 508:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         printf("\n");
 509:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #endif
 510:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 511:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = DeriveTlsKeys(ssl);
 821              		.loc 1 511 0
 822 0036 281C     		mov	r0, r5
 823              	.LVL104:
 824 0038 FFF7FEFF 		bl	DeriveTlsKeys
 825              	.LVL105:
 826              	.L63:
 512:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 513:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 514:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 29


 515:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 827              		.loc 1 515 0
 828 003c 04B0     		add	sp, sp, #16
 829              		@ sp needed
 830              	.LVL106:
 831 003e 70BD     		pop	{r4, r5, r6, pc}
 832              	.L65:
 833              		.align	2
 834              	.L64:
 835 0040 71020000 		.word	625
 836              		.cfi_endproc
 837              	.LFE20:
 838              		.size	MakeTlsMasterSecret, .-MakeTlsMasterSecret
 839              		.section	.text.wolfSSL_make_eap_keys,"ax",%progbits
 840              		.align	1
 841              		.global	wolfSSL_make_eap_keys
 842              		.code	16
 843              		.thumb_func
 844              		.type	wolfSSL_make_eap_keys, %function
 845              	wolfSSL_make_eap_keys:
 846              	.LFB21:
 516:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 517:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 518:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Used by EAP-TLS and EAP-TTLS to derive keying material from
 519:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * the master_secret. */
 520:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int wolfSSL_make_eap_keys(WOLFSSL* ssl, void* msk, unsigned int len,
 521:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                               const char* label)
 522:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 847              		.loc 1 522 0
 848              		.cfi_startproc
 849              	.LVL107:
 850 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 851              		.cfi_def_cfa_offset 20
 852              		.cfi_offset 4, -20
 853              		.cfi_offset 5, -16
 854              		.cfi_offset 6, -12
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 523:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 524:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 525:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* seed;
 526:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
 527:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte  seed[SEED_LEN];
 528:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 529:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 530:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 531:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     seed = (byte*)XMALLOC(SEED_LEN, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 532:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (seed == NULL)
 533:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
 534:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 535:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 536:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /*
 537:..\acn-sdk-c\src\wolfSSL\src/tls.c ****      * As per RFC-5281, the order of the client and server randoms is reversed
 538:..\acn-sdk-c\src\wolfSSL\src/tls.c ****      * from that used by the TLS protocol to derive keys.
 539:..\acn-sdk-c\src\wolfSSL\src/tls.c ****      */
 540:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(seed,           ssl->arrays->clientRandom, RAN_LEN);
 857              		.loc 1 540 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 30


 858 0002 8468     		ldr	r4, [r0, #8]
 522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 859              		.loc 1 522 0
 860 0004 99B0     		sub	sp, sp, #100
 861              		.cfi_def_cfa_offset 120
 522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 862              		.loc 1 522 0
 863 0006 0691     		str	r1, [sp, #24]
 864              		.loc 1 540 0
 865 0008 2027     		mov	r7, #32
 866 000a 211C     		mov	r1, r4
 867              	.LVL108:
 522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 868              		.loc 1 522 0
 869 000c 051C     		mov	r5, r0
 870 000e 0792     		str	r2, [sp, #28]
 871              		.loc 1 540 0
 872 0010 1031     		add	r1, r1, #16
 873 0012 3A1C     		mov	r2, r7
 874              	.LVL109:
 875 0014 08A8     		add	r0, sp, #32
 876              	.LVL110:
 522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret;
 877              		.loc 1 522 0
 878 0016 1E1C     		mov	r6, r3
 879              		.loc 1 540 0
 880 0018 FFF7FEFF 		bl	memcpy
 881              	.LVL111:
 541:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(seed + RAN_LEN, ssl->arrays->serverRandom, RAN_LEN);
 882              		.loc 1 541 0
 883 001c 211C     		mov	r1, r4
 884 001e 3A1C     		mov	r2, r7
 885 0020 3031     		add	r1, r1, #48
 886 0022 10A8     		add	r0, sp, #64
 887 0024 FFF7FEFF 		bl	memcpy
 888              	.LVL112:
 542:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 543:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = PRF((byte*)msk, len, ssl->arrays->masterSecret, SECRET_LEN,
 889              		.loc 1 543 0
 890 0028 301C     		mov	r0, r6
 891 002a FFF7FEFF 		bl	strlen
 892              	.LVL113:
 893 002e 071C     		mov	r7, r0
 894 0030 281C     		mov	r0, r5
 895 0032 FFF7FEFF 		bl	IsAtLeastTLSv1_2
 896              	.LVL114:
 897 0036 0A4B     		ldr	r3, .L67
 898 0038 0490     		str	r0, [sp, #16]
 899 003a E218     		add	r2, r4, r3
 900 003c 08AB     		add	r3, sp, #32
 901 003e 0293     		str	r3, [sp, #8]
 902 0040 4023     		mov	r3, #64
 903 0042 0393     		str	r3, [sp, #12]
 544:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               (const byte *)label, (word32)strlen(label), seed, SEED_LEN,
 545:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               IsAtLeastTLSv1_2(ssl), ssl->specs.mac_algorithm);
 904              		.loc 1 545 0
 905 0044 1133     		add	r3, r3, #17
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 31


 906 0046 FF33     		add	r3, r3, #255
 543:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               (const byte *)label, (word32)strlen(label), seed, SEED_LEN,
 907              		.loc 1 543 0
 908 0048 EB5C     		ldrb	r3, [r5, r3]
 909 004a 0096     		str	r6, [sp]
 910 004c 0593     		str	r3, [sp, #20]
 911 004e 0197     		str	r7, [sp, #4]
 912 0050 0698     		ldr	r0, [sp, #24]
 913 0052 0799     		ldr	r1, [sp, #28]
 914 0054 3023     		mov	r3, #48
 915 0056 FFF7FEFF 		bl	PRF
 916              	.LVL115:
 546:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 547:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_SMALL_STACK
 548:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(seed, NULL, DYNAMIC_TYPE_TMP_BUFFER);
 549:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 550:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 551:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
 552:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 917              		.loc 1 552 0
 918 005a 19B0     		add	sp, sp, #100
 919              		@ sp needed
 920              	.LVL116:
 921              	.LVL117:
 922 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 923              	.L68:
 924 005e C046     		.align	2
 925              	.L67:
 926 0060 71020000 		.word	625
 927              		.cfi_endproc
 928              	.LFE21:
 929              		.size	wolfSSL_make_eap_keys, .-wolfSSL_make_eap_keys
 930              		.section	.text.wolfSSL_GetHmacType,"ax",%progbits
 931              		.align	1
 932              		.global	wolfSSL_GetHmacType
 933              		.code	16
 934              		.thumb_func
 935              		.type	wolfSSL_GetHmacType, %function
 936              	wolfSSL_GetHmacType:
 937              	.LFB25:
 553:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 554:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 555:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /*** next for static INLINE s copied internal.c ***/
 556:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 557:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* convert 16 bit integer to opaque */
 558:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE void c16toa(word16 u16, byte* c)
 559:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 560:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[0] = (u16 >> 8) & 0xff;
 561:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[1] =  u16 & 0xff;
 562:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 563:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 564:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_TLS_EXTENSIONS
 565:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* convert opaque to 16 bit integer */
 566:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE void ato16(const byte* c, word16* u16)
 567:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 568:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *u16 = (c[0] << 8) | (c[1]);
 569:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 32


 570:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 571:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_SNI) && !defined(NO_WOLFSSL_SERVER)
 572:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* convert a 24 bit integer into a 32 bit one */
 573:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE void c24to32(const word24 u24, word32* u32)
 574:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 575:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *u32 = (u24[0] << 16) | (u24[1] << 8) | u24[2];
 576:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 577:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 578:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 579:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 580:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* convert 32 bit integer to opaque */
 581:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE void c32toa(word32 u32, byte* c)
 582:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 583:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[0] = (u32 >> 24) & 0xff;
 584:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[1] = (u32 >> 16) & 0xff;
 585:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[2] = (u32 >>  8) & 0xff;
 586:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[3] =  u32 & 0xff;
 587:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 588:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 589:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 590:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE word32 GetSEQIncrement(WOLFSSL* ssl, int verify)
 591:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 592:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_DTLS
 593:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl->options.dtls) {
 594:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (verify)
 595:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return ssl->keys.dtls_state.curSeq; /* explicit from peer */
 596:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         else
 597:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return ssl->keys.dtls_sequence_number - 1; /* already incremented */
 598:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 599:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 600:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (verify)
 601:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ssl->keys.peer_sequence_number++;
 602:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else
 603:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ssl->keys.sequence_number++;
 604:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 605:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 606:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 607:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_DTLS
 608:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 609:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE word32 GetEpoch(WOLFSSL* ssl, int verify)
 610:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 611:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (verify)
 612:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ssl->keys.dtls_state.curEpoch;
 613:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else
 614:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ssl->keys.dtls_epoch;
 615:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 616:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 617:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* WOLFSSL_DTLS */
 618:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 619:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 620:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /*** end copy ***/
 621:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 622:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 623:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* return HMAC digest type in wolfSSL format */
 624:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int wolfSSL_GetHmacType(WOLFSSL* ssl)
 625:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 938              		.loc 1 625 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 33


 939              		.cfi_startproc
 940              	.LVL118:
 626:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl == NULL)
 941              		.loc 1 626 0
 942 0000 0028     		cmp	r0, #0
 943 0002 0CD0     		beq	.L73
 627:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
 628:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 629:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (ssl->specs.mac_algorithm) {
 944              		.loc 1 629 0
 945 0004 A823     		mov	r3, #168
 946 0006 5B00     		lsl	r3, r3, #1
 947 0008 C35C     		ldrb	r3, [r0, r3]
 630:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_MD5
 631:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case md5_mac:
 632:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
 633:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return MD5;
 634:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 635:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 636:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_SHA256
 637:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case sha256_mac:
 638:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
 639:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return SHA256;
 640:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 641:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 642:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifdef WOLFSSL_SHA384
 643:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case sha384_mac:
 644:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
 645:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return SHA384;
 646:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 647:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 648:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 649:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_SHA
 650:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case sha_mac:
 651:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
 652:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return SHA;
 948              		.loc 1 652 0
 949 000a 0120     		mov	r0, #1
 950              	.LVL119:
 629:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_MD5
 951              		.loc 1 629 0
 952 000c 022B     		cmp	r3, #2
 953 000e 08D0     		beq	.L70
 653:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 654:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 655:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifdef HAVE_BLAKE2
 656:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case blake2b_mac:
 657:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
 658:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BLAKE2B_ID;
 659:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 660:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
 661:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         default:
 662:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
 663:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return SSL_FATAL_ERROR;
 954              		.loc 1 663 0
 955 0010 043B     		sub	r3, r3, #4
 956 0012 581E     		sub	r0, r3, #1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 34


 957 0014 8341     		sbc	r3, r3, r0
 958 0016 0220     		mov	r0, #2
 959 0018 5B42     		neg	r3, r3
 960 001a 1843     		orr	r0, r3
 961 001c 01E0     		b	.L70
 962              	.LVL120:
 963              	.L73:
 627:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 964              		.loc 1 627 0
 965 001e AD20     		mov	r0, #173
 966              	.LVL121:
 967 0020 4042     		neg	r0, r0
 968              	.L70:
 664:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 665:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 666:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 969              		.loc 1 666 0
 970              		@ sp needed
 971 0022 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE25:
 974              		.size	wolfSSL_GetHmacType, .-wolfSSL_GetHmacType
 975              		.section	.text.wolfSSL_SetTlsHmacInner,"ax",%progbits
 976              		.align	1
 977              		.global	wolfSSL_SetTlsHmacInner
 978              		.code	16
 979              		.thumb_func
 980              		.type	wolfSSL_SetTlsHmacInner, %function
 981              	wolfSSL_SetTlsHmacInner:
 982              	.LFB26:
 667:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 668:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 669:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int wolfSSL_SetTlsHmacInner(WOLFSSL* ssl, byte* inner, word32 sz, int content,
 670:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            int verify)
 671:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 983              		.loc 1 671 0
 984              		.cfi_startproc
 985              	.LVL122:
 986 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 987              		.cfi_def_cfa_offset 24
 988              		.cfi_offset 3, -24
 989              		.cfi_offset 4, -20
 990              		.cfi_offset 5, -16
 991              		.cfi_offset 6, -12
 992              		.cfi_offset 7, -8
 993              		.cfi_offset 14, -4
 994              		.loc 1 671 0
 995 0002 051C     		mov	r5, r0
 996 0004 0C1C     		mov	r4, r1
 997 0006 161C     		mov	r6, r2
 998 0008 1F1C     		mov	r7, r3
 672:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl == NULL || inner == NULL)
 999              		.loc 1 672 0
 1000 000a 0028     		cmp	r0, #0
 1001 000c 24D0     		beq	.L80
 1002              		.loc 1 672 0 is_stmt 0 discriminator 1
 1003 000e 0029     		cmp	r1, #0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 35


 1004 0010 22D0     		beq	.L80
 673:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
 674:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 675:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMSET(inner, 0, WOLFSSL_TLS_HMAC_INNER_SZ);
 1005              		.loc 1 675 0 is_stmt 1
 1006 0012 081C     		mov	r0, r1
 1007              	.LVL123:
 1008 0014 0D22     		mov	r2, #13
 1009              	.LVL124:
 1010 0016 0021     		mov	r1, #0
 1011              	.LVL125:
 1012 0018 FFF7FEFF 		bl	memset
 1013              	.LVL126:
 1014              	.LBB39:
 1015              	.LBB40:
 600:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ssl->keys.peer_sequence_number++;
 1016              		.loc 1 600 0
 1017 001c 069B     		ldr	r3, [sp, #24]
 601:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else
 1018              		.loc 1 601 0
 1019 001e FC22     		mov	r2, #252
 600:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ssl->keys.peer_sequence_number++;
 1020              		.loc 1 600 0
 1021 0020 002B     		cmp	r3, #0
 1022 0022 00D1     		bne	.L81
 603:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 1023              		.loc 1 603 0
 1024 0024 FE22     		mov	r2, #254
 1025              	.L81:
 1026 0026 5200     		lsl	r2, r2, #1
 1027 0028 AB58     		ldr	r3, [r5, r2]
 1028              	.LBE40:
 1029              	.LBE39:
 676:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 677:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef WOLFSSL_DTLS
 678:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl->options.dtls)
 679:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         c16toa((word16)GetEpoch(ssl, verify), inner);
 680:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 681:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c32toa(GetSEQIncrement(ssl, verify), &inner[sizeof(word32)]);
 682:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     inner[SEQ_SZ] = (byte)content;
 683:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     inner[SEQ_SZ + ENUM_LEN]            = ssl->version.major;
 684:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     inner[SEQ_SZ + ENUM_LEN + ENUM_LEN] = ssl->version.minor;
 685:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa((word16)sz, inner + SEQ_SZ + ENUM_LEN + VERSION_SZ);
 686:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 687:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
 1030              		.loc 1 687 0
 1031 002a 0020     		mov	r0, #0
 1032              	.LBB42:
 1033              	.LBB41:
 603:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 1034              		.loc 1 603 0
 1035 002c 591C     		add	r1, r3, #1
 1036 002e A950     		str	r1, [r5, r2]
 1037              	.LVL127:
 1038              	.LBE41:
 1039              	.LBE42:
 1040              	.LBB43:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 36


 1041              	.LBB44:
 583:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[1] = (u32 >> 16) & 0xff;
 1042              		.loc 1 583 0
 1043 0030 1A0E     		lsr	r2, r3, #24
 1044 0032 2271     		strb	r2, [r4, #4]
 584:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[2] = (u32 >>  8) & 0xff;
 1045              		.loc 1 584 0
 1046 0034 1A0C     		lsr	r2, r3, #16
 1047 0036 6271     		strb	r2, [r4, #5]
 586:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 1048              		.loc 1 586 0
 1049 0038 E371     		strb	r3, [r4, #7]
 585:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[3] =  u32 & 0xff;
 1050              		.loc 1 585 0
 1051 003a 1A0A     		lsr	r2, r3, #8
 1052              	.LBE44:
 1053              	.LBE43:
 683:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     inner[SEQ_SZ + ENUM_LEN + ENUM_LEN] = ssl->version.minor;
 1054              		.loc 1 683 0
 1055 003c A123     		mov	r3, #161
 1056              	.LVL128:
 1057              	.LBB46:
 1058              	.LBB45:
 585:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[3] =  u32 & 0xff;
 1059              		.loc 1 585 0
 1060 003e A271     		strb	r2, [r4, #6]
 1061              	.LBE45:
 1062              	.LBE46:
 682:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     inner[SEQ_SZ + ENUM_LEN]            = ssl->version.major;
 1063              		.loc 1 682 0
 1064 0040 2772     		strb	r7, [r4, #8]
 683:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     inner[SEQ_SZ + ENUM_LEN + ENUM_LEN] = ssl->version.minor;
 1065              		.loc 1 683 0
 1066 0042 5B00     		lsl	r3, r3, #1
 1067 0044 EB5C     		ldrb	r3, [r5, r3]
 1068 0046 6372     		strb	r3, [r4, #9]
 684:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa((word16)sz, inner + SEQ_SZ + ENUM_LEN + VERSION_SZ);
 1069              		.loc 1 684 0
 1070 0048 4423     		mov	r3, #68
 1071 004a FF33     		add	r3, r3, #255
 1072 004c EB5C     		ldrb	r3, [r5, r3]
 1073              	.LBB47:
 1074              	.LBB48:
 561:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 1075              		.loc 1 561 0
 1076 004e 2673     		strb	r6, [r4, #12]
 1077              	.LBE48:
 1078              	.LBE47:
 684:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa((word16)sz, inner + SEQ_SZ + ENUM_LEN + VERSION_SZ);
 1079              		.loc 1 684 0
 1080 0050 A372     		strb	r3, [r4, #10]
 1081              	.LVL129:
 1082              	.LBB50:
 1083              	.LBB49:
 560:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c[1] =  u16 & 0xff;
 1084              		.loc 1 560 0
 1085 0052 330A     		lsr	r3, r6, #8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 37


 1086 0054 E372     		strb	r3, [r4, #11]
 1087              	.LBE49:
 1088              	.LBE50:
 1089              		.loc 1 687 0
 1090 0056 01E0     		b	.L76
 1091              	.LVL130:
 1092              	.L80:
 673:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 1093              		.loc 1 673 0
 1094 0058 AD20     		mov	r0, #173
 1095              	.LVL131:
 1096 005a 4042     		neg	r0, r0
 1097              	.LVL132:
 1098              	.L76:
 688:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 1099              		.loc 1 688 0
 1100              		@ sp needed
 1101              	.LVL133:
 1102              	.LVL134:
 1103              	.LVL135:
 1104              	.LVL136:
 1105 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1106              		.cfi_endproc
 1107              	.LFE26:
 1108              		.size	wolfSSL_SetTlsHmacInner, .-wolfSSL_SetTlsHmacInner
 1109              		.section	.text.TLS_hmac,"ax",%progbits
 1110              		.align	1
 1111              		.global	TLS_hmac
 1112              		.code	16
 1113              		.thumb_func
 1114              		.type	TLS_hmac, %function
 1115              	TLS_hmac:
 1116              	.LFB27:
 689:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 690:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 691:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* TLS type HMAC */
 692:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLS_hmac(WOLFSSL* ssl, byte* digest, const byte* in, word32 sz,
 693:..\acn-sdk-c\src\wolfSSL\src/tls.c ****               int content, int verify)
 694:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 1117              		.loc 1 694 0
 1118              		.cfi_startproc
 1119              	.LVL137:
 1120 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1121              		.cfi_def_cfa_offset 20
 1122              		.cfi_offset 4, -20
 1123              		.cfi_offset 5, -16
 1124              		.cfi_offset 6, -12
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 CDB0     		sub	sp, sp, #308
 1128              		.cfi_def_cfa_offset 328
 695:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     Hmac hmac;
 696:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int  ret;
 697:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte myInner[WOLFSSL_TLS_HMAC_INNER_SZ];
 698:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 699:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl == NULL)
 1129              		.loc 1 699 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 38


 1130 0004 0028     		cmp	r0, #0
 1131 0006 2FD0     		beq	.L84
 1132 0008 1D1C     		mov	r5, r3
 1133 000a 041C     		mov	r4, r0
 700:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
 701:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 702:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_FUZZER
 703:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl->fuzzerCb)
 704:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->fuzzerCb(ssl, in, sz, FUZZ_HMAC, ssl->fuzzerCtx);
 705:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 706:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 707:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     wolfSSL_SetTlsHmacInner(ssl, myInner, sz, content, verify);
 1134              		.loc 1 707 0
 1135 000c 539B     		ldr	r3, [sp, #332]
 1136              	.LVL138:
 1137 000e 0391     		str	r1, [sp, #12]
 1138 0010 0093     		str	r3, [sp]
 1139 0012 04A9     		add	r1, sp, #16
 1140              	.LVL139:
 1141 0014 529B     		ldr	r3, [sp, #328]
 1142 0016 161C     		mov	r6, r2
 1143 0018 2A1C     		mov	r2, r5
 1144              	.LVL140:
 1145 001a FFF7FEFF 		bl	wolfSSL_SetTlsHmacInner
 1146              	.LVL141:
 708:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 709:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = wc_HmacSetKey(&hmac, wolfSSL_GetHmacType(ssl),
 1147              		.loc 1 709 0
 1148 001e 201C     		mov	r0, r4
 1149 0020 FFF7FEFF 		bl	wolfSSL_GetHmacType
 1150              	.LVL142:
 710:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      wolfSSL_GetMacSecret(ssl, verify), ssl->specs.hash_size);
 1151              		.loc 1 710 0
 1152 0024 5399     		ldr	r1, [sp, #332]
 709:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      wolfSSL_GetMacSecret(ssl, verify), ssl->specs.hash_size);
 1153              		.loc 1 709 0
 1154 0026 071C     		mov	r7, r0
 1155              		.loc 1 710 0
 1156 0028 201C     		mov	r0, r4
 1157 002a FFF7FEFF 		bl	wolfSSL_GetMacSecret
 1158              	.LVL143:
 1159 002e 5423     		mov	r3, #84
 1160 0030 FF33     		add	r3, r3, #255
 1161 0032 021C     		mov	r2, r0
 709:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      wolfSSL_GetMacSecret(ssl, verify), ssl->specs.hash_size);
 1162              		.loc 1 709 0
 1163 0034 E35C     		ldrb	r3, [r4, r3]
 1164 0036 08A8     		add	r0, sp, #32
 1165 0038 391C     		mov	r1, r7
 1166 003a FFF7FEFF 		bl	wc_HmacSetKey
 1167              	.LVL144:
 711:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0)
 1168              		.loc 1 711 0
 1169 003e 0028     		cmp	r0, #0
 1170 0040 14D1     		bne	.L83
 712:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
 713:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = wc_HmacUpdate(&hmac, myInner, sizeof(myInner));
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 39


 1171              		.loc 1 713 0
 1172 0042 08A8     		add	r0, sp, #32
 1173              	.LVL145:
 1174 0044 04A9     		add	r1, sp, #16
 1175 0046 0D22     		mov	r2, #13
 1176 0048 FFF7FEFF 		bl	wc_HmacUpdate
 1177              	.LVL146:
 714:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0)
 1178              		.loc 1 714 0
 1179 004c 0028     		cmp	r0, #0
 1180 004e 0DD1     		bne	.L83
 715:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
 716:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = wc_HmacUpdate(&hmac, in, sz);                                /* content */
 1181              		.loc 1 716 0
 1182 0050 08A8     		add	r0, sp, #32
 1183              	.LVL147:
 1184 0052 311C     		mov	r1, r6
 1185 0054 2A1C     		mov	r2, r5
 1186 0056 FFF7FEFF 		bl	wc_HmacUpdate
 1187              	.LVL148:
 717:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0)
 1188              		.loc 1 717 0
 1189 005a 0028     		cmp	r0, #0
 1190 005c 06D1     		bne	.L83
 718:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
 719:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = wc_HmacFinal(&hmac, digest);
 1191              		.loc 1 719 0
 1192 005e 08A8     		add	r0, sp, #32
 1193              	.LVL149:
 1194 0060 0399     		ldr	r1, [sp, #12]
 1195 0062 FFF7FEFF 		bl	wc_HmacFinal
 1196              	.LVL150:
 1197 0066 01E0     		b	.L83
 1198              	.LVL151:
 1199              	.L84:
 700:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 1200              		.loc 1 700 0
 1201 0068 AD20     		mov	r0, #173
 1202              	.LVL152:
 1203 006a 4042     		neg	r0, r0
 1204              	.LVL153:
 1205              	.L83:
 720:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0)
 721:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
 722:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 723:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
 724:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 1206              		.loc 1 724 0
 1207 006c 4DB0     		add	sp, sp, #308
 1208              		@ sp needed
 1209 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 1210              		.cfi_endproc
 1211              	.LFE27:
 1212              		.size	TLS_hmac, .-TLS_hmac
 1213              		.section	.text.wolfTLSv1_2_client_method,"ax",%progbits
 1214              		.align	1
 1215              		.global	wolfTLSv1_2_client_method
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 40


 1216              		.code	16
 1217              		.thumb_func
 1218              		.type	wolfTLSv1_2_client_method, %function
 1219              	wolfTLSv1_2_client_method:
 1220              	.LFB28:
 725:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 726:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_TLS_EXTENSIONS
 727:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 728:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /**
 729:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * The TLSX semaphore is used to calculate the size of the extensions to be sent
 730:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * from one peer to another.
 731:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
 732:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 733:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Supports up to 64 flags. Increase as needed. */
 734:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SEMAPHORE_SIZE 8
 735:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 736:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /**
 737:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Converts the extension type (id) to an index in the semaphore.
 738:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
 739:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Oficial reference for TLS extension types:
 740:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   http://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xml
 741:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
 742:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Motivation:
 743:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   Previously, we used the extension type itself as the index of that
 744:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   extension in the semaphore as the extension types were declared
 745:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   sequentially, but maintain a semaphore as big as the number of available
 746:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   extensions is no longer an option since the release of renegotiation_info.
 747:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *
 748:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * How to update:
 749:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   Assign extension types that extrapolate the number of available semaphores
 750:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   to the first available index going backwards in the semaphore array.
 751:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   When adding a new extension type that don't extrapolate the number of
 752:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   available semaphores, check for a possible collision with with a
 753:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  *   'remapped' extension type.
 754:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
 755:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static INLINE word16 TLSX_ToSemaphore(word16 type)
 756:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 757:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (type) {
 758:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 759:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case TLSX_RENEGOTIATION_INFO: /* 0xFF01 */
 760:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 63;
 761:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 762:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         default:
 763:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (type > 62) {
 764:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* This message SHOULD only happens during the adding of
 765:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    new TLS extensions in which its IANA number overflows
 766:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    the current semaphore's range, or if its number already
 767:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    is assigned to be used by another extension.
 768:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    Use this check value for the new extension and decrement
 769:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                    the check value by one. */
 770:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("### TLSX semaphore colision or overflow detected!");
 771:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
 772:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 773:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 774:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return type;
 775:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 776:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 41


 777:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Checks if a specific light (tls extension) is not set in the semaphore. */
 778:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define IS_OFF(semaphore, light) \
 779:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ((semaphore)[(light) / 8] ^  (byte) (0x01 << ((light) % 8)))
 780:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 781:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Turn on a specific light (tls extension) in the semaphore. */
 782:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define TURN_ON(semaphore, light) \
 783:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ((semaphore)[(light) / 8] |= (byte) (0x01 << ((light) % 8)))
 784:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 785:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Creates a new extension. */
 786:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static TLSX* TLSX_New(TLSX_Type type, void* data)
 787:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 788:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = (TLSX*)XMALLOC(sizeof(TLSX), NULL, DYNAMIC_TYPE_TLSX);
 789:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 790:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension) {
 791:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->type = type;
 792:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->data = data;
 793:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->resp = 0;
 794:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->next = NULL;
 795:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 796:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 797:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return extension;
 798:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 799:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 800:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /**
 801:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Creates a new extension and pushes it to the provided list.
 802:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * Checks for duplicate extensions, keeps the newest.
 803:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
 804:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_Push(TLSX** list, TLSX_Type type, void* data)
 805:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 806:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_New(type, data);
 807:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 808:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension == NULL)
 809:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
 810:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 811:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* pushes the new extension on the list. */
 812:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     extension->next = *list;
 813:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *list = extension;
 814:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 815:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* remove duplicate extensions, there should be only one of each type. */
 816:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     do {
 817:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (extension->next && extension->next->type == type) {
 818:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX *next = extension->next;
 819:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 820:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             extension->next = next->next;
 821:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             next->next = NULL;
 822:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 823:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX_FreeAll(next);
 824:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 825:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* there is no way to occur more than */
 826:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* two extensions of the same type.   */
 827:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
 828:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
 829:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     } while ((extension = extension->next));
 830:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 831:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
 832:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 833:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 42


 834:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
 835:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 836:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Mark an extension to be sent back to the client. */
 837:..\acn-sdk-c\src\wolfSSL\src/tls.c **** void TLSX_SetResponse(WOLFSSL* ssl, TLSX_Type type);
 838:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 839:..\acn-sdk-c\src\wolfSSL\src/tls.c **** void TLSX_SetResponse(WOLFSSL* ssl, TLSX_Type type)
 840:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 841:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX *ext = TLSX_Find(ssl->extensions, type);
 842:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 843:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ext)
 844:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ext->resp = 1;
 845:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 846:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 847:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
 848:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 849:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
 850:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Application-Layer Protocol Negotiation                                     */
 851:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
 852:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 853:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_ALPN
 854:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Creates a new ALPN object, providing protocol name to use. */
 855:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static ALPN* TLSX_ALPN_New(char *protocol_name, word16 protocol_nameSz)
 856:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 857:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN *alpn;
 858:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 859:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     WOLFSSL_ENTER("TLSX_ALPN_New");
 860:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 861:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (protocol_name == NULL ||
 862:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         protocol_nameSz > WOLFSSL_MAX_ALPN_PROTO_NAME_LEN) {
 863:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Invalid arguments");
 864:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return NULL;
 865:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 866:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 867:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn = (ALPN*)XMALLOC(sizeof(ALPN), 0, DYNAMIC_TYPE_TLSX);
 868:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn == NULL) {
 869:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Memory failure");
 870:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return NULL;
 871:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 872:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 873:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->next = NULL;
 874:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->negotiated = 0;
 875:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->options = 0;
 876:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 877:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->protocol_name = XMALLOC(protocol_nameSz + 1, 0, DYNAMIC_TYPE_TLSX);
 878:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn->protocol_name == NULL) {
 879:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Memory failure");
 880:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(alpn, 0, DYNAMIC_TYPE_TLSX);
 881:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return NULL;
 882:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 883:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 884:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(alpn->protocol_name, protocol_name, protocol_nameSz);
 885:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->protocol_name[protocol_nameSz] = 0;
 886:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 887:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return alpn;
 888:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 889:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 890:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Releases an ALPN object. */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 43


 891:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_ALPN_Free(ALPN *alpn)
 892:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 893:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn == NULL)
 894:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return;
 895:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 896:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(alpn->protocol_name, 0, DYNAMIC_TYPE_TLSX);
 897:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(alpn, 0, DYNAMIC_TYPE_TLSX);
 898:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 899:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 900:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Releases all ALPN objects in the provided list. */
 901:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_ALPN_FreeAll(ALPN *list)
 902:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 903:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN* alpn;
 904:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 905:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((alpn = list)) {
 906:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = alpn->next;
 907:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_ALPN_Free(alpn);
 908:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 909:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 910:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 911:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Tells the buffered size of the ALPN objects in a list. */
 912:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_ALPN_GetSize(ALPN *list)
 913:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 914:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN* alpn;
 915:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = OPAQUE16_LEN; /* list length */
 916:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 917:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((alpn = list)) {
 918:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = alpn->next;
 919:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 920:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length++; /* protocol name length is on one byte */
 921:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += (word16)XSTRLEN(alpn->protocol_name);
 922:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 923:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 924:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
 925:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 926:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 927:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Writes the ALPN objects of a list in a buffer. */
 928:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_ALPN_Write(ALPN *list, byte *output)
 929:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 930:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN* alpn;
 931:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = 0;
 932:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = OPAQUE16_LEN; /* list length offset */
 933:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 934:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((alpn = list)) {
 935:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = alpn->next;
 936:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 937:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length = (word16)XSTRLEN(alpn->protocol_name);
 938:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 939:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* protocol name length */
 940:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         output[offset++] = (byte)length;
 941:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 942:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* protocol name value */
 943:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(output + offset, alpn->protocol_name, length);
 944:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 945:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += length;
 946:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 947:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 44


 948:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* writing list length */
 949:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(offset - OPAQUE16_LEN, output);
 950:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 951:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
 952:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 953:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 954:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Finds a protocol name in the provided ALPN list */
 955:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static ALPN* TLSX_ALPN_Find(ALPN *list, char *protocol_name, word16 size)
 956:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 957:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN *alpn;
 958:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 959:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (list == NULL || protocol_name == NULL)
 960:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return NULL;
 961:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 962:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn = list;
 963:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (alpn != NULL && (
 964:..\acn-sdk-c\src\wolfSSL\src/tls.c ****            (word16)XSTRLEN(alpn->protocol_name) != size ||
 965:..\acn-sdk-c\src\wolfSSL\src/tls.c ****            XSTRNCMP(alpn->protocol_name, protocol_name, size)))
 966:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         alpn = alpn->next;
 967:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 968:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return alpn;
 969:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 970:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 971:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Set the ALPN matching client and server requirements */
 972:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_SetALPN(TLSX** extensions, const void* data, word16 size)
 973:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
 974:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN *alpn;
 975:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int  ret;
 976:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 977:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL || data == NULL)
 978:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
 979:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 980:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn = TLSX_ALPN_New((char *)data, size);
 981:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn == NULL) {
 982:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Memory failure");
 983:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
 984:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 985:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 986:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->negotiated = 1;
 987:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 988:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = TLSX_Push(extensions, TLSX_APPLICATION_LAYER_PROTOCOL, (void*)alpn);
 989:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0) {
 990:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_ALPN_Free(alpn);
 991:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
 992:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 993:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 994:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
 995:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
 996:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
 997:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Parses a buffer of ALPN extensions and set the first one matching
 998:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  * client and server requirements */
 999:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_ALPN_ParseAndSet(WOLFSSL *ssl, byte *input, word16 length,
1000:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                  byte isRequest)
1001:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1002:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16  size = 0, offset = 0, idx = 0;
1003:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int     r = BUFFER_ERROR;
1004:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte    match = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 45


1005:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX    *extension;
1006:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN    *alpn = NULL, *list;
1007:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1008:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     extension = TLSX_Find(ssl->extensions, TLSX_APPLICATION_LAYER_PROTOCOL);
1009:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension == NULL)
1010:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension = TLSX_Find(ssl->ctx->extensions,
1011:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                TLSX_APPLICATION_LAYER_PROTOCOL);
1012:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1013:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension == NULL || extension->data == NULL) {
1014:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("No ALPN extensions not used or bad");
1015:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return isRequest ? 0             /* not using ALPN */
1016:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          : BUFFER_ERROR; /* unexpected ALPN response */
1017:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1018:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1019:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (OPAQUE16_LEN > length)
1020:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1021:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1022:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ato16(input, &size);
1023:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
1024:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1025:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* validating alpn list length */
1026:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length != OPAQUE16_LEN + size)
1027:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1028:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1029:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     list = (ALPN*)extension->data;
1030:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1031:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* keep the list sent by client */
1032:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1033:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->alpn_client_list != NULL)
1034:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XFREE(ssl->alpn_client_list, NULL, DYNAMIC_TYPE_TMP_BUFFER);
1035:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1036:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->alpn_client_list = (char *)XMALLOC(size, NULL,
1037:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                 DYNAMIC_TYPE_TMP_BUFFER);
1038:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->alpn_client_list == NULL)
1039:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return MEMORY_ERROR;
1040:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1041:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1042:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (size = 0; offset < length; offset += size) {
1043:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1044:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         size = input[offset++];
1045:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (offset + size > length)
1046:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
1047:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1048:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (isRequest) {
1049:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XMEMCPY(ssl->alpn_client_list+idx, (char*)input + offset, size);
1050:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             idx += size;
1051:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ssl->alpn_client_list[idx++] = ',';
1052:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1053:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1054:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!match) {
1055:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             alpn = TLSX_ALPN_Find(list, (char*)input + offset, size);
1056:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (alpn != NULL) {
1057:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("ALPN protocol match");
1058:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 match = 1;
1059:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1060:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* skip reading other values if not required */
1061:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (!isRequest)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 46


1062:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     break;
1063:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
1064:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1065:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1066:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1067:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest)
1068:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->alpn_client_list[idx-1] = 0;
1069:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1070:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!match) {
1071:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("No ALPN protocol match");
1072:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1073:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* do nothing if no protocol match between client and server and option
1074:..\acn-sdk-c\src\wolfSSL\src/tls.c ****          is set to continue (like OpenSSL) */
1075:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (list->options & WOLFSSL_ALPN_CONTINUE_ON_MISMATCH) {
1076:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             WOLFSSL_MSG("Continue on mismatch");
1077:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 0;
1078:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1079:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1080:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         SendAlert(ssl, alert_fatal, no_application_protocol);
1081:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return UNKNOWN_ALPN_PROTOCOL_NAME_E;
1082:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1083:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1084:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* set the matching negotiated protocol */
1085:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     r = TLSX_SetALPN(&ssl->extensions,
1086:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      alpn->protocol_name,
1087:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      (word16)XSTRLEN(alpn->protocol_name));
1088:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (r != SSL_SUCCESS) {
1089:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("TLSX_UseALPN failed");
1090:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1091:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1092:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1093:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* reply to ALPN extension sent from client */
1094:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1095:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1096:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_SetResponse(ssl, TLSX_APPLICATION_LAYER_PROTOCOL);
1097:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1098:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1099:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1100:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1101:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1102:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1103:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Add a protocol name to the list of accepted usable ones */
1104:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseALPN(TLSX** extensions, const void* data, word16 size, byte options)
1105:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1106:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN *alpn;
1107:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX *extension;
1108:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int  ret;
1109:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1110:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL || data == NULL)
1111:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
1112:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1113:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn = TLSX_ALPN_New((char *)data, size);
1114:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn == NULL) {
1115:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Memory failure");
1116:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
1117:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1118:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 47


1119:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* Set Options of ALPN */
1120:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn->options = options;
1121:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1122:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     extension = TLSX_Find(*extensions, TLSX_APPLICATION_LAYER_PROTOCOL);
1123:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension == NULL) {
1124:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = TLSX_Push(extensions, TLSX_APPLICATION_LAYER_PROTOCOL,
1125:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                    (void*)alpn);
1126:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ret != 0) {
1127:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX_ALPN_Free(alpn);
1128:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return ret;
1129:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1130:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1131:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
1132:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* push new ALPN object to extension data. */
1133:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         alpn->next = (ALPN*)extension->data;
1134:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->data = (void*)alpn;
1135:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1136:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1137:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
1138:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1139:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1140:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Get the protocol name set by the server */
1141:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_ALPN_GetRequest(TLSX* extensions, void** data, word16 *dataSz)
1142:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1143:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX *extension;
1144:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ALPN *alpn;
1145:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1146:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL || data == NULL || dataSz == NULL)
1147:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
1148:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1149:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     extension = TLSX_Find(extensions, TLSX_APPLICATION_LAYER_PROTOCOL);
1150:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension == NULL) {
1151:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("TLS extension not found");
1152:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return SSL_ALPN_NOT_FOUND;
1153:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1154:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1155:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     alpn = (ALPN *)extension->data;
1156:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn == NULL) {
1157:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("ALPN extension not found");
1158:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         *data = NULL;
1159:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         *dataSz = 0;
1160:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return SSL_FATAL_ERROR;
1161:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1162:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1163:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn->negotiated != 1) {
1164:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1165:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* consider as an error */
1166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (alpn->options & WOLFSSL_ALPN_FAILED_ON_MISMATCH) {
1167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             WOLFSSL_MSG("No protocol match with peer -> Failed");
1168:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return SSL_FATAL_ERROR;
1169:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1170:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1171:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* continue without negotiated protocol */
1172:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("No protocol match with peer -> Continue");
1173:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return SSL_ALPN_NOT_FOUND;
1174:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1175:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 48


1176:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (alpn->next != NULL) {
1177:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Only one protocol name must be accepted");
1178:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return SSL_FATAL_ERROR;
1179:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1180:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1181:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *data = alpn->protocol_name;
1182:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *dataSz = (word16)XSTRLEN(*data);
1183:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1184:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
1185:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1186:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1187:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_FREE_ALL     TLSX_ALPN_FreeAll
1188:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_GET_SIZE     TLSX_ALPN_GetSize
1189:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_WRITE        TLSX_ALPN_Write
1190:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_PARSE        TLSX_ALPN_ParseAndSet
1191:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1192:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else /* HAVE_ALPN */
1193:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1194:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_FREE_ALL(list)
1195:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_GET_SIZE(list)     0
1196:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_WRITE(a, b)        0
1197:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define ALPN_PARSE(a, b, c, d)  0
1198:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1199:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_ALPN */
1200:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1201:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1202:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Server Name Indication                                                     */
1203:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1204:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1205:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_SNI
1206:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1207:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Creates a new SNI object. */
1208:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static SNI* TLSX_SNI_New(byte type, const void* data, word16 size)
1209:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1210:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni = (SNI*)XMALLOC(sizeof(SNI), NULL, DYNAMIC_TYPE_TLSX);
1211:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1212:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (sni) {
1213:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->type = type;
1214:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->next = NULL;
1215:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1216:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #ifndef NO_WOLFSSL_SERVER
1217:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->options = 0;
1218:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->status  = WOLFSSL_SNI_NO_MATCH;
1219:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #endif
1220:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1221:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (sni->type) {
1222:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_SNI_HOST_NAME:
1223:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sni->data.host_name = XMALLOC(size+1, NULL, DYNAMIC_TYPE_TLSX);
1224:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1225:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (sni->data.host_name) {
1226:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     XSTRNCPY(sni->data.host_name, (const char*)data, size);
1227:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     sni->data.host_name[size] = 0;
1228:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 } else {
1229:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     XFREE(sni, 0, DYNAMIC_TYPE_TLSX);
1230:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     sni = NULL;
1231:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
1232:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 49


1233:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1234:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             default: /* invalid type */
1235:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XFREE(sni, 0, DYNAMIC_TYPE_TLSX);
1236:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sni = NULL;
1237:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1238:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1239:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1240:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return sni;
1241:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1242:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1243:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Releases a SNI object. */
1244:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_SNI_Free(SNI* sni)
1245:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1246:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (sni) {
1247:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (sni->type) {
1248:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_SNI_HOST_NAME:
1249:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XFREE(sni->data.host_name, 0, DYNAMIC_TYPE_TLSX);
1250:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
1251:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1252:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1253:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(sni, 0, DYNAMIC_TYPE_TLSX);
1254:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1255:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1256:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1257:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Releases all SNI objects in the provided list. */
1258:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_SNI_FreeAll(SNI* list)
1259:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1260:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni;
1261:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1262:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((sni = list)) {
1263:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = sni->next;
1264:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_SNI_Free(sni);
1265:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1266:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1267:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1268:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Tells the buffered size of the SNI objects in a list. */
1269:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_SNI_GetSize(SNI* list)
1270:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1271:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni;
1272:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = OPAQUE16_LEN; /* list length */
1273:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1274:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((sni = list)) {
1275:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = sni->next;
1276:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1277:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += ENUM_LEN + OPAQUE16_LEN; /* sni type + sni length */
1278:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1279:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (sni->type) {
1280:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_SNI_HOST_NAME:
1281:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += XSTRLEN((char*)sni->data.host_name);
1282:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
1283:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1284:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1285:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1286:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
1287:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1288:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1289:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Writes the SNI objects of a list in a buffer. */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 50


1290:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_SNI_Write(SNI* list, byte* output)
1291:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1292:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni;
1293:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = 0;
1294:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = OPAQUE16_LEN; /* list length offset */
1295:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1296:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((sni = list)) {
1297:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = sni->next;
1298:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1299:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         output[offset++] = sni->type; /* sni type */
1300:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1301:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (sni->type) {
1302:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_SNI_HOST_NAME:
1303:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length = XSTRLEN((char*)sni->data.host_name);
1304:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1305:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 c16toa(length, output + offset); /* sni length */
1306:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += OPAQUE16_LEN;
1307:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1308:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XMEMCPY(output + offset, sni->data.host_name, length);
1309:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1310:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += length;
1311:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
1312:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1313:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1314:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1315:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(offset - OPAQUE16_LEN, output); /* writing list length */
1316:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1317:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
1318:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1319:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1320:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1321:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1322:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Finds a SNI object in the provided list. */
1323:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static SNI* TLSX_SNI_Find(SNI *list, byte type)
1324:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1325:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI *sni = list;
1326:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1327:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (sni && sni->type != type)
1328:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni = sni->next;
1329:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1330:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return sni;
1331:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1332:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1333:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1334:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Sets the status of a SNI object. */
1335:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_SNI_SetStatus(TLSX* extensions, byte type, byte status)
1336:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1337:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_SERVER_NAME);
1338:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni = TLSX_SNI_Find(extension ? extension->data : NULL, type);
1339:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1340:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (sni)
1341:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->status = status;
1342:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1343:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1344:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Gets the status of a SNI object. */
1345:..\acn-sdk-c\src\wolfSSL\src/tls.c **** byte TLSX_SNI_Status(TLSX* extensions, byte type)
1346:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 51


1347:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_SERVER_NAME);
1348:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni = TLSX_SNI_Find(extension ? extension->data : NULL, type);
1349:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1350:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (sni)
1351:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return sni->status;
1352:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1353:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1354:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1355:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1356:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_SERVER */
1357:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1358:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Parses a buffer of SNI extensions. */
1359:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_SNI_Parse(WOLFSSL* ssl, byte* input, word16 length,
1360:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
1361:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1362:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1363:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 size = 0;
1364:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0;
1365:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int cacheOnly = 0;
1366:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1367:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1368:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX *extension = TLSX_Find(ssl->extensions, TLSX_SERVER_NAME);
1369:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1370:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extension)
1371:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension = TLSX_Find(ssl->ctx->extensions, TLSX_SERVER_NAME);
1372:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1373:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)isRequest;
1374:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)input;
1375:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1376:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extension || !extension->data) {
1377:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(WOLFSSL_ALWAYS_KEEP_SNI) && !defined(NO_WOLFSSL_SERVER)
1378:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* This will keep SNI even though TLSX_UseSNI has not been called.
1379:..\acn-sdk-c\src\wolfSSL\src/tls.c ****          * Enable it so that the received sni is available to functions
1380:..\acn-sdk-c\src\wolfSSL\src/tls.c ****          * that use a custom callback when SNI is received */
1381:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         cacheOnly = 1;
1382:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Forcing SSL object to store SNI parameter");
1383:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
1384:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return isRequest ? 0             /* not using SNI.           */
1385:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          : BUFFER_ERROR; /* unexpected SNI response. */
1386:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1387:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1388:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1389:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!isRequest)
1390:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return length ? BUFFER_ERROR /* SNI response MUST be empty. */
1391:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                       : 0;           /* nothing else to do.         */
1392:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1393:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1394:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1395:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (OPAQUE16_LEN > length)
1396:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1397:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1398:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ato16(input, &size);
1399:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
1400:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1401:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* validating sni list length */
1402:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length != OPAQUE16_LEN + size)
1403:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 52


1404:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1405:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (size = 0; offset < length; offset += size) {
1406:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         SNI *sni = NULL;
1407:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte type = input[offset++];
1408:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1409:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (offset + OPAQUE16_LEN > length)
1410:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
1411:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1412:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset, &size);
1413:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN;
1414:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1415:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (offset + size > length)
1416:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
1417:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1418:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!cacheOnly && !(sni = TLSX_SNI_Find((SNI*)extension->data, type)))
1419:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             continue; /* not using this type of SNI. */
1420:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1421:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch(type) {
1422:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_SNI_HOST_NAME: {
1423:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 int matchStat;
1424:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 byte matched = cacheOnly ||
1425:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             ((XSTRLEN(sni->data.host_name) == size)
1426:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             && (XSTRNCMP(sni->data.host_name,
1427:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                        (const char*)input + offset, size) == 0));
1428:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1429:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (matched || sni->options & WOLFSSL_SNI_ANSWER_ON_MISMATCH) {
1430:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     int r = TLSX_UseSNI(&ssl->extensions,
1431:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     type, input + offset, size);
1432:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1433:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (r != SSL_SUCCESS)
1434:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return r; /* throws error. */
1435:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1436:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if(cacheOnly) {
1437:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         WOLFSSL_MSG("Forcing storage of SNI, Fake match");
1438:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         matchStat = WOLFSSL_SNI_FORCE_KEEP;
1439:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     } else if(matched) {
1440:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         WOLFSSL_MSG("SNI did match!");
1441:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         matchStat = WOLFSSL_SNI_REAL_MATCH;
1442:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     } else {
1443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         WOLFSSL_MSG("fake SNI match from ANSWER_ON_MISMATCH");
1444:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         matchStat = WOLFSSL_SNI_FAKE_MATCH;
1445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
1446:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1447:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     TLSX_SNI_SetStatus(ssl->extensions, type, matchStat);
1448:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1449:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if(!cacheOnly)
1450:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         TLSX_SetResponse(ssl, TLSX_SERVER_NAME);
1451:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1452:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 } else if (!(sni->options & WOLFSSL_SNI_CONTINUE_ON_MISMATCH)) {
1453:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     SendAlert(ssl, alert_fatal, unrecognized_name);
1454:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1455:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return UNKNOWN_SNI_HOST_NAME_E;
1456:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
1457:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
1458:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
1459:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1460:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 53


1461:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1462:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1463:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1464:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1465:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1466:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1467:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_SNI_VerifyParse(WOLFSSL* ssl,  byte isRequest)
1468:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1469:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)ssl;
1470:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1471:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1472:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #ifndef NO_WOLFSSL_SERVER
1473:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX* ctx_ext = TLSX_Find(ssl->ctx->extensions, TLSX_SERVER_NAME);
1474:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX* ssl_ext = TLSX_Find(ssl->extensions,      TLSX_SERVER_NAME);
1475:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         SNI* ctx_sni = ctx_ext ? ctx_ext->data : NULL;
1476:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         SNI* ssl_sni = ssl_ext ? ssl_ext->data : NULL;
1477:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         SNI* sni = NULL;
1478:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1479:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         for (; ctx_sni; ctx_sni = ctx_sni->next) {
1480:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ctx_sni->options & WOLFSSL_SNI_ABORT_ON_ABSENCE) {
1481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sni = TLSX_SNI_Find(ssl_sni, ctx_sni->type);
1482:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1483:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (sni) {
1484:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (sni->status != WOLFSSL_SNI_NO_MATCH)
1485:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         continue;
1486:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1487:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* if ssl level overrides ctx level, it is ok. */
1488:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if ((sni->options & WOLFSSL_SNI_ABORT_ON_ABSENCE) == 0)
1489:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         continue;
1490:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
1491:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1492:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 SendAlert(ssl, alert_fatal, handshake_failure);
1493:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return SNI_ABSENT_ERROR;
1494:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
1495:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1496:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1497:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         for (; ssl_sni; ssl_sni = ssl_sni->next) {
1498:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ssl_sni->options & WOLFSSL_SNI_ABORT_ON_ABSENCE) {
1499:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl_sni->status != WOLFSSL_SNI_NO_MATCH)
1500:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     continue;
1501:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1502:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 SendAlert(ssl, alert_fatal, handshake_failure);
1503:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return SNI_ABSENT_ERROR;
1504:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
1505:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1506:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #endif /* NO_WOLFSSL_SERVER */
1507:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1508:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1509:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1510:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1511:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1512:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseSNI(TLSX** extensions, byte type, const void* data, word16 size)
1513:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1514:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(*extensions, TLSX_SERVER_NAME);
1515:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI*  sni       = NULL;
1516:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1517:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL || data == NULL)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 54


1518:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
1519:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1520:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((sni = TLSX_SNI_New(type, data, size)) == NULL)
1521:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
1522:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1523:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extension) {
1524:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         int ret = TLSX_Push(extensions, TLSX_SERVER_NAME, (void*)sni);
1525:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ret != 0) {
1526:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX_SNI_Free(sni);
1527:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return ret;
1528:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1529:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1530:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
1531:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* push new SNI object to extension data. */
1532:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->next = (SNI*)extension->data;
1533:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->data = (void*)sni;
1534:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1535:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* remove duplicate SNI, there should be only one of each type. */
1536:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         do {
1537:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (sni->next && sni->next->type == type) {
1538:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 SNI *next = sni->next;
1539:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1540:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sni->next = next->next;
1541:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 TLSX_SNI_Free(next);
1542:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1543:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* there is no way to occur more than */
1544:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* two SNIs of the same type.         */
1545:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
1546:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
1547:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         } while ((sni = sni->next));
1548:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1549:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1550:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
1551:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1552:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1553:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1554:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1555:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Tells the SNI requested by the client. */
1556:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_SNI_GetRequest(TLSX* extensions, byte type, void** data)
1557:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1558:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_SERVER_NAME);
1559:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni = TLSX_SNI_Find(extension ? extension->data : NULL, type);
1560:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1561:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (sni && sni->status != WOLFSSL_SNI_NO_MATCH) {
1562:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (sni->type) {
1563:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_SNI_HOST_NAME:
1564:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 *data = sni->data.host_name;
1565:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return XSTRLEN(*data);
1566:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1567:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1568:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1569:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1570:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1571:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1572:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Sets the options for a SNI object. */
1573:..\acn-sdk-c\src\wolfSSL\src/tls.c **** void TLSX_SNI_SetOptions(TLSX* extensions, byte type, byte options)
1574:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 55


1575:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_SERVER_NAME);
1576:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SNI* sni = TLSX_SNI_Find(extension ? extension->data : NULL, type);
1577:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1578:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (sni)
1579:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         sni->options = options;
1580:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1581:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1582:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Retrieves a SNI request from a client hello buffer. */
1583:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_SNI_GetFromBuffer(const byte* clientHello, word32 helloSz,
1584:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                            byte type, byte* sni, word32* inOutSz)
1585:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1586:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 offset = 0;
1587:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 len32  = 0;
1588:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 len16  = 0;
1589:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1590:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < RECORD_HEADER_SZ + HANDSHAKE_HEADER_SZ + CLIENT_HELLO_FIRST)
1591:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return INCOMPLETE_DATA;
1592:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1593:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* TLS record header */
1594:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((enum ContentType) clientHello[offset++] != handshake) {
1595:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1596:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* checking for SSLv2.0 client hello according to: */
1597:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* http://tools.ietf.org/html/rfc4346#appendix-E.1 */
1598:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((enum HandShakeType) clientHello[++offset] == client_hello) {
1599:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += ENUM_LEN + VERSION_SZ; /* skip version */
1600:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1601:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ato16(clientHello + offset, &len16);
1602:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += OPAQUE16_LEN;
1603:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1604:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (len16 % 3) /* cipher_spec_length must be multiple of 3 */
1605:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR;
1606:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1607:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ato16(clientHello + offset, &len16);
1608:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* Returning SNI_UNSUPPORTED do not increment offset here */
1609:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1610:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (len16 != 0) /* session_id_length must be 0 */
1611:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR;
1612:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1613:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return SNI_UNSUPPORTED;
1614:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1615:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1616:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1617:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1618:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1619:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (clientHello[offset++] != SSLv3_MAJOR)
1620:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1621:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1622:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (clientHello[offset++] < TLSv1_MINOR)
1623:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return SNI_UNSUPPORTED;
1624:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1625:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ato16(clientHello + offset, &len16);
1626:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
1627:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1628:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (offset + len16 > helloSz)
1629:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return INCOMPLETE_DATA;
1630:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1631:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* Handshake header */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 56


1632:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((enum HandShakeType) clientHello[offset] != client_hello)
1633:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1634:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1635:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c24to32(clientHello + offset + 1, &len32);
1636:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += HANDSHAKE_HEADER_SZ;
1637:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1638:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (offset + len32 > helloSz)
1639:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1640:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1641:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* client hello */
1642:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += VERSION_SZ + RAN_LEN; /* version, random */
1643:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1644:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + clientHello[offset])
1645:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1646:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1647:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += ENUM_LEN + clientHello[offset]; /* skip session id */
1648:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1649:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* cypher suites */
1650:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + OPAQUE16_LEN)
1651:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1652:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1653:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ato16(clientHello + offset, &len16);
1654:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
1655:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1656:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + len16)
1657:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1658:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1659:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += len16; /* skip cypher suites */
1660:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1661:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* compression methods */
1662:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + 1)
1663:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1664:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1665:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + clientHello[offset])
1666:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1667:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1668:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += ENUM_LEN + clientHello[offset]; /* skip compression methods */
1669:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1670:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* extensions */
1671:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + OPAQUE16_LEN)
1672:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return 0; /* no extensions in client hello. */
1673:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1674:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ato16(clientHello + offset, &len16);
1675:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
1676:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1677:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (helloSz < offset + len16)
1678:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1679:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1680:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (len16 >= OPAQUE16_LEN + OPAQUE16_LEN) {
1681:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 extType;
1682:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 extLen;
1683:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1684:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(clientHello + offset, &extType);
1685:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN;
1686:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1687:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(clientHello + offset, &extLen);
1688:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 57


1689:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1690:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (helloSz < offset + extLen)
1691:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
1692:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1693:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (extType != TLSX_SERVER_NAME) {
1694:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += extLen; /* skip extension */
1695:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         } else {
1696:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             word16 listLen;
1697:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1698:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ato16(clientHello + offset, &listLen);
1699:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += OPAQUE16_LEN;
1700:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1701:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (helloSz < offset + listLen)
1702:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR;
1703:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1704:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             while (listLen > ENUM_LEN + OPAQUE16_LEN) {
1705:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 byte   sniType = clientHello[offset++];
1706:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 word16 sniLen;
1707:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1708:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ato16(clientHello + offset, &sniLen);
1709:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += OPAQUE16_LEN;
1710:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1711:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (helloSz < offset + sniLen)
1712:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return BUFFER_ERROR;
1713:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1714:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (sniType != type) {
1715:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset  += sniLen;
1716:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     listLen -= min(ENUM_LEN + OPAQUE16_LEN + sniLen, listLen);
1717:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     continue;
1718:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
1719:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1720:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 *inOutSz = min(sniLen, *inOutSz);
1721:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XMEMCPY(sni, clientHello + offset, *inOutSz);
1722:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1723:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return SSL_SUCCESS;
1724:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
1725:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1726:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1727:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         len16 -= min(2 * OPAQUE16_LEN + extLen, len16);
1728:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1729:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1730:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return len16 ? BUFFER_ERROR : 0;
1731:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1732:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1733:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1734:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1735:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_FREE_ALL     TLSX_SNI_FreeAll
1736:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_GET_SIZE     TLSX_SNI_GetSize
1737:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_WRITE        TLSX_SNI_Write
1738:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_PARSE        TLSX_SNI_Parse
1739:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_VERIFY_PARSE TLSX_SNI_VerifyParse
1740:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1741:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
1742:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1743:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_FREE_ALL(list)
1744:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_GET_SIZE(list)     0
1745:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_WRITE(a, b)        0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 58


1746:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_PARSE(a, b, c, d)  0
1747:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SNI_VERIFY_PARSE(a, b) 0
1748:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1749:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_SNI */
1750:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1751:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1752:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Max Fragment Length Negotiation                                            */
1753:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1754:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1755:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_MAX_FRAGMENT
1756:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1757:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_MFL_Write(byte* data, byte* output)
1758:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1759:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     output[0] = data[0];
1760:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1761:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ENUM_LEN;
1762:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1763:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1764:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_MFL_Parse(WOLFSSL* ssl, byte* input, word16 length,
1765:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
1766:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1767:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)isRequest;
1768:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1769:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length != ENUM_LEN)
1770:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1771:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1772:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (*input) {
1773:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_MFL_2_9 : ssl->max_fragment =  512; break;
1774:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_MFL_2_10: ssl->max_fragment = 1024; break;
1775:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_MFL_2_11: ssl->max_fragment = 2048; break;
1776:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_MFL_2_12: ssl->max_fragment = 4096; break;
1777:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_MFL_2_13: ssl->max_fragment = 8192; break;
1778:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1779:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         default:
1780:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             SendAlert(ssl, alert_fatal, illegal_parameter);
1781:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1782:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return UNKNOWN_MAX_FRAG_LEN_E;
1783:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1784:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1785:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1786:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1787:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         int r = TLSX_UseMaxFragment(&ssl->extensions, *input);
1788:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1789:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (r != SSL_SUCCESS) return r; /* throw error */
1790:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1791:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_SetResponse(ssl, TLSX_MAX_FRAGMENT_LENGTH);
1792:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1793:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1794:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1795:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1796:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1797:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1798:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseMaxFragment(TLSX** extensions, byte mfl)
1799:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1800:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* data = NULL;
1801:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int   ret  = 0;
1802:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 59


1803:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL)
1804:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
1805:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1806:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (mfl < WOLFSSL_MFL_2_9 || WOLFSSL_MFL_2_13 < mfl)
1807:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
1808:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1809:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((data = XMALLOC(ENUM_LEN, NULL, DYNAMIC_TYPE_TLSX)) == NULL)
1810:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
1811:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1812:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     data[0] = mfl;
1813:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1814:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* push new MFL extension. */
1815:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = TLSX_Push(extensions, TLSX_MAX_FRAGMENT_LENGTH, data)) != 0) {
1816:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(data, 0, DYNAMIC_TYPE_TLSX);
1817:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
1818:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1819:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1820:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
1821:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1822:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1823:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1824:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_FREE_ALL(data) XFREE(data, 0, DYNAMIC_TYPE_TLSX)
1825:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_GET_SIZE(data) ENUM_LEN
1826:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_WRITE          TLSX_MFL_Write
1827:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_PARSE          TLSX_MFL_Parse
1828:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1829:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
1830:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1831:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_FREE_ALL(a)
1832:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_GET_SIZE(a)       0
1833:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_WRITE(a, b)       0
1834:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define MFL_PARSE(a, b, c, d) 0
1835:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1836:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_MAX_FRAGMENT */
1837:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1838:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1839:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Truncated HMAC                                                             */
1840:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1841:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1842:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_TRUNCATED_HMAC
1843:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1844:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_THM_Parse(WOLFSSL* ssl, byte* input, word16 length,
1845:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
1846:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1847:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)isRequest;
1848:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1849:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length != 0 || input == NULL)
1850:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
1851:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1852:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
1853:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1854:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         int r = TLSX_UseTruncatedHMAC(&ssl->extensions);
1855:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1856:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (r != SSL_SUCCESS)
1857:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return r; /* throw error */
1858:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1859:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_SetResponse(ssl, TLSX_TRUNCATED_HMAC);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 60


1860:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1861:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1862:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1863:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ssl->truncated_hmac = 1;
1864:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1865:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1866:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1867:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1868:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseTruncatedHMAC(TLSX** extensions)
1869:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1870:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
1871:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1872:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL)
1873:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
1874:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1875:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = TLSX_Push(extensions, TLSX_TRUNCATED_HMAC, NULL)) != 0)
1876:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
1877:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1878:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
1879:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1880:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1881:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define THM_PARSE TLSX_THM_Parse
1882:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1883:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
1884:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1885:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define THM_PARSE(a, b, c, d) 0
1886:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1887:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_TRUNCATED_HMAC */
1888:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1889:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1890:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Certificate Status Request                                                 */
1891:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
1892:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1893:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_CERTIFICATE_STATUS_REQUEST
1894:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1895:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_CSR_Free(CertificateStatusRequest* csr)
1896:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1897:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (csr->status_type) {
1898:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_CSR_OCSP:
1899:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             FreeOcspRequest(&csr->request.ocsp);
1900:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         break;
1901:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1902:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1903:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XFREE(csr, NULL, DYNAMIC_TYPE_TLSX);
1904:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1905:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1906:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_CSR_GetSize(CertificateStatusRequest* csr, byte isRequest)
1907:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1908:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 size = 0;
1909:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1910:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* shut up compiler warnings */
1911:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) csr; (void) isRequest;
1912:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1913:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
1914:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1915:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr->status_type) {
1916:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR_OCSP:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 61


1917:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 size += ENUM_LEN + 2 * OPAQUE16_LEN;
1918:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1919:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (csr->request.ocsp.nonceSz)
1920:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     size += OCSP_NONCE_EXT_SZ;
1921:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
1922:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1923:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1924:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1925:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1926:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return size;
1927:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1928:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1929:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_CSR_Write(CertificateStatusRequest* csr, byte* output,
1930:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
1931:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1932:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* shut up compiler warnings */
1933:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) csr; (void) output; (void) isRequest;
1934:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1935:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
1936:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
1937:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 offset = 0;
1938:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 length = 0;
1939:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1940:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* type */
1941:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         output[offset++] = csr->status_type;
1942:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1943:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr->status_type) {
1944:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR_OCSP:
1945:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* responder id list */
1946:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 c16toa(0, output + offset);
1947:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += OPAQUE16_LEN;
1948:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1949:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* request extensions */
1950:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (csr->request.ocsp.nonceSz)
1951:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     length = EncodeOcspRequestExtensions(
1952:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  &csr->request.ocsp,
1953:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  output + offset + OPAQUE16_LEN,
1954:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  OCSP_NONCE_EXT_SZ);
1955:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1956:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 c16toa(length, output + offset);
1957:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += OPAQUE16_LEN + length;
1958:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1959:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
1960:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
1961:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1962:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return offset;
1963:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
1964:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
1965:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1966:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
1967:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
1968:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1969:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_CSR_Parse(WOLFSSL* ssl, byte* input, word16 length,
1970:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
1971:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
1972:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret;
1973:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 62


1974:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* shut up compiler warnings */
1975:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) ssl; (void) input;
1976:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1977:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!isRequest) {
1978:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
1979:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX* extension = TLSX_Find(ssl->extensions, TLSX_STATUS_REQUEST);
1980:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         CertificateStatusRequest* csr = extension ? extension->data : NULL;
1981:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1982:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!csr) {
1983:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* look at context level */
1984:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1985:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             extension = TLSX_Find(ssl->ctx->extensions, TLSX_STATUS_REQUEST);
1986:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             csr = extension ? extension->data : NULL;
1987:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1988:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (!csr)
1989:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR; /* unexpected extension */
1990:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1991:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* enable extension at ssl level */
1992:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ret = TLSX_UseCertificateStatusRequest(&ssl->extensions,
1993:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                 csr->status_type, csr->options);
1994:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ret != SSL_SUCCESS)
1995:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return ret;
1996:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
1997:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             switch (csr->status_type) {
1998:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR_OCSP:
1999:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* propagate nonce */
2000:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (csr->request.ocsp.nonceSz) {
2001:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         OcspRequest* request =
2002:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                            TLSX_CSR_GetRequest(ssl->extensions);
2003:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2004:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (request) {
2005:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             XMEMCPY(request->nonce, csr->request.ocsp.nonce,
2006:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     csr->request.ocsp.nonceSz);
2007:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             request->nonceSz = csr->request.ocsp.nonceSz;
2008:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         }
2009:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
2010:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
2011:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2012:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2013:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2014:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->status_request = 1;
2015:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2016:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return length ? BUFFER_ERROR : 0; /* extension_data MUST be empty. */
2017:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2018:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2019:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
2020:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
2021:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte   status_type;
2022:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 offset = 0;
2023:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 size = 0;
2024:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2025:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (length < ENUM_LEN)
2026:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
2027:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2028:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         status_type = input[offset++];
2029:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2030:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (status_type) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 63


2031:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR_OCSP: {
2032:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2033:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* skip responder_id_list */
2034:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (length - offset < OPAQUE16_LEN)
2035:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return BUFFER_ERROR;
2036:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2037:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ato16(input + offset, &size);
2038:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += OPAQUE16_LEN + size;
2039:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2040:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* skip request_extensions */
2041:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (length - offset < OPAQUE16_LEN)
2042:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return BUFFER_ERROR;
2043:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2044:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ato16(input + offset, &size);
2045:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += OPAQUE16_LEN + size;
2046:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2047:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (offset > length)
2048:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return BUFFER_ERROR;
2049:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2050:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* is able to send OCSP response? */
2051:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl->ctx->cm == NULL || !ssl->ctx->cm->ocspStaplingEnabled)
2052:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return 0;
2053:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2054:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2055:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2056:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2057:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* if using status_request and already sending it, skip this one */
2058:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifdef HAVE_CERTIFICATE_STATUS_REQUEST_V2
2059:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->status_request_v2)
2060:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 0;
2061:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
2062:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2063:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* accept the first good status_type and return */
2064:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = TLSX_UseCertificateStatusRequest(&ssl->extensions, status_type,
2065:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                              0);
2066:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ret != SSL_SUCCESS)
2067:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return ret; /* throw error */
2068:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2069:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_SetResponse(ssl, TLSX_STATUS_REQUEST);
2070:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->status_request = status_type;
2071:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2072:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2073:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2074:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2075:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2076:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2077:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2078:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_CSR_InitRequest(TLSX* extensions, DecodedCert* cert)
2079:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2080:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_STATUS_REQUEST);
2081:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequest* csr = extension ? extension->data : NULL;
2082:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
2083:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2084:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (csr) {
2085:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr->status_type) {
2086:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR_OCSP: {
2087:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 byte nonce[MAX_OCSP_NONCE_SZ];
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 64


2088:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 int  nonceSz = csr->request.ocsp.nonceSz;
2089:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2090:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* preserve nonce */
2091:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XMEMCPY(nonce, csr->request.ocsp.nonce, nonceSz);
2092:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2093:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if ((ret = InitOcspRequest(&csr->request.ocsp, cert, 0)) != 0)
2094:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return ret;
2095:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2096:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* restore nonce */
2097:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XMEMCPY(csr->request.ocsp.nonce, nonce, nonceSz);
2098:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 csr->request.ocsp.nonceSz = nonceSz;
2099:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2100:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2101:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2102:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2103:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2104:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
2105:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2106:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2107:..\acn-sdk-c\src\wolfSSL\src/tls.c **** void* TLSX_CSR_GetRequest(TLSX* extensions)
2108:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2109:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_STATUS_REQUEST);
2110:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequest* csr = extension ? extension->data : NULL;
2111:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2112:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (csr) {
2113:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr->status_type) {
2114:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR_OCSP:
2115:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return &csr->request.ocsp;
2116:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2117:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2118:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2119:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2120:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return NULL;
2121:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2122:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2123:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_CSR_ForceRequest(WOLFSSL* ssl)
2124:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2125:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(ssl->extensions, TLSX_STATUS_REQUEST);
2126:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequest* csr = extension ? extension->data : NULL;
2127:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2128:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (csr) {
2129:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr->status_type) {
2130:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR_OCSP:
2131:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl->ctx->cm->ocspEnabled)
2132:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return CheckOcspRequest(ssl->ctx->cm->ocsp,
2133:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                       &csr->request.ocsp, NULL);
2134:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 else
2135:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return OCSP_LOOKUP_FAIL;
2136:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2137:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2138:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2139:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2140:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2141:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2142:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseCertificateStatusRequest(TLSX** extensions, byte status_type,
2143:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                    byte options)
2144:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 65


2145:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequest* csr = NULL;
2146:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
2147:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2148:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extensions || status_type != WOLFSSL_CSR_OCSP)
2149:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
2150:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2151:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr = (CertificateStatusRequest*)
2152:..\acn-sdk-c\src\wolfSSL\src/tls.c ****              XMALLOC(sizeof(CertificateStatusRequest), NULL, DYNAMIC_TYPE_TLSX);
2153:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!csr)
2154:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
2155:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2156:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ForceZero(csr, sizeof(CertificateStatusRequest));
2157:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2158:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr->status_type = status_type;
2159:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr->options     = options;
2160:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2161:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (csr->status_type) {
2162:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_CSR_OCSP:
2163:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (options & WOLFSSL_CSR_OCSP_USE_NONCE) {
2164:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WC_RNG rng;
2165:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (wc_InitRng(&rng) == 0) {
2167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (wc_RNG_GenerateBlock(&rng, csr->request.ocsp.nonce,
2168:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                         MAX_OCSP_NONCE_SZ) == 0)
2169:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         csr->request.ocsp.nonceSz = MAX_OCSP_NONCE_SZ;
2170:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2171:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     wc_FreeRng(&rng);
2172:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
2173:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2174:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         break;
2175:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2176:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2177:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = TLSX_Push(extensions, TLSX_STATUS_REQUEST, csr)) != 0) {
2178:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(csr, NULL, DYNAMIC_TYPE_TLSX);
2179:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
2180:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2181:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2182:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
2183:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2184:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2185:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_FREE_ALL TLSX_CSR_Free
2186:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_GET_SIZE TLSX_CSR_GetSize
2187:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_WRITE    TLSX_CSR_Write
2188:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_PARSE    TLSX_CSR_Parse
2189:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2190:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
2191:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2192:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_FREE_ALL(data)
2193:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_GET_SIZE(a, b)    0
2194:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_WRITE(a, b, c)    0
2195:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR_PARSE(a, b, c, d) 0
2196:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2197:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_CERTIFICATE_STATUS_REQUEST */
2198:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2199:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
2200:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Certificate Status Request v2                                              */
2201:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 66


2202:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2203:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_CERTIFICATE_STATUS_REQUEST_V2
2204:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2205:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_CSR2_FreeAll(CertificateStatusRequestItemV2* csr2)
2206:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2207:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequestItemV2* next;
2208:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2209:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (; csr2; csr2 = next) {
2210:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         next = csr2->next;
2211:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2212:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr2->status_type) {
2213:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR2_OCSP:
2214:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR2_OCSP_MULTI:
2215:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 while(csr2->requests--)
2216:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     FreeOcspRequest(&csr2->request.ocsp[csr2->requests]);
2217:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2218:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2219:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2220:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(csr2, NULL, DYNAMIC_TYPE_TLSX);
2221:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2222:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2223:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2224:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_CSR2_GetSize(CertificateStatusRequestItemV2* csr2,
2225:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
2226:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2227:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 size = 0;
2228:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2229:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* shut up compiler warnings */
2230:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) csr2; (void) isRequest;
2231:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2232:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
2233:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
2234:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         CertificateStatusRequestItemV2* next;
2235:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2236:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         for (size = OPAQUE16_LEN; csr2; csr2 = next) {
2237:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             next = csr2->next;
2238:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2239:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             switch (csr2->status_type) {
2240:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP:
2241:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP_MULTI:
2242:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     size += ENUM_LEN + 3 * OPAQUE16_LEN;
2243:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2244:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (csr2->request.ocsp[0].nonceSz)
2245:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         size += OCSP_NONCE_EXT_SZ;
2246:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
2247:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2248:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2249:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2250:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2251:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2252:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return size;
2253:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2254:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2255:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_CSR2_Write(CertificateStatusRequestItemV2* csr2,
2256:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                    byte* output, byte isRequest)
2257:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2258:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* shut up compiler warnings */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 67


2259:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) csr2; (void) output; (void) isRequest;
2260:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2261:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
2262:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
2263:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 offset;
2264:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 length;
2265:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2266:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         for (offset = OPAQUE16_LEN; csr2 != NULL; csr2 = csr2->next) {
2267:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* status_type */
2268:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             output[offset++] = csr2->status_type;
2269:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2270:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* request */
2271:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             switch (csr2->status_type) {
2272:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP:
2273:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP_MULTI:
2274:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* request_length */
2275:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     length = 2 * OPAQUE16_LEN;
2276:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2277:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (csr2->request.ocsp[0].nonceSz)
2278:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         length += OCSP_NONCE_EXT_SZ;
2279:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2280:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     c16toa(length, output + offset);
2281:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += OPAQUE16_LEN;
2282:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2283:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* responder id list */
2284:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     c16toa(0, output + offset);
2285:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += OPAQUE16_LEN;
2286:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2287:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* request extensions */
2288:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     length = 0;
2289:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2290:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (csr2->request.ocsp[0].nonceSz)
2291:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         length = EncodeOcspRequestExtensions(
2292:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  &csr2->request.ocsp[0],
2293:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  output + offset + OPAQUE16_LEN,
2294:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  OCSP_NONCE_EXT_SZ);
2295:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2296:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     c16toa(length, output + offset);
2297:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += OPAQUE16_LEN + length;
2298:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
2299:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2300:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2301:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2302:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* list size */
2303:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         c16toa(offset - OPAQUE16_LEN, output);
2304:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2305:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return offset;
2306:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2307:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2308:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2309:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2310:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2311:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2312:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_CSR2_Parse(WOLFSSL* ssl, byte* input, word16 length,
2313:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
2314:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2315:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 68


2316:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2317:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* shut up compiler warnings */
2318:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) ssl; (void) input;
2319:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2320:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!isRequest) {
2321:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
2322:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX* extension = TLSX_Find(ssl->extensions, TLSX_STATUS_REQUEST_V2);
2323:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         CertificateStatusRequestItemV2* csr2 = extension ? extension->data
2324:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                          : NULL;
2325:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2326:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!csr2) {
2327:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* look at context level */
2328:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2329:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             extension = TLSX_Find(ssl->ctx->extensions, TLSX_STATUS_REQUEST_V2);
2330:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             csr2 = extension ? extension->data : NULL;
2331:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2332:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (!csr2)
2333:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR; /* unexpected extension */
2334:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2335:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* enable extension at ssl level */
2336:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             for (; csr2; csr2 = csr2->next) {
2337:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = TLSX_UseCertificateStatusRequestV2(&ssl->extensions,
2338:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                               csr2->status_type, csr2->options);
2339:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ret != SSL_SUCCESS)
2340:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return ret;
2341:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2342:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 switch (csr2->status_type) {
2343:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     case WOLFSSL_CSR2_OCSP:
2344:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         /* followed by */
2345:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     case WOLFSSL_CSR2_OCSP_MULTI:
2346:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         /* propagate nonce */
2347:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (csr2->request.ocsp[0].nonceSz) {
2348:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             OcspRequest* request =
2349:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                         TLSX_CSR2_GetRequest(ssl->extensions,
2350:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                           csr2->status_type, 0);
2351:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2352:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             if (request) {
2353:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                 XMEMCPY(request->nonce,
2354:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                         csr2->request.ocsp[0].nonce,
2355:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                         csr2->request.ocsp[0].nonceSz);
2356:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2357:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                 request->nonceSz =
2358:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                   csr2->request.ocsp[0].nonceSz;
2359:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             }
2360:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         }
2361:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     break;
2362:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
2363:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2364:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2365:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2366:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2367:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->status_request_v2 = 1;
2368:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2369:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return length ? BUFFER_ERROR : 0; /* extension_data MUST be empty. */
2370:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2371:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2372:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 69


2373:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
2374:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte   status_type;
2375:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 request_length;
2376:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 offset = 0;
2377:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 size = 0;
2378:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2379:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* list size */
2380:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset, &request_length);
2381:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN;
2382:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2383:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (length - OPAQUE16_LEN != request_length)
2384:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
2385:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2386:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         while (length > offset) {
2387:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (length - offset < ENUM_LEN + OPAQUE16_LEN)
2388:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR;
2389:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2390:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             status_type = input[offset++];
2391:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2392:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ato16(input + offset, &request_length);
2393:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += OPAQUE16_LEN;
2394:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2395:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (length - offset < request_length)
2396:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return BUFFER_ERROR;
2397:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2398:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             switch (status_type) {
2399:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP:
2400:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP_MULTI:
2401:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* skip responder_id_list */
2402:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (length - offset < OPAQUE16_LEN)
2403:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return BUFFER_ERROR;
2404:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2405:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ato16(input + offset, &size);
2406:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += OPAQUE16_LEN + size;
2407:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2408:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* skip request_extensions */
2409:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (length - offset < OPAQUE16_LEN)
2410:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return BUFFER_ERROR;
2411:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2412:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ato16(input + offset, &size);
2413:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += OPAQUE16_LEN + size;
2414:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2415:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (offset > length)
2416:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return BUFFER_ERROR;
2417:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2418:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* is able to send OCSP response? */
2419:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (ssl->ctx->cm == NULL
2420:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     || !ssl->ctx->cm->ocspStaplingEnabled)
2421:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         continue;
2422:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
2423:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2424:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 default:
2425:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* unknown status type, skipping! */
2426:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += request_length;
2427:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     continue;
2428:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2429:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 70


2430:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* if using status_request and already sending it, skip this one */
2431:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             #ifdef HAVE_CERTIFICATE_STATUS_REQUEST
2432:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ssl->status_request)
2433:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return 0;
2434:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             #endif
2435:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2436:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* accept the first good status_type and return */
2437:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ret = TLSX_UseCertificateStatusRequestV2(&ssl->extensions,
2438:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                 status_type, 0);
2439:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ret != SSL_SUCCESS)
2440:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return ret; /* throw error */
2441:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2442:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX_SetResponse(ssl, TLSX_STATUS_REQUEST_V2);
2443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ssl->status_request_v2 = status_type;
2444:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 0;
2446:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2447:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2448:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2449:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2450:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2451:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2452:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2453:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_CSR2_InitRequests(TLSX* extensions, DecodedCert* cert, byte isPeer)
2454:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2455:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_STATUS_REQUEST_V2);
2456:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequestItemV2* csr2 = extension ? extension->data : NULL;
2457:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
2458:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2459:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (; csr2; csr2 = csr2->next) {
2460:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr2->status_type) {
2461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR2_OCSP:
2462:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (!isPeer || csr2->requests != 0)
2463:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     break;
2464:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2465:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* followed by */
2466:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2467:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR2_OCSP_MULTI: {
2468:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (csr2->requests < 1 + MAX_CHAIN_DEPTH) {
2469:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     byte nonce[MAX_OCSP_NONCE_SZ];
2470:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     int  nonceSz = csr2->request.ocsp[0].nonceSz;
2471:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2472:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* preserve nonce, replicating nonce of ocsp[0] */
2473:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     XMEMCPY(nonce, csr2->request.ocsp[0].nonce, nonceSz);
2474:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2475:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if ((ret = InitOcspRequest(
2476:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             &csr2->request.ocsp[csr2->requests], cert, 0)) != 0)
2477:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return ret;
2478:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2479:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* restore nonce */
2480:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     XMEMCPY(csr2->request.ocsp[csr2->requests].nonce,
2481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                 nonce, nonceSz);
2482:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     csr2->request.ocsp[csr2->requests].nonceSz = nonceSz;
2483:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     csr2->requests++;
2484:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
2485:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2486:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 71


2487:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2488:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2489:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2490:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
2491:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2492:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2493:..\acn-sdk-c\src\wolfSSL\src/tls.c **** void* TLSX_CSR2_GetRequest(TLSX* extensions, byte status_type, byte index)
2494:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2495:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(extensions, TLSX_STATUS_REQUEST_V2);
2496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequestItemV2* csr2 = extension ? extension->data : NULL;
2497:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2498:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (; csr2; csr2 = csr2->next) {
2499:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (csr2->status_type == status_type) {
2500:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             switch (csr2->status_type) {
2501:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP:
2502:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* followed by */
2503:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2504:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 case WOLFSSL_CSR2_OCSP_MULTI:
2505:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* requests are initialized in the reverse order */
2506:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return index < csr2->requests
2507:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          ? &csr2->request.ocsp[csr2->requests - index - 1]
2508:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                          : NULL;
2509:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
2510:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2511:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2512:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2513:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2514:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return NULL;
2515:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2516:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2517:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_CSR2_ForceRequest(WOLFSSL* ssl)
2518:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2519:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(ssl->extensions, TLSX_STATUS_REQUEST_V2);
2520:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequestItemV2* csr2 = extension ? extension->data : NULL;
2521:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* forces only the first one */
2523:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (csr2) {
2524:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (csr2->status_type) {
2525:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR2_OCSP:
2526:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* followed by */
2527:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2528:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_CSR2_OCSP_MULTI:
2529:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl->ctx->cm->ocspEnabled)
2530:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return CheckOcspRequest(ssl->ctx->cm->ocsp,
2531:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                   &csr2->request.ocsp[0], NULL);
2532:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 else
2533:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return OCSP_LOOKUP_FAIL;
2534:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2535:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2536:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2537:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2538:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2539:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2540:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseCertificateStatusRequestV2(TLSX** extensions, byte status_type,
2541:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                    byte options)
2542:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2543:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = NULL;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 72


2544:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     CertificateStatusRequestItemV2* csr2 = NULL;
2545:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
2546:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2547:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extensions)
2548:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
2549:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2550:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (status_type != WOLFSSL_CSR2_OCSP
2551:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     &&  status_type != WOLFSSL_CSR2_OCSP_MULTI)
2552:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
2553:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2554:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr2 = (CertificateStatusRequestItemV2*)
2555:..\acn-sdk-c\src\wolfSSL\src/tls.c ****        XMALLOC(sizeof(CertificateStatusRequestItemV2), NULL, DYNAMIC_TYPE_TLSX);
2556:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!csr2)
2557:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
2558:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2559:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ForceZero(csr2, sizeof(CertificateStatusRequestItemV2));
2560:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2561:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr2->status_type = status_type;
2562:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr2->options     = options;
2563:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     csr2->next        = NULL;
2564:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2565:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (csr2->status_type) {
2566:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_CSR2_OCSP:
2567:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_CSR2_OCSP_MULTI:
2568:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (options & WOLFSSL_CSR2_OCSP_USE_NONCE) {
2569:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WC_RNG rng;
2570:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2571:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (wc_InitRng(&rng) == 0) {
2572:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (wc_RNG_GenerateBlock(&rng, csr2->request.ocsp[0].nonce,
2573:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                         MAX_OCSP_NONCE_SZ) == 0)
2574:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         csr2->request.ocsp[0].nonceSz = MAX_OCSP_NONCE_SZ;
2575:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2576:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     wc_FreeRng(&rng);
2577:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
2578:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2579:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         break;
2580:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2581:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2582:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* append new item */
2583:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((extension = TLSX_Find(*extensions, TLSX_STATUS_REQUEST_V2))) {
2584:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         CertificateStatusRequestItemV2* last =
2585:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                (CertificateStatusRequestItemV2*)extension->data;
2586:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2587:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         for (; last->next; last = last->next);
2588:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2589:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         last->next = csr2;
2590:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2591:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else if ((ret = TLSX_Push(extensions, TLSX_STATUS_REQUEST_V2, csr2))) {
2592:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(csr2, NULL, DYNAMIC_TYPE_TLSX);
2593:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
2594:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2595:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2596:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
2597:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2598:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2599:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_FREE_ALL TLSX_CSR2_FreeAll
2600:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_GET_SIZE TLSX_CSR2_GetSize
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 73


2601:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_WRITE    TLSX_CSR2_Write
2602:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_PARSE    TLSX_CSR2_Parse
2603:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2604:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
2605:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2606:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_FREE_ALL(data)
2607:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_GET_SIZE(a, b)    0
2608:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_WRITE(a, b, c)    0
2609:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define CSR2_PARSE(a, b, c, d) 0
2610:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2611:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_CERTIFICATE_STATUS_REQUEST_V2 */
2612:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2613:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
2614:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Supported Elliptic Curves                                                  */
2615:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
2616:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2617:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_SUPPORTED_CURVES
2618:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2619:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef HAVE_ECC
2620:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #error Elliptic Curves Extension requires Elliptic Curve Cryptography. \
2621:..\acn-sdk-c\src\wolfSSL\src/tls.c ****        Use --enable-ecc in the configure script or define HAVE_ECC.
2622:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2623:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2624:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_EllipticCurve_FreeAll(EllipticCurve* list)
2625:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2626:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     EllipticCurve* curve;
2627:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2628:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((curve = list)) {
2629:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = curve->next;
2630:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(curve, 0, DYNAMIC_TYPE_TLSX);
2631:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2632:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2633:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2634:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_EllipticCurve_Append(EllipticCurve** list, word16 name)
2635:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2636:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     EllipticCurve* curve = NULL;
2637:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2638:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (list == NULL)
2639:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
2640:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2641:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     curve = (EllipticCurve*)XMALLOC(sizeof(EllipticCurve), NULL,
2642:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                              DYNAMIC_TYPE_TLSX);
2643:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (curve == NULL)
2644:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
2645:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2646:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     curve->name = name;
2647:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     curve->next = *list;
2648:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2649:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *list = curve;
2650:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2651:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2652:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2653:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2654:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
2655:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2656:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_EllipticCurve_ValidateRequest(WOLFSSL* ssl, byte* semaphore)
2657:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 74


2658:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int i;
2659:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2660:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (i = 0; i < ssl->suites->suiteSz; i+= 2)
2661:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->suites->suites[i] == ECC_BYTE ||
2662:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                           ssl->suites->suites[i] == CHACHA_BYTE)
2663:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return;
2664:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2665:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* turns semaphore on to avoid sending this extension. */
2666:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TURN_ON(semaphore, TLSX_ToSemaphore(TLSX_SUPPORTED_GROUPS));
2667:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2668:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2669:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_EllipticCurve_GetSize(EllipticCurve* list)
2670:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2671:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     EllipticCurve* curve;
2672:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = OPAQUE16_LEN; /* list length */
2673:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2674:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((curve = list)) {
2675:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = curve->next;
2676:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE16_LEN; /* curve length */
2677:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2678:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2679:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
2680:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2681:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2682:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_EllipticCurve_WriteR(EllipticCurve* curve, byte* output);
2683:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_EllipticCurve_WriteR(EllipticCurve* curve, byte* output)
2684:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2685:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0;
2686:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2687:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!curve)
2688:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return offset;
2689:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2690:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset = TLSX_EllipticCurve_WriteR(curve->next, output);
2691:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(curve->name, output + offset);
2692:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2693:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return OPAQUE16_LEN + offset;
2694:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2695:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2696:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_EllipticCurve_Write(EllipticCurve* list, byte* output)
2697:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2698:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = TLSX_EllipticCurve_WriteR(list, output + OPAQUE16_LEN);
2699:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2700:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(length, output); /* writing list length */
2701:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2702:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return OPAQUE16_LEN + length;
2703:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2704:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2705:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_CLIENT */
2706:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
2707:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2708:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_EllipticCurve_Parse(WOLFSSL* ssl, byte* input, word16 length,
2709:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
2710:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2711:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset;
2712:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 name;
2713:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int r;
2714:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 75


2715:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void) isRequest; /* shut up compiler! */
2716:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2717:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (OPAQUE16_LEN > length || length % OPAQUE16_LEN)
2718:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
2719:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2720:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ato16(input, &offset);
2721:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2722:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* validating curve list length */
2723:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length != OPAQUE16_LEN + offset)
2724:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
2725:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2726:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (offset) {
2727:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset, &name);
2728:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset -= OPAQUE16_LEN;
2729:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2730:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         r = TLSX_UseSupportedCurve(&ssl->extensions, name);
2731:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2732:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (r != SSL_SUCCESS) return r; /* throw error */
2733:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2734:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2735:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
2736:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2737:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2738:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_ValidateEllipticCurves(WOLFSSL* ssl, byte first, byte second) {
2739:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX*          extension = (first == ECC_BYTE || first == CHACHA_BYTE)
2740:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                              ? TLSX_Find(ssl->extensions, TLSX_SUPPORTED_GROUPS)
2741:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                              : NULL;
2742:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     EllipticCurve* curve     = NULL;
2743:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32         oid       = 0;
2744:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16         octets    = 0; /* according to 'ecc_set_type ecc_sets[];' */
2745:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int            sig       = 0; /* validate signature */
2746:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int            key       = 0; /* validate key       */
2747:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2748:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)oid;
2749:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)octets;
2750:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2751:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extension)
2752:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return 1; /* no suite restriction */
2753:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2754:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (curve = extension->data; curve && !(sig && key); curve = curve->next) {
2755:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2756:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (curve->name) {
2757:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC160)
2758:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_ECC_SECP160R1: oid = ECC_160R1; octets = 20; break;
2759:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2760:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC192)
2761:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_ECC_SECP192R1: oid = ECC_192R1; octets = 24; break;
2762:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2763:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC224)
2764:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_ECC_SECP224R1: oid = ECC_224R1; octets = 28; break;
2765:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2766:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_ALL_CURVES) || !defined(NO_ECC256)
2767:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_ECC_SECP256R1: oid = ECC_256R1; octets = 32; break;
2768:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2769:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC384)
2770:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_ECC_SECP384R1: oid = ECC_384R1; octets = 48; break;
2771:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 76


2772:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #if defined(HAVE_ALL_CURVES) || defined(HAVE_ECC521)
2773:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_ECC_SECP521R1: oid = ECC_521R1; octets = 66; break;
2774:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2775:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             default: continue; /* unsupported curve */
2776:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2777:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2778:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (first == ECC_BYTE) {
2779:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (second) {
2780:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_DSA
2781:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* ECDHE_ECDSA */
2782:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA:
2783:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA:
2784:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_RC4_128_SHA:
2785:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA:
2786:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256:
2787:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384:
2788:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:
2789:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:
2790:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8:
2791:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8:
2792:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig |= ssl->pkCurveOID == oid;
2793:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key |= ssl->eccTempKeySz == octets;
2794:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2795:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2796:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* ECDH_ECDSA */
2797:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA:
2798:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA:
2799:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_RC4_128_SHA:
2800:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA:
2801:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256:
2802:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384:
2803:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256:
2804:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384:
2805:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig |= ssl->pkCurveOID == oid;
2806:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key |= ssl->pkCurveOID == oid;
2807:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2808:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2809:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_RSA
2810:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* ECDHE_RSA */
2811:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:
2812:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:
2813:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_RC4_128_SHA:
2814:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA:
2815:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256:
2816:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384:
2817:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:
2818:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:
2819:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig = 1;
2820:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key |= ssl->eccTempKeySz == octets;
2821:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2822:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2823:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* ECDH_RSA */
2824:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA:
2825:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA:
2826:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_RC4_128_SHA:
2827:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA:
2828:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 77


2829:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384:
2830:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256:
2831:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384:
2832:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig = 1;
2833:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key |= ssl->pkCurveOID == oid;
2834:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2835:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2836:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             default:
2837:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig = 1;
2838:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key = 1;
2839:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2840:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2841:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2842:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2843:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* ChaCha20-Poly1305 ECC cipher suites */
2844:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (first == CHACHA_BYTE) {
2845:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (second) {
2846:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_DSA
2847:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* ECDHE_ECDSA */
2848:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 :
2849:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_ECDSA_WITH_CHACHA20_OLD_POLY1305_SHA256 :
2850:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig |= ssl->pkCurveOID == oid;
2851:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key |= ssl->eccTempKeySz == octets;
2852:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2853:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2854:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_RSA
2855:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* ECDHE_RSA */
2856:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 :
2857:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLS_ECDHE_RSA_WITH_CHACHA20_OLD_POLY1305_SHA256 :
2858:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig = 1;
2859:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key |= ssl->eccTempKeySz == octets;
2860:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2861:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2862:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             default:
2863:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 sig = 1;
2864:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key = 1;
2865:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
2866:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2867:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2868:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2869:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2870:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return sig && key;
2871:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2872:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2873:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_SERVER */
2874:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2875:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseSupportedCurve(TLSX** extensions, word16 name)
2876:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2877:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX*          extension = TLSX_Find(*extensions, TLSX_SUPPORTED_GROUPS);
2878:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     EllipticCurve* curve     = NULL;
2879:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int            ret       = 0;
2880:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2881:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL)
2882:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
2883:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2884:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = TLSX_EllipticCurve_Append(&curve, name)) != 0)
2885:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 78


2886:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2887:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extension) {
2888:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((ret = TLSX_Push(extensions, TLSX_SUPPORTED_GROUPS, curve)) != 0) {
2889:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XFREE(curve, 0, DYNAMIC_TYPE_TLSX);
2890:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return ret;
2891:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2892:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2893:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
2894:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* push new EllipticCurve object to extension data. */
2895:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         curve->next = (EllipticCurve*)extension->data;
2896:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension->data = (void*)curve;
2897:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2898:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* look for another curve of the same name to remove (replacement) */
2899:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         do {
2900:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (curve->next && curve->next->name == name) {
2901:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 EllipticCurve *next = curve->next;
2902:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2903:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 curve->next = next->next;
2904:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XFREE(next, 0, DYNAMIC_TYPE_TLSX);
2905:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2906:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
2907:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2908:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         } while ((curve = curve->next));
2909:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2910:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2911:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
2912:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2913:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2914:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_FREE_ALL         TLSX_EllipticCurve_FreeAll
2915:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_VALIDATE_REQUEST TLSX_EllipticCurve_ValidateRequest
2916:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2917:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
2918:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_GET_SIZE TLSX_EllipticCurve_GetSize
2919:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_WRITE    TLSX_EllipticCurve_Write
2920:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
2921:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_GET_SIZE(list)         0
2922:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_WRITE(a, b)            0
2923:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2924:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2925:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
2926:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_PARSE TLSX_EllipticCurve_Parse
2927:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
2928:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_PARSE(a, b, c, d)      0
2929:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
2930:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2931:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
2932:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2933:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_FREE_ALL(list)
2934:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_GET_SIZE(list)         0
2935:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_WRITE(a, b)            0
2936:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_PARSE(a, b, c, d)      0
2937:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define EC_VALIDATE_REQUEST(a, b)
2938:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2939:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_SUPPORTED_CURVES */
2940:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2941:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
2942:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Renegotiation Indication                                                   */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 79


2943:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
2944:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2945:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_SECURE_RENEGOTIATION
2946:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2947:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static byte TLSX_SecureRenegotiation_GetSize(SecureRenegotiation* data,
2948:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                   int isRequest)
2949:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2950:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte length = OPAQUE8_LEN; /* empty info length */
2951:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2952:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (data->enabled) {
2953:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* client sends client_verify_data only */
2954:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += TLS_FINISHED_SZ;
2955:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2956:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* server also sends server_verify_data */
2957:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!isRequest)
2958:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             length += TLS_FINISHED_SZ;
2959:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2960:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2961:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
2962:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2963:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2964:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_SecureRenegotiation_Write(SecureRenegotiation* data,
2965:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     byte* output, int isRequest)
2966:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2967:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = OPAQUE8_LEN; /* RenegotiationInfo length */
2968:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2969:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (data->enabled) {
2970:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* client sends client_verify_data only */
2971:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(output + offset, data->client_verify_data, TLS_FINISHED_SZ);
2972:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += TLS_FINISHED_SZ;
2973:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2974:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* server also sends server_verify_data */
2975:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!isRequest) {
2976:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XMEMCPY(output + offset, data->server_verify_data, TLS_FINISHED_SZ);
2977:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += TLS_FINISHED_SZ;
2978:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2979:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
2980:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2981:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     output[0] = offset - 1;  /* info length - self */
2982:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2983:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
2984:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
2985:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2986:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_SecureRenegotiation_Parse(WOLFSSL* ssl, byte* input,
2987:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                   word16 length, byte isRequest)
2988:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
2989:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = SECURE_RENEGOTIATION_E;
2990:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
2991:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length >= OPAQUE8_LEN) {
2992:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->secure_renegotiation == NULL) {
2993:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_WOLFSSL_SERVER
2994:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (isRequest && *input == 0) {
2995:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = 0;  /* don't reply, user didn't enable */
2996:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
2997:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
2998:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
2999:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         else if (isRequest) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 80


3000:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_WOLFSSL_SERVER
3001:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (*input == TLS_FINISHED_SZ) {
3002:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* TODO compare client_verify_data */
3003:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = 0;
3004:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3005:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
3006:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3007:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         else {
3008:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifndef NO_WOLFSSL_CLIENT
3009:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (!ssl->secure_renegotiation->enabled) {
3010:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (*input == 0) {
3011:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ssl->secure_renegotiation->enabled = 1;
3012:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = 0;
3013:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
3014:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3015:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             else if (*input == 2 * TLS_FINISHED_SZ) {
3016:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* TODO compare client_verify_data and server_verify_data */
3017:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = 0;
3018:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3019:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
3020:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3021:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3022:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3023:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0) {
3024:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* TODO: turn on fatal error at ssl level too */
3025:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         SendAlert(ssl, alert_fatal, handshake_failure);
3026:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3027:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3028:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
3029:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3030:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3031:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseSecureRenegotiation(TLSX** extensions)
3032:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3033:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
3034:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SecureRenegotiation* data = NULL;
3035:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3036:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     data = (SecureRenegotiation*)XMALLOC(sizeof(SecureRenegotiation), NULL,
3037:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                              DYNAMIC_TYPE_TLSX);
3038:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (data == NULL)
3039:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
3040:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3041:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMSET(data, 0, sizeof(SecureRenegotiation));
3042:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3043:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = TLSX_Push(extensions, TLSX_RENEGOTIATION_INFO, data);
3044:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0) {
3045:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(data, 0, DYNAMIC_TYPE_TLSX);
3046:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
3047:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3048:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3049:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
3050:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3051:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3052:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3053:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_FREE_ALL(data) XFREE(data, NULL, DYNAMIC_TYPE_TLSX)
3054:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_GET_SIZE       TLSX_SecureRenegotiation_GetSize
3055:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_WRITE          TLSX_SecureRenegotiation_Write
3056:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_PARSE          TLSX_SecureRenegotiation_Parse
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 81


3057:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3058:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
3059:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3060:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_FREE_ALL(a)
3061:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_GET_SIZE(a, b)    0
3062:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_WRITE(a, b, c)    0
3063:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define SCR_PARSE(a, b, c, d) 0
3064:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3065:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_SECURE_RENEGOTIATION */
3066:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3067:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
3068:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Session Tickets                                                            */
3069:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
3070:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3071:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_SESSION_TICKET
3072:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3073:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_SessionTicket_ValidateRequest(WOLFSSL* ssl)
3074:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3075:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX*          extension = TLSX_Find(ssl->extensions, TLSX_SESSION_TICKET);
3076:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SessionTicket* ticket    = extension ? extension->data : NULL;
3077:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3078:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ticket) {
3079:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* TODO validate ticket timeout here! */
3080:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ticket->lifetime == 0xfffffff) {
3081:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* send empty ticket on timeout */
3082:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX_UseSessionTicket(&ssl->extensions, NULL);
3083:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3084:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3085:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3086:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3087:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3088:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_SessionTicket_GetSize(SessionTicket* ticket, int isRequest)
3089:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3090:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)isRequest;
3091:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ticket ? ticket->size : 0;
3092:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3093:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3094:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_SessionTicket_Write(SessionTicket* ticket, byte* output,
3095:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                   int isRequest)
3096:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3097:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0; /* empty ticket */
3098:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3099:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest && ticket) {
3100:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(output + offset, ticket->data, ticket->size);
3101:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += ticket->size;
3102:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3103:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3104:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
3105:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3106:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3107:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3108:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_SessionTicket_Parse(WOLFSSL* ssl, byte* input, word16 length,
3109:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
3110:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3111:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
3112:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3113:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!isRequest) {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 82


3114:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* client side */
3115:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (length != 0)
3116:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
3117:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3118:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->expect_session_ticket = 1;
3119:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3120:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
3121:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
3122:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* server side */
3123:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->ctx->ticketEncCb == NULL) {
3124:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             WOLFSSL_MSG("Client sent session ticket, server has no callback");
3125:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 0;
3126:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3127:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3128:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (length == 0) {
3129:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* blank ticket */
3130:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ret = TLSX_UseSessionTicket(&ssl->extensions, NULL);
3131:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ret == SSL_SUCCESS) {
3132:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = 0;
3133:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 TLSX_SetResponse(ssl, TLSX_SESSION_TICKET);  /* send blank ticket */
3134:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ssl->options.createTicket = 1;  /* will send ticket msg */
3135:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ssl->options.useTicket    = 1;
3136:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3137:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         } else {
3138:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* got actual ticket from client */
3139:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ret = DoClientTicket(ssl, input, length);
3140:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ret == WOLFSSL_TICKET_RET_OK) {    /* use ticket to resume */
3141:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Using exisitng client ticket");
3142:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ssl->options.useTicket = 1;
3143:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ssl->options.resuming  = 1;
3144:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             } else if (ret == WOLFSSL_TICKET_RET_CREATE) {
3145:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Using existing client ticket, creating new one");
3146:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = TLSX_UseSessionTicket(&ssl->extensions, NULL);
3147:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ret == SSL_SUCCESS) {
3148:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = 0;
3149:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     TLSX_SetResponse(ssl, TLSX_SESSION_TICKET);
3150:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     /* send blank ticket */
3151:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ssl->options.createTicket = 1;  /* will send ticket msg */
3152:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ssl->options.useTicket    = 1;
3153:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ssl->options.resuming     = 1;
3154:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
3155:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             } else if (ret == WOLFSSL_TICKET_RET_REJECT) {
3156:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Process client ticket rejected, not using");
3157:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = 0;  /* not fatal */
3158:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             } else if (ret == WOLFSSL_TICKET_RET_FATAL || ret < 0) {
3159:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Process client ticket fatal error, not using");
3160:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3161:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3162:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3163:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_SERVER */
3164:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3165:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
3166:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3167:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3168:..\acn-sdk-c\src\wolfSSL\src/tls.c **** WOLFSSL_LOCAL SessionTicket* TLSX_SessionTicket_Create(word32 lifetime,
3169:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                        byte* data, word16 size)
3170:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 83


3171:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     SessionTicket* ticket = (SessionTicket*)XMALLOC(sizeof(SessionTicket),
3172:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                        NULL, DYNAMIC_TYPE_TLSX);
3173:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ticket) {
3174:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ticket->data = (byte*)XMALLOC(size, NULL, DYNAMIC_TYPE_TLSX);
3175:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ticket->data == NULL) {
3176:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XFREE(ticket, NULL, DYNAMIC_TYPE_TLSX);
3177:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return NULL;
3178:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3179:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3180:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(ticket->data, data, size);
3181:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ticket->size     = size;
3182:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ticket->lifetime = lifetime;
3183:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3184:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3185:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ticket;
3186:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3187:..\acn-sdk-c\src\wolfSSL\src/tls.c **** WOLFSSL_LOCAL void TLSX_SessionTicket_Free(SessionTicket* ticket)
3188:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3189:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ticket) {
3190:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(ticket->data, NULL, DYNAMIC_TYPE_TLSX);
3191:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(ticket,       NULL, DYNAMIC_TYPE_TLSX);
3192:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3193:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3194:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3195:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseSessionTicket(TLSX** extensions, SessionTicket* ticket)
3196:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3197:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
3198:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3199:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL)
3200:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
3201:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3202:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* If the ticket is NULL, the client will request a new ticket from the
3203:..\acn-sdk-c\src\wolfSSL\src/tls.c ****        server. Otherwise, the client will use it in the next client hello. */
3204:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = TLSX_Push(extensions, TLSX_SESSION_TICKET, (void*)ticket)) != 0)
3205:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
3206:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3207:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
3208:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3209:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3210:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_VALIDATE_REQUEST TLSX_SessionTicket_ValidateRequest
3211:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_GET_SIZE         TLSX_SessionTicket_GetSize
3212:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_WRITE            TLSX_SessionTicket_Write
3213:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_PARSE            TLSX_SessionTicket_Parse
3214:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3215:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
3216:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3217:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_VALIDATE_REQUEST(a)
3218:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_GET_SIZE(a, b)      0
3219:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_WRITE(a, b, c)      0
3220:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define STK_PARSE(a, b, c, d)   0
3221:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3222:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_SESSION_TICKET */
3223:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3224:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
3225:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Quantum-Safe-Hybrid                                                        */
3226:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
3227:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 84


3228:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_QSH
3229:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static WC_RNG* rng;
3230:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static wolfSSL_Mutex* rngMutex;
3231:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3232:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_QSH_FreeAll(QSHScheme* list)
3233:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3234:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* current;
3235:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3236:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((current = list)) {
3237:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = current->next;
3238:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(current, 0, DYNAMIC_TYPE_TLSX);
3239:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3240:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3241:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3242:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_QSH_Append(QSHScheme** list, word16 name, byte* pub,
3243:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                   word16 pubLen)
3244:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3245:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* temp;
3246:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3247:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (list == NULL)
3248:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
3249:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3250:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((temp = (QSHScheme*)XMALLOC(sizeof(QSHScheme), NULL,
3251:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     DYNAMIC_TYPE_TLSX)) == NULL)
3252:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
3253:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3254:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->name  = name;
3255:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->PK    = pub;
3256:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->PKLen = pubLen;
3257:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->next  = *list;
3258:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3259:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *list = temp;
3260:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3261:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
3262:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3263:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3264:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3265:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* request for server's public key : 02 indicates 0-2 requested */
3266:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static byte TLSX_QSH_SerPKReq(byte* output, byte isRequest)
3267:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3268:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
3269:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* only request one public key from the server */
3270:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         output[0] = 0x01;
3271:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3272:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return OPAQUE8_LEN;
3273:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3274:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
3275:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return 0;
3276:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3277:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3278:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3279:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
3280:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3281:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* check for TLS_QSH suite */
3282:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_QSH_ValidateRequest(WOLFSSL* ssl, byte* semaphore)
3283:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3284:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int i;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 85


3285:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3286:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (i = 0; i < ssl->suites->suiteSz; i+= 2)
3287:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->suites->suites[i] == QSH_BYTE)
3288:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return;
3289:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3290:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* No QSH suite found */
3291:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TURN_ON(semaphore, TLSX_ToSemaphore(TLSX_QUANTUM_SAFE_HYBRID));
3292:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3293:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3294:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3295:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* return the size of the QSH hello extension
3296:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    list      the list of QSHScheme structs containing id and key
3297:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    isRequest if 1 then is being sent to the server
3298:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
3299:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_QSH_GetSize(QSHScheme* list, byte isRequest)
3300:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3301:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* temp = list;
3302:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = 0;
3303:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3304:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* account for size of scheme list and public key list */
3305:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest)
3306:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length = OPAQUE16_LEN;
3307:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     length += OPAQUE24_LEN;
3308:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3309:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* for each non null element in list add size */
3310:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((temp)) {
3311:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* add public key info Scheme | Key Length | Key */
3312:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE16_LEN;
3313:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE16_LEN;
3314:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += temp->PKLen;
3315:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3316:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* if client add name size for scheme list
3317:..\acn-sdk-c\src\wolfSSL\src/tls.c ****            advance to next QSHScheme struct in list */
3318:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (isRequest)
3319:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             length += OPAQUE16_LEN;
3320:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp = temp->next;
3321:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3322:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3323:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* add length for request server public keys */
3324:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest)
3325:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE8_LEN;
3326:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3327:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
3328:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3329:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3330:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3331:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* write out a list of QSHScheme IDs */
3332:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_QSH_Write(QSHScheme* list, byte* output)
3333:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3334:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* current = list;
3335:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length      = 0;
3336:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3337:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     length += OPAQUE16_LEN;
3338:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3339:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (current) {
3340:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         c16toa(current->name, output + length);
3341:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE16_LEN;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 86


3342:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         current = (QSHScheme*)current->next;
3343:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3344:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3345:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(length - OPAQUE16_LEN, output); /* writing list length */
3346:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3347:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
3348:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3349:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3350:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3351:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* write public key list in extension */
3352:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_QSHPK_WriteR(QSHScheme* format, byte* output);
3353:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_QSHPK_WriteR(QSHScheme* format, byte* output)
3354:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3355:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 offset = 0;
3356:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 public_len = 0;
3357:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3358:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!format)
3359:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return offset;
3360:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3361:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* write scheme ID */
3362:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(format->name, output + offset);
3363:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
3364:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3365:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* write public key matching scheme */
3366:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     public_len = format->PKLen;
3367:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c16toa(public_len, output + offset);
3368:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset += OPAQUE16_LEN;
3369:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (format->PK) {
3370:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XMEMCPY(output+offset, format->PK, public_len);
3371:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3372:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3373:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return public_len + offset;
3374:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3375:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3376:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_QSHPK_Write(QSHScheme* list, byte* output)
3377:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3378:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* current = list;
3379:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 length = 0;
3380:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word24 toWire;
3381:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3382:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     length += OPAQUE24_LEN;
3383:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3384:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (current) {
3385:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += TLSX_QSHPK_WriteR(current, output + length);
3386:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         current = (QSHScheme*)current->next;
3387:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3388:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* length of public keys sent */
3389:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     c32to24(length - OPAQUE24_LEN, toWire);
3390:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     output[0] = toWire[0];
3391:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     output[1] = toWire[1];
3392:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     output[2] = toWire[2];
3393:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3394:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
3395:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3396:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3397:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_CLIENT */
3398:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 87


3399:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3400:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static void TLSX_QSHAgreement(TLSX** extensions)
3401:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3402:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(*extensions, TLSX_QUANTUM_SAFE_HYBRID);
3403:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* format = NULL;
3404:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* del    = NULL;
3405:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* prev   = NULL;
3406:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3407:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extension == NULL)
3408:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return;
3409:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3410:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     format = (QSHScheme*)extension->data;
3411:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (format) {
3412:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (format->PKLen == 0) {
3413:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* case of head */
3414:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (format == extension->data) {
3415:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 extension->data = format->next;
3416:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3417:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (prev)
3418:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 prev->next = format->next;
3419:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             del = format;
3420:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             format = format->next;
3421:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XFREE(del, 0, DYNAMIC_TYPE_TMP_ARRAY);
3422:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             del = NULL;
3423:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         } else {
3424:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             prev   = format;
3425:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             format = format->next;
3426:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3427:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3428:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3429:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3430:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3431:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Parse in hello extension
3432:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    input     the byte stream to process
3433:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    length    length of total extension found
3434:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    isRequest set to 1 if being sent to the server
3435:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
3436:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_QSH_Parse(WOLFSSL* ssl, byte* input, word16 length,
3437:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
3438:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3439:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte   numKeys    = 0;
3440:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset     = 0;
3441:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 schemSz    = 0;
3442:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset_len = 0;
3443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 offset_pk  = 0;
3444:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 name  = 0;
3445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 PKLen = 0;
3446:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte*  PK = NULL;
3447:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int r;
3448:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3449:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3450:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (OPAQUE16_LEN > length)
3451:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
3452:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3453:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
3454:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input, &schemSz);
3455:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 88


3456:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* list of public keys available for QSH schemes */
3457:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset_len = schemSz + OPAQUE16_LEN;
3458:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3459:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3460:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset_pk = ((input[offset_len] << 16)   & 0xFF00000) |
3461:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 (((input[offset_len + 1]) << 8) & 0xFF00) |
3462:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 (input[offset_len + 2] & 0xFF);
3463:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset_len += OPAQUE24_LEN;
3464:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3465:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* check buffer size */
3466:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (offset_pk > length)
3467:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
3468:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3469:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* set maximum number of keys the client will accept */
3470:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!isRequest)
3471:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         numKeys = (ssl->maxRequest < 1)? 1 : ssl->maxRequest;
3472:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3473:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* hello extension read list of scheme ids */
3474:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
3475:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3476:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* read in request for public keys */
3477:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->minRequest = (input[length -1] >> 4) & 0xFF;
3478:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->maxRequest = input[length -1] & 0x0F;
3479:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3480:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* choose the min between min requested by client and 1 */
3481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         numKeys = (ssl->minRequest > 1) ? ssl->minRequest : 1;
3482:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3483:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->minRequest > ssl->maxRequest)
3484:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BAD_FUNC_ARG;
3485:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3486:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset  += OPAQUE16_LEN;
3487:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         schemSz += offset;
3488:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3489:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* check buffer size */
3490:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (schemSz > length)
3491:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
3492:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3493:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         while ((offset < schemSz) && numKeys) {
3494:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* Scheme ID list */
3495:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ato16(input + offset, &name);
3496:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += OPAQUE16_LEN;
3497:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3498:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* validate we have scheme id */
3499:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ssl->user_set_QSHSchemes &&
3500:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     !TLSX_ValidateQSHScheme(&ssl->extensions, name)) {
3501:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 continue;
3502:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3503:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3504:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* server create keys on demand */
3505:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if ((r = TLSX_CreateNtruKey(ssl, name)) != 0) {
3506:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Error creating ntru keys");
3507:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 return r;
3508:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3509:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3510:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* peer sent an agreed upon scheme */
3511:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             r = TLSX_UseQSHScheme(&ssl->extensions, name, NULL, 0);
3512:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 89


3513:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (r != SSL_SUCCESS) return r; /* throw error */
3514:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3515:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             numKeys--;
3516:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3517:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3518:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* choose the min between min requested by client and 1 */
3519:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         numKeys = (ssl->minRequest > 1) ? ssl->minRequest : 1;
3520:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3521:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* QSHPK struct */
3523:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset_pk += offset_len;
3524:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((offset_len < offset_pk) && numKeys) {
3525:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         QSHKey * temp;
3526:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3527:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((temp = (QSHKey*)XMALLOC(sizeof(QSHKey), NULL,
3528:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     DYNAMIC_TYPE_TLSX)) == NULL)
3529:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return MEMORY_E;
3530:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3531:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* initialize */
3532:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp->next = NULL;
3533:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp->pub.buffer = NULL;
3534:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp->pub.length = 0;
3535:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp->pri.buffer = NULL;
3536:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp->pri.length = 0;
3537:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3538:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* scheme id */
3539:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset_len, &(temp->name));
3540:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset_len += OPAQUE16_LEN;
3541:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3542:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* public key length */
3543:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset_len, &PKLen);
3544:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         temp->pub.length = PKLen;
3545:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset_len += OPAQUE16_LEN;
3546:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3547:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3548:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (isRequest) {
3549:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* validate we have scheme id */
3550:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ssl->user_set_QSHSchemes &&
3551:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     (!TLSX_ValidateQSHScheme(&ssl->extensions, temp->name))) {
3552:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset_len += PKLen;
3553:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 XFREE(temp, 0, DYNAMIC_TYPE_TLSX);
3554:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 continue;
3555:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
3556:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3557:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3558:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* read in public key */
3559:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (PKLen > 0) {
3560:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             temp->pub.buffer = (byte*)XMALLOC(temp->pub.length,
3561:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                  NULL, DYNAMIC_TYPE_PUBLIC_KEY);
3562:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XMEMCPY(temp->pub.buffer, input + offset_len, temp->pub.length);
3563:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset_len += PKLen;
3564:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3565:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         else {
3566:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             PK = NULL;
3567:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3568:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3569:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* use own key when adding to extensions list for sending reply */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 90


3570:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         PKLen = 0;
3571:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         PK = TLSX_QSHKeyFind_Pub(ssl->QSH_Key, &PKLen, temp->name);
3572:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         r  = TLSX_UseQSHScheme(&ssl->extensions, temp->name, PK, PKLen);
3573:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3574:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* store peers key */
3575:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ssl->peerQSHKeyPresent = 1;
3576:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (TLSX_AddQSHKey(&ssl->peerQSHKey, temp) != 0)
3577:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return MEMORY_E;
3578:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3579:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (temp->pub.length == 0) {
3580:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             XFREE(temp, 0, DYNAMIC_TYPE_TLSX);
3581:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3582:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3583:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (r != SSL_SUCCESS) {return r;} /* throw error */
3584:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3585:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         numKeys--;
3586:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3587:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3588:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* reply to a QSH extension sent from client */
3589:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isRequest) {
3590:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_SetResponse(ssl, TLSX_QUANTUM_SAFE_HYBRID);
3591:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* only use schemes we have key generated for -- free the rest */
3592:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX_QSHAgreement(&ssl->extensions);
3593:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3594:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3595:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
3596:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3597:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3598:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3599:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Used for parsing in QSHCipher structs on Key Exchange */
3600:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_QSHCipher_Parse(WOLFSSL* ssl, const byte* input, word16 length,
3601:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                   byte isServer)
3602:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3603:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHKey* key;
3604:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 Max_Secret_Len = 48;
3605:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset     = 0;
3606:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset_len = 0;
3607:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word32 offset_pk  = 0;
3608:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 name       = 0;
3609:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 secretLen  = 0;
3610:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte*  secret     = NULL;
3611:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 buffLen    = 0;
3612:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte buff[145]; /* size enough for 3 secrets */
3613:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     buffer* buf;
3614:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3615:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* pointer to location where secret should be stored */
3616:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (isServer) {
3617:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         buf = ssl->QSH_secret->CliSi;
3618:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3619:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     else {
3620:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         buf = ssl->QSH_secret->SerSi;
3621:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3622:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3623:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset_pk = ((input[offset_len] << 16)    & 0xFF0000) |
3624:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 (((input[offset_len + 1]) << 8) & 0xFF00) |
3625:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 (input[offset_len + 2] & 0xFF);
3626:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset_len += OPAQUE24_LEN;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 91


3627:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3628:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* validating extension list length -- check if trying to read over edge
3629:..\acn-sdk-c\src\wolfSSL\src/tls.c ****        of buffer */
3630:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length < (offset_pk + OPAQUE24_LEN)) {
3631:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BUFFER_ERROR;
3632:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3633:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3634:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* QSHCipherList struct */
3635:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     offset_pk += offset_len;
3636:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (offset_len < offset_pk) {
3637:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3638:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* scheme id */
3639:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset_len, &name);
3640:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset_len += OPAQUE16_LEN;
3641:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3642:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* public key length */
3643:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset_len, &secretLen);
3644:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset_len += OPAQUE16_LEN;
3645:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3646:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* read in public key */
3647:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (secretLen > 0) {
3648:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             secret = (byte*)(input + offset_len);
3649:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset_len += secretLen;
3650:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3651:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         else {
3652:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             secret = NULL;
3653:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3654:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3655:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* no secret sent */
3656:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (secret == NULL)
3657:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             continue;
3658:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3659:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* find corresponding key */
3660:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         key = ssl->QSH_Key;
3661:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         while (key) {
3662:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (key->name == name)
3663:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3664:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             else
3665:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 key = (QSHKey*)key->next;
3666:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3667:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3668:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* if we do not have the key than there was a big issue negotiation */
3669:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (key == NULL) {
3670:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             WOLFSSL_MSG("key was null for decryption!!!\n");
3671:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return MEMORY_E;
3672:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3673:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3674:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* Decrypt sent secret */
3675:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         buffLen = Max_Secret_Len;
3676:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         QSH_Decrypt(key, secret, secretLen, buff + offset, &buffLen);
3677:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += buffLen;
3678:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3679:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3680:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* allocate memory for buffer */
3681:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     buf->length = offset;
3682:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     buf->buffer = (byte*)XMALLOC(offset, NULL, DYNAMIC_TYPE_TMP_BUFFER);
3683:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (buf->buffer == NULL)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 92


3684:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
3685:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3686:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* store secrets */
3687:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(buf->buffer, buff, offset);
3688:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ForceZero(buff, offset);
3689:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3690:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset_len;
3691:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3692:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3693:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3694:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* return 1 on success */
3695:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_ValidateQSHScheme(TLSX** extensions, word16 theirs) {
3696:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = TLSX_Find(*extensions, TLSX_QUANTUM_SAFE_HYBRID);
3697:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* format    = NULL;
3698:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3699:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* if no extension is sent then do not use QSH */
3700:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!extension) {
3701:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("No QSH Extension");
3702:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return 0;
3703:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3704:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3705:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     for (format = (QSHScheme*)extension->data; format; format = format->next) {
3706:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (format->name == theirs) {
3707:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        WOLFSSL_MSG("Found Matching QSH Scheme");
3708:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 1; /* have QSH */
3709:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3710:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3711:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3712:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
3713:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3714:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_SERVER */
3715:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3716:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* test if the QSH Scheme is implemented
3717:..\acn-sdk-c\src\wolfSSL\src/tls.c ****    return 1 if yes 0 if no */
3718:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_HaveQSHScheme(word16 name)
3719:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3720:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch(name) {
3721:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #ifdef HAVE_NTRU
3722:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_NTRU_EESS439:
3723:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_NTRU_EESS593:
3724:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_NTRU_EESS743:
3725:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return 1;
3726:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         #endif
3727:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_LWE_XXX:
3728:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case WOLFSSL_HFE_XXX:
3729:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     return 0; /* not supported yet */
3730:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3731:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         default:
3732:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return 0;
3733:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3734:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3735:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3736:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3737:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* Add a QSHScheme struct to list of usable ones */
3738:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_UseQSHScheme(TLSX** extensions, word16 name, byte* pKey, word16 pkeySz)
3739:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3740:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX*      extension = TLSX_Find(*extensions, TLSX_QUANTUM_SAFE_HYBRID);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 93


3741:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHScheme* format    = NULL;
3742:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int        ret       = 0;
3743:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3744:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* sanity check */
3745:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (extensions == NULL || (pKey == NULL && pkeySz != 0))
3746:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
3747:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3748:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* if scheme is implemented than add */
3749:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (TLSX_HaveQSHScheme(name)) {
3750:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	    if ((ret = TLSX_QSH_Append(&format, name, pKey, pkeySz)) != 0)
3751:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        return ret;
3752:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3753:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	    if (!extension) {
3754:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        if ((ret = TLSX_Push(extensions, TLSX_QUANTUM_SAFE_HYBRID, format))
3755:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                          != 0) {
3756:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	            XFREE(format, 0, DYNAMIC_TYPE_TLSX);
3757:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	            return ret;
3758:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        }
3759:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	    }
3760:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	    else {
3761:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        /* push new QSH object to extension data. */
3762:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        format->next = (QSHScheme*)extension->data;
3763:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        extension->data = (void*)format;
3764:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3765:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        /* look for another format of the same name to remove (replacement) */
3766:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        do {
3767:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	            if (format->next && (format->next->name == name)) {
3768:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	                QSHScheme* next = format->next;
3769:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3770:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	                format->next = next->next;
3771:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	                XFREE(next, 0, DYNAMIC_TYPE_TLSX);
3772:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3773:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	                break;
3774:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	            }
3775:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	        } while ((format = format->next));
3776:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 	    }
3777:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3778:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return SSL_SUCCESS;
3779:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3780:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3781:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_FREE_ALL         TLSX_QSH_FreeAll
3782:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_VALIDATE_REQUEST TLSX_QSH_ValidateRequest
3783:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3784:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
3785:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_GET_SIZE TLSX_QSH_GetSize
3786:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_WRITE    TLSX_QSH_Write
3787:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
3788:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_GET_SIZE(list)         0
3789:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_WRITE(a, b)            0
3790:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
3791:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3792:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
3793:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_PARSE TLSX_QSH_Parse
3794:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
3795:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_PARSE(a, b, c, d)      0
3796:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
3797:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 94


3798:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSHPK_WRITE TLSX_QSHPK_Write
3799:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_SERREQ TLSX_QSH_SerPKReq
3800:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
3801:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3802:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_FREE_ALL(list)
3803:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_GET_SIZE(list, a)      0
3804:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_WRITE(a, b)            0
3805:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_PARSE(a, b, c, d)      0
3806:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSHPK_WRITE(a, b)          0
3807:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_SERREQ(a, b)           0
3808:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #define QSH_VALIDATE_REQUEST(a, b)
3809:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3810:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_QSH */
3811:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3812:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
3813:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* TLS Extensions Framework                                                   */
3814:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /******************************************************************************/
3815:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3816:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Finds an extension in the provided list. */
3817:..\acn-sdk-c\src\wolfSSL\src/tls.c **** TLSX* TLSX_Find(TLSX* list, TLSX_Type type)
3818:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3819:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension = list;
3820:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3821:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (extension && extension->type != type)
3822:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         extension = extension->next;
3823:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3824:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return extension;
3825:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3826:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3827:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Releases all extensions in the provided list. */
3828:..\acn-sdk-c\src\wolfSSL\src/tls.c **** void TLSX_FreeAll(TLSX* list)
3829:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3830:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension;
3831:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3832:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((extension = list)) {
3833:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = extension->next;
3834:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3835:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (extension->type) {
3836:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3837:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SERVER_NAME:
3838:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 SNI_FREE_ALL((SNI*)extension->data);
3839:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3840:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3841:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_MAX_FRAGMENT_LENGTH:
3842:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 MFL_FREE_ALL(extension->data);
3843:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3844:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3845:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_TRUNCATED_HMAC:
3846:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* Nothing to do. */
3847:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3848:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3849:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SUPPORTED_GROUPS:
3850:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 EC_FREE_ALL(extension->data);
3851:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3852:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3853:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST:
3854:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 CSR_FREE_ALL(extension->data);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 95


3855:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3856:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3857:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST_V2:
3858:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 CSR2_FREE_ALL(extension->data);
3859:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3860:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3861:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_RENEGOTIATION_INFO:
3862:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 SCR_FREE_ALL(extension->data);
3863:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3864:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3865:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SESSION_TICKET:
3866:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* Nothing to do. */
3867:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3868:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3869:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_QUANTUM_SAFE_HYBRID:
3870:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 QSH_FREE_ALL((QSHScheme*)extension->data);
3871:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3872:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3873:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_APPLICATION_LAYER_PROTOCOL:
3874:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ALPN_FREE_ALL((ALPN*)extension->data);
3875:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3876:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3877:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3878:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         XFREE(extension, 0, DYNAMIC_TYPE_TLSX);
3879:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3880:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3881:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3882:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Checks if the tls extensions are supported based on the protocol version. */
3883:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_SupportExtensions(WOLFSSL* ssl) {
3884:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ssl && (IsTLS(ssl) || ssl->version.major == DTLS_MAJOR);
3885:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3886:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3887:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Tells the buffered size of the extensions in a list. */
3888:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_GetSize(TLSX* list, byte* semaphore, byte isRequest)
3889:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3890:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension;
3891:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = 0;
3892:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3893:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((extension = list)) {
3894:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = extension->next;
3895:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3896:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* only extensions marked as response are sent back to the client. */
3897:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!isRequest && !extension->resp)
3898:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             continue; /* skip! */
3899:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3900:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* ssl level extensions are expected to override ctx level ones. */
3901:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!IS_OFF(semaphore, TLSX_ToSemaphore(extension->type)))
3902:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             continue; /* skip! */
3903:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3904:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* extension type + extension data length. */
3905:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += HELLO_EXT_TYPE_SZ + OPAQUE16_LEN;
3906:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3907:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3908:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (extension->type) {
3909:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3910:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SERVER_NAME:
3911:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* SNI only sends the name on the request. */
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 96


3912:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (isRequest)
3913:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     length += SNI_GET_SIZE(extension->data);
3914:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3915:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3916:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_MAX_FRAGMENT_LENGTH:
3917:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += MFL_GET_SIZE(extension->data);
3918:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3919:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3920:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_TRUNCATED_HMAC:
3921:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* always empty. */
3922:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3923:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3924:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SUPPORTED_GROUPS:
3925:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += EC_GET_SIZE(extension->data);
3926:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3927:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3928:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST:
3929:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += CSR_GET_SIZE(extension->data, isRequest);
3930:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3931:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3932:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST_V2:
3933:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += CSR2_GET_SIZE(extension->data, isRequest);
3934:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3935:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3936:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_RENEGOTIATION_INFO:
3937:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += SCR_GET_SIZE(extension->data, isRequest);
3938:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3939:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3940:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SESSION_TICKET:
3941:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += STK_GET_SIZE(extension->data, isRequest);
3942:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3943:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3944:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_QUANTUM_SAFE_HYBRID:
3945:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += QSH_GET_SIZE((QSHScheme*)extension->data, isRequest);
3946:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3947:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3948:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_APPLICATION_LAYER_PROTOCOL:
3949:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 length += ALPN_GET_SIZE(extension->data);
3950:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3951:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3952:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
3953:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3954:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* marks the extension as processed so ctx level */
3955:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* extensions don't overlap with ssl level ones. */
3956:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TURN_ON(semaphore, TLSX_ToSemaphore(extension->type));
3957:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
3958:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3959:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
3960:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
3961:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3962:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Writes the extensions of a list in a buffer. */
3963:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word16 TLSX_Write(TLSX* list, byte* output, byte* semaphore,
3964:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  byte isRequest)
3965:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
3966:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX* extension;
3967:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0;
3968:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length_offset = 0;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 97


3969:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3970:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while ((extension = list)) {
3971:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         list = extension->next;
3972:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3973:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* only extensions marked as response are written in a response. */
3974:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!isRequest && !extension->resp)
3975:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             continue; /* skip! */
3976:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3977:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* ssl level extensions are expected to override ctx level ones. */
3978:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!IS_OFF(semaphore, TLSX_ToSemaphore(extension->type)))
3979:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             continue; /* skip! */
3980:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3981:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* writes extension type. */
3982:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         c16toa(extension->type, output + offset);
3983:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += HELLO_EXT_TYPE_SZ + OPAQUE16_LEN;
3984:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length_offset = offset;
3985:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3986:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* extension data should be written internally. */
3987:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (extension->type) {
3988:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SERVER_NAME:
3989:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (isRequest)
3990:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += SNI_WRITE(extension->data, output + offset);
3991:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3992:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3993:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_MAX_FRAGMENT_LENGTH:
3994:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += MFL_WRITE(extension->data, output + offset);
3995:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
3996:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
3997:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_TRUNCATED_HMAC:
3998:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* always empty. */
3999:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4000:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4001:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SUPPORTED_GROUPS:
4002:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += EC_WRITE(extension->data, output + offset);
4003:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4004:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4005:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST:
4006:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += CSR_WRITE(extension->data, output + offset,
4007:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                      isRequest);
4008:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4009:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4010:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST_V2:
4011:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += CSR2_WRITE(extension->data, output + offset,
4012:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                      isRequest);
4013:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4014:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4015:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_RENEGOTIATION_INFO:
4016:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += SCR_WRITE(extension->data, output + offset,
4017:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                      isRequest);
4018:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4019:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4020:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SESSION_TICKET:
4021:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += STK_WRITE(extension->data, output + offset,
4022:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                      isRequest);
4023:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4024:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4025:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_QUANTUM_SAFE_HYBRID:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 98


4026:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (isRequest) {
4027:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     offset += QSH_WRITE((QSHScheme*)extension->data, output + offset);
4028:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
4029:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += QSHPK_WRITE((QSHScheme*)extension->data, output + offset);
4030:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += QSH_SERREQ(output + offset, isRequest);
4031:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4032:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4033:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_APPLICATION_LAYER_PROTOCOL:
4034:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 offset += ALPN_WRITE(extension->data, output + offset);
4035:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4036:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
4037:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4038:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* writes extension data length. */
4039:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         c16toa(offset - length_offset, output + length_offset - OPAQUE16_LEN);
4040:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4041:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* marks the extension as processed so ctx level */
4042:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* extensions don't overlap with ssl level ones. */
4043:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TURN_ON(semaphore, TLSX_ToSemaphore(extension->type));
4044:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4045:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4046:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
4047:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4048:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4049:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4050:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_NTRU
4051:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4052:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static word32 GetEntropy(unsigned char* out, word32 num_bytes)
4053:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4054:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
4055:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4056:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (rng == NULL) {
4057:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((rng = (WC_RNG*)XMALLOC(sizeof(WC_RNG), NULL,
4058:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     DYNAMIC_TYPE_TLSX)) == NULL)
4059:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return DRBG_OUT_OF_MEMORY;
4060:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         wc_InitRng(rng);
4061:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4062:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4063:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (rngMutex == NULL) {
4064:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if ((rngMutex = (wolfSSL_Mutex*)XMALLOC(sizeof(wolfSSL_Mutex), NULL,
4065:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     DYNAMIC_TYPE_TLSX)) == NULL)
4066:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return DRBG_OUT_OF_MEMORY;
4067:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         InitMutex(rngMutex);
4068:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4069:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4070:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret |= LockMutex(rngMutex);
4071:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret |= wc_RNG_GenerateBlock(rng, out, num_bytes);
4072:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret |= UnLockMutex(rngMutex);
4073:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4074:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != 0)
4075:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return DRBG_ENTROPY_FAIL;
4076:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4077:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return DRBG_OK;
4078:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4079:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
4080:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4081:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4082:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_QSH
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 99


4083:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_CreateQSHKey(WOLFSSL* ssl, int type)
4084:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4085:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret;
4086:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4087:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (type) {
4088:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_NTRU
4089:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_NTRU_EESS439:
4090:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_NTRU_EESS593:
4091:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_NTRU_EESS743:
4092:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ret = TLSX_CreateNtruKey(ssl, type);
4093:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
4094:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
4095:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         default:
4096:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             WOLFSSL_MSG("Unknown type for creating NTRU key");
4097:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return -1;
4098:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4099:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4100:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
4101:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4102:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4103:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4104:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static int TLSX_AddQSHKey(QSHKey** list, QSHKey* key)
4105:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4106:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHKey* current;
4107:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4108:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (key == NULL)
4109:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
4110:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4111:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* if no public key stored in key then do not add */
4112:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (key->pub.length == 0 || key->pub.buffer == NULL)
4113:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return 0;
4114:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4115:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* first element to be added to the list */
4116:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     current = *list;
4117:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (current == NULL) {
4118:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         *list = key;
4119:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return 0;
4120:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4121:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4122:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (current->next) {
4123:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* can only have one of the key in the list */
4124:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (current->name == key->name)
4125:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return -1;
4126:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         current = (QSHKey*)current->next;
4127:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4128:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4129:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     current->next = (struct QSHKey*)key;
4130:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4131:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return 0;
4132:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4133:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4134:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4135:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifdef HAVE_NTRU
4136:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_CreateNtruKey(WOLFSSL* ssl, int type)
4137:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4138:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret;
4139:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ntruType;
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 100


4140:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4141:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* variable declarations for NTRU*/
4142:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHKey* temp = NULL;
4143:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte   public_key[1027];
4144:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 public_key_len = sizeof(public_key);
4145:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte   private_key[1120];
4146:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 private_key_len = sizeof(private_key);
4147:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     DRBG_HANDLE drbg;
4148:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4149:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ssl == NULL)
4150:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
4151:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4152:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     switch (type) {
4153:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_NTRU_EESS439:
4154:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ntruType = NTRU_EES439EP1;
4155:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
4156:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_NTRU_EESS593:
4157:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ntruType = NTRU_EES593EP1;
4158:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
4159:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         case WOLFSSL_NTRU_EESS743:
4160:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             ntruType = NTRU_EES743EP1;
4161:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             break;
4162:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         default:
4163:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             WOLFSSL_MSG("Unknown type for creating NTRU key");
4164:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return -1;
4165:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4166:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = ntru_crypto_drbg_external_instantiate(GetEntropy, &drbg);
4167:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != DRBG_OK) {
4168:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("NTRU drbg instantiate failed\n");
4169:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
4170:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4171:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4172:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = ntru_crypto_ntru_encrypt_keygen(drbg, ntruType,
4173:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                      &public_key_len, NULL, &private_key_len, NULL)) != NTRU_OK)
4174:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
4175:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4176:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((ret = ntru_crypto_ntru_encrypt_keygen(drbg, ntruType,
4177:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         &public_key_len, public_key, &private_key_len, private_key)) != NTRU_OK)
4178:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
4179:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4180:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     ret = ntru_crypto_drbg_uninstantiate(drbg);
4181:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret != NTRU_OK) {
4182:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("NTRU drbg uninstantiate failed\n");
4183:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return ret;
4184:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4185:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4186:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if ((temp = (QSHKey*)XMALLOC(sizeof(QSHKey), NULL,
4187:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                     DYNAMIC_TYPE_TLSX)) == NULL)
4188:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return MEMORY_E;
4189:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->name = type;
4190:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->pub.length = public_key_len;
4191:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->pub.buffer = (byte*)XMALLOC(public_key_len, public_key,
4192:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                 DYNAMIC_TYPE_PUBLIC_KEY);
4193:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(temp->pub.buffer, public_key, public_key_len);
4194:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->pri.length = private_key_len;
4195:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->pri.buffer = (byte*)XMALLOC(private_key_len, private_key,
4196:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                 DYNAMIC_TYPE_ARRAYS);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 101


4197:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     XMEMCPY(temp->pri.buffer, private_key, private_key_len);
4198:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     temp->next = NULL;
4199:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4200:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     TLSX_AddQSHKey(&ssl->QSH_Key, temp);
4201:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4202:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
4203:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4204:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
4205:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4206:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4207:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /*
4208:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     Used to find a public key from the list of keys
4209:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     pubLen length of array
4210:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     name   input the name of the scheme looking for ie WOLFSSL_NTRU_ESSXXX
4211:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4212:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     returns a pointer to public key byte* or NULL if not found
4213:..\acn-sdk-c\src\wolfSSL\src/tls.c ****  */
4214:..\acn-sdk-c\src\wolfSSL\src/tls.c **** static byte* TLSX_QSHKeyFind_Pub(QSHKey* qsh, word16* pubLen, word16 name)
4215:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4216:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     QSHKey* current = qsh;
4217:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4218:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (qsh == NULL || pubLen == NULL)
4219:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return NULL;
4220:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4221:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     *pubLen = 0;
4222:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4223:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while(current) {
4224:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (current->name == name) {
4225:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             *pubLen = current->pub.length;
4226:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return current->pub.buffer;
4227:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
4228:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         current = (QSHKey*)current->next;
4229:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4230:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4231:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return NULL;
4232:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4233:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_QSH */
4234:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4235:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4236:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_PopulateExtensions(WOLFSSL* ssl, byte isServer)
4237:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4238:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte* public_key      = NULL;
4239:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 public_key_len = 0;
4240:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #ifdef HAVE_QSH
4241:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         TLSX* extension;
4242:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         QSHScheme* qsh;
4243:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         QSHScheme* next;
4244:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #endif
4245:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
4246:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4247:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #ifdef HAVE_QSH
4248:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* add supported QSHSchemes */
4249:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_MSG("Adding supported QSH Schemes");
4250:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4251:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* server will add extension depending on whats parsed from client */
4252:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!isServer) {
4253:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 102


4254:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* test if user has set a specific scheme already */
4255:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (!ssl->user_set_QSHSchemes) {
4256:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl->sendQSHKeys && ssl->QSH_Key == NULL) {
4257:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if ((ret = TLSX_CreateQSHKey(ssl, WOLFSSL_NTRU_EESS743)) != 0) {
4258:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         WOLFSSL_MSG("Error creating ntru keys");
4259:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return ret;
4260:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
4261:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if ((ret = TLSX_CreateQSHKey(ssl, WOLFSSL_NTRU_EESS593)) != 0) {
4262:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         WOLFSSL_MSG("Error creating ntru keys");
4263:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return ret;
4264:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
4265:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if ((ret = TLSX_CreateQSHKey(ssl, WOLFSSL_NTRU_EESS439)) != 0) {
4266:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         WOLFSSL_MSG("Error creating ntru keys");
4267:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         return ret;
4268:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
4269:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4270:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* add NTRU 256 */
4271:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 public_key = TLSX_QSHKeyFind_Pub(ssl->QSH_Key,
4272:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         &public_key_len, WOLFSSL_NTRU_EESS743);
4273:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
4274:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (TLSX_UseQSHScheme(&ssl->extensions, WOLFSSL_NTRU_EESS743,
4275:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         public_key, public_key_len) != SSL_SUCCESS)
4276:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = -1;
4277:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4278:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* add NTRU 196 */
4279:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl->sendQSHKeys) {
4280:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     public_key = TLSX_QSHKeyFind_Pub(ssl->QSH_Key,
4281:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         &public_key_len, WOLFSSL_NTRU_EESS593);
4282:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
4283:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (TLSX_UseQSHScheme(&ssl->extensions, WOLFSSL_NTRU_EESS593,
4284:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         public_key, public_key_len) != SSL_SUCCESS)
4285:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = -1;
4286:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4287:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* add NTRU 128 */
4288:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (ssl->sendQSHKeys) {
4289:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     public_key = TLSX_QSHKeyFind_Pub(ssl->QSH_Key,
4290:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         &public_key_len, WOLFSSL_NTRU_EESS439);
4291:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
4292:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (TLSX_UseQSHScheme(&ssl->extensions, WOLFSSL_NTRU_EESS439,
4293:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         public_key, public_key_len) != SSL_SUCCESS)
4294:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     ret = -1;
4295:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
4296:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             else if (ssl->sendQSHKeys && ssl->QSH_Key == NULL) {
4297:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 /* for each scheme make a client key */
4298:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 extension = TLSX_Find(ssl->extensions, TLSX_QUANTUM_SAFE_HYBRID);
4299:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (extension) {
4300:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     qsh = (QSHScheme*)extension->data;
4301:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4302:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     while (qsh) {
4303:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if ((ret = TLSX_CreateQSHKey(ssl, qsh->name)) != 0)
4304:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             return ret;
4305:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4306:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         /* get next now because qsh could be freed */
4307:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         next = qsh->next;
4308:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4309:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         /* find the public key created and add to extension*/
4310:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         public_key = TLSX_QSHKeyFind_Pub(ssl->QSH_Key,
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 103


4311:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                  &public_key_len, qsh->name);
4312:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (TLSX_UseQSHScheme(&ssl->extensions, qsh->name,
4313:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                     public_key, public_key_len) != SSL_SUCCESS)
4314:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             ret = -1;
4315:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         qsh = next;
4316:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
4317:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
4318:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             }
4319:..\acn-sdk-c\src\wolfSSL\src/tls.c ****          } /* is not server */
4320:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #endif
4321:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4322:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)isServer;
4323:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)public_key;
4324:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)public_key_len;
4325:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     (void)ssl;
4326:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4327:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
4328:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4329:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4330:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4331:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
4332:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4333:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Tells the buffered size of extensions to be sent into the client hello. */
4334:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_GetRequestSize(WOLFSSL* ssl)
4335:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4336:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = 0;
4337:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4338:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (TLSX_SupportExtensions(ssl)) {
4339:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte semaphore[SEMAPHORE_SIZE] = {0};
4340:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4341:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         EC_VALIDATE_REQUEST(ssl, semaphore);
4342:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         QSH_VALIDATE_REQUEST(ssl, semaphore);
4343:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         STK_VALIDATE_REQUEST(ssl);
4344:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4345:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->extensions)
4346:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             length += TLSX_GetSize(ssl->extensions, semaphore, 1);
4347:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4348:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->ctx && ssl->ctx->extensions)
4349:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             length += TLSX_GetSize(ssl->ctx->extensions, semaphore, 1);
4350:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4351:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (IsAtLeastTLSv1_2(ssl) && ssl->suites->hashSigAlgoSz)
4352:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             length += ssl->suites->hashSigAlgoSz + HELLO_EXT_LEN;
4353:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4354:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4355:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length)
4356:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE16_LEN; /* for total length storage. */
4357:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4358:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
4359:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4360:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4361:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Writes the extensions to be sent into the client hello. */
4362:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_WriteRequest(WOLFSSL* ssl, byte* output)
4363:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4364:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0;
4365:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4366:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (TLSX_SupportExtensions(ssl) && output) {
4367:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte semaphore[SEMAPHORE_SIZE] = {0};
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 104


4368:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4369:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN; /* extensions length */
4370:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4371:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         EC_VALIDATE_REQUEST(ssl, semaphore);
4372:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         STK_VALIDATE_REQUEST(ssl);
4373:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         QSH_VALIDATE_REQUEST(ssl, semaphore);
4374:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4375:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->extensions)
4376:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += TLSX_Write(ssl->extensions, output + offset,
4377:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                   semaphore, 1);
4378:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4379:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (ssl->ctx && ssl->ctx->extensions)
4380:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += TLSX_Write(ssl->ctx->extensions, output + offset,
4381:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                   semaphore, 1);
4382:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4383:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (IsAtLeastTLSv1_2(ssl) && ssl->suites->hashSigAlgoSz)
4384:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         {
4385:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             int i;
4386:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* extension type */
4387:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             c16toa(HELLO_EXT_SIG_ALGO, output + offset);
4388:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += HELLO_EXT_TYPE_SZ;
4389:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4390:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* extension data length */
4391:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             c16toa(OPAQUE16_LEN + ssl->suites->hashSigAlgoSz, output + offset);
4392:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += OPAQUE16_LEN;
4393:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4394:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* sig algos length */
4395:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             c16toa(ssl->suites->hashSigAlgoSz, output + offset);
4396:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             offset += OPAQUE16_LEN;
4397:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4398:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             /* sig algos */
4399:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             for (i = 0; i < ssl->suites->hashSigAlgoSz; i++, offset++)
4400:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 output[offset] = ssl->suites->hashSigAlgo[i];
4401:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
4402:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4403:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (offset > OPAQUE16_LEN)
4404:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             c16toa(offset - OPAQUE16_LEN, output); /* extensions length */
4405:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4406:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4407:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
4408:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4409:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4410:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_CLIENT */
4411:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4412:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_SERVER
4413:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4414:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Tells the buffered size of extensions to be sent into the server hello. */
4415:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_GetResponseSize(WOLFSSL* ssl)
4416:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4417:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 length = 0;
4418:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     byte semaphore[SEMAPHORE_SIZE] = {0};
4419:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4420:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #ifdef HAVE_QSH
4421:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* change response if not using TLS_QSH */
4422:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (!ssl->options.haveQSH) {
4423:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             TLSX* ext = TLSX_Find(ssl->extensions, TLSX_QUANTUM_SAFE_HYBRID);
4424:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             if (ext)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 105


4425:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ext->resp = 0;
4426:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
4427:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     #endif
4428:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4429:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (TLSX_SupportExtensions(ssl))
4430:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += TLSX_GetSize(ssl->extensions, semaphore, 0);
4431:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4432:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     /* All the response data is set at the ssl object only, so no ctx here. */
4433:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4434:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (length)
4435:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         length += OPAQUE16_LEN; /* for total length storage */
4436:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4437:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return length;
4438:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4439:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4440:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Writes the server hello extensions into a buffer. */
4441:..\acn-sdk-c\src\wolfSSL\src/tls.c **** word16 TLSX_WriteResponse(WOLFSSL *ssl, byte* output)
4442:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4443:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0;
4444:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4445:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (TLSX_SupportExtensions(ssl) && output) {
4446:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         byte semaphore[SEMAPHORE_SIZE] = {0};
4447:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4448:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN; /* extensions length */
4449:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4450:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += TLSX_Write(ssl->extensions, output + offset, semaphore, 0);
4451:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4452:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (offset > OPAQUE16_LEN)
4453:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             c16toa(offset - OPAQUE16_LEN, output); /* extensions length */
4454:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4455:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4456:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return offset;
4457:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4458:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4459:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* NO_WOLFSSL_SERVER */
4460:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4461:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /** Parses a buffer of TLS extensions. */
4462:..\acn-sdk-c\src\wolfSSL\src/tls.c **** int TLSX_Parse(WOLFSSL* ssl, byte* input, word16 length, byte isRequest,
4463:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                                  Suites *suites)
4464:..\acn-sdk-c\src\wolfSSL\src/tls.c **** {
4465:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     int ret = 0;
4466:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     word16 offset = 0;
4467:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4468:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (!ssl || !input || (isRequest && !suites))
4469:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return BAD_FUNC_ARG;
4470:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4471:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     while (ret == 0 && offset < length) {
4472:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 type;
4473:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         word16 size;
4474:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4475:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (length - offset < HELLO_EXT_TYPE_SZ + OPAQUE16_LEN)
4476:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
4477:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4478:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset, &type);
4479:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += HELLO_EXT_TYPE_SZ;
4480:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4481:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ato16(input + offset, &size);
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 106


4482:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += OPAQUE16_LEN;
4483:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4484:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (offset + size > length)
4485:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             return BUFFER_ERROR;
4486:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4487:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         switch (type) {
4488:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SERVER_NAME:
4489:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("SNI extension received");
4490:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4491:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = SNI_PARSE(ssl, input + offset, size, isRequest);
4492:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4493:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4494:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_MAX_FRAGMENT_LENGTH:
4495:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Max Fragment Length extension received");
4496:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4497:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = MFL_PARSE(ssl, input + offset, size, isRequest);
4498:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4499:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4500:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_TRUNCATED_HMAC:
4501:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Truncated HMAC extension received");
4502:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4503:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = THM_PARSE(ssl, input + offset, size, isRequest);
4504:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4505:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4506:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SUPPORTED_GROUPS:
4507:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Elliptic Curves extension received");
4508:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4509:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = EC_PARSE(ssl, input + offset, size, isRequest);
4510:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4511:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4512:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST:
4513:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Certificate Status Request extension received");
4514:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4515:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = CSR_PARSE(ssl, input + offset, size, isRequest);
4516:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4517:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4518:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_STATUS_REQUEST_V2:
4519:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Certificate Status Request v2 extension received");
4520:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4521:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = CSR2_PARSE(ssl, input + offset, size, isRequest);
4522:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4523:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4524:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_RENEGOTIATION_INFO:
4525:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Secure Renegotiation extension received");
4526:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4527:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = SCR_PARSE(ssl, input + offset, size, isRequest);
4528:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4529:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4530:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_SESSION_TICKET:
4531:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Session Ticket extension received");
4532:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4533:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = STK_PARSE(ssl, input + offset, size, isRequest);
4534:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4535:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4536:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_QUANTUM_SAFE_HYBRID:
4537:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("Quantum-Safe-Hybrid extension received");
4538:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 107


4539:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = QSH_PARSE(ssl, input + offset, size, isRequest);
4540:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4541:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4542:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case TLSX_APPLICATION_LAYER_PROTOCOL:
4543:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 WOLFSSL_MSG("ALPN extension received");
4544:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4545:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 ret = ALPN_PARSE(ssl, input + offset, size, isRequest);
4546:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4547:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4548:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             case HELLO_EXT_SIG_ALGO:
4549:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 if (isRequest) {
4550:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     /* do not mess with offset inside the switch! */
4551:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     if (IsAtLeastTLSv1_2(ssl)) {
4552:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         ato16(input + offset, &suites->hashSigAlgoSz);
4553:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4554:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         if (suites->hashSigAlgoSz > size - OPAQUE16_LEN)
4555:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                             return BUFFER_ERROR;
4556:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4557:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                         XMEMCPY(suites->hashSigAlgo,
4558:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                 input + offset + OPAQUE16_LEN,
4559:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                 min(suites->hashSigAlgoSz,
4560:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                         HELLO_EXT_SIGALGO_MAX));
4561:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     }
4562:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 } else {
4563:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                     WOLFSSL_MSG("Servers MUST NOT send SIG ALGO extension.");
4564:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 }
4565:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4566:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                 break;
4567:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
4568:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4569:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         /* offset should be updated here! */
4570:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         offset += size;
4571:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4572:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4573:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     if (ret == 0)
4574:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         ret = SNI_VERIFY_PARSE(ssl, isRequest);
4575:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4576:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     return ret;
4577:..\acn-sdk-c\src\wolfSSL\src/tls.c **** }
4578:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4579:..\acn-sdk-c\src\wolfSSL\src/tls.c **** /* undefining semaphore macros */
4580:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #undef IS_OFF
4581:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #undef TURN_ON
4582:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #undef SEMAPHORE_SIZE
4583:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4584:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* HAVE_TLS_EXTENSIONS */
4585:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4586:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_WOLFSSL_CLIENT
4587:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4588:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_OLD_TLS
4589:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4590:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     WOLFSSL_METHOD* wolfTLSv1_client_method(void)
4591:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     {
4592:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_METHOD* method =
4593:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                              (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD), 0,
4594:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                       DYNAMIC_TYPE_METHOD);
4595:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (method)
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 108


4596:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             InitSSL_Method(method, MakeTLSv1());
4597:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return method;
4598:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4599:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4600:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4601:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     WOLFSSL_METHOD* wolfTLSv1_1_client_method(void)
4602:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     {
4603:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_METHOD* method =
4604:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD), 0,
4605:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                        DYNAMIC_TYPE_METHOD);
4606:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (method)
4607:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             InitSSL_Method(method, MakeTLSv1_1());
4608:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return method;
4609:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
4610:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4611:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif /* !NO_OLD_TLS */
4612:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4613:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_SHA256   /* can't use without SHA256 */
4614:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4615:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     WOLFSSL_METHOD* wolfTLSv1_2_client_method(void)
4616:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     {
 1221              		.loc 1 4616 0
 1222              		.cfi_startproc
 1223 0000 13B5     		push	{r0, r1, r4, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 0, -16
 1226              		.cfi_offset 1, -12
 1227              		.cfi_offset 4, -8
 1228              		.cfi_offset 14, -4
4617:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_METHOD* method =
 1229              		.loc 1 4617 0
 1230 0002 0420     		mov	r0, #4
 1231 0004 FFF7FEFF 		bl	wolfSSL_Malloc
 1232              	.LVL154:
 1233 0008 041E     		sub	r4, r0, #0
 1234              	.LVL155:
4618:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD), 0,
4619:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                        DYNAMIC_TYPE_METHOD);
4620:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (method)
 1235              		.loc 1 4620 0
 1236 000a 06D0     		beq	.L89
 1237              	.LVL156:
 1238 000c 0322     		mov	r2, #3
 1239 000e 01AB     		add	r3, sp, #4
 1240 0010 1A70     		strb	r2, [r3]
 1241 0012 5A70     		strb	r2, [r3, #1]
4621:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             InitSSL_Method(method, MakeTLSv1_2());
 1242              		.loc 1 4621 0
 1243 0014 0199     		ldr	r1, [sp, #4]
 1244 0016 FFF7FEFF 		bl	InitSSL_Method
 1245              	.LVL157:
 1246              	.L89:
4622:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return method;
4623:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 1247              		.loc 1 4623 0
 1248 001a 201C     		mov	r0, r4
 1249              		@ sp needed
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 109


 1250              	.LVL158:
 1251 001c 16BD     		pop	{r1, r2, r4, pc}
 1252              		.cfi_endproc
 1253              	.LFE28:
 1254              		.size	wolfTLSv1_2_client_method, .-wolfTLSv1_2_client_method
 1255              		.section	.text.wolfSSLv23_client_method,"ax",%progbits
 1256              		.align	1
 1257              		.global	wolfSSLv23_client_method
 1258              		.code	16
 1259              		.thumb_func
 1260              		.type	wolfSSLv23_client_method, %function
 1261              	wolfSSLv23_client_method:
 1262              	.LFB29:
4624:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4625:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
4626:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4627:..\acn-sdk-c\src\wolfSSL\src/tls.c **** 
4628:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     WOLFSSL_METHOD* wolfSSLv23_client_method(void)
4629:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     {
 1263              		.loc 1 4629 0
 1264              		.cfi_startproc
 1265 0000 13B5     		push	{r0, r1, r4, lr}
 1266              		.cfi_def_cfa_offset 16
 1267              		.cfi_offset 0, -16
 1268              		.cfi_offset 1, -12
 1269              		.cfi_offset 4, -8
 1270              		.cfi_offset 14, -4
4630:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         WOLFSSL_METHOD* method =
 1271              		.loc 1 4630 0
 1272 0002 0420     		mov	r0, #4
 1273 0004 FFF7FEFF 		bl	wolfSSL_Malloc
 1274              	.LVL159:
 1275 0008 041E     		sub	r4, r0, #0
 1276              	.LVL160:
4631:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                               (WOLFSSL_METHOD*) XMALLOC(sizeof(WOLFSSL_METHOD), 0,
4632:..\acn-sdk-c\src\wolfSSL\src/tls.c ****                                                        DYNAMIC_TYPE_METHOD);
4633:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         if (method) {
 1277              		.loc 1 4633 0
 1278 000a 06D0     		beq	.L94
 1279              	.LVL161:
 1280 000c 0322     		mov	r2, #3
 1281 000e 01AB     		add	r3, sp, #4
 1282 0010 1A70     		strb	r2, [r3]
 1283 0012 5A70     		strb	r2, [r3, #1]
4634:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_SHA256         /* 1.2 requires SHA256 */
4635:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             InitSSL_Method(method, MakeTLSv1_2());
 1284              		.loc 1 4635 0
 1285 0014 0199     		ldr	r1, [sp, #4]
 1286 0016 FFF7FEFF 		bl	InitSSL_Method
 1287              	.LVL162:
 1288              	.L94:
4636:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #else
4637:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             InitSSL_Method(method, MakeTLSv1_1());
4638:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
4639:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #ifndef NO_OLD_TLS
4640:..\acn-sdk-c\src\wolfSSL\src/tls.c ****             method->downgrade = 1;
4641:..\acn-sdk-c\src\wolfSSL\src/tls.c **** #endif
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 110


4642:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         }
4643:..\acn-sdk-c\src\wolfSSL\src/tls.c ****         return method;
4644:..\acn-sdk-c\src\wolfSSL\src/tls.c ****     }
 1289              		.loc 1 4644 0
 1290 001a 201C     		mov	r0, r4
 1291              		@ sp needed
 1292              	.LVL163:
 1293 001c 16BD     		pop	{r1, r2, r4, pc}
 1294              		.cfi_endproc
 1295              	.LFE29:
 1296              		.size	wolfSSLv23_client_method, .-wolfSSLv23_client_method
 1297              		.section	.rodata
 1298              		.set	.LANCHOR0,. + 0
 1299              		.type	tls_client, %object
 1300              		.size	tls_client, 16
 1301              	tls_client:
 1302 0000 636C6965 		.ascii	"client finished\000"
 1302      6E742066 
 1302      696E6973 
 1302      68656400 
 1303              		.type	tls_server, %object
 1304              		.size	tls_server, 16
 1305              	tls_server:
 1306 0010 73657276 		.ascii	"server finished\000"
 1306      65722066 
 1306      696E6973 
 1306      68656400 
 1307              		.type	client, %object
 1308              		.size	client, 4
 1309              	client:
 1310 0020 43       		.byte	67
 1311 0021 4C       		.byte	76
 1312 0022 4E       		.byte	78
 1313 0023 54       		.byte	84
 1314              		.type	key_label, %object
 1315              		.size	key_label, 14
 1316              	key_label:
 1317 0024 6B657920 		.ascii	"key expansion\000"
 1317      65787061 
 1317      6E73696F 
 1317      6E00
 1318              		.type	master_label, %object
 1319              		.size	master_label, 14
 1320              	master_label:
 1321 0032 6D617374 		.ascii	"master secret\000"
 1321      65722073 
 1321      65637265 
 1321      7400
 1322              		.text
 1323              	.Letext0:
 1324              		.file 3 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/internal.h"
 1325              		.file 4 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/ssl.h"
 1326              		.file 5 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/wc_port.h"
 1327              		.file 6 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/types.h"
 1328              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 1329              		.file 8 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/sha256.h"
 1330              		.file 9 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/random.h"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 111


 1331              		.file 10 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/sha.h"
 1332              		.file 11 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/asn.h"
 1333              		.file 12 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/hmac.h"
 1334              		.file 13 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/error-crypt.h"
 1335              		.file 14 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/hash.h"
 1336              		.file 15 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9
 1337              		.file 16 "..\\acn-sdk-c\\src\\wolfSSL/wolfssl/wolfcrypt/memory.h"
 1338              		.section	.debug_info,"",%progbits
 1339              	.Ldebug_info0:
 1340 0000 72360000 		.4byte	0x3672
 1341 0004 0400     		.2byte	0x4
 1342 0006 00000000 		.4byte	.Ldebug_abbrev0
 1343 000a 04       		.byte	0x4
 1344 000b 01       		.uleb128 0x1
 1345 000c AE070000 		.4byte	.LASF828
 1346 0010 01       		.byte	0x1
 1347 0011 AD010000 		.4byte	.LASF829
 1348 0015 3C280000 		.4byte	.LASF830
 1349 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1350 001d 00000000 		.4byte	0
 1351 0021 00000000 		.4byte	.Ldebug_line0
 1352 0025 02       		.uleb128 0x2
 1353 0026 2B180000 		.4byte	.LASF30
 1354 002a 04       		.byte	0x4
 1355 002b 42       		.byte	0x42
 1356 002c 30000000 		.4byte	0x30
 1357 0030 03       		.uleb128 0x3
 1358 0031 2B180000 		.4byte	.LASF30
 1359 0035 1C02     		.2byte	0x21c
 1360 0037 03       		.byte	0x3
 1361 0038 DC09     		.2byte	0x9dc
 1362 003a 09020000 		.4byte	0x209
 1363 003e 04       		.uleb128 0x4
 1364 003f 63747800 		.ascii	"ctx\000"
 1365 0043 03       		.byte	0x3
 1366 0044 DD09     		.2byte	0x9dd
 1367 0046 A9210000 		.4byte	0x21a9
 1368 004a 00       		.byte	0
 1369 004b 05       		.uleb128 0x5
 1370 004c B3140000 		.4byte	.LASF0
 1371 0050 03       		.byte	0x3
 1372 0051 DE09     		.2byte	0x9de
 1373 0053 F4190000 		.4byte	0x19f4
 1374 0057 04       		.byte	0x4
 1375 0058 05       		.uleb128 0x5
 1376 0059 1B2C0000 		.4byte	.LASF1
 1377 005d 03       		.byte	0x3
 1378 005e DF09     		.2byte	0x9df
 1379 0060 AF210000 		.4byte	0x21af
 1380 0064 08       		.byte	0x8
 1381 0065 05       		.uleb128 0x5
 1382 0066 661A0000 		.4byte	.LASF2
 1383 006a 03       		.byte	0x3
 1384 006b E009     		.2byte	0x9e0
 1385 006d B5210000 		.4byte	0x21b5
 1386 0071 0C       		.byte	0xc
 1387 0072 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 112


 1388 0073 2F000000 		.4byte	.LASF3
 1389 0077 03       		.byte	0x3
 1390 0078 E109     		.2byte	0x9e1
 1391 007a 1E080000 		.4byte	0x81e
 1392 007e 10       		.byte	0x10
 1393 007f 05       		.uleb128 0x5
 1394 0080 A70E0000 		.4byte	.LASF4
 1395 0084 03       		.byte	0x3
 1396 0085 E209     		.2byte	0x9e2
 1397 0087 1E080000 		.4byte	0x81e
 1398 008b 14       		.byte	0x14
 1399 008c 04       		.uleb128 0x4
 1400 008d 726E6700 		.ascii	"rng\000"
 1401 0091 03       		.byte	0x3
 1402 0092 E309     		.2byte	0x9e3
 1403 0094 BB210000 		.4byte	0x21bb
 1404 0098 18       		.byte	0x18
 1405 0099 05       		.uleb128 0x5
 1406 009a 181E0000 		.4byte	.LASF5
 1407 009e 03       		.byte	0x3
 1408 009f E409     		.2byte	0x9e4
 1409 00a1 1E080000 		.4byte	0x81e
 1410 00a5 1C       		.byte	0x1c
 1411 00a6 05       		.uleb128 0x5
 1412 00a7 58110000 		.4byte	.LASF6
 1413 00ab 03       		.byte	0x3
 1414 00ac E509     		.2byte	0x9e5
 1415 00ae 2B080000 		.4byte	0x82b
 1416 00b2 20       		.byte	0x20
 1417 00b3 05       		.uleb128 0x5
 1418 00b4 8B230000 		.4byte	.LASF7
 1419 00b8 03       		.byte	0x3
 1420 00b9 E609     		.2byte	0x9e6
 1421 00bb 1E080000 		.4byte	0x81e
 1422 00bf 24       		.byte	0x24
 1423 00c0 05       		.uleb128 0x5
 1424 00c1 95270000 		.4byte	.LASF8
 1425 00c5 03       		.byte	0x3
 1426 00c6 E809     		.2byte	0x9e8
 1427 00c8 B60A0000 		.4byte	0xab6
 1428 00cc 28       		.byte	0x28
 1429 00cd 05       		.uleb128 0x5
 1430 00ce B71A0000 		.4byte	.LASF9
 1431 00d2 03       		.byte	0x3
 1432 00d3 E909     		.2byte	0x9e9
 1433 00d5 1E080000 		.4byte	0x81e
 1434 00d9 2C       		.byte	0x2c
 1435 00da 05       		.uleb128 0x5
 1436 00db CE2A0000 		.4byte	.LASF10
 1437 00df 03       		.byte	0x3
 1438 00e0 EB09     		.2byte	0x9eb
 1439 00e2 CF060000 		.4byte	0x6cf
 1440 00e6 30       		.byte	0x30
 1441 00e7 05       		.uleb128 0x5
 1442 00e8 7E190000 		.4byte	.LASF11
 1443 00ec 03       		.byte	0x3
 1444 00ed EC09     		.2byte	0x9ec
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 113


 1445 00ef 5F1B0000 		.4byte	0x1b5f
 1446 00f3 34       		.byte	0x34
 1447 00f4 05       		.uleb128 0x5
 1448 00f5 18150000 		.4byte	.LASF12
 1449 00f9 03       		.byte	0x3
 1450 00fa ED09     		.2byte	0x9ed
 1451 00fc 0F1B0000 		.4byte	0x1b0f
 1452 0100 38       		.byte	0x38
 1453 0101 05       		.uleb128 0x5
 1454 0102 B7030000 		.4byte	.LASF13
 1455 0106 03       		.byte	0x3
 1456 0107 EE09     		.2byte	0x9ee
 1457 0109 0F1B0000 		.4byte	0x1b0f
 1458 010d 39       		.byte	0x39
 1459 010e 05       		.uleb128 0x5
 1460 010f E6250000 		.4byte	.LASF14
 1461 0113 03       		.byte	0x3
 1462 0114 EF09     		.2byte	0x9ef
 1463 0116 5B1C0000 		.4byte	0x1c5b
 1464 011a 3C       		.byte	0x3c
 1465 011b 05       		.uleb128 0x5
 1466 011c 481C0000 		.4byte	.LASF15
 1467 0120 03       		.byte	0x3
 1468 0121 F009     		.2byte	0x9f0
 1469 0123 09020000 		.4byte	0x209
 1470 0127 9C       		.byte	0x9c
 1471 0128 06       		.uleb128 0x6
 1472 0129 782B0000 		.4byte	.LASF16
 1473 012d 03       		.byte	0x3
 1474 012e F109     		.2byte	0x9f1
 1475 0130 9A070000 		.4byte	0x79a
 1476 0134 0C01     		.2byte	0x10c
 1477 0136 06       		.uleb128 0x6
 1478 0137 54100000 		.4byte	.LASF17
 1479 013b 03       		.byte	0x3
 1480 013c F209     		.2byte	0x9f2
 1481 013e 02070000 		.4byte	0x702
 1482 0142 1C01     		.2byte	0x11c
 1483 0144 07       		.uleb128 0x7
 1484 0145 72666400 		.ascii	"rfd\000"
 1485 0149 03       		.byte	0x3
 1486 014a F309     		.2byte	0x9f3
 1487 014c 02070000 		.4byte	0x702
 1488 0150 2001     		.2byte	0x120
 1489 0152 07       		.uleb128 0x7
 1490 0153 77666400 		.ascii	"wfd\000"
 1491 0157 03       		.byte	0x3
 1492 0158 F409     		.2byte	0x9f4
 1493 015a 02070000 		.4byte	0x702
 1494 015e 2401     		.2byte	0x124
 1495 0160 06       		.uleb128 0x6
 1496 0161 32130000 		.4byte	.LASF18
 1497 0165 03       		.byte	0x3
 1498 0166 F509     		.2byte	0x9f5
 1499 0168 02070000 		.4byte	0x702
 1500 016c 2801     		.2byte	0x128
 1501 016e 06       		.uleb128 0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 114


 1502 016f FC220000 		.4byte	.LASF19
 1503 0173 03       		.byte	0x3
 1504 0174 F609     		.2byte	0x9f6
 1505 0176 02070000 		.4byte	0x702
 1506 017a 2C01     		.2byte	0x12c
 1507 017c 06       		.uleb128 0x6
 1508 017d BE0D0000 		.4byte	.LASF20
 1509 0181 03       		.byte	0x3
 1510 0182 F709     		.2byte	0x9f7
 1511 0184 040B0000 		.4byte	0xb04
 1512 0188 3001     		.2byte	0x130
 1513 018a 06       		.uleb128 0x6
 1514 018b AC1A0000 		.4byte	.LASF21
 1515 018f 03       		.byte	0x3
 1516 0190 F809     		.2byte	0x9f8
 1517 0192 040B0000 		.4byte	0xb04
 1518 0196 3401     		.2byte	0x134
 1519 0198 06       		.uleb128 0x6
 1520 0199 16090000 		.4byte	.LASF22
 1521 019d 03       		.byte	0x3
 1522 019e F909     		.2byte	0x9f9
 1523 01a0 F20A0000 		.4byte	0xaf2
 1524 01a4 3801     		.2byte	0x138
 1525 01a6 06       		.uleb128 0x6
 1526 01a7 6E1E0000 		.4byte	.LASF23
 1527 01ab 03       		.byte	0x3
 1528 01ac FA09     		.2byte	0x9fa
 1529 01ae 62200000 		.4byte	0x2062
 1530 01b2 3A01     		.2byte	0x13a
 1531 01b4 06       		.uleb128 0x6
 1532 01b5 90180000 		.4byte	.LASF24
 1533 01b9 03       		.byte	0x3
 1534 01ba FB09     		.2byte	0x9fb
 1535 01bc 5C210000 		.4byte	0x215c
 1536 01c0 4001     		.2byte	0x140
 1537 01c2 06       		.uleb128 0x6
 1538 01c3 C62A0000 		.4byte	.LASF25
 1539 01c7 03       		.byte	0x3
 1540 01c8 FC09     		.2byte	0x9fc
 1541 01ca 99150000 		.4byte	0x1599
 1542 01ce 4201     		.2byte	0x142
 1543 01d0 06       		.uleb128 0x6
 1544 01d1 DC1A0000 		.4byte	.LASF26
 1545 01d5 03       		.byte	0x3
 1546 01d6 FD09     		.2byte	0x9fd
 1547 01d8 99150000 		.4byte	0x1599
 1548 01dc 4401     		.2byte	0x144
 1549 01de 06       		.uleb128 0x6
 1550 01df 9C210000 		.4byte	.LASF27
 1551 01e3 03       		.byte	0x3
 1552 01e4 FE09     		.2byte	0x9fe
 1553 01e6 A41A0000 		.4byte	0x1aa4
 1554 01ea 4601     		.2byte	0x146
 1555 01ec 06       		.uleb128 0x6
 1556 01ed 8A1C0000 		.4byte	.LASF28
 1557 01f1 03       		.byte	0x3
 1558 01f2 FF09     		.2byte	0x9ff
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 115


 1559 01f4 DC190000 		.4byte	0x19dc
 1560 01f8 5801     		.2byte	0x158
 1561 01fa 06       		.uleb128 0x6
 1562 01fb 532C0000 		.4byte	.LASF29
 1563 01ff 03       		.byte	0x3
 1564 0200 000A     		.2byte	0xa00
 1565 0202 471F0000 		.4byte	0x1f47
 1566 0206 0C02     		.2byte	0x20c
 1567 0208 00       		.byte	0
 1568 0209 02       		.uleb128 0x2
 1569 020a 84020000 		.4byte	.LASF31
 1570 020e 04       		.byte	0x4
 1571 020f 43       		.byte	0x43
 1572 0210 14020000 		.4byte	0x214
 1573 0214 08       		.uleb128 0x8
 1574 0215 84020000 		.4byte	.LASF31
 1575 0219 70       		.byte	0x70
 1576 021a 03       		.byte	0x3
 1577 021b 4908     		.2byte	0x849
 1578 021d 7D020000 		.4byte	0x27d
 1579 0221 05       		.uleb128 0x5
 1580 0222 2E020000 		.4byte	.LASF32
 1581 0226 03       		.byte	0x3
 1582 0227 4A08     		.2byte	0x84a
 1583 0229 040B0000 		.4byte	0xb04
 1584 022d 00       		.byte	0
 1585 022e 05       		.uleb128 0x5
 1586 022f BE0D0000 		.4byte	.LASF20
 1587 0233 03       		.byte	0x3
 1588 0234 4B08     		.2byte	0x84b
 1589 0236 040B0000 		.4byte	0xb04
 1590 023a 04       		.byte	0x4
 1591 023b 05       		.uleb128 0x5
 1592 023c 6A0D0000 		.4byte	.LASF33
 1593 0240 03       		.byte	0x3
 1594 0241 4C08     		.2byte	0x84c
 1595 0243 B4100000 		.4byte	0x10b4
 1596 0247 08       		.byte	0x8
 1597 0248 05       		.uleb128 0x5
 1598 0249 1B010000 		.4byte	.LASF34
 1599 024d 03       		.byte	0x3
 1600 024e 4D08     		.2byte	0x84d
 1601 0250 E70A0000 		.4byte	0xae7
 1602 0254 28       		.byte	0x28
 1603 0255 05       		.uleb128 0x5
 1604 0256 662B0000 		.4byte	.LASF35
 1605 025a 03       		.byte	0x3
 1606 025b 4E08     		.2byte	0x84e
 1607 025d 4F1B0000 		.4byte	0x1b4f
 1608 0261 29       		.byte	0x29
 1609 0262 05       		.uleb128 0x5
 1610 0263 90000000 		.4byte	.LASF36
 1611 0267 03       		.byte	0x3
 1612 0268 5608     		.2byte	0x856
 1613 026a F20A0000 		.4byte	0xaf2
 1614 026e 5A       		.byte	0x5a
 1615 026f 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 116


 1616 0270 FC0B0000 		.4byte	.LASF37
 1617 0274 03       		.byte	0x3
 1618 0275 5708     		.2byte	0x857
 1619 0277 94100000 		.4byte	0x1094
 1620 027b 5C       		.byte	0x5c
 1621 027c 00       		.byte	0
 1622 027d 02       		.uleb128 0x2
 1623 027e 011C0000 		.4byte	.LASF38
 1624 0282 04       		.byte	0x4
 1625 0283 44       		.byte	0x44
 1626 0284 88020000 		.4byte	0x288
 1627 0288 08       		.uleb128 0x8
 1628 0289 011C0000 		.4byte	.LASF38
 1629 028d 04       		.byte	0x4
 1630 028e 03       		.byte	0x3
 1631 028f A904     		.2byte	0x4a9
 1632 0291 BD020000 		.4byte	0x2bd
 1633 0295 05       		.uleb128 0x5
 1634 0296 C62A0000 		.4byte	.LASF25
 1635 029a 03       		.byte	0x3
 1636 029b AA04     		.2byte	0x4aa
 1637 029d 99150000 		.4byte	0x1599
 1638 02a1 00       		.byte	0
 1639 02a2 05       		.uleb128 0x5
 1640 02a3 732B0000 		.4byte	.LASF39
 1641 02a7 03       		.byte	0x3
 1642 02a8 AB04     		.2byte	0x4ab
 1643 02aa E70A0000 		.4byte	0xae7
 1644 02ae 02       		.byte	0x2
 1645 02af 05       		.uleb128 0x5
 1646 02b0 05120000 		.4byte	.LASF40
 1647 02b4 03       		.byte	0x3
 1648 02b5 AC04     		.2byte	0x4ac
 1649 02b7 E70A0000 		.4byte	0xae7
 1650 02bb 03       		.byte	0x3
 1651 02bc 00       		.byte	0
 1652 02bd 02       		.uleb128 0x2
 1653 02be FB180000 		.4byte	.LASF41
 1654 02c2 04       		.byte	0x4
 1655 02c3 45       		.byte	0x45
 1656 02c4 C8020000 		.4byte	0x2c8
 1657 02c8 08       		.uleb128 0x8
 1658 02c9 FB180000 		.4byte	.LASF41
 1659 02cd 48       		.byte	0x48
 1660 02ce 03       		.byte	0x3
 1661 02cf 1F07     		.2byte	0x71f
 1662 02d1 5B040000 		.4byte	0x45b
 1663 02d5 05       		.uleb128 0x5
 1664 02d6 E42A0000 		.4byte	.LASF42
 1665 02da 03       		.byte	0x3
 1666 02db 2007     		.2byte	0x720
 1667 02dd E8190000 		.4byte	0x19e8
 1668 02e1 00       		.byte	0
 1669 02e2 05       		.uleb128 0x5
 1670 02e3 ED160000 		.4byte	.LASF43
 1671 02e7 03       		.byte	0x3
 1672 02e8 2107     		.2byte	0x721
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 117


 1673 02ea DC0A0000 		.4byte	0xadc
 1674 02ee 04       		.byte	0x4
 1675 02ef 05       		.uleb128 0x5
 1676 02f0 C8120000 		.4byte	.LASF44
 1677 02f4 03       		.byte	0x3
 1678 02f5 2207     		.2byte	0x722
 1679 02f7 02070000 		.4byte	0x702
 1680 02fb 08       		.byte	0x8
 1681 02fc 05       		.uleb128 0x5
 1682 02fd D7100000 		.4byte	.LASF45
 1683 0301 03       		.byte	0x3
 1684 0302 2807     		.2byte	0x728
 1685 0304 EE190000 		.4byte	0x19ee
 1686 0308 0C       		.byte	0xc
 1687 0309 05       		.uleb128 0x5
 1688 030a 912C0000 		.4byte	.LASF46
 1689 030e 03       		.byte	0x3
 1690 030f 2907     		.2byte	0x729
 1691 0311 EE190000 		.4byte	0x19ee
 1692 0315 10       		.byte	0x10
 1693 0316 05       		.uleb128 0x5
 1694 0317 1B1B0000 		.4byte	.LASF47
 1695 031b 03       		.byte	0x3
 1696 031c 2B07     		.2byte	0x72b
 1697 031e EE190000 		.4byte	0x19ee
 1698 0322 14       		.byte	0x14
 1699 0323 04       		.uleb128 0x4
 1700 0324 636D00   		.ascii	"cm\000"
 1701 0327 03       		.byte	0x3
 1702 0328 2C07     		.2byte	0x72c
 1703 032a 34070000 		.4byte	0x734
 1704 032e 18       		.byte	0x18
 1705 032f 05       		.uleb128 0x5
 1706 0330 B3140000 		.4byte	.LASF0
 1707 0334 03       		.byte	0x3
 1708 0335 2E07     		.2byte	0x72e
 1709 0337 F4190000 		.4byte	0x19f4
 1710 033b 1C       		.byte	0x1c
 1711 033c 05       		.uleb128 0x5
 1712 033d 8B230000 		.4byte	.LASF7
 1713 0341 03       		.byte	0x3
 1714 0342 2F07     		.2byte	0x72f
 1715 0344 1E080000 		.4byte	0x81e
 1716 0348 20       		.byte	0x20
 1717 0349 05       		.uleb128 0x5
 1718 034a 28120000 		.4byte	.LASF48
 1719 034e 03       		.byte	0x3
 1720 034f 3007     		.2byte	0x730
 1721 0351 E70A0000 		.4byte	0xae7
 1722 0355 24       		.byte	0x24
 1723 0356 05       		.uleb128 0x5
 1724 0357 3F180000 		.4byte	.LASF49
 1725 035b 03       		.byte	0x3
 1726 035c 3107     		.2byte	0x731
 1727 035e E70A0000 		.4byte	0xae7
 1728 0362 25       		.byte	0x25
 1729 0363 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 118


 1730 0364 EA010000 		.4byte	.LASF50
 1731 0368 03       		.byte	0x3
 1732 0369 3207     		.2byte	0x732
 1733 036b E70A0000 		.4byte	0xae7
 1734 036f 26       		.byte	0x26
 1735 0370 05       		.uleb128 0x5
 1736 0371 B2100000 		.4byte	.LASF51
 1737 0375 03       		.byte	0x3
 1738 0376 3307     		.2byte	0x733
 1739 0378 E70A0000 		.4byte	0xae7
 1740 037c 27       		.byte	0x27
 1741 037d 05       		.uleb128 0x5
 1742 037e 101C0000 		.4byte	.LASF52
 1743 0382 03       		.byte	0x3
 1744 0383 3407     		.2byte	0x734
 1745 0385 E70A0000 		.4byte	0xae7
 1746 0389 28       		.byte	0x28
 1747 038a 05       		.uleb128 0x5
 1748 038b AD110000 		.4byte	.LASF53
 1749 038f 03       		.byte	0x3
 1750 0390 3507     		.2byte	0x735
 1751 0392 E70A0000 		.4byte	0xae7
 1752 0396 29       		.byte	0x29
 1753 0397 05       		.uleb128 0x5
 1754 0398 D80D0000 		.4byte	.LASF54
 1755 039c 03       		.byte	0x3
 1756 039d 3607     		.2byte	0x736
 1757 039f E70A0000 		.4byte	0xae7
 1758 03a3 2A       		.byte	0x2a
 1759 03a4 05       		.uleb128 0x5
 1760 03a5 F82A0000 		.4byte	.LASF55
 1761 03a9 03       		.byte	0x3
 1762 03aa 3707     		.2byte	0x737
 1763 03ac E70A0000 		.4byte	0xae7
 1764 03b0 2B       		.byte	0x2b
 1765 03b1 05       		.uleb128 0x5
 1766 03b2 50140000 		.4byte	.LASF56
 1767 03b6 03       		.byte	0x3
 1768 03b7 3807     		.2byte	0x738
 1769 03b9 E70A0000 		.4byte	0xae7
 1770 03bd 2C       		.byte	0x2c
 1771 03be 05       		.uleb128 0x5
 1772 03bf D70E0000 		.4byte	.LASF57
 1773 03c3 03       		.byte	0x3
 1774 03c4 3907     		.2byte	0x739
 1775 03c6 E70A0000 		.4byte	0xae7
 1776 03ca 2D       		.byte	0x2d
 1777 03cb 05       		.uleb128 0x5
 1778 03cc 3D290000 		.4byte	.LASF58
 1779 03d0 03       		.byte	0x3
 1780 03d1 3A07     		.2byte	0x73a
 1781 03d3 E70A0000 		.4byte	0xae7
 1782 03d7 2E       		.byte	0x2e
 1783 03d8 05       		.uleb128 0x5
 1784 03d9 4B250000 		.4byte	.LASF59
 1785 03dd 03       		.byte	0x3
 1786 03de 3B07     		.2byte	0x73b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 119


 1787 03e0 E70A0000 		.4byte	0xae7
 1788 03e4 2F       		.byte	0x2f
 1789 03e5 05       		.uleb128 0x5
 1790 03e6 741E0000 		.4byte	.LASF60
 1791 03ea 03       		.byte	0x3
 1792 03eb 3C07     		.2byte	0x73c
 1793 03ed E70A0000 		.4byte	0xae7
 1794 03f1 30       		.byte	0x30
 1795 03f2 05       		.uleb128 0x5
 1796 03f3 F8160000 		.4byte	.LASF61
 1797 03f7 03       		.byte	0x3
 1798 03f8 3D07     		.2byte	0x73d
 1799 03fa E70A0000 		.4byte	0xae7
 1800 03fe 31       		.byte	0x31
 1801 03ff 05       		.uleb128 0x5
 1802 0400 961F0000 		.4byte	.LASF62
 1803 0404 03       		.byte	0x3
 1804 0405 3E07     		.2byte	0x73e
 1805 0407 E70A0000 		.4byte	0xae7
 1806 040b 32       		.byte	0x32
 1807 040c 05       		.uleb128 0x5
 1808 040d 481F0000 		.4byte	.LASF63
 1809 0411 03       		.byte	0x3
 1810 0412 3F07     		.2byte	0x73f
 1811 0414 E70A0000 		.4byte	0xae7
 1812 0418 33       		.byte	0x33
 1813 0419 05       		.uleb128 0x5
 1814 041a D80C0000 		.4byte	.LASF64
 1815 041e 03       		.byte	0x3
 1816 041f 4007     		.2byte	0x740
 1817 0421 E70A0000 		.4byte	0xae7
 1818 0425 34       		.byte	0x34
 1819 0426 05       		.uleb128 0x5
 1820 0427 51290000 		.4byte	.LASF65
 1821 042b 03       		.byte	0x3
 1822 042c 4407     		.2byte	0x744
 1823 042e 76090000 		.4byte	0x976
 1824 0432 38       		.byte	0x38
 1825 0433 05       		.uleb128 0x5
 1826 0434 6F1A0000 		.4byte	.LASF66
 1827 0438 03       		.byte	0x3
 1828 0439 4507     		.2byte	0x745
 1829 043b AC090000 		.4byte	0x9ac
 1830 043f 3C       		.byte	0x3c
 1831 0440 05       		.uleb128 0x5
 1832 0441 58110000 		.4byte	.LASF6
 1833 0445 03       		.byte	0x3
 1834 0446 4907     		.2byte	0x749
 1835 0448 2B080000 		.4byte	0x82b
 1836 044c 40       		.byte	0x40
 1837 044d 05       		.uleb128 0x5
 1838 044e BE0D0000 		.4byte	.LASF20
 1839 0452 03       		.byte	0x3
 1840 0453 4A07     		.2byte	0x74a
 1841 0455 040B0000 		.4byte	0xb04
 1842 0459 44       		.byte	0x44
 1843 045a 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 120


 1844 045b 02       		.uleb128 0x2
 1845 045c 140A0000 		.4byte	.LASF67
 1846 0460 04       		.byte	0x4
 1847 0461 47       		.byte	0x47
 1848 0462 66040000 		.4byte	0x466
 1849 0466 03       		.uleb128 0x3
 1850 0467 140A0000 		.4byte	.LASF67
 1851 046b B003     		.2byte	0x3b0
 1852 046d 03       		.byte	0x3
 1853 046e 3A09     		.2byte	0x93a
 1854 0470 7D050000 		.4byte	0x57d
 1855 0474 05       		.uleb128 0x5
 1856 0475 C62A0000 		.4byte	.LASF25
 1857 0479 03       		.byte	0x3
 1858 047a 3B09     		.2byte	0x93b
 1859 047c 02070000 		.4byte	0x702
 1860 0480 00       		.byte	0
 1861 0481 05       		.uleb128 0x5
 1862 0482 991A0000 		.4byte	.LASF68
 1863 0486 03       		.byte	0x3
 1864 0487 3C09     		.2byte	0x93c
 1865 0489 7D050000 		.4byte	0x57d
 1866 048d 04       		.byte	0x4
 1867 048e 06       		.uleb128 0x6
 1868 048f D50F0000 		.4byte	.LASF69
 1869 0493 03       		.byte	0x3
 1870 0494 3D09     		.2byte	0x93d
 1871 0496 7D050000 		.4byte	0x57d
 1872 049a 1001     		.2byte	0x110
 1873 049c 06       		.uleb128 0x6
 1874 049d 99250000 		.4byte	.LASF70
 1875 04a1 03       		.byte	0x3
 1876 04a2 3E09     		.2byte	0x93e
 1877 04a4 02070000 		.4byte	0x702
 1878 04a8 1C02     		.2byte	0x21c
 1879 04aa 06       		.uleb128 0x6
 1880 04ab 3F1D0000 		.4byte	.LASF71
 1881 04af 03       		.byte	0x3
 1882 04b0 3F09     		.2byte	0x93f
 1883 04b2 B4100000 		.4byte	0x10b4
 1884 04b6 2002     		.2byte	0x220
 1885 04b8 06       		.uleb128 0x6
 1886 04b9 311F0000 		.4byte	.LASF72
 1887 04bd 03       		.byte	0x3
 1888 04be 4009     		.2byte	0x940
 1889 04c0 A4100000 		.4byte	0x10a4
 1890 04c4 4002     		.2byte	0x240
 1891 04c6 06       		.uleb128 0x6
 1892 04c7 2B0D0000 		.4byte	.LASF73
 1893 04cb 03       		.byte	0x3
 1894 04cc 4D09     		.2byte	0x94d
 1895 04ce 02070000 		.4byte	0x702
 1896 04d2 4003     		.2byte	0x340
 1897 04d4 06       		.uleb128 0x6
 1898 04d5 C8140000 		.4byte	.LASF74
 1899 04d9 03       		.byte	0x3
 1900 04da 4E09     		.2byte	0x94e
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 121


 1901 04dc B4100000 		.4byte	0x10b4
 1902 04e0 4403     		.2byte	0x344
 1903 04e2 06       		.uleb128 0x6
 1904 04e3 E61A0000 		.4byte	.LASF75
 1905 04e7 03       		.byte	0x3
 1906 04e8 4F09     		.2byte	0x94f
 1907 04ea 02070000 		.4byte	0x702
 1908 04ee 6403     		.2byte	0x364
 1909 04f0 06       		.uleb128 0x6
 1910 04f1 A70A0000 		.4byte	.LASF76
 1911 04f5 03       		.byte	0x3
 1912 04f6 5009     		.2byte	0x950
 1913 04f8 B4100000 		.4byte	0x10b4
 1914 04fc 6803     		.2byte	0x368
 1915 04fe 06       		.uleb128 0x6
 1916 04ff 240D0000 		.4byte	.LASF77
 1917 0503 03       		.byte	0x3
 1918 0504 5109     		.2byte	0x951
 1919 0506 02070000 		.4byte	0x702
 1920 050a 8803     		.2byte	0x388
 1921 050c 07       		.uleb128 0x7
 1922 050d 73696700 		.ascii	"sig\000"
 1923 0511 03       		.byte	0x3
 1924 0512 5209     		.2byte	0x952
 1925 0514 CD150000 		.4byte	0x15cd
 1926 0518 8C03     		.2byte	0x38c
 1927 051a 06       		.uleb128 0x6
 1928 051b 32280000 		.4byte	.LASF78
 1929 051f 03       		.byte	0x3
 1930 0520 5309     		.2byte	0x953
 1931 0522 02070000 		.4byte	0x702
 1932 0526 9403     		.2byte	0x394
 1933 0528 06       		.uleb128 0x6
 1934 0529 FA1F0000 		.4byte	.LASF79
 1935 052d 03       		.byte	0x3
 1936 052e 5409     		.2byte	0x954
 1937 0530 CD150000 		.4byte	0x15cd
 1938 0534 9803     		.2byte	0x398
 1939 0536 06       		.uleb128 0x6
 1940 0537 E4090000 		.4byte	.LASF80
 1941 053b 03       		.byte	0x3
 1942 053c 5909     		.2byte	0x959
 1943 053e EE190000 		.4byte	0x19ee
 1944 0542 A003     		.2byte	0x3a0
 1945 0544 06       		.uleb128 0x6
 1946 0545 5D120000 		.4byte	.LASF81
 1947 0549 03       		.byte	0x3
 1948 054a 5B09     		.2byte	0x95b
 1949 054c 980F0000 		.4byte	0xf98
 1950 0550 A403     		.2byte	0x3a4
 1951 0552 06       		.uleb128 0x6
 1952 0553 090F0000 		.4byte	.LASF82
 1953 0557 03       		.byte	0x3
 1954 0558 5C09     		.2byte	0x95c
 1955 055a 980F0000 		.4byte	0xf98
 1956 055e A803     		.2byte	0x3a8
 1957 0560 06       		.uleb128 0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 122


 1958 0561 00160000 		.4byte	.LASF83
 1959 0565 03       		.byte	0x3
 1960 0566 5D09     		.2byte	0x95d
 1961 0568 E70A0000 		.4byte	0xae7
 1962 056c AC03     		.2byte	0x3ac
 1963 056e 06       		.uleb128 0x6
 1964 056f E0060000 		.4byte	.LASF84
 1965 0573 03       		.byte	0x3
 1966 0574 5E09     		.2byte	0x95e
 1967 0576 E70A0000 		.4byte	0xae7
 1968 057a AD03     		.2byte	0x3ad
 1969 057c 00       		.byte	0
 1970 057d 02       		.uleb128 0x2
 1971 057e 830C0000 		.4byte	.LASF85
 1972 0582 04       		.byte	0x4
 1973 0583 48       		.byte	0x48
 1974 0584 88050000 		.4byte	0x588
 1975 0588 03       		.uleb128 0x3
 1976 0589 830C0000 		.4byte	.LASF85
 1977 058d 0C01     		.2byte	0x10c
 1978 058f 03       		.byte	0x3
 1979 0590 2809     		.2byte	0x928
 1980 0592 CC050000 		.4byte	0x5cc
 1981 0596 05       		.uleb128 0x5
 1982 0597 BD160000 		.4byte	.LASF86
 1983 059b 03       		.byte	0x3
 1984 059c 2909     		.2byte	0x929
 1985 059e F5060000 		.4byte	0x6f5
 1986 05a2 00       		.byte	0
 1987 05a3 05       		.uleb128 0x5
 1988 05a4 C61E0000 		.4byte	.LASF87
 1989 05a8 03       		.byte	0x3
 1990 05a9 2A09     		.2byte	0x92a
 1991 05ab A4100000 		.4byte	0x10a4
 1992 05af 04       		.byte	0x4
 1993 05b0 06       		.uleb128 0x6
 1994 05b1 B00F0000 		.4byte	.LASF88
 1995 05b5 03       		.byte	0x3
 1996 05b6 2B09     		.2byte	0x92b
 1997 05b8 02070000 		.4byte	0x702
 1998 05bc 0401     		.2byte	0x104
 1999 05be 07       		.uleb128 0x7
 2000 05bf 737A00   		.ascii	"sz\000"
 2001 05c2 03       		.byte	0x3
 2002 05c3 2C09     		.2byte	0x92c
 2003 05c5 02070000 		.4byte	0x702
 2004 05c9 0801     		.2byte	0x108
 2005 05cb 00       		.byte	0
 2006 05cc 02       		.uleb128 0x2
 2007 05cd 60130000 		.4byte	.LASF89
 2008 05d1 04       		.byte	0x4
 2009 05d2 4B       		.byte	0x4b
 2010 05d3 D7050000 		.4byte	0x5d7
 2011 05d7 08       		.uleb128 0x8
 2012 05d8 60130000 		.4byte	.LASF89
 2013 05dc 5C       		.byte	0x5c
 2014 05dd 03       		.byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 123


 2015 05de AD05     		.2byte	0x5ad
 2016 05e0 CF060000 		.4byte	0x6cf
 2017 05e4 05       		.uleb128 0x5
 2018 05e5 EE250000 		.4byte	.LASF90
 2019 05e9 03       		.byte	0x3
 2020 05ea AE05     		.2byte	0x5ae
 2021 05ec 06190000 		.4byte	0x1906
 2022 05f0 00       		.byte	0
 2023 05f1 05       		.uleb128 0x5
 2024 05f2 8B230000 		.4byte	.LASF7
 2025 05f6 03       		.byte	0x3
 2026 05f7 AF05     		.2byte	0x5af
 2027 05f9 1E080000 		.4byte	0x81e
 2028 05fd 2C       		.byte	0x2c
 2029 05fe 04       		.uleb128 0x4
 2030 05ff 63726C00 		.ascii	"crl\000"
 2031 0603 03       		.byte	0x3
 2032 0604 B405     		.2byte	0x5b4
 2033 0606 16190000 		.4byte	0x1916
 2034 060a 30       		.byte	0x30
 2035 060b 05       		.uleb128 0x5
 2036 060c C60D0000 		.4byte	.LASF91
 2037 0610 03       		.byte	0x3
 2038 0611 B505     		.2byte	0x5b5
 2039 0613 1C190000 		.4byte	0x191c
 2040 0617 34       		.byte	0x34
 2041 0618 05       		.uleb128 0x5
 2042 0619 5A0D0000 		.4byte	.LASF92
 2043 061d 03       		.byte	0x3
 2044 061e BA05     		.2byte	0x5ba
 2045 0620 F5060000 		.4byte	0x6f5
 2046 0624 38       		.byte	0x38
 2047 0625 05       		.uleb128 0x5
 2048 0626 CB150000 		.4byte	.LASF93
 2049 062a 03       		.byte	0x3
 2050 062b BB05     		.2byte	0x5bb
 2051 062d 1E080000 		.4byte	0x81e
 2052 0631 3C       		.byte	0x3c
 2053 0632 05       		.uleb128 0x5
 2054 0633 8F260000 		.4byte	.LASF94
 2055 0637 03       		.byte	0x3
 2056 0638 BC05     		.2byte	0x5bc
 2057 063a C5090000 		.4byte	0x9c5
 2058 063e 40       		.byte	0x40
 2059 063f 05       		.uleb128 0x5
 2060 0640 21140000 		.4byte	.LASF95
 2061 0644 03       		.byte	0x3
 2062 0645 BD05     		.2byte	0x5bd
 2063 0647 EC090000 		.4byte	0x9ec
 2064 064b 44       		.byte	0x44
 2065 064c 05       		.uleb128 0x5
 2066 064d 3F260000 		.4byte	.LASF96
 2067 0651 03       		.byte	0x3
 2068 0652 BE05     		.2byte	0x5be
 2069 0654 140A0000 		.4byte	0xa14
 2070 0658 48       		.byte	0x48
 2071 0659 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 124


 2072 065a AB290000 		.4byte	.LASF97
 2073 065e 03       		.byte	0x3
 2074 065f BF05     		.2byte	0x5bf
 2075 0661 540A0000 		.4byte	0xa54
 2076 0665 4C       		.byte	0x4c
 2077 0666 05       		.uleb128 0x5
 2078 0667 85200000 		.4byte	.LASF98
 2079 066b 03       		.byte	0x3
 2080 066c C005     		.2byte	0x5c0
 2081 066e DC0A0000 		.4byte	0xadc
 2082 0672 50       		.byte	0x50
 2083 0673 05       		.uleb128 0x5
 2084 0674 F3100000 		.4byte	.LASF99
 2085 0678 03       		.byte	0x3
 2086 0679 C105     		.2byte	0x5c1
 2087 067b E70A0000 		.4byte	0xae7
 2088 067f 54       		.byte	0x54
 2089 0680 05       		.uleb128 0x5
 2090 0681 B21C0000 		.4byte	.LASF100
 2091 0685 03       		.byte	0x3
 2092 0686 C205     		.2byte	0x5c2
 2093 0688 E70A0000 		.4byte	0xae7
 2094 068c 55       		.byte	0x55
 2095 068d 05       		.uleb128 0x5
 2096 068e 83190000 		.4byte	.LASF101
 2097 0692 03       		.byte	0x3
 2098 0693 C305     		.2byte	0x5c3
 2099 0695 E70A0000 		.4byte	0xae7
 2100 0699 56       		.byte	0x56
 2101 069a 05       		.uleb128 0x5
 2102 069b CB1F0000 		.4byte	.LASF102
 2103 069f 03       		.byte	0x3
 2104 06a0 C405     		.2byte	0x5c4
 2105 06a2 E70A0000 		.4byte	0xae7
 2106 06a6 57       		.byte	0x57
 2107 06a7 05       		.uleb128 0x5
 2108 06a8 B61F0000 		.4byte	.LASF103
 2109 06ac 03       		.byte	0x3
 2110 06ad C505     		.2byte	0x5c5
 2111 06af E70A0000 		.4byte	0xae7
 2112 06b3 58       		.byte	0x58
 2113 06b4 05       		.uleb128 0x5
 2114 06b5 28050000 		.4byte	.LASF104
 2115 06b9 03       		.byte	0x3
 2116 06ba C605     		.2byte	0x5c6
 2117 06bc E70A0000 		.4byte	0xae7
 2118 06c0 59       		.byte	0x59
 2119 06c1 05       		.uleb128 0x5
 2120 06c2 39090000 		.4byte	.LASF105
 2121 06c6 03       		.byte	0x3
 2122 06c7 C705     		.2byte	0x5c7
 2123 06c9 E70A0000 		.4byte	0xae7
 2124 06cd 5A       		.byte	0x5a
 2125 06ce 00       		.byte	0
 2126 06cf 02       		.uleb128 0x2
 2127 06d0 DF1B0000 		.4byte	.LASF106
 2128 06d4 04       		.byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 125


 2129 06d5 5C       		.byte	0x5c
 2130 06d6 DA060000 		.4byte	0x6da
 2131 06da 08       		.uleb128 0x8
 2132 06db DF1B0000 		.4byte	.LASF106
 2133 06df 04       		.byte	0x4
 2134 06e0 03       		.byte	0x3
 2135 06e1 3805     		.2byte	0x538
 2136 06e3 F5060000 		.4byte	0x6f5
 2137 06e7 04       		.uleb128 0x4
 2138 06e8 73736C00 		.ascii	"ssl\000"
 2139 06ec 03       		.byte	0x3
 2140 06ed 3905     		.2byte	0x539
 2141 06ef A6090000 		.4byte	0x9a6
 2142 06f3 00       		.byte	0
 2143 06f4 00       		.byte	0
 2144 06f5 09       		.uleb128 0x9
 2145 06f6 04       		.byte	0x4
 2146 06f7 FB060000 		.4byte	0x6fb
 2147 06fb 0A       		.uleb128 0xa
 2148 06fc 01       		.byte	0x1
 2149 06fd 08       		.byte	0x8
 2150 06fe 071E0000 		.4byte	.LASF107
 2151 0702 0B       		.uleb128 0xb
 2152 0703 04       		.byte	0x4
 2153 0704 05       		.byte	0x5
 2154 0705 696E7400 		.ascii	"int\000"
 2155 0709 0A       		.uleb128 0xa
 2156 070a 04       		.byte	0x4
 2157 070b 07       		.byte	0x7
 2158 070c BA170000 		.4byte	.LASF108
 2159 0710 0C       		.uleb128 0xc
 2160 0711 DC0B0000 		.4byte	.LASF109
 2161 0715 08       		.byte	0x8
 2162 0716 04       		.byte	0x4
 2163 0717 84       		.byte	0x84
 2164 0718 34070000 		.4byte	0x734
 2165 071c 0D       		.uleb128 0xd
 2166 071d AF2A0000 		.4byte	.LASF110
 2167 0721 04       		.byte	0x4
 2168 0722 85       		.byte	0x85
 2169 0723 02070000 		.4byte	0x702
 2170 0727 00       		.byte	0
 2171 0728 0E       		.uleb128 0xe
 2172 0729 636D00   		.ascii	"cm\000"
 2173 072c 04       		.byte	0x4
 2174 072d 86       		.byte	0x86
 2175 072e 34070000 		.4byte	0x734
 2176 0732 04       		.byte	0x4
 2177 0733 00       		.byte	0
 2178 0734 09       		.uleb128 0x9
 2179 0735 04       		.byte	0x4
 2180 0736 CC050000 		.4byte	0x5cc
 2181 073a 02       		.uleb128 0x2
 2182 073b DC0B0000 		.4byte	.LASF109
 2183 073f 04       		.byte	0x4
 2184 0740 87       		.byte	0x87
 2185 0741 10070000 		.4byte	0x710
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 126


 2186 0745 0C       		.uleb128 0xc
 2187 0746 AB130000 		.4byte	.LASF111
 2188 074a 08       		.byte	0x8
 2189 074b 04       		.byte	0x4
 2190 074c 89       		.byte	0x89
 2191 074d 6A070000 		.4byte	0x76a
 2192 0751 0D       		.uleb128 0xd
 2193 0752 76120000 		.4byte	.LASF112
 2194 0756 04       		.byte	0x4
 2195 0757 8A       		.byte	0x8a
 2196 0758 02070000 		.4byte	0x702
 2197 075c 00       		.byte	0
 2198 075d 0D       		.uleb128 0xd
 2199 075e 6E160000 		.4byte	.LASF113
 2200 0762 04       		.byte	0x4
 2201 0763 8B       		.byte	0x8b
 2202 0764 02070000 		.4byte	0x702
 2203 0768 04       		.byte	0x4
 2204 0769 00       		.byte	0
 2205 076a 02       		.uleb128 0x2
 2206 076b AB130000 		.4byte	.LASF111
 2207 076f 04       		.byte	0x4
 2208 0770 8C       		.byte	0x8c
 2209 0771 45070000 		.4byte	0x745
 2210 0775 0C       		.uleb128 0xc
 2211 0776 96160000 		.4byte	.LASF114
 2212 077a 10       		.byte	0x10
 2213 077b 04       		.byte	0x4
 2214 077c 8E       		.byte	0x8e
 2215 077d 9A070000 		.4byte	0x79a
 2216 0781 0D       		.uleb128 0xd
 2217 0782 B5270000 		.4byte	.LASF115
 2218 0786 04       		.byte	0x4
 2219 0787 8F       		.byte	0x8f
 2220 0788 6A070000 		.4byte	0x76a
 2221 078c 00       		.byte	0
 2222 078d 0D       		.uleb128 0xd
 2223 078e 63290000 		.4byte	.LASF116
 2224 0792 04       		.byte	0x4
 2225 0793 90       		.byte	0x90
 2226 0794 6A070000 		.4byte	0x76a
 2227 0798 08       		.byte	0x8
 2228 0799 00       		.byte	0
 2229 079a 02       		.uleb128 0x2
 2230 079b 96160000 		.4byte	.LASF114
 2231 079f 04       		.byte	0x4
 2232 07a0 91       		.byte	0x91
 2233 07a1 75070000 		.4byte	0x775
 2234 07a5 09       		.uleb128 0x9
 2235 07a6 04       		.byte	0x4
 2236 07a7 5B040000 		.4byte	0x45b
 2237 07ab 0C       		.uleb128 0xc
 2238 07ac 21210000 		.4byte	.LASF117
 2239 07b0 20       		.byte	0x20
 2240 07b1 04       		.byte	0x4
 2241 07b2 A0       		.byte	0xa0
 2242 07b3 18080000 		.4byte	0x818
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 127


 2243 07b7 0D       		.uleb128 0xd
 2244 07b8 BD270000 		.4byte	.LASF118
 2245 07bc 04       		.byte	0x4
 2246 07bd A1       		.byte	0xa1
 2247 07be 18080000 		.4byte	0x818
 2248 07c2 00       		.byte	0
 2249 07c3 0D       		.uleb128 0xd
 2250 07c4 92290000 		.4byte	.LASF119
 2251 07c8 04       		.byte	0x4
 2252 07c9 A2       		.byte	0xa2
 2253 07ca A5070000 		.4byte	0x7a5
 2254 07ce 04       		.byte	0x4
 2255 07cf 0D       		.uleb128 0xd
 2256 07d0 3C220000 		.4byte	.LASF120
 2257 07d4 04       		.byte	0x4
 2258 07d5 A3       		.byte	0xa3
 2259 07d6 F5060000 		.4byte	0x6f5
 2260 07da 08       		.byte	0x8
 2261 07db 0D       		.uleb128 0xd
 2262 07dc 50110000 		.4byte	.LASF121
 2263 07e0 04       		.byte	0x4
 2264 07e1 A4       		.byte	0xa4
 2265 07e2 1E080000 		.4byte	0x81e
 2266 07e6 0C       		.byte	0xc
 2267 07e7 0D       		.uleb128 0xd
 2268 07e8 18070000 		.4byte	.LASF122
 2269 07ec 04       		.byte	0x4
 2270 07ed A5       		.byte	0xa5
 2271 07ee 1E080000 		.4byte	0x81e
 2272 07f2 10       		.byte	0x10
 2273 07f3 0D       		.uleb128 0xd
 2274 07f4 54100000 		.4byte	.LASF17
 2275 07f8 04       		.byte	0x4
 2276 07f9 A6       		.byte	0xa6
 2277 07fa 02070000 		.4byte	0x702
 2278 07fe 14       		.byte	0x14
 2279 07ff 0D       		.uleb128 0xd
 2280 0800 86010000 		.4byte	.LASF123
 2281 0804 04       		.byte	0x4
 2282 0805 A7       		.byte	0xa7
 2283 0806 02070000 		.4byte	0x702
 2284 080a 18       		.byte	0x18
 2285 080b 0D       		.uleb128 0xd
 2286 080c B2200000 		.4byte	.LASF124
 2287 0810 04       		.byte	0x4
 2288 0811 A8       		.byte	0xa8
 2289 0812 02070000 		.4byte	0x702
 2290 0816 1C       		.byte	0x1c
 2291 0817 00       		.byte	0
 2292 0818 09       		.uleb128 0x9
 2293 0819 04       		.byte	0x4
 2294 081a 3A070000 		.4byte	0x73a
 2295 081e 0F       		.uleb128 0xf
 2296 081f 04       		.byte	0x4
 2297 0820 02       		.uleb128 0x2
 2298 0821 21210000 		.4byte	.LASF117
 2299 0825 04       		.byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 128


 2300 0826 A9       		.byte	0xa9
 2301 0827 AB070000 		.4byte	0x7ab
 2302 082b 10       		.uleb128 0x10
 2303 082c 0A280000 		.4byte	.LASF125
 2304 0830 04       		.byte	0x4
 2305 0831 3301     		.2byte	0x133
 2306 0833 37080000 		.4byte	0x837
 2307 0837 09       		.uleb128 0x9
 2308 0838 04       		.byte	0x4
 2309 0839 3D080000 		.4byte	0x83d
 2310 083d 11       		.uleb128 0x11
 2311 083e 02070000 		.4byte	0x702
 2312 0842 51080000 		.4byte	0x851
 2313 0846 12       		.uleb128 0x12
 2314 0847 02070000 		.4byte	0x702
 2315 084b 12       		.uleb128 0x12
 2316 084c 51080000 		.4byte	0x851
 2317 0850 00       		.byte	0
 2318 0851 09       		.uleb128 0x9
 2319 0852 04       		.byte	0x4
 2320 0853 20080000 		.4byte	0x820
 2321 0857 13       		.uleb128 0x13
 2322 0858 02       		.byte	0x2
 2323 0859 04       		.byte	0x4
 2324 085a A802     		.2byte	0x2a8
 2325 085c 76090000 		.4byte	0x976
 2326 0860 14       		.uleb128 0x14
 2327 0861 9C100000 		.4byte	.LASF126
 2328 0865 00       		.sleb128 0
 2329 0866 14       		.uleb128 0x14
 2330 0867 5A2B0000 		.4byte	.LASF127
 2331 086b 00       		.sleb128 0
 2332 086c 14       		.uleb128 0x14
 2333 086d 13220000 		.4byte	.LASF128
 2334 0871 01       		.sleb128 1
 2335 0872 14       		.uleb128 0x14
 2336 0873 620B0000 		.4byte	.LASF129
 2337 0877 02       		.sleb128 2
 2338 0878 14       		.uleb128 0x14
 2339 0879 372A0000 		.4byte	.LASF130
 2340 087d 77       		.sleb128 -9
 2341 087e 14       		.uleb128 0x14
 2342 087f 88250000 		.4byte	.LASF131
 2343 0883 78       		.sleb128 -8
 2344 0884 14       		.uleb128 0x14
 2345 0885 9D120000 		.4byte	.LASF132
 2346 0889 79       		.sleb128 -7
 2347 088a 14       		.uleb128 0x14
 2348 088b 75130000 		.4byte	.LASF133
 2349 088f 7A       		.sleb128 -6
 2350 0890 14       		.uleb128 0x14
 2351 0891 6A1F0000 		.4byte	.LASF134
 2352 0895 7B       		.sleb128 -5
 2353 0896 14       		.uleb128 0x14
 2354 0897 EF0B0000 		.4byte	.LASF135
 2355 089b 7C       		.sleb128 -4
 2356 089c 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 129


 2357 089d E8000000 		.4byte	.LASF136
 2358 08a1 7D       		.sleb128 -3
 2359 08a2 14       		.uleb128 0x14
 2360 08a3 E50C0000 		.4byte	.LASF137
 2361 08a7 7E       		.sleb128 -2
 2362 08a8 14       		.uleb128 0x14
 2363 08a9 08070000 		.4byte	.LASF138
 2364 08ad 7F       		.sleb128 -1
 2365 08ae 14       		.uleb128 0x14
 2366 08af A41F0000 		.4byte	.LASF139
 2367 08b3 02       		.sleb128 2
 2368 08b4 14       		.uleb128 0x14
 2369 08b5 B4240000 		.4byte	.LASF140
 2370 08b9 01       		.sleb128 1
 2371 08ba 14       		.uleb128 0x14
 2372 08bb 4D1B0000 		.4byte	.LASF141
 2373 08bf 02       		.sleb128 2
 2374 08c0 14       		.uleb128 0x14
 2375 08c1 8A2A0000 		.4byte	.LASF142
 2376 08c5 03       		.sleb128 3
 2377 08c6 14       		.uleb128 0x14
 2378 08c7 6E060000 		.4byte	.LASF143
 2379 08cb 00       		.sleb128 0
 2380 08cc 14       		.uleb128 0x14
 2381 08cd E42B0000 		.4byte	.LASF144
 2382 08d1 01       		.sleb128 1
 2383 08d2 14       		.uleb128 0x14
 2384 08d3 C6250000 		.4byte	.LASF145
 2385 08d7 02       		.sleb128 2
 2386 08d8 14       		.uleb128 0x14
 2387 08d9 002B0000 		.4byte	.LASF146
 2388 08dd 04       		.sleb128 4
 2389 08de 14       		.uleb128 0x14
 2390 08df B42B0000 		.4byte	.LASF147
 2391 08e3 08       		.sleb128 8
 2392 08e4 14       		.uleb128 0x14
 2393 08e5 84240000 		.4byte	.LASF148
 2394 08e9 1E       		.sleb128 30
 2395 08ea 14       		.uleb128 0x14
 2396 08eb 5B210000 		.4byte	.LASF149
 2397 08ef 1F       		.sleb128 31
 2398 08f0 14       		.uleb128 0x14
 2399 08f1 3E100000 		.4byte	.LASF150
 2400 08f5 20       		.sleb128 32
 2401 08f6 14       		.uleb128 0x14
 2402 08f7 B6020000 		.4byte	.LASF151
 2403 08fb 21       		.sleb128 33
 2404 08fc 14       		.uleb128 0x14
 2405 08fd E4050000 		.4byte	.LASF152
 2406 0901 22       		.sleb128 34
 2407 0902 14       		.uleb128 0x14
 2408 0903 40040000 		.4byte	.LASF153
 2409 0907 23       		.sleb128 35
 2410 0908 14       		.uleb128 0x14
 2411 0909 DC0A0000 		.4byte	.LASF154
 2412 090d 02       		.sleb128 2
 2413 090e 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 130


 2414 090f 13040000 		.4byte	.LASF155
 2415 0913 03       		.sleb128 3
 2416 0914 14       		.uleb128 0x14
 2417 0915 D6160000 		.4byte	.LASF156
 2418 0919 07       		.sleb128 7
 2419 091a 14       		.uleb128 0x14
 2420 091b 0F260000 		.4byte	.LASF157
 2421 091f 08       		.sleb128 8
 2422 0920 14       		.uleb128 0x14
 2423 0921 C3270000 		.4byte	.LASF158
 2424 0925 05       		.sleb128 5
 2425 0926 14       		.uleb128 0x14
 2426 0927 4A000000 		.4byte	.LASF159
 2427 092b D300     		.sleb128 83
 2428 092d 14       		.uleb128 0x14
 2429 092e 421A0000 		.4byte	.LASF160
 2430 0932 06       		.sleb128 6
 2431 0933 14       		.uleb128 0x14
 2432 0934 D0080000 		.4byte	.LASF161
 2433 0938 D500     		.sleb128 85
 2434 093a 14       		.uleb128 0x14
 2435 093b 60050000 		.4byte	.LASF162
 2436 093f 01       		.sleb128 1
 2437 0940 14       		.uleb128 0x14
 2438 0941 4A180000 		.4byte	.LASF163
 2439 0945 02       		.sleb128 2
 2440 0946 14       		.uleb128 0x14
 2441 0947 A10C0000 		.4byte	.LASF164
 2442 094b 04       		.sleb128 4
 2443 094c 14       		.uleb128 0x14
 2444 094d 96000000 		.4byte	.LASF165
 2445 0951 08       		.sleb128 8
 2446 0952 14       		.uleb128 0x14
 2447 0953 F5010000 		.4byte	.LASF166
 2448 0957 E500     		.sleb128 101
 2449 0959 14       		.uleb128 0x14
 2450 095a 8B0B0000 		.4byte	.LASF167
 2451 095e E600     		.sleb128 102
 2452 0960 14       		.uleb128 0x14
 2453 0961 D7190000 		.4byte	.LASF168
 2454 0965 E700     		.sleb128 103
 2455 0967 14       		.uleb128 0x14
 2456 0968 5D1C0000 		.4byte	.LASF169
 2457 096c E800     		.sleb128 104
 2458 096e 14       		.uleb128 0x14
 2459 096f C6000000 		.4byte	.LASF170
 2460 0973 8008     		.sleb128 1024
 2461 0975 00       		.byte	0
 2462 0976 10       		.uleb128 0x10
 2463 0977 A7020000 		.4byte	.LASF171
 2464 097b 04       		.byte	0x4
 2465 097c EB03     		.2byte	0x3eb
 2466 097e 82090000 		.4byte	0x982
 2467 0982 09       		.uleb128 0x9
 2468 0983 04       		.byte	0x4
 2469 0984 88090000 		.4byte	0x988
 2470 0988 11       		.uleb128 0x11
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 131


 2471 0989 02070000 		.4byte	0x702
 2472 098d A6090000 		.4byte	0x9a6
 2473 0991 12       		.uleb128 0x12
 2474 0992 A6090000 		.4byte	0x9a6
 2475 0996 12       		.uleb128 0x12
 2476 0997 F5060000 		.4byte	0x6f5
 2477 099b 12       		.uleb128 0x12
 2478 099c 02070000 		.4byte	0x702
 2479 09a0 12       		.uleb128 0x12
 2480 09a1 1E080000 		.4byte	0x81e
 2481 09a5 00       		.byte	0
 2482 09a6 09       		.uleb128 0x9
 2483 09a7 04       		.byte	0x4
 2484 09a8 25000000 		.4byte	0x25
 2485 09ac 10       		.uleb128 0x10
 2486 09ad A31E0000 		.4byte	.LASF172
 2487 09b1 04       		.byte	0x4
 2488 09b2 EC03     		.2byte	0x3ec
 2489 09b4 82090000 		.4byte	0x982
 2490 09b8 09       		.uleb128 0x9
 2491 09b9 04       		.byte	0x4
 2492 09ba BE090000 		.4byte	0x9be
 2493 09be 0A       		.uleb128 0xa
 2494 09bf 01       		.byte	0x1
 2495 09c0 08       		.byte	0x8
 2496 09c1 01060000 		.4byte	.LASF173
 2497 09c5 10       		.uleb128 0x10
 2498 09c6 80180000 		.4byte	.LASF174
 2499 09ca 04       		.byte	0x4
 2500 09cb 5704     		.2byte	0x457
 2501 09cd D1090000 		.4byte	0x9d1
 2502 09d1 09       		.uleb128 0x9
 2503 09d2 04       		.byte	0x4
 2504 09d3 D7090000 		.4byte	0x9d7
 2505 09d7 15       		.uleb128 0x15
 2506 09d8 EC090000 		.4byte	0x9ec
 2507 09dc 12       		.uleb128 0x12
 2508 09dd B8090000 		.4byte	0x9b8
 2509 09e1 12       		.uleb128 0x12
 2510 09e2 02070000 		.4byte	0x702
 2511 09e6 12       		.uleb128 0x12
 2512 09e7 02070000 		.4byte	0x702
 2513 09eb 00       		.byte	0
 2514 09ec 10       		.uleb128 0x10
 2515 09ed B10D0000 		.4byte	.LASF175
 2516 09f1 04       		.byte	0x4
 2517 09f2 5804     		.2byte	0x458
 2518 09f4 F8090000 		.4byte	0x9f8
 2519 09f8 09       		.uleb128 0x9
 2520 09f9 04       		.byte	0x4
 2521 09fa FE090000 		.4byte	0x9fe
 2522 09fe 15       		.uleb128 0x15
 2523 09ff 090A0000 		.4byte	0xa09
 2524 0a03 12       		.uleb128 0x12
 2525 0a04 090A0000 		.4byte	0xa09
 2526 0a08 00       		.byte	0
 2527 0a09 09       		.uleb128 0x9
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 132


 2528 0a0a 04       		.byte	0x4
 2529 0a0b 0F0A0000 		.4byte	0xa0f
 2530 0a0f 16       		.uleb128 0x16
 2531 0a10 FB060000 		.4byte	0x6fb
 2532 0a14 10       		.uleb128 0x10
 2533 0a15 461D0000 		.4byte	.LASF176
 2534 0a19 04       		.byte	0x4
 2535 0a1a 5904     		.2byte	0x459
 2536 0a1c 200A0000 		.4byte	0xa20
 2537 0a20 09       		.uleb128 0x9
 2538 0a21 04       		.byte	0x4
 2539 0a22 260A0000 		.4byte	0xa26
 2540 0a26 11       		.uleb128 0x11
 2541 0a27 02070000 		.4byte	0x702
 2542 0a2b 4E0A0000 		.4byte	0xa4e
 2543 0a2f 12       		.uleb128 0x12
 2544 0a30 1E080000 		.4byte	0x81e
 2545 0a34 12       		.uleb128 0x12
 2546 0a35 090A0000 		.4byte	0xa09
 2547 0a39 12       		.uleb128 0x12
 2548 0a3a 02070000 		.4byte	0x702
 2549 0a3e 12       		.uleb128 0x12
 2550 0a3f B8090000 		.4byte	0x9b8
 2551 0a43 12       		.uleb128 0x12
 2552 0a44 02070000 		.4byte	0x702
 2553 0a48 12       		.uleb128 0x12
 2554 0a49 4E0A0000 		.4byte	0xa4e
 2555 0a4d 00       		.byte	0
 2556 0a4e 09       		.uleb128 0x9
 2557 0a4f 04       		.byte	0x4
 2558 0a50 B8090000 		.4byte	0x9b8
 2559 0a54 10       		.uleb128 0x10
 2560 0a55 1D1F0000 		.4byte	.LASF177
 2561 0a59 04       		.byte	0x4
 2562 0a5a 5B04     		.2byte	0x45b
 2563 0a5c 600A0000 		.4byte	0xa60
 2564 0a60 09       		.uleb128 0x9
 2565 0a61 04       		.byte	0x4
 2566 0a62 660A0000 		.4byte	0xa66
 2567 0a66 15       		.uleb128 0x15
 2568 0a67 760A0000 		.4byte	0xa76
 2569 0a6b 12       		.uleb128 0x12
 2570 0a6c 1E080000 		.4byte	0x81e
 2571 0a70 12       		.uleb128 0x12
 2572 0a71 B8090000 		.4byte	0x9b8
 2573 0a75 00       		.byte	0
 2574 0a76 09       		.uleb128 0x9
 2575 0a77 04       		.byte	0x4
 2576 0a78 7C0A0000 		.4byte	0xa7c
 2577 0a7c 16       		.uleb128 0x16
 2578 0a7d BE090000 		.4byte	0x9be
 2579 0a81 0A       		.uleb128 0xa
 2580 0a82 04       		.byte	0x4
 2581 0a83 07       		.byte	0x7
 2582 0a84 EB2A0000 		.4byte	.LASF178
 2583 0a88 13       		.uleb128 0x13
 2584 0a89 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 133


 2585 0a8a 04       		.byte	0x4
 2586 0a8b 8204     		.2byte	0x482
 2587 0a8d B60A0000 		.4byte	0xab6
 2588 0a91 14       		.uleb128 0x14
 2589 0a92 3D230000 		.4byte	.LASF179
 2590 0a96 00       		.sleb128 0
 2591 0a97 14       		.uleb128 0x14
 2592 0a98 53150000 		.4byte	.LASF180
 2593 0a9c 01       		.sleb128 1
 2594 0a9d 14       		.uleb128 0x14
 2595 0a9e 5A070000 		.4byte	.LASF181
 2596 0aa2 02       		.sleb128 2
 2597 0aa3 14       		.uleb128 0x14
 2598 0aa4 821F0000 		.4byte	.LASF182
 2599 0aa8 03       		.sleb128 3
 2600 0aa9 14       		.uleb128 0x14
 2601 0aaa 930F0000 		.4byte	.LASF183
 2602 0aae 04       		.sleb128 4
 2603 0aaf 14       		.uleb128 0x14
 2604 0ab0 25260000 		.4byte	.LASF184
 2605 0ab4 0D       		.sleb128 13
 2606 0ab5 00       		.byte	0
 2607 0ab6 10       		.uleb128 0x10
 2608 0ab7 CF130000 		.4byte	.LASF185
 2609 0abb 04       		.byte	0x4
 2610 0abc 2A06     		.2byte	0x62a
 2611 0abe C20A0000 		.4byte	0xac2
 2612 0ac2 09       		.uleb128 0x9
 2613 0ac3 04       		.byte	0x4
 2614 0ac4 C80A0000 		.4byte	0xac8
 2615 0ac8 11       		.uleb128 0x11
 2616 0ac9 02070000 		.4byte	0x702
 2617 0acd DC0A0000 		.4byte	0xadc
 2618 0ad1 12       		.uleb128 0x12
 2619 0ad2 A6090000 		.4byte	0x9a6
 2620 0ad6 12       		.uleb128 0x12
 2621 0ad7 1E080000 		.4byte	0x81e
 2622 0adb 00       		.byte	0
 2623 0adc 02       		.uleb128 0x2
 2624 0add 452C0000 		.4byte	.LASF186
 2625 0ae1 05       		.byte	0x5
 2626 0ae2 56       		.byte	0x56
 2627 0ae3 02070000 		.4byte	0x702
 2628 0ae7 02       		.uleb128 0x2
 2629 0ae8 20070000 		.4byte	.LASF187
 2630 0aec 06       		.byte	0x6
 2631 0aed 2D       		.byte	0x2d
 2632 0aee BE090000 		.4byte	0x9be
 2633 0af2 02       		.uleb128 0x2
 2634 0af3 8E270000 		.4byte	.LASF188
 2635 0af7 06       		.byte	0x6
 2636 0af8 2F       		.byte	0x2f
 2637 0af9 FD0A0000 		.4byte	0xafd
 2638 0afd 0A       		.uleb128 0xa
 2639 0afe 02       		.byte	0x2
 2640 0aff 07       		.byte	0x7
 2641 0b00 18180000 		.4byte	.LASF189
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 134


 2642 0b04 02       		.uleb128 0x2
 2643 0b05 1E290000 		.4byte	.LASF190
 2644 0b09 06       		.byte	0x6
 2645 0b0a 30       		.byte	0x30
 2646 0b0b 810A0000 		.4byte	0xa81
 2647 0b0f 0A       		.uleb128 0xa
 2648 0b10 08       		.byte	0x8
 2649 0b11 07       		.byte	0x7
 2650 0b12 58250000 		.4byte	.LASF191
 2651 0b16 02       		.uleb128 0x2
 2652 0b17 5A100000 		.4byte	.LASF192
 2653 0b1b 07       		.byte	0x7
 2654 0b1c D4       		.byte	0xd4
 2655 0b1d 810A0000 		.4byte	0xa81
 2656 0b21 0A       		.uleb128 0xa
 2657 0b22 01       		.byte	0x1
 2658 0b23 06       		.byte	0x6
 2659 0b24 33180000 		.4byte	.LASF193
 2660 0b28 0A       		.uleb128 0xa
 2661 0b29 02       		.byte	0x2
 2662 0b2a 05       		.byte	0x5
 2663 0b2b 862B0000 		.4byte	.LASF194
 2664 0b2f 0A       		.uleb128 0xa
 2665 0b30 04       		.byte	0x4
 2666 0b31 05       		.byte	0x5
 2667 0b32 A51B0000 		.4byte	.LASF195
 2668 0b36 0A       		.uleb128 0xa
 2669 0b37 04       		.byte	0x4
 2670 0b38 07       		.byte	0x7
 2671 0b39 C7290000 		.4byte	.LASF196
 2672 0b3d 0A       		.uleb128 0xa
 2673 0b3e 08       		.byte	0x8
 2674 0b3f 05       		.byte	0x5
 2675 0b40 92280000 		.4byte	.LASF197
 2676 0b44 09       		.uleb128 0x9
 2677 0b45 04       		.byte	0x4
 2678 0b46 4A0B0000 		.4byte	0xb4a
 2679 0b4a 17       		.uleb128 0x17
 2680 0b4b 18       		.uleb128 0x18
 2681 0b4c 01       		.byte	0x1
 2682 0b4d 06       		.byte	0x6
 2683 0b4e F2       		.byte	0xf2
 2684 0b4f A40C0000 		.4byte	0xca4
 2685 0b53 14       		.uleb128 0x14
 2686 0b54 3F0B0000 		.4byte	.LASF198
 2687 0b58 01       		.sleb128 1
 2688 0b59 14       		.uleb128 0x14
 2689 0b5a D7170000 		.4byte	.LASF199
 2690 0b5e 02       		.sleb128 2
 2691 0b5f 14       		.uleb128 0x14
 2692 0b60 D2140000 		.4byte	.LASF200
 2693 0b64 03       		.sleb128 3
 2694 0b65 14       		.uleb128 0x14
 2695 0b66 120D0000 		.4byte	.LASF201
 2696 0b6a 04       		.sleb128 4
 2697 0b6b 14       		.uleb128 0x14
 2698 0b6c 270B0000 		.4byte	.LASF202
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 135


 2699 0b70 05       		.sleb128 5
 2700 0b71 14       		.uleb128 0x14
 2701 0b72 DD0F0000 		.4byte	.LASF203
 2702 0b76 06       		.sleb128 6
 2703 0b77 14       		.uleb128 0x14
 2704 0b78 C5240000 		.4byte	.LASF204
 2705 0b7c 07       		.sleb128 7
 2706 0b7d 14       		.uleb128 0x14
 2707 0b7e CE060000 		.4byte	.LASF205
 2708 0b82 08       		.sleb128 8
 2709 0b83 14       		.uleb128 0x14
 2710 0b84 CB180000 		.4byte	.LASF206
 2711 0b88 09       		.sleb128 9
 2712 0b89 14       		.uleb128 0x14
 2713 0b8a 20110000 		.4byte	.LASF207
 2714 0b8e 0A       		.sleb128 10
 2715 0b8f 14       		.uleb128 0x14
 2716 0b90 79030000 		.4byte	.LASF208
 2717 0b94 0B       		.sleb128 11
 2718 0b95 14       		.uleb128 0x14
 2719 0b96 050C0000 		.4byte	.LASF209
 2720 0b9a 0C       		.sleb128 12
 2721 0b9b 14       		.uleb128 0x14
 2722 0b9c 07190000 		.4byte	.LASF210
 2723 0ba0 0D       		.sleb128 13
 2724 0ba1 14       		.uleb128 0x14
 2725 0ba2 00050000 		.4byte	.LASF211
 2726 0ba6 0E       		.sleb128 14
 2727 0ba7 14       		.uleb128 0x14
 2728 0ba8 730C0000 		.4byte	.LASF212
 2729 0bac 0F       		.sleb128 15
 2730 0bad 14       		.uleb128 0x14
 2731 0bae ED260000 		.4byte	.LASF213
 2732 0bb2 10       		.sleb128 16
 2733 0bb3 14       		.uleb128 0x14
 2734 0bb4 E3140000 		.4byte	.LASF214
 2735 0bb8 11       		.sleb128 17
 2736 0bb9 14       		.uleb128 0x14
 2737 0bba 182A0000 		.4byte	.LASF215
 2738 0bbe 12       		.sleb128 18
 2739 0bbf 14       		.uleb128 0x14
 2740 0bc0 250F0000 		.4byte	.LASF216
 2741 0bc4 13       		.sleb128 19
 2742 0bc5 14       		.uleb128 0x14
 2743 0bc6 620E0000 		.4byte	.LASF217
 2744 0bca 14       		.sleb128 20
 2745 0bcb 14       		.uleb128 0x14
 2746 0bcc 7F000000 		.4byte	.LASF218
 2747 0bd0 15       		.sleb128 21
 2748 0bd1 14       		.uleb128 0x14
 2749 0bd2 21280000 		.4byte	.LASF219
 2750 0bd6 16       		.sleb128 22
 2751 0bd7 14       		.uleb128 0x14
 2752 0bd8 E7280000 		.4byte	.LASF220
 2753 0bdc 17       		.sleb128 23
 2754 0bdd 14       		.uleb128 0x14
 2755 0bde 81050000 		.4byte	.LASF221
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 136


 2756 0be2 18       		.sleb128 24
 2757 0be3 14       		.uleb128 0x14
 2758 0be4 222C0000 		.4byte	.LASF222
 2759 0be8 19       		.sleb128 25
 2760 0be9 14       		.uleb128 0x14
 2761 0bea F8200000 		.4byte	.LASF223
 2762 0bee 1A       		.sleb128 26
 2763 0bef 14       		.uleb128 0x14
 2764 0bf0 3B050000 		.4byte	.LASF224
 2765 0bf4 1B       		.sleb128 27
 2766 0bf5 14       		.uleb128 0x14
 2767 0bf6 66150000 		.4byte	.LASF225
 2768 0bfa 1C       		.sleb128 28
 2769 0bfb 14       		.uleb128 0x14
 2770 0bfc 87100000 		.4byte	.LASF226
 2771 0c00 1D       		.sleb128 29
 2772 0c01 14       		.uleb128 0x14
 2773 0c02 6A190000 		.4byte	.LASF227
 2774 0c06 1E       		.sleb128 30
 2775 0c07 14       		.uleb128 0x14
 2776 0c08 0A290000 		.4byte	.LASF228
 2777 0c0c 1F       		.sleb128 31
 2778 0c0d 14       		.uleb128 0x14
 2779 0c0e FD0D0000 		.4byte	.LASF229
 2780 0c12 20       		.sleb128 32
 2781 0c13 14       		.uleb128 0x14
 2782 0c14 7D040000 		.4byte	.LASF230
 2783 0c18 21       		.sleb128 33
 2784 0c19 14       		.uleb128 0x14
 2785 0c1a 6D070000 		.4byte	.LASF231
 2786 0c1e 22       		.sleb128 34
 2787 0c1f 14       		.uleb128 0x14
 2788 0c20 C10E0000 		.4byte	.LASF232
 2789 0c24 23       		.sleb128 35
 2790 0c25 14       		.uleb128 0x14
 2791 0c26 BD2C0000 		.4byte	.LASF233
 2792 0c2a 24       		.sleb128 36
 2793 0c2b 14       		.uleb128 0x14
 2794 0c2c B5250000 		.4byte	.LASF234
 2795 0c30 25       		.sleb128 37
 2796 0c31 14       		.uleb128 0x14
 2797 0c32 261B0000 		.4byte	.LASF235
 2798 0c36 26       		.sleb128 38
 2799 0c37 14       		.uleb128 0x14
 2800 0c38 B0260000 		.4byte	.LASF236
 2801 0c3c 27       		.sleb128 39
 2802 0c3d 14       		.uleb128 0x14
 2803 0c3e 95220000 		.4byte	.LASF237
 2804 0c42 28       		.sleb128 40
 2805 0c43 14       		.uleb128 0x14
 2806 0c44 D01D0000 		.4byte	.LASF238
 2807 0c48 29       		.sleb128 41
 2808 0c49 14       		.uleb128 0x14
 2809 0c4a DF180000 		.4byte	.LASF239
 2810 0c4e 2A       		.sleb128 42
 2811 0c4f 14       		.uleb128 0x14
 2812 0c50 68200000 		.4byte	.LASF240
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 137


 2813 0c54 2B       		.sleb128 43
 2814 0c55 14       		.uleb128 0x14
 2815 0c56 E5060000 		.4byte	.LASF241
 2816 0c5a 2C       		.sleb128 44
 2817 0c5b 14       		.uleb128 0x14
 2818 0c5c A7230000 		.4byte	.LASF242
 2819 0c60 2D       		.sleb128 45
 2820 0c61 14       		.uleb128 0x14
 2821 0c62 67110000 		.4byte	.LASF243
 2822 0c66 2E       		.sleb128 46
 2823 0c67 14       		.uleb128 0x14
 2824 0c68 62140000 		.4byte	.LASF244
 2825 0c6c 2F       		.sleb128 47
 2826 0c6d 14       		.uleb128 0x14
 2827 0c6e 7D220000 		.4byte	.LASF245
 2828 0c72 30       		.sleb128 48
 2829 0c73 14       		.uleb128 0x14
 2830 0c74 B71D0000 		.4byte	.LASF246
 2831 0c78 31       		.sleb128 49
 2832 0c79 14       		.uleb128 0x14
 2833 0c7a 31250000 		.4byte	.LASF247
 2834 0c7e 32       		.sleb128 50
 2835 0c7f 14       		.uleb128 0x14
 2836 0c80 61100000 		.4byte	.LASF248
 2837 0c84 33       		.sleb128 51
 2838 0c85 14       		.uleb128 0x14
 2839 0c86 AE190000 		.4byte	.LASF249
 2840 0c8a 34       		.sleb128 52
 2841 0c8b 14       		.uleb128 0x14
 2842 0c8c 9C040000 		.4byte	.LASF250
 2843 0c90 35       		.sleb128 53
 2844 0c91 14       		.uleb128 0x14
 2845 0c92 A11C0000 		.4byte	.LASF251
 2846 0c96 36       		.sleb128 54
 2847 0c97 14       		.uleb128 0x14
 2848 0c98 33120000 		.4byte	.LASF252
 2849 0c9c 37       		.sleb128 55
 2850 0c9d 14       		.uleb128 0x14
 2851 0c9e BC0F0000 		.4byte	.LASF253
 2852 0ca2 38       		.sleb128 56
 2853 0ca3 00       		.byte	0
 2854 0ca4 18       		.uleb128 0x18
 2855 0ca5 01       		.byte	0x1
 2856 0ca6 08       		.byte	0x8
 2857 0ca7 30       		.byte	0x30
 2858 0ca8 C60C0000 		.4byte	0xcc6
 2859 0cac 14       		.uleb128 0x14
 2860 0cad 902B0000 		.4byte	.LASF254
 2861 0cb1 02       		.sleb128 2
 2862 0cb2 14       		.uleb128 0x14
 2863 0cb3 2F070000 		.4byte	.LASF255
 2864 0cb7 C000     		.sleb128 64
 2865 0cb9 14       		.uleb128 0x14
 2866 0cba 340A0000 		.4byte	.LASF256
 2867 0cbe 20       		.sleb128 32
 2868 0cbf 14       		.uleb128 0x14
 2869 0cc0 11140000 		.4byte	.LASF257
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 138


 2870 0cc4 38       		.sleb128 56
 2871 0cc5 00       		.byte	0
 2872 0cc6 0C       		.uleb128 0xc
 2873 0cc7 A4130000 		.4byte	.LASF258
 2874 0ccb 6C       		.byte	0x6c
 2875 0ccc 08       		.byte	0x8
 2876 0ccd 3A       		.byte	0x3a
 2877 0cce 0F0D0000 		.4byte	0xd0f
 2878 0cd2 0D       		.uleb128 0xd
 2879 0cd3 B00A0000 		.4byte	.LASF259
 2880 0cd7 08       		.byte	0x8
 2881 0cd8 3B       		.byte	0x3b
 2882 0cd9 040B0000 		.4byte	0xb04
 2883 0cdd 00       		.byte	0
 2884 0cde 0D       		.uleb128 0xd
 2885 0cdf 950C0000 		.4byte	.LASF260
 2886 0ce3 08       		.byte	0x8
 2887 0ce4 3C       		.byte	0x3c
 2888 0ce5 040B0000 		.4byte	0xb04
 2889 0ce9 04       		.byte	0x4
 2890 0cea 0D       		.uleb128 0xd
 2891 0ceb 380C0000 		.4byte	.LASF261
 2892 0cef 08       		.byte	0x8
 2893 0cf0 3D       		.byte	0x3d
 2894 0cf1 040B0000 		.4byte	0xb04
 2895 0cf5 08       		.byte	0x8
 2896 0cf6 0D       		.uleb128 0xd
 2897 0cf7 9D180000 		.4byte	.LASF262
 2898 0cfb 08       		.byte	0x8
 2899 0cfc 3E       		.byte	0x3e
 2900 0cfd 0F0D0000 		.4byte	0xd0f
 2901 0d01 0C       		.byte	0xc
 2902 0d02 0D       		.uleb128 0xd
 2903 0d03 C41F0000 		.4byte	.LASF263
 2904 0d07 08       		.byte	0x8
 2905 0d08 3F       		.byte	0x3f
 2906 0d09 1F0D0000 		.4byte	0xd1f
 2907 0d0d 2C       		.byte	0x2c
 2908 0d0e 00       		.byte	0
 2909 0d0f 19       		.uleb128 0x19
 2910 0d10 040B0000 		.4byte	0xb04
 2911 0d14 1F0D0000 		.4byte	0xd1f
 2912 0d18 1A       		.uleb128 0x1a
 2913 0d19 09070000 		.4byte	0x709
 2914 0d1d 07       		.byte	0x7
 2915 0d1e 00       		.byte	0
 2916 0d1f 19       		.uleb128 0x19
 2917 0d20 040B0000 		.4byte	0xb04
 2918 0d24 2F0D0000 		.4byte	0xd2f
 2919 0d28 1A       		.uleb128 0x1a
 2920 0d29 09070000 		.4byte	0x709
 2921 0d2d 0F       		.byte	0xf
 2922 0d2e 00       		.byte	0
 2923 0d2f 02       		.uleb128 0x2
 2924 0d30 A4130000 		.4byte	.LASF258
 2925 0d34 08       		.byte	0x8
 2926 0d35 43       		.byte	0x43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 139


 2927 0d36 C60C0000 		.4byte	0xcc6
 2928 0d3a 0C       		.uleb128 0xc
 2929 0d3b 90150000 		.4byte	.LASF264
 2930 0d3f 04       		.byte	0x4
 2931 0d40 09       		.byte	0x9
 2932 0d41 3F       		.byte	0x3f
 2933 0d42 520D0000 		.4byte	0xd52
 2934 0d46 0E       		.uleb128 0xe
 2935 0d47 666400   		.ascii	"fd\000"
 2936 0d4a 09       		.byte	0x9
 2937 0d4b 43       		.byte	0x43
 2938 0d4c 02070000 		.4byte	0x702
 2939 0d50 00       		.byte	0
 2940 0d51 00       		.byte	0
 2941 0d52 02       		.uleb128 0x2
 2942 0d53 90150000 		.4byte	.LASF264
 2943 0d57 09       		.byte	0x9
 2944 0d58 45       		.byte	0x45
 2945 0d59 3A0D0000 		.4byte	0xd3a
 2946 0d5d 0C       		.uleb128 0xc
 2947 0d5e 59220000 		.4byte	.LASF265
 2948 0d62 0C       		.byte	0xc
 2949 0d63 09       		.byte	0x9
 2950 0d64 51       		.byte	0x51
 2951 0d65 8E0D0000 		.4byte	0xd8e
 2952 0d69 0D       		.uleb128 0xd
 2953 0d6a 67240000 		.4byte	.LASF266
 2954 0d6e 09       		.byte	0x9
 2955 0d6f 52       		.byte	0x52
 2956 0d70 930D0000 		.4byte	0xd93
 2957 0d74 00       		.byte	0
 2958 0d75 0D       		.uleb128 0xd
 2959 0d76 621B0000 		.4byte	.LASF267
 2960 0d7a 09       		.byte	0x9
 2961 0d7b 53       		.byte	0x53
 2962 0d7c 520D0000 		.4byte	0xd52
 2963 0d80 04       		.byte	0x4
 2964 0d81 0D       		.uleb128 0xd
 2965 0d82 970D0000 		.4byte	.LASF268
 2966 0d86 09       		.byte	0x9
 2967 0d87 54       		.byte	0x54
 2968 0d88 E70A0000 		.4byte	0xae7
 2969 0d8c 08       		.byte	0x8
 2970 0d8d 00       		.byte	0
 2971 0d8e 1B       		.uleb128 0x1b
 2972 0d8f 07040000 		.4byte	.LASF333
 2973 0d93 09       		.uleb128 0x9
 2974 0d94 04       		.byte	0x4
 2975 0d95 8E0D0000 		.4byte	0xd8e
 2976 0d99 02       		.uleb128 0x2
 2977 0d9a 59220000 		.4byte	.LASF265
 2978 0d9e 09       		.byte	0x9
 2979 0d9f 55       		.byte	0x55
 2980 0da0 5D0D0000 		.4byte	0xd5d
 2981 0da4 18       		.uleb128 0x18
 2982 0da5 01       		.byte	0x1
 2983 0da6 0A       		.byte	0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 140


 2984 0da7 29       		.byte	0x29
 2985 0da8 C60D0000 		.4byte	0xdc6
 2986 0dac 1C       		.uleb128 0x1c
 2987 0dad 53484100 		.ascii	"SHA\000"
 2988 0db1 01       		.sleb128 1
 2989 0db2 14       		.uleb128 0x14
 2990 0db3 6B290000 		.4byte	.LASF269
 2991 0db7 C000     		.sleb128 64
 2992 0db9 14       		.uleb128 0x14
 2993 0dba 60220000 		.4byte	.LASF270
 2994 0dbe 14       		.sleb128 20
 2995 0dbf 14       		.uleb128 0x14
 2996 0dc0 EF220000 		.4byte	.LASF271
 2997 0dc4 38       		.sleb128 56
 2998 0dc5 00       		.byte	0
 2999 0dc6 1D       		.uleb128 0x1d
 3000 0dc7 53686100 		.ascii	"Sha\000"
 3001 0dcb 60       		.byte	0x60
 3002 0dcc 0A       		.byte	0xa
 3003 0dcd 3A       		.byte	0x3a
 3004 0dce 0F0E0000 		.4byte	0xe0f
 3005 0dd2 0D       		.uleb128 0xd
 3006 0dd3 B00A0000 		.4byte	.LASF259
 3007 0dd7 0A       		.byte	0xa
 3008 0dd8 3B       		.byte	0x3b
 3009 0dd9 040B0000 		.4byte	0xb04
 3010 0ddd 00       		.byte	0
 3011 0dde 0D       		.uleb128 0xd
 3012 0ddf 950C0000 		.4byte	.LASF260
 3013 0de3 0A       		.byte	0xa
 3014 0de4 3C       		.byte	0x3c
 3015 0de5 040B0000 		.4byte	0xb04
 3016 0de9 04       		.byte	0x4
 3017 0dea 0D       		.uleb128 0xd
 3018 0deb 380C0000 		.4byte	.LASF261
 3019 0def 0A       		.byte	0xa
 3020 0df0 3D       		.byte	0x3d
 3021 0df1 040B0000 		.4byte	0xb04
 3022 0df5 08       		.byte	0x8
 3023 0df6 0D       		.uleb128 0xd
 3024 0df7 C41F0000 		.4byte	.LASF263
 3025 0dfb 0A       		.byte	0xa
 3026 0dfc 3E       		.byte	0x3e
 3027 0dfd 1F0D0000 		.4byte	0xd1f
 3028 0e01 0C       		.byte	0xc
 3029 0e02 0D       		.uleb128 0xd
 3030 0e03 9D180000 		.4byte	.LASF262
 3031 0e07 0A       		.byte	0xa
 3032 0e08 40       		.byte	0x40
 3033 0e09 0F0E0000 		.4byte	0xe0f
 3034 0e0d 4C       		.byte	0x4c
 3035 0e0e 00       		.byte	0
 3036 0e0f 19       		.uleb128 0x19
 3037 0e10 040B0000 		.4byte	0xb04
 3038 0e14 1F0E0000 		.4byte	0xe1f
 3039 0e18 1A       		.uleb128 0x1a
 3040 0e19 09070000 		.4byte	0x709
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 141


 3041 0e1d 04       		.byte	0x4
 3042 0e1e 00       		.byte	0
 3043 0e1f 1E       		.uleb128 0x1e
 3044 0e20 53686100 		.ascii	"Sha\000"
 3045 0e24 0A       		.byte	0xa
 3046 0e25 45       		.byte	0x45
 3047 0e26 C60D0000 		.4byte	0xdc6
 3048 0e2a 18       		.uleb128 0x18
 3049 0e2b 01       		.byte	0x1
 3050 0e2c 0B       		.byte	0xb
 3051 0e2d 3F       		.byte	0x3f
 3052 0e2e 510E0000 		.4byte	0xe51
 3053 0e32 14       		.uleb128 0x14
 3054 0e33 F11A0000 		.4byte	.LASF272
 3055 0e37 00       		.sleb128 0
 3056 0e38 14       		.uleb128 0x14
 3057 0e39 371D0000 		.4byte	.LASF273
 3058 0e3d 01       		.sleb128 1
 3059 0e3e 14       		.uleb128 0x14
 3060 0e3f 88120000 		.4byte	.LASF274
 3061 0e43 20       		.sleb128 32
 3062 0e44 14       		.uleb128 0x14
 3063 0e45 5F230000 		.4byte	.LASF275
 3064 0e49 00       		.sleb128 0
 3065 0e4a 14       		.uleb128 0x14
 3066 0e4b 9B0C0000 		.4byte	.LASF276
 3067 0e4f 01       		.sleb128 1
 3068 0e50 00       		.byte	0
 3069 0e51 1F       		.uleb128 0x1f
 3070 0e52 1F030000 		.4byte	.LASF352
 3071 0e56 02       		.byte	0x2
 3072 0e57 0B       		.byte	0xb
 3073 0e58 83       		.byte	0x83
 3074 0e59 640F0000 		.4byte	0xf64
 3075 0e5d 14       		.uleb128 0x14
 3076 0e5e F42B0000 		.4byte	.LASF277
 3077 0e62 8002     		.sleb128 256
 3078 0e64 14       		.uleb128 0x14
 3079 0e65 12110000 		.4byte	.LASF278
 3080 0e69 C000     		.sleb128 64
 3081 0e6b 14       		.uleb128 0x14
 3082 0e6c B50E0000 		.4byte	.LASF279
 3083 0e70 C000     		.sleb128 64
 3084 0e72 14       		.uleb128 0x14
 3085 0e73 BA290000 		.4byte	.LASF280
 3086 0e77 C000     		.sleb128 64
 3087 0e79 14       		.uleb128 0x14
 3088 0e7a 4A2A0000 		.4byte	.LASF281
 3089 0e7e 05       		.sleb128 5
 3090 0e7f 14       		.uleb128 0x14
 3091 0e80 0D100000 		.4byte	.LASF282
 3092 0e84 06       		.sleb128 6
 3093 0e85 14       		.uleb128 0x14
 3094 0e86 AE1B0000 		.4byte	.LASF283
 3095 0e8a 0C       		.sleb128 12
 3096 0e8b 14       		.uleb128 0x14
 3097 0e8c 82130000 		.4byte	.LASF284
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 142


 3098 0e90 8002     		.sleb128 256
 3099 0e92 14       		.uleb128 0x14
 3100 0e93 470A0000 		.4byte	.LASF285
 3101 0e97 02       		.sleb128 2
 3102 0e98 14       		.uleb128 0x14
 3103 0e99 7E150000 		.4byte	.LASF286
 3104 0e9d 02       		.sleb128 2
 3105 0e9e 14       		.uleb128 0x14
 3106 0e9f C50C0000 		.4byte	.LASF287
 3107 0ea3 02       		.sleb128 2
 3108 0ea4 14       		.uleb128 0x14
 3109 0ea5 0D250000 		.4byte	.LASF288
 3110 0ea9 14       		.sleb128 20
 3111 0eaa 14       		.uleb128 0x14
 3112 0eab F81B0000 		.4byte	.LASF289
 3113 0eaf 08       		.sleb128 8
 3114 0eb0 14       		.uleb128 0x14
 3115 0eb1 C6130000 		.4byte	.LASF290
 3116 0eb5 05       		.sleb128 5
 3117 0eb6 14       		.uleb128 0x14
 3118 0eb7 6F040000 		.4byte	.LASF291
 3119 0ebb 0D       		.sleb128 13
 3120 0ebc 14       		.uleb128 0x14
 3121 0ebd 7B160000 		.4byte	.LASF292
 3122 0ec1 20       		.sleb128 32
 3123 0ec2 14       		.uleb128 0x14
 3124 0ec3 EA1F0000 		.4byte	.LASF293
 3125 0ec7 0F       		.sleb128 15
 3126 0ec8 14       		.uleb128 0x14
 3127 0ec9 111A0000 		.4byte	.LASF294
 3128 0ecd 8004     		.sleb128 512
 3129 0ecf 14       		.uleb128 0x14
 3130 0ed0 F81A0000 		.4byte	.LASF295
 3131 0ed4 8002     		.sleb128 256
 3132 0ed6 14       		.uleb128 0x14
 3133 0ed7 65000000 		.4byte	.LASF296
 3134 0edb 14       		.sleb128 20
 3135 0edc 14       		.uleb128 0x14
 3136 0edd 59080000 		.4byte	.LASF297
 3137 0ee1 05       		.sleb128 5
 3138 0ee2 14       		.uleb128 0x14
 3139 0ee3 9A1B0000 		.4byte	.LASF298
 3140 0ee7 05       		.sleb128 5
 3141 0ee8 14       		.uleb128 0x14
 3142 0ee9 292B0000 		.4byte	.LASF299
 3143 0eed 05       		.sleb128 5
 3144 0eee 14       		.uleb128 0x14
 3145 0eef 35040000 		.4byte	.LASF300
 3146 0ef3 05       		.sleb128 5
 3147 0ef4 14       		.uleb128 0x14
 3148 0ef5 632C0000 		.4byte	.LASF301
 3149 0ef9 05       		.sleb128 5
 3150 0efa 14       		.uleb128 0x14
 3151 0efb 31030000 		.4byte	.LASF302
 3152 0eff 05       		.sleb128 5
 3153 0f00 14       		.uleb128 0x14
 3154 0f01 94020000 		.4byte	.LASF303
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 143


 3155 0f05 C900     		.sleb128 73
 3156 0f07 14       		.uleb128 0x14
 3157 0f08 E71E0000 		.4byte	.LASF304
 3158 0f0c 8504     		.sleb128 517
 3159 0f0e 14       		.uleb128 0x14
 3160 0f0f A42B0000 		.4byte	.LASF305
 3161 0f13 E204     		.sleb128 610
 3162 0f15 14       		.uleb128 0x14
 3163 0f16 66120000 		.4byte	.LASF306
 3164 0f1a F404     		.sleb128 628
 3165 0f1c 14       		.uleb128 0x14
 3166 0f1d 3C000000 		.4byte	.LASF307
 3167 0f21 04       		.sleb128 4
 3168 0f22 14       		.uleb128 0x14
 3169 0f23 12030000 		.4byte	.LASF308
 3170 0f27 10       		.sleb128 16
 3171 0f28 14       		.uleb128 0x14
 3172 0f29 A2250000 		.4byte	.LASF309
 3173 0f2d 20       		.sleb128 32
 3174 0f2e 14       		.uleb128 0x14
 3175 0f2f 20060000 		.4byte	.LASF310
 3176 0f33 23       		.sleb128 35
 3177 0f34 14       		.uleb128 0x14
 3178 0f35 76250000 		.4byte	.LASF311
 3179 0f39 E200     		.sleb128 98
 3180 0f3b 14       		.uleb128 0x14
 3181 0f3c FB240000 		.4byte	.LASF312
 3182 0f40 25       		.sleb128 37
 3183 0f41 14       		.uleb128 0x14
 3184 0f42 53270000 		.4byte	.LASF313
 3185 0f46 3A       		.sleb128 58
 3186 0f47 14       		.uleb128 0x14
 3187 0f48 871A0000 		.4byte	.LASF314
 3188 0f4c 10       		.sleb128 16
 3189 0f4d 14       		.uleb128 0x14
 3190 0f4e 7F1C0000 		.4byte	.LASF315
 3191 0f52 80C000   		.sleb128 8192
 3192 0f55 14       		.uleb128 0x14
 3193 0f56 8E060000 		.4byte	.LASF316
 3194 0f5a 9205     		.sleb128 658
 3195 0f5c 14       		.uleb128 0x14
 3196 0f5d A0060000 		.4byte	.LASF317
 3197 0f61 D800     		.sleb128 88
 3198 0f63 00       		.byte	0
 3199 0f64 10       		.uleb128 0x10
 3200 0f65 5D240000 		.4byte	.LASF318
 3201 0f69 0B       		.byte	0xb
 3202 0f6a 4101     		.2byte	0x141
 3203 0f6c 700F0000 		.4byte	0xf70
 3204 0f70 08       		.uleb128 0x8
 3205 0f71 5D240000 		.4byte	.LASF318
 3206 0f75 08       		.byte	0x8
 3207 0f76 0B       		.byte	0xb
 3208 0f77 4301     		.2byte	0x143
 3209 0f79 980F0000 		.4byte	0xf98
 3210 0f7d 05       		.uleb128 0x5
 3211 0f7e 81010000 		.4byte	.LASF319
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 144


 3212 0f82 0B       		.byte	0xb
 3213 0f83 4401     		.2byte	0x144
 3214 0f85 980F0000 		.4byte	0xf98
 3215 0f89 00       		.byte	0
 3216 0f8a 05       		.uleb128 0x5
 3217 0f8b BD160000 		.4byte	.LASF86
 3218 0f8f 0B       		.byte	0xb
 3219 0f90 4501     		.2byte	0x145
 3220 0f92 F5060000 		.4byte	0x6f5
 3221 0f96 04       		.byte	0x4
 3222 0f97 00       		.byte	0
 3223 0f98 09       		.uleb128 0x9
 3224 0f99 04       		.byte	0x4
 3225 0f9a 640F0000 		.4byte	0xf64
 3226 0f9e 10       		.uleb128 0x10
 3227 0f9f DF010000 		.4byte	.LASF320
 3228 0fa3 0B       		.byte	0xb
 3229 0fa4 4901     		.2byte	0x149
 3230 0fa6 AA0F0000 		.4byte	0xfaa
 3231 0faa 08       		.uleb128 0x8
 3232 0fab DF010000 		.4byte	.LASF320
 3233 0faf 10       		.byte	0x10
 3234 0fb0 0B       		.byte	0xb
 3235 0fb1 4B01     		.2byte	0x14b
 3236 0fb3 EC0F0000 		.4byte	0xfec
 3237 0fb7 05       		.uleb128 0x5
 3238 0fb8 81010000 		.4byte	.LASF319
 3239 0fbc 0B       		.byte	0xb
 3240 0fbd 4C01     		.2byte	0x14c
 3241 0fbf EC0F0000 		.4byte	0xfec
 3242 0fc3 00       		.byte	0
 3243 0fc4 05       		.uleb128 0x5
 3244 0fc5 BD160000 		.4byte	.LASF86
 3245 0fc9 0B       		.byte	0xb
 3246 0fca 4D01     		.2byte	0x14d
 3247 0fcc F5060000 		.4byte	0x6f5
 3248 0fd0 04       		.byte	0x4
 3249 0fd1 05       		.uleb128 0x5
 3250 0fd2 0A1A0000 		.4byte	.LASF321
 3251 0fd6 0B       		.byte	0xb
 3252 0fd7 4E01     		.2byte	0x14e
 3253 0fd9 02070000 		.4byte	0x702
 3254 0fdd 08       		.byte	0x8
 3255 0fde 05       		.uleb128 0x5
 3256 0fdf D8090000 		.4byte	.LASF322
 3257 0fe3 0B       		.byte	0xb
 3258 0fe4 4F01     		.2byte	0x14f
 3259 0fe6 E70A0000 		.4byte	0xae7
 3260 0fea 0C       		.byte	0xc
 3261 0feb 00       		.byte	0
 3262 0fec 09       		.uleb128 0x9
 3263 0fed 04       		.byte	0x4
 3264 0fee 9E0F0000 		.4byte	0xf9e
 3265 0ff2 10       		.uleb128 0x10
 3266 0ff3 14010000 		.4byte	.LASF323
 3267 0ff7 0B       		.byte	0xb
 3268 0ff8 7001     		.2byte	0x170
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 145


 3269 0ffa FE0F0000 		.4byte	0xffe
 3270 0ffe 08       		.uleb128 0x8
 3271 0fff 14010000 		.4byte	.LASF323
 3272 1003 38       		.byte	0x38
 3273 1004 0B       		.byte	0xb
 3274 1005 1C02     		.2byte	0x21c
 3275 1007 8E100000 		.4byte	0x108e
 3276 100b 05       		.uleb128 0x5
 3277 100c B2150000 		.4byte	.LASF324
 3278 1010 0B       		.byte	0xb
 3279 1011 1D02     		.2byte	0x21d
 3280 1013 040B0000 		.4byte	0xb04
 3281 1017 00       		.byte	0
 3282 1018 05       		.uleb128 0x5
 3283 1019 AB100000 		.4byte	.LASF325
 3284 101d 0B       		.byte	0xb
 3285 101e 1E02     		.2byte	0x21e
 3286 1020 040B0000 		.4byte	0xb04
 3287 1024 04       		.byte	0x4
 3288 1025 05       		.uleb128 0x5
 3289 1026 AE1D0000 		.4byte	.LASF326
 3290 102a 0B       		.byte	0xb
 3291 102b 1F02     		.2byte	0x21f
 3292 102d F20A0000 		.4byte	0xaf2
 3293 1031 08       		.byte	0x8
 3294 1032 05       		.uleb128 0x5
 3295 1033 9D170000 		.4byte	.LASF327
 3296 1037 0B       		.byte	0xb
 3297 1038 2002     		.2byte	0x220
 3298 103a 8E100000 		.4byte	0x108e
 3299 103e 0C       		.byte	0xc
 3300 103f 05       		.uleb128 0x5
 3301 1040 41070000 		.4byte	.LASF328
 3302 1044 0B       		.byte	0xb
 3303 1045 2102     		.2byte	0x221
 3304 1047 02070000 		.4byte	0x702
 3305 104b 10       		.byte	0x10
 3306 104c 05       		.uleb128 0x5
 3307 104d BD160000 		.4byte	.LASF86
 3308 1051 0B       		.byte	0xb
 3309 1052 2202     		.2byte	0x222
 3310 1054 F5060000 		.4byte	0x6f5
 3311 1058 14       		.byte	0x14
 3312 1059 05       		.uleb128 0x5
 3313 105a 6F270000 		.4byte	.LASF329
 3314 105e 0B       		.byte	0xb
 3315 105f 2402     		.2byte	0x224
 3316 1061 EC0F0000 		.4byte	0xfec
 3317 1065 18       		.byte	0x18
 3318 1066 05       		.uleb128 0x5
 3319 1067 0A180000 		.4byte	.LASF330
 3320 106b 0B       		.byte	0xb
 3321 106c 2502     		.2byte	0x225
 3322 106e EC0F0000 		.4byte	0xfec
 3323 1072 1C       		.byte	0x1c
 3324 1073 05       		.uleb128 0x5
 3325 1074 E8290000 		.4byte	.LASF331
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 146


 3326 1078 0B       		.byte	0xb
 3327 1079 2702     		.2byte	0x227
 3328 107b 94100000 		.4byte	0x1094
 3329 107f 20       		.byte	0x20
 3330 1080 05       		.uleb128 0x5
 3331 1081 81010000 		.4byte	.LASF319
 3332 1085 0B       		.byte	0xb
 3333 1086 2D02     		.2byte	0x22d
 3334 1088 C4100000 		.4byte	0x10c4
 3335 108c 34       		.byte	0x34
 3336 108d 00       		.byte	0
 3337 108e 09       		.uleb128 0x9
 3338 108f 04       		.byte	0x4
 3339 1090 E70A0000 		.4byte	0xae7
 3340 1094 19       		.uleb128 0x19
 3341 1095 E70A0000 		.4byte	0xae7
 3342 1099 A4100000 		.4byte	0x10a4
 3343 109d 1A       		.uleb128 0x1a
 3344 109e 09070000 		.4byte	0x709
 3345 10a2 13       		.byte	0x13
 3346 10a3 00       		.byte	0
 3347 10a4 19       		.uleb128 0x19
 3348 10a5 FB060000 		.4byte	0x6fb
 3349 10a9 B4100000 		.4byte	0x10b4
 3350 10ad 1A       		.uleb128 0x1a
 3351 10ae 09070000 		.4byte	0x709
 3352 10b2 FF       		.byte	0xff
 3353 10b3 00       		.byte	0
 3354 10b4 19       		.uleb128 0x19
 3355 10b5 E70A0000 		.4byte	0xae7
 3356 10b9 C4100000 		.4byte	0x10c4
 3357 10bd 1A       		.uleb128 0x1a
 3358 10be 09070000 		.4byte	0x709
 3359 10c2 1F       		.byte	0x1f
 3360 10c3 00       		.byte	0
 3361 10c4 09       		.uleb128 0x9
 3362 10c5 04       		.byte	0x4
 3363 10c6 F20F0000 		.4byte	0xff2
 3364 10ca 10       		.uleb128 0x10
 3365 10cb 7A200000 		.4byte	.LASF332
 3366 10cf 0B       		.byte	0xb
 3367 10d0 A202     		.2byte	0x2a2
 3368 10d2 D6100000 		.4byte	0x10d6
 3369 10d6 1B       		.uleb128 0x1b
 3370 10d7 7A200000 		.4byte	.LASF332
 3371 10db 10       		.uleb128 0x10
 3372 10dc 18160000 		.4byte	.LASF334
 3373 10e0 0B       		.byte	0xb
 3374 10e1 0D03     		.2byte	0x30d
 3375 10e3 E7100000 		.4byte	0x10e7
 3376 10e7 1B       		.uleb128 0x1b
 3377 10e8 18160000 		.4byte	.LASF334
 3378 10ec 18       		.uleb128 0x18
 3379 10ed 01       		.byte	0x1
 3380 10ee 0C       		.byte	0xc
 3381 10ef 44       		.byte	0x44
 3382 10f0 2D110000 		.4byte	0x112d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 147


 3383 10f4 14       		.uleb128 0x14
 3384 10f5 15100000 		.4byte	.LASF335
 3385 10f9 0E       		.sleb128 14
 3386 10fa 14       		.uleb128 0x14
 3387 10fb ED0D0000 		.4byte	.LASF336
 3388 10ff 36       		.sleb128 54
 3389 1100 14       		.uleb128 0x14
 3390 1101 25090000 		.4byte	.LASF337
 3391 1105 DC00     		.sleb128 92
 3392 1107 1C       		.uleb128 0x1c
 3393 1108 4D443500 		.ascii	"MD5\000"
 3394 110c 00       		.sleb128 0
 3395 110d 14       		.uleb128 0x14
 3396 110e DD090000 		.4byte	.LASF338
 3397 1112 04       		.sleb128 4
 3398 1113 14       		.uleb128 0x14
 3399 1114 19060000 		.4byte	.LASF339
 3400 1118 05       		.sleb128 5
 3401 1119 14       		.uleb128 0x14
 3402 111a 22230000 		.4byte	.LASF340
 3403 111e 07       		.sleb128 7
 3404 111f 14       		.uleb128 0x14
 3405 1120 7F260000 		.4byte	.LASF341
 3406 1124 20       		.sleb128 32
 3407 1125 14       		.uleb128 0x14
 3408 1126 40030000 		.4byte	.LASF342
 3409 112a C000     		.sleb128 64
 3410 112c 00       		.byte	0
 3411 112d 20       		.uleb128 0x20
 3412 112e 6C       		.byte	0x6c
 3413 112f 0C       		.byte	0xc
 3414 1130 78       		.byte	0x78
 3415 1131 4C110000 		.4byte	0x114c
 3416 1135 21       		.uleb128 0x21
 3417 1136 73686100 		.ascii	"sha\000"
 3418 113a 0C       		.byte	0xc
 3419 113b 7D       		.byte	0x7d
 3420 113c 1F0E0000 		.4byte	0xe1f
 3421 1140 22       		.uleb128 0x22
 3422 1141 06100000 		.4byte	.LASF343
 3423 1145 0C       		.byte	0xc
 3424 1146 80       		.byte	0x80
 3425 1147 2F0D0000 		.4byte	0xd2f
 3426 114b 00       		.byte	0
 3427 114c 02       		.uleb128 0x2
 3428 114d 920D0000 		.4byte	.LASF344
 3429 1151 0C       		.byte	0xc
 3430 1152 8B       		.byte	0x8b
 3431 1153 2D110000 		.4byte	0x112d
 3432 1157 23       		.uleb128 0x23
 3433 1158 C1060000 		.4byte	.LASF345
 3434 115c 1001     		.2byte	0x110
 3435 115e 0C       		.byte	0xc
 3436 115f 8E       		.byte	0x8e
 3437 1160 AF110000 		.4byte	0x11af
 3438 1164 0D       		.uleb128 0xd
 3439 1165 2C1F0000 		.4byte	.LASF346
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 148


 3440 1169 0C       		.byte	0xc
 3441 116a 8F       		.byte	0x8f
 3442 116b 4C110000 		.4byte	0x114c
 3443 116f 00       		.byte	0
 3444 1170 0D       		.uleb128 0xd
 3445 1171 F50F0000 		.4byte	.LASF347
 3446 1175 0C       		.byte	0xc
 3447 1176 90       		.byte	0x90
 3448 1177 1F0D0000 		.4byte	0xd1f
 3449 117b 6C       		.byte	0x6c
 3450 117c 0D       		.uleb128 0xd
 3451 117d 4F0B0000 		.4byte	.LASF348
 3452 1181 0C       		.byte	0xc
 3453 1182 91       		.byte	0x91
 3454 1183 1F0D0000 		.4byte	0xd1f
 3455 1187 AC       		.byte	0xac
 3456 1188 0D       		.uleb128 0xd
 3457 1189 E30D0000 		.4byte	.LASF349
 3458 118d 0C       		.byte	0xc
 3459 118e 92       		.byte	0x92
 3460 118f 0F0D0000 		.4byte	0xd0f
 3461 1193 EC       		.byte	0xec
 3462 1194 24       		.uleb128 0x24
 3463 1195 C6060000 		.4byte	.LASF350
 3464 1199 0C       		.byte	0xc
 3465 119a 93       		.byte	0x93
 3466 119b E70A0000 		.4byte	0xae7
 3467 119f 0C01     		.2byte	0x10c
 3468 11a1 24       		.uleb128 0x24
 3469 11a2 F3020000 		.4byte	.LASF351
 3470 11a6 0C       		.byte	0xc
 3471 11a7 94       		.byte	0x94
 3472 11a8 E70A0000 		.4byte	0xae7
 3473 11ac 0D01     		.2byte	0x10d
 3474 11ae 00       		.byte	0
 3475 11af 02       		.uleb128 0x2
 3476 11b0 C1060000 		.4byte	.LASF345
 3477 11b4 0C       		.byte	0xc
 3478 11b5 9E       		.byte	0x9e
 3479 11b6 57110000 		.4byte	0x1157
 3480 11ba 25       		.uleb128 0x25
 3481 11bb A4140000 		.4byte	.LASF353
 3482 11bf 04       		.byte	0x4
 3483 11c0 03       		.byte	0x3
 3484 11c1 5203     		.2byte	0x352
 3485 11c3 71150000 		.4byte	0x1571
 3486 11c7 14       		.uleb128 0x14
 3487 11c8 28200000 		.4byte	.LASF354
 3488 11cc C001     		.sleb128 192
 3489 11ce 14       		.uleb128 0x14
 3490 11cf 28030000 		.4byte	.LASF355
 3491 11d3 D001     		.sleb128 208
 3492 11d5 14       		.uleb128 0x14
 3493 11d6 C2050000 		.4byte	.LASF356
 3494 11da CC01     		.sleb128 204
 3495 11dc 14       		.uleb128 0x14
 3496 11dd BB280000 		.4byte	.LASF357
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 149


 3497 11e1 01       		.sleb128 1
 3498 11e2 14       		.uleb128 0x14
 3499 11e3 C11B0000 		.4byte	.LASF358
 3500 11e7 02       		.sleb128 2
 3501 11e8 14       		.uleb128 0x14
 3502 11e9 A3070000 		.4byte	.LASF359
 3503 11ed FE01     		.sleb128 254
 3504 11ef 14       		.uleb128 0x14
 3505 11f0 AA120000 		.4byte	.LASF360
 3506 11f4 FF01     		.sleb128 255
 3507 11f6 14       		.uleb128 0x14
 3508 11f7 44150000 		.4byte	.LASF361
 3509 11fb FD01     		.sleb128 253
 3510 11fd 14       		.uleb128 0x14
 3511 11fe 181D0000 		.4byte	.LASF362
 3512 1202 03       		.sleb128 3
 3513 1203 14       		.uleb128 0x14
 3514 1204 FE270000 		.4byte	.LASF363
 3515 1208 00       		.sleb128 0
 3516 1209 14       		.uleb128 0x14
 3517 120a 54050000 		.4byte	.LASF364
 3518 120e 01       		.sleb128 1
 3519 120f 14       		.uleb128 0x14
 3520 1210 3D200000 		.4byte	.LASF365
 3521 1214 02       		.sleb128 2
 3522 1215 14       		.uleb128 0x14
 3523 1216 292A0000 		.4byte	.LASF366
 3524 121a 03       		.sleb128 3
 3525 121b 14       		.uleb128 0x14
 3526 121c D9240000 		.4byte	.LASF367
 3527 1220 01       		.sleb128 1
 3528 1221 14       		.uleb128 0x14
 3529 1222 47060000 		.4byte	.LASF368
 3530 1226 FF01     		.sleb128 255
 3531 1228 14       		.uleb128 0x14
 3532 1229 48260000 		.4byte	.LASF369
 3533 122d 00       		.sleb128 0
 3534 122e 14       		.uleb128 0x14
 3535 122f 620C0000 		.4byte	.LASF370
 3536 1233 DD01     		.sleb128 221
 3537 1235 14       		.uleb128 0x14
 3538 1236 65090000 		.4byte	.LASF371
 3539 123a 0D       		.sleb128 13
 3540 123b 14       		.uleb128 0x14
 3541 123c E9040000 		.4byte	.LASF372
 3542 1240 30       		.sleb128 48
 3543 1241 14       		.uleb128 0x14
 3544 1242 9F290000 		.4byte	.LASF373
 3545 1246 8004     		.sleb128 512
 3546 1248 14       		.uleb128 0x14
 3547 1249 BA140000 		.4byte	.LASF374
 3548 124d 04       		.sleb128 4
 3549 124e 14       		.uleb128 0x14
 3550 124f 0A090000 		.4byte	.LASF375
 3551 1253 24       		.sleb128 36
 3552 1254 14       		.uleb128 0x14
 3553 1255 812C0000 		.4byte	.LASF376
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 150


 3554 1259 808001   		.sleb128 16384
 3555 125c 14       		.uleb128 0x14
 3556 125d D9280000 		.4byte	.LASF377
 3557 1261 C600     		.sleb128 70
 3558 1263 14       		.uleb128 0x14
 3559 1264 0E1F0000 		.4byte	.LASF378
 3560 1268 8008     		.sleb128 1024
 3561 126a 14       		.uleb128 0x14
 3562 126b 98150000 		.4byte	.LASF379
 3563 126f DC0B     		.sleb128 1500
 3564 1271 14       		.uleb128 0x14
 3565 1272 501C0000 		.4byte	.LASF380
 3566 1276 9C3F     		.sleb128 8092
 3567 1278 14       		.uleb128 0x14
 3568 1279 CD170000 		.4byte	.LASF381
 3569 127d 8C08     		.sleb128 1036
 3570 127f 14       		.uleb128 0x14
 3571 1280 00000000 		.4byte	.LASF382
 3572 1284 08       		.sleb128 8
 3573 1285 14       		.uleb128 0x14
 3574 1286 0C230000 		.4byte	.LASF383
 3575 128a 30       		.sleb128 48
 3576 128b 14       		.uleb128 0x14
 3577 128c 9C130000 		.4byte	.LASF384
 3578 1290 28       		.sleb128 40
 3579 1291 14       		.uleb128 0x14
 3580 1292 CB0D0000 		.4byte	.LASF385
 3581 1296 8002     		.sleb128 256
 3582 1298 14       		.uleb128 0x14
 3583 1299 97240000 		.4byte	.LASF386
 3584 129d C000     		.sleb128 64
 3585 129f 14       		.uleb128 0x14
 3586 12a0 CD030000 		.4byte	.LASF387
 3587 12a4 0D       		.sleb128 13
 3588 12a5 14       		.uleb128 0x14
 3589 12a6 41110000 		.4byte	.LASF388
 3590 12aa 37       		.sleb128 55
 3591 12ab 14       		.uleb128 0x14
 3592 12ac DC200000 		.4byte	.LASF389
 3593 12b0 C000     		.sleb128 64
 3594 12b2 14       		.uleb128 0x14
 3595 12b3 FD0A0000 		.4byte	.LASF390
 3596 12b7 D000     		.sleb128 80
 3597 12b9 14       		.uleb128 0x14
 3598 12ba 2D230000 		.4byte	.LASF391
 3599 12be 02       		.sleb128 2
 3600 12bf 14       		.uleb128 0x14
 3601 12c0 47210000 		.4byte	.LASF392
 3602 12c4 02       		.sleb128 2
 3603 12c5 14       		.uleb128 0x14
 3604 12c6 8C1B0000 		.4byte	.LASF393
 3605 12ca 08       		.sleb128 8
 3606 12cb 14       		.uleb128 0x14
 3607 12cc DF030000 		.4byte	.LASF394
 3608 12d0 03       		.sleb128 3
 3609 12d1 14       		.uleb128 0x14
 3610 12d2 11020000 		.4byte	.LASF395
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 151


 3611 12d6 02       		.sleb128 2
 3612 12d7 14       		.uleb128 0x14
 3613 12d8 4C0D0000 		.4byte	.LASF396
 3614 12dc 02       		.sleb128 2
 3615 12dd 14       		.uleb128 0x14
 3616 12de 0F060000 		.4byte	.LASF397
 3617 12e2 02       		.sleb128 2
 3618 12e3 14       		.uleb128 0x14
 3619 12e4 BA1E0000 		.4byte	.LASF398
 3620 12e8 8104     		.sleb128 513
 3621 12ea 14       		.uleb128 0x14
 3622 12eb FC000000 		.4byte	.LASF399
 3623 12ef 04       		.sleb128 4
 3624 12f0 14       		.uleb128 0x14
 3625 12f1 370D0000 		.4byte	.LASF400
 3626 12f5 20       		.sleb128 32
 3627 12f6 14       		.uleb128 0x14
 3628 12f7 390F0000 		.4byte	.LASF401
 3629 12fb C000     		.sleb128 64
 3630 12fd 14       		.uleb128 0x14
 3631 12fe 0F240000 		.4byte	.LASF402
 3632 1302 20       		.sleb128 32
 3633 1303 14       		.uleb128 0x14
 3634 1304 9F260000 		.4byte	.LASF403
 3635 1308 0E       		.sleb128 14
 3636 1309 14       		.uleb128 0x14
 3637 130a 610F0000 		.4byte	.LASF404
 3638 130e 20       		.sleb128 32
 3639 130f 14       		.uleb128 0x14
 3640 1310 33060000 		.4byte	.LASF405
 3641 1314 14       		.sleb128 20
 3642 1315 14       		.uleb128 0x14
 3643 1316 48130000 		.4byte	.LASF406
 3644 131a 02       		.sleb128 2
 3645 131b 14       		.uleb128 0x14
 3646 131c 090D0000 		.4byte	.LASF407
 3647 1320 01       		.sleb128 1
 3648 1321 14       		.uleb128 0x14
 3649 1322 D7220000 		.4byte	.LASF408
 3650 1326 01       		.sleb128 1
 3651 1327 14       		.uleb128 0x14
 3652 1328 B9130000 		.4byte	.LASF409
 3653 132c 02       		.sleb128 2
 3654 132d 14       		.uleb128 0x14
 3655 132e 7E230000 		.4byte	.LASF410
 3656 1332 03       		.sleb128 3
 3657 1333 14       		.uleb128 0x14
 3658 1334 84070000 		.4byte	.LASF411
 3659 1338 04       		.sleb128 4
 3660 1339 14       		.uleb128 0x14
 3661 133a F7080000 		.4byte	.LASF412
 3662 133e 01       		.sleb128 1
 3663 133f 14       		.uleb128 0x14
 3664 1340 802A0000 		.4byte	.LASF413
 3665 1344 02       		.sleb128 2
 3666 1345 14       		.uleb128 0x14
 3667 1346 82210000 		.4byte	.LASF414
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 152


 3668 134a 14       		.sleb128 20
 3669 134b 14       		.uleb128 0x14
 3670 134c A92C0000 		.4byte	.LASF415
 3671 1350 04       		.sleb128 4
 3672 1351 14       		.uleb128 0x14
 3673 1352 821E0000 		.4byte	.LASF416
 3674 1356 05       		.sleb128 5
 3675 1357 14       		.uleb128 0x14
 3676 1358 50230000 		.4byte	.LASF417
 3677 135c 03       		.sleb128 3
 3678 135d 14       		.uleb128 0x14
 3679 135e 92010000 		.4byte	.LASF418
 3680 1362 02       		.sleb128 2
 3681 1363 14       		.uleb128 0x14
 3682 1364 94110000 		.4byte	.LASF419
 3683 1368 02       		.sleb128 2
 3684 1369 14       		.uleb128 0x14
 3685 136a 5C1D0000 		.4byte	.LASF420
 3686 136e 0A       		.sleb128 10
 3687 136f 14       		.uleb128 0x14
 3688 1370 C51C0000 		.4byte	.LASF421
 3689 1374 02       		.sleb128 2
 3690 1375 14       		.uleb128 0x14
 3691 1376 7B120000 		.4byte	.LASF422
 3692 137a 08       		.sleb128 8
 3693 137b 14       		.uleb128 0x14
 3694 137c F3090000 		.4byte	.LASF423
 3695 1380 06       		.sleb128 6
 3696 1381 14       		.uleb128 0x14
 3697 1382 18270000 		.4byte	.LASF424
 3698 1386 02       		.sleb128 2
 3699 1387 14       		.uleb128 0x14
 3700 1388 C1100000 		.4byte	.LASF425
 3701 138c 20       		.sleb128 32
 3702 138d 14       		.uleb128 0x14
 3703 138e 18250000 		.4byte	.LASF426
 3704 1392 0C       		.sleb128 12
 3705 1393 14       		.uleb128 0x14
 3706 1394 D3040000 		.4byte	.LASF427
 3707 1398 0D       		.sleb128 13
 3708 1399 14       		.uleb128 0x14
 3709 139a 9D200000 		.4byte	.LASF428
 3710 139e 08       		.sleb128 8
 3711 139f 14       		.uleb128 0x14
 3712 13a0 FD250000 		.4byte	.LASF429
 3713 13a4 08       		.sleb128 8
 3714 13a5 14       		.uleb128 0x14
 3715 13a6 F9230000 		.4byte	.LASF430
 3716 13aa 02       		.sleb128 2
 3717 13ab 14       		.uleb128 0x14
 3718 13ac 18000000 		.4byte	.LASF431
 3719 13b0 03       		.sleb128 3
 3720 13b1 14       		.uleb128 0x14
 3721 13b2 4F1D0000 		.4byte	.LASF432
 3722 13b6 05       		.sleb128 5
 3723 13b7 14       		.uleb128 0x14
 3724 13b8 B9180000 		.4byte	.LASF433
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 153


 3725 13bc 0F       		.sleb128 15
 3726 13bd 14       		.uleb128 0x14
 3727 13be 57260000 		.4byte	.LASF434
 3728 13c2 0C       		.sleb128 12
 3729 13c3 14       		.uleb128 0x14
 3730 13c4 0B2C0000 		.4byte	.LASF435
 3731 13c8 0D       		.sleb128 13
 3732 13c9 14       		.uleb128 0x14
 3733 13ca 3B1F0000 		.4byte	.LASF436
 3734 13ce 0D       		.sleb128 13
 3735 13cf 14       		.uleb128 0x14
 3736 13d0 A0010000 		.4byte	.LASF437
 3737 13d4 8002     		.sleb128 256
 3738 13d6 14       		.uleb128 0x14
 3739 13d7 700F0000 		.4byte	.LASF438
 3740 13db 8001     		.sleb128 128
 3741 13dd 14       		.uleb128 0x14
 3742 13de B51B0000 		.4byte	.LASF439
 3743 13e2 E001     		.sleb128 224
 3744 13e4 14       		.uleb128 0x14
 3745 13e5 2B170000 		.4byte	.LASF440
 3746 13e9 8002     		.sleb128 256
 3747 13eb 14       		.uleb128 0x14
 3748 13ec 9B2A0000 		.4byte	.LASF441
 3749 13f0 8002     		.sleb128 256
 3750 13f2 14       		.uleb128 0x14
 3751 13f3 3A170000 		.4byte	.LASF442
 3752 13f7 10       		.sleb128 16
 3753 13f8 14       		.uleb128 0x14
 3754 13f9 A1190000 		.4byte	.LASF443
 3755 13fd 08       		.sleb128 8
 3756 13fe 14       		.uleb128 0x14
 3757 13ff DE080000 		.4byte	.LASF444
 3758 1403 18       		.sleb128 24
 3759 1404 14       		.uleb128 0x14
 3760 1405 31200000 		.4byte	.LASF445
 3761 1409 08       		.sleb128 8
 3762 140a 14       		.uleb128 0x14
 3763 140b 500F0000 		.4byte	.LASF446
 3764 140f 20       		.sleb128 32
 3765 1410 14       		.uleb128 0x14
 3766 1411 35020000 		.4byte	.LASF447
 3767 1415 18       		.sleb128 24
 3768 1416 14       		.uleb128 0x14
 3769 1417 031B0000 		.4byte	.LASF448
 3770 141b 10       		.sleb128 16
 3771 141c 14       		.uleb128 0x14
 3772 141d 49070000 		.4byte	.LASF449
 3773 1421 10       		.sleb128 16
 3774 1422 14       		.uleb128 0x14
 3775 1423 7E060000 		.4byte	.LASF450
 3776 1427 04       		.sleb128 4
 3777 1428 14       		.uleb128 0x14
 3778 1429 2F1E0000 		.4byte	.LASF451
 3779 142d 08       		.sleb128 8
 3780 142e 14       		.uleb128 0x14
 3781 142f 2E140000 		.4byte	.LASF452
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 154


 3782 1433 09       		.sleb128 9
 3783 1434 14       		.uleb128 0x14
 3784 1435 702C0000 		.4byte	.LASF453
 3785 1439 0A       		.sleb128 10
 3786 143a 14       		.uleb128 0x14
 3787 143b CC230000 		.4byte	.LASF454
 3788 143f 0B       		.sleb128 11
 3789 1440 14       		.uleb128 0x14
 3790 1441 A0150000 		.4byte	.LASF455
 3791 1445 0D       		.sleb128 13
 3792 1446 14       		.uleb128 0x14
 3793 1447 1F220000 		.4byte	.LASF456
 3794 144b 04       		.sleb128 4
 3795 144c 14       		.uleb128 0x14
 3796 144d F3130000 		.4byte	.LASF457
 3797 1451 08       		.sleb128 8
 3798 1452 14       		.uleb128 0x14
 3799 1453 4B010000 		.4byte	.LASF458
 3800 1457 0C       		.sleb128 12
 3801 1458 14       		.uleb128 0x14
 3802 1459 29150000 		.4byte	.LASF459
 3803 145d 0C       		.sleb128 12
 3804 145e 14       		.uleb128 0x14
 3805 145f 7A290000 		.4byte	.LASF460
 3806 1463 0C       		.sleb128 12
 3807 1464 14       		.uleb128 0x14
 3808 1465 C5280000 		.4byte	.LASF461
 3809 1469 08       		.sleb128 8
 3810 146a 14       		.uleb128 0x14
 3811 146b 74020000 		.4byte	.LASF462
 3812 146f 10       		.sleb128 16
 3813 1470 14       		.uleb128 0x14
 3814 1471 57170000 		.4byte	.LASF463
 3815 1475 10       		.sleb128 16
 3816 1476 14       		.uleb128 0x14
 3817 1477 C4210000 		.4byte	.LASF464
 3818 147b 08       		.sleb128 8
 3819 147c 14       		.uleb128 0x14
 3820 147d D11E0000 		.4byte	.LASF465
 3821 1481 10       		.sleb128 16
 3822 1482 14       		.uleb128 0x14
 3823 1483 D2000000 		.4byte	.LASF466
 3824 1487 18       		.sleb128 24
 3825 1488 14       		.uleb128 0x14
 3826 1489 2D270000 		.4byte	.LASF467
 3827 148d 20       		.sleb128 32
 3828 148e 14       		.uleb128 0x14
 3829 148f F7060000 		.4byte	.LASF468
 3830 1493 10       		.sleb128 16
 3831 1494 14       		.uleb128 0x14
 3832 1495 C6200000 		.4byte	.LASF469
 3833 1499 20       		.sleb128 32
 3834 149a 14       		.uleb128 0x14
 3835 149b 3C190000 		.4byte	.LASF470
 3836 149f 10       		.sleb128 16
 3837 14a0 14       		.uleb128 0x14
 3838 14a1 671B0000 		.4byte	.LASF471
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 155


 3839 14a5 0C       		.sleb128 12
 3840 14a6 14       		.uleb128 0x14
 3841 14a7 70010000 		.4byte	.LASF472
 3842 14ab 10       		.sleb128 16
 3843 14ac 14       		.uleb128 0x14
 3844 14ad 77100000 		.4byte	.LASF473
 3845 14b1 10       		.sleb128 16
 3846 14b2 14       		.uleb128 0x14
 3847 14b3 D9290000 		.4byte	.LASF474
 3848 14b7 10       		.sleb128 16
 3849 14b8 14       		.uleb128 0x14
 3850 14b9 43270000 		.4byte	.LASF475
 3851 14bd 10       		.sleb128 16
 3852 14be 14       		.uleb128 0x14
 3853 14bf 6F0A0000 		.4byte	.LASF476
 3854 14c3 08       		.sleb128 8
 3855 14c4 14       		.uleb128 0x14
 3856 14c5 52130000 		.4byte	.LASF477
 3857 14c9 08       		.sleb128 8
 3858 14ca 14       		.uleb128 0x14
 3859 14cb EC080000 		.4byte	.LASF478
 3860 14cf 20       		.sleb128 32
 3861 14d0 14       		.uleb128 0x14
 3862 14d1 39010000 		.4byte	.LASF479
 3863 14d5 8002     		.sleb128 256
 3864 14d7 14       		.uleb128 0x14
 3865 14d8 67260000 		.4byte	.LASF480
 3866 14dc 8001     		.sleb128 128
 3867 14de 14       		.uleb128 0x14
 3868 14df 4A120000 		.4byte	.LASF481
 3869 14e3 8008     		.sleb128 1024
 3870 14e5 14       		.uleb128 0x14
 3871 14e6 780B0000 		.4byte	.LASF482
 3872 14ea 23       		.sleb128 35
 3873 14eb 14       		.uleb128 0x14
 3874 14ec 43220000 		.4byte	.LASF483
 3875 14f0 30       		.sleb128 48
 3876 14f1 14       		.uleb128 0x14
 3877 14f2 172B0000 		.4byte	.LASF484
 3878 14f6 01       		.sleb128 1
 3879 14f7 14       		.uleb128 0x14
 3880 14f8 71210000 		.4byte	.LASF485
 3881 14fc C000     		.sleb128 64
 3882 14fe 14       		.uleb128 0x14
 3883 14ff 10200000 		.4byte	.LASF486
 3884 1503 02       		.sleb128 2
 3885 1504 14       		.uleb128 0x14
 3886 1505 71180000 		.4byte	.LASF487
 3887 1509 8001     		.sleb128 128
 3888 150b 14       		.uleb128 0x14
 3889 150c 31110000 		.4byte	.LASF488
 3890 1510 C000     		.sleb128 64
 3891 1512 14       		.uleb128 0x14
 3892 1513 CE050000 		.4byte	.LASF489
 3893 1517 80808002 		.sleb128 4194304
 3894 151b 14       		.uleb128 0x14
 3895 151c 2E0E0000 		.4byte	.LASF490
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 156


 3896 1520 8010     		.sleb128 2048
 3897 1522 14       		.uleb128 0x14
 3898 1523 E9030000 		.4byte	.LASF491
 3899 1527 8002     		.sleb128 256
 3900 1529 14       		.uleb128 0x14
 3901 152a 11130000 		.4byte	.LASF492
 3902 152e 8002     		.sleb128 256
 3903 1530 14       		.uleb128 0x14
 3904 1531 D1120000 		.4byte	.LASF493
 3905 1535 8008     		.sleb128 1024
 3906 1537 14       		.uleb128 0x14
 3907 1538 DF130000 		.4byte	.LASF494
 3908 153c 8308     		.sleb128 1027
 3909 153e 14       		.uleb128 0x14
 3910 153f 561F0000 		.4byte	.LASF495
 3911 1543 8308     		.sleb128 1027
 3912 1545 14       		.uleb128 0x14
 3913 1546 E5020000 		.4byte	.LASF496
 3914 154a 8002     		.sleb128 256
 3915 154c 14       		.uleb128 0x14
 3916 154d 4A1E0000 		.4byte	.LASF497
 3917 1551 00       		.sleb128 0
 3918 1552 14       		.uleb128 0x14
 3919 1553 F61E0000 		.4byte	.LASF498
 3920 1557 01       		.sleb128 1
 3921 1558 14       		.uleb128 0x14
 3922 1559 CE0A0000 		.4byte	.LASF499
 3923 155d 02       		.sleb128 2
 3924 155e 14       		.uleb128 0x14
 3925 155f 5D160000 		.4byte	.LASF500
 3926 1563 7E       		.sleb128 -2
 3927 1564 14       		.uleb128 0x14
 3928 1565 9B1E0000 		.4byte	.LASF501
 3929 1569 00       		.sleb128 0
 3930 156a 14       		.uleb128 0x14
 3931 156b 6C180000 		.4byte	.LASF502
 3932 156f 01       		.sleb128 1
 3933 1570 00       		.byte	0
 3934 1571 08       		.uleb128 0x8
 3935 1572 F71D0000 		.4byte	.LASF503
 3936 1576 02       		.byte	0x2
 3937 1577 03       		.byte	0x3
 3938 1578 7B04     		.2byte	0x47b
 3939 157a 99150000 		.4byte	0x1599
 3940 157e 05       		.uleb128 0x5
 3941 157f 63270000 		.4byte	.LASF504
 3942 1583 03       		.byte	0x3
 3943 1584 7C04     		.2byte	0x47c
 3944 1586 E70A0000 		.4byte	0xae7
 3945 158a 00       		.byte	0
 3946 158b 05       		.uleb128 0x5
 3947 158c 68060000 		.4byte	.LASF505
 3948 1590 03       		.byte	0x3
 3949 1591 7D04     		.2byte	0x47d
 3950 1593 E70A0000 		.4byte	0xae7
 3951 1597 01       		.byte	0x1
 3952 1598 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 157


 3953 1599 10       		.uleb128 0x10
 3954 159a F71D0000 		.4byte	.LASF503
 3955 159e 03       		.byte	0x3
 3956 159f 7E04     		.2byte	0x47e
 3957 15a1 71150000 		.4byte	0x1571
 3958 15a5 08       		.uleb128 0x8
 3959 15a6 C41F0000 		.4byte	.LASF263
 3960 15aa 08       		.byte	0x8
 3961 15ab 03       		.byte	0x3
 3962 15ac BA04     		.2byte	0x4ba
 3963 15ae CD150000 		.4byte	0x15cd
 3964 15b2 05       		.uleb128 0x5
 3965 15b3 C41F0000 		.4byte	.LASF263
 3966 15b7 03       		.byte	0x3
 3967 15b8 BB04     		.2byte	0x4bb
 3968 15ba 8E100000 		.4byte	0x108e
 3969 15be 00       		.byte	0
 3970 15bf 05       		.uleb128 0x5
 3971 15c0 A7030000 		.4byte	.LASF506
 3972 15c4 03       		.byte	0x3
 3973 15c5 BC04     		.2byte	0x4bc
 3974 15c7 040B0000 		.4byte	0xb04
 3975 15cb 04       		.byte	0x4
 3976 15cc 00       		.byte	0
 3977 15cd 10       		.uleb128 0x10
 3978 15ce C41F0000 		.4byte	.LASF263
 3979 15d2 03       		.byte	0x3
 3980 15d3 BD04     		.2byte	0x4bd
 3981 15d5 A5150000 		.4byte	0x15a5
 3982 15d9 08       		.uleb128 0x8
 3983 15da A2210000 		.4byte	.LASF507
 3984 15de 14       		.byte	0x14
 3985 15df 03       		.byte	0x3
 3986 15e0 C104     		.2byte	0x4c1
 3987 15e2 28160000 		.4byte	0x1628
 3988 15e6 05       		.uleb128 0x5
 3989 15e7 C41F0000 		.4byte	.LASF263
 3990 15eb 03       		.byte	0x3
 3991 15ec C204     		.2byte	0x4c2
 3992 15ee 8E100000 		.4byte	0x108e
 3993 15f2 00       		.byte	0
 3994 15f3 05       		.uleb128 0x5
 3995 15f4 8B230000 		.4byte	.LASF7
 3996 15f8 03       		.byte	0x3
 3997 15f9 C304     		.2byte	0x4c3
 3998 15fb 1E080000 		.4byte	0x81e
 3999 15ff 04       		.byte	0x4
 4000 1600 05       		.uleb128 0x5
 4001 1601 A7030000 		.4byte	.LASF506
 4002 1605 03       		.byte	0x3
 4003 1606 C404     		.2byte	0x4c4
 4004 1608 040B0000 		.4byte	0xb04
 4005 160c 08       		.byte	0x8
 4006 160d 05       		.uleb128 0x5
 4007 160e D8090000 		.4byte	.LASF322
 4008 1612 03       		.byte	0x3
 4009 1613 C504     		.2byte	0x4c5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 158


 4010 1615 02070000 		.4byte	0x702
 4011 1619 0C       		.byte	0xc
 4012 161a 05       		.uleb128 0x5
 4013 161b E0110000 		.4byte	.LASF508
 4014 161f 03       		.byte	0x3
 4015 1620 C604     		.2byte	0x4c6
 4016 1622 02070000 		.4byte	0x702
 4017 1626 10       		.byte	0x10
 4018 1627 00       		.byte	0
 4019 1628 10       		.uleb128 0x10
 4020 1629 A2210000 		.4byte	.LASF507
 4021 162d 03       		.byte	0x3
 4022 162e C704     		.2byte	0x4c7
 4023 1630 D9150000 		.4byte	0x15d9
 4024 1634 26       		.uleb128 0x26
 4025 1635 1C       		.byte	0x1c
 4026 1636 03       		.byte	0x3
 4027 1637 0D05     		.2byte	0x50d
 4028 1639 99160000 		.4byte	0x1699
 4029 163d 05       		.uleb128 0x5
 4030 163e DE1C0000 		.4byte	.LASF509
 4031 1642 03       		.byte	0x3
 4032 1643 0E05     		.2byte	0x50e
 4033 1645 99160000 		.4byte	0x1699
 4034 1649 00       		.byte	0
 4035 164a 05       		.uleb128 0x5
 4036 164b C41F0000 		.4byte	.LASF263
 4037 164f 03       		.byte	0x3
 4038 1650 0F05     		.2byte	0x50f
 4039 1652 8E100000 		.4byte	0x108e
 4040 1656 08       		.byte	0x8
 4041 1657 05       		.uleb128 0x5
 4042 1658 A7030000 		.4byte	.LASF506
 4043 165c 03       		.byte	0x3
 4044 165d 1005     		.2byte	0x510
 4045 165f 040B0000 		.4byte	0xb04
 4046 1663 0C       		.byte	0xc
 4047 1664 04       		.uleb128 0x4
 4048 1665 69647800 		.ascii	"idx\000"
 4049 1669 03       		.byte	0x3
 4050 166a 1105     		.2byte	0x511
 4051 166c 040B0000 		.4byte	0xb04
 4052 1670 10       		.byte	0x10
 4053 1671 05       		.uleb128 0x5
 4054 1672 46290000 		.4byte	.LASF510
 4055 1676 03       		.byte	0x3
 4056 1677 1205     		.2byte	0x512
 4057 1679 040B0000 		.4byte	0xb04
 4058 167d 14       		.byte	0x14
 4059 167e 05       		.uleb128 0x5
 4060 167f F4040000 		.4byte	.LASF511
 4061 1683 03       		.byte	0x3
 4062 1684 1305     		.2byte	0x513
 4063 1686 E70A0000 		.4byte	0xae7
 4064 168a 18       		.byte	0x18
 4065 168b 05       		.uleb128 0x5
 4066 168c 6F250000 		.4byte	.LASF512
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 159


 4067 1690 03       		.byte	0x3
 4068 1691 1405     		.2byte	0x514
 4069 1693 E70A0000 		.4byte	0xae7
 4070 1697 19       		.byte	0x19
 4071 1698 00       		.byte	0
 4072 1699 19       		.uleb128 0x19
 4073 169a E70A0000 		.4byte	0xae7
 4074 169e A9160000 		.4byte	0x16a9
 4075 16a2 1A       		.uleb128 0x1a
 4076 16a3 09070000 		.4byte	0x709
 4077 16a7 04       		.byte	0x4
 4078 16a8 00       		.byte	0
 4079 16a9 10       		.uleb128 0x10
 4080 16aa 3F0D0000 		.4byte	.LASF513
 4081 16ae 03       		.byte	0x3
 4082 16af 1505     		.2byte	0x515
 4083 16b1 34160000 		.4byte	0x1634
 4084 16b5 03       		.uleb128 0x3
 4085 16b6 C11A0000 		.4byte	.LASF514
 4086 16ba 5401     		.2byte	0x154
 4087 16bc 03       		.byte	0x3
 4088 16bd 1805     		.2byte	0x518
 4089 16bf 23170000 		.4byte	0x1723
 4090 16c3 05       		.uleb128 0x5
 4091 16c4 C0040000 		.4byte	.LASF515
 4092 16c8 03       		.byte	0x3
 4093 16c9 1905     		.2byte	0x519
 4094 16cb F20A0000 		.4byte	0xaf2
 4095 16cf 00       		.byte	0
 4096 16d0 05       		.uleb128 0x5
 4097 16d1 71000000 		.4byte	.LASF516
 4098 16d5 03       		.byte	0x3
 4099 16d6 1A05     		.2byte	0x51a
 4100 16d8 F20A0000 		.4byte	0xaf2
 4101 16dc 02       		.byte	0x2
 4102 16dd 05       		.uleb128 0x5
 4103 16de B3140000 		.4byte	.LASF0
 4104 16e2 03       		.byte	0x3
 4105 16e3 1B05     		.2byte	0x51b
 4106 16e5 23170000 		.4byte	0x1723
 4107 16e9 04       		.byte	0x4
 4108 16ea 06       		.uleb128 0x6
 4109 16eb 0C1E0000 		.4byte	.LASF517
 4110 16ef 03       		.byte	0x3
 4111 16f0 1C05     		.2byte	0x51c
 4112 16f2 B4100000 		.4byte	0x10b4
 4113 16f6 3001     		.2byte	0x130
 4114 16f8 06       		.uleb128 0x6
 4115 16f9 0E160000 		.4byte	.LASF518
 4116 16fd 03       		.byte	0x3
 4117 16fe 1D05     		.2byte	0x51d
 4118 1700 E70A0000 		.4byte	0xae7
 4119 1704 5001     		.2byte	0x150
 4120 1706 06       		.uleb128 0x6
 4121 1707 C6260000 		.4byte	.LASF519
 4122 170b 03       		.byte	0x3
 4123 170c 1E05     		.2byte	0x51e
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 160


 4124 170e E70A0000 		.4byte	0xae7
 4125 1712 5101     		.2byte	0x151
 4126 1714 06       		.uleb128 0x6
 4127 1715 7F0E0000 		.4byte	.LASF520
 4128 1719 03       		.byte	0x3
 4129 171a 1F05     		.2byte	0x51f
 4130 171c E70A0000 		.4byte	0xae7
 4131 1720 5201     		.2byte	0x152
 4132 1722 00       		.byte	0
 4133 1723 19       		.uleb128 0x19
 4134 1724 E70A0000 		.4byte	0xae7
 4135 1728 34170000 		.4byte	0x1734
 4136 172c 27       		.uleb128 0x27
 4137 172d 09070000 		.4byte	0x709
 4138 1731 2B01     		.2byte	0x12b
 4139 1733 00       		.byte	0
 4140 1734 10       		.uleb128 0x10
 4141 1735 C11A0000 		.4byte	.LASF514
 4142 1739 03       		.byte	0x3
 4143 173a 2005     		.2byte	0x520
 4144 173c B5160000 		.4byte	0x16b5
 4145 1740 10       		.uleb128 0x10
 4146 1741 9D230000 		.4byte	.LASF521
 4147 1745 03       		.byte	0x3
 4148 1746 3D05     		.2byte	0x53d
 4149 1748 4C170000 		.4byte	0x174c
 4150 174c 08       		.uleb128 0x8
 4151 174d 9D230000 		.4byte	.LASF521
 4152 1751 34       		.byte	0x34
 4153 1752 03       		.byte	0x3
 4154 1753 4A05     		.2byte	0x54a
 4155 1755 9B170000 		.4byte	0x179b
 4156 1759 05       		.uleb128 0x5
 4157 175a 81010000 		.4byte	.LASF319
 4158 175e 03       		.byte	0x3
 4159 175f 4B05     		.2byte	0x54b
 4160 1761 9B170000 		.4byte	0x179b
 4161 1765 00       		.byte	0
 4162 1766 05       		.uleb128 0x5
 4163 1767 880F0000 		.4byte	.LASF522
 4164 176b 03       		.byte	0x3
 4165 176c 4C05     		.2byte	0x54c
 4166 176e 94100000 		.4byte	0x1094
 4167 1772 04       		.byte	0x4
 4168 1773 05       		.uleb128 0x5
 4169 1774 A7090000 		.4byte	.LASF523
 4170 1778 03       		.byte	0x3
 4171 1779 4D05     		.2byte	0x54d
 4172 177b 94100000 		.4byte	0x1094
 4173 177f 18       		.byte	0x18
 4174 1780 05       		.uleb128 0x5
 4175 1781 970D0000 		.4byte	.LASF268
 4176 1785 03       		.byte	0x3
 4177 1786 4E05     		.2byte	0x54e
 4178 1788 A1170000 		.4byte	0x17a1
 4179 178c 2C       		.byte	0x2c
 4180 178d 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 161


 4181 178e 90210000 		.4byte	.LASF524
 4182 1792 03       		.byte	0x3
 4183 1793 4F05     		.2byte	0x54f
 4184 1795 02070000 		.4byte	0x702
 4185 1799 30       		.byte	0x30
 4186 179a 00       		.byte	0
 4187 179b 09       		.uleb128 0x9
 4188 179c 04       		.byte	0x4
 4189 179d 40170000 		.4byte	0x1740
 4190 17a1 09       		.uleb128 0x9
 4191 17a2 04       		.byte	0x4
 4192 17a3 CA100000 		.4byte	0x10ca
 4193 17a7 10       		.uleb128 0x10
 4194 17a8 90230000 		.4byte	.LASF525
 4195 17ac 03       		.byte	0x3
 4196 17ad 5405     		.2byte	0x554
 4197 17af B3170000 		.4byte	0x17b3
 4198 17b3 08       		.uleb128 0x8
 4199 17b4 90230000 		.4byte	.LASF525
 4200 17b8 0C       		.byte	0xc
 4201 17b9 03       		.byte	0x3
 4202 17ba 5805     		.2byte	0x558
 4203 17bc E7170000 		.4byte	0x17e7
 4204 17c0 04       		.uleb128 0x4
 4205 17c1 636D00   		.ascii	"cm\000"
 4206 17c4 03       		.byte	0x3
 4207 17c5 5905     		.2byte	0x559
 4208 17c7 34070000 		.4byte	0x734
 4209 17cb 00       		.byte	0
 4210 17cc 05       		.uleb128 0x5
 4211 17cd 831B0000 		.4byte	.LASF526
 4212 17d1 03       		.byte	0x3
 4213 17d2 5A05     		.2byte	0x55a
 4214 17d4 9B170000 		.4byte	0x179b
 4215 17d8 04       		.byte	0x4
 4216 17d9 05       		.uleb128 0x5
 4217 17da 5A290000 		.4byte	.LASF527
 4218 17de 03       		.byte	0x3
 4219 17df 5B05     		.2byte	0x55b
 4220 17e1 DC0A0000 		.4byte	0xadc
 4221 17e5 08       		.byte	0x8
 4222 17e6 00       		.byte	0
 4223 17e7 10       		.uleb128 0x10
 4224 17e8 1E120000 		.4byte	.LASF528
 4225 17ec 03       		.byte	0x3
 4226 17ed 6205     		.2byte	0x562
 4227 17ef F3170000 		.4byte	0x17f3
 4228 17f3 08       		.uleb128 0x8
 4229 17f4 1E120000 		.4byte	.LASF528
 4230 17f8 64       		.byte	0x64
 4231 17f9 03       		.byte	0x3
 4232 17fa 6F05     		.2byte	0x56f
 4233 17fc 69180000 		.4byte	0x1869
 4234 1800 05       		.uleb128 0x5
 4235 1801 81010000 		.4byte	.LASF319
 4236 1805 03       		.byte	0x3
 4237 1806 7005     		.2byte	0x570
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 162


 4238 1808 69180000 		.4byte	0x1869
 4239 180c 00       		.byte	0
 4240 180d 05       		.uleb128 0x5
 4241 180e 880F0000 		.4byte	.LASF522
 4242 1812 03       		.byte	0x3
 4243 1813 7105     		.2byte	0x571
 4244 1815 94100000 		.4byte	0x1094
 4245 1819 04       		.byte	0x4
 4246 181a 05       		.uleb128 0x5
 4247 181b 52210000 		.4byte	.LASF529
 4248 181f 03       		.byte	0x3
 4249 1820 7405     		.2byte	0x574
 4250 1822 B4100000 		.4byte	0x10b4
 4251 1826 18       		.byte	0x18
 4252 1827 05       		.uleb128 0x5
 4253 1828 47140000 		.4byte	.LASF530
 4254 182c 03       		.byte	0x3
 4255 182d 7505     		.2byte	0x575
 4256 182f B4100000 		.4byte	0x10b4
 4257 1833 38       		.byte	0x38
 4258 1834 05       		.uleb128 0x5
 4259 1835 FB120000 		.4byte	.LASF531
 4260 1839 03       		.byte	0x3
 4261 183a 7605     		.2byte	0x576
 4262 183c E70A0000 		.4byte	0xae7
 4263 1840 58       		.byte	0x58
 4264 1841 05       		.uleb128 0x5
 4265 1842 D0010000 		.4byte	.LASF532
 4266 1846 03       		.byte	0x3
 4267 1847 7705     		.2byte	0x577
 4268 1849 E70A0000 		.4byte	0xae7
 4269 184d 59       		.byte	0x59
 4270 184e 05       		.uleb128 0x5
 4271 184f 04180000 		.4byte	.LASF533
 4272 1853 03       		.byte	0x3
 4273 1854 7805     		.2byte	0x578
 4274 1856 6F180000 		.4byte	0x186f
 4275 185a 5C       		.byte	0x5c
 4276 185b 05       		.uleb128 0x5
 4277 185c A8280000 		.4byte	.LASF534
 4278 1860 03       		.byte	0x3
 4279 1861 7905     		.2byte	0x579
 4280 1863 02070000 		.4byte	0x702
 4281 1867 60       		.byte	0x60
 4282 1868 00       		.byte	0
 4283 1869 09       		.uleb128 0x9
 4284 186a 04       		.byte	0x4
 4285 186b E7170000 		.4byte	0x17e7
 4286 186f 09       		.uleb128 0x9
 4287 1870 04       		.byte	0x4
 4288 1871 DB100000 		.4byte	0x10db
 4289 1875 10       		.uleb128 0x10
 4290 1876 CF2B0000 		.4byte	.LASF535
 4291 187a 03       		.byte	0x3
 4292 187b 7D05     		.2byte	0x57d
 4293 187d 81180000 		.4byte	0x1881
 4294 1881 08       		.uleb128 0x8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 163


 4295 1882 CF2B0000 		.4byte	.LASF535
 4296 1886 08       		.byte	0x8
 4297 1887 03       		.byte	0x3
 4298 1888 8005     		.2byte	0x580
 4299 188a A9180000 		.4byte	0x18a9
 4300 188e 05       		.uleb128 0x5
 4301 188f 3D1A0000 		.4byte	.LASF536
 4302 1893 03       		.byte	0x3
 4303 1894 8105     		.2byte	0x581
 4304 1896 F5060000 		.4byte	0x6f5
 4305 189a 00       		.byte	0
 4306 189b 05       		.uleb128 0x5
 4307 189c D8090000 		.4byte	.LASF322
 4308 18a0 03       		.byte	0x3
 4309 18a1 8205     		.2byte	0x582
 4310 18a3 02070000 		.4byte	0x702
 4311 18a7 04       		.byte	0x4
 4312 18a8 00       		.byte	0
 4313 18a9 10       		.uleb128 0x10
 4314 18aa 1F170000 		.4byte	.LASF537
 4315 18ae 03       		.byte	0x3
 4316 18af 8705     		.2byte	0x587
 4317 18b1 B5180000 		.4byte	0x18b5
 4318 18b5 08       		.uleb128 0x8
 4319 18b6 1F170000 		.4byte	.LASF537
 4320 18ba 1C       		.byte	0x1c
 4321 18bb 03       		.byte	0x3
 4322 18bc 8F05     		.2byte	0x58f
 4323 18be F6180000 		.4byte	0x18f6
 4324 18c2 04       		.uleb128 0x4
 4325 18c3 636D00   		.ascii	"cm\000"
 4326 18c6 03       		.byte	0x3
 4327 18c7 9005     		.2byte	0x590
 4328 18c9 34070000 		.4byte	0x734
 4329 18cd 00       		.byte	0
 4330 18ce 05       		.uleb128 0x5
 4331 18cf 21130000 		.4byte	.LASF538
 4332 18d3 03       		.byte	0x3
 4333 18d4 9105     		.2byte	0x591
 4334 18d6 69180000 		.4byte	0x1869
 4335 18da 04       		.byte	0x4
 4336 18db 05       		.uleb128 0x5
 4337 18dc 4B200000 		.4byte	.LASF539
 4338 18e0 03       		.byte	0x3
 4339 18e1 9205     		.2byte	0x592
 4340 18e3 DC0A0000 		.4byte	0xadc
 4341 18e7 08       		.byte	0x8
 4342 18e8 05       		.uleb128 0x5
 4343 18e9 AC250000 		.4byte	.LASF540
 4344 18ed 03       		.byte	0x3
 4345 18ee 9305     		.2byte	0x593
 4346 18f0 F6180000 		.4byte	0x18f6
 4347 18f4 0C       		.byte	0xc
 4348 18f5 00       		.byte	0
 4349 18f6 19       		.uleb128 0x19
 4350 18f7 75180000 		.4byte	0x1875
 4351 18fb 06190000 		.4byte	0x1906
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 164


 4352 18ff 1A       		.uleb128 0x1a
 4353 1900 09070000 		.4byte	0x709
 4354 1904 01       		.byte	0x1
 4355 1905 00       		.byte	0
 4356 1906 19       		.uleb128 0x19
 4357 1907 C4100000 		.4byte	0x10c4
 4358 190b 16190000 		.4byte	0x1916
 4359 190f 1A       		.uleb128 0x1a
 4360 1910 09070000 		.4byte	0x709
 4361 1914 0A       		.byte	0xa
 4362 1915 00       		.byte	0
 4363 1916 09       		.uleb128 0x9
 4364 1917 04       		.byte	0x4
 4365 1918 A9180000 		.4byte	0x18a9
 4366 191c 09       		.uleb128 0x9
 4367 191d 04       		.byte	0x4
 4368 191e A7170000 		.4byte	0x17a7
 4369 1922 08       		.uleb128 0x8
 4370 1923 010A0000 		.4byte	.LASF541
 4371 1927 B4       		.byte	0xb4
 4372 1928 03       		.byte	0x3
 4373 1929 F705     		.2byte	0x5f7
 4374 192b CC190000 		.4byte	0x19cc
 4375 192f 05       		.uleb128 0x5
 4376 1930 8F0A0000 		.4byte	.LASF542
 4377 1934 03       		.byte	0x3
 4378 1935 F805     		.2byte	0x5f8
 4379 1937 B4100000 		.4byte	0x10b4
 4380 193b 00       		.byte	0
 4381 193c 05       		.uleb128 0x5
 4382 193d 7A170000 		.4byte	.LASF543
 4383 1941 03       		.byte	0x3
 4384 1942 F905     		.2byte	0x5f9
 4385 1944 B4100000 		.4byte	0x10b4
 4386 1948 20       		.byte	0x20
 4387 1949 05       		.uleb128 0x5
 4388 194a 66230000 		.4byte	.LASF544
 4389 194e 03       		.byte	0x3
 4390 194f FA05     		.2byte	0x5fa
 4391 1951 B4100000 		.4byte	0x10b4
 4392 1955 40       		.byte	0x40
 4393 1956 05       		.uleb128 0x5
 4394 1957 C6190000 		.4byte	.LASF545
 4395 195b 03       		.byte	0x3
 4396 195c FB05     		.2byte	0x5fb
 4397 195e B4100000 		.4byte	0x10b4
 4398 1962 60       		.byte	0x60
 4399 1963 05       		.uleb128 0x5
 4400 1964 7A1D0000 		.4byte	.LASF546
 4401 1968 03       		.byte	0x3
 4402 1969 FC05     		.2byte	0x5fc
 4403 196b CC190000 		.4byte	0x19cc
 4404 196f 80       		.byte	0x80
 4405 1970 05       		.uleb128 0x5
 4406 1971 24160000 		.4byte	.LASF547
 4407 1975 03       		.byte	0x3
 4408 1976 FD05     		.2byte	0x5fd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 165


 4409 1978 CC190000 		.4byte	0x19cc
 4410 197c 90       		.byte	0x90
 4411 197d 05       		.uleb128 0x5
 4412 197e C2110000 		.4byte	.LASF548
 4413 1982 03       		.byte	0x3
 4414 1983 0406     		.2byte	0x604
 4415 1985 040B0000 		.4byte	0xb04
 4416 1989 A0       		.byte	0xa0
 4417 198a 05       		.uleb128 0x5
 4418 198b 11210000 		.4byte	.LASF549
 4419 198f 03       		.byte	0x3
 4420 1990 0506     		.2byte	0x605
 4421 1992 040B0000 		.4byte	0xb04
 4422 1996 A4       		.byte	0xa4
 4423 1997 05       		.uleb128 0x5
 4424 1998 3C0E0000 		.4byte	.LASF550
 4425 199c 03       		.byte	0x3
 4426 199d 1206     		.2byte	0x612
 4427 199f 040B0000 		.4byte	0xb04
 4428 19a3 A8       		.byte	0xa8
 4429 19a4 05       		.uleb128 0x5
 4430 19a5 37230000 		.4byte	.LASF551
 4431 19a9 03       		.byte	0x3
 4432 19aa 1306     		.2byte	0x613
 4433 19ac 040B0000 		.4byte	0xb04
 4434 19b0 AC       		.byte	0xac
 4435 19b1 05       		.uleb128 0x5
 4436 19b2 550A0000 		.4byte	.LASF552
 4437 19b6 03       		.byte	0x3
 4438 19b7 1406     		.2byte	0x614
 4439 19b9 E70A0000 		.4byte	0xae7
 4440 19bd B0       		.byte	0xb0
 4441 19be 05       		.uleb128 0x5
 4442 19bf D8020000 		.4byte	.LASF553
 4443 19c3 03       		.byte	0x3
 4444 19c4 1506     		.2byte	0x615
 4445 19c6 E70A0000 		.4byte	0xae7
 4446 19ca B1       		.byte	0xb1
 4447 19cb 00       		.byte	0
 4448 19cc 19       		.uleb128 0x19
 4449 19cd E70A0000 		.4byte	0xae7
 4450 19d1 DC190000 		.4byte	0x19dc
 4451 19d5 1A       		.uleb128 0x1a
 4452 19d6 09070000 		.4byte	0x709
 4453 19da 0F       		.byte	0xf
 4454 19db 00       		.byte	0
 4455 19dc 10       		.uleb128 0x10
 4456 19dd 010A0000 		.4byte	.LASF541
 4457 19e1 03       		.byte	0x3
 4458 19e2 1606     		.2byte	0x616
 4459 19e4 22190000 		.4byte	0x1922
 4460 19e8 09       		.uleb128 0x9
 4461 19e9 04       		.byte	0x4
 4462 19ea 7D020000 		.4byte	0x27d
 4463 19ee 09       		.uleb128 0x9
 4464 19ef 04       		.byte	0x4
 4465 19f0 28160000 		.4byte	0x1628
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 166


 4466 19f4 09       		.uleb128 0x9
 4467 19f5 04       		.byte	0x4
 4468 19f6 34170000 		.4byte	0x1734
 4469 19fa 08       		.uleb128 0x8
 4470 19fb 0A0B0000 		.4byte	.LASF554
 4471 19ff 10       		.byte	0x10
 4472 1a00 03       		.byte	0x3
 4473 1a01 A507     		.2byte	0x7a5
 4474 1a03 A41A0000 		.4byte	0x1aa4
 4475 1a07 05       		.uleb128 0x5
 4476 1a08 AC270000 		.4byte	.LASF555
 4477 1a0c 03       		.byte	0x3
 4478 1a0d A607     		.2byte	0x7a6
 4479 1a0f F20A0000 		.4byte	0xaf2
 4480 1a13 00       		.byte	0
 4481 1a14 05       		.uleb128 0x5
 4482 1a15 35290000 		.4byte	.LASF556
 4483 1a19 03       		.byte	0x3
 4484 1a1a A707     		.2byte	0x7a7
 4485 1a1c F20A0000 		.4byte	0xaf2
 4486 1a20 02       		.byte	0x2
 4487 1a21 05       		.uleb128 0x5
 4488 1a22 BA080000 		.4byte	.LASF557
 4489 1a26 03       		.byte	0x3
 4490 1a27 A807     		.2byte	0x7a8
 4491 1a29 F20A0000 		.4byte	0xaf2
 4492 1a2d 04       		.byte	0x4
 4493 1a2e 05       		.uleb128 0x5
 4494 1a2f FC280000 		.4byte	.LASF558
 4495 1a33 03       		.byte	0x3
 4496 1a34 A907     		.2byte	0x7a9
 4497 1a36 F20A0000 		.4byte	0xaf2
 4498 1a3a 06       		.byte	0x6
 4499 1a3b 05       		.uleb128 0x5
 4500 1a3c 87080000 		.4byte	.LASF559
 4501 1a40 03       		.byte	0x3
 4502 1a41 AA07     		.2byte	0x7aa
 4503 1a43 E70A0000 		.4byte	0xae7
 4504 1a47 08       		.byte	0x8
 4505 1a48 05       		.uleb128 0x5
 4506 1a49 60180000 		.4byte	.LASF560
 4507 1a4d 03       		.byte	0x3
 4508 1a4e AB07     		.2byte	0x7ab
 4509 1a50 E70A0000 		.4byte	0xae7
 4510 1a54 09       		.byte	0x9
 4511 1a55 05       		.uleb128 0x5
 4512 1a56 CA020000 		.4byte	.LASF561
 4513 1a5a 03       		.byte	0x3
 4514 1a5b AC07     		.2byte	0x7ac
 4515 1a5d E70A0000 		.4byte	0xae7
 4516 1a61 0A       		.byte	0xa
 4517 1a62 04       		.uleb128 0x4
 4518 1a63 6B656100 		.ascii	"kea\000"
 4519 1a67 03       		.byte	0x3
 4520 1a68 AD07     		.2byte	0x7ad
 4521 1a6a E70A0000 		.4byte	0xae7
 4522 1a6e 0B       		.byte	0xb
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 167


 4523 1a6f 05       		.uleb128 0x5
 4524 1a70 5F200000 		.4byte	.LASF562
 4525 1a74 03       		.byte	0x3
 4526 1a75 AE07     		.2byte	0x7ae
 4527 1a77 E70A0000 		.4byte	0xae7
 4528 1a7b 0C       		.byte	0xc
 4529 1a7c 05       		.uleb128 0x5
 4530 1a7d 401E0000 		.4byte	.LASF563
 4531 1a81 03       		.byte	0x3
 4532 1a82 AF07     		.2byte	0x7af
 4533 1a84 E70A0000 		.4byte	0xae7
 4534 1a88 0D       		.byte	0xd
 4535 1a89 05       		.uleb128 0x5
 4536 1a8a F2240000 		.4byte	.LASF564
 4537 1a8e 03       		.byte	0x3
 4538 1a8f B007     		.2byte	0x7b0
 4539 1a91 E70A0000 		.4byte	0xae7
 4540 1a95 0E       		.byte	0xe
 4541 1a96 05       		.uleb128 0x5
 4542 1a97 30220000 		.4byte	.LASF565
 4543 1a9b 03       		.byte	0x3
 4544 1a9c B107     		.2byte	0x7b1
 4545 1a9e E70A0000 		.4byte	0xae7
 4546 1aa2 0F       		.byte	0xf
 4547 1aa3 00       		.byte	0
 4548 1aa4 10       		.uleb128 0x10
 4549 1aa5 0A0B0000 		.4byte	.LASF554
 4550 1aa9 03       		.byte	0x3
 4551 1aaa B207     		.2byte	0x7b2
 4552 1aac FA190000 		.4byte	0x19fa
 4553 1ab0 25       		.uleb128 0x25
 4554 1ab1 FD190000 		.4byte	.LASF566
 4555 1ab5 01       		.byte	0x1
 4556 1ab6 03       		.byte	0x3
 4557 1ab7 B907     		.2byte	0x7b9
 4558 1ab9 F41A0000 		.4byte	0x1af4
 4559 1abd 14       		.uleb128 0x14
 4560 1abe D71C0000 		.4byte	.LASF567
 4561 1ac2 00       		.sleb128 0
 4562 1ac3 14       		.uleb128 0x14
 4563 1ac4 0C010000 		.4byte	.LASF568
 4564 1ac8 01       		.sleb128 1
 4565 1ac9 14       		.uleb128 0x14
 4566 1aca 19280000 		.4byte	.LASF569
 4567 1ace 02       		.sleb128 2
 4568 1acf 14       		.uleb128 0x14
 4569 1ad0 B80A0000 		.4byte	.LASF570
 4570 1ad4 03       		.sleb128 3
 4571 1ad5 14       		.uleb128 0x14
 4572 1ad6 74260000 		.4byte	.LASF571
 4573 1ada 04       		.sleb128 4
 4574 1adb 14       		.uleb128 0x14
 4575 1adc C30A0000 		.4byte	.LASF572
 4576 1ae0 05       		.sleb128 5
 4577 1ae1 14       		.uleb128 0x14
 4578 1ae2 1D0C0000 		.4byte	.LASF573
 4579 1ae6 06       		.sleb128 6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 168


 4580 1ae7 14       		.uleb128 0x14
 4581 1ae8 5B2C0000 		.4byte	.LASF574
 4582 1aec 07       		.sleb128 7
 4583 1aed 14       		.uleb128 0x14
 4584 1aee 3E0C0000 		.4byte	.LASF575
 4585 1af2 08       		.sleb128 8
 4586 1af3 00       		.byte	0
 4587 1af4 08       		.uleb128 0x8
 4588 1af5 D5270000 		.4byte	.LASF576
 4589 1af9 01       		.byte	0x1
 4590 1afa 03       		.byte	0x3
 4591 1afb FB07     		.2byte	0x7fb
 4592 1afd 0F1B0000 		.4byte	0x1b0f
 4593 1b01 05       		.uleb128 0x5
 4594 1b02 87090000 		.4byte	.LASF577
 4595 1b06 03       		.byte	0x3
 4596 1b07 1408     		.2byte	0x814
 4597 1b09 E70A0000 		.4byte	0xae7
 4598 1b0d 00       		.byte	0
 4599 1b0e 00       		.byte	0
 4600 1b0f 10       		.uleb128 0x10
 4601 1b10 D5270000 		.4byte	.LASF576
 4602 1b14 03       		.byte	0x3
 4603 1b15 1508     		.2byte	0x815
 4604 1b17 F41A0000 		.4byte	0x1af4
 4605 1b1b 08       		.uleb128 0x8
 4606 1b1c 77230000 		.4byte	.LASF578
 4607 1b20 34       		.byte	0x34
 4608 1b21 03       		.byte	0x3
 4609 1b22 2908     		.2byte	0x829
 4610 1b24 431B0000 		.4byte	0x1b43
 4611 1b28 04       		.uleb128 0x4
 4612 1b29 73686100 		.ascii	"sha\000"
 4613 1b2d 03       		.byte	0x3
 4614 1b2e 2D08     		.2byte	0x82d
 4615 1b30 94100000 		.4byte	0x1094
 4616 1b34 00       		.byte	0
 4617 1b35 05       		.uleb128 0x5
 4618 1b36 06100000 		.4byte	.LASF343
 4619 1b3a 03       		.byte	0x3
 4620 1b3b 2F08     		.2byte	0x82f
 4621 1b3d B4100000 		.4byte	0x10b4
 4622 1b41 14       		.byte	0x14
 4623 1b42 00       		.byte	0
 4624 1b43 10       		.uleb128 0x10
 4625 1b44 77230000 		.4byte	.LASF578
 4626 1b48 03       		.byte	0x3
 4627 1b49 3708     		.2byte	0x837
 4628 1b4b 1B1B0000 		.4byte	0x1b1b
 4629 1b4f 19       		.uleb128 0x19
 4630 1b50 E70A0000 		.4byte	0xae7
 4631 1b54 5F1B0000 		.4byte	0x1b5f
 4632 1b58 1A       		.uleb128 0x1a
 4633 1b59 09070000 		.4byte	0x709
 4634 1b5d 2F       		.byte	0x2f
 4635 1b5e 00       		.byte	0
 4636 1b5f 10       		.uleb128 0x10
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 169


 4637 1b60 E50E0000 		.4byte	.LASF579
 4638 1b64 03       		.byte	0x3
 4639 1b65 6808     		.2byte	0x868
 4640 1b67 6B1B0000 		.4byte	0x1b6b
 4641 1b6b 09       		.uleb128 0x9
 4642 1b6c 04       		.byte	0x4
 4643 1b6d 711B0000 		.4byte	0x1b71
 4644 1b71 11       		.uleb128 0x11
 4645 1b72 02070000 		.4byte	0x702
 4646 1b76 991B0000 		.4byte	0x1b99
 4647 1b7a 12       		.uleb128 0x12
 4648 1b7b A6090000 		.4byte	0x9a6
 4649 1b7f 12       		.uleb128 0x12
 4650 1b80 8E100000 		.4byte	0x108e
 4651 1b84 12       		.uleb128 0x12
 4652 1b85 991B0000 		.4byte	0x1b99
 4653 1b89 12       		.uleb128 0x12
 4654 1b8a 040B0000 		.4byte	0xb04
 4655 1b8e 12       		.uleb128 0x12
 4656 1b8f 02070000 		.4byte	0x702
 4657 1b93 12       		.uleb128 0x12
 4658 1b94 02070000 		.4byte	0x702
 4659 1b98 00       		.byte	0
 4660 1b99 09       		.uleb128 0x9
 4661 1b9a 04       		.byte	0x4
 4662 1b9b 9F1B0000 		.4byte	0x1b9f
 4663 1b9f 16       		.uleb128 0x16
 4664 1ba0 E70A0000 		.4byte	0xae7
 4665 1ba4 08       		.uleb128 0x8
 4666 1ba5 3C080000 		.4byte	.LASF580
 4667 1ba9 60       		.byte	0x60
 4668 1baa 03       		.byte	0x3
 4669 1bab 9108     		.2byte	0x891
 4670 1bad 5B1C0000 		.4byte	0x1c5b
 4671 1bb1 05       		.uleb128 0x5
 4672 1bb2 A01A0000 		.4byte	.LASF581
 4673 1bb6 03       		.byte	0x3
 4674 1bb7 9208     		.2byte	0x892
 4675 1bb9 A9160000 		.4byte	0x16a9
 4676 1bbd 00       		.byte	0
 4677 1bbe 05       		.uleb128 0x5
 4678 1bbf 9D080000 		.4byte	.LASF582
 4679 1bc3 03       		.byte	0x3
 4680 1bc4 9308     		.2byte	0x893
 4681 1bc6 A9160000 		.4byte	0x16a9
 4682 1bca 1C       		.byte	0x1c
 4683 1bcb 05       		.uleb128 0x5
 4684 1bcc 92170000 		.4byte	.LASF583
 4685 1bd0 03       		.byte	0x3
 4686 1bd1 9408     		.2byte	0x894
 4687 1bd3 CD150000 		.4byte	0x15cd
 4688 1bd7 38       		.byte	0x38
 4689 1bd8 05       		.uleb128 0x5
 4690 1bd9 CF260000 		.4byte	.LASF584
 4691 1bdd 03       		.byte	0x3
 4692 1bde 9508     		.2byte	0x895
 4693 1be0 CD150000 		.4byte	0x15cd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 170


 4694 1be4 40       		.byte	0x40
 4695 1be5 05       		.uleb128 0x5
 4696 1be6 98050000 		.4byte	.LASF585
 4697 1bea 03       		.byte	0x3
 4698 1beb 9608     		.2byte	0x896
 4699 1bed 02070000 		.4byte	0x702
 4700 1bf1 48       		.byte	0x48
 4701 1bf2 05       		.uleb128 0x5
 4702 1bf3 800F0000 		.4byte	.LASF586
 4703 1bf7 03       		.byte	0x3
 4704 1bf8 9808     		.2byte	0x898
 4705 1bfa 02070000 		.4byte	0x702
 4706 1bfe 4C       		.byte	0x4c
 4707 1bff 05       		.uleb128 0x5
 4708 1c00 9E0D0000 		.4byte	.LASF587
 4709 1c04 03       		.byte	0x3
 4710 1c05 9A08     		.2byte	0x89a
 4711 1c07 E70A0000 		.4byte	0xae7
 4712 1c0b 50       		.byte	0x50
 4713 1c0c 05       		.uleb128 0x5
 4714 1c0d 160F0000 		.4byte	.LASF588
 4715 1c11 03       		.byte	0x3
 4716 1c12 9B08     		.2byte	0x89b
 4717 1c14 E70A0000 		.4byte	0xae7
 4718 1c18 51       		.byte	0x51
 4719 1c19 05       		.uleb128 0x5
 4720 1c1a AB240000 		.4byte	.LASF589
 4721 1c1e 03       		.byte	0x3
 4722 1c1f 9C08     		.2byte	0x89c
 4723 1c21 E70A0000 		.4byte	0xae7
 4724 1c25 52       		.byte	0x52
 4725 1c26 05       		.uleb128 0x5
 4726 1c27 B3280000 		.4byte	.LASF590
 4727 1c2b 03       		.byte	0x3
 4728 1c2c 9D08     		.2byte	0x89d
 4729 1c2e E70A0000 		.4byte	0xae7
 4730 1c32 53       		.byte	0x53
 4731 1c33 05       		.uleb128 0x5
 4732 1c34 D7100000 		.4byte	.LASF45
 4733 1c38 03       		.byte	0x3
 4734 1c39 A508     		.2byte	0x8a5
 4735 1c3b EE190000 		.4byte	0x19ee
 4736 1c3f 54       		.byte	0x54
 4737 1c40 04       		.uleb128 0x4
 4738 1c41 6B657900 		.ascii	"key\000"
 4739 1c45 03       		.byte	0x3
 4740 1c46 A608     		.2byte	0x8a6
 4741 1c48 EE190000 		.4byte	0x19ee
 4742 1c4c 58       		.byte	0x58
 4743 1c4d 05       		.uleb128 0x5
 4744 1c4e 912C0000 		.4byte	.LASF46
 4745 1c52 03       		.byte	0x3
 4746 1c53 A708     		.2byte	0x8a7
 4747 1c55 EE190000 		.4byte	0x19ee
 4748 1c59 5C       		.byte	0x5c
 4749 1c5a 00       		.byte	0
 4750 1c5b 10       		.uleb128 0x10
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 171


 4751 1c5c 3C080000 		.4byte	.LASF580
 4752 1c60 03       		.byte	0x3
 4753 1c61 B808     		.2byte	0x8b8
 4754 1c63 A41B0000 		.4byte	0x1ba4
 4755 1c67 08       		.uleb128 0x8
 4756 1c68 770E0000 		.4byte	.LASF591
 4757 1c6c 10       		.byte	0x10
 4758 1c6d 03       		.byte	0x3
 4759 1c6e BA08     		.2byte	0x8ba
 4760 1c70 471F0000 		.4byte	0x1f47
 4761 1c74 28       		.uleb128 0x28
 4762 1c75 D80D0000 		.4byte	.LASF54
 4763 1c79 03       		.byte	0x3
 4764 1c7a C208     		.2byte	0x8c2
 4765 1c7c F20A0000 		.4byte	0xaf2
 4766 1c80 02       		.byte	0x2
 4767 1c81 02       		.byte	0x2
 4768 1c82 0E       		.byte	0xe
 4769 1c83 00       		.byte	0
 4770 1c84 28       		.uleb128 0x28
 4771 1c85 101C0000 		.4byte	.LASF52
 4772 1c89 03       		.byte	0x3
 4773 1c8a C308     		.2byte	0x8c3
 4774 1c8c F20A0000 		.4byte	0xaf2
 4775 1c90 02       		.byte	0x2
 4776 1c91 01       		.byte	0x1
 4777 1c92 0D       		.byte	0xd
 4778 1c93 00       		.byte	0
 4779 1c94 28       		.uleb128 0x28
 4780 1c95 AD110000 		.4byte	.LASF53
 4781 1c99 03       		.byte	0x3
 4782 1c9a C408     		.2byte	0x8c4
 4783 1c9c F20A0000 		.4byte	0xaf2
 4784 1ca0 02       		.byte	0x2
 4785 1ca1 01       		.byte	0x1
 4786 1ca2 0C       		.byte	0xc
 4787 1ca3 00       		.byte	0
 4788 1ca4 28       		.uleb128 0x28
 4789 1ca5 732B0000 		.4byte	.LASF39
 4790 1ca9 03       		.byte	0x3
 4791 1caa C508     		.2byte	0x8c5
 4792 1cac F20A0000 		.4byte	0xaf2
 4793 1cb0 02       		.byte	0x2
 4794 1cb1 01       		.byte	0x1
 4795 1cb2 0B       		.byte	0xb
 4796 1cb3 00       		.byte	0
 4797 1cb4 28       		.uleb128 0x28
 4798 1cb5 28120000 		.4byte	.LASF48
 4799 1cb9 03       		.byte	0x3
 4800 1cba C608     		.2byte	0x8c6
 4801 1cbc F20A0000 		.4byte	0xaf2
 4802 1cc0 02       		.byte	0x2
 4803 1cc1 01       		.byte	0x1
 4804 1cc2 0A       		.byte	0xa
 4805 1cc3 00       		.byte	0
 4806 1cc4 28       		.uleb128 0x28
 4807 1cc5 3F180000 		.4byte	.LASF49
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 172


 4808 1cc9 03       		.byte	0x3
 4809 1cca C708     		.2byte	0x8c7
 4810 1ccc F20A0000 		.4byte	0xaf2
 4811 1cd0 02       		.byte	0x2
 4812 1cd1 01       		.byte	0x1
 4813 1cd2 09       		.byte	0x9
 4814 1cd3 00       		.byte	0
 4815 1cd4 28       		.uleb128 0x28
 4816 1cd5 EA010000 		.4byte	.LASF50
 4817 1cd9 03       		.byte	0x3
 4818 1cda C808     		.2byte	0x8c8
 4819 1cdc F20A0000 		.4byte	0xaf2
 4820 1ce0 02       		.byte	0x2
 4821 1ce1 01       		.byte	0x1
 4822 1ce2 08       		.byte	0x8
 4823 1ce3 00       		.byte	0
 4824 1ce4 28       		.uleb128 0x28
 4825 1ce5 B2100000 		.4byte	.LASF51
 4826 1ce9 03       		.byte	0x3
 4827 1cea C908     		.2byte	0x8c9
 4828 1cec F20A0000 		.4byte	0xaf2
 4829 1cf0 02       		.byte	0x2
 4830 1cf1 01       		.byte	0x1
 4831 1cf2 07       		.byte	0x7
 4832 1cf3 00       		.byte	0
 4833 1cf4 28       		.uleb128 0x28
 4834 1cf5 05120000 		.4byte	.LASF40
 4835 1cf9 03       		.byte	0x3
 4836 1cfa CA08     		.2byte	0x8ca
 4837 1cfc F20A0000 		.4byte	0xaf2
 4838 1d00 02       		.byte	0x2
 4839 1d01 01       		.byte	0x1
 4840 1d02 06       		.byte	0x6
 4841 1d03 00       		.byte	0
 4842 1d04 28       		.uleb128 0x28
 4843 1d05 0F2A0000 		.4byte	.LASF592
 4844 1d09 03       		.byte	0x3
 4845 1d0a CB08     		.2byte	0x8cb
 4846 1d0c F20A0000 		.4byte	0xaf2
 4847 1d10 02       		.byte	0x2
 4848 1d11 01       		.byte	0x1
 4849 1d12 05       		.byte	0x5
 4850 1d13 00       		.byte	0
 4851 1d14 28       		.uleb128 0x28
 4852 1d15 D11B0000 		.4byte	.LASF593
 4853 1d19 03       		.byte	0x3
 4854 1d1a CC08     		.2byte	0x8cc
 4855 1d1c F20A0000 		.4byte	0xaf2
 4856 1d20 02       		.byte	0x2
 4857 1d21 01       		.byte	0x1
 4858 1d22 04       		.byte	0x4
 4859 1d23 00       		.byte	0
 4860 1d24 29       		.uleb128 0x29
 4861 1d25 746C7300 		.ascii	"tls\000"
 4862 1d29 03       		.byte	0x3
 4863 1d2a CD08     		.2byte	0x8cd
 4864 1d2c F20A0000 		.4byte	0xaf2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 173


 4865 1d30 02       		.byte	0x2
 4866 1d31 01       		.byte	0x1
 4867 1d32 03       		.byte	0x3
 4868 1d33 00       		.byte	0
 4869 1d34 28       		.uleb128 0x28
 4870 1d35 F6250000 		.4byte	.LASF594
 4871 1d39 03       		.byte	0x3
 4872 1d3a CE08     		.2byte	0x8ce
 4873 1d3c F20A0000 		.4byte	0xaf2
 4874 1d40 02       		.byte	0x2
 4875 1d41 01       		.byte	0x1
 4876 1d42 02       		.byte	0x2
 4877 1d43 00       		.byte	0
 4878 1d44 28       		.uleb128 0x28
 4879 1d45 D1160000 		.4byte	.LASF595
 4880 1d49 03       		.byte	0x3
 4881 1d4a CF08     		.2byte	0x8cf
 4882 1d4c F20A0000 		.4byte	0xaf2
 4883 1d50 02       		.byte	0x2
 4884 1d51 01       		.byte	0x1
 4885 1d52 01       		.byte	0x1
 4886 1d53 00       		.byte	0
 4887 1d54 28       		.uleb128 0x28
 4888 1d55 5E2A0000 		.4byte	.LASF596
 4889 1d59 03       		.byte	0x3
 4890 1d5a D008     		.2byte	0x8d0
 4891 1d5c F20A0000 		.4byte	0xaf2
 4892 1d60 02       		.byte	0x2
 4893 1d61 01       		.byte	0x1
 4894 1d62 00       		.byte	0
 4895 1d63 00       		.byte	0
 4896 1d64 28       		.uleb128 0x28
 4897 1d65 D7110000 		.4byte	.LASF597
 4898 1d69 03       		.byte	0x3
 4899 1d6a D108     		.2byte	0x8d1
 4900 1d6c F20A0000 		.4byte	0xaf2
 4901 1d70 02       		.byte	0x2
 4902 1d71 01       		.byte	0x1
 4903 1d72 0F       		.byte	0xf
 4904 1d73 02       		.byte	0x2
 4905 1d74 28       		.uleb128 0x28
 4906 1d75 CB220000 		.4byte	.LASF598
 4907 1d79 03       		.byte	0x3
 4908 1d7a D208     		.2byte	0x8d2
 4909 1d7c F20A0000 		.4byte	0xaf2
 4910 1d80 02       		.byte	0x2
 4911 1d81 01       		.byte	0x1
 4912 1d82 0E       		.byte	0xe
 4913 1d83 02       		.byte	0x2
 4914 1d84 28       		.uleb128 0x28
 4915 1d85 65010000 		.4byte	.LASF599
 4916 1d89 03       		.byte	0x3
 4917 1d8a D308     		.2byte	0x8d3
 4918 1d8c F20A0000 		.4byte	0xaf2
 4919 1d90 02       		.byte	0x2
 4920 1d91 01       		.byte	0x1
 4921 1d92 0D       		.byte	0xd
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 174


 4922 1d93 02       		.byte	0x2
 4923 1d94 28       		.uleb128 0x28
 4924 1d95 B52A0000 		.4byte	.LASF600
 4925 1d99 03       		.byte	0x3
 4926 1d9a D408     		.2byte	0x8d4
 4927 1d9c F20A0000 		.4byte	0xaf2
 4928 1da0 02       		.byte	0x2
 4929 1da1 01       		.byte	0x1
 4930 1da2 0C       		.byte	0xc
 4931 1da3 02       		.byte	0x2
 4932 1da4 28       		.uleb128 0x28
 4933 1da5 F82A0000 		.4byte	.LASF55
 4934 1da9 03       		.byte	0x3
 4935 1daa D508     		.2byte	0x8d5
 4936 1dac F20A0000 		.4byte	0xaf2
 4937 1db0 02       		.byte	0x2
 4938 1db1 01       		.byte	0x1
 4939 1db2 0B       		.byte	0xb
 4940 1db3 02       		.byte	0x2
 4941 1db4 28       		.uleb128 0x28
 4942 1db5 50140000 		.4byte	.LASF56
 4943 1db9 03       		.byte	0x3
 4944 1dba D608     		.2byte	0x8d6
 4945 1dbc F20A0000 		.4byte	0xaf2
 4946 1dc0 02       		.byte	0x2
 4947 1dc1 01       		.byte	0x1
 4948 1dc2 0A       		.byte	0xa
 4949 1dc3 02       		.byte	0x2
 4950 1dc4 28       		.uleb128 0x28
 4951 1dc5 D70E0000 		.4byte	.LASF57
 4952 1dc9 03       		.byte	0x3
 4953 1dca D708     		.2byte	0x8d7
 4954 1dcc F20A0000 		.4byte	0xaf2
 4955 1dd0 02       		.byte	0x2
 4956 1dd1 01       		.byte	0x1
 4957 1dd2 09       		.byte	0x9
 4958 1dd3 02       		.byte	0x2
 4959 1dd4 28       		.uleb128 0x28
 4960 1dd5 3D290000 		.4byte	.LASF58
 4961 1dd9 03       		.byte	0x3
 4962 1dda D808     		.2byte	0x8d8
 4963 1ddc F20A0000 		.4byte	0xaf2
 4964 1de0 02       		.byte	0x2
 4965 1de1 01       		.byte	0x1
 4966 1de2 08       		.byte	0x8
 4967 1de3 02       		.byte	0x2
 4968 1de4 28       		.uleb128 0x28
 4969 1de5 01270000 		.4byte	.LASF601
 4970 1de9 03       		.byte	0x3
 4971 1dea D908     		.2byte	0x8d9
 4972 1dec F20A0000 		.4byte	0xaf2
 4973 1df0 02       		.byte	0x2
 4974 1df1 01       		.byte	0x1
 4975 1df2 07       		.byte	0x7
 4976 1df3 02       		.byte	0x2
 4977 1df4 28       		.uleb128 0x28
 4978 1df5 4B250000 		.4byte	.LASF59
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 175


 4979 1df9 03       		.byte	0x3
 4980 1dfa DA08     		.2byte	0x8da
 4981 1dfc F20A0000 		.4byte	0xaf2
 4982 1e00 02       		.byte	0x2
 4983 1e01 01       		.byte	0x1
 4984 1e02 06       		.byte	0x6
 4985 1e03 02       		.byte	0x2
 4986 1e04 28       		.uleb128 0x28
 4987 1e05 741E0000 		.4byte	.LASF60
 4988 1e09 03       		.byte	0x3
 4989 1e0a DB08     		.2byte	0x8db
 4990 1e0c F20A0000 		.4byte	0xaf2
 4991 1e10 02       		.byte	0x2
 4992 1e11 01       		.byte	0x1
 4993 1e12 05       		.byte	0x5
 4994 1e13 02       		.byte	0x2
 4995 1e14 28       		.uleb128 0x28
 4996 1e15 04140000 		.4byte	.LASF602
 4997 1e19 03       		.byte	0x3
 4998 1e1a DC08     		.2byte	0x8dc
 4999 1e1c F20A0000 		.4byte	0xaf2
 5000 1e20 02       		.byte	0x2
 5001 1e21 01       		.byte	0x1
 5002 1e22 04       		.byte	0x4
 5003 1e23 02       		.byte	0x2
 5004 1e24 28       		.uleb128 0x28
 5005 1e25 39130000 		.4byte	.LASF603
 5006 1e29 03       		.byte	0x3
 5007 1e2a DD08     		.2byte	0x8dd
 5008 1e2c F20A0000 		.4byte	0xaf2
 5009 1e30 02       		.byte	0x2
 5010 1e31 01       		.byte	0x1
 5011 1e32 03       		.byte	0x3
 5012 1e33 02       		.byte	0x2
 5013 1e34 28       		.uleb128 0x28
 5014 1e35 F7030000 		.4byte	.LASF604
 5015 1e39 03       		.byte	0x3
 5016 1e3a DE08     		.2byte	0x8de
 5017 1e3c F20A0000 		.4byte	0xaf2
 5018 1e40 02       		.byte	0x2
 5019 1e41 01       		.byte	0x1
 5020 1e42 02       		.byte	0x2
 5021 1e43 02       		.byte	0x2
 5022 1e44 28       		.uleb128 0x28
 5023 1e45 531E0000 		.4byte	.LASF605
 5024 1e49 03       		.byte	0x3
 5025 1e4a DF08     		.2byte	0x8df
 5026 1e4c F20A0000 		.4byte	0xaf2
 5027 1e50 02       		.byte	0x2
 5028 1e51 01       		.byte	0x1
 5029 1e52 01       		.byte	0x1
 5030 1e53 02       		.byte	0x2
 5031 1e54 28       		.uleb128 0x28
 5032 1e55 E81D0000 		.4byte	.LASF606
 5033 1e59 03       		.byte	0x3
 5034 1e5a E008     		.2byte	0x8e0
 5035 1e5c F20A0000 		.4byte	0xaf2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 176


 5036 1e60 02       		.byte	0x2
 5037 1e61 01       		.byte	0x1
 5038 1e62 00       		.byte	0
 5039 1e63 02       		.byte	0x2
 5040 1e64 28       		.uleb128 0x28
 5041 1e65 F8160000 		.4byte	.LASF61
 5042 1e69 03       		.byte	0x3
 5043 1e6a E108     		.2byte	0x8e1
 5044 1e6c F20A0000 		.4byte	0xaf2
 5045 1e70 02       		.byte	0x2
 5046 1e71 01       		.byte	0x1
 5047 1e72 0F       		.byte	0xf
 5048 1e73 04       		.byte	0x4
 5049 1e74 28       		.uleb128 0x28
 5050 1e75 961F0000 		.4byte	.LASF62
 5051 1e79 03       		.byte	0x3
 5052 1e7a E208     		.2byte	0x8e2
 5053 1e7c F20A0000 		.4byte	0xaf2
 5054 1e80 02       		.byte	0x2
 5055 1e81 01       		.byte	0x1
 5056 1e82 0E       		.byte	0xe
 5057 1e83 04       		.byte	0x4
 5058 1e84 28       		.uleb128 0x28
 5059 1e85 870E0000 		.4byte	.LASF607
 5060 1e89 03       		.byte	0x3
 5061 1e8a E308     		.2byte	0x8e3
 5062 1e8c F20A0000 		.4byte	0xaf2
 5063 1e90 02       		.byte	0x2
 5064 1e91 01       		.byte	0x1
 5065 1e92 0D       		.byte	0xd
 5066 1e93 04       		.byte	0x4
 5067 1e94 28       		.uleb128 0x28
 5068 1e95 481F0000 		.4byte	.LASF63
 5069 1e99 03       		.byte	0x3
 5070 1e9a E408     		.2byte	0x8e4
 5071 1e9c F20A0000 		.4byte	0xaf2
 5072 1ea0 02       		.byte	0x2
 5073 1ea1 01       		.byte	0x1
 5074 1ea2 0C       		.byte	0xc
 5075 1ea3 04       		.byte	0x4
 5076 1ea4 28       		.uleb128 0x28
 5077 1ea5 060A0000 		.4byte	.LASF608
 5078 1ea9 03       		.byte	0x3
 5079 1eaa E508     		.2byte	0x8e5
 5080 1eac F20A0000 		.4byte	0xaf2
 5081 1eb0 02       		.byte	0x2
 5082 1eb1 01       		.byte	0x1
 5083 1eb2 0B       		.byte	0xb
 5084 1eb3 04       		.byte	0x4
 5085 1eb4 28       		.uleb128 0x28
 5086 1eb5 752A0000 		.4byte	.LASF609
 5087 1eb9 03       		.byte	0x3
 5088 1eba E608     		.2byte	0x8e6
 5089 1ebc F20A0000 		.4byte	0xaf2
 5090 1ec0 02       		.byte	0x2
 5091 1ec1 01       		.byte	0x1
 5092 1ec2 0A       		.byte	0xa
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 177


 5093 1ec3 04       		.byte	0x4
 5094 1ec4 05       		.uleb128 0x5
 5095 1ec5 0E0E0000 		.4byte	.LASF610
 5096 1ec9 03       		.byte	0x3
 5097 1eca F708     		.2byte	0x8f7
 5098 1ecc E70A0000 		.4byte	0xae7
 5099 1ed0 05       		.byte	0x5
 5100 1ed1 05       		.uleb128 0x5
 5101 1ed2 972B0000 		.4byte	.LASF611
 5102 1ed6 03       		.byte	0x3
 5103 1ed7 F808     		.2byte	0x8f8
 5104 1ed9 E70A0000 		.4byte	0xae7
 5105 1edd 06       		.byte	0x6
 5106 1ede 05       		.uleb128 0x5
 5107 1edf E3220000 		.4byte	.LASF612
 5108 1ee3 03       		.byte	0x3
 5109 1ee4 F908     		.2byte	0x8f9
 5110 1ee6 E70A0000 		.4byte	0xae7
 5111 1eea 07       		.byte	0x7
 5112 1eeb 05       		.uleb128 0x5
 5113 1eec 560C0000 		.4byte	.LASF613
 5114 1ef0 03       		.byte	0x3
 5115 1ef1 FA08     		.2byte	0x8fa
 5116 1ef3 E70A0000 		.4byte	0xae7
 5117 1ef7 08       		.byte	0x8
 5118 1ef8 05       		.uleb128 0x5
 5119 1ef9 900E0000 		.4byte	.LASF614
 5120 1efd 03       		.byte	0x3
 5121 1efe FB08     		.2byte	0x8fb
 5122 1f00 E70A0000 		.4byte	0xae7
 5123 1f04 09       		.byte	0x9
 5124 1f05 05       		.uleb128 0x5
 5125 1f06 34160000 		.4byte	.LASF615
 5126 1f0a 03       		.byte	0x3
 5127 1f0b FC08     		.2byte	0x8fc
 5128 1f0d E70A0000 		.4byte	0xae7
 5129 1f11 0A       		.byte	0xa
 5130 1f12 05       		.uleb128 0x5
 5131 1f13 14230000 		.4byte	.LASF616
 5132 1f17 03       		.byte	0x3
 5133 1f18 FD08     		.2byte	0x8fd
 5134 1f1a E70A0000 		.4byte	0xae7
 5135 1f1e 0B       		.byte	0xb
 5136 1f1f 05       		.uleb128 0x5
 5137 1f20 D80C0000 		.4byte	.LASF64
 5138 1f24 03       		.byte	0x3
 5139 1f25 FE08     		.2byte	0x8fe
 5140 1f27 E70A0000 		.4byte	0xae7
 5141 1f2b 0C       		.byte	0xc
 5142 1f2c 05       		.uleb128 0x5
 5143 1f2d 682A0000 		.4byte	.LASF617
 5144 1f31 03       		.byte	0x3
 5145 1f32 FF08     		.2byte	0x8ff
 5146 1f34 E70A0000 		.4byte	0xae7
 5147 1f38 0D       		.byte	0xd
 5148 1f39 05       		.uleb128 0x5
 5149 1f3a 280A0000 		.4byte	.LASF618
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 178


 5150 1f3e 03       		.byte	0x3
 5151 1f3f 0009     		.2byte	0x900
 5152 1f41 E70A0000 		.4byte	0xae7
 5153 1f45 0E       		.byte	0xe
 5154 1f46 00       		.byte	0
 5155 1f47 10       		.uleb128 0x10
 5156 1f48 770E0000 		.4byte	.LASF591
 5157 1f4c 03       		.byte	0x3
 5158 1f4d 0609     		.2byte	0x906
 5159 1f4f 671C0000 		.4byte	0x1c67
 5160 1f53 03       		.uleb128 0x3
 5161 1f54 3A2B0000 		.4byte	.LASF619
 5162 1f58 A402     		.2byte	0x2a4
 5163 1f5a 03       		.byte	0x3
 5164 1f5b 0809     		.2byte	0x908
 5165 1f5d F31F0000 		.4byte	0x1ff3
 5166 1f61 05       		.uleb128 0x5
 5167 1f62 12050000 		.4byte	.LASF620
 5168 1f66 03       		.byte	0x3
 5169 1f67 0909     		.2byte	0x909
 5170 1f69 8E100000 		.4byte	0x108e
 5171 1f6d 00       		.byte	0
 5172 1f6e 05       		.uleb128 0x5
 5173 1f6f 0F1B0000 		.4byte	.LASF621
 5174 1f73 03       		.byte	0x3
 5175 1f74 0A09     		.2byte	0x90a
 5176 1f76 040B0000 		.4byte	0xb04
 5177 1f7a 04       		.byte	0x4
 5178 1f7b 05       		.uleb128 0x5
 5179 1f7c EE120000 		.4byte	.LASF622
 5180 1f80 03       		.byte	0x3
 5181 1f81 0B09     		.2byte	0x90b
 5182 1f83 040B0000 		.4byte	0xb04
 5183 1f87 08       		.byte	0x8
 5184 1f88 05       		.uleb128 0x5
 5185 1f89 A6000000 		.4byte	.LASF623
 5186 1f8d 03       		.byte	0x3
 5187 1f8e 0C09     		.2byte	0x90c
 5188 1f90 040B0000 		.4byte	0xb04
 5189 1f94 0C       		.byte	0xc
 5190 1f95 05       		.uleb128 0x5
 5191 1f96 DC230000 		.4byte	.LASF624
 5192 1f9a 03       		.byte	0x3
 5193 1f9b 1309     		.2byte	0x913
 5194 1f9d B4100000 		.4byte	0x10b4
 5195 1fa1 10       		.byte	0x10
 5196 1fa2 05       		.uleb128 0x5
 5197 1fa3 62040000 		.4byte	.LASF625
 5198 1fa7 03       		.byte	0x3
 5199 1fa8 1409     		.2byte	0x914
 5200 1faa B4100000 		.4byte	0x10b4
 5201 1fae 30       		.byte	0x30
 5202 1faf 05       		.uleb128 0x5
 5203 1fb0 6A0D0000 		.4byte	.LASF33
 5204 1fb4 03       		.byte	0x3
 5205 1fb5 1509     		.2byte	0x915
 5206 1fb7 B4100000 		.4byte	0x10b4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 179


 5207 1fbb 50       		.byte	0x50
 5208 1fbc 05       		.uleb128 0x5
 5209 1fbd 1B010000 		.4byte	.LASF34
 5210 1fc1 03       		.byte	0x3
 5211 1fc2 1609     		.2byte	0x916
 5212 1fc4 E70A0000 		.4byte	0xae7
 5213 1fc8 70       		.byte	0x70
 5214 1fc9 05       		.uleb128 0x5
 5215 1fca 02030000 		.4byte	.LASF626
 5216 1fce 03       		.byte	0x3
 5217 1fcf 1709     		.2byte	0x917
 5218 1fd1 F31F0000 		.4byte	0x1ff3
 5219 1fd5 71       		.byte	0x71
 5220 1fd6 06       		.uleb128 0x6
 5221 1fd7 662B0000 		.4byte	.LASF35
 5222 1fdb 03       		.byte	0x3
 5223 1fdc 1809     		.2byte	0x918
 5224 1fde 4F1B0000 		.4byte	0x1b4f
 5225 1fe2 7102     		.2byte	0x271
 5226 1fe4 06       		.uleb128 0x6
 5227 1fe5 8D030000 		.4byte	.LASF627
 5228 1fe9 03       		.byte	0x3
 5229 1fea 1D09     		.2byte	0x91d
 5230 1fec E70A0000 		.4byte	0xae7
 5231 1ff0 A102     		.2byte	0x2a1
 5232 1ff2 00       		.byte	0
 5233 1ff3 19       		.uleb128 0x19
 5234 1ff4 E70A0000 		.4byte	0xae7
 5235 1ff8 04200000 		.4byte	0x2004
 5236 1ffc 27       		.uleb128 0x27
 5237 1ffd 09070000 		.4byte	0x709
 5238 2001 FF01     		.2byte	0x1ff
 5239 2003 00       		.byte	0
 5240 2004 10       		.uleb128 0x10
 5241 2005 3A2B0000 		.4byte	.LASF619
 5242 2009 03       		.byte	0x3
 5243 200a 1E09     		.2byte	0x91e
 5244 200c 531F0000 		.4byte	0x1f53
 5245 2010 08       		.uleb128 0x8
 5246 2011 061D0000 		.4byte	.LASF628
 5247 2015 05       		.byte	0x5
 5248 2016 03       		.byte	0x3
 5249 2017 7609     		.2byte	0x976
 5250 2019 52200000 		.4byte	0x2052
 5251 201d 05       		.uleb128 0x5
 5252 201e D8090000 		.4byte	.LASF322
 5253 2022 03       		.byte	0x3
 5254 2023 7709     		.2byte	0x977
 5255 2025 E70A0000 		.4byte	0xae7
 5256 2029 00       		.byte	0
 5257 202a 05       		.uleb128 0x5
 5258 202b 73140000 		.4byte	.LASF629
 5259 202f 03       		.byte	0x3
 5260 2030 7809     		.2byte	0x978
 5261 2032 E70A0000 		.4byte	0xae7
 5262 2036 01       		.byte	0x1
 5263 2037 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 180


 5264 2038 B21E0000 		.4byte	.LASF630
 5265 203c 03       		.byte	0x3
 5266 203d 7909     		.2byte	0x979
 5267 203f E70A0000 		.4byte	0xae7
 5268 2043 02       		.byte	0x2
 5269 2044 05       		.uleb128 0x5
 5270 2045 A7030000 		.4byte	.LASF506
 5271 2049 03       		.byte	0x3
 5272 204a 7A09     		.2byte	0x97a
 5273 204c 52200000 		.4byte	0x2052
 5274 2050 03       		.byte	0x3
 5275 2051 00       		.byte	0
 5276 2052 19       		.uleb128 0x19
 5277 2053 E70A0000 		.4byte	0xae7
 5278 2057 62200000 		.4byte	0x2062
 5279 205b 1A       		.uleb128 0x1a
 5280 205c 09070000 		.4byte	0x709
 5281 2060 01       		.byte	0x1
 5282 2061 00       		.byte	0
 5283 2062 10       		.uleb128 0x10
 5284 2063 061D0000 		.4byte	.LASF628
 5285 2067 03       		.byte	0x3
 5286 2068 7B09     		.2byte	0x97b
 5287 206a 10200000 		.4byte	0x2010
 5288 206e 08       		.uleb128 0x8
 5289 206f A0110000 		.4byte	.LASF631
 5290 2073 02       		.byte	0x2
 5291 2074 03       		.byte	0x3
 5292 2075 B109     		.2byte	0x9b1
 5293 2077 5C210000 		.4byte	0x215c
 5294 207b 28       		.uleb128 0x28
 5295 207c 8F190000 		.4byte	.LASF632
 5296 2080 03       		.byte	0x3
 5297 2081 B209     		.2byte	0x9b2
 5298 2083 F20A0000 		.4byte	0xaf2
 5299 2087 02       		.byte	0x2
 5300 2088 01       		.byte	0x1
 5301 2089 0F       		.byte	0xf
 5302 208a 00       		.byte	0
 5303 208b 28       		.uleb128 0x28
 5304 208c 7E0A0000 		.4byte	.LASF633
 5305 2090 03       		.byte	0x3
 5306 2091 B309     		.2byte	0x9b3
 5307 2093 F20A0000 		.4byte	0xaf2
 5308 2097 02       		.byte	0x2
 5309 2098 01       		.byte	0x1
 5310 2099 0E       		.byte	0xe
 5311 209a 00       		.byte	0
 5312 209b 28       		.uleb128 0x28
 5313 209c AC160000 		.4byte	.LASF634
 5314 20a0 03       		.byte	0x3
 5315 20a1 B409     		.2byte	0x9b4
 5316 20a3 F20A0000 		.4byte	0xaf2
 5317 20a7 02       		.byte	0x2
 5318 20a8 01       		.byte	0x1
 5319 20a9 0D       		.byte	0xd
 5320 20aa 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 181


 5321 20ab 28       		.uleb128 0x28
 5322 20ac 241A0000 		.4byte	.LASF635
 5323 20b0 03       		.byte	0x3
 5324 20b1 B509     		.2byte	0x9b5
 5325 20b3 F20A0000 		.4byte	0xaf2
 5326 20b7 02       		.byte	0x2
 5327 20b8 01       		.byte	0x1
 5328 20b9 0C       		.byte	0xc
 5329 20ba 00       		.byte	0
 5330 20bb 28       		.uleb128 0x28
 5331 20bc 460E0000 		.4byte	.LASF636
 5332 20c0 03       		.byte	0x3
 5333 20c1 B609     		.2byte	0x9b6
 5334 20c3 F20A0000 		.4byte	0xaf2
 5335 20c7 02       		.byte	0x2
 5336 20c8 01       		.byte	0x1
 5337 20c9 0B       		.byte	0xb
 5338 20ca 00       		.byte	0
 5339 20cb 28       		.uleb128 0x28
 5340 20cc 740D0000 		.4byte	.LASF637
 5341 20d0 03       		.byte	0x3
 5342 20d1 B709     		.2byte	0x9b7
 5343 20d3 F20A0000 		.4byte	0xaf2
 5344 20d7 02       		.byte	0x2
 5345 20d8 01       		.byte	0x1
 5346 20d9 0A       		.byte	0xa
 5347 20da 00       		.byte	0
 5348 20db 28       		.uleb128 0x28
 5349 20dc 27100000 		.4byte	.LASF638
 5350 20e0 03       		.byte	0x3
 5351 20e1 B809     		.2byte	0x9b8
 5352 20e3 F20A0000 		.4byte	0xaf2
 5353 20e7 02       		.byte	0x2
 5354 20e8 01       		.byte	0x1
 5355 20e9 09       		.byte	0x9
 5356 20ea 00       		.byte	0
 5357 20eb 28       		.uleb128 0x28
 5358 20ec 4D090000 		.4byte	.LASF639
 5359 20f0 03       		.byte	0x3
 5360 20f1 B909     		.2byte	0x9b9
 5361 20f3 F20A0000 		.4byte	0xaf2
 5362 20f7 02       		.byte	0x2
 5363 20f8 01       		.byte	0x1
 5364 20f9 08       		.byte	0x8
 5365 20fa 00       		.byte	0
 5366 20fb 28       		.uleb128 0x28
 5367 20fc 6C240000 		.4byte	.LASF640
 5368 2100 03       		.byte	0x3
 5369 2101 BA09     		.2byte	0x9ba
 5370 2103 F20A0000 		.4byte	0xaf2
 5371 2107 02       		.byte	0x2
 5372 2108 01       		.byte	0x1
 5373 2109 07       		.byte	0x7
 5374 210a 00       		.byte	0
 5375 210b 28       		.uleb128 0x28
 5376 210c D5150000 		.4byte	.LASF641
 5377 2110 03       		.byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 182


 5378 2111 BB09     		.2byte	0x9bb
 5379 2113 F20A0000 		.4byte	0xaf2
 5380 2117 02       		.byte	0x2
 5381 2118 01       		.byte	0x1
 5382 2119 06       		.byte	0x6
 5383 211a 00       		.byte	0
 5384 211b 28       		.uleb128 0x28
 5385 211c F8290000 		.4byte	.LASF642
 5386 2120 03       		.byte	0x3
 5387 2121 BC09     		.2byte	0x9bc
 5388 2123 F20A0000 		.4byte	0xaf2
 5389 2127 02       		.byte	0x2
 5390 2128 01       		.byte	0x1
 5391 2129 05       		.byte	0x5
 5392 212a 00       		.byte	0
 5393 212b 28       		.uleb128 0x28
 5394 212c AC210000 		.4byte	.LASF643
 5395 2130 03       		.byte	0x3
 5396 2131 BD09     		.2byte	0x9bd
 5397 2133 F20A0000 		.4byte	0xaf2
 5398 2137 02       		.byte	0x2
 5399 2138 01       		.byte	0x1
 5400 2139 04       		.byte	0x4
 5401 213a 00       		.byte	0
 5402 213b 28       		.uleb128 0x28
 5403 213c 0B150000 		.4byte	.LASF644
 5404 2140 03       		.byte	0x3
 5405 2141 BE09     		.2byte	0x9be
 5406 2143 F20A0000 		.4byte	0xaf2
 5407 2147 02       		.byte	0x2
 5408 2148 01       		.byte	0x1
 5409 2149 03       		.byte	0x3
 5410 214a 00       		.byte	0
 5411 214b 28       		.uleb128 0x28
 5412 214c B5090000 		.4byte	.LASF645
 5413 2150 03       		.byte	0x3
 5414 2151 BF09     		.2byte	0x9bf
 5415 2153 F20A0000 		.4byte	0xaf2
 5416 2157 02       		.byte	0x2
 5417 2158 01       		.byte	0x1
 5418 2159 02       		.byte	0x2
 5419 215a 00       		.byte	0
 5420 215b 00       		.byte	0
 5421 215c 10       		.uleb128 0x10
 5422 215d A0110000 		.4byte	.LASF631
 5423 2161 03       		.byte	0x3
 5424 2162 C009     		.2byte	0x9c0
 5425 2164 6E200000 		.4byte	0x206e
 5426 2168 08       		.uleb128 0x8
 5427 2169 B5120000 		.4byte	.LASF646
 5428 216d D4       		.byte	0xd4
 5429 216e 03       		.byte	0x3
 5430 216f C409     		.2byte	0x9c4
 5431 2171 9D210000 		.4byte	0x219d
 5432 2175 05       		.uleb128 0x5
 5433 2176 FE100000 		.4byte	.LASF647
 5434 217a 03       		.byte	0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 183


 5435 217b C509     		.2byte	0x9c5
 5436 217d 431B0000 		.4byte	0x1b43
 5437 2181 00       		.byte	0
 5438 2182 05       		.uleb128 0x5
 5439 2183 A50F0000 		.4byte	.LASF648
 5440 2187 03       		.byte	0x3
 5441 2188 C609     		.2byte	0x9c6
 5442 218a 431B0000 		.4byte	0x1b43
 5443 218e 34       		.byte	0x34
 5444 218f 05       		.uleb128 0x5
 5445 2190 F3270000 		.4byte	.LASF649
 5446 2194 03       		.byte	0x3
 5447 2195 D009     		.2byte	0x9d0
 5448 2197 2F0D0000 		.4byte	0xd2f
 5449 219b 68       		.byte	0x68
 5450 219c 00       		.byte	0
 5451 219d 10       		.uleb128 0x10
 5452 219e B5120000 		.4byte	.LASF646
 5453 21a2 03       		.byte	0x3
 5454 21a3 D809     		.2byte	0x9d8
 5455 21a5 68210000 		.4byte	0x2168
 5456 21a9 09       		.uleb128 0x9
 5457 21aa 04       		.byte	0x4
 5458 21ab BD020000 		.4byte	0x2bd
 5459 21af 09       		.uleb128 0x9
 5460 21b0 04       		.byte	0x4
 5461 21b1 04200000 		.4byte	0x2004
 5462 21b5 09       		.uleb128 0x9
 5463 21b6 04       		.byte	0x4
 5464 21b7 9D210000 		.4byte	0x219d
 5465 21bb 09       		.uleb128 0x9
 5466 21bc 04       		.byte	0x4
 5467 21bd 990D0000 		.4byte	0xd99
 5468 21c1 13       		.uleb128 0x13
 5469 21c2 01       		.byte	0x1
 5470 21c3 03       		.byte	0x3
 5471 21c4 8B0A     		.2byte	0xa8b
 5472 21c6 D8210000 		.4byte	0x21d8
 5473 21ca 14       		.uleb128 0x14
 5474 21cb 70220000 		.4byte	.LASF650
 5475 21cf 20       		.sleb128 32
 5476 21d0 14       		.uleb128 0x14
 5477 21d1 401C0000 		.4byte	.LASF651
 5478 21d5 D000     		.sleb128 80
 5479 21d7 00       		.byte	0
 5480 21d8 18       		.uleb128 0x18
 5481 21d9 02       		.byte	0x2
 5482 21da 0D       		.byte	0xd
 5483 21db 27       		.byte	0x27
 5484 21dc F1240000 		.4byte	0x24f1
 5485 21e0 14       		.uleb128 0x14
 5486 21e1 91130000 		.4byte	.LASF652
 5487 21e5 9C7F     		.sleb128 -100
 5488 21e7 14       		.uleb128 0x14
 5489 21e8 D10B0000 		.4byte	.LASF653
 5490 21ec 9B7F     		.sleb128 -101
 5491 21ee 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 184


 5492 21ef C8040000 		.4byte	.LASF654
 5493 21f3 9A7F     		.sleb128 -102
 5494 21f5 14       		.uleb128 0x14
 5495 21f6 412B0000 		.4byte	.LASF655
 5496 21fa 997F     		.sleb128 -103
 5497 21fc 14       		.uleb128 0x14
 5498 21fd 781B0000 		.4byte	.LASF656
 5499 2201 987F     		.sleb128 -104
 5500 2203 14       		.uleb128 0x14
 5501 2204 42240000 		.4byte	.LASF657
 5502 2208 977F     		.sleb128 -105
 5503 220a 14       		.uleb128 0x14
 5504 220b E2120000 		.4byte	.LASF658
 5505 220f 967F     		.sleb128 -106
 5506 2211 14       		.uleb128 0x14
 5507 2212 8A1D0000 		.4byte	.LASF659
 5508 2216 927F     		.sleb128 -110
 5509 2218 14       		.uleb128 0x14
 5510 2219 EE1B0000 		.4byte	.LASF660
 5511 221d 917F     		.sleb128 -111
 5512 221f 14       		.uleb128 0x14
 5513 2220 A11D0000 		.4byte	.LASF661
 5514 2224 907F     		.sleb128 -112
 5515 2226 14       		.uleb128 0x14
 5516 2227 A0280000 		.4byte	.LASF662
 5517 222b 8F7F     		.sleb128 -113
 5518 222d 14       		.uleb128 0x14
 5519 222e DB2B0000 		.4byte	.LASF663
 5520 2232 8E7F     		.sleb128 -114
 5521 2234 14       		.uleb128 0x14
 5522 2235 50080000 		.4byte	.LASF664
 5523 2239 8D7F     		.sleb128 -115
 5524 223b 14       		.uleb128 0x14
 5525 223c AE030000 		.4byte	.LASF665
 5526 2240 8C7F     		.sleb128 -116
 5527 2242 14       		.uleb128 0x14
 5528 2243 53200000 		.4byte	.LASF666
 5529 2247 8B7F     		.sleb128 -117
 5530 2249 14       		.uleb128 0x14
 5531 224a BF120000 		.4byte	.LASF667
 5532 224e 8A7F     		.sleb128 -118
 5533 2250 14       		.uleb128 0x14
 5534 2251 FD0E0000 		.4byte	.LASF668
 5535 2255 897F     		.sleb128 -119
 5536 2257 14       		.uleb128 0x14
 5537 2258 20150000 		.4byte	.LASF669
 5538 225c 887F     		.sleb128 -120
 5539 225e 14       		.uleb128 0x14
 5540 225f EB1C0000 		.4byte	.LASF670
 5541 2263 877F     		.sleb128 -121
 5542 2265 14       		.uleb128 0x14
 5543 2266 590E0000 		.4byte	.LASF671
 5544 226a 837F     		.sleb128 -125
 5545 226c 14       		.uleb128 0x14
 5546 226d F10C0000 		.4byte	.LASF672
 5547 2271 FE7E     		.sleb128 -130
 5548 2273 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 185


 5549 2274 85280000 		.4byte	.LASF673
 5550 2278 FD7E     		.sleb128 -131
 5551 227a 14       		.uleb128 0x14
 5552 227b 3C2C0000 		.4byte	.LASF674
 5553 227f FC7E     		.sleb128 -132
 5554 2281 14       		.uleb128 0x14
 5555 2282 3D060000 		.4byte	.LASF675
 5556 2286 FB7E     		.sleb128 -133
 5557 2288 14       		.uleb128 0x14
 5558 2289 6C030000 		.4byte	.LASF676
 5559 228d FA7E     		.sleb128 -134
 5560 228f 14       		.uleb128 0x14
 5561 2290 76220000 		.4byte	.LASF677
 5562 2294 F97E     		.sleb128 -135
 5563 2296 14       		.uleb128 0x14
 5564 2297 A9140000 		.4byte	.LASF678
 5565 229b F87E     		.sleb128 -136
 5566 229d 14       		.uleb128 0x14
 5567 229e 29130000 		.4byte	.LASF679
 5568 22a2 F77E     		.sleb128 -137
 5569 22a4 14       		.uleb128 0x14
 5570 22a5 00090000 		.4byte	.LASF680
 5571 22a9 F67E     		.sleb128 -138
 5572 22ab 14       		.uleb128 0x14
 5573 22ac 28040000 		.4byte	.LASF681
 5574 22b0 F57E     		.sleb128 -139
 5575 22b2 14       		.uleb128 0x14
 5576 22b3 E6240000 		.4byte	.LASF682
 5577 22b7 F47E     		.sleb128 -140
 5578 22b9 14       		.uleb128 0x14
 5579 22ba F6210000 		.4byte	.LASF683
 5580 22be F37E     		.sleb128 -141
 5581 22c0 14       		.uleb128 0x14
 5582 22c1 941D0000 		.4byte	.LASF684
 5583 22c5 F27E     		.sleb128 -142
 5584 22c7 14       		.uleb128 0x14
 5585 22c8 420F0000 		.4byte	.LASF685
 5586 22cc F17E     		.sleb128 -143
 5587 22ce 14       		.uleb128 0x14
 5588 22cf E3100000 		.4byte	.LASF686
 5589 22d3 F07E     		.sleb128 -144
 5590 22d5 14       		.uleb128 0x14
 5591 22d6 78090000 		.4byte	.LASF687
 5592 22da EF7E     		.sleb128 -145
 5593 22dc 14       		.uleb128 0x14
 5594 22dd E7210000 		.4byte	.LASF688
 5595 22e1 EE7E     		.sleb128 -146
 5596 22e3 14       		.uleb128 0x14
 5597 22e4 B40B0000 		.4byte	.LASF689
 5598 22e8 ED7E     		.sleb128 -147
 5599 22ea 14       		.uleb128 0x14
 5600 22eb 1E190000 		.4byte	.LASF690
 5601 22ef EC7E     		.sleb128 -148
 5602 22f1 14       		.uleb128 0x14
 5603 22f2 EB150000 		.4byte	.LASF691
 5604 22f6 EB7E     		.sleb128 -149
 5605 22f8 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 186


 5606 22f9 D81F0000 		.4byte	.LASF692
 5607 22fd EA7E     		.sleb128 -150
 5608 22ff 14       		.uleb128 0x14
 5609 2300 F51C0000 		.4byte	.LASF693
 5610 2304 E97E     		.sleb128 -151
 5611 2306 14       		.uleb128 0x14
 5612 2307 B2040000 		.4byte	.LASF694
 5613 230b E87E     		.sleb128 -152
 5614 230d 14       		.uleb128 0x14
 5615 230e 16240000 		.4byte	.LASF695
 5616 2312 E77E     		.sleb128 -153
 5617 2314 14       		.uleb128 0x14
 5618 2315 4A0C0000 		.4byte	.LASF696
 5619 2319 E67E     		.sleb128 -154
 5620 231b 14       		.uleb128 0x14
 5621 231c 8F1C0000 		.4byte	.LASF697
 5622 2320 E57E     		.sleb128 -155
 5623 2322 14       		.uleb128 0x14
 5624 2323 38210000 		.4byte	.LASF698
 5625 2327 E47E     		.sleb128 -156
 5626 2329 14       		.uleb128 0x14
 5627 232a 502A0000 		.4byte	.LASF699
 5628 232e E37E     		.sleb128 -157
 5629 2330 14       		.uleb128 0x14
 5630 2331 64080000 		.4byte	.LASF700
 5631 2335 E27E     		.sleb128 -158
 5632 2337 14       		.uleb128 0x14
 5633 2338 D52A0000 		.4byte	.LASF701
 5634 233c E17E     		.sleb128 -159
 5635 233e 14       		.uleb128 0x14
 5636 233f 01200000 		.4byte	.LASF702
 5637 2343 E07E     		.sleb128 -160
 5638 2345 14       		.uleb128 0x14
 5639 2346 7B110000 		.4byte	.LASF703
 5640 234a D67E     		.sleb128 -170
 5641 234c 14       		.uleb128 0x14
 5642 234d BD150000 		.4byte	.LASF704
 5643 2351 D57E     		.sleb128 -171
 5644 2353 14       		.uleb128 0x14
 5645 2354 25290000 		.4byte	.LASF705
 5646 2358 D47E     		.sleb128 -172
 5647 235a 14       		.uleb128 0x14
 5648 235b 21240000 		.4byte	.LASF706
 5649 235f D37E     		.sleb128 -173
 5650 2361 14       		.uleb128 0x14
 5651 2362 86140000 		.4byte	.LASF707
 5652 2366 D27E     		.sleb128 -174
 5653 2368 14       		.uleb128 0x14
 5654 2369 781A0000 		.4byte	.LASF708
 5655 236d D17E     		.sleb128 -175
 5656 236f 14       		.uleb128 0x14
 5657 2370 44080000 		.4byte	.LASF709
 5658 2374 D07E     		.sleb128 -176
 5659 2376 14       		.uleb128 0x14
 5660 2377 9C030000 		.4byte	.LASF710
 5661 237b CF7E     		.sleb128 -177
 5662 237d 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 187


 5663 237e 72050000 		.4byte	.LASF711
 5664 2382 CC7E     		.sleb128 -180
 5665 2384 14       		.uleb128 0x14
 5666 2385 0F120000 		.4byte	.LASF712
 5667 2389 CB7E     		.sleb128 -181
 5668 238b 14       		.uleb128 0x14
 5669 238c BE230000 		.4byte	.LASF713
 5670 2390 CA7E     		.sleb128 -182
 5671 2392 14       		.uleb128 0x14
 5672 2393 AA080000 		.4byte	.LASF714
 5673 2397 C97E     		.sleb128 -183
 5674 2399 14       		.uleb128 0x14
 5675 239a 91040000 		.4byte	.LASF715
 5676 239e C87E     		.sleb128 -184
 5677 23a0 14       		.uleb128 0x14
 5678 23a1 FC1E0000 		.4byte	.LASF716
 5679 23a5 C77E     		.sleb128 -185
 5680 23a7 14       		.uleb128 0x14
 5681 23a8 5F020000 		.4byte	.LASF717
 5682 23ac C67E     		.sleb128 -186
 5683 23ae 14       		.uleb128 0x14
 5684 23af 6E1D0000 		.4byte	.LASF718
 5685 23b3 C57E     		.sleb128 -187
 5686 23b5 14       		.uleb128 0x14
 5687 23b6 7E270000 		.4byte	.LASF719
 5688 23ba C47E     		.sleb128 -188
 5689 23bc 14       		.uleb128 0x14
 5690 23bd 27010000 		.4byte	.LASF720
 5691 23c1 C37E     		.sleb128 -189
 5692 23c3 14       		.uleb128 0x14
 5693 23c4 C81A0000 		.4byte	.LASF721
 5694 23c8 C27E     		.sleb128 -190
 5695 23ca 14       		.uleb128 0x14
 5696 23cb 1B0E0000 		.4byte	.LASF722
 5697 23cf C17E     		.sleb128 -191
 5698 23d1 14       		.uleb128 0x14
 5699 23d2 A1050000 		.4byte	.LASF723
 5700 23d6 C07E     		.sleb128 -192
 5701 23d8 14       		.uleb128 0x14
 5702 23d9 4C2B0000 		.4byte	.LASF724
 5703 23dd BF7E     		.sleb128 -193
 5704 23df 14       		.uleb128 0x14
 5705 23e0 E9230000 		.4byte	.LASF725
 5706 23e4 BE7E     		.sleb128 -194
 5707 23e6 14       		.uleb128 0x14
 5708 23e7 FA0F0000 		.4byte	.LASF726
 5709 23eb BD7E     		.sleb128 -195
 5710 23ed 14       		.uleb128 0x14
 5711 23ee 540B0000 		.4byte	.LASF727
 5712 23f2 BC7E     		.sleb128 -196
 5713 23f4 14       		.uleb128 0x14
 5714 23f5 A7170000 		.4byte	.LASF728
 5715 23f9 BB7E     		.sleb128 -197
 5716 23fb 14       		.uleb128 0x14
 5717 23fc 241D0000 		.4byte	.LASF729
 5718 2400 BA7E     		.sleb128 -198
 5719 2402 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 188


 5720 2403 96140000 		.4byte	.LASF730
 5721 2407 B97E     		.sleb128 -199
 5722 2409 14       		.uleb128 0x14
 5723 240a 1C020000 		.4byte	.LASF731
 5724 240e B87E     		.sleb128 -200
 5725 2410 14       		.uleb128 0x14
 5726 2411 58140000 		.4byte	.LASF732
 5727 2415 B77E     		.sleb128 -201
 5728 2417 14       		.uleb128 0x14
 5729 2418 840D0000 		.4byte	.LASF733
 5730 241c B67E     		.sleb128 -202
 5731 241e 14       		.uleb128 0x14
 5732 241f 2A090000 		.4byte	.LASF734
 5733 2423 B57E     		.sleb128 -203
 5734 2425 14       		.uleb128 0x14
 5735 2426 B7000000 		.4byte	.LASF735
 5736 242a B47E     		.sleb128 -204
 5737 242c 14       		.uleb128 0x14
 5738 242d 6A170000 		.4byte	.LASF736
 5739 2431 B37E     		.sleb128 -205
 5740 2433 14       		.uleb128 0x14
 5741 2434 47170000 		.4byte	.LASF737
 5742 2438 B27E     		.sleb128 -206
 5743 243a 14       		.uleb128 0x14
 5744 243b C2160000 		.4byte	.LASF738
 5745 243f B17E     		.sleb128 -207
 5746 2441 14       		.uleb128 0x14
 5747 2442 C10B0000 		.4byte	.LASF739
 5748 2446 B07E     		.sleb128 -208
 5749 2448 14       		.uleb128 0x14
 5750 2449 D6210000 		.4byte	.LASF740
 5751 244d AF7E     		.sleb128 -209
 5752 244f 14       		.uleb128 0x14
 5753 2450 91070000 		.4byte	.LASF741
 5754 2454 AE7E     		.sleb128 -210
 5755 2456 14       		.uleb128 0x14
 5756 2457 43160000 		.4byte	.LASF742
 5757 245b AD7E     		.sleb128 -211
 5758 245d 14       		.uleb128 0x14
 5759 245e 0C170000 		.4byte	.LASF743
 5760 2462 AC7E     		.sleb128 -212
 5761 2464 14       		.uleb128 0x14
 5762 2465 8C200000 		.4byte	.LASF744
 5763 2469 AB7E     		.sleb128 -213
 5764 246b 14       		.uleb128 0x14
 5765 246c 89110000 		.4byte	.LASF745
 5766 2470 AA7E     		.sleb128 -214
 5767 2472 14       		.uleb128 0x14
 5768 2473 012C0000 		.4byte	.LASF746
 5769 2477 A97E     		.sleb128 -215
 5770 2479 14       		.uleb128 0x14
 5771 247a 04220000 		.4byte	.LASF747
 5772 247e A87E     		.sleb128 -216
 5773 2480 14       		.uleb128 0x14
 5774 2481 EC0E0000 		.4byte	.LASF748
 5775 2485 A77E     		.sleb128 -217
 5776 2487 14       		.uleb128 0x14
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 189


 5777 2488 620A0000 		.4byte	.LASF749
 5778 248c A67E     		.sleb128 -218
 5779 248e 14       		.uleb128 0x14
 5780 248f 9B2C0000 		.4byte	.LASF750
 5781 2493 A57E     		.sleb128 -219
 5782 2495 14       		.uleb128 0x14
 5783 2496 A80B0000 		.4byte	.LASF751
 5784 249a A47E     		.sleb128 -220
 5785 249c 14       		.uleb128 0x14
 5786 249d 30190000 		.4byte	.LASF752
 5787 24a1 A37E     		.sleb128 -221
 5788 24a3 14       		.uleb128 0x14
 5789 24a4 280C0000 		.4byte	.LASF753
 5790 24a8 A17E     		.sleb128 -223
 5791 24aa 14       		.uleb128 0x14
 5792 24ab 210A0000 		.4byte	.LASF754
 5793 24af A07E     		.sleb128 -224
 5794 24b1 14       		.uleb128 0x14
 5795 24b2 EC090000 		.4byte	.LASF755
 5796 24b6 9F7E     		.sleb128 -225
 5797 24b8 14       		.uleb128 0x14
 5798 24b9 9C0E0000 		.4byte	.LASF756
 5799 24bd 9E7E     		.sleb128 -226
 5800 24bf 14       		.uleb128 0x14
 5801 24c0 09270000 		.4byte	.LASF757
 5802 24c4 9D7E     		.sleb128 -227
 5803 24c6 14       		.uleb128 0x14
 5804 24c7 C3170000 		.4byte	.LASF758
 5805 24cb 9C7E     		.sleb128 -228
 5806 24cd 14       		.uleb128 0x14
 5807 24ce EB200000 		.4byte	.LASF759
 5808 24d2 9B7E     		.sleb128 -229
 5809 24d4 14       		.uleb128 0x14
 5810 24d5 C5080000 		.4byte	.LASF760
 5811 24d9 9A7E     		.sleb128 -230
 5812 24db 14       		.uleb128 0x14
 5813 24dc 7B140000 		.4byte	.LASF761
 5814 24e0 997E     		.sleb128 -231
 5815 24e2 14       		.uleb128 0x14
 5816 24e3 E9170000 		.4byte	.LASF762
 5817 24e7 987E     		.sleb128 -232
 5818 24e9 14       		.uleb128 0x14
 5819 24ea 1D050000 		.4byte	.LASF763
 5820 24ee D47D     		.sleb128 -300
 5821 24f0 00       		.byte	0
 5822 24f1 2A       		.uleb128 0x2a
 5823 24f2 6D696E00 		.ascii	"min\000"
 5824 24f6 01       		.byte	0x1
 5825 24f7 3B       		.byte	0x3b
 5826 24f8 040B0000 		.4byte	0xb04
 5827 24fc 03       		.byte	0x3
 5828 24fd 14250000 		.4byte	0x2514
 5829 2501 2B       		.uleb128 0x2b
 5830 2502 6100     		.ascii	"a\000"
 5831 2504 01       		.byte	0x1
 5832 2505 3B       		.byte	0x3b
 5833 2506 040B0000 		.4byte	0xb04
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 190


 5834 250a 2B       		.uleb128 0x2b
 5835 250b 6200     		.ascii	"b\000"
 5836 250d 01       		.byte	0x1
 5837 250e 3B       		.byte	0x3b
 5838 250f 040B0000 		.4byte	0xb04
 5839 2513 00       		.byte	0
 5840 2514 2C       		.uleb128 0x2c
 5841 2515 52220000 		.4byte	.LASF775
 5842 2519 01       		.byte	0x1
 5843 251a 2E02     		.2byte	0x22e
 5844 251c 03       		.byte	0x3
 5845 251d 38250000 		.4byte	0x2538
 5846 2521 2D       		.uleb128 0x2d
 5847 2522 75313600 		.ascii	"u16\000"
 5848 2526 01       		.byte	0x1
 5849 2527 2E02     		.2byte	0x22e
 5850 2529 F20A0000 		.4byte	0xaf2
 5851 252d 2D       		.uleb128 0x2d
 5852 252e 6300     		.ascii	"c\000"
 5853 2530 01       		.byte	0x1
 5854 2531 2E02     		.2byte	0x22e
 5855 2533 8E100000 		.4byte	0x108e
 5856 2537 00       		.byte	0
 5857 2538 2E       		.uleb128 0x2e
 5858 2539 E1260000 		.4byte	.LASF815
 5859 253d 01       		.byte	0x1
 5860 253e 9C01     		.2byte	0x19c
 5861 2540 99150000 		.4byte	0x1599
 5862 2544 01       		.byte	0x1
 5863 2545 55250000 		.4byte	0x2555
 5864 2549 2F       		.uleb128 0x2f
 5865 254a 707600   		.ascii	"pv\000"
 5866 254d 01       		.byte	0x1
 5867 254e 9E01     		.2byte	0x19e
 5868 2550 99150000 		.4byte	0x1599
 5869 2554 00       		.byte	0
 5870 2555 30       		.uleb128 0x30
 5871 2556 0C040000 		.4byte	.LASF764
 5872 255a 01       		.byte	0x1
 5873 255b 4A       		.byte	0x4a
 5874 255c 02070000 		.4byte	0x702
 5875 2560 01       		.byte	0x1
 5876 2561 1F260000 		.4byte	0x261f
 5877 2565 31       		.uleb128 0x31
 5878 2566 89160000 		.4byte	.LASF765
 5879 256a 01       		.byte	0x1
 5880 256b 4A       		.byte	0x4a
 5881 256c 8E100000 		.4byte	0x108e
 5882 2570 31       		.uleb128 0x31
 5883 2571 020D0000 		.4byte	.LASF766
 5884 2575 01       		.byte	0x1
 5885 2576 4A       		.byte	0x4a
 5886 2577 040B0000 		.4byte	0xb04
 5887 257b 31       		.uleb128 0x31
 5888 257c 0B110000 		.4byte	.LASF767
 5889 2580 01       		.byte	0x1
 5890 2581 4A       		.byte	0x4a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 191


 5891 2582 991B0000 		.4byte	0x1b99
 5892 2586 31       		.uleb128 0x31
 5893 2587 F9150000 		.4byte	.LASF768
 5894 258b 01       		.byte	0x1
 5895 258c 4B       		.byte	0x4b
 5896 258d 040B0000 		.4byte	0xb04
 5897 2591 31       		.uleb128 0x31
 5898 2592 621B0000 		.4byte	.LASF267
 5899 2596 01       		.byte	0x1
 5900 2597 4B       		.byte	0x4b
 5901 2598 991B0000 		.4byte	0x1b99
 5902 259c 31       		.uleb128 0x31
 5903 259d 6C020000 		.4byte	.LASF769
 5904 25a1 01       		.byte	0x1
 5905 25a2 4B       		.byte	0x4b
 5906 25a3 040B0000 		.4byte	0xb04
 5907 25a7 31       		.uleb128 0x31
 5908 25a8 2C1F0000 		.4byte	.LASF346
 5909 25ac 01       		.byte	0x1
 5910 25ad 4B       		.byte	0x4b
 5911 25ae 02070000 		.4byte	0x702
 5912 25b2 32       		.uleb128 0x32
 5913 25b3 6C656E00 		.ascii	"len\000"
 5914 25b7 01       		.byte	0x1
 5915 25b8 4D       		.byte	0x4d
 5916 25b9 040B0000 		.4byte	0xb04
 5917 25bd 33       		.uleb128 0x33
 5918 25be 8C290000 		.4byte	.LASF770
 5919 25c2 01       		.byte	0x1
 5920 25c3 4E       		.byte	0x4e
 5921 25c4 040B0000 		.4byte	0xb04
 5922 25c8 33       		.uleb128 0x33
 5923 25c9 FC170000 		.4byte	.LASF771
 5924 25cd 01       		.byte	0x1
 5925 25ce 4F       		.byte	0x4f
 5926 25cf 040B0000 		.4byte	0xb04
 5927 25d3 33       		.uleb128 0x33
 5928 25d4 2A060000 		.4byte	.LASF772
 5929 25d8 01       		.byte	0x1
 5930 25d9 50       		.byte	0x50
 5931 25da 040B0000 		.4byte	0xb04
 5932 25de 32       		.uleb128 0x32
 5933 25df 6900     		.ascii	"i\000"
 5934 25e1 01       		.byte	0x1
 5935 25e2 51       		.byte	0x51
 5936 25e3 040B0000 		.4byte	0xb04
 5937 25e7 32       		.uleb128 0x32
 5938 25e8 69647800 		.ascii	"idx\000"
 5939 25ec 01       		.byte	0x1
 5940 25ed 52       		.byte	0x52
 5941 25ee 040B0000 		.4byte	0xb04
 5942 25f2 32       		.uleb128 0x32
 5943 25f3 72657400 		.ascii	"ret\000"
 5944 25f7 01       		.byte	0x1
 5945 25f8 53       		.byte	0x53
 5946 25f9 02070000 		.4byte	0x702
 5947 25fd 33       		.uleb128 0x33
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 192


 5948 25fe 8D090000 		.4byte	.LASF773
 5949 2602 01       		.byte	0x1
 5950 2603 59       		.byte	0x59
 5951 2604 B4100000 		.4byte	0x10b4
 5952 2608 33       		.uleb128 0x33
 5953 2609 10000000 		.4byte	.LASF774
 5954 260d 01       		.byte	0x1
 5955 260e 5A       		.byte	0x5a
 5956 260f B4100000 		.4byte	0x10b4
 5957 2613 33       		.uleb128 0x33
 5958 2614 7E190000 		.4byte	.LASF11
 5959 2618 01       		.byte	0x1
 5960 2619 5B       		.byte	0x5b
 5961 261a 1F260000 		.4byte	0x261f
 5962 261e 00       		.byte	0
 5963 261f 19       		.uleb128 0x19
 5964 2620 AF110000 		.4byte	0x11af
 5965 2624 2F260000 		.4byte	0x262f
 5966 2628 1A       		.uleb128 0x1a
 5967 2629 09070000 		.4byte	0x709
 5968 262d 00       		.byte	0
 5969 262e 00       		.byte	0
 5970 262f 34       		.uleb128 0x34
 5971 2630 C1220000 		.4byte	.LASF776
 5972 2634 02       		.byte	0x2
 5973 2635 B3       		.byte	0xb3
 5974 2636 03       		.byte	0x3
 5975 2637 5B260000 		.4byte	0x265b
 5976 263b 2B       		.uleb128 0x2b
 5977 263c 6D656D00 		.ascii	"mem\000"
 5978 2640 02       		.byte	0x2
 5979 2641 B3       		.byte	0xb3
 5980 2642 440B0000 		.4byte	0xb44
 5981 2646 2B       		.uleb128 0x2b
 5982 2647 6C656E00 		.ascii	"len\000"
 5983 264b 02       		.byte	0x2
 5984 264c B3       		.byte	0xb3
 5985 264d 040B0000 		.4byte	0xb04
 5986 2651 32       		.uleb128 0x32
 5987 2652 7A00     		.ascii	"z\000"
 5988 2654 02       		.byte	0x2
 5989 2655 B5       		.byte	0xb5
 5990 2656 5B260000 		.4byte	0x265b
 5991 265a 00       		.byte	0
 5992 265b 09       		.uleb128 0x9
 5993 265c 04       		.byte	0x4
 5994 265d 61260000 		.4byte	0x2661
 5995 2661 35       		.uleb128 0x35
 5996 2662 E70A0000 		.4byte	0xae7
 5997 2666 36       		.uleb128 0x36
 5998 2667 50524600 		.ascii	"PRF\000"
 5999 266b 01       		.byte	0x1
 6000 266c 2001     		.2byte	0x120
 6001 266e 02070000 		.4byte	0x702
 6002 2672 00000000 		.4byte	.LFB14
 6003 2676 62010000 		.4byte	.LFE14-.LFB14
 6004 267a 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 193


 6005 267b 9C       		.byte	0x9c
 6006 267c 432A0000 		.4byte	0x2a43
 6007 2680 37       		.uleb128 0x37
 6008 2681 9D180000 		.4byte	.LASF262
 6009 2685 01       		.byte	0x1
 6010 2686 2001     		.2byte	0x120
 6011 2688 8E100000 		.4byte	0x108e
 6012 268c 00000000 		.4byte	.LLST0
 6013 2690 37       		.uleb128 0x37
 6014 2691 DD270000 		.4byte	.LASF777
 6015 2695 01       		.byte	0x1
 6016 2696 2001     		.2byte	0x120
 6017 2698 040B0000 		.4byte	0xb04
 6018 269c 39000000 		.4byte	.LLST1
 6019 26a0 37       		.uleb128 0x37
 6020 26a1 0B110000 		.4byte	.LASF767
 6021 26a5 01       		.byte	0x1
 6022 26a6 2001     		.2byte	0x120
 6023 26a8 991B0000 		.4byte	0x1b99
 6024 26ac 65000000 		.4byte	.LLST2
 6025 26b0 37       		.uleb128 0x37
 6026 26b1 F9150000 		.4byte	.LASF768
 6027 26b5 01       		.byte	0x1
 6028 26b6 2001     		.2byte	0x120
 6029 26b8 040B0000 		.4byte	0xb04
 6030 26bc 91000000 		.4byte	.LLST3
 6031 26c0 38       		.uleb128 0x38
 6032 26c1 201C0000 		.4byte	.LASF778
 6033 26c5 01       		.byte	0x1
 6034 26c6 2101     		.2byte	0x121
 6035 26c8 991B0000 		.4byte	0x1b99
 6036 26cc 02       		.uleb128 0x2
 6037 26cd 91       		.byte	0x91
 6038 26ce 00       		.sleb128 0
 6039 26cf 38       		.uleb128 0x38
 6040 26d0 1E090000 		.4byte	.LASF779
 6041 26d4 01       		.byte	0x1
 6042 26d5 2101     		.2byte	0x121
 6043 26d7 040B0000 		.4byte	0xb04
 6044 26db 02       		.uleb128 0x2
 6045 26dc 91       		.byte	0x91
 6046 26dd 04       		.sleb128 4
 6047 26de 38       		.uleb128 0x38
 6048 26df 621B0000 		.4byte	.LASF267
 6049 26e3 01       		.byte	0x1
 6050 26e4 2101     		.2byte	0x121
 6051 26e6 991B0000 		.4byte	0x1b99
 6052 26ea 02       		.uleb128 0x2
 6053 26eb 91       		.byte	0x91
 6054 26ec 08       		.sleb128 8
 6055 26ed 38       		.uleb128 0x38
 6056 26ee 6C020000 		.4byte	.LASF769
 6057 26f2 01       		.byte	0x1
 6058 26f3 2101     		.2byte	0x121
 6059 26f5 040B0000 		.4byte	0xb04
 6060 26f9 02       		.uleb128 0x2
 6061 26fa 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 194


 6062 26fb 0C       		.sleb128 12
 6063 26fc 38       		.uleb128 0x38
 6064 26fd B1050000 		.4byte	.LASF780
 6065 2701 01       		.byte	0x1
 6066 2702 2201     		.2byte	0x122
 6067 2704 02070000 		.4byte	0x702
 6068 2708 02       		.uleb128 0x2
 6069 2709 91       		.byte	0x91
 6070 270a 10       		.sleb128 16
 6071 270b 37       		.uleb128 0x37
 6072 270c F1180000 		.4byte	.LASF781
 6073 2710 01       		.byte	0x1
 6074 2711 2201     		.2byte	0x122
 6075 2713 02070000 		.4byte	0x702
 6076 2717 BF000000 		.4byte	.LLST4
 6077 271b 39       		.uleb128 0x39
 6078 271c 72657400 		.ascii	"ret\000"
 6079 2720 01       		.byte	0x1
 6080 2721 2401     		.2byte	0x124
 6081 2723 02070000 		.4byte	0x702
 6082 2727 EA000000 		.4byte	.LLST5
 6083 272b 3A       		.uleb128 0x3a
 6084 272c 14000000 		.4byte	.LBB21
 6085 2730 4A010000 		.4byte	.LBE21-.LBB21
 6086 2734 3B       		.uleb128 0x3b
 6087 2735 25070000 		.4byte	.LASF782
 6088 2739 01       		.byte	0x1
 6089 273a 2A01     		.2byte	0x12a
 6090 273c 432A0000 		.4byte	0x2a43
 6091 2740 03       		.uleb128 0x3
 6092 2741 91       		.byte	0x91
 6093 2742 D87C     		.sleb128 -424
 6094 2744 3C       		.uleb128 0x3c
 6095 2745 55250000 		.4byte	0x2555
 6096 2749 4C000000 		.4byte	.LBB22
 6097 274d 10010000 		.4byte	.LBE22-.LBB22
 6098 2751 01       		.byte	0x1
 6099 2752 3E01     		.2byte	0x13e
 6100 2754 FA290000 		.4byte	0x29fa
 6101 2758 3D       		.uleb128 0x3d
 6102 2759 A7250000 		.4byte	0x25a7
 6103 275d FE000000 		.4byte	.LLST6
 6104 2761 3D       		.uleb128 0x3d
 6105 2762 9C250000 		.4byte	0x259c
 6106 2766 28010000 		.4byte	.LLST7
 6107 276a 3D       		.uleb128 0x3d
 6108 276b 91250000 		.4byte	0x2591
 6109 276f 3D010000 		.4byte	.LLST8
 6110 2773 3D       		.uleb128 0x3d
 6111 2774 86250000 		.4byte	0x2586
 6112 2778 53010000 		.4byte	.LLST9
 6113 277c 3D       		.uleb128 0x3d
 6114 277d 7B250000 		.4byte	0x257b
 6115 2781 68010000 		.4byte	.LLST10
 6116 2785 3D       		.uleb128 0x3d
 6117 2786 70250000 		.4byte	0x2570
 6118 278a 7B010000 		.4byte	.LLST11
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 195


 6119 278e 3D       		.uleb128 0x3d
 6120 278f 65250000 		.4byte	0x2565
 6121 2793 8E010000 		.4byte	.LLST12
 6122 2797 3A       		.uleb128 0x3a
 6123 2798 4C000000 		.4byte	.LBB23
 6124 279c 10010000 		.4byte	.LBE23-.LBB23
 6125 27a0 3E       		.uleb128 0x3e
 6126 27a1 B2250000 		.4byte	0x25b2
 6127 27a5 A3010000 		.4byte	.LLST13
 6128 27a9 3E       		.uleb128 0x3e
 6129 27aa BD250000 		.4byte	0x25bd
 6130 27ae C3010000 		.4byte	.LLST14
 6131 27b2 3E       		.uleb128 0x3e
 6132 27b3 C8250000 		.4byte	0x25c8
 6133 27b7 F9010000 		.4byte	.LLST15
 6134 27bb 3E       		.uleb128 0x3e
 6135 27bc D3250000 		.4byte	0x25d3
 6136 27c0 2D020000 		.4byte	.LLST16
 6137 27c4 3E       		.uleb128 0x3e
 6138 27c5 DE250000 		.4byte	0x25de
 6139 27c9 52020000 		.4byte	.LLST17
 6140 27cd 3E       		.uleb128 0x3e
 6141 27ce E7250000 		.4byte	0x25e7
 6142 27d2 65020000 		.4byte	.LLST18
 6143 27d6 3E       		.uleb128 0x3e
 6144 27d7 F2250000 		.4byte	0x25f2
 6145 27db 9E020000 		.4byte	.LLST19
 6146 27df 3F       		.uleb128 0x3f
 6147 27e0 FD250000 		.4byte	0x25fd
 6148 27e4 03       		.uleb128 0x3
 6149 27e5 91       		.byte	0x91
 6150 27e6 987C     		.sleb128 -488
 6151 27e8 3F       		.uleb128 0x3f
 6152 27e9 08260000 		.4byte	0x2608
 6153 27ed 03       		.uleb128 0x3
 6154 27ee 91       		.byte	0x91
 6155 27ef B87C     		.sleb128 -456
 6156 27f1 3F       		.uleb128 0x3f
 6157 27f2 13260000 		.4byte	0x2613
 6158 27f6 03       		.uleb128 0x3
 6159 27f7 91       		.byte	0x91
 6160 27f8 D87D     		.sleb128 -296
 6161 27fa 40       		.uleb128 0x40
 6162 27fb F1240000 		.4byte	0x24f1
 6163 27ff E8000000 		.4byte	.LBB24
 6164 2803 08000000 		.4byte	.LBE24-.LBB24
 6165 2807 01       		.byte	0x1
 6166 2808 A2       		.byte	0xa2
 6167 2809 20280000 		.4byte	0x2820
 6168 280d 3D       		.uleb128 0x3d
 6169 280e 0A250000 		.4byte	0x250a
 6170 2812 4E030000 		.4byte	.LLST20
 6171 2816 3D       		.uleb128 0x3d
 6172 2817 01250000 		.4byte	0x2501
 6173 281b 63030000 		.4byte	.LLST21
 6174 281f 00       		.byte	0
 6175 2820 40       		.uleb128 0x40
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 196


 6176 2821 2F260000 		.4byte	0x262f
 6177 2825 30010000 		.4byte	.LBB26
 6178 2829 10000000 		.4byte	.LBE26-.LBB26
 6179 282d 01       		.byte	0x1
 6180 282e B3       		.byte	0xb3
 6181 282f 59280000 		.4byte	0x2859
 6182 2833 3D       		.uleb128 0x3d
 6183 2834 46260000 		.4byte	0x2646
 6184 2838 8C030000 		.4byte	.LLST22
 6185 283c 3D       		.uleb128 0x3d
 6186 283d 3B260000 		.4byte	0x263b
 6187 2841 CF030000 		.4byte	.LLST23
 6188 2845 3A       		.uleb128 0x3a
 6189 2846 30010000 		.4byte	.LBB27
 6190 284a 10000000 		.4byte	.LBE27-.LBB27
 6191 284e 3E       		.uleb128 0x3e
 6192 284f 51260000 		.4byte	0x2651
 6193 2853 FE030000 		.4byte	.LLST24
 6194 2857 00       		.byte	0
 6195 2858 00       		.byte	0
 6196 2859 40       		.uleb128 0x40
 6197 285a 2F260000 		.4byte	0x262f
 6198 285e 40010000 		.4byte	.LBB28
 6199 2862 08000000 		.4byte	.LBE28-.LBB28
 6200 2866 01       		.byte	0x1
 6201 2867 B4       		.byte	0xb4
 6202 2868 8E280000 		.4byte	0x288e
 6203 286c 3D       		.uleb128 0x3d
 6204 286d 46260000 		.4byte	0x2646
 6205 2871 33040000 		.4byte	.LLST25
 6206 2875 41       		.uleb128 0x41
 6207 2876 3B260000 		.4byte	0x263b
 6208 287a 3A       		.uleb128 0x3a
 6209 287b 40010000 		.4byte	.LBB29
 6210 287f 08000000 		.4byte	.LBE29-.LBB29
 6211 2883 3E       		.uleb128 0x3e
 6212 2884 51260000 		.4byte	0x2651
 6213 2888 69040000 		.4byte	.LLST26
 6214 288c 00       		.byte	0
 6215 288d 00       		.byte	0
 6216 288e 40       		.uleb128 0x40
 6217 288f 2F260000 		.4byte	0x262f
 6218 2893 48010000 		.4byte	.LBB30
 6219 2897 14000000 		.4byte	.LBE30-.LBB30
 6220 289b 01       		.byte	0x1
 6221 289c B5       		.byte	0xb5
 6222 289d C3280000 		.4byte	0x28c3
 6223 28a1 3D       		.uleb128 0x3d
 6224 28a2 46260000 		.4byte	0x2646
 6225 28a6 90040000 		.4byte	.LLST27
 6226 28aa 41       		.uleb128 0x41
 6227 28ab 3B260000 		.4byte	0x263b
 6228 28af 3A       		.uleb128 0x3a
 6229 28b0 48010000 		.4byte	.LBB31
 6230 28b4 14000000 		.4byte	.LBE31-.LBB31
 6231 28b8 3E       		.uleb128 0x3e
 6232 28b9 51260000 		.4byte	0x2651
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 197


 6233 28bd DC040000 		.4byte	.LLST28
 6234 28c1 00       		.byte	0
 6235 28c2 00       		.byte	0
 6236 28c3 42       		.uleb128 0x42
 6237 28c4 86000000 		.4byte	.LVL19
 6238 28c8 05350000 		.4byte	0x3505
 6239 28cc EC280000 		.4byte	0x28ec
 6240 28d0 43       		.uleb128 0x43
 6241 28d1 01       		.uleb128 0x1
 6242 28d2 53       		.byte	0x53
 6243 28d3 04       		.uleb128 0x4
 6244 28d4 91       		.byte	0x91
 6245 28d5 907C     		.sleb128 -496
 6246 28d7 06       		.byte	0x6
 6247 28d8 43       		.uleb128 0x43
 6248 28d9 01       		.uleb128 0x1
 6249 28da 52       		.byte	0x52
 6250 28db 02       		.uleb128 0x2
 6251 28dc 76       		.byte	0x76
 6252 28dd 00       		.sleb128 0
 6253 28de 43       		.uleb128 0x43
 6254 28df 01       		.uleb128 0x1
 6255 28e0 51       		.byte	0x51
 6256 28e1 02       		.uleb128 0x2
 6257 28e2 74       		.byte	0x74
 6258 28e3 00       		.sleb128 0
 6259 28e4 43       		.uleb128 0x43
 6260 28e5 01       		.uleb128 0x1
 6261 28e6 50       		.byte	0x50
 6262 28e7 03       		.uleb128 0x3
 6263 28e8 91       		.byte	0x91
 6264 28e9 D87D     		.sleb128 -296
 6265 28eb 00       		.byte	0
 6266 28ec 42       		.uleb128 0x42
 6267 28ed 94000000 		.4byte	.LVL22
 6268 28f1 2F350000 		.4byte	0x352f
 6269 28f5 10290000 		.4byte	0x2910
 6270 28f9 43       		.uleb128 0x43
 6271 28fa 01       		.uleb128 0x1
 6272 28fb 52       		.byte	0x52
 6273 28fc 04       		.uleb128 0x4
 6274 28fd 91       		.byte	0x91
 6275 28fe 8C7C     		.sleb128 -500
 6276 2900 06       		.byte	0x6
 6277 2901 43       		.uleb128 0x43
 6278 2902 01       		.uleb128 0x1
 6279 2903 51       		.byte	0x51
 6280 2904 03       		.uleb128 0x3
 6281 2905 91       		.byte	0x91
 6282 2906 D87C     		.sleb128 -424
 6283 2908 43       		.uleb128 0x43
 6284 2909 01       		.uleb128 0x1
 6285 290a 50       		.byte	0x50
 6286 290b 03       		.uleb128 0x3
 6287 290c 91       		.byte	0x91
 6288 290d D87D     		.sleb128 -296
 6289 290f 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 198


 6290 2910 42       		.uleb128 0x42
 6291 2911 A0000000 		.4byte	.LVL25
 6292 2915 4E350000 		.4byte	0x354e
 6293 2919 2C290000 		.4byte	0x292c
 6294 291d 43       		.uleb128 0x43
 6295 291e 01       		.uleb128 0x1
 6296 291f 51       		.byte	0x51
 6297 2920 03       		.uleb128 0x3
 6298 2921 91       		.byte	0x91
 6299 2922 987C     		.sleb128 -488
 6300 2924 43       		.uleb128 0x43
 6301 2925 01       		.uleb128 0x1
 6302 2926 50       		.byte	0x50
 6303 2927 03       		.uleb128 0x3
 6304 2928 91       		.byte	0x91
 6305 2929 D87D     		.sleb128 -296
 6306 292b 00       		.byte	0
 6307 292c 42       		.uleb128 0x42
 6308 292d B8000000 		.4byte	.LVL29
 6309 2931 2F350000 		.4byte	0x352f
 6310 2935 4E290000 		.4byte	0x294e
 6311 2939 43       		.uleb128 0x43
 6312 293a 01       		.uleb128 0x1
 6313 293b 52       		.byte	0x52
 6314 293c 02       		.uleb128 0x2
 6315 293d 77       		.byte	0x77
 6316 293e 00       		.sleb128 0
 6317 293f 43       		.uleb128 0x43
 6318 2940 01       		.uleb128 0x1
 6319 2941 51       		.byte	0x51
 6320 2942 03       		.uleb128 0x3
 6321 2943 91       		.byte	0x91
 6322 2944 987C     		.sleb128 -488
 6323 2946 43       		.uleb128 0x43
 6324 2947 01       		.uleb128 0x1
 6325 2948 50       		.byte	0x50
 6326 2949 03       		.uleb128 0x3
 6327 294a 91       		.byte	0x91
 6328 294b D87D     		.sleb128 -296
 6329 294d 00       		.byte	0
 6330 294e 42       		.uleb128 0x42
 6331 294f C6000000 		.4byte	.LVL31
 6332 2953 2F350000 		.4byte	0x352f
 6333 2957 72290000 		.4byte	0x2972
 6334 295b 43       		.uleb128 0x43
 6335 295c 01       		.uleb128 0x1
 6336 295d 52       		.byte	0x52
 6337 295e 04       		.uleb128 0x4
 6338 295f 91       		.byte	0x91
 6339 2960 8C7C     		.sleb128 -500
 6340 2962 06       		.byte	0x6
 6341 2963 43       		.uleb128 0x43
 6342 2964 01       		.uleb128 0x1
 6343 2965 51       		.byte	0x51
 6344 2966 03       		.uleb128 0x3
 6345 2967 91       		.byte	0x91
 6346 2968 D87C     		.sleb128 -424
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 199


 6347 296a 43       		.uleb128 0x43
 6348 296b 01       		.uleb128 0x1
 6349 296c 50       		.byte	0x50
 6350 296d 03       		.uleb128 0x3
 6351 296e 91       		.byte	0x91
 6352 296f D87D     		.sleb128 -296
 6353 2971 00       		.byte	0
 6354 2972 42       		.uleb128 0x42
 6355 2973 D2000000 		.4byte	.LVL33
 6356 2977 4E350000 		.4byte	0x354e
 6357 297b 8E290000 		.4byte	0x298e
 6358 297f 43       		.uleb128 0x43
 6359 2980 01       		.uleb128 0x1
 6360 2981 51       		.byte	0x51
 6361 2982 03       		.uleb128 0x3
 6362 2983 91       		.byte	0x91
 6363 2984 B87C     		.sleb128 -456
 6364 2986 43       		.uleb128 0x43
 6365 2987 01       		.uleb128 0x1
 6366 2988 50       		.byte	0x50
 6367 2989 03       		.uleb128 0x3
 6368 298a 91       		.byte	0x91
 6369 298b D87D     		.sleb128 -296
 6370 298d 00       		.byte	0
 6371 298e 42       		.uleb128 0x42
 6372 298f F6000000 		.4byte	.LVL38
 6373 2993 68350000 		.4byte	0x3568
 6374 2997 A3290000 		.4byte	0x29a3
 6375 299b 43       		.uleb128 0x43
 6376 299c 01       		.uleb128 0x1
 6377 299d 51       		.byte	0x51
 6378 299e 03       		.uleb128 0x3
 6379 299f 91       		.byte	0x91
 6380 29a0 B87C     		.sleb128 -456
 6381 29a2 00       		.byte	0
 6382 29a3 42       		.uleb128 0x42
 6383 29a4 00010000 		.4byte	.LVL40
 6384 29a8 68350000 		.4byte	0x3568
 6385 29ac BE290000 		.4byte	0x29be
 6386 29b0 43       		.uleb128 0x43
 6387 29b1 01       		.uleb128 0x1
 6388 29b2 52       		.byte	0x52
 6389 29b3 02       		.uleb128 0x2
 6390 29b4 77       		.byte	0x77
 6391 29b5 00       		.sleb128 0
 6392 29b6 43       		.uleb128 0x43
 6393 29b7 01       		.uleb128 0x1
 6394 29b8 51       		.byte	0x51
 6395 29b9 03       		.uleb128 0x3
 6396 29ba 91       		.byte	0x91
 6397 29bb B87C     		.sleb128 -456
 6398 29bd 00       		.byte	0
 6399 29be 42       		.uleb128 0x42
 6400 29bf 10010000 		.4byte	.LVL42
 6401 29c3 2F350000 		.4byte	0x352f
 6402 29c7 E0290000 		.4byte	0x29e0
 6403 29cb 43       		.uleb128 0x43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 200


 6404 29cc 01       		.uleb128 0x1
 6405 29cd 52       		.byte	0x52
 6406 29ce 02       		.uleb128 0x2
 6407 29cf 77       		.byte	0x77
 6408 29d0 00       		.sleb128 0
 6409 29d1 43       		.uleb128 0x43
 6410 29d2 01       		.uleb128 0x1
 6411 29d3 51       		.byte	0x51
 6412 29d4 03       		.uleb128 0x3
 6413 29d5 91       		.byte	0x91
 6414 29d6 987C     		.sleb128 -488
 6415 29d8 43       		.uleb128 0x43
 6416 29d9 01       		.uleb128 0x1
 6417 29da 50       		.byte	0x50
 6418 29db 03       		.uleb128 0x3
 6419 29dc 91       		.byte	0x91
 6420 29dd D87D     		.sleb128 -296
 6421 29df 00       		.byte	0
 6422 29e0 44       		.uleb128 0x44
 6423 29e1 1C010000 		.4byte	.LVL44
 6424 29e5 4E350000 		.4byte	0x354e
 6425 29e9 43       		.uleb128 0x43
 6426 29ea 01       		.uleb128 0x1
 6427 29eb 51       		.byte	0x51
 6428 29ec 03       		.uleb128 0x3
 6429 29ed 91       		.byte	0x91
 6430 29ee 987C     		.sleb128 -488
 6431 29f0 43       		.uleb128 0x43
 6432 29f1 01       		.uleb128 0x1
 6433 29f2 50       		.byte	0x50
 6434 29f3 03       		.uleb128 0x3
 6435 29f4 91       		.byte	0x91
 6436 29f5 D87D     		.sleb128 -296
 6437 29f7 00       		.byte	0
 6438 29f8 00       		.byte	0
 6439 29f9 00       		.byte	0
 6440 29fa 42       		.uleb128 0x42
 6441 29fb 38000000 		.4byte	.LVL5
 6442 29ff 68350000 		.4byte	0x3568
 6443 2a03 1C2A0000 		.4byte	0x2a1c
 6444 2a07 43       		.uleb128 0x43
 6445 2a08 01       		.uleb128 0x1
 6446 2a09 52       		.byte	0x52
 6447 2a0a 02       		.uleb128 0x2
 6448 2a0b 74       		.byte	0x74
 6449 2a0c 00       		.sleb128 0
 6450 2a0d 43       		.uleb128 0x43
 6451 2a0e 01       		.uleb128 0x1
 6452 2a0f 51       		.byte	0x51
 6453 2a10 03       		.uleb128 0x3
 6454 2a11 91       		.byte	0x91
 6455 2a12 00       		.sleb128 0
 6456 2a13 06       		.byte	0x6
 6457 2a14 43       		.uleb128 0x43
 6458 2a15 01       		.uleb128 0x1
 6459 2a16 50       		.byte	0x50
 6460 2a17 03       		.uleb128 0x3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 201


 6461 2a18 91       		.byte	0x91
 6462 2a19 D87C     		.sleb128 -424
 6463 2a1b 00       		.byte	0
 6464 2a1c 44       		.uleb128 0x44
 6465 2a1d 44000000 		.4byte	.LVL6
 6466 2a21 68350000 		.4byte	0x3568
 6467 2a25 43       		.uleb128 0x43
 6468 2a26 01       		.uleb128 0x1
 6469 2a27 52       		.byte	0x52
 6470 2a28 03       		.uleb128 0x3
 6471 2a29 91       		.byte	0x91
 6472 2a2a 0C       		.sleb128 12
 6473 2a2b 06       		.byte	0x6
 6474 2a2c 43       		.uleb128 0x43
 6475 2a2d 01       		.uleb128 0x1
 6476 2a2e 51       		.byte	0x51
 6477 2a2f 03       		.uleb128 0x3
 6478 2a30 91       		.byte	0x91
 6479 2a31 08       		.sleb128 8
 6480 2a32 06       		.byte	0x6
 6481 2a33 43       		.uleb128 0x43
 6482 2a34 01       		.uleb128 0x1
 6483 2a35 50       		.byte	0x50
 6484 2a36 09       		.uleb128 0x9
 6485 2a37 91       		.byte	0x91
 6486 2a38 00       		.sleb128 0
 6487 2a39 74       		.byte	0x74
 6488 2a3a 00       		.sleb128 0
 6489 2a3b 22       		.byte	0x22
 6490 2a3c 0A       		.byte	0xa
 6491 2a3d A801     		.2byte	0x1a8
 6492 2a3f 1C       		.byte	0x1c
 6493 2a40 00       		.byte	0
 6494 2a41 00       		.byte	0
 6495 2a42 00       		.byte	0
 6496 2a43 19       		.uleb128 0x19
 6497 2a44 E70A0000 		.4byte	0xae7
 6498 2a48 532A0000 		.4byte	0x2a53
 6499 2a4c 1A       		.uleb128 0x1a
 6500 2a4d 09070000 		.4byte	0x709
 6501 2a51 7F       		.byte	0x7f
 6502 2a52 00       		.byte	0
 6503 2a53 45       		.uleb128 0x45
 6504 2a54 160B0000 		.4byte	.LASF787
 6505 2a58 01       		.byte	0x1
 6506 2a59 5701     		.2byte	0x157
 6507 2a5b 02070000 		.4byte	0x702
 6508 2a5f 00000000 		.4byte	.LFB15
 6509 2a63 84000000 		.4byte	.LFE15-.LFB15
 6510 2a67 01       		.uleb128 0x1
 6511 2a68 9C       		.byte	0x9c
 6512 2a69 802B0000 		.4byte	0x2b80
 6513 2a6d 46       		.uleb128 0x46
 6514 2a6e 73736C00 		.ascii	"ssl\000"
 6515 2a72 01       		.byte	0x1
 6516 2a73 5701     		.2byte	0x157
 6517 2a75 A6090000 		.4byte	0x9a6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 202


 6518 2a79 0E050000 		.4byte	.LLST29
 6519 2a7d 37       		.uleb128 0x37
 6520 2a7e 931B0000 		.4byte	.LASF783
 6521 2a82 01       		.byte	0x1
 6522 2a83 5701     		.2byte	0x157
 6523 2a85 802B0000 		.4byte	0x2b80
 6524 2a89 3A050000 		.4byte	.LLST30
 6525 2a8d 37       		.uleb128 0x37
 6526 2a8e DE0E0000 		.4byte	.LASF784
 6527 2a92 01       		.byte	0x1
 6528 2a93 5701     		.2byte	0x157
 6529 2a95 991B0000 		.4byte	0x1b99
 6530 2a99 5A050000 		.4byte	.LLST31
 6531 2a9d 47       		.uleb128 0x47
 6532 2a9e 732B0000 		.4byte	.LASF39
 6533 2aa2 01       		.byte	0x1
 6534 2aa3 5901     		.2byte	0x159
 6535 2aa5 991B0000 		.4byte	0x1b99
 6536 2aa9 86050000 		.4byte	.LLST32
 6537 2aad 3B       		.uleb128 0x3b
 6538 2aae E4270000 		.4byte	.LASF785
 6539 2ab2 01       		.byte	0x1
 6540 2ab3 5A01     		.2byte	0x15a
 6541 2ab5 862B0000 		.4byte	0x2b86
 6542 2ab9 02       		.uleb128 0x2
 6543 2aba 91       		.byte	0x91
 6544 2abb 44       		.sleb128 -60
 6545 2abc 47       		.uleb128 0x47
 6546 2abd 0A130000 		.4byte	.LASF786
 6547 2ac1 01       		.byte	0x1
 6548 2ac2 5B01     		.2byte	0x15b
 6549 2ac4 040B0000 		.4byte	0xb04
 6550 2ac8 99050000 		.4byte	.LLST33
 6551 2acc 48       		.uleb128 0x48
 6552 2acd 22000000 		.4byte	.LBB32
 6553 2ad1 12000000 		.4byte	.LBE32-.LBB32
 6554 2ad5 FA2A0000 		.4byte	0x2afa
 6555 2ad9 39       		.uleb128 0x39
 6556 2ada 72657400 		.ascii	"ret\000"
 6557 2ade 01       		.byte	0x1
 6558 2adf 6501     		.2byte	0x165
 6559 2ae1 02070000 		.4byte	0x702
 6560 2ae5 B9050000 		.4byte	.LLST34
 6561 2ae9 44       		.uleb128 0x44
 6562 2aea 2C000000 		.4byte	.LVL67
 6563 2aee 85350000 		.4byte	0x3585
 6564 2af2 43       		.uleb128 0x43
 6565 2af3 01       		.uleb128 0x1
 6566 2af4 51       		.byte	0x51
 6567 2af5 02       		.uleb128 0x2
 6568 2af6 91       		.byte	0x91
 6569 2af7 44       		.sleb128 -60
 6570 2af8 00       		.byte	0
 6571 2af9 00       		.byte	0
 6572 2afa 42       		.uleb128 0x42
 6573 2afb 0E000000 		.4byte	.LVL66
 6574 2aff A5350000 		.4byte	0x35a5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 203


 6575 2b03 0E2B0000 		.4byte	0x2b0e
 6576 2b07 43       		.uleb128 0x43
 6577 2b08 01       		.uleb128 0x1
 6578 2b09 50       		.byte	0x50
 6579 2b0a 02       		.uleb128 0x2
 6580 2b0b 74       		.byte	0x74
 6581 2b0c 00       		.sleb128 0
 6582 2b0d 00       		.byte	0
 6583 2b0e 42       		.uleb128 0x42
 6584 2b0f 44000000 		.4byte	.LVL70
 6585 2b13 C6350000 		.4byte	0x35c6
 6586 2b17 2D2B0000 		.4byte	0x2b2d
 6587 2b1b 43       		.uleb128 0x43
 6588 2b1c 01       		.uleb128 0x1
 6589 2b1d 52       		.byte	0x52
 6590 2b1e 01       		.uleb128 0x1
 6591 2b1f 34       		.byte	0x34
 6592 2b20 43       		.uleb128 0x43
 6593 2b21 01       		.uleb128 0x1
 6594 2b22 51       		.byte	0x51
 6595 2b23 02       		.uleb128 0x2
 6596 2b24 75       		.byte	0x75
 6597 2b25 20       		.sleb128 32
 6598 2b26 43       		.uleb128 0x43
 6599 2b27 01       		.uleb128 0x1
 6600 2b28 50       		.byte	0x50
 6601 2b29 02       		.uleb128 0x2
 6602 2b2a 77       		.byte	0x77
 6603 2b2b 00       		.sleb128 0
 6604 2b2c 00       		.byte	0
 6605 2b2d 42       		.uleb128 0x42
 6606 2b2e 56000000 		.4byte	.LVL73
 6607 2b32 A5350000 		.4byte	0x35a5
 6608 2b36 412B0000 		.4byte	0x2b41
 6609 2b3a 43       		.uleb128 0x43
 6610 2b3b 01       		.uleb128 0x1
 6611 2b3c 50       		.byte	0x50
 6612 2b3d 02       		.uleb128 0x2
 6613 2b3e 74       		.byte	0x74
 6614 2b3f 00       		.sleb128 0
 6615 2b40 00       		.byte	0
 6616 2b41 44       		.uleb128 0x44
 6617 2b42 78000000 		.4byte	.LVL74
 6618 2b46 66260000 		.4byte	0x2666
 6619 2b4a 43       		.uleb128 0x43
 6620 2b4b 01       		.uleb128 0x1
 6621 2b4c 53       		.byte	0x53
 6622 2b4d 02       		.uleb128 0x2
 6623 2b4e 08       		.byte	0x8
 6624 2b4f 30       		.byte	0x30
 6625 2b50 43       		.uleb128 0x43
 6626 2b51 01       		.uleb128 0x1
 6627 2b52 52       		.byte	0x52
 6628 2b53 02       		.uleb128 0x2
 6629 2b54 77       		.byte	0x77
 6630 2b55 00       		.sleb128 0
 6631 2b56 43       		.uleb128 0x43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 204


 6632 2b57 01       		.uleb128 0x1
 6633 2b58 51       		.byte	0x51
 6634 2b59 01       		.uleb128 0x1
 6635 2b5a 3C       		.byte	0x3c
 6636 2b5b 43       		.uleb128 0x43
 6637 2b5c 01       		.uleb128 0x1
 6638 2b5d 50       		.byte	0x50
 6639 2b5e 04       		.uleb128 0x4
 6640 2b5f 91       		.byte	0x91
 6641 2b60 BC7F     		.sleb128 -68
 6642 2b62 06       		.byte	0x6
 6643 2b63 43       		.uleb128 0x43
 6644 2b64 02       		.uleb128 0x2
 6645 2b65 7D       		.byte	0x7d
 6646 2b66 0C       		.sleb128 12
 6647 2b67 02       		.uleb128 0x2
 6648 2b68 76       		.byte	0x76
 6649 2b69 00       		.sleb128 0
 6650 2b6a 43       		.uleb128 0x43
 6651 2b6b 02       		.uleb128 0x2
 6652 2b6c 7D       		.byte	0x7d
 6653 2b6d 08       		.sleb128 8
 6654 2b6e 02       		.uleb128 0x2
 6655 2b6f 91       		.byte	0x91
 6656 2b70 44       		.sleb128 -60
 6657 2b71 43       		.uleb128 0x43
 6658 2b72 02       		.uleb128 0x2
 6659 2b73 7D       		.byte	0x7d
 6660 2b74 04       		.sleb128 4
 6661 2b75 01       		.uleb128 0x1
 6662 2b76 3F       		.byte	0x3f
 6663 2b77 43       		.uleb128 0x43
 6664 2b78 02       		.uleb128 0x2
 6665 2b79 7D       		.byte	0x7d
 6666 2b7a 00       		.sleb128 0
 6667 2b7b 02       		.uleb128 0x2
 6668 2b7c 75       		.byte	0x75
 6669 2b7d 00       		.sleb128 0
 6670 2b7e 00       		.byte	0
 6671 2b7f 00       		.byte	0
 6672 2b80 09       		.uleb128 0x9
 6673 2b81 04       		.byte	0x4
 6674 2b82 431B0000 		.4byte	0x1b43
 6675 2b86 19       		.uleb128 0x19
 6676 2b87 E70A0000 		.4byte	0xae7
 6677 2b8b 962B0000 		.4byte	0x2b96
 6678 2b8f 1A       		.uleb128 0x1a
 6679 2b90 09070000 		.4byte	0x709
 6680 2b94 23       		.byte	0x23
 6681 2b95 00       		.byte	0
 6682 2b96 49       		.uleb128 0x49
 6683 2b97 38250000 		.4byte	0x2538
 6684 2b9b 00000000 		.4byte	.LFB16
 6685 2b9f 10000000 		.4byte	.LFE16-.LFB16
 6686 2ba3 01       		.uleb128 0x1
 6687 2ba4 9C       		.byte	0x9c
 6688 2ba5 B82B0000 		.4byte	0x2bb8
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 205


 6689 2ba9 3F       		.uleb128 0x3f
 6690 2baa 49250000 		.4byte	0x2549
 6691 2bae 08       		.uleb128 0x8
 6692 2baf 33       		.byte	0x33
 6693 2bb0 9F       		.byte	0x9f
 6694 2bb1 93       		.byte	0x93
 6695 2bb2 01       		.uleb128 0x1
 6696 2bb3 33       		.byte	0x33
 6697 2bb4 9F       		.byte	0x9f
 6698 2bb5 93       		.byte	0x93
 6699 2bb6 01       		.uleb128 0x1
 6700 2bb7 00       		.byte	0
 6701 2bb8 45       		.uleb128 0x45
 6702 2bb9 71080000 		.4byte	.LASF788
 6703 2bbd 01       		.byte	0x1
 6704 2bbe AB01     		.2byte	0x1ab
 6705 2bc0 02070000 		.4byte	0x702
 6706 2bc4 00000000 		.4byte	.LFB17
 6707 2bc8 50000000 		.4byte	.LFE17-.LFB17
 6708 2bcc 01       		.uleb128 0x1
 6709 2bcd 9C       		.byte	0x9c
 6710 2bce F22C0000 		.4byte	0x2cf2
 6711 2bd2 37       		.uleb128 0x37
 6712 2bd3 03230000 		.4byte	.LASF789
 6713 2bd7 01       		.byte	0x1
 6714 2bd8 AB01     		.2byte	0x1ab
 6715 2bda 8E100000 		.4byte	0x108e
 6716 2bde CC050000 		.4byte	.LLST35
 6717 2be2 37       		.uleb128 0x37
 6718 2be3 F5170000 		.4byte	.LASF790
 6719 2be7 01       		.byte	0x1
 6720 2be8 AB01     		.2byte	0x1ab
 6721 2bea 040B0000 		.4byte	0xb04
 6722 2bee F8050000 		.4byte	.LLST36
 6723 2bf2 46       		.uleb128 0x46
 6724 2bf3 6D7300   		.ascii	"ms\000"
 6725 2bf6 01       		.byte	0x1
 6726 2bf7 AC01     		.2byte	0x1ac
 6727 2bf9 991B0000 		.4byte	0x1b99
 6728 2bfd 24060000 		.4byte	.LLST37
 6729 2c01 37       		.uleb128 0x37
 6730 2c02 90160000 		.4byte	.LASF791
 6731 2c06 01       		.byte	0x1
 6732 2c07 AC01     		.2byte	0x1ac
 6733 2c09 040B0000 		.4byte	0xb04
 6734 2c0d 44060000 		.4byte	.LLST38
 6735 2c11 4A       		.uleb128 0x4a
 6736 2c12 737200   		.ascii	"sr\000"
 6737 2c15 01       		.byte	0x1
 6738 2c16 AD01     		.2byte	0x1ad
 6739 2c18 991B0000 		.4byte	0x1b99
 6740 2c1c 02       		.uleb128 0x2
 6741 2c1d 91       		.byte	0x91
 6742 2c1e 00       		.sleb128 0
 6743 2c1f 4A       		.uleb128 0x4a
 6744 2c20 637200   		.ascii	"cr\000"
 6745 2c23 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 206


 6746 2c24 AD01     		.2byte	0x1ad
 6747 2c26 991B0000 		.4byte	0x1b99
 6748 2c2a 02       		.uleb128 0x2
 6749 2c2b 91       		.byte	0x91
 6750 2c2c 04       		.sleb128 4
 6751 2c2d 38       		.uleb128 0x38
 6752 2c2e 74160000 		.4byte	.LASF792
 6753 2c32 01       		.byte	0x1
 6754 2c33 AE01     		.2byte	0x1ae
 6755 2c35 02070000 		.4byte	0x702
 6756 2c39 02       		.uleb128 0x2
 6757 2c3a 91       		.byte	0x91
 6758 2c3b 08       		.sleb128 8
 6759 2c3c 38       		.uleb128 0x38
 6760 2c3d F1180000 		.4byte	.LASF781
 6761 2c41 01       		.byte	0x1
 6762 2c42 AE01     		.2byte	0x1ae
 6763 2c44 02070000 		.4byte	0x702
 6764 2c48 02       		.uleb128 0x2
 6765 2c49 91       		.byte	0x91
 6766 2c4a 0C       		.sleb128 12
 6767 2c4b 3B       		.uleb128 0x3b
 6768 2c4c 621B0000 		.4byte	.LASF267
 6769 2c50 01       		.byte	0x1
 6770 2c51 B001     		.2byte	0x1b0
 6771 2c53 F22C0000 		.4byte	0x2cf2
 6772 2c57 03       		.uleb128 0x3
 6773 2c58 91       		.byte	0x91
 6774 2c59 A87F     		.sleb128 -88
 6775 2c5b 42       		.uleb128 0x42
 6776 2c5c 1A000000 		.4byte	.LVL81
 6777 2c60 68350000 		.4byte	0x3568
 6778 2c64 7C2C0000 		.4byte	0x2c7c
 6779 2c68 43       		.uleb128 0x43
 6780 2c69 01       		.uleb128 0x1
 6781 2c6a 52       		.byte	0x52
 6782 2c6b 02       		.uleb128 0x2
 6783 2c6c 74       		.byte	0x74
 6784 2c6d 00       		.sleb128 0
 6785 2c6e 43       		.uleb128 0x43
 6786 2c6f 01       		.uleb128 0x1
 6787 2c70 51       		.byte	0x51
 6788 2c71 03       		.uleb128 0x3
 6789 2c72 91       		.byte	0x91
 6790 2c73 00       		.sleb128 0
 6791 2c74 06       		.byte	0x6
 6792 2c75 43       		.uleb128 0x43
 6793 2c76 01       		.uleb128 0x1
 6794 2c77 50       		.byte	0x50
 6795 2c78 02       		.uleb128 0x2
 6796 2c79 75       		.byte	0x75
 6797 2c7a 00       		.sleb128 0
 6798 2c7b 00       		.byte	0
 6799 2c7c 42       		.uleb128 0x42
 6800 2c7d 24000000 		.4byte	.LVL82
 6801 2c81 68350000 		.4byte	0x3568
 6802 2c85 9D2C0000 		.4byte	0x2c9d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 207


 6803 2c89 43       		.uleb128 0x43
 6804 2c8a 01       		.uleb128 0x1
 6805 2c8b 52       		.byte	0x52
 6806 2c8c 02       		.uleb128 0x2
 6807 2c8d 74       		.byte	0x74
 6808 2c8e 00       		.sleb128 0
 6809 2c8f 43       		.uleb128 0x43
 6810 2c90 01       		.uleb128 0x1
 6811 2c91 51       		.byte	0x51
 6812 2c92 03       		.uleb128 0x3
 6813 2c93 91       		.byte	0x91
 6814 2c94 04       		.sleb128 4
 6815 2c95 06       		.byte	0x6
 6816 2c96 43       		.uleb128 0x43
 6817 2c97 01       		.uleb128 0x1
 6818 2c98 50       		.byte	0x50
 6819 2c99 02       		.uleb128 0x2
 6820 2c9a 91       		.byte	0x91
 6821 2c9b 48       		.sleb128 -56
 6822 2c9c 00       		.byte	0
 6823 2c9d 44       		.uleb128 0x44
 6824 2c9e 48000000 		.4byte	.LVL83
 6825 2ca2 66260000 		.4byte	0x2666
 6826 2ca6 43       		.uleb128 0x43
 6827 2ca7 01       		.uleb128 0x1
 6828 2ca8 53       		.byte	0x53
 6829 2ca9 04       		.uleb128 0x4
 6830 2caa 91       		.byte	0x91
 6831 2cab A47F     		.sleb128 -92
 6832 2cad 06       		.byte	0x6
 6833 2cae 43       		.uleb128 0x43
 6834 2caf 01       		.uleb128 0x1
 6835 2cb0 52       		.byte	0x52
 6836 2cb1 04       		.uleb128 0x4
 6837 2cb2 91       		.byte	0x91
 6838 2cb3 A07F     		.sleb128 -96
 6839 2cb5 06       		.byte	0x6
 6840 2cb6 43       		.uleb128 0x43
 6841 2cb7 01       		.uleb128 0x1
 6842 2cb8 51       		.byte	0x51
 6843 2cb9 02       		.uleb128 0x2
 6844 2cba 76       		.byte	0x76
 6845 2cbb 00       		.sleb128 0
 6846 2cbc 43       		.uleb128 0x43
 6847 2cbd 01       		.uleb128 0x1
 6848 2cbe 50       		.byte	0x50
 6849 2cbf 02       		.uleb128 0x2
 6850 2cc0 77       		.byte	0x77
 6851 2cc1 00       		.sleb128 0
 6852 2cc2 43       		.uleb128 0x43
 6853 2cc3 02       		.uleb128 0x2
 6854 2cc4 7D       		.byte	0x7d
 6855 2cc5 14       		.sleb128 20
 6856 2cc6 03       		.uleb128 0x3
 6857 2cc7 91       		.byte	0x91
 6858 2cc8 0C       		.sleb128 12
 6859 2cc9 06       		.byte	0x6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 208


 6860 2cca 43       		.uleb128 0x43
 6861 2ccb 02       		.uleb128 0x2
 6862 2ccc 7D       		.byte	0x7d
 6863 2ccd 10       		.sleb128 16
 6864 2cce 03       		.uleb128 0x3
 6865 2ccf 91       		.byte	0x91
 6866 2cd0 08       		.sleb128 8
 6867 2cd1 06       		.byte	0x6
 6868 2cd2 43       		.uleb128 0x43
 6869 2cd3 02       		.uleb128 0x2
 6870 2cd4 7D       		.byte	0x7d
 6871 2cd5 0C       		.sleb128 12
 6872 2cd6 02       		.uleb128 0x2
 6873 2cd7 08       		.byte	0x8
 6874 2cd8 40       		.byte	0x40
 6875 2cd9 43       		.uleb128 0x43
 6876 2cda 02       		.uleb128 0x2
 6877 2cdb 7D       		.byte	0x7d
 6878 2cdc 08       		.sleb128 8
 6879 2cdd 02       		.uleb128 0x2
 6880 2cde 75       		.byte	0x75
 6881 2cdf 00       		.sleb128 0
 6882 2ce0 43       		.uleb128 0x43
 6883 2ce1 02       		.uleb128 0x2
 6884 2ce2 7D       		.byte	0x7d
 6885 2ce3 04       		.sleb128 4
 6886 2ce4 01       		.uleb128 0x1
 6887 2ce5 3D       		.byte	0x3d
 6888 2ce6 43       		.uleb128 0x43
 6889 2ce7 02       		.uleb128 0x2
 6890 2ce8 7D       		.byte	0x7d
 6891 2ce9 00       		.sleb128 0
 6892 2cea 05       		.uleb128 0x5
 6893 2ceb 03       		.byte	0x3
 6894 2cec 24000000 		.4byte	.LANCHOR0+36
 6895 2cf0 00       		.byte	0
 6896 2cf1 00       		.byte	0
 6897 2cf2 19       		.uleb128 0x19
 6898 2cf3 E70A0000 		.4byte	0xae7
 6899 2cf7 022D0000 		.4byte	0x2d02
 6900 2cfb 1A       		.uleb128 0x1a
 6901 2cfc 09070000 		.4byte	0x709
 6902 2d00 3F       		.byte	0x3f
 6903 2d01 00       		.byte	0
 6904 2d02 45       		.uleb128 0x45
 6905 2d03 9E270000 		.4byte	.LASF793
 6906 2d07 01       		.byte	0x1
 6907 2d08 BA01     		.2byte	0x1ba
 6908 2d0a 02070000 		.4byte	0x702
 6909 2d0e 00000000 		.4byte	.LFB18
 6910 2d12 58000000 		.4byte	.LFE18-.LFB18
 6911 2d16 01       		.uleb128 0x1
 6912 2d17 9C       		.byte	0x9c
 6913 2d18 BE2D0000 		.4byte	0x2dbe
 6914 2d1c 46       		.uleb128 0x46
 6915 2d1d 73736C00 		.ascii	"ssl\000"
 6916 2d21 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 209


 6917 2d22 BA01     		.2byte	0x1ba
 6918 2d24 A6090000 		.4byte	0x9a6
 6919 2d28 64060000 		.4byte	.LLST39
 6920 2d2c 39       		.uleb128 0x39
 6921 2d2d 72657400 		.ascii	"ret\000"
 6922 2d31 01       		.byte	0x1
 6923 2d32 BC01     		.2byte	0x1bc
 6924 2d34 02070000 		.4byte	0x702
 6925 2d38 90060000 		.4byte	.LLST40
 6926 2d3c 47       		.uleb128 0x47
 6927 2d3d A7030000 		.4byte	.LASF506
 6928 2d41 01       		.byte	0x1
 6929 2d42 BD01     		.2byte	0x1bd
 6930 2d44 02070000 		.4byte	0x702
 6931 2d48 AE060000 		.4byte	.LLST41
 6932 2d4c 3B       		.uleb128 0x3b
 6933 2d4d 03230000 		.4byte	.LASF789
 6934 2d51 01       		.byte	0x1
 6935 2d52 C301     		.2byte	0x1c3
 6936 2d54 BE2D0000 		.4byte	0x2dbe
 6937 2d58 03       		.uleb128 0x3
 6938 2d59 91       		.byte	0x91
 6939 2d5a 907E     		.sleb128 -240
 6940 2d5c 42       		.uleb128 0x42
 6941 2d5d 20000000 		.4byte	.LVL87
 6942 2d61 A5350000 		.4byte	0x35a5
 6943 2d65 702D0000 		.4byte	0x2d70
 6944 2d69 43       		.uleb128 0x43
 6945 2d6a 01       		.uleb128 0x1
 6946 2d6b 50       		.byte	0x50
 6947 2d6c 02       		.uleb128 0x2
 6948 2d6d 74       		.byte	0x74
 6949 2d6e 00       		.sleb128 0
 6950 2d6f 00       		.byte	0
 6951 2d70 42       		.uleb128 0x42
 6952 2d71 44000000 		.4byte	.LVL88
 6953 2d75 B82B0000 		.4byte	0x2bb8
 6954 2d79 A62D0000 		.4byte	0x2da6
 6955 2d7d 43       		.uleb128 0x43
 6956 2d7e 01       		.uleb128 0x1
 6957 2d7f 53       		.byte	0x53
 6958 2d80 02       		.uleb128 0x2
 6959 2d81 08       		.byte	0x8
 6960 2d82 30       		.byte	0x30
 6961 2d83 43       		.uleb128 0x43
 6962 2d84 01       		.uleb128 0x1
 6963 2d85 52       		.byte	0x52
 6964 2d86 03       		.uleb128 0x3
 6965 2d87 76       		.byte	0x76
 6966 2d88 E104     		.sleb128 609
 6967 2d8a 43       		.uleb128 0x43
 6968 2d8b 01       		.uleb128 0x1
 6969 2d8c 51       		.byte	0x51
 6970 2d8d 02       		.uleb128 0x2
 6971 2d8e 75       		.byte	0x75
 6972 2d8f 00       		.sleb128 0
 6973 2d90 43       		.uleb128 0x43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 210


 6974 2d91 01       		.uleb128 0x1
 6975 2d92 50       		.byte	0x50
 6976 2d93 03       		.uleb128 0x3
 6977 2d94 91       		.byte	0x91
 6978 2d95 907E     		.sleb128 -240
 6979 2d97 43       		.uleb128 0x43
 6980 2d98 02       		.uleb128 0x2
 6981 2d99 7D       		.byte	0x7d
 6982 2d9a 04       		.sleb128 4
 6983 2d9b 02       		.uleb128 0x2
 6984 2d9c 76       		.byte	0x76
 6985 2d9d 00       		.sleb128 0
 6986 2d9e 43       		.uleb128 0x43
 6987 2d9f 02       		.uleb128 0x2
 6988 2da0 7D       		.byte	0x7d
 6989 2da1 00       		.sleb128 0
 6990 2da2 02       		.uleb128 0x2
 6991 2da3 76       		.byte	0x76
 6992 2da4 20       		.sleb128 32
 6993 2da5 00       		.byte	0
 6994 2da6 44       		.uleb128 0x44
 6995 2da7 50000000 		.4byte	.LVL90
 6996 2dab E5350000 		.4byte	0x35e5
 6997 2daf 43       		.uleb128 0x43
 6998 2db0 01       		.uleb128 0x1
 6999 2db1 51       		.byte	0x51
 7000 2db2 03       		.uleb128 0x3
 7001 2db3 91       		.byte	0x91
 7002 2db4 907E     		.sleb128 -240
 7003 2db6 43       		.uleb128 0x43
 7004 2db7 01       		.uleb128 0x1
 7005 2db8 50       		.byte	0x50
 7006 2db9 02       		.uleb128 0x2
 7007 2dba 74       		.byte	0x74
 7008 2dbb 00       		.sleb128 0
 7009 2dbc 00       		.byte	0
 7010 2dbd 00       		.byte	0
 7011 2dbe 19       		.uleb128 0x19
 7012 2dbf E70A0000 		.4byte	0xae7
 7013 2dc3 CE2D0000 		.4byte	0x2dce
 7014 2dc7 1A       		.uleb128 0x1a
 7015 2dc8 09070000 		.4byte	0x709
 7016 2dcc DF       		.byte	0xdf
 7017 2dcd 00       		.byte	0
 7018 2dce 45       		.uleb128 0x45
 7019 2dcf 50030000 		.4byte	.LASF794
 7020 2dd3 01       		.byte	0x1
 7021 2dd4 DD01     		.2byte	0x1dd
 7022 2dd6 02070000 		.4byte	0x702
 7023 2dda 00000000 		.4byte	.LFB19
 7024 2dde 50000000 		.4byte	.LFE19-.LFB19
 7025 2de2 01       		.uleb128 0x1
 7026 2de3 9C       		.byte	0x9c
 7027 2de4 082F0000 		.4byte	0x2f08
 7028 2de8 46       		.uleb128 0x46
 7029 2de9 6D7300   		.ascii	"ms\000"
 7030 2dec 01       		.byte	0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 211


 7031 2ded DD01     		.2byte	0x1dd
 7032 2def 8E100000 		.4byte	0x108e
 7033 2df3 DF060000 		.4byte	.LLST42
 7034 2df7 37       		.uleb128 0x37
 7035 2df8 90160000 		.4byte	.LASF791
 7036 2dfc 01       		.byte	0x1
 7037 2dfd DD01     		.2byte	0x1dd
 7038 2dff 040B0000 		.4byte	0xb04
 7039 2e03 0B070000 		.4byte	.LLST43
 7040 2e07 46       		.uleb128 0x46
 7041 2e08 706D7300 		.ascii	"pms\000"
 7042 2e0c 01       		.byte	0x1
 7043 2e0d DE01     		.2byte	0x1de
 7044 2e0f 991B0000 		.4byte	0x1b99
 7045 2e13 37070000 		.4byte	.LLST44
 7046 2e17 37       		.uleb128 0x37
 7047 2e18 05170000 		.4byte	.LASF795
 7048 2e1c 01       		.byte	0x1
 7049 2e1d DE01     		.2byte	0x1de
 7050 2e1f 040B0000 		.4byte	0xb04
 7051 2e23 57070000 		.4byte	.LLST45
 7052 2e27 4A       		.uleb128 0x4a
 7053 2e28 637200   		.ascii	"cr\000"
 7054 2e2b 01       		.byte	0x1
 7055 2e2c DF01     		.2byte	0x1df
 7056 2e2e 991B0000 		.4byte	0x1b99
 7057 2e32 02       		.uleb128 0x2
 7058 2e33 91       		.byte	0x91
 7059 2e34 00       		.sleb128 0
 7060 2e35 4A       		.uleb128 0x4a
 7061 2e36 737200   		.ascii	"sr\000"
 7062 2e39 01       		.byte	0x1
 7063 2e3a DF01     		.2byte	0x1df
 7064 2e3c 991B0000 		.4byte	0x1b99
 7065 2e40 02       		.uleb128 0x2
 7066 2e41 91       		.byte	0x91
 7067 2e42 04       		.sleb128 4
 7068 2e43 38       		.uleb128 0x38
 7069 2e44 74160000 		.4byte	.LASF792
 7070 2e48 01       		.byte	0x1
 7071 2e49 E001     		.2byte	0x1e0
 7072 2e4b 02070000 		.4byte	0x702
 7073 2e4f 02       		.uleb128 0x2
 7074 2e50 91       		.byte	0x91
 7075 2e51 08       		.sleb128 8
 7076 2e52 38       		.uleb128 0x38
 7077 2e53 F1180000 		.4byte	.LASF781
 7078 2e57 01       		.byte	0x1
 7079 2e58 E001     		.2byte	0x1e0
 7080 2e5a 02070000 		.4byte	0x702
 7081 2e5e 02       		.uleb128 0x2
 7082 2e5f 91       		.byte	0x91
 7083 2e60 0C       		.sleb128 12
 7084 2e61 3B       		.uleb128 0x3b
 7085 2e62 621B0000 		.4byte	.LASF267
 7086 2e66 01       		.byte	0x1
 7087 2e67 E201     		.2byte	0x1e2
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 212


 7088 2e69 F22C0000 		.4byte	0x2cf2
 7089 2e6d 03       		.uleb128 0x3
 7090 2e6e 91       		.byte	0x91
 7091 2e6f A87F     		.sleb128 -88
 7092 2e71 42       		.uleb128 0x42
 7093 2e72 1A000000 		.4byte	.LVL96
 7094 2e76 68350000 		.4byte	0x3568
 7095 2e7a 922E0000 		.4byte	0x2e92
 7096 2e7e 43       		.uleb128 0x43
 7097 2e7f 01       		.uleb128 0x1
 7098 2e80 52       		.byte	0x52
 7099 2e81 02       		.uleb128 0x2
 7100 2e82 74       		.byte	0x74
 7101 2e83 00       		.sleb128 0
 7102 2e84 43       		.uleb128 0x43
 7103 2e85 01       		.uleb128 0x1
 7104 2e86 51       		.byte	0x51
 7105 2e87 03       		.uleb128 0x3
 7106 2e88 91       		.byte	0x91
 7107 2e89 00       		.sleb128 0
 7108 2e8a 06       		.byte	0x6
 7109 2e8b 43       		.uleb128 0x43
 7110 2e8c 01       		.uleb128 0x1
 7111 2e8d 50       		.byte	0x50
 7112 2e8e 02       		.uleb128 0x2
 7113 2e8f 75       		.byte	0x75
 7114 2e90 00       		.sleb128 0
 7115 2e91 00       		.byte	0
 7116 2e92 42       		.uleb128 0x42
 7117 2e93 24000000 		.4byte	.LVL97
 7118 2e97 68350000 		.4byte	0x3568
 7119 2e9b B32E0000 		.4byte	0x2eb3
 7120 2e9f 43       		.uleb128 0x43
 7121 2ea0 01       		.uleb128 0x1
 7122 2ea1 52       		.byte	0x52
 7123 2ea2 02       		.uleb128 0x2
 7124 2ea3 74       		.byte	0x74
 7125 2ea4 00       		.sleb128 0
 7126 2ea5 43       		.uleb128 0x43
 7127 2ea6 01       		.uleb128 0x1
 7128 2ea7 51       		.byte	0x51
 7129 2ea8 03       		.uleb128 0x3
 7130 2ea9 91       		.byte	0x91
 7131 2eaa 04       		.sleb128 4
 7132 2eab 06       		.byte	0x6
 7133 2eac 43       		.uleb128 0x43
 7134 2ead 01       		.uleb128 0x1
 7135 2eae 50       		.byte	0x50
 7136 2eaf 02       		.uleb128 0x2
 7137 2eb0 91       		.byte	0x91
 7138 2eb1 48       		.sleb128 -56
 7139 2eb2 00       		.byte	0
 7140 2eb3 44       		.uleb128 0x44
 7141 2eb4 48000000 		.4byte	.LVL98
 7142 2eb8 66260000 		.4byte	0x2666
 7143 2ebc 43       		.uleb128 0x43
 7144 2ebd 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 213


 7145 2ebe 53       		.byte	0x53
 7146 2ebf 04       		.uleb128 0x4
 7147 2ec0 91       		.byte	0x91
 7148 2ec1 A47F     		.sleb128 -92
 7149 2ec3 06       		.byte	0x6
 7150 2ec4 43       		.uleb128 0x43
 7151 2ec5 01       		.uleb128 0x1
 7152 2ec6 52       		.byte	0x52
 7153 2ec7 04       		.uleb128 0x4
 7154 2ec8 91       		.byte	0x91
 7155 2ec9 A07F     		.sleb128 -96
 7156 2ecb 06       		.byte	0x6
 7157 2ecc 43       		.uleb128 0x43
 7158 2ecd 01       		.uleb128 0x1
 7159 2ece 51       		.byte	0x51
 7160 2ecf 02       		.uleb128 0x2
 7161 2ed0 76       		.byte	0x76
 7162 2ed1 00       		.sleb128 0
 7163 2ed2 43       		.uleb128 0x43
 7164 2ed3 01       		.uleb128 0x1
 7165 2ed4 50       		.byte	0x50
 7166 2ed5 02       		.uleb128 0x2
 7167 2ed6 77       		.byte	0x77
 7168 2ed7 00       		.sleb128 0
 7169 2ed8 43       		.uleb128 0x43
 7170 2ed9 02       		.uleb128 0x2
 7171 2eda 7D       		.byte	0x7d
 7172 2edb 14       		.sleb128 20
 7173 2edc 03       		.uleb128 0x3
 7174 2edd 91       		.byte	0x91
 7175 2ede 0C       		.sleb128 12
 7176 2edf 06       		.byte	0x6
 7177 2ee0 43       		.uleb128 0x43
 7178 2ee1 02       		.uleb128 0x2
 7179 2ee2 7D       		.byte	0x7d
 7180 2ee3 10       		.sleb128 16
 7181 2ee4 03       		.uleb128 0x3
 7182 2ee5 91       		.byte	0x91
 7183 2ee6 08       		.sleb128 8
 7184 2ee7 06       		.byte	0x6
 7185 2ee8 43       		.uleb128 0x43
 7186 2ee9 02       		.uleb128 0x2
 7187 2eea 7D       		.byte	0x7d
 7188 2eeb 0C       		.sleb128 12
 7189 2eec 02       		.uleb128 0x2
 7190 2eed 08       		.byte	0x8
 7191 2eee 40       		.byte	0x40
 7192 2eef 43       		.uleb128 0x43
 7193 2ef0 02       		.uleb128 0x2
 7194 2ef1 7D       		.byte	0x7d
 7195 2ef2 08       		.sleb128 8
 7196 2ef3 02       		.uleb128 0x2
 7197 2ef4 75       		.byte	0x75
 7198 2ef5 00       		.sleb128 0
 7199 2ef6 43       		.uleb128 0x43
 7200 2ef7 02       		.uleb128 0x2
 7201 2ef8 7D       		.byte	0x7d
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 214


 7202 2ef9 04       		.sleb128 4
 7203 2efa 01       		.uleb128 0x1
 7204 2efb 3D       		.byte	0x3d
 7205 2efc 43       		.uleb128 0x43
 7206 2efd 02       		.uleb128 0x2
 7207 2efe 7D       		.byte	0x7d
 7208 2eff 00       		.sleb128 0
 7209 2f00 05       		.uleb128 0x5
 7210 2f01 03       		.byte	0x3
 7211 2f02 32000000 		.4byte	.LANCHOR0+50
 7212 2f06 00       		.byte	0
 7213 2f07 00       		.byte	0
 7214 2f08 45       		.uleb128 0x45
 7215 2f09 2E240000 		.4byte	.LASF796
 7216 2f0d 01       		.byte	0x1
 7217 2f0e EC01     		.2byte	0x1ec
 7218 2f10 02070000 		.4byte	0x702
 7219 2f14 00000000 		.4byte	.LFB20
 7220 2f18 44000000 		.4byte	.LFE20-.LFB20
 7221 2f1c 01       		.uleb128 0x1
 7222 2f1d 9C       		.byte	0x9c
 7223 2f1e 9D2F0000 		.4byte	0x2f9d
 7224 2f22 46       		.uleb128 0x46
 7225 2f23 73736C00 		.ascii	"ssl\000"
 7226 2f27 01       		.byte	0x1
 7227 2f28 EC01     		.2byte	0x1ec
 7228 2f2a A6090000 		.4byte	0x9a6
 7229 2f2e 77070000 		.4byte	.LLST46
 7230 2f32 39       		.uleb128 0x39
 7231 2f33 72657400 		.ascii	"ret\000"
 7232 2f37 01       		.byte	0x1
 7233 2f38 EE01     		.2byte	0x1ee
 7234 2f3a 02070000 		.4byte	0x702
 7235 2f3e A3070000 		.4byte	.LLST47
 7236 2f42 42       		.uleb128 0x42
 7237 2f43 0C000000 		.4byte	.LVL102
 7238 2f47 A5350000 		.4byte	0x35a5
 7239 2f4b 562F0000 		.4byte	0x2f56
 7240 2f4f 43       		.uleb128 0x43
 7241 2f50 01       		.uleb128 0x1
 7242 2f51 50       		.byte	0x50
 7243 2f52 02       		.uleb128 0x2
 7244 2f53 75       		.byte	0x75
 7245 2f54 00       		.sleb128 0
 7246 2f55 00       		.byte	0
 7247 2f56 42       		.uleb128 0x42
 7248 2f57 32000000 		.4byte	.LVL103
 7249 2f5b CE2D0000 		.4byte	0x2dce
 7250 2f5f 8C2F0000 		.4byte	0x2f8c
 7251 2f63 43       		.uleb128 0x43
 7252 2f64 01       		.uleb128 0x1
 7253 2f65 53       		.byte	0x53
 7254 2f66 02       		.uleb128 0x2
 7255 2f67 76       		.byte	0x76
 7256 2f68 00       		.sleb128 0
 7257 2f69 43       		.uleb128 0x43
 7258 2f6a 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 215


 7259 2f6b 52       		.byte	0x52
 7260 2f6c 03       		.uleb128 0x3
 7261 2f6d 74       		.byte	0x74
 7262 2f6e C100     		.sleb128 65
 7263 2f70 43       		.uleb128 0x43
 7264 2f71 01       		.uleb128 0x1
 7265 2f72 51       		.byte	0x51
 7266 2f73 02       		.uleb128 0x2
 7267 2f74 08       		.byte	0x8
 7268 2f75 30       		.byte	0x30
 7269 2f76 43       		.uleb128 0x43
 7270 2f77 01       		.uleb128 0x1
 7271 2f78 50       		.byte	0x50
 7272 2f79 03       		.uleb128 0x3
 7273 2f7a 74       		.byte	0x74
 7274 2f7b C104     		.sleb128 577
 7275 2f7d 43       		.uleb128 0x43
 7276 2f7e 02       		.uleb128 0x2
 7277 2f7f 7D       		.byte	0x7d
 7278 2f80 04       		.sleb128 4
 7279 2f81 02       		.uleb128 0x2
 7280 2f82 74       		.byte	0x74
 7281 2f83 00       		.sleb128 0
 7282 2f84 43       		.uleb128 0x43
 7283 2f85 02       		.uleb128 0x2
 7284 2f86 7D       		.byte	0x7d
 7285 2f87 00       		.sleb128 0
 7286 2f88 02       		.uleb128 0x2
 7287 2f89 74       		.byte	0x74
 7288 2f8a 60       		.sleb128 -32
 7289 2f8b 00       		.byte	0
 7290 2f8c 44       		.uleb128 0x44
 7291 2f8d 3C000000 		.4byte	.LVL105
 7292 2f91 022D0000 		.4byte	0x2d02
 7293 2f95 43       		.uleb128 0x43
 7294 2f96 01       		.uleb128 0x1
 7295 2f97 50       		.byte	0x50
 7296 2f98 02       		.uleb128 0x2
 7297 2f99 75       		.byte	0x75
 7298 2f9a 00       		.sleb128 0
 7299 2f9b 00       		.byte	0
 7300 2f9c 00       		.byte	0
 7301 2f9d 45       		.uleb128 0x45
 7302 2f9e E8110000 		.4byte	.LASF797
 7303 2fa2 01       		.byte	0x1
 7304 2fa3 0802     		.2byte	0x208
 7305 2fa5 02070000 		.4byte	0x702
 7306 2fa9 00000000 		.4byte	.LFB21
 7307 2fad 64000000 		.4byte	.LFE21-.LFB21
 7308 2fb1 01       		.uleb128 0x1
 7309 2fb2 9C       		.byte	0x9c
 7310 2fb3 C3300000 		.4byte	0x30c3
 7311 2fb7 46       		.uleb128 0x46
 7312 2fb8 73736C00 		.ascii	"ssl\000"
 7313 2fbc 01       		.byte	0x1
 7314 2fbd 0802     		.2byte	0x208
 7315 2fbf A6090000 		.4byte	0x9a6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 216


 7316 2fc3 C1070000 		.4byte	.LLST48
 7317 2fc7 46       		.uleb128 0x46
 7318 2fc8 6D736B00 		.ascii	"msk\000"
 7319 2fcc 01       		.byte	0x1
 7320 2fcd 0802     		.2byte	0x208
 7321 2fcf 1E080000 		.4byte	0x81e
 7322 2fd3 ED070000 		.4byte	.LLST49
 7323 2fd7 46       		.uleb128 0x46
 7324 2fd8 6C656E00 		.ascii	"len\000"
 7325 2fdc 01       		.byte	0x1
 7326 2fdd 0802     		.2byte	0x208
 7327 2fdf 810A0000 		.4byte	0xa81
 7328 2fe3 0D080000 		.4byte	.LLST50
 7329 2fe7 37       		.uleb128 0x37
 7330 2fe8 201C0000 		.4byte	.LASF778
 7331 2fec 01       		.byte	0x1
 7332 2fed 0902     		.2byte	0x209
 7333 2fef 090A0000 		.4byte	0xa09
 7334 2ff3 2D080000 		.4byte	.LLST51
 7335 2ff7 4B       		.uleb128 0x4b
 7336 2ff8 72657400 		.ascii	"ret\000"
 7337 2ffc 01       		.byte	0x1
 7338 2ffd 0B02     		.2byte	0x20b
 7339 2fff 02070000 		.4byte	0x702
 7340 3003 01       		.uleb128 0x1
 7341 3004 50       		.byte	0x50
 7342 3005 3B       		.uleb128 0x3b
 7343 3006 621B0000 		.4byte	.LASF267
 7344 300a 01       		.byte	0x1
 7345 300b 0F02     		.2byte	0x20f
 7346 300d F22C0000 		.4byte	0x2cf2
 7347 3011 03       		.uleb128 0x3
 7348 3012 91       		.byte	0x91
 7349 3013 A87F     		.sleb128 -88
 7350 3015 42       		.uleb128 0x42
 7351 3016 1C000000 		.4byte	.LVL111
 7352 301a 68350000 		.4byte	0x3568
 7353 301e 36300000 		.4byte	0x3036
 7354 3022 43       		.uleb128 0x43
 7355 3023 01       		.uleb128 0x1
 7356 3024 52       		.byte	0x52
 7357 3025 02       		.uleb128 0x2
 7358 3026 77       		.byte	0x77
 7359 3027 00       		.sleb128 0
 7360 3028 43       		.uleb128 0x43
 7361 3029 01       		.uleb128 0x1
 7362 302a 51       		.byte	0x51
 7363 302b 02       		.uleb128 0x2
 7364 302c 74       		.byte	0x74
 7365 302d 10       		.sleb128 16
 7366 302e 43       		.uleb128 0x43
 7367 302f 01       		.uleb128 0x1
 7368 3030 50       		.byte	0x50
 7369 3031 03       		.uleb128 0x3
 7370 3032 91       		.byte	0x91
 7371 3033 A87F     		.sleb128 -88
 7372 3035 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 217


 7373 3036 42       		.uleb128 0x42
 7374 3037 28000000 		.4byte	.LVL112
 7375 303b 68350000 		.4byte	0x3568
 7376 303f 56300000 		.4byte	0x3056
 7377 3043 43       		.uleb128 0x43
 7378 3044 01       		.uleb128 0x1
 7379 3045 52       		.byte	0x52
 7380 3046 02       		.uleb128 0x2
 7381 3047 77       		.byte	0x77
 7382 3048 00       		.sleb128 0
 7383 3049 43       		.uleb128 0x43
 7384 304a 01       		.uleb128 0x1
 7385 304b 51       		.byte	0x51
 7386 304c 02       		.uleb128 0x2
 7387 304d 74       		.byte	0x74
 7388 304e 30       		.sleb128 48
 7389 304f 43       		.uleb128 0x43
 7390 3050 01       		.uleb128 0x1
 7391 3051 50       		.byte	0x50
 7392 3052 02       		.uleb128 0x2
 7393 3053 91       		.byte	0x91
 7394 3054 48       		.sleb128 -56
 7395 3055 00       		.byte	0
 7396 3056 42       		.uleb128 0x42
 7397 3057 2E000000 		.4byte	.LVL113
 7398 305b 00360000 		.4byte	0x3600
 7399 305f 6A300000 		.4byte	0x306a
 7400 3063 43       		.uleb128 0x43
 7401 3064 01       		.uleb128 0x1
 7402 3065 50       		.byte	0x50
 7403 3066 02       		.uleb128 0x2
 7404 3067 76       		.byte	0x76
 7405 3068 00       		.sleb128 0
 7406 3069 00       		.byte	0
 7407 306a 42       		.uleb128 0x42
 7408 306b 36000000 		.4byte	.LVL114
 7409 306f A5350000 		.4byte	0x35a5
 7410 3073 7E300000 		.4byte	0x307e
 7411 3077 43       		.uleb128 0x43
 7412 3078 01       		.uleb128 0x1
 7413 3079 50       		.byte	0x50
 7414 307a 02       		.uleb128 0x2
 7415 307b 75       		.byte	0x75
 7416 307c 00       		.sleb128 0
 7417 307d 00       		.byte	0
 7418 307e 44       		.uleb128 0x44
 7419 307f 5A000000 		.4byte	.LVL115
 7420 3083 66260000 		.4byte	0x2666
 7421 3087 43       		.uleb128 0x43
 7422 3088 01       		.uleb128 0x1
 7423 3089 53       		.byte	0x53
 7424 308a 02       		.uleb128 0x2
 7425 308b 08       		.byte	0x8
 7426 308c 30       		.byte	0x30
 7427 308d 43       		.uleb128 0x43
 7428 308e 01       		.uleb128 0x1
 7429 308f 52       		.byte	0x52
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 218


 7430 3090 03       		.uleb128 0x3
 7431 3091 74       		.byte	0x74
 7432 3092 F104     		.sleb128 625
 7433 3094 43       		.uleb128 0x43
 7434 3095 01       		.uleb128 0x1
 7435 3096 51       		.byte	0x51
 7436 3097 04       		.uleb128 0x4
 7437 3098 91       		.byte	0x91
 7438 3099 A47F     		.sleb128 -92
 7439 309b 06       		.byte	0x6
 7440 309c 43       		.uleb128 0x43
 7441 309d 01       		.uleb128 0x1
 7442 309e 50       		.byte	0x50
 7443 309f 04       		.uleb128 0x4
 7444 30a0 91       		.byte	0x91
 7445 30a1 A07F     		.sleb128 -96
 7446 30a3 06       		.byte	0x6
 7447 30a4 43       		.uleb128 0x43
 7448 30a5 02       		.uleb128 0x2
 7449 30a6 7D       		.byte	0x7d
 7450 30a7 0C       		.sleb128 12
 7451 30a8 02       		.uleb128 0x2
 7452 30a9 08       		.byte	0x8
 7453 30aa 40       		.byte	0x40
 7454 30ab 43       		.uleb128 0x43
 7455 30ac 02       		.uleb128 0x2
 7456 30ad 7D       		.byte	0x7d
 7457 30ae 08       		.sleb128 8
 7458 30af 03       		.uleb128 0x3
 7459 30b0 91       		.byte	0x91
 7460 30b1 A87F     		.sleb128 -88
 7461 30b3 43       		.uleb128 0x43
 7462 30b4 02       		.uleb128 0x2
 7463 30b5 7D       		.byte	0x7d
 7464 30b6 04       		.sleb128 4
 7465 30b7 02       		.uleb128 0x2
 7466 30b8 77       		.byte	0x77
 7467 30b9 00       		.sleb128 0
 7468 30ba 43       		.uleb128 0x43
 7469 30bb 02       		.uleb128 0x2
 7470 30bc 7D       		.byte	0x7d
 7471 30bd 00       		.sleb128 0
 7472 30be 02       		.uleb128 0x2
 7473 30bf 76       		.byte	0x76
 7474 30c0 00       		.sleb128 0
 7475 30c1 00       		.byte	0
 7476 30c2 00       		.byte	0
 7477 30c3 45       		.uleb128 0x45
 7478 30c4 AD220000 		.4byte	.LASF798
 7479 30c8 01       		.byte	0x1
 7480 30c9 7002     		.2byte	0x270
 7481 30cb 02070000 		.4byte	0x702
 7482 30cf 00000000 		.4byte	.LFB25
 7483 30d3 24000000 		.4byte	.LFE25-.LFB25
 7484 30d7 01       		.uleb128 0x1
 7485 30d8 9C       		.byte	0x9c
 7486 30d9 EE300000 		.4byte	0x30ee
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 219


 7487 30dd 46       		.uleb128 0x46
 7488 30de 73736C00 		.ascii	"ssl\000"
 7489 30e2 01       		.byte	0x1
 7490 30e3 7002     		.2byte	0x270
 7491 30e5 A6090000 		.4byte	0x9a6
 7492 30e9 59080000 		.4byte	.LLST52
 7493 30ed 00       		.byte	0
 7494 30ee 4C       		.uleb128 0x4c
 7495 30ef F4140000 		.4byte	.LASF799
 7496 30f3 01       		.byte	0x1
 7497 30f4 4E02     		.2byte	0x24e
 7498 30f6 040B0000 		.4byte	0xb04
 7499 30fa 03       		.byte	0x3
 7500 30fb 18310000 		.4byte	0x3118
 7501 30ff 2D       		.uleb128 0x2d
 7502 3100 73736C00 		.ascii	"ssl\000"
 7503 3104 01       		.byte	0x1
 7504 3105 4E02     		.2byte	0x24e
 7505 3107 A6090000 		.4byte	0x9a6
 7506 310b 4D       		.uleb128 0x4d
 7507 310c BA060000 		.4byte	.LASF800
 7508 3110 01       		.byte	0x1
 7509 3111 4E02     		.2byte	0x24e
 7510 3113 02070000 		.4byte	0x702
 7511 3117 00       		.byte	0
 7512 3118 2C       		.uleb128 0x2c
 7513 3119 04150000 		.4byte	.LASF801
 7514 311d 01       		.byte	0x1
 7515 311e 4502     		.2byte	0x245
 7516 3120 03       		.byte	0x3
 7517 3121 3C310000 		.4byte	0x313c
 7518 3125 2D       		.uleb128 0x2d
 7519 3126 75333200 		.ascii	"u32\000"
 7520 312a 01       		.byte	0x1
 7521 312b 4502     		.2byte	0x245
 7522 312d 040B0000 		.4byte	0xb04
 7523 3131 2D       		.uleb128 0x2d
 7524 3132 6300     		.ascii	"c\000"
 7525 3134 01       		.byte	0x1
 7526 3135 4502     		.2byte	0x245
 7527 3137 8E100000 		.4byte	0x108e
 7528 313b 00       		.byte	0
 7529 313c 45       		.uleb128 0x45
 7530 313d 52190000 		.4byte	.LASF802
 7531 3141 01       		.byte	0x1
 7532 3142 9D02     		.2byte	0x29d
 7533 3144 02070000 		.4byte	0x702
 7534 3148 00000000 		.4byte	.LFB26
 7535 314c 5E000000 		.4byte	.LFE26-.LFB26
 7536 3150 01       		.uleb128 0x1
 7537 3151 9C       		.byte	0x9c
 7538 3152 34320000 		.4byte	0x3234
 7539 3156 46       		.uleb128 0x46
 7540 3157 73736C00 		.ascii	"ssl\000"
 7541 315b 01       		.byte	0x1
 7542 315c 9D02     		.2byte	0x29d
 7543 315e A6090000 		.4byte	0x9a6
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 220


 7544 3162 93080000 		.4byte	.LLST53
 7545 3166 37       		.uleb128 0x37
 7546 3167 69270000 		.4byte	.LASF803
 7547 316b 01       		.byte	0x1
 7548 316c 9D02     		.2byte	0x29d
 7549 316e 8E100000 		.4byte	0x108e
 7550 3172 D5080000 		.4byte	.LLST54
 7551 3176 46       		.uleb128 0x46
 7552 3177 737A00   		.ascii	"sz\000"
 7553 317a 01       		.byte	0x1
 7554 317b 9D02     		.2byte	0x29d
 7555 317d 040B0000 		.4byte	0xb04
 7556 3181 22090000 		.4byte	.LLST55
 7557 3185 37       		.uleb128 0x37
 7558 3186 3C150000 		.4byte	.LASF804
 7559 318a 01       		.byte	0x1
 7560 318b 9D02     		.2byte	0x29d
 7561 318d 02070000 		.4byte	0x702
 7562 3191 64090000 		.4byte	.LLST56
 7563 3195 38       		.uleb128 0x38
 7564 3196 BA060000 		.4byte	.LASF800
 7565 319a 01       		.byte	0x1
 7566 319b 9E02     		.2byte	0x29e
 7567 319d 02070000 		.4byte	0x702
 7568 31a1 02       		.uleb128 0x2
 7569 31a2 91       		.byte	0x91
 7570 31a3 00       		.sleb128 0
 7571 31a4 4E       		.uleb128 0x4e
 7572 31a5 EE300000 		.4byte	0x30ee
 7573 31a9 1C000000 		.4byte	.LBB39
 7574 31ad 00000000 		.4byte	.Ldebug_ranges0+0
 7575 31b1 01       		.byte	0x1
 7576 31b2 A902     		.2byte	0x2a9
 7577 31b4 CB310000 		.4byte	0x31cb
 7578 31b8 3D       		.uleb128 0x3d
 7579 31b9 0B310000 		.4byte	0x310b
 7580 31bd A6090000 		.4byte	.LLST57
 7581 31c1 3D       		.uleb128 0x3d
 7582 31c2 FF300000 		.4byte	0x30ff
 7583 31c6 BA090000 		.4byte	.LLST58
 7584 31ca 00       		.byte	0
 7585 31cb 4E       		.uleb128 0x4e
 7586 31cc 18310000 		.4byte	0x3118
 7587 31d0 30000000 		.4byte	.LBB43
 7588 31d4 18000000 		.4byte	.Ldebug_ranges0+0x18
 7589 31d8 01       		.byte	0x1
 7590 31d9 A902     		.2byte	0x2a9
 7591 31db F2310000 		.4byte	0x31f2
 7592 31df 3D       		.uleb128 0x3d
 7593 31e0 31310000 		.4byte	0x3131
 7594 31e4 CD090000 		.4byte	.LLST59
 7595 31e8 3D       		.uleb128 0x3d
 7596 31e9 25310000 		.4byte	0x3125
 7597 31ed E2090000 		.4byte	.LLST60
 7598 31f1 00       		.byte	0
 7599 31f2 4E       		.uleb128 0x4e
 7600 31f3 14250000 		.4byte	0x2514
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 221


 7601 31f7 4E000000 		.4byte	.LBB47
 7602 31fb 30000000 		.4byte	.Ldebug_ranges0+0x30
 7603 31ff 01       		.byte	0x1
 7604 3200 AD02     		.2byte	0x2ad
 7605 3202 19320000 		.4byte	0x3219
 7606 3206 3D       		.uleb128 0x3d
 7607 3207 2D250000 		.4byte	0x252d
 7608 320b 020A0000 		.4byte	.LLST61
 7609 320f 3D       		.uleb128 0x3d
 7610 3210 21250000 		.4byte	0x2521
 7611 3214 170A0000 		.4byte	.LLST62
 7612 3218 00       		.byte	0
 7613 3219 44       		.uleb128 0x44
 7614 321a 1C000000 		.4byte	.LVL126
 7615 321e 15360000 		.4byte	0x3615
 7616 3222 43       		.uleb128 0x43
 7617 3223 01       		.uleb128 0x1
 7618 3224 52       		.byte	0x52
 7619 3225 01       		.uleb128 0x1
 7620 3226 3D       		.byte	0x3d
 7621 3227 43       		.uleb128 0x43
 7622 3228 01       		.uleb128 0x1
 7623 3229 51       		.byte	0x51
 7624 322a 01       		.uleb128 0x1
 7625 322b 30       		.byte	0x30
 7626 322c 43       		.uleb128 0x43
 7627 322d 01       		.uleb128 0x1
 7628 322e 50       		.byte	0x50
 7629 322f 02       		.uleb128 0x2
 7630 3230 74       		.byte	0x74
 7631 3231 00       		.sleb128 0
 7632 3232 00       		.byte	0
 7633 3233 00       		.byte	0
 7634 3234 45       		.uleb128 0x45
 7635 3235 A80D0000 		.4byte	.LASF805
 7636 3239 01       		.byte	0x1
 7637 323a B402     		.2byte	0x2b4
 7638 323c 02070000 		.4byte	0x702
 7639 3240 00000000 		.4byte	.LFB27
 7640 3244 70000000 		.4byte	.LFE27-.LFB27
 7641 3248 01       		.uleb128 0x1
 7642 3249 9C       		.byte	0x9c
 7643 324a B0330000 		.4byte	0x33b0
 7644 324e 46       		.uleb128 0x46
 7645 324f 73736C00 		.ascii	"ssl\000"
 7646 3253 01       		.byte	0x1
 7647 3254 B402     		.2byte	0x2b4
 7648 3256 A6090000 		.4byte	0x9a6
 7649 325a 2A0A0000 		.4byte	.LLST63
 7650 325e 37       		.uleb128 0x37
 7651 325f 9D180000 		.4byte	.LASF262
 7652 3263 01       		.byte	0x1
 7653 3264 B402     		.2byte	0x2b4
 7654 3266 8E100000 		.4byte	0x108e
 7655 326a 610A0000 		.4byte	.LLST64
 7656 326e 46       		.uleb128 0x46
 7657 326f 696E00   		.ascii	"in\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 222


 7658 3272 01       		.byte	0x1
 7659 3273 B402     		.2byte	0x2b4
 7660 3275 991B0000 		.4byte	0x1b99
 7661 3279 9A0A0000 		.4byte	.LLST65
 7662 327d 46       		.uleb128 0x46
 7663 327e 737A00   		.ascii	"sz\000"
 7664 3281 01       		.byte	0x1
 7665 3282 B402     		.2byte	0x2b4
 7666 3284 040B0000 		.4byte	0xb04
 7667 3288 D10A0000 		.4byte	.LLST66
 7668 328c 38       		.uleb128 0x38
 7669 328d 3C150000 		.4byte	.LASF804
 7670 3291 01       		.byte	0x1
 7671 3292 B502     		.2byte	0x2b5
 7672 3294 02070000 		.4byte	0x702
 7673 3298 02       		.uleb128 0x2
 7674 3299 91       		.byte	0x91
 7675 329a 00       		.sleb128 0
 7676 329b 38       		.uleb128 0x38
 7677 329c BA060000 		.4byte	.LASF800
 7678 32a0 01       		.byte	0x1
 7679 32a1 B502     		.2byte	0x2b5
 7680 32a3 02070000 		.4byte	0x702
 7681 32a7 02       		.uleb128 0x2
 7682 32a8 91       		.byte	0x91
 7683 32a9 04       		.sleb128 4
 7684 32aa 3B       		.uleb128 0x3b
 7685 32ab 7E190000 		.4byte	.LASF11
 7686 32af 01       		.byte	0x1
 7687 32b0 B702     		.2byte	0x2b7
 7688 32b2 AF110000 		.4byte	0x11af
 7689 32b6 03       		.uleb128 0x3
 7690 32b7 91       		.byte	0x91
 7691 32b8 D87D     		.sleb128 -296
 7692 32ba 39       		.uleb128 0x39
 7693 32bb 72657400 		.ascii	"ret\000"
 7694 32bf 01       		.byte	0x1
 7695 32c0 B802     		.2byte	0x2b8
 7696 32c2 02070000 		.4byte	0x702
 7697 32c6 080B0000 		.4byte	.LLST67
 7698 32ca 3B       		.uleb128 0x3b
 7699 32cb 3F140000 		.4byte	.LASF806
 7700 32cf 01       		.byte	0x1
 7701 32d0 B902     		.2byte	0x2b9
 7702 32d2 B0330000 		.4byte	0x33b0
 7703 32d6 03       		.uleb128 0x3
 7704 32d7 91       		.byte	0x91
 7705 32d8 C87D     		.sleb128 -312
 7706 32da 42       		.uleb128 0x42
 7707 32db 1E000000 		.4byte	.LVL141
 7708 32df 3C310000 		.4byte	0x313c
 7709 32e3 0A330000 		.4byte	0x330a
 7710 32e7 43       		.uleb128 0x43
 7711 32e8 01       		.uleb128 0x1
 7712 32e9 53       		.byte	0x53
 7713 32ea 03       		.uleb128 0x3
 7714 32eb 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 223


 7715 32ec 00       		.sleb128 0
 7716 32ed 06       		.byte	0x6
 7717 32ee 43       		.uleb128 0x43
 7718 32ef 01       		.uleb128 0x1
 7719 32f0 52       		.byte	0x52
 7720 32f1 02       		.uleb128 0x2
 7721 32f2 75       		.byte	0x75
 7722 32f3 00       		.sleb128 0
 7723 32f4 43       		.uleb128 0x43
 7724 32f5 01       		.uleb128 0x1
 7725 32f6 51       		.byte	0x51
 7726 32f7 03       		.uleb128 0x3
 7727 32f8 91       		.byte	0x91
 7728 32f9 C87D     		.sleb128 -312
 7729 32fb 43       		.uleb128 0x43
 7730 32fc 01       		.uleb128 0x1
 7731 32fd 50       		.byte	0x50
 7732 32fe 02       		.uleb128 0x2
 7733 32ff 74       		.byte	0x74
 7734 3300 00       		.sleb128 0
 7735 3301 43       		.uleb128 0x43
 7736 3302 02       		.uleb128 0x2
 7737 3303 7D       		.byte	0x7d
 7738 3304 00       		.sleb128 0
 7739 3305 03       		.uleb128 0x3
 7740 3306 91       		.byte	0x91
 7741 3307 04       		.sleb128 4
 7742 3308 06       		.byte	0x6
 7743 3309 00       		.byte	0
 7744 330a 42       		.uleb128 0x42
 7745 330b 24000000 		.4byte	.LVL142
 7746 330f C3300000 		.4byte	0x30c3
 7747 3313 1E330000 		.4byte	0x331e
 7748 3317 43       		.uleb128 0x43
 7749 3318 01       		.uleb128 0x1
 7750 3319 50       		.byte	0x50
 7751 331a 02       		.uleb128 0x2
 7752 331b 74       		.byte	0x74
 7753 331c 00       		.sleb128 0
 7754 331d 00       		.byte	0
 7755 331e 42       		.uleb128 0x42
 7756 331f 2E000000 		.4byte	.LVL143
 7757 3323 32360000 		.4byte	0x3632
 7758 3327 39330000 		.4byte	0x3339
 7759 332b 43       		.uleb128 0x43
 7760 332c 01       		.uleb128 0x1
 7761 332d 51       		.byte	0x51
 7762 332e 03       		.uleb128 0x3
 7763 332f 91       		.byte	0x91
 7764 3330 04       		.sleb128 4
 7765 3331 06       		.byte	0x6
 7766 3332 43       		.uleb128 0x43
 7767 3333 01       		.uleb128 0x1
 7768 3334 50       		.byte	0x50
 7769 3335 02       		.uleb128 0x2
 7770 3336 74       		.byte	0x74
 7771 3337 00       		.sleb128 0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 224


 7772 3338 00       		.byte	0
 7773 3339 42       		.uleb128 0x42
 7774 333a 3E000000 		.4byte	.LVL144
 7775 333e 05350000 		.4byte	0x3505
 7776 3342 54330000 		.4byte	0x3354
 7777 3346 43       		.uleb128 0x43
 7778 3347 01       		.uleb128 0x1
 7779 3348 51       		.byte	0x51
 7780 3349 02       		.uleb128 0x2
 7781 334a 77       		.byte	0x77
 7782 334b 00       		.sleb128 0
 7783 334c 43       		.uleb128 0x43
 7784 334d 01       		.uleb128 0x1
 7785 334e 50       		.byte	0x50
 7786 334f 03       		.uleb128 0x3
 7787 3350 91       		.byte	0x91
 7788 3351 D87D     		.sleb128 -296
 7789 3353 00       		.byte	0
 7790 3354 42       		.uleb128 0x42
 7791 3355 4C000000 		.4byte	.LVL146
 7792 3359 2F350000 		.4byte	0x352f
 7793 335d 75330000 		.4byte	0x3375
 7794 3361 43       		.uleb128 0x43
 7795 3362 01       		.uleb128 0x1
 7796 3363 52       		.byte	0x52
 7797 3364 01       		.uleb128 0x1
 7798 3365 3D       		.byte	0x3d
 7799 3366 43       		.uleb128 0x43
 7800 3367 01       		.uleb128 0x1
 7801 3368 51       		.byte	0x51
 7802 3369 03       		.uleb128 0x3
 7803 336a 91       		.byte	0x91
 7804 336b C87D     		.sleb128 -312
 7805 336d 43       		.uleb128 0x43
 7806 336e 01       		.uleb128 0x1
 7807 336f 50       		.byte	0x50
 7808 3370 03       		.uleb128 0x3
 7809 3371 91       		.byte	0x91
 7810 3372 D87D     		.sleb128 -296
 7811 3374 00       		.byte	0
 7812 3375 42       		.uleb128 0x42
 7813 3376 5A000000 		.4byte	.LVL148
 7814 337a 2F350000 		.4byte	0x352f
 7815 337e 96330000 		.4byte	0x3396
 7816 3382 43       		.uleb128 0x43
 7817 3383 01       		.uleb128 0x1
 7818 3384 52       		.byte	0x52
 7819 3385 02       		.uleb128 0x2
 7820 3386 75       		.byte	0x75
 7821 3387 00       		.sleb128 0
 7822 3388 43       		.uleb128 0x43
 7823 3389 01       		.uleb128 0x1
 7824 338a 51       		.byte	0x51
 7825 338b 02       		.uleb128 0x2
 7826 338c 76       		.byte	0x76
 7827 338d 00       		.sleb128 0
 7828 338e 43       		.uleb128 0x43
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 225


 7829 338f 01       		.uleb128 0x1
 7830 3390 50       		.byte	0x50
 7831 3391 03       		.uleb128 0x3
 7832 3392 91       		.byte	0x91
 7833 3393 D87D     		.sleb128 -296
 7834 3395 00       		.byte	0
 7835 3396 44       		.uleb128 0x44
 7836 3397 66000000 		.4byte	.LVL150
 7837 339b 4E350000 		.4byte	0x354e
 7838 339f 43       		.uleb128 0x43
 7839 33a0 01       		.uleb128 0x1
 7840 33a1 51       		.byte	0x51
 7841 33a2 04       		.uleb128 0x4
 7842 33a3 91       		.byte	0x91
 7843 33a4 C47D     		.sleb128 -316
 7844 33a6 06       		.byte	0x6
 7845 33a7 43       		.uleb128 0x43
 7846 33a8 01       		.uleb128 0x1
 7847 33a9 50       		.byte	0x50
 7848 33aa 03       		.uleb128 0x3
 7849 33ab 91       		.byte	0x91
 7850 33ac D87D     		.sleb128 -296
 7851 33ae 00       		.byte	0
 7852 33af 00       		.byte	0
 7853 33b0 19       		.uleb128 0x19
 7854 33b1 E70A0000 		.4byte	0xae7
 7855 33b5 C0330000 		.4byte	0x33c0
 7856 33b9 1A       		.uleb128 0x1a
 7857 33ba 09070000 		.4byte	0x709
 7858 33be 0C       		.byte	0xc
 7859 33bf 00       		.byte	0
 7860 33c0 45       		.uleb128 0x45
 7861 33c1 261C0000 		.4byte	.LASF807
 7862 33c5 01       		.byte	0x1
 7863 33c6 0712     		.2byte	0x1207
 7864 33c8 E8190000 		.4byte	0x19e8
 7865 33cc 00000000 		.4byte	.LFB28
 7866 33d0 1E000000 		.4byte	.LFE28-.LFB28
 7867 33d4 01       		.uleb128 0x1
 7868 33d5 9C       		.byte	0x9c
 7869 33d6 0E340000 		.4byte	0x340e
 7870 33da 47       		.uleb128 0x47
 7871 33db E42A0000 		.4byte	.LASF42
 7872 33df 01       		.byte	0x1
 7873 33e0 0912     		.2byte	0x1209
 7874 33e2 E8190000 		.4byte	0x19e8
 7875 33e6 310B0000 		.4byte	.LLST68
 7876 33ea 42       		.uleb128 0x42
 7877 33eb 08000000 		.4byte	.LVL154
 7878 33ef 4D360000 		.4byte	0x364d
 7879 33f3 FD330000 		.4byte	0x33fd
 7880 33f7 43       		.uleb128 0x43
 7881 33f8 01       		.uleb128 0x1
 7882 33f9 50       		.byte	0x50
 7883 33fa 01       		.uleb128 0x1
 7884 33fb 34       		.byte	0x34
 7885 33fc 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 226


 7886 33fd 44       		.uleb128 0x44
 7887 33fe 1A000000 		.4byte	.LVL157
 7888 3402 62360000 		.4byte	0x3662
 7889 3406 43       		.uleb128 0x43
 7890 3407 01       		.uleb128 0x1
 7891 3408 50       		.byte	0x50
 7892 3409 02       		.uleb128 0x2
 7893 340a 74       		.byte	0x74
 7894 340b 00       		.sleb128 0
 7895 340c 00       		.byte	0
 7896 340d 00       		.byte	0
 7897 340e 45       		.uleb128 0x45
 7898 340f 46020000 		.4byte	.LASF808
 7899 3413 01       		.byte	0x1
 7900 3414 1412     		.2byte	0x1214
 7901 3416 E8190000 		.4byte	0x19e8
 7902 341a 00000000 		.4byte	.LFB29
 7903 341e 1E000000 		.4byte	.LFE29-.LFB29
 7904 3422 01       		.uleb128 0x1
 7905 3423 9C       		.byte	0x9c
 7906 3424 5C340000 		.4byte	0x345c
 7907 3428 47       		.uleb128 0x47
 7908 3429 E42A0000 		.4byte	.LASF42
 7909 342d 01       		.byte	0x1
 7910 342e 1612     		.2byte	0x1216
 7911 3430 E8190000 		.4byte	0x19e8
 7912 3434 5A0B0000 		.4byte	.LLST69
 7913 3438 42       		.uleb128 0x42
 7914 3439 08000000 		.4byte	.LVL159
 7915 343d 4D360000 		.4byte	0x364d
 7916 3441 4B340000 		.4byte	0x344b
 7917 3445 43       		.uleb128 0x43
 7918 3446 01       		.uleb128 0x1
 7919 3447 50       		.byte	0x50
 7920 3448 01       		.uleb128 0x1
 7921 3449 34       		.byte	0x34
 7922 344a 00       		.byte	0
 7923 344b 44       		.uleb128 0x44
 7924 344c 1A000000 		.4byte	.LVL162
 7925 3450 62360000 		.4byte	0x3662
 7926 3454 43       		.uleb128 0x43
 7927 3455 01       		.uleb128 0x1
 7928 3456 50       		.byte	0x50
 7929 3457 02       		.uleb128 0x2
 7930 3458 74       		.byte	0x74
 7931 3459 00       		.sleb128 0
 7932 345a 00       		.byte	0
 7933 345b 00       		.byte	0
 7934 345c 19       		.uleb128 0x19
 7935 345d E70A0000 		.4byte	0xae7
 7936 3461 6C340000 		.4byte	0x346c
 7937 3465 1A       		.uleb128 0x1a
 7938 3466 09070000 		.4byte	0x709
 7939 346a 03       		.byte	0x3
 7940 346b 00       		.byte	0
 7941 346c 3B       		.uleb128 0x3b
 7942 346d FE110000 		.4byte	.LASF809
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 227


 7943 3471 03       		.byte	0x3
 7944 3472 EF0A     		.2byte	0xaef
 7945 3474 7E340000 		.4byte	0x347e
 7946 3478 05       		.uleb128 0x5
 7947 3479 03       		.byte	0x3
 7948 347a 20000000 		.4byte	client
 7949 347e 16       		.uleb128 0x16
 7950 347f 5C340000 		.4byte	0x345c
 7951 3483 4F       		.uleb128 0x4f
 7952 3484 BE1C0000 		.4byte	.LASF810
 7953 3488 03       		.byte	0x3
 7954 3489 F00A     		.2byte	0xaf0
 7955 348b 94340000 		.4byte	0x3494
 7956 348f 04       		.byte	0x4
 7957 3490 53       		.byte	0x53
 7958 3491 52       		.byte	0x52
 7959 3492 56       		.byte	0x56
 7960 3493 52       		.byte	0x52
 7961 3494 16       		.uleb128 0x16
 7962 3495 5C340000 		.4byte	0x345c
 7963 3499 3B       		.uleb128 0x3b
 7964 349a 241E0000 		.4byte	.LASF811
 7965 349e 03       		.byte	0x3
 7966 349f F20A     		.2byte	0xaf2
 7967 34a1 AB340000 		.4byte	0x34ab
 7968 34a5 05       		.uleb128 0x5
 7969 34a6 03       		.byte	0x3
 7970 34a7 00000000 		.4byte	tls_client
 7971 34ab 16       		.uleb128 0x16
 7972 34ac CC190000 		.4byte	0x19cc
 7973 34b0 3B       		.uleb128 0x3b
 7974 34b1 F20D0000 		.4byte	.LASF812
 7975 34b5 03       		.byte	0x3
 7976 34b6 F30A     		.2byte	0xaf3
 7977 34b8 C2340000 		.4byte	0x34c2
 7978 34bc 05       		.uleb128 0x5
 7979 34bd 03       		.byte	0x3
 7980 34be 10000000 		.4byte	tls_server
 7981 34c2 16       		.uleb128 0x16
 7982 34c3 CC190000 		.4byte	0x19cc
 7983 34c7 19       		.uleb128 0x19
 7984 34c8 E70A0000 		.4byte	0xae7
 7985 34cc D7340000 		.4byte	0x34d7
 7986 34d0 1A       		.uleb128 0x1a
 7987 34d1 09070000 		.4byte	0x709
 7988 34d5 0D       		.byte	0xd
 7989 34d6 00       		.byte	0
 7990 34d7 3B       		.uleb128 0x3b
 7991 34d8 F00A0000 		.4byte	.LASF813
 7992 34dc 01       		.byte	0x1
 7993 34dd A601     		.2byte	0x1a6
 7994 34df E9340000 		.4byte	0x34e9
 7995 34e3 05       		.uleb128 0x5
 7996 34e4 03       		.byte	0x3
 7997 34e5 32000000 		.4byte	master_label
 7998 34e9 16       		.uleb128 0x16
 7999 34ea C7340000 		.4byte	0x34c7
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 228


 8000 34ee 3B       		.uleb128 0x3b
 8001 34ef 641E0000 		.4byte	.LASF814
 8002 34f3 01       		.byte	0x1
 8003 34f4 A701     		.2byte	0x1a7
 8004 34f6 00350000 		.4byte	0x3500
 8005 34fa 05       		.uleb128 0x5
 8006 34fb 03       		.byte	0x3
 8007 34fc 24000000 		.4byte	key_label
 8008 3500 16       		.uleb128 0x16
 8009 3501 C7340000 		.4byte	0x34c7
 8010 3505 50       		.uleb128 0x50
 8011 3506 BF030000 		.4byte	.LASF816
 8012 350a 0C       		.byte	0xc
 8013 350b A3       		.byte	0xa3
 8014 350c 02070000 		.4byte	0x702
 8015 3510 29350000 		.4byte	0x3529
 8016 3514 12       		.uleb128 0x12
 8017 3515 29350000 		.4byte	0x3529
 8018 3519 12       		.uleb128 0x12
 8019 351a 02070000 		.4byte	0x702
 8020 351e 12       		.uleb128 0x12
 8021 351f 991B0000 		.4byte	0x1b99
 8022 3523 12       		.uleb128 0x12
 8023 3524 040B0000 		.4byte	0xb04
 8024 3528 00       		.byte	0
 8025 3529 09       		.uleb128 0x9
 8026 352a 04       		.byte	0x4
 8027 352b AF110000 		.4byte	0x11af
 8028 352f 50       		.uleb128 0x50
 8029 3530 581A0000 		.4byte	.LASF817
 8030 3534 0C       		.byte	0xc
 8031 3535 A4       		.byte	0xa4
 8032 3536 02070000 		.4byte	0x702
 8033 353a 4E350000 		.4byte	0x354e
 8034 353e 12       		.uleb128 0x12
 8035 353f 29350000 		.4byte	0x3529
 8036 3543 12       		.uleb128 0x12
 8037 3544 991B0000 		.4byte	0x1b99
 8038 3548 12       		.uleb128 0x12
 8039 3549 040B0000 		.4byte	0xb04
 8040 354d 00       		.byte	0
 8041 354e 50       		.uleb128 0x50
 8042 354f 5B060000 		.4byte	.LASF818
 8043 3553 0C       		.byte	0xc
 8044 3554 A5       		.byte	0xa5
 8045 3555 02070000 		.4byte	0x702
 8046 3559 68350000 		.4byte	0x3568
 8047 355d 12       		.uleb128 0x12
 8048 355e 29350000 		.4byte	0x3529
 8049 3562 12       		.uleb128 0x12
 8050 3563 8E100000 		.4byte	0x108e
 8051 3567 00       		.byte	0
 8052 3568 51       		.uleb128 0x51
 8053 3569 54060000 		.4byte	.LASF824
 8054 356d 1E080000 		.4byte	0x81e
 8055 3571 85350000 		.4byte	0x3585
 8056 3575 12       		.uleb128 0x12
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 229


 8057 3576 1E080000 		.4byte	0x81e
 8058 357a 12       		.uleb128 0x12
 8059 357b 440B0000 		.4byte	0xb44
 8060 357f 12       		.uleb128 0x12
 8061 3580 09070000 		.4byte	0x709
 8062 3584 00       		.byte	0
 8063 3585 50       		.uleb128 0x50
 8064 3586 C7090000 		.4byte	.LASF819
 8065 358a 0E       		.byte	0xe
 8066 358b 5F       		.byte	0x5f
 8067 358c 02070000 		.4byte	0x702
 8068 3590 9F350000 		.4byte	0x359f
 8069 3594 12       		.uleb128 0x12
 8070 3595 9F350000 		.4byte	0x359f
 8071 3599 12       		.uleb128 0x12
 8072 359a 8E100000 		.4byte	0x108e
 8073 359e 00       		.byte	0
 8074 359f 09       		.uleb128 0x9
 8075 35a0 04       		.byte	0x4
 8076 35a1 2F0D0000 		.4byte	0xd2f
 8077 35a5 52       		.uleb128 0x52
 8078 35a6 96090000 		.4byte	.LASF820
 8079 35aa 03       		.byte	0x3
 8080 35ab 0D0B     		.2byte	0xb0d
 8081 35ad 02070000 		.4byte	0x702
 8082 35b1 BB350000 		.4byte	0x35bb
 8083 35b5 12       		.uleb128 0x12
 8084 35b6 BB350000 		.4byte	0x35bb
 8085 35ba 00       		.byte	0
 8086 35bb 09       		.uleb128 0x9
 8087 35bc 04       		.byte	0x4
 8088 35bd C1350000 		.4byte	0x35c1
 8089 35c1 16       		.uleb128 0x16
 8090 35c2 25000000 		.4byte	0x25
 8091 35c6 50       		.uleb128 0x50
 8092 35c7 931E0000 		.4byte	.LASF821
 8093 35cb 0F       		.byte	0xf
 8094 35cc 23       		.byte	0x23
 8095 35cd 02070000 		.4byte	0x702
 8096 35d1 E5350000 		.4byte	0x35e5
 8097 35d5 12       		.uleb128 0x12
 8098 35d6 090A0000 		.4byte	0xa09
 8099 35da 12       		.uleb128 0x12
 8100 35db 090A0000 		.4byte	0xa09
 8101 35df 12       		.uleb128 0x12
 8102 35e0 160B0000 		.4byte	0xb16
 8103 35e4 00       		.byte	0
 8104 35e5 52       		.uleb128 0x52
 8105 35e6 5B010000 		.4byte	.LASF822
 8106 35ea 03       		.byte	0x3
 8107 35eb 0A0B     		.2byte	0xb0a
 8108 35ed 02070000 		.4byte	0x702
 8109 35f1 00360000 		.4byte	0x3600
 8110 35f5 12       		.uleb128 0x12
 8111 35f6 A6090000 		.4byte	0x9a6
 8112 35fa 12       		.uleb128 0x12
 8113 35fb 991B0000 		.4byte	0x1b99
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 230


 8114 35ff 00       		.byte	0
 8115 3600 50       		.uleb128 0x50
 8116 3601 7B1F0000 		.4byte	.LASF823
 8117 3605 0F       		.byte	0xf
 8118 3606 21       		.byte	0x21
 8119 3607 160B0000 		.4byte	0xb16
 8120 360b 15360000 		.4byte	0x3615
 8121 360f 12       		.uleb128 0x12
 8122 3610 090A0000 		.4byte	0xa09
 8123 3614 00       		.byte	0
 8124 3615 51       		.uleb128 0x51
 8125 3616 56160000 		.4byte	.LASF825
 8126 361a 1E080000 		.4byte	0x81e
 8127 361e 32360000 		.4byte	0x3632
 8128 3622 12       		.uleb128 0x12
 8129 3623 1E080000 		.4byte	0x81e
 8130 3627 12       		.uleb128 0x12
 8131 3628 02070000 		.4byte	0x702
 8132 362c 12       		.uleb128 0x12
 8133 362d 09070000 		.4byte	0x709
 8134 3631 00       		.byte	0
 8135 3632 52       		.uleb128 0x52
 8136 3633 A4180000 		.4byte	.LASF826
 8137 3637 04       		.byte	0x4
 8138 3638 6F04     		.2byte	0x46f
 8139 363a 760A0000 		.4byte	0xa76
 8140 363e 4D360000 		.4byte	0x364d
 8141 3642 12       		.uleb128 0x12
 8142 3643 A6090000 		.4byte	0x9a6
 8143 3647 12       		.uleb128 0x12
 8144 3648 02070000 		.4byte	0x702
 8145 364c 00       		.byte	0
 8146 364d 50       		.uleb128 0x50
 8147 364e 3E1B0000 		.4byte	.LASF827
 8148 3652 10       		.byte	0x10
 8149 3653 2F       		.byte	0x2f
 8150 3654 1E080000 		.4byte	0x81e
 8151 3658 62360000 		.4byte	0x3662
 8152 365c 12       		.uleb128 0x12
 8153 365d 160B0000 		.4byte	0xb16
 8154 3661 00       		.byte	0
 8155 3662 53       		.uleb128 0x53
 8156 3663 4E240000 		.4byte	.LASF831
 8157 3667 03       		.byte	0x3
 8158 3668 B104     		.2byte	0x4b1
 8159 366a 12       		.uleb128 0x12
 8160 366b E8190000 		.4byte	0x19e8
 8161 366f 12       		.uleb128 0x12
 8162 3670 99150000 		.4byte	0x1599
 8163 3674 00       		.byte	0
 8164 3675 00       		.byte	0
 8165              		.section	.debug_abbrev,"",%progbits
 8166              	.Ldebug_abbrev0:
 8167 0000 01       		.uleb128 0x1
 8168 0001 11       		.uleb128 0x11
 8169 0002 01       		.byte	0x1
 8170 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 231


 8171 0004 0E       		.uleb128 0xe
 8172 0005 13       		.uleb128 0x13
 8173 0006 0B       		.uleb128 0xb
 8174 0007 03       		.uleb128 0x3
 8175 0008 0E       		.uleb128 0xe
 8176 0009 1B       		.uleb128 0x1b
 8177 000a 0E       		.uleb128 0xe
 8178 000b 55       		.uleb128 0x55
 8179 000c 17       		.uleb128 0x17
 8180 000d 11       		.uleb128 0x11
 8181 000e 01       		.uleb128 0x1
 8182 000f 10       		.uleb128 0x10
 8183 0010 17       		.uleb128 0x17
 8184 0011 00       		.byte	0
 8185 0012 00       		.byte	0
 8186 0013 02       		.uleb128 0x2
 8187 0014 16       		.uleb128 0x16
 8188 0015 00       		.byte	0
 8189 0016 03       		.uleb128 0x3
 8190 0017 0E       		.uleb128 0xe
 8191 0018 3A       		.uleb128 0x3a
 8192 0019 0B       		.uleb128 0xb
 8193 001a 3B       		.uleb128 0x3b
 8194 001b 0B       		.uleb128 0xb
 8195 001c 49       		.uleb128 0x49
 8196 001d 13       		.uleb128 0x13
 8197 001e 00       		.byte	0
 8198 001f 00       		.byte	0
 8199 0020 03       		.uleb128 0x3
 8200 0021 13       		.uleb128 0x13
 8201 0022 01       		.byte	0x1
 8202 0023 03       		.uleb128 0x3
 8203 0024 0E       		.uleb128 0xe
 8204 0025 0B       		.uleb128 0xb
 8205 0026 05       		.uleb128 0x5
 8206 0027 3A       		.uleb128 0x3a
 8207 0028 0B       		.uleb128 0xb
 8208 0029 3B       		.uleb128 0x3b
 8209 002a 05       		.uleb128 0x5
 8210 002b 01       		.uleb128 0x1
 8211 002c 13       		.uleb128 0x13
 8212 002d 00       		.byte	0
 8213 002e 00       		.byte	0
 8214 002f 04       		.uleb128 0x4
 8215 0030 0D       		.uleb128 0xd
 8216 0031 00       		.byte	0
 8217 0032 03       		.uleb128 0x3
 8218 0033 08       		.uleb128 0x8
 8219 0034 3A       		.uleb128 0x3a
 8220 0035 0B       		.uleb128 0xb
 8221 0036 3B       		.uleb128 0x3b
 8222 0037 05       		.uleb128 0x5
 8223 0038 49       		.uleb128 0x49
 8224 0039 13       		.uleb128 0x13
 8225 003a 38       		.uleb128 0x38
 8226 003b 0B       		.uleb128 0xb
 8227 003c 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 232


 8228 003d 00       		.byte	0
 8229 003e 05       		.uleb128 0x5
 8230 003f 0D       		.uleb128 0xd
 8231 0040 00       		.byte	0
 8232 0041 03       		.uleb128 0x3
 8233 0042 0E       		.uleb128 0xe
 8234 0043 3A       		.uleb128 0x3a
 8235 0044 0B       		.uleb128 0xb
 8236 0045 3B       		.uleb128 0x3b
 8237 0046 05       		.uleb128 0x5
 8238 0047 49       		.uleb128 0x49
 8239 0048 13       		.uleb128 0x13
 8240 0049 38       		.uleb128 0x38
 8241 004a 0B       		.uleb128 0xb
 8242 004b 00       		.byte	0
 8243 004c 00       		.byte	0
 8244 004d 06       		.uleb128 0x6
 8245 004e 0D       		.uleb128 0xd
 8246 004f 00       		.byte	0
 8247 0050 03       		.uleb128 0x3
 8248 0051 0E       		.uleb128 0xe
 8249 0052 3A       		.uleb128 0x3a
 8250 0053 0B       		.uleb128 0xb
 8251 0054 3B       		.uleb128 0x3b
 8252 0055 05       		.uleb128 0x5
 8253 0056 49       		.uleb128 0x49
 8254 0057 13       		.uleb128 0x13
 8255 0058 38       		.uleb128 0x38
 8256 0059 05       		.uleb128 0x5
 8257 005a 00       		.byte	0
 8258 005b 00       		.byte	0
 8259 005c 07       		.uleb128 0x7
 8260 005d 0D       		.uleb128 0xd
 8261 005e 00       		.byte	0
 8262 005f 03       		.uleb128 0x3
 8263 0060 08       		.uleb128 0x8
 8264 0061 3A       		.uleb128 0x3a
 8265 0062 0B       		.uleb128 0xb
 8266 0063 3B       		.uleb128 0x3b
 8267 0064 05       		.uleb128 0x5
 8268 0065 49       		.uleb128 0x49
 8269 0066 13       		.uleb128 0x13
 8270 0067 38       		.uleb128 0x38
 8271 0068 05       		.uleb128 0x5
 8272 0069 00       		.byte	0
 8273 006a 00       		.byte	0
 8274 006b 08       		.uleb128 0x8
 8275 006c 13       		.uleb128 0x13
 8276 006d 01       		.byte	0x1
 8277 006e 03       		.uleb128 0x3
 8278 006f 0E       		.uleb128 0xe
 8279 0070 0B       		.uleb128 0xb
 8280 0071 0B       		.uleb128 0xb
 8281 0072 3A       		.uleb128 0x3a
 8282 0073 0B       		.uleb128 0xb
 8283 0074 3B       		.uleb128 0x3b
 8284 0075 05       		.uleb128 0x5
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 233


 8285 0076 01       		.uleb128 0x1
 8286 0077 13       		.uleb128 0x13
 8287 0078 00       		.byte	0
 8288 0079 00       		.byte	0
 8289 007a 09       		.uleb128 0x9
 8290 007b 0F       		.uleb128 0xf
 8291 007c 00       		.byte	0
 8292 007d 0B       		.uleb128 0xb
 8293 007e 0B       		.uleb128 0xb
 8294 007f 49       		.uleb128 0x49
 8295 0080 13       		.uleb128 0x13
 8296 0081 00       		.byte	0
 8297 0082 00       		.byte	0
 8298 0083 0A       		.uleb128 0xa
 8299 0084 24       		.uleb128 0x24
 8300 0085 00       		.byte	0
 8301 0086 0B       		.uleb128 0xb
 8302 0087 0B       		.uleb128 0xb
 8303 0088 3E       		.uleb128 0x3e
 8304 0089 0B       		.uleb128 0xb
 8305 008a 03       		.uleb128 0x3
 8306 008b 0E       		.uleb128 0xe
 8307 008c 00       		.byte	0
 8308 008d 00       		.byte	0
 8309 008e 0B       		.uleb128 0xb
 8310 008f 24       		.uleb128 0x24
 8311 0090 00       		.byte	0
 8312 0091 0B       		.uleb128 0xb
 8313 0092 0B       		.uleb128 0xb
 8314 0093 3E       		.uleb128 0x3e
 8315 0094 0B       		.uleb128 0xb
 8316 0095 03       		.uleb128 0x3
 8317 0096 08       		.uleb128 0x8
 8318 0097 00       		.byte	0
 8319 0098 00       		.byte	0
 8320 0099 0C       		.uleb128 0xc
 8321 009a 13       		.uleb128 0x13
 8322 009b 01       		.byte	0x1
 8323 009c 03       		.uleb128 0x3
 8324 009d 0E       		.uleb128 0xe
 8325 009e 0B       		.uleb128 0xb
 8326 009f 0B       		.uleb128 0xb
 8327 00a0 3A       		.uleb128 0x3a
 8328 00a1 0B       		.uleb128 0xb
 8329 00a2 3B       		.uleb128 0x3b
 8330 00a3 0B       		.uleb128 0xb
 8331 00a4 01       		.uleb128 0x1
 8332 00a5 13       		.uleb128 0x13
 8333 00a6 00       		.byte	0
 8334 00a7 00       		.byte	0
 8335 00a8 0D       		.uleb128 0xd
 8336 00a9 0D       		.uleb128 0xd
 8337 00aa 00       		.byte	0
 8338 00ab 03       		.uleb128 0x3
 8339 00ac 0E       		.uleb128 0xe
 8340 00ad 3A       		.uleb128 0x3a
 8341 00ae 0B       		.uleb128 0xb
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 234


 8342 00af 3B       		.uleb128 0x3b
 8343 00b0 0B       		.uleb128 0xb
 8344 00b1 49       		.uleb128 0x49
 8345 00b2 13       		.uleb128 0x13
 8346 00b3 38       		.uleb128 0x38
 8347 00b4 0B       		.uleb128 0xb
 8348 00b5 00       		.byte	0
 8349 00b6 00       		.byte	0
 8350 00b7 0E       		.uleb128 0xe
 8351 00b8 0D       		.uleb128 0xd
 8352 00b9 00       		.byte	0
 8353 00ba 03       		.uleb128 0x3
 8354 00bb 08       		.uleb128 0x8
 8355 00bc 3A       		.uleb128 0x3a
 8356 00bd 0B       		.uleb128 0xb
 8357 00be 3B       		.uleb128 0x3b
 8358 00bf 0B       		.uleb128 0xb
 8359 00c0 49       		.uleb128 0x49
 8360 00c1 13       		.uleb128 0x13
 8361 00c2 38       		.uleb128 0x38
 8362 00c3 0B       		.uleb128 0xb
 8363 00c4 00       		.byte	0
 8364 00c5 00       		.byte	0
 8365 00c6 0F       		.uleb128 0xf
 8366 00c7 0F       		.uleb128 0xf
 8367 00c8 00       		.byte	0
 8368 00c9 0B       		.uleb128 0xb
 8369 00ca 0B       		.uleb128 0xb
 8370 00cb 00       		.byte	0
 8371 00cc 00       		.byte	0
 8372 00cd 10       		.uleb128 0x10
 8373 00ce 16       		.uleb128 0x16
 8374 00cf 00       		.byte	0
 8375 00d0 03       		.uleb128 0x3
 8376 00d1 0E       		.uleb128 0xe
 8377 00d2 3A       		.uleb128 0x3a
 8378 00d3 0B       		.uleb128 0xb
 8379 00d4 3B       		.uleb128 0x3b
 8380 00d5 05       		.uleb128 0x5
 8381 00d6 49       		.uleb128 0x49
 8382 00d7 13       		.uleb128 0x13
 8383 00d8 00       		.byte	0
 8384 00d9 00       		.byte	0
 8385 00da 11       		.uleb128 0x11
 8386 00db 15       		.uleb128 0x15
 8387 00dc 01       		.byte	0x1
 8388 00dd 27       		.uleb128 0x27
 8389 00de 19       		.uleb128 0x19
 8390 00df 49       		.uleb128 0x49
 8391 00e0 13       		.uleb128 0x13
 8392 00e1 01       		.uleb128 0x1
 8393 00e2 13       		.uleb128 0x13
 8394 00e3 00       		.byte	0
 8395 00e4 00       		.byte	0
 8396 00e5 12       		.uleb128 0x12
 8397 00e6 05       		.uleb128 0x5
 8398 00e7 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 235


 8399 00e8 49       		.uleb128 0x49
 8400 00e9 13       		.uleb128 0x13
 8401 00ea 00       		.byte	0
 8402 00eb 00       		.byte	0
 8403 00ec 13       		.uleb128 0x13
 8404 00ed 04       		.uleb128 0x4
 8405 00ee 01       		.byte	0x1
 8406 00ef 0B       		.uleb128 0xb
 8407 00f0 0B       		.uleb128 0xb
 8408 00f1 3A       		.uleb128 0x3a
 8409 00f2 0B       		.uleb128 0xb
 8410 00f3 3B       		.uleb128 0x3b
 8411 00f4 05       		.uleb128 0x5
 8412 00f5 01       		.uleb128 0x1
 8413 00f6 13       		.uleb128 0x13
 8414 00f7 00       		.byte	0
 8415 00f8 00       		.byte	0
 8416 00f9 14       		.uleb128 0x14
 8417 00fa 28       		.uleb128 0x28
 8418 00fb 00       		.byte	0
 8419 00fc 03       		.uleb128 0x3
 8420 00fd 0E       		.uleb128 0xe
 8421 00fe 1C       		.uleb128 0x1c
 8422 00ff 0D       		.uleb128 0xd
 8423 0100 00       		.byte	0
 8424 0101 00       		.byte	0
 8425 0102 15       		.uleb128 0x15
 8426 0103 15       		.uleb128 0x15
 8427 0104 01       		.byte	0x1
 8428 0105 27       		.uleb128 0x27
 8429 0106 19       		.uleb128 0x19
 8430 0107 01       		.uleb128 0x1
 8431 0108 13       		.uleb128 0x13
 8432 0109 00       		.byte	0
 8433 010a 00       		.byte	0
 8434 010b 16       		.uleb128 0x16
 8435 010c 26       		.uleb128 0x26
 8436 010d 00       		.byte	0
 8437 010e 49       		.uleb128 0x49
 8438 010f 13       		.uleb128 0x13
 8439 0110 00       		.byte	0
 8440 0111 00       		.byte	0
 8441 0112 17       		.uleb128 0x17
 8442 0113 26       		.uleb128 0x26
 8443 0114 00       		.byte	0
 8444 0115 00       		.byte	0
 8445 0116 00       		.byte	0
 8446 0117 18       		.uleb128 0x18
 8447 0118 04       		.uleb128 0x4
 8448 0119 01       		.byte	0x1
 8449 011a 0B       		.uleb128 0xb
 8450 011b 0B       		.uleb128 0xb
 8451 011c 3A       		.uleb128 0x3a
 8452 011d 0B       		.uleb128 0xb
 8453 011e 3B       		.uleb128 0x3b
 8454 011f 0B       		.uleb128 0xb
 8455 0120 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 236


 8456 0121 13       		.uleb128 0x13
 8457 0122 00       		.byte	0
 8458 0123 00       		.byte	0
 8459 0124 19       		.uleb128 0x19
 8460 0125 01       		.uleb128 0x1
 8461 0126 01       		.byte	0x1
 8462 0127 49       		.uleb128 0x49
 8463 0128 13       		.uleb128 0x13
 8464 0129 01       		.uleb128 0x1
 8465 012a 13       		.uleb128 0x13
 8466 012b 00       		.byte	0
 8467 012c 00       		.byte	0
 8468 012d 1A       		.uleb128 0x1a
 8469 012e 21       		.uleb128 0x21
 8470 012f 00       		.byte	0
 8471 0130 49       		.uleb128 0x49
 8472 0131 13       		.uleb128 0x13
 8473 0132 2F       		.uleb128 0x2f
 8474 0133 0B       		.uleb128 0xb
 8475 0134 00       		.byte	0
 8476 0135 00       		.byte	0
 8477 0136 1B       		.uleb128 0x1b
 8478 0137 13       		.uleb128 0x13
 8479 0138 00       		.byte	0
 8480 0139 03       		.uleb128 0x3
 8481 013a 0E       		.uleb128 0xe
 8482 013b 3C       		.uleb128 0x3c
 8483 013c 19       		.uleb128 0x19
 8484 013d 00       		.byte	0
 8485 013e 00       		.byte	0
 8486 013f 1C       		.uleb128 0x1c
 8487 0140 28       		.uleb128 0x28
 8488 0141 00       		.byte	0
 8489 0142 03       		.uleb128 0x3
 8490 0143 08       		.uleb128 0x8
 8491 0144 1C       		.uleb128 0x1c
 8492 0145 0D       		.uleb128 0xd
 8493 0146 00       		.byte	0
 8494 0147 00       		.byte	0
 8495 0148 1D       		.uleb128 0x1d
 8496 0149 13       		.uleb128 0x13
 8497 014a 01       		.byte	0x1
 8498 014b 03       		.uleb128 0x3
 8499 014c 08       		.uleb128 0x8
 8500 014d 0B       		.uleb128 0xb
 8501 014e 0B       		.uleb128 0xb
 8502 014f 3A       		.uleb128 0x3a
 8503 0150 0B       		.uleb128 0xb
 8504 0151 3B       		.uleb128 0x3b
 8505 0152 0B       		.uleb128 0xb
 8506 0153 01       		.uleb128 0x1
 8507 0154 13       		.uleb128 0x13
 8508 0155 00       		.byte	0
 8509 0156 00       		.byte	0
 8510 0157 1E       		.uleb128 0x1e
 8511 0158 16       		.uleb128 0x16
 8512 0159 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 237


 8513 015a 03       		.uleb128 0x3
 8514 015b 08       		.uleb128 0x8
 8515 015c 3A       		.uleb128 0x3a
 8516 015d 0B       		.uleb128 0xb
 8517 015e 3B       		.uleb128 0x3b
 8518 015f 0B       		.uleb128 0xb
 8519 0160 49       		.uleb128 0x49
 8520 0161 13       		.uleb128 0x13
 8521 0162 00       		.byte	0
 8522 0163 00       		.byte	0
 8523 0164 1F       		.uleb128 0x1f
 8524 0165 04       		.uleb128 0x4
 8525 0166 01       		.byte	0x1
 8526 0167 03       		.uleb128 0x3
 8527 0168 0E       		.uleb128 0xe
 8528 0169 0B       		.uleb128 0xb
 8529 016a 0B       		.uleb128 0xb
 8530 016b 3A       		.uleb128 0x3a
 8531 016c 0B       		.uleb128 0xb
 8532 016d 3B       		.uleb128 0x3b
 8533 016e 0B       		.uleb128 0xb
 8534 016f 01       		.uleb128 0x1
 8535 0170 13       		.uleb128 0x13
 8536 0171 00       		.byte	0
 8537 0172 00       		.byte	0
 8538 0173 20       		.uleb128 0x20
 8539 0174 17       		.uleb128 0x17
 8540 0175 01       		.byte	0x1
 8541 0176 0B       		.uleb128 0xb
 8542 0177 0B       		.uleb128 0xb
 8543 0178 3A       		.uleb128 0x3a
 8544 0179 0B       		.uleb128 0xb
 8545 017a 3B       		.uleb128 0x3b
 8546 017b 0B       		.uleb128 0xb
 8547 017c 01       		.uleb128 0x1
 8548 017d 13       		.uleb128 0x13
 8549 017e 00       		.byte	0
 8550 017f 00       		.byte	0
 8551 0180 21       		.uleb128 0x21
 8552 0181 0D       		.uleb128 0xd
 8553 0182 00       		.byte	0
 8554 0183 03       		.uleb128 0x3
 8555 0184 08       		.uleb128 0x8
 8556 0185 3A       		.uleb128 0x3a
 8557 0186 0B       		.uleb128 0xb
 8558 0187 3B       		.uleb128 0x3b
 8559 0188 0B       		.uleb128 0xb
 8560 0189 49       		.uleb128 0x49
 8561 018a 13       		.uleb128 0x13
 8562 018b 00       		.byte	0
 8563 018c 00       		.byte	0
 8564 018d 22       		.uleb128 0x22
 8565 018e 0D       		.uleb128 0xd
 8566 018f 00       		.byte	0
 8567 0190 03       		.uleb128 0x3
 8568 0191 0E       		.uleb128 0xe
 8569 0192 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 238


 8570 0193 0B       		.uleb128 0xb
 8571 0194 3B       		.uleb128 0x3b
 8572 0195 0B       		.uleb128 0xb
 8573 0196 49       		.uleb128 0x49
 8574 0197 13       		.uleb128 0x13
 8575 0198 00       		.byte	0
 8576 0199 00       		.byte	0
 8577 019a 23       		.uleb128 0x23
 8578 019b 13       		.uleb128 0x13
 8579 019c 01       		.byte	0x1
 8580 019d 03       		.uleb128 0x3
 8581 019e 0E       		.uleb128 0xe
 8582 019f 0B       		.uleb128 0xb
 8583 01a0 05       		.uleb128 0x5
 8584 01a1 3A       		.uleb128 0x3a
 8585 01a2 0B       		.uleb128 0xb
 8586 01a3 3B       		.uleb128 0x3b
 8587 01a4 0B       		.uleb128 0xb
 8588 01a5 01       		.uleb128 0x1
 8589 01a6 13       		.uleb128 0x13
 8590 01a7 00       		.byte	0
 8591 01a8 00       		.byte	0
 8592 01a9 24       		.uleb128 0x24
 8593 01aa 0D       		.uleb128 0xd
 8594 01ab 00       		.byte	0
 8595 01ac 03       		.uleb128 0x3
 8596 01ad 0E       		.uleb128 0xe
 8597 01ae 3A       		.uleb128 0x3a
 8598 01af 0B       		.uleb128 0xb
 8599 01b0 3B       		.uleb128 0x3b
 8600 01b1 0B       		.uleb128 0xb
 8601 01b2 49       		.uleb128 0x49
 8602 01b3 13       		.uleb128 0x13
 8603 01b4 38       		.uleb128 0x38
 8604 01b5 05       		.uleb128 0x5
 8605 01b6 00       		.byte	0
 8606 01b7 00       		.byte	0
 8607 01b8 25       		.uleb128 0x25
 8608 01b9 04       		.uleb128 0x4
 8609 01ba 01       		.byte	0x1
 8610 01bb 03       		.uleb128 0x3
 8611 01bc 0E       		.uleb128 0xe
 8612 01bd 0B       		.uleb128 0xb
 8613 01be 0B       		.uleb128 0xb
 8614 01bf 3A       		.uleb128 0x3a
 8615 01c0 0B       		.uleb128 0xb
 8616 01c1 3B       		.uleb128 0x3b
 8617 01c2 05       		.uleb128 0x5
 8618 01c3 01       		.uleb128 0x1
 8619 01c4 13       		.uleb128 0x13
 8620 01c5 00       		.byte	0
 8621 01c6 00       		.byte	0
 8622 01c7 26       		.uleb128 0x26
 8623 01c8 13       		.uleb128 0x13
 8624 01c9 01       		.byte	0x1
 8625 01ca 0B       		.uleb128 0xb
 8626 01cb 0B       		.uleb128 0xb
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 239


 8627 01cc 3A       		.uleb128 0x3a
 8628 01cd 0B       		.uleb128 0xb
 8629 01ce 3B       		.uleb128 0x3b
 8630 01cf 05       		.uleb128 0x5
 8631 01d0 01       		.uleb128 0x1
 8632 01d1 13       		.uleb128 0x13
 8633 01d2 00       		.byte	0
 8634 01d3 00       		.byte	0
 8635 01d4 27       		.uleb128 0x27
 8636 01d5 21       		.uleb128 0x21
 8637 01d6 00       		.byte	0
 8638 01d7 49       		.uleb128 0x49
 8639 01d8 13       		.uleb128 0x13
 8640 01d9 2F       		.uleb128 0x2f
 8641 01da 05       		.uleb128 0x5
 8642 01db 00       		.byte	0
 8643 01dc 00       		.byte	0
 8644 01dd 28       		.uleb128 0x28
 8645 01de 0D       		.uleb128 0xd
 8646 01df 00       		.byte	0
 8647 01e0 03       		.uleb128 0x3
 8648 01e1 0E       		.uleb128 0xe
 8649 01e2 3A       		.uleb128 0x3a
 8650 01e3 0B       		.uleb128 0xb
 8651 01e4 3B       		.uleb128 0x3b
 8652 01e5 05       		.uleb128 0x5
 8653 01e6 49       		.uleb128 0x49
 8654 01e7 13       		.uleb128 0x13
 8655 01e8 0B       		.uleb128 0xb
 8656 01e9 0B       		.uleb128 0xb
 8657 01ea 0D       		.uleb128 0xd
 8658 01eb 0B       		.uleb128 0xb
 8659 01ec 0C       		.uleb128 0xc
 8660 01ed 0B       		.uleb128 0xb
 8661 01ee 38       		.uleb128 0x38
 8662 01ef 0B       		.uleb128 0xb
 8663 01f0 00       		.byte	0
 8664 01f1 00       		.byte	0
 8665 01f2 29       		.uleb128 0x29
 8666 01f3 0D       		.uleb128 0xd
 8667 01f4 00       		.byte	0
 8668 01f5 03       		.uleb128 0x3
 8669 01f6 08       		.uleb128 0x8
 8670 01f7 3A       		.uleb128 0x3a
 8671 01f8 0B       		.uleb128 0xb
 8672 01f9 3B       		.uleb128 0x3b
 8673 01fa 05       		.uleb128 0x5
 8674 01fb 49       		.uleb128 0x49
 8675 01fc 13       		.uleb128 0x13
 8676 01fd 0B       		.uleb128 0xb
 8677 01fe 0B       		.uleb128 0xb
 8678 01ff 0D       		.uleb128 0xd
 8679 0200 0B       		.uleb128 0xb
 8680 0201 0C       		.uleb128 0xc
 8681 0202 0B       		.uleb128 0xb
 8682 0203 38       		.uleb128 0x38
 8683 0204 0B       		.uleb128 0xb
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 240


 8684 0205 00       		.byte	0
 8685 0206 00       		.byte	0
 8686 0207 2A       		.uleb128 0x2a
 8687 0208 2E       		.uleb128 0x2e
 8688 0209 01       		.byte	0x1
 8689 020a 03       		.uleb128 0x3
 8690 020b 08       		.uleb128 0x8
 8691 020c 3A       		.uleb128 0x3a
 8692 020d 0B       		.uleb128 0xb
 8693 020e 3B       		.uleb128 0x3b
 8694 020f 0B       		.uleb128 0xb
 8695 0210 27       		.uleb128 0x27
 8696 0211 19       		.uleb128 0x19
 8697 0212 49       		.uleb128 0x49
 8698 0213 13       		.uleb128 0x13
 8699 0214 20       		.uleb128 0x20
 8700 0215 0B       		.uleb128 0xb
 8701 0216 01       		.uleb128 0x1
 8702 0217 13       		.uleb128 0x13
 8703 0218 00       		.byte	0
 8704 0219 00       		.byte	0
 8705 021a 2B       		.uleb128 0x2b
 8706 021b 05       		.uleb128 0x5
 8707 021c 00       		.byte	0
 8708 021d 03       		.uleb128 0x3
 8709 021e 08       		.uleb128 0x8
 8710 021f 3A       		.uleb128 0x3a
 8711 0220 0B       		.uleb128 0xb
 8712 0221 3B       		.uleb128 0x3b
 8713 0222 0B       		.uleb128 0xb
 8714 0223 49       		.uleb128 0x49
 8715 0224 13       		.uleb128 0x13
 8716 0225 00       		.byte	0
 8717 0226 00       		.byte	0
 8718 0227 2C       		.uleb128 0x2c
 8719 0228 2E       		.uleb128 0x2e
 8720 0229 01       		.byte	0x1
 8721 022a 03       		.uleb128 0x3
 8722 022b 0E       		.uleb128 0xe
 8723 022c 3A       		.uleb128 0x3a
 8724 022d 0B       		.uleb128 0xb
 8725 022e 3B       		.uleb128 0x3b
 8726 022f 05       		.uleb128 0x5
 8727 0230 27       		.uleb128 0x27
 8728 0231 19       		.uleb128 0x19
 8729 0232 20       		.uleb128 0x20
 8730 0233 0B       		.uleb128 0xb
 8731 0234 01       		.uleb128 0x1
 8732 0235 13       		.uleb128 0x13
 8733 0236 00       		.byte	0
 8734 0237 00       		.byte	0
 8735 0238 2D       		.uleb128 0x2d
 8736 0239 05       		.uleb128 0x5
 8737 023a 00       		.byte	0
 8738 023b 03       		.uleb128 0x3
 8739 023c 08       		.uleb128 0x8
 8740 023d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 241


 8741 023e 0B       		.uleb128 0xb
 8742 023f 3B       		.uleb128 0x3b
 8743 0240 05       		.uleb128 0x5
 8744 0241 49       		.uleb128 0x49
 8745 0242 13       		.uleb128 0x13
 8746 0243 00       		.byte	0
 8747 0244 00       		.byte	0
 8748 0245 2E       		.uleb128 0x2e
 8749 0246 2E       		.uleb128 0x2e
 8750 0247 01       		.byte	0x1
 8751 0248 3F       		.uleb128 0x3f
 8752 0249 19       		.uleb128 0x19
 8753 024a 03       		.uleb128 0x3
 8754 024b 0E       		.uleb128 0xe
 8755 024c 3A       		.uleb128 0x3a
 8756 024d 0B       		.uleb128 0xb
 8757 024e 3B       		.uleb128 0x3b
 8758 024f 05       		.uleb128 0x5
 8759 0250 27       		.uleb128 0x27
 8760 0251 19       		.uleb128 0x19
 8761 0252 49       		.uleb128 0x49
 8762 0253 13       		.uleb128 0x13
 8763 0254 20       		.uleb128 0x20
 8764 0255 0B       		.uleb128 0xb
 8765 0256 01       		.uleb128 0x1
 8766 0257 13       		.uleb128 0x13
 8767 0258 00       		.byte	0
 8768 0259 00       		.byte	0
 8769 025a 2F       		.uleb128 0x2f
 8770 025b 34       		.uleb128 0x34
 8771 025c 00       		.byte	0
 8772 025d 03       		.uleb128 0x3
 8773 025e 08       		.uleb128 0x8
 8774 025f 3A       		.uleb128 0x3a
 8775 0260 0B       		.uleb128 0xb
 8776 0261 3B       		.uleb128 0x3b
 8777 0262 05       		.uleb128 0x5
 8778 0263 49       		.uleb128 0x49
 8779 0264 13       		.uleb128 0x13
 8780 0265 00       		.byte	0
 8781 0266 00       		.byte	0
 8782 0267 30       		.uleb128 0x30
 8783 0268 2E       		.uleb128 0x2e
 8784 0269 01       		.byte	0x1
 8785 026a 03       		.uleb128 0x3
 8786 026b 0E       		.uleb128 0xe
 8787 026c 3A       		.uleb128 0x3a
 8788 026d 0B       		.uleb128 0xb
 8789 026e 3B       		.uleb128 0x3b
 8790 026f 0B       		.uleb128 0xb
 8791 0270 27       		.uleb128 0x27
 8792 0271 19       		.uleb128 0x19
 8793 0272 49       		.uleb128 0x49
 8794 0273 13       		.uleb128 0x13
 8795 0274 20       		.uleb128 0x20
 8796 0275 0B       		.uleb128 0xb
 8797 0276 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 242


 8798 0277 13       		.uleb128 0x13
 8799 0278 00       		.byte	0
 8800 0279 00       		.byte	0
 8801 027a 31       		.uleb128 0x31
 8802 027b 05       		.uleb128 0x5
 8803 027c 00       		.byte	0
 8804 027d 03       		.uleb128 0x3
 8805 027e 0E       		.uleb128 0xe
 8806 027f 3A       		.uleb128 0x3a
 8807 0280 0B       		.uleb128 0xb
 8808 0281 3B       		.uleb128 0x3b
 8809 0282 0B       		.uleb128 0xb
 8810 0283 49       		.uleb128 0x49
 8811 0284 13       		.uleb128 0x13
 8812 0285 00       		.byte	0
 8813 0286 00       		.byte	0
 8814 0287 32       		.uleb128 0x32
 8815 0288 34       		.uleb128 0x34
 8816 0289 00       		.byte	0
 8817 028a 03       		.uleb128 0x3
 8818 028b 08       		.uleb128 0x8
 8819 028c 3A       		.uleb128 0x3a
 8820 028d 0B       		.uleb128 0xb
 8821 028e 3B       		.uleb128 0x3b
 8822 028f 0B       		.uleb128 0xb
 8823 0290 49       		.uleb128 0x49
 8824 0291 13       		.uleb128 0x13
 8825 0292 00       		.byte	0
 8826 0293 00       		.byte	0
 8827 0294 33       		.uleb128 0x33
 8828 0295 34       		.uleb128 0x34
 8829 0296 00       		.byte	0
 8830 0297 03       		.uleb128 0x3
 8831 0298 0E       		.uleb128 0xe
 8832 0299 3A       		.uleb128 0x3a
 8833 029a 0B       		.uleb128 0xb
 8834 029b 3B       		.uleb128 0x3b
 8835 029c 0B       		.uleb128 0xb
 8836 029d 49       		.uleb128 0x49
 8837 029e 13       		.uleb128 0x13
 8838 029f 00       		.byte	0
 8839 02a0 00       		.byte	0
 8840 02a1 34       		.uleb128 0x34
 8841 02a2 2E       		.uleb128 0x2e
 8842 02a3 01       		.byte	0x1
 8843 02a4 03       		.uleb128 0x3
 8844 02a5 0E       		.uleb128 0xe
 8845 02a6 3A       		.uleb128 0x3a
 8846 02a7 0B       		.uleb128 0xb
 8847 02a8 3B       		.uleb128 0x3b
 8848 02a9 0B       		.uleb128 0xb
 8849 02aa 27       		.uleb128 0x27
 8850 02ab 19       		.uleb128 0x19
 8851 02ac 20       		.uleb128 0x20
 8852 02ad 0B       		.uleb128 0xb
 8853 02ae 01       		.uleb128 0x1
 8854 02af 13       		.uleb128 0x13
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 243


 8855 02b0 00       		.byte	0
 8856 02b1 00       		.byte	0
 8857 02b2 35       		.uleb128 0x35
 8858 02b3 35       		.uleb128 0x35
 8859 02b4 00       		.byte	0
 8860 02b5 49       		.uleb128 0x49
 8861 02b6 13       		.uleb128 0x13
 8862 02b7 00       		.byte	0
 8863 02b8 00       		.byte	0
 8864 02b9 36       		.uleb128 0x36
 8865 02ba 2E       		.uleb128 0x2e
 8866 02bb 01       		.byte	0x1
 8867 02bc 03       		.uleb128 0x3
 8868 02bd 08       		.uleb128 0x8
 8869 02be 3A       		.uleb128 0x3a
 8870 02bf 0B       		.uleb128 0xb
 8871 02c0 3B       		.uleb128 0x3b
 8872 02c1 05       		.uleb128 0x5
 8873 02c2 27       		.uleb128 0x27
 8874 02c3 19       		.uleb128 0x19
 8875 02c4 49       		.uleb128 0x49
 8876 02c5 13       		.uleb128 0x13
 8877 02c6 11       		.uleb128 0x11
 8878 02c7 01       		.uleb128 0x1
 8879 02c8 12       		.uleb128 0x12
 8880 02c9 06       		.uleb128 0x6
 8881 02ca 40       		.uleb128 0x40
 8882 02cb 18       		.uleb128 0x18
 8883 02cc 9642     		.uleb128 0x2116
 8884 02ce 19       		.uleb128 0x19
 8885 02cf 01       		.uleb128 0x1
 8886 02d0 13       		.uleb128 0x13
 8887 02d1 00       		.byte	0
 8888 02d2 00       		.byte	0
 8889 02d3 37       		.uleb128 0x37
 8890 02d4 05       		.uleb128 0x5
 8891 02d5 00       		.byte	0
 8892 02d6 03       		.uleb128 0x3
 8893 02d7 0E       		.uleb128 0xe
 8894 02d8 3A       		.uleb128 0x3a
 8895 02d9 0B       		.uleb128 0xb
 8896 02da 3B       		.uleb128 0x3b
 8897 02db 05       		.uleb128 0x5
 8898 02dc 49       		.uleb128 0x49
 8899 02dd 13       		.uleb128 0x13
 8900 02de 02       		.uleb128 0x2
 8901 02df 17       		.uleb128 0x17
 8902 02e0 00       		.byte	0
 8903 02e1 00       		.byte	0
 8904 02e2 38       		.uleb128 0x38
 8905 02e3 05       		.uleb128 0x5
 8906 02e4 00       		.byte	0
 8907 02e5 03       		.uleb128 0x3
 8908 02e6 0E       		.uleb128 0xe
 8909 02e7 3A       		.uleb128 0x3a
 8910 02e8 0B       		.uleb128 0xb
 8911 02e9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 244


 8912 02ea 05       		.uleb128 0x5
 8913 02eb 49       		.uleb128 0x49
 8914 02ec 13       		.uleb128 0x13
 8915 02ed 02       		.uleb128 0x2
 8916 02ee 18       		.uleb128 0x18
 8917 02ef 00       		.byte	0
 8918 02f0 00       		.byte	0
 8919 02f1 39       		.uleb128 0x39
 8920 02f2 34       		.uleb128 0x34
 8921 02f3 00       		.byte	0
 8922 02f4 03       		.uleb128 0x3
 8923 02f5 08       		.uleb128 0x8
 8924 02f6 3A       		.uleb128 0x3a
 8925 02f7 0B       		.uleb128 0xb
 8926 02f8 3B       		.uleb128 0x3b
 8927 02f9 05       		.uleb128 0x5
 8928 02fa 49       		.uleb128 0x49
 8929 02fb 13       		.uleb128 0x13
 8930 02fc 02       		.uleb128 0x2
 8931 02fd 17       		.uleb128 0x17
 8932 02fe 00       		.byte	0
 8933 02ff 00       		.byte	0
 8934 0300 3A       		.uleb128 0x3a
 8935 0301 0B       		.uleb128 0xb
 8936 0302 01       		.byte	0x1
 8937 0303 11       		.uleb128 0x11
 8938 0304 01       		.uleb128 0x1
 8939 0305 12       		.uleb128 0x12
 8940 0306 06       		.uleb128 0x6
 8941 0307 00       		.byte	0
 8942 0308 00       		.byte	0
 8943 0309 3B       		.uleb128 0x3b
 8944 030a 34       		.uleb128 0x34
 8945 030b 00       		.byte	0
 8946 030c 03       		.uleb128 0x3
 8947 030d 0E       		.uleb128 0xe
 8948 030e 3A       		.uleb128 0x3a
 8949 030f 0B       		.uleb128 0xb
 8950 0310 3B       		.uleb128 0x3b
 8951 0311 05       		.uleb128 0x5
 8952 0312 49       		.uleb128 0x49
 8953 0313 13       		.uleb128 0x13
 8954 0314 02       		.uleb128 0x2
 8955 0315 18       		.uleb128 0x18
 8956 0316 00       		.byte	0
 8957 0317 00       		.byte	0
 8958 0318 3C       		.uleb128 0x3c
 8959 0319 1D       		.uleb128 0x1d
 8960 031a 01       		.byte	0x1
 8961 031b 31       		.uleb128 0x31
 8962 031c 13       		.uleb128 0x13
 8963 031d 11       		.uleb128 0x11
 8964 031e 01       		.uleb128 0x1
 8965 031f 12       		.uleb128 0x12
 8966 0320 06       		.uleb128 0x6
 8967 0321 58       		.uleb128 0x58
 8968 0322 0B       		.uleb128 0xb
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 245


 8969 0323 59       		.uleb128 0x59
 8970 0324 05       		.uleb128 0x5
 8971 0325 01       		.uleb128 0x1
 8972 0326 13       		.uleb128 0x13
 8973 0327 00       		.byte	0
 8974 0328 00       		.byte	0
 8975 0329 3D       		.uleb128 0x3d
 8976 032a 05       		.uleb128 0x5
 8977 032b 00       		.byte	0
 8978 032c 31       		.uleb128 0x31
 8979 032d 13       		.uleb128 0x13
 8980 032e 02       		.uleb128 0x2
 8981 032f 17       		.uleb128 0x17
 8982 0330 00       		.byte	0
 8983 0331 00       		.byte	0
 8984 0332 3E       		.uleb128 0x3e
 8985 0333 34       		.uleb128 0x34
 8986 0334 00       		.byte	0
 8987 0335 31       		.uleb128 0x31
 8988 0336 13       		.uleb128 0x13
 8989 0337 02       		.uleb128 0x2
 8990 0338 17       		.uleb128 0x17
 8991 0339 00       		.byte	0
 8992 033a 00       		.byte	0
 8993 033b 3F       		.uleb128 0x3f
 8994 033c 34       		.uleb128 0x34
 8995 033d 00       		.byte	0
 8996 033e 31       		.uleb128 0x31
 8997 033f 13       		.uleb128 0x13
 8998 0340 02       		.uleb128 0x2
 8999 0341 18       		.uleb128 0x18
 9000 0342 00       		.byte	0
 9001 0343 00       		.byte	0
 9002 0344 40       		.uleb128 0x40
 9003 0345 1D       		.uleb128 0x1d
 9004 0346 01       		.byte	0x1
 9005 0347 31       		.uleb128 0x31
 9006 0348 13       		.uleb128 0x13
 9007 0349 11       		.uleb128 0x11
 9008 034a 01       		.uleb128 0x1
 9009 034b 12       		.uleb128 0x12
 9010 034c 06       		.uleb128 0x6
 9011 034d 58       		.uleb128 0x58
 9012 034e 0B       		.uleb128 0xb
 9013 034f 59       		.uleb128 0x59
 9014 0350 0B       		.uleb128 0xb
 9015 0351 01       		.uleb128 0x1
 9016 0352 13       		.uleb128 0x13
 9017 0353 00       		.byte	0
 9018 0354 00       		.byte	0
 9019 0355 41       		.uleb128 0x41
 9020 0356 05       		.uleb128 0x5
 9021 0357 00       		.byte	0
 9022 0358 31       		.uleb128 0x31
 9023 0359 13       		.uleb128 0x13
 9024 035a 00       		.byte	0
 9025 035b 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 246


 9026 035c 42       		.uleb128 0x42
 9027 035d 898201   		.uleb128 0x4109
 9028 0360 01       		.byte	0x1
 9029 0361 11       		.uleb128 0x11
 9030 0362 01       		.uleb128 0x1
 9031 0363 31       		.uleb128 0x31
 9032 0364 13       		.uleb128 0x13
 9033 0365 01       		.uleb128 0x1
 9034 0366 13       		.uleb128 0x13
 9035 0367 00       		.byte	0
 9036 0368 00       		.byte	0
 9037 0369 43       		.uleb128 0x43
 9038 036a 8A8201   		.uleb128 0x410a
 9039 036d 00       		.byte	0
 9040 036e 02       		.uleb128 0x2
 9041 036f 18       		.uleb128 0x18
 9042 0370 9142     		.uleb128 0x2111
 9043 0372 18       		.uleb128 0x18
 9044 0373 00       		.byte	0
 9045 0374 00       		.byte	0
 9046 0375 44       		.uleb128 0x44
 9047 0376 898201   		.uleb128 0x4109
 9048 0379 01       		.byte	0x1
 9049 037a 11       		.uleb128 0x11
 9050 037b 01       		.uleb128 0x1
 9051 037c 31       		.uleb128 0x31
 9052 037d 13       		.uleb128 0x13
 9053 037e 00       		.byte	0
 9054 037f 00       		.byte	0
 9055 0380 45       		.uleb128 0x45
 9056 0381 2E       		.uleb128 0x2e
 9057 0382 01       		.byte	0x1
 9058 0383 3F       		.uleb128 0x3f
 9059 0384 19       		.uleb128 0x19
 9060 0385 03       		.uleb128 0x3
 9061 0386 0E       		.uleb128 0xe
 9062 0387 3A       		.uleb128 0x3a
 9063 0388 0B       		.uleb128 0xb
 9064 0389 3B       		.uleb128 0x3b
 9065 038a 05       		.uleb128 0x5
 9066 038b 27       		.uleb128 0x27
 9067 038c 19       		.uleb128 0x19
 9068 038d 49       		.uleb128 0x49
 9069 038e 13       		.uleb128 0x13
 9070 038f 11       		.uleb128 0x11
 9071 0390 01       		.uleb128 0x1
 9072 0391 12       		.uleb128 0x12
 9073 0392 06       		.uleb128 0x6
 9074 0393 40       		.uleb128 0x40
 9075 0394 18       		.uleb128 0x18
 9076 0395 9742     		.uleb128 0x2117
 9077 0397 19       		.uleb128 0x19
 9078 0398 01       		.uleb128 0x1
 9079 0399 13       		.uleb128 0x13
 9080 039a 00       		.byte	0
 9081 039b 00       		.byte	0
 9082 039c 46       		.uleb128 0x46
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 247


 9083 039d 05       		.uleb128 0x5
 9084 039e 00       		.byte	0
 9085 039f 03       		.uleb128 0x3
 9086 03a0 08       		.uleb128 0x8
 9087 03a1 3A       		.uleb128 0x3a
 9088 03a2 0B       		.uleb128 0xb
 9089 03a3 3B       		.uleb128 0x3b
 9090 03a4 05       		.uleb128 0x5
 9091 03a5 49       		.uleb128 0x49
 9092 03a6 13       		.uleb128 0x13
 9093 03a7 02       		.uleb128 0x2
 9094 03a8 17       		.uleb128 0x17
 9095 03a9 00       		.byte	0
 9096 03aa 00       		.byte	0
 9097 03ab 47       		.uleb128 0x47
 9098 03ac 34       		.uleb128 0x34
 9099 03ad 00       		.byte	0
 9100 03ae 03       		.uleb128 0x3
 9101 03af 0E       		.uleb128 0xe
 9102 03b0 3A       		.uleb128 0x3a
 9103 03b1 0B       		.uleb128 0xb
 9104 03b2 3B       		.uleb128 0x3b
 9105 03b3 05       		.uleb128 0x5
 9106 03b4 49       		.uleb128 0x49
 9107 03b5 13       		.uleb128 0x13
 9108 03b6 02       		.uleb128 0x2
 9109 03b7 17       		.uleb128 0x17
 9110 03b8 00       		.byte	0
 9111 03b9 00       		.byte	0
 9112 03ba 48       		.uleb128 0x48
 9113 03bb 0B       		.uleb128 0xb
 9114 03bc 01       		.byte	0x1
 9115 03bd 11       		.uleb128 0x11
 9116 03be 01       		.uleb128 0x1
 9117 03bf 12       		.uleb128 0x12
 9118 03c0 06       		.uleb128 0x6
 9119 03c1 01       		.uleb128 0x1
 9120 03c2 13       		.uleb128 0x13
 9121 03c3 00       		.byte	0
 9122 03c4 00       		.byte	0
 9123 03c5 49       		.uleb128 0x49
 9124 03c6 2E       		.uleb128 0x2e
 9125 03c7 01       		.byte	0x1
 9126 03c8 31       		.uleb128 0x31
 9127 03c9 13       		.uleb128 0x13
 9128 03ca 11       		.uleb128 0x11
 9129 03cb 01       		.uleb128 0x1
 9130 03cc 12       		.uleb128 0x12
 9131 03cd 06       		.uleb128 0x6
 9132 03ce 40       		.uleb128 0x40
 9133 03cf 18       		.uleb128 0x18
 9134 03d0 9742     		.uleb128 0x2117
 9135 03d2 19       		.uleb128 0x19
 9136 03d3 01       		.uleb128 0x1
 9137 03d4 13       		.uleb128 0x13
 9138 03d5 00       		.byte	0
 9139 03d6 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 248


 9140 03d7 4A       		.uleb128 0x4a
 9141 03d8 05       		.uleb128 0x5
 9142 03d9 00       		.byte	0
 9143 03da 03       		.uleb128 0x3
 9144 03db 08       		.uleb128 0x8
 9145 03dc 3A       		.uleb128 0x3a
 9146 03dd 0B       		.uleb128 0xb
 9147 03de 3B       		.uleb128 0x3b
 9148 03df 05       		.uleb128 0x5
 9149 03e0 49       		.uleb128 0x49
 9150 03e1 13       		.uleb128 0x13
 9151 03e2 02       		.uleb128 0x2
 9152 03e3 18       		.uleb128 0x18
 9153 03e4 00       		.byte	0
 9154 03e5 00       		.byte	0
 9155 03e6 4B       		.uleb128 0x4b
 9156 03e7 34       		.uleb128 0x34
 9157 03e8 00       		.byte	0
 9158 03e9 03       		.uleb128 0x3
 9159 03ea 08       		.uleb128 0x8
 9160 03eb 3A       		.uleb128 0x3a
 9161 03ec 0B       		.uleb128 0xb
 9162 03ed 3B       		.uleb128 0x3b
 9163 03ee 05       		.uleb128 0x5
 9164 03ef 49       		.uleb128 0x49
 9165 03f0 13       		.uleb128 0x13
 9166 03f1 02       		.uleb128 0x2
 9167 03f2 18       		.uleb128 0x18
 9168 03f3 00       		.byte	0
 9169 03f4 00       		.byte	0
 9170 03f5 4C       		.uleb128 0x4c
 9171 03f6 2E       		.uleb128 0x2e
 9172 03f7 01       		.byte	0x1
 9173 03f8 03       		.uleb128 0x3
 9174 03f9 0E       		.uleb128 0xe
 9175 03fa 3A       		.uleb128 0x3a
 9176 03fb 0B       		.uleb128 0xb
 9177 03fc 3B       		.uleb128 0x3b
 9178 03fd 05       		.uleb128 0x5
 9179 03fe 27       		.uleb128 0x27
 9180 03ff 19       		.uleb128 0x19
 9181 0400 49       		.uleb128 0x49
 9182 0401 13       		.uleb128 0x13
 9183 0402 20       		.uleb128 0x20
 9184 0403 0B       		.uleb128 0xb
 9185 0404 01       		.uleb128 0x1
 9186 0405 13       		.uleb128 0x13
 9187 0406 00       		.byte	0
 9188 0407 00       		.byte	0
 9189 0408 4D       		.uleb128 0x4d
 9190 0409 05       		.uleb128 0x5
 9191 040a 00       		.byte	0
 9192 040b 03       		.uleb128 0x3
 9193 040c 0E       		.uleb128 0xe
 9194 040d 3A       		.uleb128 0x3a
 9195 040e 0B       		.uleb128 0xb
 9196 040f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 249


 9197 0410 05       		.uleb128 0x5
 9198 0411 49       		.uleb128 0x49
 9199 0412 13       		.uleb128 0x13
 9200 0413 00       		.byte	0
 9201 0414 00       		.byte	0
 9202 0415 4E       		.uleb128 0x4e
 9203 0416 1D       		.uleb128 0x1d
 9204 0417 01       		.byte	0x1
 9205 0418 31       		.uleb128 0x31
 9206 0419 13       		.uleb128 0x13
 9207 041a 52       		.uleb128 0x52
 9208 041b 01       		.uleb128 0x1
 9209 041c 55       		.uleb128 0x55
 9210 041d 17       		.uleb128 0x17
 9211 041e 58       		.uleb128 0x58
 9212 041f 0B       		.uleb128 0xb
 9213 0420 59       		.uleb128 0x59
 9214 0421 05       		.uleb128 0x5
 9215 0422 01       		.uleb128 0x1
 9216 0423 13       		.uleb128 0x13
 9217 0424 00       		.byte	0
 9218 0425 00       		.byte	0
 9219 0426 4F       		.uleb128 0x4f
 9220 0427 34       		.uleb128 0x34
 9221 0428 00       		.byte	0
 9222 0429 03       		.uleb128 0x3
 9223 042a 0E       		.uleb128 0xe
 9224 042b 3A       		.uleb128 0x3a
 9225 042c 0B       		.uleb128 0xb
 9226 042d 3B       		.uleb128 0x3b
 9227 042e 05       		.uleb128 0x5
 9228 042f 49       		.uleb128 0x49
 9229 0430 13       		.uleb128 0x13
 9230 0431 1C       		.uleb128 0x1c
 9231 0432 0A       		.uleb128 0xa
 9232 0433 00       		.byte	0
 9233 0434 00       		.byte	0
 9234 0435 50       		.uleb128 0x50
 9235 0436 2E       		.uleb128 0x2e
 9236 0437 01       		.byte	0x1
 9237 0438 3F       		.uleb128 0x3f
 9238 0439 19       		.uleb128 0x19
 9239 043a 03       		.uleb128 0x3
 9240 043b 0E       		.uleb128 0xe
 9241 043c 3A       		.uleb128 0x3a
 9242 043d 0B       		.uleb128 0xb
 9243 043e 3B       		.uleb128 0x3b
 9244 043f 0B       		.uleb128 0xb
 9245 0440 27       		.uleb128 0x27
 9246 0441 19       		.uleb128 0x19
 9247 0442 49       		.uleb128 0x49
 9248 0443 13       		.uleb128 0x13
 9249 0444 3C       		.uleb128 0x3c
 9250 0445 19       		.uleb128 0x19
 9251 0446 01       		.uleb128 0x1
 9252 0447 13       		.uleb128 0x13
 9253 0448 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 250


 9254 0449 00       		.byte	0
 9255 044a 51       		.uleb128 0x51
 9256 044b 2E       		.uleb128 0x2e
 9257 044c 01       		.byte	0x1
 9258 044d 3F       		.uleb128 0x3f
 9259 044e 19       		.uleb128 0x19
 9260 044f 03       		.uleb128 0x3
 9261 0450 0E       		.uleb128 0xe
 9262 0451 27       		.uleb128 0x27
 9263 0452 19       		.uleb128 0x19
 9264 0453 49       		.uleb128 0x49
 9265 0454 13       		.uleb128 0x13
 9266 0455 34       		.uleb128 0x34
 9267 0456 19       		.uleb128 0x19
 9268 0457 3C       		.uleb128 0x3c
 9269 0458 19       		.uleb128 0x19
 9270 0459 01       		.uleb128 0x1
 9271 045a 13       		.uleb128 0x13
 9272 045b 00       		.byte	0
 9273 045c 00       		.byte	0
 9274 045d 52       		.uleb128 0x52
 9275 045e 2E       		.uleb128 0x2e
 9276 045f 01       		.byte	0x1
 9277 0460 3F       		.uleb128 0x3f
 9278 0461 19       		.uleb128 0x19
 9279 0462 03       		.uleb128 0x3
 9280 0463 0E       		.uleb128 0xe
 9281 0464 3A       		.uleb128 0x3a
 9282 0465 0B       		.uleb128 0xb
 9283 0466 3B       		.uleb128 0x3b
 9284 0467 05       		.uleb128 0x5
 9285 0468 27       		.uleb128 0x27
 9286 0469 19       		.uleb128 0x19
 9287 046a 49       		.uleb128 0x49
 9288 046b 13       		.uleb128 0x13
 9289 046c 3C       		.uleb128 0x3c
 9290 046d 19       		.uleb128 0x19
 9291 046e 01       		.uleb128 0x1
 9292 046f 13       		.uleb128 0x13
 9293 0470 00       		.byte	0
 9294 0471 00       		.byte	0
 9295 0472 53       		.uleb128 0x53
 9296 0473 2E       		.uleb128 0x2e
 9297 0474 01       		.byte	0x1
 9298 0475 3F       		.uleb128 0x3f
 9299 0476 19       		.uleb128 0x19
 9300 0477 03       		.uleb128 0x3
 9301 0478 0E       		.uleb128 0xe
 9302 0479 3A       		.uleb128 0x3a
 9303 047a 0B       		.uleb128 0xb
 9304 047b 3B       		.uleb128 0x3b
 9305 047c 05       		.uleb128 0x5
 9306 047d 27       		.uleb128 0x27
 9307 047e 19       		.uleb128 0x19
 9308 047f 3C       		.uleb128 0x3c
 9309 0480 19       		.uleb128 0x19
 9310 0481 00       		.byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 251


 9311 0482 00       		.byte	0
 9312 0483 00       		.byte	0
 9313              		.section	.debug_loc,"",%progbits
 9314              	.Ldebug_loc0:
 9315              	.LLST0:
 9316 0000 00000000 		.4byte	.LVL0
 9317 0004 04000000 		.4byte	.LVL1
 9318 0008 0100     		.2byte	0x1
 9319 000a 50       		.byte	0x50
 9320 000b 04000000 		.4byte	.LVL1
 9321 000f 37000000 		.4byte	.LVL5-1
 9322 0013 0100     		.2byte	0x1
 9323 0015 5C       		.byte	0x5c
 9324 0016 37000000 		.4byte	.LVL5-1
 9325 001a 5E010000 		.4byte	.LVL64
 9326 001e 0300     		.2byte	0x3
 9327 0020 91       		.byte	0x91
 9328 0021 947C     		.sleb128 -492
 9329 0023 5E010000 		.4byte	.LVL64
 9330 0027 62010000 		.4byte	.LFE14
 9331 002b 0400     		.2byte	0x4
 9332 002d F3       		.byte	0xf3
 9333 002e 01       		.uleb128 0x1
 9334 002f 50       		.byte	0x50
 9335 0030 9F       		.byte	0x9f
 9336 0031 00000000 		.4byte	0
 9337 0035 00000000 		.4byte	0
 9338              	.LLST1:
 9339 0039 00000000 		.4byte	.LVL0
 9340 003d 30000000 		.4byte	.LVL4
 9341 0041 0100     		.2byte	0x1
 9342 0043 51       		.byte	0x51
 9343 0044 30000000 		.4byte	.LVL4
 9344 0048 76000000 		.4byte	.LVL15
 9345 004c 0100     		.2byte	0x1
 9346 004e 55       		.byte	0x55
 9347 004f 76000000 		.4byte	.LVL15
 9348 0053 62010000 		.4byte	.LFE14
 9349 0057 0400     		.2byte	0x4
 9350 0059 F3       		.byte	0xf3
 9351 005a 01       		.uleb128 0x1
 9352 005b 51       		.byte	0x51
 9353 005c 9F       		.byte	0x9f
 9354 005d 00000000 		.4byte	0
 9355 0061 00000000 		.4byte	0
 9356              	.LLST2:
 9357 0065 00000000 		.4byte	.LVL0
 9358 0069 2E000000 		.4byte	.LVL3
 9359 006d 0100     		.2byte	0x1
 9360 006f 52       		.byte	0x52
 9361 0070 2E000000 		.4byte	.LVL3
 9362 0074 A6000000 		.4byte	.LVL27
 9363 0078 0100     		.2byte	0x1
 9364 007a 56       		.byte	0x56
 9365 007b A6000000 		.4byte	.LVL27
 9366 007f 62010000 		.4byte	.LFE14
 9367 0083 0400     		.2byte	0x4
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 252


 9368 0085 F3       		.byte	0xf3
 9369 0086 01       		.uleb128 0x1
 9370 0087 52       		.byte	0x52
 9371 0088 9F       		.byte	0x9f
 9372 0089 00000000 		.4byte	0
 9373 008d 00000000 		.4byte	0
 9374              	.LLST3:
 9375 0091 00000000 		.4byte	.LVL0
 9376 0095 28000000 		.4byte	.LVL2
 9377 0099 0100     		.2byte	0x1
 9378 009b 53       		.byte	0x53
 9379 009c 28000000 		.4byte	.LVL2
 9380 00a0 A8000000 		.4byte	.LVL28
 9381 00a4 0300     		.2byte	0x3
 9382 00a6 91       		.byte	0x91
 9383 00a7 907C     		.sleb128 -496
 9384 00a9 A8000000 		.4byte	.LVL28
 9385 00ad 62010000 		.4byte	.LFE14
 9386 00b1 0400     		.2byte	0x4
 9387 00b3 F3       		.byte	0xf3
 9388 00b4 01       		.uleb128 0x1
 9389 00b5 53       		.byte	0x53
 9390 00b6 9F       		.byte	0x9f
 9391 00b7 00000000 		.4byte	0
 9392 00bb 00000000 		.4byte	0
 9393              	.LLST4:
 9394 00bf 00000000 		.4byte	.LVL0
 9395 00c3 4C000000 		.4byte	.LVL7
 9396 00c7 0200     		.2byte	0x2
 9397 00c9 91       		.byte	0x91
 9398 00ca 14       		.sleb128 20
 9399 00cb 4C000000 		.4byte	.LVL7
 9400 00cf 52000000 		.4byte	.LVL8
 9401 00d3 0100     		.2byte	0x1
 9402 00d5 57       		.byte	0x57
 9403 00d6 52000000 		.4byte	.LVL8
 9404 00da 62010000 		.4byte	.LFE14
 9405 00de 0200     		.2byte	0x2
 9406 00e0 91       		.byte	0x91
 9407 00e1 14       		.sleb128 20
 9408 00e2 00000000 		.4byte	0
 9409 00e6 00000000 		.4byte	0
 9410              	.LLST5:
 9411 00ea 00000000 		.4byte	.LVL0
 9412 00ee 5C010000 		.4byte	.LVL63
 9413 00f2 0200     		.2byte	0x2
 9414 00f4 30       		.byte	0x30
 9415 00f5 9F       		.byte	0x9f
 9416 00f6 00000000 		.4byte	0
 9417 00fa 00000000 		.4byte	0
 9418              	.LLST6:
 9419 00fe 4C000000 		.4byte	.LVL7
 9420 0102 52000000 		.4byte	.LVL8
 9421 0106 0100     		.2byte	0x1
 9422 0108 57       		.byte	0x57
 9423 0109 52000000 		.4byte	.LVL8
 9424 010d 56000000 		.4byte	.LVL9
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 253


 9425 0111 0200     		.2byte	0x2
 9426 0113 91       		.byte	0x91
 9427 0114 14       		.sleb128 20
 9428 0115 5A000000 		.4byte	.LVL10
 9429 0119 88000000 		.4byte	.LVL20
 9430 011d 0100     		.2byte	0x1
 9431 011f 54       		.byte	0x54
 9432 0120 00000000 		.4byte	0
 9433 0124 00000000 		.4byte	0
 9434              	.LLST7:
 9435 0128 4C000000 		.4byte	.LVL7
 9436 012c 56000000 		.4byte	.LVL9
 9437 0130 0300     		.2byte	0x3
 9438 0132 91       		.byte	0x91
 9439 0133 8C7C     		.sleb128 -500
 9440 0135 00000000 		.4byte	0
 9441 0139 00000000 		.4byte	0
 9442              	.LLST8:
 9443 013d 4C000000 		.4byte	.LVL7
 9444 0141 56000000 		.4byte	.LVL9
 9445 0145 0400     		.2byte	0x4
 9446 0147 91       		.byte	0x91
 9447 0148 D87C     		.sleb128 -424
 9448 014a 9F       		.byte	0x9f
 9449 014b 00000000 		.4byte	0
 9450 014f 00000000 		.4byte	0
 9451              	.LLST9:
 9452 0153 4C000000 		.4byte	.LVL7
 9453 0157 56000000 		.4byte	.LVL9
 9454 015b 0300     		.2byte	0x3
 9455 015d 91       		.byte	0x91
 9456 015e 907C     		.sleb128 -496
 9457 0160 00000000 		.4byte	0
 9458 0164 00000000 		.4byte	0
 9459              	.LLST10:
 9460 0168 4C000000 		.4byte	.LVL7
 9461 016c 56000000 		.4byte	.LVL9
 9462 0170 0100     		.2byte	0x1
 9463 0172 56       		.byte	0x56
 9464 0173 00000000 		.4byte	0
 9465 0177 00000000 		.4byte	0
 9466              	.LLST11:
 9467 017b 4C000000 		.4byte	.LVL7
 9468 017f 56000000 		.4byte	.LVL9
 9469 0183 0100     		.2byte	0x1
 9470 0185 55       		.byte	0x55
 9471 0186 00000000 		.4byte	0
 9472 018a 00000000 		.4byte	0
 9473              	.LLST12:
 9474 018e 4C000000 		.4byte	.LVL7
 9475 0192 56000000 		.4byte	.LVL9
 9476 0196 0300     		.2byte	0x3
 9477 0198 91       		.byte	0x91
 9478 0199 947C     		.sleb128 -492
 9479 019b 00000000 		.4byte	0
 9480 019f 00000000 		.4byte	0
 9481              	.LLST13:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 254


 9482 01a3 4C000000 		.4byte	.LVL7
 9483 01a7 56000000 		.4byte	.LVL9
 9484 01ab 0300     		.2byte	0x3
 9485 01ad 08       		.byte	0x8
 9486 01ae 20       		.byte	0x20
 9487 01af 9F       		.byte	0x9f
 9488 01b0 5A000000 		.4byte	.LVL10
 9489 01b4 5E010000 		.4byte	.LVL64
 9490 01b8 0100     		.2byte	0x1
 9491 01ba 57       		.byte	0x57
 9492 01bb 00000000 		.4byte	0
 9493 01bf 00000000 		.4byte	0
 9494              	.LLST14:
 9495 01c3 66000000 		.4byte	.LVL12
 9496 01c7 68000000 		.4byte	.LVL13
 9497 01cb 0100     		.2byte	0x1
 9498 01cd 50       		.byte	0x50
 9499 01ce 68000000 		.4byte	.LVL13
 9500 01d2 7A000000 		.4byte	.LVL16
 9501 01d6 0200     		.2byte	0x2
 9502 01d8 7D       		.byte	0x7d
 9503 01d9 00       		.sleb128 0
 9504 01da 7A000000 		.4byte	.LVL16
 9505 01de 82000000 		.4byte	.LVL18
 9506 01e2 0100     		.2byte	0x1
 9507 01e4 53       		.byte	0x53
 9508 01e5 82000000 		.4byte	.LVL18
 9509 01e9 5E010000 		.4byte	.LVL64
 9510 01ed 0200     		.2byte	0x2
 9511 01ef 7D       		.byte	0x7d
 9512 01f0 00       		.sleb128 0
 9513 01f1 00000000 		.4byte	0
 9514 01f5 00000000 		.4byte	0
 9515              	.LLST15:
 9516 01f9 76000000 		.4byte	.LVL15
 9517 01fd 7C000000 		.4byte	.LVL17
 9518 0201 0100     		.2byte	0x1
 9519 0203 51       		.byte	0x51
 9520 0204 7C000000 		.4byte	.LVL17
 9521 0208 EE000000 		.4byte	.LVL36
 9522 020c 0100     		.2byte	0x1
 9523 020e 55       		.byte	0x55
 9524 020f EE000000 		.4byte	.LVL36
 9525 0213 F0000000 		.4byte	.LVL37
 9526 0217 0100     		.2byte	0x1
 9527 0219 52       		.byte	0x52
 9528 021a F0000000 		.4byte	.LVL37
 9529 021e 5E010000 		.4byte	.LVL64
 9530 0222 0100     		.2byte	0x1
 9531 0224 55       		.byte	0x55
 9532 0225 00000000 		.4byte	0
 9533 0229 00000000 		.4byte	0
 9534              	.LLST16:
 9535 022d 7A000000 		.4byte	.LVL16
 9536 0231 82000000 		.4byte	.LVL18
 9537 0235 0300     		.2byte	0x3
 9538 0237 73       		.byte	0x73
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 255


 9539 0238 7F       		.sleb128 -1
 9540 0239 9F       		.byte	0x9f
 9541 023a 82000000 		.4byte	.LVL18
 9542 023e 5E010000 		.4byte	.LVL64
 9543 0242 0600     		.2byte	0x6
 9544 0244 7D       		.byte	0x7d
 9545 0245 00       		.sleb128 0
 9546 0246 06       		.byte	0x6
 9547 0247 31       		.byte	0x31
 9548 0248 1C       		.byte	0x1c
 9549 0249 9F       		.byte	0x9f
 9550 024a 00000000 		.4byte	0
 9551 024e 00000000 		.4byte	0
 9552              	.LLST17:
 9553 0252 A8000000 		.4byte	.LVL28
 9554 0256 26010000 		.4byte	.LVL48
 9555 025a 0100     		.2byte	0x1
 9556 025c 56       		.byte	0x56
 9557 025d 00000000 		.4byte	0
 9558 0261 00000000 		.4byte	0
 9559              	.LLST18:
 9560 0265 4C000000 		.4byte	.LVL7
 9561 0269 56000000 		.4byte	.LVL9
 9562 026d 0200     		.2byte	0x2
 9563 026f 30       		.byte	0x30
 9564 0270 9F       		.byte	0x9f
 9565 0271 A8000000 		.4byte	.LVL28
 9566 0275 0C010000 		.4byte	.LVL41
 9567 0279 0300     		.2byte	0x3
 9568 027b 91       		.byte	0x91
 9569 027c 907C     		.sleb128 -496
 9570 027e 0C010000 		.4byte	.LVL41
 9571 0282 0F010000 		.4byte	.LVL42-1
 9572 0286 0100     		.2byte	0x1
 9573 0288 53       		.byte	0x53
 9574 0289 0F010000 		.4byte	.LVL42-1
 9575 028d 26010000 		.4byte	.LVL48
 9576 0291 0300     		.2byte	0x3
 9577 0293 91       		.byte	0x91
 9578 0294 907C     		.sleb128 -496
 9579 0296 00000000 		.4byte	0
 9580 029a 00000000 		.4byte	0
 9581              	.LLST19:
 9582 029e 4C000000 		.4byte	.LVL7
 9583 02a2 56000000 		.4byte	.LVL9
 9584 02a6 0200     		.2byte	0x2
 9585 02a8 30       		.byte	0x30
 9586 02a9 9F       		.byte	0x9f
 9587 02aa 88000000 		.4byte	.LVL20
 9588 02ae 8C000000 		.4byte	.LVL21
 9589 02b2 0100     		.2byte	0x1
 9590 02b4 50       		.byte	0x50
 9591 02b5 8C000000 		.4byte	.LVL21
 9592 02b9 96000000 		.4byte	.LVL23
 9593 02bd 0100     		.2byte	0x1
 9594 02bf 54       		.byte	0x54
 9595 02c0 96000000 		.4byte	.LVL23
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 256


 9596 02c4 9A000000 		.4byte	.LVL24
 9597 02c8 0100     		.2byte	0x1
 9598 02ca 50       		.byte	0x50
 9599 02cb 9A000000 		.4byte	.LVL24
 9600 02cf A2000000 		.4byte	.LVL26
 9601 02d3 0100     		.2byte	0x1
 9602 02d5 54       		.byte	0x54
 9603 02d6 A2000000 		.4byte	.LVL26
 9604 02da A8000000 		.4byte	.LVL28
 9605 02de 0100     		.2byte	0x1
 9606 02e0 50       		.byte	0x50
 9607 02e1 A8000000 		.4byte	.LVL28
 9608 02e5 B8000000 		.4byte	.LVL29
 9609 02e9 0200     		.2byte	0x2
 9610 02eb 30       		.byte	0x30
 9611 02ec 9F       		.byte	0x9f
 9612 02ed B8000000 		.4byte	.LVL29
 9613 02f1 BE000000 		.4byte	.LVL30
 9614 02f5 0100     		.2byte	0x1
 9615 02f7 50       		.byte	0x50
 9616 02f8 C6000000 		.4byte	.LVL31
 9617 02fc CC000000 		.4byte	.LVL32
 9618 0300 0100     		.2byte	0x1
 9619 0302 50       		.byte	0x50
 9620 0303 D2000000 		.4byte	.LVL33
 9621 0307 E0000000 		.4byte	.LVL34
 9622 030b 0100     		.2byte	0x1
 9623 030d 50       		.byte	0x50
 9624 030e 10010000 		.4byte	.LVL42
 9625 0312 16010000 		.4byte	.LVL43
 9626 0316 0100     		.2byte	0x1
 9627 0318 50       		.byte	0x50
 9628 0319 1C010000 		.4byte	.LVL44
 9629 031d 20010000 		.4byte	.LVL45
 9630 0321 0100     		.2byte	0x1
 9631 0323 50       		.byte	0x50
 9632 0324 20010000 		.4byte	.LVL45
 9633 0328 24010000 		.4byte	.LVL47
 9634 032c 0200     		.2byte	0x2
 9635 032e 30       		.byte	0x30
 9636 032f 9F       		.byte	0x9f
 9637 0330 24010000 		.4byte	.LVL47
 9638 0334 26010000 		.4byte	.LVL48
 9639 0338 0100     		.2byte	0x1
 9640 033a 50       		.byte	0x50
 9641 033b 26010000 		.4byte	.LVL48
 9642 033f 5E010000 		.4byte	.LVL64
 9643 0343 0100     		.2byte	0x1
 9644 0345 54       		.byte	0x54
 9645 0346 00000000 		.4byte	0
 9646 034a 00000000 		.4byte	0
 9647              	.LLST20:
 9648 034e E8000000 		.4byte	.LVL35
 9649 0352 F8000000 		.4byte	.LVL39
 9650 0356 0300     		.2byte	0x3
 9651 0358 08       		.byte	0x8
 9652 0359 20       		.byte	0x20
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 257


 9653 035a 9F       		.byte	0x9f
 9654 035b 00000000 		.4byte	0
 9655 035f 00000000 		.4byte	0
 9656              	.LLST21:
 9657 0363 E8000000 		.4byte	.LVL35
 9658 0367 EE000000 		.4byte	.LVL36
 9659 036b 0100     		.2byte	0x1
 9660 036d 55       		.byte	0x55
 9661 036e EE000000 		.4byte	.LVL36
 9662 0372 F0000000 		.4byte	.LVL37
 9663 0376 0100     		.2byte	0x1
 9664 0378 52       		.byte	0x52
 9665 0379 F0000000 		.4byte	.LVL37
 9666 037d F8000000 		.4byte	.LVL39
 9667 0381 0100     		.2byte	0x1
 9668 0383 55       		.byte	0x55
 9669 0384 00000000 		.4byte	0
 9670 0388 00000000 		.4byte	0
 9671              	.LLST22:
 9672 038c 26010000 		.4byte	.LVL48
 9673 0390 28010000 		.4byte	.LVL49
 9674 0394 0300     		.2byte	0x3
 9675 0396 08       		.byte	0x8
 9676 0397 20       		.byte	0x20
 9677 0398 9F       		.byte	0x9f
 9678 0399 2C010000 		.4byte	.LVL51
 9679 039d 2E010000 		.4byte	.LVL52
 9680 03a1 0500     		.2byte	0x5
 9681 03a3 4F       		.byte	0x4f
 9682 03a4 73       		.byte	0x73
 9683 03a5 00       		.sleb128 0
 9684 03a6 1C       		.byte	0x1c
 9685 03a7 9F       		.byte	0x9f
 9686 03a8 2E010000 		.4byte	.LVL52
 9687 03ac 34010000 		.4byte	.LVL54
 9688 03b0 0600     		.2byte	0x6
 9689 03b2 08       		.byte	0x8
 9690 03b3 20       		.byte	0x20
 9691 03b4 73       		.byte	0x73
 9692 03b5 00       		.sleb128 0
 9693 03b6 1C       		.byte	0x1c
 9694 03b7 9F       		.byte	0x9f
 9695 03b8 34010000 		.4byte	.LVL54
 9696 03bc 38010000 		.4byte	.LVL55
 9697 03c0 0500     		.2byte	0x5
 9698 03c2 4F       		.byte	0x4f
 9699 03c3 73       		.byte	0x73
 9700 03c4 00       		.sleb128 0
 9701 03c5 1C       		.byte	0x1c
 9702 03c6 9F       		.byte	0x9f
 9703 03c7 00000000 		.4byte	0
 9704 03cb 00000000 		.4byte	0
 9705              	.LLST23:
 9706 03cf 26010000 		.4byte	.LVL48
 9707 03d3 2A010000 		.4byte	.LVL50
 9708 03d7 0400     		.2byte	0x4
 9709 03d9 91       		.byte	0x91
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 258


 9710 03da 987C     		.sleb128 -488
 9711 03dc 9F       		.byte	0x9f
 9712 03dd 2A010000 		.4byte	.LVL50
 9713 03e1 30010000 		.4byte	.LVL53
 9714 03e5 0100     		.2byte	0x1
 9715 03e7 52       		.byte	0x52
 9716 03e8 30010000 		.4byte	.LVL53
 9717 03ec 5E010000 		.4byte	.LVL64
 9718 03f0 0400     		.2byte	0x4
 9719 03f2 91       		.byte	0x91
 9720 03f3 987C     		.sleb128 -488
 9721 03f5 9F       		.byte	0x9f
 9722 03f6 00000000 		.4byte	0
 9723 03fa 00000000 		.4byte	0
 9724              	.LLST24:
 9725 03fe 26010000 		.4byte	.LVL48
 9726 0402 28010000 		.4byte	.LVL49
 9727 0406 0400     		.2byte	0x4
 9728 0408 91       		.byte	0x91
 9729 0409 987C     		.sleb128 -488
 9730 040b 9F       		.byte	0x9f
 9731 040c 2C010000 		.4byte	.LVL51
 9732 0410 34010000 		.4byte	.LVL54
 9733 0414 0100     		.2byte	0x1
 9734 0416 51       		.byte	0x51
 9735 0417 34010000 		.4byte	.LVL54
 9736 041b 38010000 		.4byte	.LVL55
 9737 041f 0A00     		.2byte	0xa
 9738 0421 91       		.byte	0x91
 9739 0422 00       		.sleb128 0
 9740 0423 73       		.byte	0x73
 9741 0424 00       		.sleb128 0
 9742 0425 22       		.byte	0x22
 9743 0426 0A       		.byte	0xa
 9744 0427 E801     		.2byte	0x1e8
 9745 0429 1C       		.byte	0x1c
 9746 042a 9F       		.byte	0x9f
 9747 042b 00000000 		.4byte	0
 9748 042f 00000000 		.4byte	0
 9749              	.LLST25:
 9750 0433 3C010000 		.4byte	.LVL56
 9751 0437 3E010000 		.4byte	.LVL57
 9752 043b 0500     		.2byte	0x5
 9753 043d 4F       		.byte	0x4f
 9754 043e 72       		.byte	0x72
 9755 043f 00       		.sleb128 0
 9756 0440 1C       		.byte	0x1c
 9757 0441 9F       		.byte	0x9f
 9758 0442 3E010000 		.4byte	.LVL57
 9759 0446 44010000 		.4byte	.LVL58
 9760 044a 0600     		.2byte	0x6
 9761 044c 08       		.byte	0x8
 9762 044d 20       		.byte	0x20
 9763 044e 72       		.byte	0x72
 9764 044f 00       		.sleb128 0
 9765 0450 1C       		.byte	0x1c
 9766 0451 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 259


 9767 0452 44010000 		.4byte	.LVL58
 9768 0456 48010000 		.4byte	.LVL59
 9769 045a 0500     		.2byte	0x5
 9770 045c 4F       		.byte	0x4f
 9771 045d 72       		.byte	0x72
 9772 045e 00       		.sleb128 0
 9773 045f 1C       		.byte	0x1c
 9774 0460 9F       		.byte	0x9f
 9775 0461 00000000 		.4byte	0
 9776 0465 00000000 		.4byte	0
 9777              	.LLST26:
 9778 0469 3C010000 		.4byte	.LVL56
 9779 046d 44010000 		.4byte	.LVL58
 9780 0471 0100     		.2byte	0x1
 9781 0473 51       		.byte	0x51
 9782 0474 44010000 		.4byte	.LVL58
 9783 0478 48010000 		.4byte	.LVL59
 9784 047c 0A00     		.2byte	0xa
 9785 047e 91       		.byte	0x91
 9786 047f 00       		.sleb128 0
 9787 0480 72       		.byte	0x72
 9788 0481 00       		.sleb128 0
 9789 0482 22       		.byte	0x22
 9790 0483 0A       		.byte	0xa
 9791 0484 C801     		.2byte	0x1c8
 9792 0486 1C       		.byte	0x1c
 9793 0487 9F       		.byte	0x9f
 9794 0488 00000000 		.4byte	0
 9795 048c 00000000 		.4byte	0
 9796              	.LLST27:
 9797 0490 4E010000 		.4byte	.LVL60
 9798 0494 52010000 		.4byte	.LVL61
 9799 0498 0700     		.2byte	0x7
 9800 049a 0A       		.byte	0xa
 9801 049b 0F01     		.2byte	0x10f
 9802 049d 73       		.byte	0x73
 9803 049e 00       		.sleb128 0
 9804 049f 1C       		.byte	0x1c
 9805 04a0 9F       		.byte	0x9f
 9806 04a1 52010000 		.4byte	.LVL61
 9807 04a5 56010000 		.4byte	.LVL62
 9808 04a9 0700     		.2byte	0x7
 9809 04ab 0A       		.byte	0xa
 9810 04ac 1001     		.2byte	0x110
 9811 04ae 73       		.byte	0x73
 9812 04af 00       		.sleb128 0
 9813 04b0 1C       		.byte	0x1c
 9814 04b1 9F       		.byte	0x9f
 9815 04b2 56010000 		.4byte	.LVL62
 9816 04b6 5C010000 		.4byte	.LVL63
 9817 04ba 0700     		.2byte	0x7
 9818 04bc 0A       		.byte	0xa
 9819 04bd 0F01     		.2byte	0x10f
 9820 04bf 73       		.byte	0x73
 9821 04c0 00       		.sleb128 0
 9822 04c1 1C       		.byte	0x1c
 9823 04c2 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 260


 9824 04c3 5C010000 		.4byte	.LVL63
 9825 04c7 5E010000 		.4byte	.LVL64
 9826 04cb 0700     		.2byte	0x7
 9827 04cd 0A       		.byte	0xa
 9828 04ce 1001     		.2byte	0x110
 9829 04d0 73       		.byte	0x73
 9830 04d1 00       		.sleb128 0
 9831 04d2 1C       		.byte	0x1c
 9832 04d3 9F       		.byte	0x9f
 9833 04d4 00000000 		.4byte	0
 9834 04d8 00000000 		.4byte	0
 9835              	.LLST28:
 9836 04dc 4E010000 		.4byte	.LVL60
 9837 04e0 56010000 		.4byte	.LVL62
 9838 04e4 0100     		.2byte	0x1
 9839 04e6 52       		.byte	0x52
 9840 04e7 56010000 		.4byte	.LVL62
 9841 04eb 5C010000 		.4byte	.LVL63
 9842 04ef 0A00     		.2byte	0xa
 9843 04f1 91       		.byte	0x91
 9844 04f2 00       		.sleb128 0
 9845 04f3 73       		.byte	0x73
 9846 04f4 00       		.sleb128 0
 9847 04f5 22       		.byte	0x22
 9848 04f6 0A       		.byte	0xa
 9849 04f7 2801     		.2byte	0x128
 9850 04f9 1C       		.byte	0x1c
 9851 04fa 9F       		.byte	0x9f
 9852 04fb 5C010000 		.4byte	.LVL63
 9853 04ff 5E010000 		.4byte	.LVL64
 9854 0503 0100     		.2byte	0x1
 9855 0505 52       		.byte	0x52
 9856 0506 00000000 		.4byte	0
 9857 050a 00000000 		.4byte	0
 9858              	.LLST29:
 9859 050e 00000000 		.4byte	.LVL65
 9860 0512 0D000000 		.4byte	.LVL66-1
 9861 0516 0100     		.2byte	0x1
 9862 0518 50       		.byte	0x50
 9863 0519 0D000000 		.4byte	.LVL66-1
 9864 051d 7A000000 		.4byte	.LVL75
 9865 0521 0100     		.2byte	0x1
 9866 0523 54       		.byte	0x54
 9867 0524 7A000000 		.4byte	.LVL75
 9868 0528 84000000 		.4byte	.LFE15
 9869 052c 0400     		.2byte	0x4
 9870 052e F3       		.byte	0xf3
 9871 052f 01       		.uleb128 0x1
 9872 0530 50       		.byte	0x50
 9873 0531 9F       		.byte	0x9f
 9874 0532 00000000 		.4byte	0
 9875 0536 00000000 		.4byte	0
 9876              	.LLST30:
 9877 053a 00000000 		.4byte	.LVL65
 9878 053e 0D000000 		.4byte	.LVL66-1
 9879 0542 0100     		.2byte	0x1
 9880 0544 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 261


 9881 0545 0D000000 		.4byte	.LVL66-1
 9882 0549 84000000 		.4byte	.LFE15
 9883 054d 0300     		.2byte	0x3
 9884 054f 91       		.byte	0x91
 9885 0550 BC7F     		.sleb128 -68
 9886 0552 00000000 		.4byte	0
 9887 0556 00000000 		.4byte	0
 9888              	.LLST31:
 9889 055a 00000000 		.4byte	.LVL65
 9890 055e 0D000000 		.4byte	.LVL66-1
 9891 0562 0100     		.2byte	0x1
 9892 0564 52       		.byte	0x52
 9893 0565 0D000000 		.4byte	.LVL66-1
 9894 0569 52000000 		.4byte	.LVL72
 9895 056d 0100     		.2byte	0x1
 9896 056f 57       		.byte	0x57
 9897 0570 52000000 		.4byte	.LVL72
 9898 0574 84000000 		.4byte	.LFE15
 9899 0578 0400     		.2byte	0x4
 9900 057a F3       		.byte	0xf3
 9901 057b 01       		.uleb128 0x1
 9902 057c 52       		.byte	0x52
 9903 057d 9F       		.byte	0x9f
 9904 057e 00000000 		.4byte	0
 9905 0582 00000000 		.4byte	0
 9906              	.LLST32:
 9907 0586 4A000000 		.4byte	.LVL71
 9908 058a 78000000 		.4byte	.LVL74
 9909 058e 0100     		.2byte	0x1
 9910 0590 55       		.byte	0x55
 9911 0591 00000000 		.4byte	0
 9912 0595 00000000 		.4byte	0
 9913              	.LLST33:
 9914 0599 00000000 		.4byte	.LVL65
 9915 059d 36000000 		.4byte	.LVL69
 9916 05a1 0300     		.2byte	0x3
 9917 05a3 08       		.byte	0x8
 9918 05a4 24       		.byte	0x24
 9919 05a5 9F       		.byte	0x9f
 9920 05a6 36000000 		.4byte	.LVL69
 9921 05aa 78000000 		.4byte	.LVL74
 9922 05ae 0100     		.2byte	0x1
 9923 05b0 56       		.byte	0x56
 9924 05b1 00000000 		.4byte	0
 9925 05b5 00000000 		.4byte	0
 9926              	.LLST34:
 9927 05b9 2C000000 		.4byte	.LVL67
 9928 05bd 34000000 		.4byte	.LVL68
 9929 05c1 0100     		.2byte	0x1
 9930 05c3 50       		.byte	0x50
 9931 05c4 00000000 		.4byte	0
 9932 05c8 00000000 		.4byte	0
 9933              	.LLST35:
 9934 05cc 00000000 		.4byte	.LVL77
 9935 05d0 14000000 		.4byte	.LVL80
 9936 05d4 0100     		.2byte	0x1
 9937 05d6 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 262


 9938 05d7 14000000 		.4byte	.LVL80
 9939 05db 4A000000 		.4byte	.LVL85
 9940 05df 0100     		.2byte	0x1
 9941 05e1 57       		.byte	0x57
 9942 05e2 4A000000 		.4byte	.LVL85
 9943 05e6 50000000 		.4byte	.LFE17
 9944 05ea 0400     		.2byte	0x4
 9945 05ec F3       		.byte	0xf3
 9946 05ed 01       		.uleb128 0x1
 9947 05ee 50       		.byte	0x50
 9948 05ef 9F       		.byte	0x9f
 9949 05f0 00000000 		.4byte	0
 9950 05f4 00000000 		.4byte	0
 9951              	.LLST36:
 9952 05f8 00000000 		.4byte	.LVL77
 9953 05fc 10000000 		.4byte	.LVL78
 9954 0600 0100     		.2byte	0x1
 9955 0602 51       		.byte	0x51
 9956 0603 10000000 		.4byte	.LVL78
 9957 0607 4A000000 		.4byte	.LVL84
 9958 060b 0100     		.2byte	0x1
 9959 060d 56       		.byte	0x56
 9960 060e 4A000000 		.4byte	.LVL84
 9961 0612 50000000 		.4byte	.LFE17
 9962 0616 0400     		.2byte	0x4
 9963 0618 F3       		.byte	0xf3
 9964 0619 01       		.uleb128 0x1
 9965 061a 51       		.byte	0x51
 9966 061b 9F       		.byte	0x9f
 9967 061c 00000000 		.4byte	0
 9968 0620 00000000 		.4byte	0
 9969              	.LLST37:
 9970 0624 00000000 		.4byte	.LVL77
 9971 0628 12000000 		.4byte	.LVL79
 9972 062c 0100     		.2byte	0x1
 9973 062e 52       		.byte	0x52
 9974 062f 12000000 		.4byte	.LVL79
 9975 0633 50000000 		.4byte	.LFE17
 9976 0637 0300     		.2byte	0x3
 9977 0639 91       		.byte	0x91
 9978 063a A07F     		.sleb128 -96
 9979 063c 00000000 		.4byte	0
 9980 0640 00000000 		.4byte	0
 9981              	.LLST38:
 9982 0644 00000000 		.4byte	.LVL77
 9983 0648 19000000 		.4byte	.LVL81-1
 9984 064c 0100     		.2byte	0x1
 9985 064e 53       		.byte	0x53
 9986 064f 19000000 		.4byte	.LVL81-1
 9987 0653 50000000 		.4byte	.LFE17
 9988 0657 0300     		.2byte	0x3
 9989 0659 91       		.byte	0x91
 9990 065a A47F     		.sleb128 -92
 9991 065c 00000000 		.4byte	0
 9992 0660 00000000 		.4byte	0
 9993              	.LLST39:
 9994 0664 00000000 		.4byte	.LVL86
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 263


 9995 0668 1F000000 		.4byte	.LVL87-1
 9996 066c 0100     		.2byte	0x1
 9997 066e 50       		.byte	0x50
 9998 066f 1F000000 		.4byte	.LVL87-1
 9999 0673 52000000 		.4byte	.LVL91
 10000 0677 0100     		.2byte	0x1
 10001 0679 54       		.byte	0x54
 10002 067a 52000000 		.4byte	.LVL91
 10003 067e 58000000 		.4byte	.LFE18
 10004 0682 0400     		.2byte	0x4
 10005 0684 F3       		.byte	0xf3
 10006 0685 01       		.uleb128 0x1
 10007 0686 50       		.byte	0x50
 10008 0687 9F       		.byte	0x9f
 10009 0688 00000000 		.4byte	0
 10010 068c 00000000 		.4byte	0
 10011              	.LLST40:
 10012 0690 44000000 		.4byte	.LVL88
 10013 0694 4A000000 		.4byte	.LVL89
 10014 0698 0100     		.2byte	0x1
 10015 069a 50       		.byte	0x50
 10016 069b 50000000 		.4byte	.LVL90
 10017 069f 58000000 		.4byte	.LFE18
 10018 06a3 0100     		.2byte	0x1
 10019 06a5 50       		.byte	0x50
 10020 06a6 00000000 		.4byte	0
 10021 06aa 00000000 		.4byte	0
 10022              	.LLST41:
 10023 06ae 00000000 		.4byte	.LVL86
 10024 06b2 1F000000 		.4byte	.LVL87-1
 10025 06b6 1F00     		.2byte	0x1f
 10026 06b8 70       		.byte	0x70
 10027 06b9 D302     		.sleb128 339
 10028 06bb 94       		.byte	0x94
 10029 06bc 01       		.byte	0x1
 10030 06bd 08       		.byte	0x8
 10031 06be FF       		.byte	0xff
 10032 06bf 1A       		.byte	0x1a
 10033 06c0 70       		.byte	0x70
 10034 06c1 C602     		.sleb128 326
 10035 06c3 94       		.byte	0x94
 10036 06c4 02       		.byte	0x2
 10037 06c5 0A       		.byte	0xa
 10038 06c6 FFFF     		.2byte	0xffff
 10039 06c8 1A       		.byte	0x1a
 10040 06c9 22       		.byte	0x22
 10041 06ca 70       		.byte	0x70
 10042 06cb C802     		.sleb128 328
 10043 06cd 94       		.byte	0x94
 10044 06ce 02       		.byte	0x2
 10045 06cf 0A       		.byte	0xa
 10046 06d0 FFFF     		.2byte	0xffff
 10047 06d2 1A       		.byte	0x1a
 10048 06d3 22       		.byte	0x22
 10049 06d4 31       		.byte	0x31
 10050 06d5 24       		.byte	0x24
 10051 06d6 9F       		.byte	0x9f
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 264


 10052 06d7 00000000 		.4byte	0
 10053 06db 00000000 		.4byte	0
 10054              	.LLST42:
 10055 06df 00000000 		.4byte	.LVL92
 10056 06e3 14000000 		.4byte	.LVL95
 10057 06e7 0100     		.2byte	0x1
 10058 06e9 50       		.byte	0x50
 10059 06ea 14000000 		.4byte	.LVL95
 10060 06ee 4A000000 		.4byte	.LVL100
 10061 06f2 0100     		.2byte	0x1
 10062 06f4 57       		.byte	0x57
 10063 06f5 4A000000 		.4byte	.LVL100
 10064 06f9 50000000 		.4byte	.LFE19
 10065 06fd 0400     		.2byte	0x4
 10066 06ff F3       		.byte	0xf3
 10067 0700 01       		.uleb128 0x1
 10068 0701 50       		.byte	0x50
 10069 0702 9F       		.byte	0x9f
 10070 0703 00000000 		.4byte	0
 10071 0707 00000000 		.4byte	0
 10072              	.LLST43:
 10073 070b 00000000 		.4byte	.LVL92
 10074 070f 10000000 		.4byte	.LVL93
 10075 0713 0100     		.2byte	0x1
 10076 0715 51       		.byte	0x51
 10077 0716 10000000 		.4byte	.LVL93
 10078 071a 4A000000 		.4byte	.LVL99
 10079 071e 0100     		.2byte	0x1
 10080 0720 56       		.byte	0x56
 10081 0721 4A000000 		.4byte	.LVL99
 10082 0725 50000000 		.4byte	.LFE19
 10083 0729 0400     		.2byte	0x4
 10084 072b F3       		.byte	0xf3
 10085 072c 01       		.uleb128 0x1
 10086 072d 51       		.byte	0x51
 10087 072e 9F       		.byte	0x9f
 10088 072f 00000000 		.4byte	0
 10089 0733 00000000 		.4byte	0
 10090              	.LLST44:
 10091 0737 00000000 		.4byte	.LVL92
 10092 073b 12000000 		.4byte	.LVL94
 10093 073f 0100     		.2byte	0x1
 10094 0741 52       		.byte	0x52
 10095 0742 12000000 		.4byte	.LVL94
 10096 0746 50000000 		.4byte	.LFE19
 10097 074a 0300     		.2byte	0x3
 10098 074c 91       		.byte	0x91
 10099 074d A07F     		.sleb128 -96
 10100 074f 00000000 		.4byte	0
 10101 0753 00000000 		.4byte	0
 10102              	.LLST45:
 10103 0757 00000000 		.4byte	.LVL92
 10104 075b 19000000 		.4byte	.LVL96-1
 10105 075f 0100     		.2byte	0x1
 10106 0761 53       		.byte	0x53
 10107 0762 19000000 		.4byte	.LVL96-1
 10108 0766 50000000 		.4byte	.LFE19
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 265


 10109 076a 0300     		.2byte	0x3
 10110 076c 91       		.byte	0x91
 10111 076d A47F     		.sleb128 -92
 10112 076f 00000000 		.4byte	0
 10113 0773 00000000 		.4byte	0
 10114              	.LLST46:
 10115 0777 00000000 		.4byte	.LVL101
 10116 077b 0B000000 		.4byte	.LVL102-1
 10117 077f 0100     		.2byte	0x1
 10118 0781 50       		.byte	0x50
 10119 0782 0B000000 		.4byte	.LVL102-1
 10120 0786 3E000000 		.4byte	.LVL106
 10121 078a 0100     		.2byte	0x1
 10122 078c 55       		.byte	0x55
 10123 078d 3E000000 		.4byte	.LVL106
 10124 0791 44000000 		.4byte	.LFE20
 10125 0795 0400     		.2byte	0x4
 10126 0797 F3       		.byte	0xf3
 10127 0798 01       		.uleb128 0x1
 10128 0799 50       		.byte	0x50
 10129 079a 9F       		.byte	0x9f
 10130 079b 00000000 		.4byte	0
 10131 079f 00000000 		.4byte	0
 10132              	.LLST47:
 10133 07a3 32000000 		.4byte	.LVL103
 10134 07a7 38000000 		.4byte	.LVL104
 10135 07ab 0100     		.2byte	0x1
 10136 07ad 50       		.byte	0x50
 10137 07ae 3C000000 		.4byte	.LVL105
 10138 07b2 44000000 		.4byte	.LFE20
 10139 07b6 0100     		.2byte	0x1
 10140 07b8 50       		.byte	0x50
 10141 07b9 00000000 		.4byte	0
 10142 07bd 00000000 		.4byte	0
 10143              	.LLST48:
 10144 07c1 00000000 		.4byte	.LVL107
 10145 07c5 16000000 		.4byte	.LVL110
 10146 07c9 0100     		.2byte	0x1
 10147 07cb 50       		.byte	0x50
 10148 07cc 16000000 		.4byte	.LVL110
 10149 07d0 5C000000 		.4byte	.LVL116
 10150 07d4 0100     		.2byte	0x1
 10151 07d6 55       		.byte	0x55
 10152 07d7 5C000000 		.4byte	.LVL116
 10153 07db 64000000 		.4byte	.LFE21
 10154 07df 0400     		.2byte	0x4
 10155 07e1 F3       		.byte	0xf3
 10156 07e2 01       		.uleb128 0x1
 10157 07e3 50       		.byte	0x50
 10158 07e4 9F       		.byte	0x9f
 10159 07e5 00000000 		.4byte	0
 10160 07e9 00000000 		.4byte	0
 10161              	.LLST49:
 10162 07ed 00000000 		.4byte	.LVL107
 10163 07f1 0C000000 		.4byte	.LVL108
 10164 07f5 0100     		.2byte	0x1
 10165 07f7 51       		.byte	0x51
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 266


 10166 07f8 0C000000 		.4byte	.LVL108
 10167 07fc 64000000 		.4byte	.LFE21
 10168 0800 0300     		.2byte	0x3
 10169 0802 91       		.byte	0x91
 10170 0803 A07F     		.sleb128 -96
 10171 0805 00000000 		.4byte	0
 10172 0809 00000000 		.4byte	0
 10173              	.LLST50:
 10174 080d 00000000 		.4byte	.LVL107
 10175 0811 14000000 		.4byte	.LVL109
 10176 0815 0100     		.2byte	0x1
 10177 0817 52       		.byte	0x52
 10178 0818 14000000 		.4byte	.LVL109
 10179 081c 64000000 		.4byte	.LFE21
 10180 0820 0300     		.2byte	0x3
 10181 0822 91       		.byte	0x91
 10182 0823 A47F     		.sleb128 -92
 10183 0825 00000000 		.4byte	0
 10184 0829 00000000 		.4byte	0
 10185              	.LLST51:
 10186 082d 00000000 		.4byte	.LVL107
 10187 0831 1B000000 		.4byte	.LVL111-1
 10188 0835 0100     		.2byte	0x1
 10189 0837 53       		.byte	0x53
 10190 0838 1B000000 		.4byte	.LVL111-1
 10191 083c 5C000000 		.4byte	.LVL117
 10192 0840 0100     		.2byte	0x1
 10193 0842 56       		.byte	0x56
 10194 0843 5C000000 		.4byte	.LVL117
 10195 0847 64000000 		.4byte	.LFE21
 10196 084b 0400     		.2byte	0x4
 10197 084d F3       		.byte	0xf3
 10198 084e 01       		.uleb128 0x1
 10199 084f 53       		.byte	0x53
 10200 0850 9F       		.byte	0x9f
 10201 0851 00000000 		.4byte	0
 10202 0855 00000000 		.4byte	0
 10203              	.LLST52:
 10204 0859 00000000 		.4byte	.LVL118
 10205 085d 0C000000 		.4byte	.LVL119
 10206 0861 0100     		.2byte	0x1
 10207 0863 50       		.byte	0x50
 10208 0864 0C000000 		.4byte	.LVL119
 10209 0868 1E000000 		.4byte	.LVL120
 10210 086c 0400     		.2byte	0x4
 10211 086e F3       		.byte	0xf3
 10212 086f 01       		.uleb128 0x1
 10213 0870 50       		.byte	0x50
 10214 0871 9F       		.byte	0x9f
 10215 0872 1E000000 		.4byte	.LVL120
 10216 0876 20000000 		.4byte	.LVL121
 10217 087a 0100     		.2byte	0x1
 10218 087c 50       		.byte	0x50
 10219 087d 20000000 		.4byte	.LVL121
 10220 0881 24000000 		.4byte	.LFE25
 10221 0885 0400     		.2byte	0x4
 10222 0887 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 267


 10223 0888 01       		.uleb128 0x1
 10224 0889 50       		.byte	0x50
 10225 088a 9F       		.byte	0x9f
 10226 088b 00000000 		.4byte	0
 10227 088f 00000000 		.4byte	0
 10228              	.LLST53:
 10229 0893 00000000 		.4byte	.LVL122
 10230 0897 14000000 		.4byte	.LVL123
 10231 089b 0100     		.2byte	0x1
 10232 089d 50       		.byte	0x50
 10233 089e 14000000 		.4byte	.LVL123
 10234 08a2 58000000 		.4byte	.LVL130
 10235 08a6 0100     		.2byte	0x1
 10236 08a8 55       		.byte	0x55
 10237 08a9 58000000 		.4byte	.LVL130
 10238 08ad 5A000000 		.4byte	.LVL131
 10239 08b1 0100     		.2byte	0x1
 10240 08b3 50       		.byte	0x50
 10241 08b4 5A000000 		.4byte	.LVL131
 10242 08b8 5C000000 		.4byte	.LVL134
 10243 08bc 0100     		.2byte	0x1
 10244 08be 55       		.byte	0x55
 10245 08bf 5C000000 		.4byte	.LVL134
 10246 08c3 5E000000 		.4byte	.LFE26
 10247 08c7 0400     		.2byte	0x4
 10248 08c9 F3       		.byte	0xf3
 10249 08ca 01       		.uleb128 0x1
 10250 08cb 50       		.byte	0x50
 10251 08cc 9F       		.byte	0x9f
 10252 08cd 00000000 		.4byte	0
 10253 08d1 00000000 		.4byte	0
 10254              	.LLST54:
 10255 08d5 00000000 		.4byte	.LVL122
 10256 08d9 18000000 		.4byte	.LVL125
 10257 08dd 0100     		.2byte	0x1
 10258 08df 51       		.byte	0x51
 10259 08e0 18000000 		.4byte	.LVL125
 10260 08e4 1B000000 		.4byte	.LVL126-1
 10261 08e8 0100     		.2byte	0x1
 10262 08ea 50       		.byte	0x50
 10263 08eb 1B000000 		.4byte	.LVL126-1
 10264 08ef 58000000 		.4byte	.LVL130
 10265 08f3 0100     		.2byte	0x1
 10266 08f5 54       		.byte	0x54
 10267 08f6 58000000 		.4byte	.LVL130
 10268 08fa 5C000000 		.4byte	.LVL132
 10269 08fe 0100     		.2byte	0x1
 10270 0900 51       		.byte	0x51
 10271 0901 5C000000 		.4byte	.LVL132
 10272 0905 5C000000 		.4byte	.LVL133
 10273 0909 0100     		.2byte	0x1
 10274 090b 54       		.byte	0x54
 10275 090c 5C000000 		.4byte	.LVL133
 10276 0910 5E000000 		.4byte	.LFE26
 10277 0914 0400     		.2byte	0x4
 10278 0916 F3       		.byte	0xf3
 10279 0917 01       		.uleb128 0x1
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 268


 10280 0918 51       		.byte	0x51
 10281 0919 9F       		.byte	0x9f
 10282 091a 00000000 		.4byte	0
 10283 091e 00000000 		.4byte	0
 10284              	.LLST55:
 10285 0922 00000000 		.4byte	.LVL122
 10286 0926 16000000 		.4byte	.LVL124
 10287 092a 0100     		.2byte	0x1
 10288 092c 52       		.byte	0x52
 10289 092d 16000000 		.4byte	.LVL124
 10290 0931 58000000 		.4byte	.LVL130
 10291 0935 0100     		.2byte	0x1
 10292 0937 56       		.byte	0x56
 10293 0938 58000000 		.4byte	.LVL130
 10294 093c 5C000000 		.4byte	.LVL132
 10295 0940 0100     		.2byte	0x1
 10296 0942 52       		.byte	0x52
 10297 0943 5C000000 		.4byte	.LVL132
 10298 0947 5C000000 		.4byte	.LVL135
 10299 094b 0100     		.2byte	0x1
 10300 094d 56       		.byte	0x56
 10301 094e 5C000000 		.4byte	.LVL135
 10302 0952 5E000000 		.4byte	.LFE26
 10303 0956 0400     		.2byte	0x4
 10304 0958 F3       		.byte	0xf3
 10305 0959 01       		.uleb128 0x1
 10306 095a 52       		.byte	0x52
 10307 095b 9F       		.byte	0x9f
 10308 095c 00000000 		.4byte	0
 10309 0960 00000000 		.4byte	0
 10310              	.LLST56:
 10311 0964 00000000 		.4byte	.LVL122
 10312 0968 1B000000 		.4byte	.LVL126-1
 10313 096c 0100     		.2byte	0x1
 10314 096e 53       		.byte	0x53
 10315 096f 1B000000 		.4byte	.LVL126-1
 10316 0973 58000000 		.4byte	.LVL130
 10317 0977 0100     		.2byte	0x1
 10318 0979 57       		.byte	0x57
 10319 097a 58000000 		.4byte	.LVL130
 10320 097e 5C000000 		.4byte	.LVL132
 10321 0982 0100     		.2byte	0x1
 10322 0984 53       		.byte	0x53
 10323 0985 5C000000 		.4byte	.LVL132
 10324 0989 5C000000 		.4byte	.LVL136
 10325 098d 0100     		.2byte	0x1
 10326 098f 57       		.byte	0x57
 10327 0990 5C000000 		.4byte	.LVL136
 10328 0994 5E000000 		.4byte	.LFE26
 10329 0998 0400     		.2byte	0x4
 10330 099a F3       		.byte	0xf3
 10331 099b 01       		.uleb128 0x1
 10332 099c 53       		.byte	0x53
 10333 099d 9F       		.byte	0x9f
 10334 099e 00000000 		.4byte	0
 10335 09a2 00000000 		.4byte	0
 10336              	.LLST57:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 269


 10337 09a6 1C000000 		.4byte	.LVL126
 10338 09aa 30000000 		.4byte	.LVL127
 10339 09ae 0200     		.2byte	0x2
 10340 09b0 91       		.byte	0x91
 10341 09b1 00       		.sleb128 0
 10342 09b2 00000000 		.4byte	0
 10343 09b6 00000000 		.4byte	0
 10344              	.LLST58:
 10345 09ba 1C000000 		.4byte	.LVL126
 10346 09be 58000000 		.4byte	.LVL130
 10347 09c2 0100     		.2byte	0x1
 10348 09c4 55       		.byte	0x55
 10349 09c5 00000000 		.4byte	0
 10350 09c9 00000000 		.4byte	0
 10351              	.LLST59:
 10352 09cd 30000000 		.4byte	.LVL127
 10353 09d1 58000000 		.4byte	.LVL130
 10354 09d5 0300     		.2byte	0x3
 10355 09d7 74       		.byte	0x74
 10356 09d8 04       		.sleb128 4
 10357 09d9 9F       		.byte	0x9f
 10358 09da 00000000 		.4byte	0
 10359 09de 00000000 		.4byte	0
 10360              	.LLST60:
 10361 09e2 30000000 		.4byte	.LVL127
 10362 09e6 3E000000 		.4byte	.LVL128
 10363 09ea 0100     		.2byte	0x1
 10364 09ec 53       		.byte	0x53
 10365 09ed 3E000000 		.4byte	.LVL128
 10366 09f1 58000000 		.4byte	.LVL130
 10367 09f5 0300     		.2byte	0x3
 10368 09f7 71       		.byte	0x71
 10369 09f8 7F       		.sleb128 -1
 10370 09f9 9F       		.byte	0x9f
 10371 09fa 00000000 		.4byte	0
 10372 09fe 00000000 		.4byte	0
 10373              	.LLST61:
 10374 0a02 52000000 		.4byte	.LVL129
 10375 0a06 58000000 		.4byte	.LVL130
 10376 0a0a 0300     		.2byte	0x3
 10377 0a0c 74       		.byte	0x74
 10378 0a0d 0B       		.sleb128 11
 10379 0a0e 9F       		.byte	0x9f
 10380 0a0f 00000000 		.4byte	0
 10381 0a13 00000000 		.4byte	0
 10382              	.LLST62:
 10383 0a17 52000000 		.4byte	.LVL129
 10384 0a1b 58000000 		.4byte	.LVL130
 10385 0a1f 0100     		.2byte	0x1
 10386 0a21 56       		.byte	0x56
 10387 0a22 00000000 		.4byte	0
 10388 0a26 00000000 		.4byte	0
 10389              	.LLST63:
 10390 0a2a 00000000 		.4byte	.LVL137
 10391 0a2e 1D000000 		.4byte	.LVL141-1
 10392 0a32 0100     		.2byte	0x1
 10393 0a34 50       		.byte	0x50
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 270


 10394 0a35 1D000000 		.4byte	.LVL141-1
 10395 0a39 68000000 		.4byte	.LVL151
 10396 0a3d 0100     		.2byte	0x1
 10397 0a3f 54       		.byte	0x54
 10398 0a40 68000000 		.4byte	.LVL151
 10399 0a44 6A000000 		.4byte	.LVL152
 10400 0a48 0100     		.2byte	0x1
 10401 0a4a 50       		.byte	0x50
 10402 0a4b 6A000000 		.4byte	.LVL152
 10403 0a4f 70000000 		.4byte	.LFE27
 10404 0a53 0400     		.2byte	0x4
 10405 0a55 F3       		.byte	0xf3
 10406 0a56 01       		.uleb128 0x1
 10407 0a57 50       		.byte	0x50
 10408 0a58 9F       		.byte	0x9f
 10409 0a59 00000000 		.4byte	0
 10410 0a5d 00000000 		.4byte	0
 10411              	.LLST64:
 10412 0a61 00000000 		.4byte	.LVL137
 10413 0a65 14000000 		.4byte	.LVL139
 10414 0a69 0100     		.2byte	0x1
 10415 0a6b 51       		.byte	0x51
 10416 0a6c 14000000 		.4byte	.LVL139
 10417 0a70 68000000 		.4byte	.LVL151
 10418 0a74 0300     		.2byte	0x3
 10419 0a76 91       		.byte	0x91
 10420 0a77 C47D     		.sleb128 -316
 10421 0a79 68000000 		.4byte	.LVL151
 10422 0a7d 6C000000 		.4byte	.LVL153
 10423 0a81 0100     		.2byte	0x1
 10424 0a83 51       		.byte	0x51
 10425 0a84 6C000000 		.4byte	.LVL153
 10426 0a88 70000000 		.4byte	.LFE27
 10427 0a8c 0400     		.2byte	0x4
 10428 0a8e F3       		.byte	0xf3
 10429 0a8f 01       		.uleb128 0x1
 10430 0a90 51       		.byte	0x51
 10431 0a91 9F       		.byte	0x9f
 10432 0a92 00000000 		.4byte	0
 10433 0a96 00000000 		.4byte	0
 10434              	.LLST65:
 10435 0a9a 00000000 		.4byte	.LVL137
 10436 0a9e 1A000000 		.4byte	.LVL140
 10437 0aa2 0100     		.2byte	0x1
 10438 0aa4 52       		.byte	0x52
 10439 0aa5 1A000000 		.4byte	.LVL140
 10440 0aa9 68000000 		.4byte	.LVL151
 10441 0aad 0100     		.2byte	0x1
 10442 0aaf 56       		.byte	0x56
 10443 0ab0 68000000 		.4byte	.LVL151
 10444 0ab4 6C000000 		.4byte	.LVL153
 10445 0ab8 0100     		.2byte	0x1
 10446 0aba 52       		.byte	0x52
 10447 0abb 6C000000 		.4byte	.LVL153
 10448 0abf 70000000 		.4byte	.LFE27
 10449 0ac3 0400     		.2byte	0x4
 10450 0ac5 F3       		.byte	0xf3
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 271


 10451 0ac6 01       		.uleb128 0x1
 10452 0ac7 52       		.byte	0x52
 10453 0ac8 9F       		.byte	0x9f
 10454 0ac9 00000000 		.4byte	0
 10455 0acd 00000000 		.4byte	0
 10456              	.LLST66:
 10457 0ad1 00000000 		.4byte	.LVL137
 10458 0ad5 0E000000 		.4byte	.LVL138
 10459 0ad9 0100     		.2byte	0x1
 10460 0adb 53       		.byte	0x53
 10461 0adc 0E000000 		.4byte	.LVL138
 10462 0ae0 68000000 		.4byte	.LVL151
 10463 0ae4 0100     		.2byte	0x1
 10464 0ae6 55       		.byte	0x55
 10465 0ae7 68000000 		.4byte	.LVL151
 10466 0aeb 6C000000 		.4byte	.LVL153
 10467 0aef 0100     		.2byte	0x1
 10468 0af1 53       		.byte	0x53
 10469 0af2 6C000000 		.4byte	.LVL153
 10470 0af6 70000000 		.4byte	.LFE27
 10471 0afa 0400     		.2byte	0x4
 10472 0afc F3       		.byte	0xf3
 10473 0afd 01       		.uleb128 0x1
 10474 0afe 53       		.byte	0x53
 10475 0aff 9F       		.byte	0x9f
 10476 0b00 00000000 		.4byte	0
 10477 0b04 00000000 		.4byte	0
 10478              	.LLST67:
 10479 0b08 3E000000 		.4byte	.LVL144
 10480 0b0c 44000000 		.4byte	.LVL145
 10481 0b10 0100     		.2byte	0x1
 10482 0b12 50       		.byte	0x50
 10483 0b13 4C000000 		.4byte	.LVL146
 10484 0b17 52000000 		.4byte	.LVL147
 10485 0b1b 0100     		.2byte	0x1
 10486 0b1d 50       		.byte	0x50
 10487 0b1e 5A000000 		.4byte	.LVL148
 10488 0b22 60000000 		.4byte	.LVL149
 10489 0b26 0100     		.2byte	0x1
 10490 0b28 50       		.byte	0x50
 10491 0b29 00000000 		.4byte	0
 10492 0b2d 00000000 		.4byte	0
 10493              	.LLST68:
 10494 0b31 0A000000 		.4byte	.LVL155
 10495 0b35 19000000 		.4byte	.LVL157-1
 10496 0b39 0100     		.2byte	0x1
 10497 0b3b 50       		.byte	0x50
 10498 0b3c 19000000 		.4byte	.LVL157-1
 10499 0b40 1C000000 		.4byte	.LVL158
 10500 0b44 0100     		.2byte	0x1
 10501 0b46 54       		.byte	0x54
 10502 0b47 1C000000 		.4byte	.LVL158
 10503 0b4b 1E000000 		.4byte	.LFE28
 10504 0b4f 0100     		.2byte	0x1
 10505 0b51 50       		.byte	0x50
 10506 0b52 00000000 		.4byte	0
 10507 0b56 00000000 		.4byte	0
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 272


 10508              	.LLST69:
 10509 0b5a 0A000000 		.4byte	.LVL160
 10510 0b5e 19000000 		.4byte	.LVL162-1
 10511 0b62 0100     		.2byte	0x1
 10512 0b64 50       		.byte	0x50
 10513 0b65 19000000 		.4byte	.LVL162-1
 10514 0b69 1C000000 		.4byte	.LVL163
 10515 0b6d 0100     		.2byte	0x1
 10516 0b6f 54       		.byte	0x54
 10517 0b70 1C000000 		.4byte	.LVL163
 10518 0b74 1E000000 		.4byte	.LFE29
 10519 0b78 0100     		.2byte	0x1
 10520 0b7a 50       		.byte	0x50
 10521 0b7b 00000000 		.4byte	0
 10522 0b7f 00000000 		.4byte	0
 10523              		.section	.debug_aranges,"",%progbits
 10524 0000 7C000000 		.4byte	0x7c
 10525 0004 0200     		.2byte	0x2
 10526 0006 00000000 		.4byte	.Ldebug_info0
 10527 000a 04       		.byte	0x4
 10528 000b 00       		.byte	0
 10529 000c 0000     		.2byte	0
 10530 000e 0000     		.2byte	0
 10531 0010 00000000 		.4byte	.LFB14
 10532 0014 62010000 		.4byte	.LFE14-.LFB14
 10533 0018 00000000 		.4byte	.LFB15
 10534 001c 84000000 		.4byte	.LFE15-.LFB15
 10535 0020 00000000 		.4byte	.LFB16
 10536 0024 10000000 		.4byte	.LFE16-.LFB16
 10537 0028 00000000 		.4byte	.LFB17
 10538 002c 50000000 		.4byte	.LFE17-.LFB17
 10539 0030 00000000 		.4byte	.LFB18
 10540 0034 58000000 		.4byte	.LFE18-.LFB18
 10541 0038 00000000 		.4byte	.LFB19
 10542 003c 50000000 		.4byte	.LFE19-.LFB19
 10543 0040 00000000 		.4byte	.LFB20
 10544 0044 44000000 		.4byte	.LFE20-.LFB20
 10545 0048 00000000 		.4byte	.LFB21
 10546 004c 64000000 		.4byte	.LFE21-.LFB21
 10547 0050 00000000 		.4byte	.LFB25
 10548 0054 24000000 		.4byte	.LFE25-.LFB25
 10549 0058 00000000 		.4byte	.LFB26
 10550 005c 5E000000 		.4byte	.LFE26-.LFB26
 10551 0060 00000000 		.4byte	.LFB27
 10552 0064 70000000 		.4byte	.LFE27-.LFB27
 10553 0068 00000000 		.4byte	.LFB28
 10554 006c 1E000000 		.4byte	.LFE28-.LFB28
 10555 0070 00000000 		.4byte	.LFB29
 10556 0074 1E000000 		.4byte	.LFE29-.LFB29
 10557 0078 00000000 		.4byte	0
 10558 007c 00000000 		.4byte	0
 10559              		.section	.debug_ranges,"",%progbits
 10560              	.Ldebug_ranges0:
 10561 0000 1C000000 		.4byte	.LBB39
 10562 0004 2A000000 		.4byte	.LBE39
 10563 0008 2C000000 		.4byte	.LBB42
 10564 000c 30000000 		.4byte	.LBE42
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 273


 10565 0010 00000000 		.4byte	0
 10566 0014 00000000 		.4byte	0
 10567 0018 30000000 		.4byte	.LBB43
 10568 001c 3C000000 		.4byte	.LBE43
 10569 0020 3E000000 		.4byte	.LBB46
 10570 0024 40000000 		.4byte	.LBE46
 10571 0028 00000000 		.4byte	0
 10572 002c 00000000 		.4byte	0
 10573 0030 4E000000 		.4byte	.LBB47
 10574 0034 50000000 		.4byte	.LBE47
 10575 0038 52000000 		.4byte	.LBB50
 10576 003c 56000000 		.4byte	.LBE50
 10577 0040 00000000 		.4byte	0
 10578 0044 00000000 		.4byte	0
 10579 0048 00000000 		.4byte	.LFB14
 10580 004c 62010000 		.4byte	.LFE14
 10581 0050 00000000 		.4byte	.LFB15
 10582 0054 84000000 		.4byte	.LFE15
 10583 0058 00000000 		.4byte	.LFB16
 10584 005c 10000000 		.4byte	.LFE16
 10585 0060 00000000 		.4byte	.LFB17
 10586 0064 50000000 		.4byte	.LFE17
 10587 0068 00000000 		.4byte	.LFB18
 10588 006c 58000000 		.4byte	.LFE18
 10589 0070 00000000 		.4byte	.LFB19
 10590 0074 50000000 		.4byte	.LFE19
 10591 0078 00000000 		.4byte	.LFB20
 10592 007c 44000000 		.4byte	.LFE20
 10593 0080 00000000 		.4byte	.LFB21
 10594 0084 64000000 		.4byte	.LFE21
 10595 0088 00000000 		.4byte	.LFB25
 10596 008c 24000000 		.4byte	.LFE25
 10597 0090 00000000 		.4byte	.LFB26
 10598 0094 5E000000 		.4byte	.LFE26
 10599 0098 00000000 		.4byte	.LFB27
 10600 009c 70000000 		.4byte	.LFE27
 10601 00a0 00000000 		.4byte	.LFB28
 10602 00a4 1E000000 		.4byte	.LFE28
 10603 00a8 00000000 		.4byte	.LFB29
 10604 00ac 1E000000 		.4byte	.LFE29
 10605 00b0 00000000 		.4byte	0
 10606 00b4 00000000 		.4byte	0
 10607              		.section	.debug_line,"",%progbits
 10608              	.Ldebug_line0:
 10609 0000 6B040000 		.section	.debug_str,"MS",%progbits,1
 10609      02003602 
 10609      00000201 
 10609      FB0E0D00 
 10609      01010101 
 10610              	.LASF382:
 10611 0000 4D41585F 		.ascii	"MAX_STR_VERSION\000"
 10611      5354525F 
 10611      56455253 
 10611      494F4E00 
 10612              	.LASF774:
 10613 0010 63757272 		.ascii	"current\000"
 10613      656E7400 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 274


 10614              	.LASF431:
 10615 0018 44544C53 		.ascii	"DTLS_HANDSHAKE_FRAG_SZ\000"
 10615      5F48414E 
 10615      44534841 
 10615      4B455F46 
 10615      5241475F 
 10616              	.LASF3:
 10617 002f 494F4342 		.ascii	"IOCB_ReadCtx\000"
 10617      5F526561 
 10617      64437478 
 10617      00
 10618              	.LASF307:
 10619 003c 4D41585F 		.ascii	"MAX_LENGTH_SZ\000"
 10619      4C454E47 
 10619      54485F53 
 10619      5A00
 10620              	.LASF159:
 10621 004a 53534C5F 		.ascii	"SSL_ERROR_WANT_X509_LOOKUP\000"
 10621      4552524F 
 10621      525F5741 
 10621      4E545F58 
 10621      3530395F 
 10622              	.LASF296:
 10623 0065 4D41585F 		.ascii	"MAX_ALGO_SZ\000"
 10623      414C474F 
 10623      5F535A00 
 10624              	.LASF516:
 10625 0071 68617368 		.ascii	"hashSigAlgoSz\000"
 10625      53696741 
 10625      6C676F53 
 10625      7A00
 10626              	.LASF218:
 10627 007f 44594E41 		.ascii	"DYNAMIC_TYPE_DSA\000"
 10627      4D49435F 
 10627      54595045 
 10627      5F445341 
 10627      00
 10628              	.LASF36:
 10629 0090 69644C65 		.ascii	"idLen\000"
 10629      6E00
 10630              	.LASF165:
 10631 0096 53534C5F 		.ascii	"SSL_OP_NO_SSLv2\000"
 10631      4F505F4E 
 10631      4F5F5353 
 10631      4C763200 
 10632              	.LASF623:
 10633 00a6 70656E64 		.ascii	"pendingMsgOffset\000"
 10633      696E674D 
 10633      73674F66 
 10633      66736574 
 10633      00
 10634              	.LASF735:
 10635 00b7 4145535F 		.ascii	"AES_KAT_FIPS_E\000"
 10635      4B41545F 
 10635      46495053 
 10635      5F4500
 10636              	.LASF170:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 275


 10637 00c6 50454D5F 		.ascii	"PEM_BUFSIZE\000"
 10637      42554653 
 10637      495A4500 
 10638              	.LASF466:
 10639 00d2 43414D45 		.ascii	"CAMELLIA_192_KEY_SIZE\000"
 10639      4C4C4941 
 10639      5F313932 
 10639      5F4B4559 
 10639      5F53495A 
 10640              	.LASF136:
 10641 00e8 53534C5F 		.ascii	"SSL_NOT_IMPLEMENTED\000"
 10641      4E4F545F 
 10641      494D504C 
 10641      454D454E 
 10641      54454400 
 10642              	.LASF399:
 10643 00fc 53455353 		.ascii	"SESSION_HINT_SZ\000"
 10643      494F4E5F 
 10643      48494E54 
 10643      5F535A00 
 10644              	.LASF568:
 10645 010c 6D64355F 		.ascii	"md5_mac\000"
 10645      6D616300 
 10646              	.LASF323:
 10647 0114 5369676E 		.ascii	"Signer\000"
 10647      657200
 10648              	.LASF34:
 10649 011b 73657373 		.ascii	"sessionIDSz\000"
 10649      696F6E49 
 10649      44537A00 
 10650              	.LASF720:
 10651 0127 41534E5F 		.ascii	"ASN_CRL_CONFIRM_E\000"
 10651      43524C5F 
 10651      434F4E46 
 10651      49524D5F 
 10651      4500
 10652              	.LASF479:
 10653 0139 4D41585F 		.ascii	"MAX_EXPORT_ECC_SZ\000"
 10653      4558504F 
 10653      52545F45 
 10653      43435F53 
 10653      5A00
 10654              	.LASF458:
 10655 014b 41455347 		.ascii	"AESGCM_NONCE_SZ\000"
 10655      434D5F4E 
 10655      4F4E4345 
 10655      5F535A00 
 10656              	.LASF822:
 10657 015b 53746F72 		.ascii	"StoreKeys\000"
 10657      654B6579 
 10657      7300
 10658              	.LASF599:
 10659 0165 73656E74 		.ascii	"sentNotify\000"
 10659      4E6F7469 
 10659      667900
 10660              	.LASF472:
 10661 0170 504F4C59 		.ascii	"POLY1305_AUTH_SZ\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 276


 10661      31333035 
 10661      5F415554 
 10661      485F535A 
 10661      00
 10662              	.LASF319:
 10663 0181 6E657874 		.ascii	"next\000"
 10663      00
 10664              	.LASF123:
 10665 0186 6572726F 		.ascii	"error_depth\000"
 10665      725F6465 
 10665      70746800 
 10666              	.LASF418:
 10667 0192 5245515F 		.ascii	"REQ_HEADER_SZ\000"
 10667      48454144 
 10667      45525F53 
 10667      5A00
 10668              	.LASF437:
 10669 01a0 4D41585F 		.ascii	"MAX_PRF_HALF\000"
 10669      5052465F 
 10669      48414C46 
 10669      00
 10670              	.LASF829:
 10671 01ad 2E2E5C61 		.ascii	"..\\acn-sdk-c\\src\\wolfSSL\\src\\tls.c\000"
 10671      636E2D73 
 10671      646B2D63 
 10671      5C737263 
 10671      5C776F6C 
 10672              	.LASF532:
 10673 01d0 6E657874 		.ascii	"nextDateFormat\000"
 10673      44617465 
 10673      466F726D 
 10673      617400
 10674              	.LASF320:
 10675 01df 42617365 		.ascii	"Base_entry\000"
 10675      5F656E74 
 10675      727900
 10676              	.LASF50:
 10677 01ea 6661696C 		.ascii	"failNoCert\000"
 10677      4E6F4365 
 10677      727400
 10678              	.LASF166:
 10679 01f5 53534C5F 		.ascii	"SSL_R_SSL_HANDSHAKE_FAILURE\000"
 10679      525F5353 
 10679      4C5F4841 
 10679      4E445348 
 10679      414B455F 
 10680              	.LASF395:
 10681 0211 414C4552 		.ascii	"ALERT_SIZE\000"
 10681      545F5349 
 10681      5A4500
 10682              	.LASF731:
 10683 021c 484D4143 		.ascii	"HMAC_MIN_KEYLEN_E\000"
 10683      5F4D494E 
 10683      5F4B4559 
 10683      4C454E5F 
 10683      4500
 10684              	.LASF32:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 277


 10685 022e 626F726E 		.ascii	"bornOn\000"
 10685      4F6E00
 10686              	.LASF447:
 10687 0235 4145535F 		.ascii	"AES_192_KEY_SIZE\000"
 10687      3139325F 
 10687      4B45595F 
 10687      53495A45 
 10687      00
 10688              	.LASF808:
 10689 0246 776F6C66 		.ascii	"wolfSSLv23_client_method\000"
 10689      53534C76 
 10689      32335F63 
 10689      6C69656E 
 10689      745F6D65 
 10690              	.LASF717:
 10691 025f 4445434F 		.ascii	"DECOMPRESS_E\000"
 10691      4D505245 
 10691      53535F45 
 10691      00
 10692              	.LASF769:
 10693 026c 73656564 		.ascii	"seedLen\000"
 10693      4C656E00 
 10694              	.LASF462:
 10695 0274 4145535F 		.ascii	"AES_GCM_AUTH_SZ\000"
 10695      47434D5F 
 10695      41555448 
 10695      5F535A00 
 10696              	.LASF31:
 10697 0284 574F4C46 		.ascii	"WOLFSSL_SESSION\000"
 10697      53534C5F 
 10697      53455353 
 10697      494F4E00 
 10698              	.LASF303:
 10699 0294 4D41585F 		.ascii	"MAX_ENCODED_DIG_SZ\000"
 10699      454E434F 
 10699      4445445F 
 10699      4449475F 
 10699      535A00
 10700              	.LASF171:
 10701 02a7 43616C6C 		.ascii	"CallbackIORecv\000"
 10701      6261636B 
 10701      494F5265 
 10701      637600
 10702              	.LASF151:
 10703 02b6 53534C5F 		.ascii	"SSL_SESS_CACHE_BOTH\000"
 10703      53455353 
 10703      5F434143 
 10703      48455F42 
 10703      4F544800 
 10704              	.LASF561:
 10705 02ca 6D61635F 		.ascii	"mac_algorithm\000"
 10705      616C676F 
 10705      72697468 
 10705      6D00
 10706              	.LASF553:
 10707 02d8 64656372 		.ascii	"decryptedCur\000"
 10707      79707465 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 278


 10707      64437572 
 10707      00
 10708              	.LASF496:
 10709 02e5 4D41585F 		.ascii	"MAX_NTRU_BITS\000"
 10709      4E545255 
 10709      5F424954 
 10709      5300
 10710              	.LASF351:
 10711 02f3 696E6E65 		.ascii	"innerHashKeyed\000"
 10711      72486173 
 10711      684B6579 
 10711      656400
 10712              	.LASF626:
 10713 0302 7072654D 		.ascii	"preMasterSecret\000"
 10713      61737465 
 10713      72536563 
 10713      72657400 
 10714              	.LASF308:
 10715 0312 4D41585F 		.ascii	"MAX_RSA_E_SZ\000"
 10715      5253415F 
 10715      455F535A 
 10715      00
 10716              	.LASF352:
 10717 031f 4D697363 		.ascii	"Misc_ASN\000"
 10717      5F41534E 
 10717      00
 10718              	.LASF355:
 10719 0328 5153485F 		.ascii	"QSH_BYTE\000"
 10719      42595445 
 10719      00
 10720              	.LASF302:
 10721 0331 4D41585F 		.ascii	"MAX_VERSION_SZ\000"
 10721      56455253 
 10721      494F4E5F 
 10721      535A00
 10722              	.LASF342:
 10723 0340 484D4143 		.ascii	"HMAC_BLOCK_SIZE\000"
 10723      5F424C4F 
 10723      434B5F53 
 10723      495A4500 
 10724              	.LASF794:
 10725 0350 776F6C66 		.ascii	"wolfSSL_MakeTlsMasterSecret\000"
 10725      53534C5F 
 10725      4D616B65 
 10725      546C734D 
 10725      61737465 
 10726              	.LASF676:
 10727 036c 5055424C 		.ascii	"PUBLIC_KEY_E\000"
 10727      49435F4B 
 10727      45595F45 
 10727      00
 10728              	.LASF208:
 10729 0379 44594E41 		.ascii	"DYNAMIC_TYPE_METHOD\000"
 10729      4D49435F 
 10729      54595045 
 10729      5F4D4554 
 10729      484F4400 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 279


 10730              	.LASF627:
 10731 038d 70656E64 		.ascii	"pendingMsgType\000"
 10731      696E674D 
 10731      73675479 
 10731      706500
 10732              	.LASF710:
 10733 039c 414C545F 		.ascii	"ALT_NAME_E\000"
 10733      4E414D45 
 10733      5F4500
 10734              	.LASF506:
 10735 03a7 6C656E67 		.ascii	"length\000"
 10735      746800
 10736              	.LASF665:
 10737 03ae 4D505F4D 		.ascii	"MP_MUL_E\000"
 10737      554C5F45 
 10737      00
 10738              	.LASF13:
 10739 03b7 64656372 		.ascii	"decrypt\000"
 10739      79707400 
 10740              	.LASF816:
 10741 03bf 77635F48 		.ascii	"wc_HmacSetKey\000"
 10741      6D616353 
 10741      65744B65 
 10741      7900
 10742              	.LASF387:
 10743 03cd 434F4D50 		.ascii	"COMPRESS_CONSTANT\000"
 10743      52455353 
 10743      5F434F4E 
 10743      5354414E 
 10743      5400
 10744              	.LASF394:
 10745 03df 42595445 		.ascii	"BYTE3_LEN\000"
 10745      335F4C45 
 10745      4E00
 10746              	.LASF491:
 10747 03e9 43455254 		.ascii	"CERT_MIN_SIZE\000"
 10747      5F4D494E 
 10747      5F53495A 
 10747      4500
 10748              	.LASF604:
 10749 03f7 7573696E 		.ascii	"usingPSK_cipher\000"
 10749      6750534B 
 10749      5F636970 
 10749      68657200 
 10750              	.LASF333:
 10751 0407 44524247 		.ascii	"DRBG\000"
 10751      00
 10752              	.LASF764:
 10753 040c 705F6861 		.ascii	"p_hash\000"
 10753      736800
 10754              	.LASF155:
 10755 0413 53534C5F 		.ascii	"SSL_ERROR_WANT_WRITE\000"
 10755      4552524F 
 10755      525F5741 
 10755      4E545F57 
 10755      52495445 
 10756              	.LASF681:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 280


 10757 0428 45585445 		.ascii	"EXTENSIONS_E\000"
 10757      4E53494F 
 10757      4E535F45 
 10757      00
 10758              	.LASF300:
 10759 0435 4D41585F 		.ascii	"MAX_EXP_SZ\000"
 10759      4558505F 
 10759      535A00
 10760              	.LASF153:
 10761 0440 53534C5F 		.ascii	"SSL_SESS_CACHE_NO_INTERNAL_LOOKUP\000"
 10761      53455353 
 10761      5F434143 
 10761      48455F4E 
 10761      4F5F494E 
 10762              	.LASF625:
 10763 0462 73657276 		.ascii	"serverRandom\000"
 10763      65725261 
 10763      6E646F6D 
 10763      00
 10764              	.LASF291:
 10765 046f 4D494E5F 		.ascii	"MIN_DATE_SIZE\000"
 10765      44415445 
 10765      5F53495A 
 10765      4500
 10766              	.LASF230:
 10767 047d 44594E41 		.ascii	"DYNAMIC_TYPE_ARRAYS\000"
 10767      4D49435F 
 10767      54595045 
 10767      5F415252 
 10767      41595300 
 10768              	.LASF715:
 10769 0491 434F4D50 		.ascii	"COMPRESS_E\000"
 10769      52455353 
 10769      5F4500
 10770              	.LASF250:
 10771 049c 44594E41 		.ascii	"DYNAMIC_TYPE_X509_CTX\000"
 10771      4D49435F 
 10771      54595045 
 10771      5F583530 
 10771      395F4354 
 10772              	.LASF694:
 10773 04b2 41534E5F 		.ascii	"ASN_SIG_OID_E\000"
 10773      5349475F 
 10773      4F49445F 
 10773      4500
 10774              	.LASF515:
 10775 04c0 73756974 		.ascii	"suiteSz\000"
 10775      65537A00 
 10776              	.LASF654:
 10777 04c8 52454144 		.ascii	"READ_RAN_E\000"
 10777      5F52414E 
 10777      5F4500
 10778              	.LASF427:
 10779 04d3 44544C53 		.ascii	"DTLS_RECORD_HEADER_SZ\000"
 10779      5F524543 
 10779      4F52445F 
 10779      48454144 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 281


 10779      45525F53 
 10780              	.LASF372:
 10781 04e9 53454352 		.ascii	"SECRET_LEN\000"
 10781      45545F4C 
 10781      454E00
 10782              	.LASF511:
 10783 04f4 64796E61 		.ascii	"dynamicFlag\000"
 10783      6D696346 
 10783      6C616700 
 10784              	.LASF211:
 10785 0500 44594E41 		.ascii	"DYNAMIC_TYPE_INFO\000"
 10785      4D49435F 
 10785      54595045 
 10785      5F494E46 
 10785      4F00
 10786              	.LASF620:
 10787 0512 70656E64 		.ascii	"pendingMsg\000"
 10787      696E674D 
 10787      736700
 10788              	.LASF763:
 10789 051d 4D494E5F 		.ascii	"MIN_CODE_E\000"
 10789      434F4445 
 10789      5F4500
 10790              	.LASF104:
 10791 0528 6F637370 		.ascii	"ocspUseOverrideURL\000"
 10791      5573654F 
 10791      76657272 
 10791      69646555 
 10791      524C00
 10792              	.LASF224:
 10793 053b 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_STATUS\000"
 10793      4D49435F 
 10793      54595045 
 10793      5F4F4353 
 10793      505F5354 
 10794              	.LASF364:
 10795 0554 544C5376 		.ascii	"TLSv1_MINOR\000"
 10795      315F4D49 
 10795      4E4F5200 
 10796              	.LASF162:
 10797 0560 53534C5F 		.ascii	"SSL_SENT_SHUTDOWN\000"
 10797      53454E54 
 10797      5F534855 
 10797      54444F57 
 10797      4E00
 10798              	.LASF711:
 10799 0572 4145535F 		.ascii	"AES_GCM_AUTH_E\000"
 10799      47434D5F 
 10799      41555448 
 10799      5F4500
 10800              	.LASF221:
 10801 0581 44594E41 		.ascii	"DYNAMIC_TYPE_CRL_ENTRY\000"
 10801      4D49435F 
 10801      54595045 
 10801      5F43524C 
 10801      5F454E54 
 10802              	.LASF585:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 282


 10803 0598 70726576 		.ascii	"prevSent\000"
 10803      53656E74 
 10803      00
 10804              	.LASF723:
 10805 05a1 4241445F 		.ascii	"BAD_ENC_STATE_E\000"
 10805      454E435F 
 10805      53544154 
 10805      455F4500 
 10806              	.LASF780:
 10807 05b1 75736541 		.ascii	"useAtLeastSha256\000"
 10807      744C6561 
 10807      73745368 
 10807      61323536 
 10807      00
 10808              	.LASF356:
 10809 05c2 43484143 		.ascii	"CHACHA_BYTE\000"
 10809      48415F42 
 10809      59544500 
 10810              	.LASF489:
 10811 05ce 4D41585F 		.ascii	"MAX_WOLFSSL_FILE_SIZE\000"
 10811      574F4C46 
 10811      53534C5F 
 10811      46494C45 
 10811      5F53495A 
 10812              	.LASF152:
 10813 05e4 53534C5F 		.ascii	"SSL_SESS_CACHE_NO_AUTO_CLEAR\000"
 10813      53455353 
 10813      5F434143 
 10813      48455F4E 
 10813      4F5F4155 
 10814              	.LASF173:
 10815 0601 756E7369 		.ascii	"unsigned char\000"
 10815      676E6564 
 10815      20636861 
 10815      7200
 10816              	.LASF397:
 10817 060f 4558545F 		.ascii	"EXT_ID_SZ\000"
 10817      49445F53 
 10817      5A00
 10818              	.LASF339:
 10819 0619 53484133 		.ascii	"SHA384\000"
 10819      383400
 10820              	.LASF310:
 10821 0620 4D41585F 		.ascii	"MAX_SN_SZ\000"
 10821      534E5F53 
 10821      5A00
 10822              	.LASF772:
 10823 062a 6C617374 		.ascii	"lastTime\000"
 10823      54696D65 
 10823      00
 10824              	.LASF405:
 10825 0633 434F4F4B 		.ascii	"COOKIE_SZ\000"
 10825      49455F53 
 10825      5A00
 10826              	.LASF675:
 10827 063d 414C474F 		.ascii	"ALGO_ID_E\000"
 10827      5F49445F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 283


 10827      4500
 10828              	.LASF368:
 10829 0647 494E5641 		.ascii	"INVALID_BYTE\000"
 10829      4C49445F 
 10829      42595445 
 10829      00
 10830              	.LASF824:
 10831 0654 6D656D63 		.ascii	"memcpy\000"
 10831      707900
 10832              	.LASF818:
 10833 065b 77635F48 		.ascii	"wc_HmacFinal\000"
 10833      6D616346 
 10833      696E616C 
 10833      00
 10834              	.LASF505:
 10835 0668 6D696E6F 		.ascii	"minor\000"
 10835      7200
 10836              	.LASF143:
 10837 066e 53534C5F 		.ascii	"SSL_VERIFY_NONE\000"
 10837      56455249 
 10837      46595F4E 
 10837      4F4E4500 
 10838              	.LASF450:
 10839 067e 41454144 		.ascii	"AEAD_SEQ_OFFSET\000"
 10839      5F534551 
 10839      5F4F4646 
 10839      53455400 
 10840              	.LASF316:
 10841 068e 4D41585F 		.ascii	"MAX_PUBLIC_KEY_SZ\000"
 10841      5055424C 
 10841      49435F4B 
 10841      45595F53 
 10841      5A00
 10842              	.LASF317:
 10843 06a0 48454144 		.ascii	"HEADER_ENCRYPTED_KEY_SIZE\000"
 10843      45525F45 
 10843      4E435259 
 10843      50544544 
 10843      5F4B4559 
 10844              	.LASF800:
 10845 06ba 76657269 		.ascii	"verify\000"
 10845      667900
 10846              	.LASF345:
 10847 06c1 486D6163 		.ascii	"Hmac\000"
 10847      00
 10848              	.LASF350:
 10849 06c6 6D616354 		.ascii	"macType\000"
 10849      79706500 
 10850              	.LASF205:
 10851 06ce 44594E41 		.ascii	"DYNAMIC_TYPE_NONE\000"
 10851      4D49435F 
 10851      54595045 
 10851      5F4E4F4E 
 10851      4500
 10852              	.LASF84:
 10853 06e0 69734361 		.ascii	"isCa\000"
 10853      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 284


 10854              	.LASF241:
 10855 06e5 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP\000"
 10855      4D49435F 
 10855      54595045 
 10855      5F4F4353 
 10855      5000
 10856              	.LASF468:
 10857 06f7 43414D45 		.ascii	"CAMELLIA_IV_SIZE\000"
 10857      4C4C4941 
 10857      5F49565F 
 10857      53495A45 
 10857      00
 10858              	.LASF138:
 10859 0708 53534C5F 		.ascii	"SSL_FATAL_ERROR\000"
 10859      46415441 
 10859      4C5F4552 
 10859      524F5200 
 10860              	.LASF122:
 10861 0718 75736572 		.ascii	"userCtx\000"
 10861      43747800 
 10862              	.LASF187:
 10863 0720 62797465 		.ascii	"byte\000"
 10863      00
 10864              	.LASF782:
 10865 0725 6C616265 		.ascii	"labelSeed\000"
 10865      6C536565 
 10865      6400
 10866              	.LASF255:
 10867 072f 53484132 		.ascii	"SHA256_BLOCK_SIZE\000"
 10867      35365F42 
 10867      4C4F434B 
 10867      5F53495A 
 10867      4500
 10868              	.LASF328:
 10869 0741 6E616D65 		.ascii	"nameLen\000"
 10869      4C656E00 
 10870              	.LASF449:
 10871 0749 4145535F 		.ascii	"AES_128_KEY_SIZE\000"
 10871      3132385F 
 10871      4B45595F 
 10871      53495A45 
 10871      00
 10872              	.LASF181:
 10873 075a 574F4C46 		.ascii	"WOLFSSL_BLOCK_TYPE\000"
 10873      53534C5F 
 10873      424C4F43 
 10873      4B5F5459 
 10873      504500
 10874              	.LASF231:
 10875 076d 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_POOL\000"
 10875      4D49435F 
 10875      54595045 
 10875      5F44544C 
 10875      535F504F 
 10876              	.LASF411:
 10877 0784 4F504151 		.ascii	"OPAQUE32_LEN\000"
 10877      55453332 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 285


 10877      5F4C454E 
 10877      00
 10878              	.LASF741:
 10879 0791 41455347 		.ascii	"AESGCM_KAT_FIPS_E\000"
 10879      434D5F4B 
 10879      41545F46 
 10879      4950535F 
 10879      4500
 10880              	.LASF359:
 10881 07a3 44544C53 		.ascii	"DTLS_MAJOR\000"
 10881      5F4D414A 
 10881      4F5200
 10882              	.LASF828:
 10883 07ae 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 10883      4320342E 
 10883      392E3320 
 10883      32303135 
 10883      30333033 
 10884 07e1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 10884      20726576 
 10884      6973696F 
 10884      6E203232 
 10884      31323230 
 10885 0814 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 10885      66756E63 
 10885      74696F6E 
 10885      2D736563 
 10885      74696F6E 
 10886              	.LASF580:
 10887 083c 42756666 		.ascii	"Buffers\000"
 10887      65727300 
 10888              	.LASF709:
 10889 0844 4E4F5F50 		.ascii	"NO_PASSWORD\000"
 10889      41535357 
 10889      4F524400 
 10890              	.LASF664:
 10891 0850 4D505F41 		.ascii	"MP_ADD_E\000"
 10891      44445F45 
 10891      00
 10892              	.LASF297:
 10893 0859 4D41585F 		.ascii	"MAX_SEQ_SZ\000"
 10893      5345515F 
 10893      535A00
 10894              	.LASF700:
 10895 0864 41534E5F 		.ascii	"ASN_DH_KEY_E\000"
 10895      44485F4B 
 10895      45595F45 
 10895      00
 10896              	.LASF788:
 10897 0871 776F6C66 		.ascii	"wolfSSL_DeriveTlsKeys\000"
 10897      53534C5F 
 10897      44657269 
 10897      7665546C 
 10897      734B6579 
 10898              	.LASF559:
 10899 0887 62756C6B 		.ascii	"bulk_cipher_algorithm\000"
 10899      5F636970 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 286


 10899      6865725F 
 10899      616C676F 
 10899      72697468 
 10900              	.LASF582:
 10901 089d 6F757470 		.ascii	"outputBuffer\000"
 10901      75744275 
 10901      66666572 
 10901      00
 10902              	.LASF714:
 10903 08aa 434F4D50 		.ascii	"COMPRESS_INIT_E\000"
 10903      52455353 
 10903      5F494E49 
 10903      545F4500 
 10904              	.LASF557:
 10905 08ba 626C6F63 		.ascii	"block_size\000"
 10905      6B5F7369 
 10905      7A6500
 10906              	.LASF760:
 10907 08c5 4241445F 		.ascii	"BAD_COND_E\000"
 10907      434F4E44 
 10907      5F4500
 10908              	.LASF161:
 10909 08d0 53534C5F 		.ascii	"SSL_ERROR_SSL\000"
 10909      4552524F 
 10909      525F5353 
 10909      4C00
 10910              	.LASF444:
 10911 08de 44455333 		.ascii	"DES3_KEY_SIZE\000"
 10911      5F4B4559 
 10911      5F53495A 
 10911      4500
 10912              	.LASF478:
 10913 08ec 45434448 		.ascii	"ECDHE_SIZE\000"
 10913      455F5349 
 10913      5A4500
 10914              	.LASF412:
 10915 08f7 434F4D50 		.ascii	"COMP_LEN\000"
 10915      5F4C454E 
 10915      00
 10916              	.LASF680:
 10917 0900 43415F54 		.ascii	"CA_TRUE_E\000"
 10917      5255455F 
 10917      4500
 10918              	.LASF375:
 10919 090a 46494E49 		.ascii	"FINISHED_SZ\000"
 10919      53484544 
 10919      5F535A00 
 10920              	.LASF22:
 10921 0916 63757253 		.ascii	"curSize\000"
 10921      697A6500 
 10922              	.LASF779:
 10923 091e 6C61624C 		.ascii	"labLen\000"
 10923      656E00
 10924              	.LASF337:
 10925 0925 4F504144 		.ascii	"OPAD\000"
 10925      00
 10926              	.LASF734:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 287


 10927 092a 494E5F43 		.ascii	"IN_CORE_FIPS_E\000"
 10927      4F52455F 
 10927      46495053 
 10927      5F4500
 10928              	.LASF105:
 10929 0939 6F637370 		.ascii	"ocspStaplingEnabled\000"
 10929      53746170 
 10929      6C696E67 
 10929      456E6162 
 10929      6C656400 
 10930              	.LASF639:
 10931 094d 676F745F 		.ascii	"got_server_key_exchange\000"
 10931      73657276 
 10931      65725F6B 
 10931      65795F65 
 10931      78636861 
 10932              	.LASF371:
 10933 0965 48454C4C 		.ascii	"HELLO_EXT_SIG_ALGO\000"
 10933      4F5F4558 
 10933      545F5349 
 10933      475F414C 
 10933      474F00
 10934              	.LASF687:
 10935 0978 41534E5F 		.ascii	"ASN_TAG_NULL_E\000"
 10935      5441475F 
 10935      4E554C4C 
 10935      5F4500
 10936              	.LASF577:
 10937 0987 73657475 		.ascii	"setup\000"
 10937      7000
 10938              	.LASF773:
 10939 098d 70726576 		.ascii	"previous\000"
 10939      696F7573 
 10939      00
 10940              	.LASF820:
 10941 0996 49734174 		.ascii	"IsAtLeastTLSv1_2\000"
 10941      4C656173 
 10941      74544C53 
 10941      76315F32 
 10941      00
 10942              	.LASF523:
 10943 09a7 69737375 		.ascii	"issuerKeyHash\000"
 10943      65724B65 
 10943      79486173 
 10943      6800
 10944              	.LASF645:
 10945 09b5 676F745F 		.ascii	"got_change_cipher\000"
 10945      6368616E 
 10945      67655F63 
 10945      69706865 
 10945      7200
 10946              	.LASF819:
 10947 09c7 77635F53 		.ascii	"wc_Sha256GetHash\000"
 10947      68613235 
 10947      36476574 
 10947      48617368 
 10947      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 288


 10948              	.LASF322:
 10949 09d8 74797065 		.ascii	"type\000"
 10949      00
 10950              	.LASF338:
 10951 09dd 53484135 		.ascii	"SHA512\000"
 10951      313200
 10952              	.LASF80:
 10953 09e4 64657243 		.ascii	"derCert\000"
 10953      65727400 
 10954              	.LASF755:
 10955 09ec 414B4944 		.ascii	"AKID_E\000"
 10955      5F4500
 10956              	.LASF423:
 10957 09f3 48454C4C 		.ascii	"HELLO_EXT_LEN\000"
 10957      4F5F4558 
 10957      545F4C45 
 10957      4E00
 10958              	.LASF541:
 10959 0a01 4B657973 		.ascii	"Keys\000"
 10959      00
 10960              	.LASF608:
 10961 0a06 7573696E 		.ascii	"usingNonblock\000"
 10961      674E6F6E 
 10961      626C6F63 
 10961      6B00
 10962              	.LASF67:
 10963 0a14 574F4C46 		.ascii	"WOLFSSL_X509\000"
 10963      53534C5F 
 10963      58353039 
 10963      00
 10964              	.LASF754:
 10965 0a21 534B4944 		.ascii	"SKID_E\000"
 10965      5F4500
 10966              	.LASF618:
 10967 0a28 61636365 		.ascii	"acceptState\000"
 10967      70745374 
 10967      61746500 
 10968              	.LASF256:
 10969 0a34 53484132 		.ascii	"SHA256_DIGEST_SIZE\000"
 10969      35365F44 
 10969      49474553 
 10969      545F5349 
 10969      5A4500
 10970              	.LASF285:
 10971 0a47 41534E5F 		.ascii	"ASN_BOOL_SIZE\000"
 10971      424F4F4C 
 10971      5F53495A 
 10971      4500
 10972              	.LASF552:
 10973 0a55 656E6372 		.ascii	"encryptionOn\000"
 10973      79707469 
 10973      6F6E4F6E 
 10973      00
 10974              	.LASF749:
 10975 0a62 5352505F 		.ascii	"SRP_VERIFY_E\000"
 10975      56455249 
 10975      46595F45 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 289


 10975      00
 10976              	.LASF476:
 10977 0a6f 52414242 		.ascii	"RABBIT_IV_SIZE\000"
 10977      49545F49 
 10977      565F5349 
 10977      5A4500
 10978              	.LASF633:
 10979 0a7e 676F745F 		.ascii	"got_client_hello\000"
 10979      636C6965 
 10979      6E745F68 
 10979      656C6C6F 
 10979      00
 10980              	.LASF542:
 10981 0a8f 636C6965 		.ascii	"client_write_MAC_secret\000"
 10981      6E745F77 
 10981      72697465 
 10981      5F4D4143 
 10981      5F736563 
 10982              	.LASF76:
 10983 0aa7 6E6F7441 		.ascii	"notAfter\000"
 10983      66746572 
 10983      00
 10984              	.LASF259:
 10985 0ab0 62756666 		.ascii	"buffLen\000"
 10985      4C656E00 
 10986              	.LASF570:
 10987 0ab8 73686132 		.ascii	"sha224_mac\000"
 10987      32345F6D 
 10987      616300
 10988              	.LASF572:
 10989 0ac3 73686133 		.ascii	"sha384_mac\000"
 10989      38345F6D 
 10989      616300
 10990              	.LASF499:
 10991 0ace 48415348 		.ascii	"HASH_SIG_SIZE\000"
 10991      5F534947 
 10991      5F53495A 
 10991      4500
 10992              	.LASF154:
 10993 0adc 53534C5F 		.ascii	"SSL_ERROR_WANT_READ\000"
 10993      4552524F 
 10993      525F5741 
 10993      4E545F52 
 10993      45414400 
 10994              	.LASF813:
 10995 0af0 6D617374 		.ascii	"master_label\000"
 10995      65725F6C 
 10995      6162656C 
 10995      00
 10996              	.LASF390:
 10997 0afd 50454D5F 		.ascii	"PEM_LINE_LEN\000"
 10997      4C494E45 
 10997      5F4C454E 
 10997      00
 10998              	.LASF554:
 10999 0b0a 43697068 		.ascii	"CipherSpecs\000"
 10999      65725370 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 290


 10999      65637300 
 11000              	.LASF787:
 11001 0b16 4275696C 		.ascii	"BuildTlsFinished\000"
 11001      64546C73 
 11001      46696E69 
 11001      73686564 
 11001      00
 11002              	.LASF202:
 11003 0b27 44594E41 		.ascii	"DYNAMIC_TYPE_SUBJECT_CN\000"
 11003      4D49435F 
 11003      54595045 
 11003      5F535542 
 11003      4A454354 
 11004              	.LASF198:
 11005 0b3f 44594E41 		.ascii	"DYNAMIC_TYPE_CA\000"
 11005      4D49435F 
 11005      54595045 
 11005      5F434100 
 11006              	.LASF348:
 11007 0b4f 6F706164 		.ascii	"opad\000"
 11007      00
 11008              	.LASF727:
 11009 0b54 504B4353 		.ascii	"PKCS7_RECIP_E\000"
 11009      375F5245 
 11009      4349505F 
 11009      4500
 11010              	.LASF129:
 11011 0b62 53534C5F 		.ascii	"SSL_SHUTDOWN_NOT_DONE\000"
 11011      53485554 
 11011      444F574E 
 11011      5F4E4F54 
 11011      5F444F4E 
 11012              	.LASF482:
 11013 0b78 434C4945 		.ascii	"CLIENT_HELLO_FIRST\000"
 11013      4E545F48 
 11013      454C4C4F 
 11013      5F464952 
 11013      535400
 11014              	.LASF167:
 11015 0b8b 53534C5F 		.ascii	"SSL_R_TLSV1_ALERT_UNKNOWN_CA\000"
 11015      525F544C 
 11015      5356315F 
 11015      414C4552 
 11015      545F554E 
 11016              	.LASF751:
 11017 0ba8 41534E5F 		.ascii	"ASN_NO_SKID\000"
 11017      4E4F5F53 
 11017      4B494400 
 11018              	.LASF689:
 11019 0bb4 41534E5F 		.ascii	"ASN_BITSTR_E\000"
 11019      42495453 
 11019      54525F45 
 11019      00
 11020              	.LASF739:
 11021 0bc1 44524247 		.ascii	"DRBG_KAT_FIPS_E\000"
 11021      5F4B4154 
 11021      5F464950 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 291


 11021      535F4500 
 11022              	.LASF653:
 11023 0bd1 4F50454E 		.ascii	"OPEN_RAN_E\000"
 11023      5F52414E 
 11023      5F4500
 11024              	.LASF109:
 11025 0bdc 574F4C46 		.ascii	"WOLFSSL_X509_STORE\000"
 11025      53534C5F 
 11025      58353039 
 11025      5F53544F 
 11025      524500
 11026              	.LASF135:
 11027 0bef 53534C5F 		.ascii	"SSL_BAD_FILE\000"
 11027      4241445F 
 11027      46494C45 
 11027      00
 11028              	.LASF37:
 11029 0bfc 73657276 		.ascii	"serverID\000"
 11029      65724944 
 11029      00
 11030              	.LASF209:
 11031 0c05 44594E41 		.ascii	"DYNAMIC_TYPE_OUT_BUFFER\000"
 11031      4D49435F 
 11031      54595045 
 11031      5F4F5554 
 11031      5F425546 
 11032              	.LASF573:
 11033 0c1d 73686135 		.ascii	"sha512_mac\000"
 11033      31325F6D 
 11033      616300
 11034              	.LASF753:
 11035 0c28 41534E5F 		.ascii	"ASN_NO_KEYUSAGE\000"
 11035      4E4F5F4B 
 11035      45595553 
 11035      41474500 
 11036              	.LASF261:
 11037 0c38 68694C65 		.ascii	"hiLen\000"
 11037      6E00
 11038              	.LASF575:
 11039 0c3e 626C616B 		.ascii	"blake2b_mac\000"
 11039      6532625F 
 11039      6D616300 
 11040              	.LASF696:
 11041 0c4a 41534E5F 		.ascii	"ASN_INPUT_E\000"
 11041      494E5055 
 11041      545F4500 
 11042              	.LASF613:
 11043 0c56 73657276 		.ascii	"serverState\000"
 11043      65725374 
 11043      61746500 
 11044              	.LASF370:
 11045 0c62 5A4C4942 		.ascii	"ZLIB_COMPRESSION\000"
 11045      5F434F4D 
 11045      50524553 
 11045      53494F4E 
 11045      00
 11046              	.LASF212:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 292


 11047 0c73 44594E41 		.ascii	"DYNAMIC_TYPE_DH\000"
 11047      4D49435F 
 11047      54595045 
 11047      5F444800 
 11048              	.LASF85:
 11049 0c83 574F4C46 		.ascii	"WOLFSSL_X509_NAME\000"
 11049      53534C5F 
 11049      58353039 
 11049      5F4E414D 
 11049      4500
 11050              	.LASF260:
 11051 0c95 6C6F4C65 		.ascii	"loLen\000"
 11051      6E00
 11052              	.LASF276:
 11053 0c9b 41465445 		.ascii	"AFTER\000"
 11053      5200
 11054              	.LASF164:
 11055 0ca1 53534C5F 		.ascii	"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER\000"
 11055      4D4F4445 
 11055      5F414343 
 11055      4550545F 
 11055      4D4F5649 
 11056              	.LASF287:
 11057 0cc5 41534E5F 		.ascii	"ASN_ECC_CONTEXT_SZ\000"
 11057      4543435F 
 11057      434F4E54 
 11057      4558545F 
 11057      535A00
 11058              	.LASF64:
 11059 0cd8 6D696E44 		.ascii	"minDowngrade\000"
 11059      6F776E67 
 11059      72616465 
 11059      00
 11060              	.LASF137:
 11061 0ce5 53534C5F 		.ascii	"SSL_UNKNOWN\000"
 11061      554E4B4E 
 11061      4F574E00 
 11062              	.LASF672:
 11063 0cf1 5253415F 		.ascii	"RSA_WRONG_TYPE_E\000"
 11063      57524F4E 
 11063      475F5459 
 11063      50455F45 
 11063      00
 11064              	.LASF766:
 11065 0d02 7265734C 		.ascii	"resLen\000"
 11065      656E00
 11066              	.LASF407:
 11067 0d09 454E554D 		.ascii	"ENUM_LEN\000"
 11067      5F4C454E 
 11067      00
 11068              	.LASF201:
 11069 0d12 44594E41 		.ascii	"DYNAMIC_TYPE_FILE\000"
 11069      4D49435F 
 11069      54595045 
 11069      5F46494C 
 11069      4500
 11070              	.LASF77:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 293


 11071 0d24 7369674F 		.ascii	"sigOID\000"
 11071      494400
 11072              	.LASF73:
 11073 0d2b 6E6F7442 		.ascii	"notBeforeSz\000"
 11073      65666F72 
 11073      65537A00 
 11074              	.LASF400:
 11075 0d37 52414E5F 		.ascii	"RAN_LEN\000"
 11075      4C454E00 
 11076              	.LASF513:
 11077 0d3f 62756666 		.ascii	"bufferStatic\000"
 11077      65725374 
 11077      61746963 
 11077      00
 11078              	.LASF396:
 11079 0d4c 56455249 		.ascii	"VERIFY_HEADER\000"
 11079      46595F48 
 11079      45414445 
 11079      5200
 11080              	.LASF92:
 11081 0d5a 6F637370 		.ascii	"ocspOverrideURL\000"
 11081      4F766572 
 11081      72696465 
 11081      55524C00 
 11082              	.LASF33:
 11083 0d6a 73657373 		.ascii	"sessionID\000"
 11083      696F6E49 
 11083      4400
 11084              	.LASF637:
 11085 0d74 676F745F 		.ascii	"got_certificate\000"
 11085      63657274 
 11085      69666963 
 11085      61746500 
 11086              	.LASF733:
 11087 0d84 4C454E47 		.ascii	"LENGTH_ONLY_E\000"
 11087      54485F4F 
 11087      4E4C595F 
 11087      4500
 11088              	.LASF344:
 11089 0d92 48617368 		.ascii	"Hash\000"
 11089      00
 11090              	.LASF268:
 11091 0d97 73746174 		.ascii	"status\000"
 11091      757300
 11092              	.LASF587:
 11093 0d9e 77654F77 		.ascii	"weOwnCert\000"
 11093      6E436572 
 11093      7400
 11094              	.LASF805:
 11095 0da8 544C535F 		.ascii	"TLS_hmac\000"
 11095      686D6163 
 11095      00
 11096              	.LASF175:
 11097 0db1 43624D69 		.ascii	"CbMissingCRL\000"
 11097      7373696E 
 11097      6743524C 
 11097      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 294


 11098              	.LASF20:
 11099 0dbe 74696D65 		.ascii	"timeout\000"
 11099      6F757400 
 11100              	.LASF91:
 11101 0dc6 6F637370 		.ascii	"ocsp\000"
 11101      00
 11102              	.LASF385:
 11103 0dcb 4D41585F 		.ascii	"MAX_PAD_SIZE\000"
 11103      5041445F 
 11103      53495A45 
 11103      00
 11104              	.LASF54:
 11105 0dd8 73656E64 		.ascii	"sendVerify\000"
 11105      56657269 
 11105      667900
 11106              	.LASF349:
 11107 0de3 696E6E65 		.ascii	"innerHash\000"
 11107      72486173 
 11107      6800
 11108              	.LASF336:
 11109 0ded 49504144 		.ascii	"IPAD\000"
 11109      00
 11110              	.LASF812:
 11111 0df2 746C735F 		.ascii	"tls_server\000"
 11111      73657276 
 11111      657200
 11112              	.LASF229:
 11113 0dfd 44594E41 		.ascii	"DYNAMIC_TYPE_RNG\000"
 11113      4D49435F 
 11113      54595045 
 11113      5F524E47 
 11113      00
 11114              	.LASF610:
 11115 0e0e 70726F63 		.ascii	"processReply\000"
 11115      65737352 
 11115      65706C79 
 11115      00
 11116              	.LASF722:
 11117 0e1b 41534E5F 		.ascii	"ASN_OCSP_CONFIRM_E\000"
 11117      4F435350 
 11117      5F434F4E 
 11117      4649524D 
 11117      5F4500
 11118              	.LASF490:
 11119 0e2e 4D41585F 		.ascii	"MAX_X509_SIZE\000"
 11119      58353039 
 11119      5F53495A 
 11119      4500
 11120              	.LASF550:
 11121 0e3c 656E6372 		.ascii	"encryptSz\000"
 11121      79707453 
 11121      7A00
 11122              	.LASF636:
 11123 0e46 676F745F 		.ascii	"got_session_ticket\000"
 11123      73657373 
 11123      696F6E5F 
 11123      7469636B 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 295


 11123      657400
 11124              	.LASF671:
 11125 0e59 4D454D4F 		.ascii	"MEMORY_E\000"
 11125      52595F45 
 11125      00
 11126              	.LASF217:
 11127 0e62 44594E41 		.ascii	"DYNAMIC_TYPE_OPENSSL\000"
 11127      4D49435F 
 11127      54595045 
 11127      5F4F5045 
 11127      4E53534C 
 11128              	.LASF591:
 11129 0e77 4F707469 		.ascii	"Options\000"
 11129      6F6E7300 
 11130              	.LASF520:
 11131 0e7f 73696741 		.ascii	"sigAlgo\000"
 11131      6C676F00 
 11132              	.LASF607:
 11133 0e87 63657274 		.ascii	"certOnly\000"
 11133      4F6E6C79 
 11133      00
 11134              	.LASF614:
 11135 0e90 636C6965 		.ascii	"clientState\000"
 11135      6E745374 
 11135      61746500 
 11136              	.LASF756:
 11137 0e9c 4B455955 		.ascii	"KEYUSAGE_E\000"
 11137      53414745 
 11137      5F4500
 11138              	.LASF4:
 11139 0ea7 494F4342 		.ascii	"IOCB_WriteCtx\000"
 11139      5F577269 
 11139      74654374 
 11139      7800
 11140              	.LASF279:
 11141 0eb5 4D41585F 		.ascii	"MAX_IV_SIZE\000"
 11141      49565F53 
 11141      495A4500 
 11142              	.LASF232:
 11143 0ec1 44594E41 		.ascii	"DYNAMIC_TYPE_SOCKADDR\000"
 11143      4D49435F 
 11143      54595045 
 11143      5F534F43 
 11143      4B414444 
 11144              	.LASF57:
 11145 0ed7 68617665 		.ascii	"haveDH\000"
 11145      444800
 11146              	.LASF784:
 11147 0ede 73656E64 		.ascii	"sender\000"
 11147      657200
 11148              	.LASF579:
 11149 0ee5 686D6163 		.ascii	"hmacfp\000"
 11149      667000
 11150              	.LASF748:
 11151 0eec 5352505F 		.ascii	"SRP_CALL_ORDER_E\000"
 11151      43414C4C 
 11151      5F4F5244 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 296


 11151      45525F45 
 11151      00
 11152              	.LASF668:
 11153 0efd 4D505F49 		.ascii	"MP_INVMOD_E\000"
 11153      4E564D4F 
 11153      445F4500 
 11154              	.LASF82:
 11155 0f09 616C744E 		.ascii	"altNamesNext\000"
 11155      616D6573 
 11155      4E657874 
 11155      00
 11156              	.LASF588:
 11157 0f16 77654F77 		.ascii	"weOwnCertChain\000"
 11157      6E436572 
 11157      74436861 
 11157      696E00
 11158              	.LASF216:
 11159 0f25 44594E41 		.ascii	"DYNAMIC_TYPE_WRITEV\000"
 11159      4D49435F 
 11159      54595045 
 11159      5F575249 
 11159      54455600 
 11160              	.LASF401:
 11161 0f39 53454544 		.ascii	"SEED_LEN\000"
 11161      5F4C454E 
 11161      00
 11162              	.LASF685:
 11163 0f42 41534E5F 		.ascii	"ASN_RSA_KEY_E\000"
 11163      5253415F 
 11163      4B45595F 
 11163      4500
 11164              	.LASF446:
 11165 0f50 4145535F 		.ascii	"AES_256_KEY_SIZE\000"
 11165      3235365F 
 11165      4B45595F 
 11165      53495A45 
 11165      00
 11166              	.LASF404:
 11167 0f61 4D41585F 		.ascii	"MAX_COOKIE_LEN\000"
 11167      434F4F4B 
 11167      49455F4C 
 11167      454E00
 11168              	.LASF438:
 11169 0f70 4D41585F 		.ascii	"MAX_PRF_LABSEED\000"
 11169      5052465F 
 11169      4C414253 
 11169      45454400 
 11170              	.LASF586:
 11171 0f80 706C6169 		.ascii	"plainSz\000"
 11171      6E537A00 
 11172              	.LASF522:
 11173 0f88 69737375 		.ascii	"issuerHash\000"
 11173      65724861 
 11173      736800
 11174              	.LASF183:
 11175 0f93 574F4C46 		.ascii	"WOLFSSL_AEAD_TYPE\000"
 11175      53534C5F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 297


 11175      41454144 
 11175      5F545950 
 11175      4500
 11176              	.LASF648:
 11177 0fa5 63657274 		.ascii	"certHashes\000"
 11177      48617368 
 11177      657300
 11178              	.LASF88:
 11179 0fb0 64796E61 		.ascii	"dynamicName\000"
 11179      6D69634E 
 11179      616D6500 
 11180              	.LASF253:
 11181 0fbc 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_BUFFER\000"
 11181      4D49435F 
 11181      54595045 
 11181      5F44544C 
 11181      535F4255 
 11182              	.LASF69:
 11183 0fd5 7375626A 		.ascii	"subject\000"
 11183      65637400 
 11184              	.LASF203:
 11185 0fdd 44594E41 		.ascii	"DYNAMIC_TYPE_PUBLIC_KEY\000"
 11185      4D49435F 
 11185      54595045 
 11185      5F505542 
 11185      4C49435F 
 11186              	.LASF347:
 11187 0ff5 69706164 		.ascii	"ipad\000"
 11187      00
 11188              	.LASF726:
 11189 0ffa 504B4353 		.ascii	"PKCS7_OID_E\000"
 11189      375F4F49 
 11189      445F4500 
 11190              	.LASF343:
 11191 1006 73686132 		.ascii	"sha256\000"
 11191      353600
 11192              	.LASF282:
 11193 100d 504B4353 		.ascii	"PKCS5v2\000"
 11193      35763200 
 11194              	.LASF335:
 11195 1015 484D4143 		.ascii	"HMAC_FIPS_MIN_KEY\000"
 11195      5F464950 
 11195      535F4D49 
 11195      4E5F4B45 
 11195      5900
 11196              	.LASF638:
 11197 1027 676F745F 		.ascii	"got_certificate_status\000"
 11197      63657274 
 11197      69666963 
 11197      6174655F 
 11197      73746174 
 11198              	.LASF150:
 11199 103e 53534C5F 		.ascii	"SSL_SESS_CACHE_SERVER\000"
 11199      53455353 
 11199      5F434143 
 11199      48455F53 
 11199      45525645 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 298


 11200              	.LASF17:
 11201 1054 6572726F 		.ascii	"error\000"
 11201      7200
 11202              	.LASF192:
 11203 105a 73697A65 		.ascii	"size_t\000"
 11203      5F7400
 11204              	.LASF248:
 11205 1061 44594E41 		.ascii	"DYNAMIC_TYPE_X509_EXT\000"
 11205      4D49435F 
 11205      54595045 
 11205      5F583530 
 11205      395F4558 
 11206              	.LASF473:
 11207 1077 48435F31 		.ascii	"HC_128_KEY_SIZE\000"
 11207      32385F4B 
 11207      45595F53 
 11207      495A4500 
 11208              	.LASF226:
 11209 1087 44594E41 		.ascii	"DYNAMIC_TYPE_ALTNAME\000"
 11209      4D49435F 
 11209      54595045 
 11209      5F414C54 
 11209      4E414D45 
 11210              	.LASF126:
 11211 109c 53534C5F 		.ascii	"SSL_ERROR_NONE\000"
 11211      4552524F 
 11211      525F4E4F 
 11211      4E4500
 11212              	.LASF325:
 11213 10ab 6B65794F 		.ascii	"keyOID\000"
 11213      494400
 11214              	.LASF51:
 11215 10b2 6661696C 		.ascii	"failNoCertxPSK\000"
 11215      4E6F4365 
 11215      72747850 
 11215      534B00
 11216              	.LASF425:
 11217 10c1 48454C4C 		.ascii	"HELLO_EXT_SIGALGO_MAX\000"
 11217      4F5F4558 
 11217      545F5349 
 11217      47414C47 
 11217      4F5F4D41 
 11218              	.LASF45:
 11219 10d7 63657274 		.ascii	"certificate\000"
 11219      69666963 
 11219      61746500 
 11220              	.LASF686:
 11221 10e3 41534E5F 		.ascii	"ASN_OBJECT_ID_E\000"
 11221      4F424A45 
 11221      43545F49 
 11221      445F4500 
 11222              	.LASF99:
 11223 10f3 63726C45 		.ascii	"crlEnabled\000"
 11223      6E61626C 
 11223      656400
 11224              	.LASF647:
 11225 10fe 76657269 		.ascii	"verifyHashes\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 299


 11225      66794861 
 11225      73686573 
 11225      00
 11226              	.LASF767:
 11227 110b 73656372 		.ascii	"secret\000"
 11227      657400
 11228              	.LASF278:
 11229 1112 4D41585F 		.ascii	"MAX_SALT_SIZE\000"
 11229      53414C54 
 11229      5F53495A 
 11229      4500
 11230              	.LASF207:
 11231 1120 44594E41 		.ascii	"DYNAMIC_TYPE_RSA\000"
 11231      4D49435F 
 11231      54595045 
 11231      5F525341 
 11231      00
 11232              	.LASF488:
 11233 1131 4D41585F 		.ascii	"MAX_PSK_KEY_LEN\000"
 11233      50534B5F 
 11233      4B45595F 
 11233      4C454E00 
 11234              	.LASF388:
 11235 1141 434F4D50 		.ascii	"COMPRESS_UPPER\000"
 11235      52455353 
 11235      5F555050 
 11235      455200
 11236              	.LASF121:
 11237 1150 65785F64 		.ascii	"ex_data\000"
 11237      61746100 
 11238              	.LASF6:
 11239 1158 76657269 		.ascii	"verifyCallback\000"
 11239      66794361 
 11239      6C6C6261 
 11239      636B00
 11240              	.LASF243:
 11241 1167 44594E41 		.ascii	"DYNAMIC_TYPE_HASHES\000"
 11241      4D49435F 
 11241      54595045 
 11241      5F484153 
 11241      48455300 
 11242              	.LASF703:
 11243 117b 4543435F 		.ascii	"ECC_BAD_ARG_E\000"
 11243      4241445F 
 11243      4152475F 
 11243      4500
 11244              	.LASF745:
 11245 1189 49535F50 		.ascii	"IS_POINT_E\000"
 11245      4F494E54 
 11245      5F4500
 11246              	.LASF419:
 11247 1194 48494E54 		.ascii	"HINT_LEN_SZ\000"
 11247      5F4C454E 
 11247      5F535A00 
 11248              	.LASF631:
 11249 11a0 4D736773 		.ascii	"MsgsReceived\000"
 11249      52656365 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 300


 11249      69766564 
 11249      00
 11250              	.LASF53:
 11251 11ad 73657373 		.ascii	"sessionCacheFlushOff\000"
 11251      696F6E43 
 11251      61636865 
 11251      466C7573 
 11251      684F6666 
 11252              	.LASF548:
 11253 11c2 70656572 		.ascii	"peer_sequence_number\000"
 11253      5F736571 
 11253      75656E63 
 11253      655F6E75 
 11253      6D626572 
 11254              	.LASF597:
 11255 11d7 6973436C 		.ascii	"isClosed\000"
 11255      6F736564 
 11255      00
 11256              	.LASF508:
 11257 11e0 64796E54 		.ascii	"dynType\000"
 11257      79706500 
 11258              	.LASF797:
 11259 11e8 776F6C66 		.ascii	"wolfSSL_make_eap_keys\000"
 11259      53534C5F 
 11259      6D616B65 
 11259      5F656170 
 11259      5F6B6579 
 11260              	.LASF809:
 11261 11fe 636C6965 		.ascii	"client\000"
 11261      6E7400
 11262              	.LASF40:
 11263 1205 646F776E 		.ascii	"downgrade\000"
 11263      67726164 
 11263      6500
 11264              	.LASF712:
 11265 120f 4145535F 		.ascii	"AES_CCM_AUTH_E\000"
 11265      43434D5F 
 11265      41555448 
 11265      5F4500
 11266              	.LASF528:
 11267 121e 43524C5F 		.ascii	"CRL_Entry\000"
 11267      456E7472 
 11267      7900
 11268              	.LASF48:
 11269 1228 76657269 		.ascii	"verifyPeer\000"
 11269      66795065 
 11269      657200
 11270              	.LASF252:
 11271 1233 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_FRAG\000"
 11271      4D49435F 
 11271      54595045 
 11271      5F44544C 
 11271      535F4652 
 11272              	.LASF481:
 11273 124a 4D41585F 		.ascii	"MAX_CERT_VERIFY_SZ\000"
 11273      43455254 
 11273      5F564552 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 301


 11273      4946595F 
 11273      535A00
 11274              	.LASF81:
 11275 125d 616C744E 		.ascii	"altNames\000"
 11275      616D6573 
 11275      00
 11276              	.LASF306:
 11277 1266 4D41585F 		.ascii	"MAX_NTRU_ENC_SZ\000"
 11277      4E545255 
 11277      5F454E43 
 11277      5F535A00 
 11278              	.LASF112:
 11279 1276 636F6465 		.ascii	"code\000"
 11279      00
 11280              	.LASF422:
 11281 127b 48454C4C 		.ascii	"HELLO_EXT_SZ\000"
 11281      4F5F4558 
 11281      545F535A 
 11281      00
 11282              	.LASF274:
 11283 1288 45585445 		.ascii	"EXTERNAL_SERIAL_SIZE\000"
 11283      524E414C 
 11283      5F534552 
 11283      49414C5F 
 11283      53495A45 
 11284              	.LASF132:
 11285 129d 53534C5F 		.ascii	"SSL_BAD_STAT\000"
 11285      4241445F 
 11285      53544154 
 11285      00
 11286              	.LASF360:
 11287 12aa 44544C53 		.ascii	"DTLS_MINOR\000"
 11287      5F4D494E 
 11287      4F5200
 11288              	.LASF646:
 11289 12b5 48535F48 		.ascii	"HS_Hashes\000"
 11289      61736865 
 11289      7300
 11290              	.LASF667:
 11291 12bf 4D505F4D 		.ascii	"MP_MOD_E\000"
 11291      4F445F45 
 11291      00
 11292              	.LASF44:
 11293 12c8 72656643 		.ascii	"refCount\000"
 11293      6F756E74 
 11293      00
 11294              	.LASF493:
 11295 12d1 46494C45 		.ascii	"FILE_BUFFER_SIZE\000"
 11295      5F425546 
 11295      4645525F 
 11295      53495A45 
 11295      00
 11296              	.LASF658:
 11297 12e2 4241445F 		.ascii	"BAD_MUTEX_E\000"
 11297      4D555445 
 11297      585F4500 
 11298              	.LASF622:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 302


 11299 12ee 70656E64 		.ascii	"pendingMsgSz\000"
 11299      696E674D 
 11299      7367537A 
 11299      00
 11300              	.LASF531:
 11301 12fb 6C617374 		.ascii	"lastDateFormat\000"
 11301      44617465 
 11301      466F726D 
 11301      617400
 11302              	.LASF786:
 11303 130a 68617368 		.ascii	"hashSz\000"
 11303      537A00
 11304              	.LASF492:
 11305 1311 4D41585F 		.ascii	"MAX_FILENAME_SZ\000"
 11305      46494C45 
 11305      4E414D45 
 11305      5F535A00 
 11306              	.LASF538:
 11307 1321 63726C4C 		.ascii	"crlList\000"
 11307      69737400 
 11308              	.LASF679:
 11309 1329 49535355 		.ascii	"ISSUER_E\000"
 11309      45525F45 
 11309      00
 11310              	.LASF18:
 11311 1332 72666C61 		.ascii	"rflags\000"
 11311      677300
 11312              	.LASF603:
 11313 1339 68617665 		.ascii	"havePeerVerify\000"
 11313      50656572 
 11313      56657269 
 11313      667900
 11314              	.LASF406:
 11315 1348 53554954 		.ascii	"SUITE_LEN\000"
 11315      455F4C45 
 11315      4E00
 11316              	.LASF477:
 11317 1352 4556505F 		.ascii	"EVP_SALT_SIZE\000"
 11317      53414C54 
 11317      5F53495A 
 11317      4500
 11318              	.LASF89:
 11319 1360 574F4C46 		.ascii	"WOLFSSL_CERT_MANAGER\000"
 11319      53534C5F 
 11319      43455254 
 11319      5F4D414E 
 11319      41474552 
 11320              	.LASF133:
 11321 1375 53534C5F 		.ascii	"SSL_BAD_PATH\000"
 11321      4241445F 
 11321      50415448 
 11321      00
 11322              	.LASF284:
 11323 1382 4D41585F 		.ascii	"MAX_UNICODE_SZ\000"
 11323      554E4943 
 11323      4F44455F 
 11323      535A00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 303


 11324              	.LASF652:
 11325 1391 4D41585F 		.ascii	"MAX_CODE_E\000"
 11325      434F4445 
 11325      5F4500
 11326              	.LASF384:
 11327 139c 5041445F 		.ascii	"PAD_SHA\000"
 11327      53484100 
 11328              	.LASF258:
 11329 13a4 53686132 		.ascii	"Sha256\000"
 11329      353600
 11330              	.LASF111:
 11331 13ab 574F4C46 		.ascii	"WOLFSSL_ALERT\000"
 11331      53534C5F 
 11331      414C4552 
 11331      5400
 11332              	.LASF409:
 11333 13b9 4F504151 		.ascii	"OPAQUE16_LEN\000"
 11333      55453136 
 11333      5F4C454E 
 11333      00
 11334              	.LASF290:
 11335 13c6 4453415F 		.ascii	"DSA_INTS\000"
 11335      494E5453 
 11335      00
 11336              	.LASF185:
 11337 13cf 48616E64 		.ascii	"HandShakeDoneCb\000"
 11337      5368616B 
 11337      65446F6E 
 11337      65436200 
 11338              	.LASF494:
 11339 13df 4D41585F 		.ascii	"MAX_NTRU_PUB_KEY_SZ\000"
 11339      4E545255 
 11339      5F505542 
 11339      5F4B4559 
 11339      5F535A00 
 11340              	.LASF457:
 11341 13f3 41455347 		.ascii	"AESGCM_EXP_IV_SZ\000"
 11341      434D5F45 
 11341      58505F49 
 11341      565F535A 
 11341      00
 11342              	.LASF602:
 11343 1404 68617665 		.ascii	"havePeerCert\000"
 11343      50656572 
 11343      43657274 
 11343      00
 11344              	.LASF257:
 11345 1411 53484132 		.ascii	"SHA256_PAD_SIZE\000"
 11345      35365F50 
 11345      41445F53 
 11345      495A4500 
 11346              	.LASF95:
 11347 1421 63624D69 		.ascii	"cbMissingCRL\000"
 11347      7373696E 
 11347      6743524C 
 11347      00
 11348              	.LASF452:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 304


 11349 142e 41454144 		.ascii	"AEAD_VMAJ_OFFSET\000"
 11349      5F564D41 
 11349      4A5F4F46 
 11349      46534554 
 11349      00
 11350              	.LASF806:
 11351 143f 6D79496E 		.ascii	"myInner\000"
 11351      6E657200 
 11352              	.LASF530:
 11353 1447 6E657874 		.ascii	"nextDate\000"
 11353      44617465 
 11353      00
 11354              	.LASF56:
 11355 1450 68617665 		.ascii	"haveECC\000"
 11355      45434300 
 11356              	.LASF732:
 11357 1458 5253415F 		.ascii	"RSA_PAD_E\000"
 11357      5041445F 
 11357      4500
 11358              	.LASF244:
 11359 1462 44594E41 		.ascii	"DYNAMIC_TYPE_SRP\000"
 11359      4D49435F 
 11359      54595045 
 11359      5F535250 
 11359      00
 11360              	.LASF629:
 11361 1473 70764D61 		.ascii	"pvMajor\000"
 11361      6A6F7200 
 11362              	.LASF761:
 11363 147b 5349475F 		.ascii	"SIG_TYPE_E\000"
 11363      54595045 
 11363      5F4500
 11364              	.LASF707:
 11365 1486 4E4F545F 		.ascii	"NOT_COMPILED_IN\000"
 11365      434F4D50 
 11365      494C4544 
 11365      5F494E00 
 11366              	.LASF730:
 11367 1496 524E475F 		.ascii	"RNG_FAILURE_E\000"
 11367      4641494C 
 11367      5552455F 
 11367      4500
 11368              	.LASF353:
 11369 14a4 4D697363 		.ascii	"Misc\000"
 11369      00
 11370              	.LASF678:
 11371 14a9 5355424A 		.ascii	"SUBJECT_E\000"
 11371      4543545F 
 11371      4500
 11372              	.LASF0:
 11373 14b3 73756974 		.ascii	"suites\000"
 11373      657300
 11374              	.LASF374:
 11375 14ba 53495A45 		.ascii	"SIZEOF_SENDER\000"
 11375      4F465F53 
 11375      454E4445 
 11375      5200
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 305


 11376              	.LASF74:
 11377 14c8 6E6F7442 		.ascii	"notBefore\000"
 11377      65666F72 
 11377      6500
 11378              	.LASF200:
 11379 14d2 44594E41 		.ascii	"DYNAMIC_TYPE_KEY\000"
 11379      4D49435F 
 11379      54595045 
 11379      5F4B4559 
 11379      00
 11380              	.LASF214:
 11381 14e3 44594E41 		.ascii	"DYNAMIC_TYPE_SSL\000"
 11381      4D49435F 
 11381      54595045 
 11381      5F53534C 
 11381      00
 11382              	.LASF799:
 11383 14f4 47657453 		.ascii	"GetSEQIncrement\000"
 11383      4551496E 
 11383      6372656D 
 11383      656E7400 
 11384              	.LASF801:
 11385 1504 63333274 		.ascii	"c32toa\000"
 11385      6F6100
 11386              	.LASF644:
 11387 150b 676F745F 		.ascii	"got_finished\000"
 11387      66696E69 
 11387      73686564 
 11387      00
 11388              	.LASF12:
 11389 1518 656E6372 		.ascii	"encrypt\000"
 11389      79707400 
 11390              	.LASF669:
 11391 1520 4D505F43 		.ascii	"MP_CMP_E\000"
 11391      4D505F45 
 11391      00
 11392              	.LASF459:
 11393 1529 43484143 		.ascii	"CHACHA20_IMP_IV_SZ\000"
 11393      48413230 
 11393      5F494D50 
 11393      5F49565F 
 11393      535A00
 11394              	.LASF804:
 11395 153c 636F6E74 		.ascii	"content\000"
 11395      656E7400 
 11396              	.LASF361:
 11397 1544 44544C53 		.ascii	"DTLSv1_2_MINOR\000"
 11397      76315F32 
 11397      5F4D494E 
 11397      4F5200
 11398              	.LASF180:
 11399 1553 574F4C46 		.ascii	"WOLFSSL_CLIENT_END\000"
 11399      53534C5F 
 11399      434C4945 
 11399      4E545F45 
 11399      4E4400
 11400              	.LASF225:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 306


 11401 1566 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_ENTRY\000"
 11401      4D49435F 
 11401      54595045 
 11401      5F4F4353 
 11401      505F454E 
 11402              	.LASF286:
 11403 157e 41534E5F 		.ascii	"ASN_ECC_HEADER_SZ\000"
 11403      4543435F 
 11403      48454144 
 11403      45525F53 
 11403      5A00
 11404              	.LASF264:
 11405 1590 4F535F53 		.ascii	"OS_Seed\000"
 11405      65656400 
 11406              	.LASF379:
 11407 1598 4D41585F 		.ascii	"MAX_MTU\000"
 11407      4D545500 
 11408              	.LASF455:
 11409 15a0 41454144 		.ascii	"AEAD_AUTH_DATA_SZ\000"
 11409      5F415554 
 11409      485F4441 
 11409      54415F53 
 11409      5A00
 11410              	.LASF324:
 11411 15b2 7075624B 		.ascii	"pubKeySize\000"
 11411      65795369 
 11411      7A6500
 11412              	.LASF704:
 11413 15bd 41534E5F 		.ascii	"ASN_ECC_KEY_E\000"
 11413      4543435F 
 11413      4B45595F 
 11413      4500
 11414              	.LASF93:
 11415 15cb 6F637370 		.ascii	"ocspIOCtx\000"
 11415      494F4374 
 11415      7800
 11416              	.LASF641:
 11417 15d5 676F745F 		.ascii	"got_server_hello_done\000"
 11417      73657276 
 11417      65725F68 
 11417      656C6C6F 
 11417      5F646F6E 
 11418              	.LASF691:
 11419 15eb 41534E5F 		.ascii	"ASN_DATE_SZ_E\000"
 11419      44415445 
 11419      5F535A5F 
 11419      4500
 11420              	.LASF768:
 11421 15f9 7365634C 		.ascii	"secLen\000"
 11421      656E00
 11422              	.LASF83:
 11423 1600 64796E61 		.ascii	"dynamicMemory\000"
 11423      6D69634D 
 11423      656D6F72 
 11423      7900
 11424              	.LASF518:
 11425 160e 73657453 		.ascii	"setSuites\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 307


 11425      75697465 
 11425      7300
 11426              	.LASF334:
 11427 1618 5265766F 		.ascii	"RevokedCert\000"
 11427      6B656443 
 11427      65727400 
 11428              	.LASF547:
 11429 1624 73657276 		.ascii	"server_write_IV\000"
 11429      65725F77 
 11429      72697465 
 11429      5F495600 
 11430              	.LASF615:
 11431 1634 68616E64 		.ascii	"handShakeState\000"
 11431      5368616B 
 11431      65537461 
 11431      746500
 11432              	.LASF742:
 11433 1643 54485245 		.ascii	"THREAD_STORE_KEY_E\000"
 11433      41445F53 
 11433      544F5245 
 11433      5F4B4559 
 11433      5F4500
 11434              	.LASF825:
 11435 1656 6D656D73 		.ascii	"memset\000"
 11435      657400
 11436              	.LASF500:
 11437 165d 4E4F5F43 		.ascii	"NO_CAVIUM_DEVICE\000"
 11437      41564955 
 11437      4D5F4445 
 11437      56494345 
 11437      00
 11438              	.LASF113:
 11439 166e 6C657665 		.ascii	"level\000"
 11439      6C00
 11440              	.LASF792:
 11441 1674 746C7331 		.ascii	"tls1_2\000"
 11441      5F3200
 11442              	.LASF292:
 11443 167b 4D41585F 		.ascii	"MAX_DATE_SIZE\000"
 11443      44415445 
 11443      5F53495A 
 11443      4500
 11444              	.LASF765:
 11445 1689 72657375 		.ascii	"result\000"
 11445      6C7400
 11446              	.LASF791:
 11447 1690 6D734C65 		.ascii	"msLen\000"
 11447      6E00
 11448              	.LASF114:
 11449 1696 574F4C46 		.ascii	"WOLFSSL_ALERT_HISTORY\000"
 11449      53534C5F 
 11449      414C4552 
 11449      545F4849 
 11449      53544F52 
 11450              	.LASF634:
 11451 16ac 676F745F 		.ascii	"got_server_hello\000"
 11451      73657276 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 308


 11451      65725F68 
 11451      656C6C6F 
 11451      00
 11452              	.LASF86:
 11453 16bd 6E616D65 		.ascii	"name\000"
 11453      00
 11454              	.LASF738:
 11455 16c2 5253415F 		.ascii	"RSA_KAT_FIPS_E\000"
 11455      4B41545F 
 11455      46495053 
 11455      5F4500
 11456              	.LASF595:
 11457 16d1 64746C73 		.ascii	"dtls\000"
 11457      00
 11458              	.LASF156:
 11459 16d6 53534C5F 		.ascii	"SSL_ERROR_WANT_CONNECT\000"
 11459      4552524F 
 11459      525F5741 
 11459      4E545F43 
 11459      4F4E4E45 
 11460              	.LASF43:
 11461 16ed 636F756E 		.ascii	"countMutex\000"
 11461      744D7574 
 11461      657800
 11462              	.LASF61:
 11463 16f8 70617274 		.ascii	"partialWrite\000"
 11463      69616C57 
 11463      72697465 
 11463      00
 11464              	.LASF795:
 11465 1705 706D734C 		.ascii	"pmsLen\000"
 11465      656E00
 11466              	.LASF743:
 11467 170c 54485245 		.ascii	"THREAD_STORE_SET_E\000"
 11467      41445F53 
 11467      544F5245 
 11467      5F534554 
 11467      5F4500
 11468              	.LASF537:
 11469 171f 574F4C46 		.ascii	"WOLFSSL_CRL\000"
 11469      53534C5F 
 11469      43524C00 
 11470              	.LASF440:
 11471 172b 4D41585F 		.ascii	"MAX_REQUEST_SZ\000"
 11471      52455155 
 11471      4553545F 
 11471      535A00
 11472              	.LASF442:
 11473 173a 5243345F 		.ascii	"RC4_KEY_SIZE\000"
 11473      4B45595F 
 11473      53495A45 
 11473      00
 11474              	.LASF737:
 11475 1747 484D4143 		.ascii	"HMAC_KAT_FIPS_E\000"
 11475      5F4B4154 
 11475      5F464950 
 11475      535F4500 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 309


 11476              	.LASF463:
 11477 1757 4145535F 		.ascii	"AES_CCM_16_AUTH_SZ\000"
 11477      43434D5F 
 11477      31365F41 
 11477      5554485F 
 11477      535A00
 11478              	.LASF736:
 11479 176a 44455333 		.ascii	"DES3_KAT_FIPS_E\000"
 11479      5F4B4154 
 11479      5F464950 
 11479      535F4500 
 11480              	.LASF543:
 11481 177a 73657276 		.ascii	"server_write_MAC_secret\000"
 11481      65725F77 
 11481      72697465 
 11481      5F4D4143 
 11481      5F736563 
 11482              	.LASF583:
 11483 1792 646F6D61 		.ascii	"domainName\000"
 11483      696E4E61 
 11483      6D6500
 11484              	.LASF327:
 11485 179d 7075626C 		.ascii	"publicKey\000"
 11485      69634B65 
 11485      7900
 11486              	.LASF728:
 11487 17a7 46495053 		.ascii	"FIPS_NOT_ALLOWED_E\000"
 11487      5F4E4F54 
 11487      5F414C4C 
 11487      4F574544 
 11487      5F4500
 11488              	.LASF108:
 11489 17ba 73697A65 		.ascii	"sizetype\000"
 11489      74797065 
 11489      00
 11490              	.LASF758:
 11491 17c3 57435F49 		.ascii	"WC_INIT_E\000"
 11491      4E49545F 
 11491      4500
 11492              	.LASF381:
 11493 17cd 4D41585F 		.ascii	"MAX_DH_SZ\000"
 11493      44485F53 
 11493      5A00
 11494              	.LASF199:
 11495 17d7 44594E41 		.ascii	"DYNAMIC_TYPE_CERT\000"
 11495      4D49435F 
 11495      54595045 
 11495      5F434552 
 11495      5400
 11496              	.LASF762:
 11497 17e9 48415348 		.ascii	"HASH_TYPE_E\000"
 11497      5F545950 
 11497      455F4500 
 11498              	.LASF790:
 11499 17f5 6B65794C 		.ascii	"keyLen\000"
 11499      656E00
 11500              	.LASF771:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 310


 11501 17fc 6C617374 		.ascii	"lastLen\000"
 11501      4C656E00 
 11502              	.LASF533:
 11503 1804 63657274 		.ascii	"certs\000"
 11503      7300
 11504              	.LASF330:
 11505 180a 6578636C 		.ascii	"excludedNames\000"
 11505      75646564 
 11505      4E616D65 
 11505      7300
 11506              	.LASF189:
 11507 1818 73686F72 		.ascii	"short unsigned int\000"
 11507      7420756E 
 11507      7369676E 
 11507      65642069 
 11507      6E7400
 11508              	.LASF30:
 11509 182b 574F4C46 		.ascii	"WOLFSSL\000"
 11509      53534C00 
 11510              	.LASF193:
 11511 1833 7369676E 		.ascii	"signed char\000"
 11511      65642063 
 11511      68617200 
 11512              	.LASF49:
 11513 183f 76657269 		.ascii	"verifyNone\000"
 11513      66794E6F 
 11513      6E6500
 11514              	.LASF163:
 11515 184a 53534C5F 		.ascii	"SSL_RECEIVED_SHUTDOWN\000"
 11515      52454345 
 11515      49564544 
 11515      5F534855 
 11515      54444F57 
 11516              	.LASF560:
 11517 1860 63697068 		.ascii	"cipher_type\000"
 11517      65725F74 
 11517      79706500 
 11518              	.LASF502:
 11519 186c 434F5059 		.ascii	"COPY\000"
 11519      00
 11520              	.LASF487:
 11521 1871 4D41585F 		.ascii	"MAX_PSK_ID_LEN\000"
 11521      50534B5F 
 11521      49445F4C 
 11521      454E00
 11522              	.LASF174:
 11523 1880 43616C6C 		.ascii	"CallbackCACache\000"
 11523      6261636B 
 11523      43414361 
 11523      63686500 
 11524              	.LASF24:
 11525 1890 6D736773 		.ascii	"msgsReceived\000"
 11525      52656365 
 11525      69766564 
 11525      00
 11526              	.LASF262:
 11527 189d 64696765 		.ascii	"digest\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 311


 11527      737400
 11528              	.LASF826:
 11529 18a4 776F6C66 		.ascii	"wolfSSL_GetMacSecret\000"
 11529      53534C5F 
 11529      4765744D 
 11529      61635365 
 11529      63726574 
 11530              	.LASF433:
 11531 18b9 46494E49 		.ascii	"FINISHED_LABEL_SZ\000"
 11531      53484544 
 11531      5F4C4142 
 11531      454C5F53 
 11531      5A00
 11532              	.LASF206:
 11533 18cb 44594E41 		.ascii	"DYNAMIC_TYPE_BIGINT\000"
 11533      4D49435F 
 11533      54595045 
 11533      5F424947 
 11533      494E5400 
 11534              	.LASF239:
 11535 18df 44594E41 		.ascii	"DYNAMIC_TYPE_X509\000"
 11535      4D49435F 
 11535      54595045 
 11535      5F583530 
 11535      3900
 11536              	.LASF781:
 11537 18f1 68617368 		.ascii	"hash_type\000"
 11537      5F747970 
 11537      6500
 11538              	.LASF41:
 11539 18fb 574F4C46 		.ascii	"WOLFSSL_CTX\000"
 11539      53534C5F 
 11539      43545800 
 11540              	.LASF210:
 11541 1907 44594E41 		.ascii	"DYNAMIC_TYPE_IN_BUFFER\000"
 11541      4D49435F 
 11541      54595045 
 11541      5F494E5F 
 11541      42554646 
 11542              	.LASF690:
 11543 191e 41534E5F 		.ascii	"ASN_UNKNOWN_OID_E\000"
 11543      554E4B4E 
 11543      4F574E5F 
 11543      4F49445F 
 11543      4500
 11544              	.LASF752:
 11545 1930 41534E5F 		.ascii	"ASN_NO_AKID\000"
 11545      4E4F5F41 
 11545      4B494400 
 11546              	.LASF470:
 11547 193c 43484143 		.ascii	"CHACHA20_128_KEY_SIZE\000"
 11547      48413230 
 11547      5F313238 
 11547      5F4B4559 
 11547      5F53495A 
 11548              	.LASF802:
 11549 1952 776F6C66 		.ascii	"wolfSSL_SetTlsHmacInner\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 312


 11549      53534C5F 
 11549      53657454 
 11549      6C73486D 
 11549      6163496E 
 11550              	.LASF227:
 11551 196a 44594E41 		.ascii	"DYNAMIC_TYPE_SUITES\000"
 11551      4D49435F 
 11551      54595045 
 11551      5F535549 
 11551      54455300 
 11552              	.LASF11:
 11553 197e 686D6163 		.ascii	"hmac\000"
 11553      00
 11554              	.LASF101:
 11555 1983 6F637370 		.ascii	"ocspEnabled\000"
 11555      456E6162 
 11555      6C656400 
 11556              	.LASF632:
 11557 198f 676F745F 		.ascii	"got_hello_request\000"
 11557      68656C6C 
 11557      6F5F7265 
 11557      71756573 
 11557      7400
 11558              	.LASF443:
 11559 19a1 4445535F 		.ascii	"DES_KEY_SIZE\000"
 11559      4B45595F 
 11559      53495A45 
 11559      00
 11560              	.LASF249:
 11561 19ae 44594E41 		.ascii	"DYNAMIC_TYPE_X509_STORE\000"
 11561      4D49435F 
 11561      54595045 
 11561      5F583530 
 11561      395F5354 
 11562              	.LASF545:
 11563 19c6 73657276 		.ascii	"server_write_key\000"
 11563      65725F77 
 11563      72697465 
 11563      5F6B6579 
 11563      00
 11564              	.LASF168:
 11565 19d7 53534C5F 		.ascii	"SSL_R_SSLV3_ALERT_CERTIFICATE_UNKNOWN\000"
 11565      525F5353 
 11565      4C56335F 
 11565      414C4552 
 11565      545F4345 
 11566              	.LASF566:
 11567 19fd 4D414341 		.ascii	"MACAlgorithm\000"
 11567      6C676F72 
 11567      6974686D 
 11567      00
 11568              	.LASF321:
 11569 1a0a 6E616D65 		.ascii	"nameSz\000"
 11569      537A00
 11570              	.LASF294:
 11571 1a11 4D41585F 		.ascii	"MAX_ENCODED_SIG_SZ\000"
 11571      454E434F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 313


 11571      4445445F 
 11571      5349475F 
 11571      535A00
 11572              	.LASF635:
 11573 1a24 676F745F 		.ascii	"got_hello_verify_request\000"
 11573      68656C6C 
 11573      6F5F7665 
 11573      72696679 
 11573      5F726571 
 11574              	.LASF536:
 11575 1a3d 70617468 		.ascii	"path\000"
 11575      00
 11576              	.LASF160:
 11577 1a42 53534C5F 		.ascii	"SSL_ERROR_ZERO_RETURN\000"
 11577      4552524F 
 11577      525F5A45 
 11577      524F5F52 
 11577      45545552 
 11578              	.LASF817:
 11579 1a58 77635F48 		.ascii	"wc_HmacUpdate\000"
 11579      6D616355 
 11579      70646174 
 11579      6500
 11580              	.LASF2:
 11581 1a66 68734861 		.ascii	"hsHashes\000"
 11581      73686573 
 11581      00
 11582              	.LASF66:
 11583 1a6f 4342494F 		.ascii	"CBIOSend\000"
 11583      53656E64 
 11583      00
 11584              	.LASF708:
 11585 1a78 554E4943 		.ascii	"UNICODE_SIZE_E\000"
 11585      4F44455F 
 11585      53495A45 
 11585      5F4500
 11586              	.LASF314:
 11587 1a87 4D41585F 		.ascii	"MAX_OCSP_NONCE_SZ\000"
 11587      4F435350 
 11587      5F4E4F4E 
 11587      43455F53 
 11587      5A00
 11588              	.LASF68:
 11589 1a99 69737375 		.ascii	"issuer\000"
 11589      657200
 11590              	.LASF581:
 11591 1aa0 696E7075 		.ascii	"inputBuffer\000"
 11591      74427566 
 11591      66657200 
 11592              	.LASF21:
 11593 1aac 66726167 		.ascii	"fragOffset\000"
 11593      4F666673 
 11593      657400
 11594              	.LASF9:
 11595 1ab7 6873446F 		.ascii	"hsDoneCtx\000"
 11595      6E654374 
 11595      7800
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 314


 11596              	.LASF514:
 11597 1ac1 53756974 		.ascii	"Suites\000"
 11597      657300
 11598              	.LASF721:
 11599 1ac8 41534E5F 		.ascii	"ASN_CRL_NO_SIGNER_E\000"
 11599      43524C5F 
 11599      4E4F5F53 
 11599      49474E45 
 11599      525F4500 
 11600              	.LASF26:
 11601 1adc 63685665 		.ascii	"chVersion\000"
 11601      7273696F 
 11601      6E00
 11602              	.LASF75:
 11603 1ae6 6E6F7441 		.ascii	"notAfterSz\000"
 11603      66746572 
 11603      537A00
 11604              	.LASF272:
 11605 1af1 49535355 		.ascii	"ISSUER\000"
 11605      455200
 11606              	.LASF295:
 11607 1af8 4D41585F 		.ascii	"MAX_SIG_SZ\000"
 11607      5349475F 
 11607      535A00
 11608              	.LASF448:
 11609 1b03 4145535F 		.ascii	"AES_IV_SIZE\000"
 11609      49565F53 
 11609      495A4500 
 11610              	.LASF621:
 11611 1b0f 7072654D 		.ascii	"preMasterSz\000"
 11611      61737465 
 11611      72537A00 
 11612              	.LASF47:
 11613 1b1b 70726976 		.ascii	"privateKey\000"
 11613      6174654B 
 11613      657900
 11614              	.LASF235:
 11615 1b26 44594E41 		.ascii	"DYNAMIC_TYPE_TMP_BUFFER\000"
 11615      4D49435F 
 11615      54595045 
 11615      5F544D50 
 11615      5F425546 
 11616              	.LASF827:
 11617 1b3e 776F6C66 		.ascii	"wolfSSL_Malloc\000"
 11617      53534C5F 
 11617      4D616C6C 
 11617      6F6300
 11618              	.LASF141:
 11619 1b4d 53534C5F 		.ascii	"SSL_FILETYPE_DEFAULT\000"
 11619      46494C45 
 11619      54595045 
 11619      5F444546 
 11619      41554C54 
 11620              	.LASF267:
 11621 1b62 73656564 		.ascii	"seed\000"
 11621      00
 11622              	.LASF471:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 315


 11623 1b67 43484143 		.ascii	"CHACHA20_IV_SIZE\000"
 11623      48413230 
 11623      5F49565F 
 11623      53495A45 
 11623      00
 11624              	.LASF656:
 11625 1b78 43525950 		.ascii	"CRYPTGEN_E\000"
 11625      5447454E 
 11625      5F4500
 11626              	.LASF526:
 11627 1b83 6F637370 		.ascii	"ocspList\000"
 11627      4C697374 
 11627      00
 11628              	.LASF393:
 11629 1b8c 5345515F 		.ascii	"SEQ_SZ\000"
 11629      535A00
 11630              	.LASF783:
 11631 1b93 68617368 		.ascii	"hashes\000"
 11631      657300
 11632              	.LASF298:
 11633 1b9a 4D41585F 		.ascii	"MAX_SET_SZ\000"
 11633      5345545F 
 11633      535A00
 11634              	.LASF195:
 11635 1ba5 6C6F6E67 		.ascii	"long int\000"
 11635      20696E74 
 11635      00
 11636              	.LASF283:
 11637 1bae 504B4353 		.ascii	"PKCS12\000"
 11637      313200
 11638              	.LASF439:
 11639 1bb5 4D41585F 		.ascii	"MAX_PRF_DIG\000"
 11639      5052465F 
 11639      44494700 
 11640              	.LASF358:
 11641 1bc1 53454E44 		.ascii	"SEND_BLANK_CERT\000"
 11641      5F424C41 
 11641      4E4B5F43 
 11641      45525400 
 11642              	.LASF593:
 11643 1bd1 68617665 		.ascii	"haveSessionId\000"
 11643      53657373 
 11643      696F6E49 
 11643      6400
 11644              	.LASF106:
 11645 1bdf 574F4C46 		.ascii	"WOLFSSL_CIPHER\000"
 11645      53534C5F 
 11645      43495048 
 11645      455200
 11646              	.LASF660:
 11647 1bee 4D505F52 		.ascii	"MP_READ_E\000"
 11647      4541445F 
 11647      4500
 11648              	.LASF289:
 11649 1bf8 5253415F 		.ascii	"RSA_INTS\000"
 11649      494E5453 
 11649      00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 316


 11650              	.LASF38:
 11651 1c01 574F4C46 		.ascii	"WOLFSSL_METHOD\000"
 11651      53534C5F 
 11651      4D455448 
 11651      4F4400
 11652              	.LASF52:
 11653 1c10 73657373 		.ascii	"sessionCacheOff\000"
 11653      696F6E43 
 11653      61636865 
 11653      4F666600 
 11654              	.LASF778:
 11655 1c20 6C616265 		.ascii	"label\000"
 11655      6C00
 11656              	.LASF807:
 11657 1c26 776F6C66 		.ascii	"wolfTLSv1_2_client_method\000"
 11657      544C5376 
 11657      315F325F 
 11657      636C6965 
 11657      6E745F6D 
 11658              	.LASF651:
 11659 1c40 4E414D45 		.ascii	"NAME_SZ\000"
 11659      5F535A00 
 11660              	.LASF15:
 11661 1c48 73657373 		.ascii	"session\000"
 11661      696F6E00 
 11662              	.LASF380:
 11663 1c50 4D41585F 		.ascii	"MAX_UDP_SIZE\000"
 11663      5544505F 
 11663      53495A45 
 11663      00
 11664              	.LASF169:
 11665 1c5d 53534C5F 		.ascii	"SSL_R_SSLV3_ALERT_BAD_CERTIFICATE\000"
 11665      525F5353 
 11665      4C56335F 
 11665      414C4552 
 11665      545F4241 
 11666              	.LASF315:
 11667 1c7f 45494748 		.ascii	"EIGHTK_BUF\000"
 11667      544B5F42 
 11667      554600
 11668              	.LASF28:
 11669 1c8a 6B657973 		.ascii	"keys\000"
 11669      00
 11670              	.LASF697:
 11671 1c8f 41534E5F 		.ascii	"ASN_SIG_CONFIRM_E\000"
 11671      5349475F 
 11671      434F4E46 
 11671      49524D5F 
 11671      4500
 11672              	.LASF251:
 11673 1ca1 44594E41 		.ascii	"DYNAMIC_TYPE_URL\000"
 11673      4D49435F 
 11673      54595045 
 11673      5F55524C 
 11673      00
 11674              	.LASF100:
 11675 1cb2 63726C43 		.ascii	"crlCheckAll\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 317


 11675      6865636B 
 11675      416C6C00 
 11676              	.LASF810:
 11677 1cbe 73657276 		.ascii	"server\000"
 11677      657200
 11678              	.LASF421:
 11679 1cc5 48454C4C 		.ascii	"HELLO_EXT_TYPE_SZ\000"
 11679      4F5F4558 
 11679      545F5459 
 11679      50455F53 
 11679      5A00
 11680              	.LASF567:
 11681 1cd7 6E6F5F6D 		.ascii	"no_mac\000"
 11681      616300
 11682              	.LASF509:
 11683 1cde 73746174 		.ascii	"staticBuffer\000"
 11683      69634275 
 11683      66666572 
 11683      00
 11684              	.LASF670:
 11685 1ceb 4D505F5A 		.ascii	"MP_ZERO_E\000"
 11685      45524F5F 
 11685      4500
 11686              	.LASF693:
 11687 1cf5 41534E5F 		.ascii	"ASN_AFTER_DATE_E\000"
 11687      41465445 
 11687      525F4441 
 11687      54455F45 
 11687      00
 11688              	.LASF628:
 11689 1d06 5265636F 		.ascii	"RecordLayerHeader\000"
 11689      72644C61 
 11689      79657248 
 11689      65616465 
 11689      7200
 11690              	.LASF362:
 11691 1d18 53534C76 		.ascii	"SSLv3_MAJOR\000"
 11691      335F4D41 
 11691      4A4F5200 
 11692              	.LASF729:
 11693 1d24 41534E5F 		.ascii	"ASN_NAME_INVALID_E\000"
 11693      4E414D45 
 11693      5F494E56 
 11693      414C4944 
 11693      5F4500
 11694              	.LASF273:
 11695 1d37 5355424A 		.ascii	"SUBJECT\000"
 11695      45435400 
 11696              	.LASF71:
 11697 1d3f 73657269 		.ascii	"serial\000"
 11697      616C00
 11698              	.LASF176:
 11699 1d46 43624F43 		.ascii	"CbOCSPIO\000"
 11699      5350494F 
 11699      00
 11700              	.LASF432:
 11701 1d4f 44544C53 		.ascii	"DTLS_POOL_SZ\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 318


 11701      5F504F4F 
 11701      4C5F535A 
 11701      00
 11702              	.LASF420:
 11703 1d5c 5452554E 		.ascii	"TRUNCATED_HMAC_SZ\000"
 11703      43415445 
 11703      445F484D 
 11703      41435F53 
 11703      5A00
 11704              	.LASF718:
 11705 1d6e 4241445F 		.ascii	"BAD_ALIGN_E\000"
 11705      414C4947 
 11705      4E5F4500 
 11706              	.LASF546:
 11707 1d7a 636C6965 		.ascii	"client_write_IV\000"
 11707      6E745F77 
 11707      72697465 
 11707      5F495600 
 11708              	.LASF659:
 11709 1d8a 4D505F49 		.ascii	"MP_INIT_E\000"
 11709      4E49545F 
 11709      4500
 11710              	.LASF684:
 11711 1d94 41534E5F 		.ascii	"ASN_GETINT_E\000"
 11711      47455449 
 11711      4E545F45 
 11711      00
 11712              	.LASF661:
 11713 1da1 4D505F45 		.ascii	"MP_EXPTMOD_E\000"
 11713      5850544D 
 11713      4F445F45 
 11713      00
 11714              	.LASF326:
 11715 1dae 6B657955 		.ascii	"keyUsage\000"
 11715      73616765 
 11715      00
 11716              	.LASF246:
 11717 1db7 44594E41 		.ascii	"DYNAMIC_TYPE_USER_CRYPTO\000"
 11717      4D49435F 
 11717      54595045 
 11717      5F555345 
 11717      525F4352 
 11718              	.LASF238:
 11719 1dd0 44594E41 		.ascii	"DYNAMIC_TYPE_CAVIUM_RSA\000"
 11719      4D49435F 
 11719      54595045 
 11719      5F434156 
 11719      49554D5F 
 11720              	.LASF606:
 11721 1de8 73656E64 		.ascii	"sendAlertState\000"
 11721      416C6572 
 11721      74537461 
 11721      746500
 11722              	.LASF503:
 11723 1df7 50726F74 		.ascii	"ProtocolVersion\000"
 11723      6F636F6C 
 11723      56657273 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 319


 11723      696F6E00 
 11724              	.LASF107:
 11725 1e07 63686172 		.ascii	"char\000"
 11725      00
 11726              	.LASF517:
 11727 1e0c 68617368 		.ascii	"hashSigAlgo\000"
 11727      53696741 
 11727      6C676F00 
 11728              	.LASF5:
 11729 1e18 76657269 		.ascii	"verifyCbCtx\000"
 11729      66794362 
 11729      43747800 
 11730              	.LASF811:
 11731 1e24 746C735F 		.ascii	"tls_client\000"
 11731      636C6965 
 11731      6E7400
 11732              	.LASF451:
 11733 1e2f 41454144 		.ascii	"AEAD_TYPE_OFFSET\000"
 11733      5F545950 
 11733      455F4F46 
 11733      46534554 
 11733      00
 11734              	.LASF563:
 11735 1e40 68617368 		.ascii	"hash_size\000"
 11735      5F73697A 
 11735      6500
 11736              	.LASF497:
 11737 1e4a 4E4F5F53 		.ascii	"NO_SNIFF\000"
 11737      4E494646 
 11737      00
 11738              	.LASF605:
 11739 1e53 7573696E 		.ascii	"usingAnon_cipher\000"
 11739      67416E6F 
 11739      6E5F6369 
 11739      70686572 
 11739      00
 11740              	.LASF814:
 11741 1e64 6B65795F 		.ascii	"key_label\000"
 11741      6C616265 
 11741      6C00
 11742              	.LASF23:
 11743 1e6e 63757252 		.ascii	"curRL\000"
 11743      4C00
 11744              	.LASF60:
 11745 1e74 68617665 		.ascii	"haveStaticECC\000"
 11745      53746174 
 11745      69634543 
 11745      4300
 11746              	.LASF416:
 11747 1e82 5245434F 		.ascii	"RECORD_HEADER_SZ\000"
 11747      52445F48 
 11747      45414445 
 11747      525F535A 
 11747      00
 11748              	.LASF821:
 11749 1e93 7374726E 		.ascii	"strncmp\000"
 11749      636D7000 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 320


 11750              	.LASF501:
 11751 1e9b 4E4F5F43 		.ascii	"NO_COPY\000"
 11751      4F505900 
 11752              	.LASF172:
 11753 1ea3 43616C6C 		.ascii	"CallbackIOSend\000"
 11753      6261636B 
 11753      494F5365 
 11753      6E6400
 11754              	.LASF630:
 11755 1eb2 70764D69 		.ascii	"pvMinor\000"
 11755      6E6F7200 
 11756              	.LASF398:
 11757 1eba 4D41585F 		.ascii	"MAX_DH_SIZE\000"
 11757      44485F53 
 11757      495A4500 
 11758              	.LASF87:
 11759 1ec6 73746174 		.ascii	"staticName\000"
 11759      69634E61 
 11759      6D6500
 11760              	.LASF465:
 11761 1ed1 43414D45 		.ascii	"CAMELLIA_128_KEY_SIZE\000"
 11761      4C4C4941 
 11761      5F313238 
 11761      5F4B4559 
 11761      5F53495A 
 11762              	.LASF304:
 11763 1ee7 4D41585F 		.ascii	"MAX_RSA_INT_SZ\000"
 11763      5253415F 
 11763      494E545F 
 11763      535A00
 11764              	.LASF498:
 11765 1ef6 534E4946 		.ascii	"SNIFF\000"
 11765      4600
 11766              	.LASF716:
 11767 1efc 4445434F 		.ascii	"DECOMPRESS_INIT_E\000"
 11767      4D505245 
 11767      53535F49 
 11767      4E49545F 
 11767      4500
 11768              	.LASF378:
 11769 1f0e 4D41585F 		.ascii	"MAX_COMP_EXTRA\000"
 11769      434F4D50 
 11769      5F455854 
 11769      524100
 11770              	.LASF177:
 11771 1f1d 43624F43 		.ascii	"CbOCSPRespFree\000"
 11771      53505265 
 11771      73704672 
 11771      656500
 11772              	.LASF346:
 11773 1f2c 68617368 		.ascii	"hash\000"
 11773      00
 11774              	.LASF72:
 11775 1f31 7375626A 		.ascii	"subjectCN\000"
 11775      65637443 
 11775      4E00
 11776              	.LASF436:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 321


 11777 1f3b 4B45595F 		.ascii	"KEY_LABEL_SZ\000"
 11777      4C414245 
 11777      4C5F535A 
 11777      00
 11778              	.LASF63:
 11779 1f48 67726F75 		.ascii	"groupMessages\000"
 11779      704D6573 
 11779      73616765 
 11779      7300
 11780              	.LASF495:
 11781 1f56 4D41585F 		.ascii	"MAX_NTRU_ENCRYPT_SZ\000"
 11781      4E545255 
 11781      5F454E43 
 11781      52595054 
 11781      5F535A00 
 11782              	.LASF134:
 11783 1f6a 53534C5F 		.ascii	"SSL_BAD_FILETYPE\000"
 11783      4241445F 
 11783      46494C45 
 11783      54595045 
 11783      00
 11784              	.LASF823:
 11785 1f7b 7374726C 		.ascii	"strlen\000"
 11785      656E00
 11786              	.LASF182:
 11787 1f82 574F4C46 		.ascii	"WOLFSSL_STREAM_TYPE\000"
 11787      53534C5F 
 11787      53545245 
 11787      414D5F54 
 11787      59504500 
 11788              	.LASF62:
 11789 1f96 71756965 		.ascii	"quietShutdown\000"
 11789      74536875 
 11789      74646F77 
 11789      6E00
 11790              	.LASF139:
 11791 1fa4 53534C5F 		.ascii	"SSL_FILETYPE_ASN1\000"
 11791      46494C45 
 11791      54595045 
 11791      5F41534E 
 11791      3100
 11792              	.LASF103:
 11793 1fb6 6F637370 		.ascii	"ocspSendNonce\000"
 11793      53656E64 
 11793      4E6F6E63 
 11793      6500
 11794              	.LASF263:
 11795 1fc4 62756666 		.ascii	"buffer\000"
 11795      657200
 11796              	.LASF102:
 11797 1fcb 6F637370 		.ascii	"ocspCheckAll\000"
 11797      43686563 
 11797      6B416C6C 
 11797      00
 11798              	.LASF692:
 11799 1fd8 41534E5F 		.ascii	"ASN_BEFORE_DATE_E\000"
 11799      4245464F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 322


 11799      52455F44 
 11799      4154455F 
 11799      4500
 11800              	.LASF293:
 11801 1fea 41534E5F 		.ascii	"ASN_GEN_TIME_SZ\000"
 11801      47454E5F 
 11801      54494D45 
 11801      5F535A00 
 11802              	.LASF79:
 11803 1ffa 7075624B 		.ascii	"pubKey\000"
 11803      657900
 11804              	.LASF702:
 11805 2001 41534E5F 		.ascii	"ASN_CRIT_EXT_E\000"
 11805      43524954 
 11805      5F455854 
 11805      5F4500
 11806              	.LASF486:
 11807 2010 44544C53 		.ascii	"DTLS_TIMEOUT_MULTIPLIER\000"
 11807      5F54494D 
 11807      454F5554 
 11807      5F4D554C 
 11807      5449504C 
 11808              	.LASF354:
 11809 2028 4543435F 		.ascii	"ECC_BYTE\000"
 11809      42595445 
 11809      00
 11810              	.LASF445:
 11811 2031 4445535F 		.ascii	"DES_IV_SIZE\000"
 11811      49565F53 
 11811      495A4500 
 11812              	.LASF365:
 11813 203d 544C5376 		.ascii	"TLSv1_1_MINOR\000"
 11813      315F315F 
 11813      4D494E4F 
 11813      5200
 11814              	.LASF539:
 11815 204b 63726C4C 		.ascii	"crlLock\000"
 11815      6F636B00 
 11816              	.LASF666:
 11817 2053 4D505F4D 		.ascii	"MP_MULMOD_E\000"
 11817      554C4D4F 
 11817      445F4500 
 11818              	.LASF562:
 11819 205f 7369675F 		.ascii	"sig_algo\000"
 11819      616C676F 
 11819      00
 11820              	.LASF240:
 11821 2068 44594E41 		.ascii	"DYNAMIC_TYPE_TLSX\000"
 11821      4D49435F 
 11821      54595045 
 11821      5F544C53 
 11821      5800
 11822              	.LASF332:
 11823 207a 43657274 		.ascii	"CertStatus\000"
 11823      53746174 
 11823      757300
 11824              	.LASF98:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 323


 11825 2085 63614C6F 		.ascii	"caLock\000"
 11825      636B00
 11826              	.LASF744:
 11827 208c 4D41435F 		.ascii	"MAC_CMP_FAILED_E\000"
 11827      434D505F 
 11827      4641494C 
 11827      45445F45 
 11827      00
 11828              	.LASF428:
 11829 209d 44544C53 		.ascii	"DTLS_HANDSHAKE_EXTRA\000"
 11829      5F48414E 
 11829      44534841 
 11829      4B455F45 
 11829      58545241 
 11830              	.LASF124:
 11831 20b2 64697363 		.ascii	"discardSessionCerts\000"
 11831      61726453 
 11831      65737369 
 11831      6F6E4365 
 11831      72747300 
 11832              	.LASF469:
 11833 20c6 43484143 		.ascii	"CHACHA20_256_KEY_SIZE\000"
 11833      48413230 
 11833      5F323536 
 11833      5F4B4559 
 11833      5F53495A 
 11834              	.LASF389:
 11835 20dc 434F4D50 		.ascii	"COMPRESS_LOWER\000"
 11835      52455353 
 11835      5F4C4F57 
 11835      455200
 11836              	.LASF759:
 11837 20eb 5349475F 		.ascii	"SIG_VERIFY_E\000"
 11837      56455249 
 11837      46595F45 
 11837      00
 11838              	.LASF223:
 11839 20f8 44594E41 		.ascii	"DYNAMIC_TYPE_CRL_MONITOR\000"
 11839      4D49435F 
 11839      54595045 
 11839      5F43524C 
 11839      5F4D4F4E 
 11840              	.LASF549:
 11841 2111 73657175 		.ascii	"sequence_number\000"
 11841      656E6365 
 11841      5F6E756D 
 11841      62657200 
 11842              	.LASF117:
 11843 2121 574F4C46 		.ascii	"WOLFSSL_X509_STORE_CTX\000"
 11843      53534C5F 
 11843      58353039 
 11843      5F53544F 
 11843      52455F43 
 11844              	.LASF698:
 11845 2138 41534E5F 		.ascii	"ASN_SIG_HASH_E\000"
 11845      5349475F 
 11845      48415348 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 324


 11845      5F4500
 11846              	.LASF392:
 11847 2147 56455253 		.ascii	"VERSION_SZ\000"
 11847      494F4E5F 
 11847      535A00
 11848              	.LASF529:
 11849 2152 6C617374 		.ascii	"lastDate\000"
 11849      44617465 
 11849      00
 11850              	.LASF149:
 11851 215b 53534C5F 		.ascii	"SSL_SESS_CACHE_CLIENT\000"
 11851      53455353 
 11851      5F434143 
 11851      48455F43 
 11851      4C49454E 
 11852              	.LASF485:
 11853 2171 44544C53 		.ascii	"DTLS_TIMEOUT_MAX\000"
 11853      5F54494D 
 11853      454F5554 
 11853      5F4D4158 
 11853      00
 11854              	.LASF414:
 11855 2182 53455256 		.ascii	"SERVER_ID_LEN\000"
 11855      45525F49 
 11855      445F4C45 
 11855      4E00
 11856              	.LASF524:
 11857 2190 746F7461 		.ascii	"totalStatus\000"
 11857      6C537461 
 11857      74757300 
 11858              	.LASF27:
 11859 219c 73706563 		.ascii	"specs\000"
 11859      7300
 11860              	.LASF507:
 11861 21a2 44657242 		.ascii	"DerBuffer\000"
 11861      75666665 
 11861      7200
 11862              	.LASF643:
 11863 21ac 676F745F 		.ascii	"got_client_key_exchange\000"
 11863      636C6965 
 11863      6E745F6B 
 11863      65795F65 
 11863      78636861 
 11864              	.LASF464:
 11865 21c4 4145535F 		.ascii	"AES_CCM_8_AUTH_SZ\000"
 11865      43434D5F 
 11865      385F4155 
 11865      54485F53 
 11865      5A00
 11866              	.LASF740:
 11867 21d6 44524247 		.ascii	"DRBG_CONT_FIPS_E\000"
 11867      5F434F4E 
 11867      545F4649 
 11867      50535F45 
 11867      00
 11868              	.LASF688:
 11869 21e7 41534E5F 		.ascii	"ASN_EXPECT_0_E\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 325


 11869      45585045 
 11869      43545F30 
 11869      5F4500
 11870              	.LASF683:
 11871 21f6 41534E5F 		.ascii	"ASN_VERSION_E\000"
 11871      56455253 
 11871      494F4E5F 
 11871      4500
 11872              	.LASF747:
 11873 2204 4543435F 		.ascii	"ECC_PRIV_KEY_E\000"
 11873      50524956 
 11873      5F4B4559 
 11873      5F4500
 11874              	.LASF128:
 11875 2213 53534C5F 		.ascii	"SSL_SUCCESS\000"
 11875      53554343 
 11875      45535300 
 11876              	.LASF456:
 11877 221f 41455347 		.ascii	"AESGCM_IMP_IV_SZ\000"
 11877      434D5F49 
 11877      4D505F49 
 11877      565F535A 
 11877      00
 11878              	.LASF565:
 11879 2230 73746174 		.ascii	"static_ecdh\000"
 11879      69635F65 
 11879      63646800 
 11880              	.LASF120:
 11881 223c 646F6D61 		.ascii	"domain\000"
 11881      696E00
 11882              	.LASF483:
 11883 2243 4D41585F 		.ascii	"MAX_SUITE_NAME\000"
 11883      53554954 
 11883      455F4E41 
 11883      4D4500
 11884              	.LASF775:
 11885 2252 63313674 		.ascii	"c16toa\000"
 11885      6F6100
 11886              	.LASF265:
 11887 2259 57435F52 		.ascii	"WC_RNG\000"
 11887      4E4700
 11888              	.LASF270:
 11889 2260 5348415F 		.ascii	"SHA_DIGEST_SIZE\000"
 11889      44494745 
 11889      53545F53 
 11889      495A4500 
 11890              	.LASF650:
 11891 2270 49565F53 		.ascii	"IV_SZ\000"
 11891      5A00
 11892              	.LASF677:
 11893 2276 44415445 		.ascii	"DATE_E\000"
 11893      5F4500
 11894              	.LASF245:
 11895 227d 44594E41 		.ascii	"DYNAMIC_TYPE_COOKIE_PWD\000"
 11895      4D49435F 
 11895      54595045 
 11895      5F434F4F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 326


 11895      4B49455F 
 11896              	.LASF237:
 11897 2295 44594E41 		.ascii	"DYNAMIC_TYPE_CAVIUM_TMP\000"
 11897      4D49435F 
 11897      54595045 
 11897      5F434156 
 11897      49554D5F 
 11898              	.LASF798:
 11899 22ad 776F6C66 		.ascii	"wolfSSL_GetHmacType\000"
 11899      53534C5F 
 11899      47657448 
 11899      6D616354 
 11899      79706500 
 11900              	.LASF776:
 11901 22c1 466F7263 		.ascii	"ForceZero\000"
 11901      655A6572 
 11901      6F00
 11902              	.LASF598:
 11903 22cb 636C6F73 		.ascii	"closeNotify\000"
 11903      654E6F74 
 11903      69667900 
 11904              	.LASF408:
 11905 22d7 4F504151 		.ascii	"OPAQUE8_LEN\000"
 11905      5545385F 
 11905      4C454E00 
 11906              	.LASF612:
 11907 22e3 63697068 		.ascii	"cipherSuite\000"
 11907      65725375 
 11907      69746500 
 11908              	.LASF271:
 11909 22ef 5348415F 		.ascii	"SHA_PAD_SIZE\000"
 11909      5041445F 
 11909      53495A45 
 11909      00
 11910              	.LASF19:
 11911 22fc 77666C61 		.ascii	"wflags\000"
 11911      677300
 11912              	.LASF789:
 11913 2303 6B65795F 		.ascii	"key_data\000"
 11913      64617461 
 11913      00
 11914              	.LASF383:
 11915 230c 5041445F 		.ascii	"PAD_MD5\000"
 11915      4D443500 
 11916              	.LASF616:
 11917 2314 68616E64 		.ascii	"handShakeDone\000"
 11917      5368616B 
 11917      65446F6E 
 11917      6500
 11918              	.LASF340:
 11919 2322 424C414B 		.ascii	"BLAKE2B_ID\000"
 11919      4532425F 
 11919      494400
 11920              	.LASF391:
 11921 232d 4C454E47 		.ascii	"LENGTH_SZ\000"
 11921      54485F53 
 11921      5A00
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 327


 11922              	.LASF551:
 11923 2337 70616453 		.ascii	"padSz\000"
 11923      7A00
 11924              	.LASF179:
 11925 233d 574F4C46 		.ascii	"WOLFSSL_SERVER_END\000"
 11925      53534C5F 
 11925      53455256 
 11925      45525F45 
 11925      4E4400
 11926              	.LASF417:
 11927 2350 43455254 		.ascii	"CERT_HEADER_SZ\000"
 11927      5F484541 
 11927      4445525F 
 11927      535A00
 11928              	.LASF275:
 11929 235f 4245464F 		.ascii	"BEFORE\000"
 11929      524500
 11930              	.LASF544:
 11931 2366 636C6965 		.ascii	"client_write_key\000"
 11931      6E745F77 
 11931      72697465 
 11931      5F6B6579 
 11931      00
 11932              	.LASF578:
 11933 2377 48617368 		.ascii	"Hashes\000"
 11933      657300
 11934              	.LASF410:
 11935 237e 4F504151 		.ascii	"OPAQUE24_LEN\000"
 11935      55453234 
 11935      5F4C454E 
 11935      00
 11936              	.LASF7:
 11937 238b 68656170 		.ascii	"heap\000"
 11937      00
 11938              	.LASF525:
 11939 2390 574F4C46 		.ascii	"WOLFSSL_OCSP\000"
 11939      53534C5F 
 11939      4F435350 
 11939      00
 11940              	.LASF521:
 11941 239d 4F637370 		.ascii	"OcspEntry\000"
 11941      456E7472 
 11941      7900
 11942              	.LASF242:
 11943 23a7 44594E41 		.ascii	"DYNAMIC_TYPE_SIGNATURE\000"
 11943      4D49435F 
 11943      54595045 
 11943      5F534947 
 11943      4E415455 
 11944              	.LASF713:
 11945 23be 43415649 		.ascii	"CAVIUM_INIT_E\000"
 11945      554D5F49 
 11945      4E49545F 
 11945      4500
 11946              	.LASF454:
 11947 23cc 41454144 		.ascii	"AEAD_LEN_OFFSET\000"
 11947      5F4C454E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 328


 11947      5F4F4646 
 11947      53455400 
 11948              	.LASF624:
 11949 23dc 636C6965 		.ascii	"clientRandom\000"
 11949      6E745261 
 11949      6E646F6D 
 11949      00
 11950              	.LASF725:
 11951 23e9 5245515F 		.ascii	"REQ_ATTRIBUTE_E\000"
 11951      41545452 
 11951      49425554 
 11951      455F4500 
 11952              	.LASF430:
 11953 23f9 44544C53 		.ascii	"DTLS_HANDSHAKE_SEQ_SZ\000"
 11953      5F48414E 
 11953      44534841 
 11953      4B455F53 
 11953      45515F53 
 11954              	.LASF402:
 11955 240f 49445F4C 		.ascii	"ID_LEN\000"
 11955      454E00
 11956              	.LASF695:
 11957 2416 41534E5F 		.ascii	"ASN_TIME_E\000"
 11957      54494D45 
 11957      5F4500
 11958              	.LASF706:
 11959 2421 4241445F 		.ascii	"BAD_FUNC_ARG\000"
 11959      46554E43 
 11959      5F415247 
 11959      00
 11960              	.LASF796:
 11961 242e 4D616B65 		.ascii	"MakeTlsMasterSecret\000"
 11961      546C734D 
 11961      61737465 
 11961      72536563 
 11961      72657400 
 11962              	.LASF657:
 11963 2442 52414E5F 		.ascii	"RAN_BLOCK_E\000"
 11963      424C4F43 
 11963      4B5F4500 
 11964              	.LASF831:
 11965 244e 496E6974 		.ascii	"InitSSL_Method\000"
 11965      53534C5F 
 11965      4D657468 
 11965      6F6400
 11966              	.LASF318:
 11967 245d 444E535F 		.ascii	"DNS_entry\000"
 11967      656E7472 
 11967      7900
 11968              	.LASF266:
 11969 2467 64726267 		.ascii	"drbg\000"
 11969      00
 11970              	.LASF640:
 11971 246c 676F745F 		.ascii	"got_certificate_request\000"
 11971      63657274 
 11971      69666963 
 11971      6174655F 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 329


 11971      72657175 
 11972              	.LASF148:
 11973 2484 53534C5F 		.ascii	"SSL_SESS_CACHE_OFF\000"
 11973      53455353 
 11973      5F434143 
 11973      48455F4F 
 11973      464600
 11974              	.LASF386:
 11975 2497 434F4D50 		.ascii	"COMPRESS_DUMMY_SIZE\000"
 11975      52455353 
 11975      5F44554D 
 11975      4D595F53 
 11975      495A4500 
 11976              	.LASF589:
 11977 24ab 77654F77 		.ascii	"weOwnKey\000"
 11977      6E4B6579 
 11977      00
 11978              	.LASF140:
 11979 24b4 53534C5F 		.ascii	"SSL_FILETYPE_PEM\000"
 11979      46494C45 
 11979      54595045 
 11979      5F50454D 
 11979      00
 11980              	.LASF204:
 11981 24c5 44594E41 		.ascii	"DYNAMIC_TYPE_SIGNER\000"
 11981      4D49435F 
 11981      54595045 
 11981      5F534947 
 11981      4E455200 
 11982              	.LASF367:
 11983 24d9 4F4C445F 		.ascii	"OLD_HELLO_ID\000"
 11983      48454C4C 
 11983      4F5F4944 
 11983      00
 11984              	.LASF682:
 11985 24e6 41534E5F 		.ascii	"ASN_PARSE_E\000"
 11985      50415253 
 11985      455F4500 
 11986              	.LASF564:
 11987 24f2 7061645F 		.ascii	"pad_size\000"
 11987      73697A65 
 11987      00
 11988              	.LASF312:
 11989 24fb 4F435350 		.ascii	"OCSP_NONCE_EXT_SZ\000"
 11989      5F4E4F4E 
 11989      43455F45 
 11989      58545F53 
 11989      5A00
 11990              	.LASF288:
 11991 250d 4B455949 		.ascii	"KEYID_SIZE\000"
 11991      445F5349 
 11991      5A4500
 11992              	.LASF426:
 11993 2518 44544C53 		.ascii	"DTLS_HANDSHAKE_HEADER_SZ\000"
 11993      5F48414E 
 11993      44534841 
 11993      4B455F48 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 330


 11993      45414445 
 11994              	.LASF247:
 11995 2531 44594E41 		.ascii	"DYNAMIC_TYPE_OCSP_REQUEST\000"
 11995      4D49435F 
 11995      54595045 
 11995      5F4F4353 
 11995      505F5245 
 11996              	.LASF59:
 11997 254b 68617665 		.ascii	"haveECDSAsig\000"
 11997      45434453 
 11997      41736967 
 11997      00
 11998              	.LASF191:
 11999 2558 6C6F6E67 		.ascii	"long long unsigned int\000"
 11999      206C6F6E 
 11999      6720756E 
 11999      7369676E 
 11999      65642069 
 12000              	.LASF512:
 12001 256f 6F666673 		.ascii	"offset\000"
 12001      657400
 12002              	.LASF311:
 12003 2576 4D41585F 		.ascii	"MAX_DER_DIGEST_SZ\000"
 12003      4445525F 
 12003      44494745 
 12003      53545F53 
 12003      5A00
 12004              	.LASF131:
 12005 2588 53534C5F 		.ascii	"SSL_BAD_CERTTYPE\000"
 12005      4241445F 
 12005      43455254 
 12005      54595045 
 12005      00
 12006              	.LASF70:
 12007 2599 73657269 		.ascii	"serialSz\000"
 12007      616C537A 
 12007      00
 12008              	.LASF309:
 12009 25a2 4D41585F 		.ascii	"MAX_CA_SZ\000"
 12009      43415F53 
 12009      5A00
 12010              	.LASF540:
 12011 25ac 6D6F6E69 		.ascii	"monitors\000"
 12011      746F7273 
 12011      00
 12012              	.LASF234:
 12013 25b5 44594E41 		.ascii	"DYNAMIC_TYPE_ECC\000"
 12013      4D49435F 
 12013      54595045 
 12013      5F454343 
 12013      00
 12014              	.LASF145:
 12015 25c6 53534C5F 		.ascii	"SSL_VERIFY_FAIL_IF_NO_PEER_CERT\000"
 12015      56455249 
 12015      46595F46 
 12015      41494C5F 
 12015      49465F4E 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 331


 12016              	.LASF14:
 12017 25e6 62756666 		.ascii	"buffers\000"
 12017      65727300 
 12018              	.LASF90:
 12019 25ee 63615461 		.ascii	"caTable\000"
 12019      626C6500 
 12020              	.LASF594:
 12021 25f6 746C7331 		.ascii	"tls1_1\000"
 12021      5F3100
 12022              	.LASF429:
 12023 25fd 44544C53 		.ascii	"DTLS_RECORD_EXTRA\000"
 12023      5F524543 
 12023      4F52445F 
 12023      45585452 
 12023      4100
 12024              	.LASF157:
 12025 260f 53534C5F 		.ascii	"SSL_ERROR_WANT_ACCEPT\000"
 12025      4552524F 
 12025      525F5741 
 12025      4E545F41 
 12025      43434550 
 12026              	.LASF184:
 12027 2625 574F4C46 		.ascii	"WOLFSSL_TLS_HMAC_INNER_SZ\000"
 12027      53534C5F 
 12027      544C535F 
 12027      484D4143 
 12027      5F494E4E 
 12028              	.LASF96:
 12029 263f 6F637370 		.ascii	"ocspIOCb\000"
 12029      494F4362 
 12029      00
 12030              	.LASF369:
 12031 2648 4E4F5F43 		.ascii	"NO_COMPRESSION\000"
 12031      4F4D5052 
 12031      45535349 
 12031      4F4E00
 12032              	.LASF434:
 12033 2657 544C535F 		.ascii	"TLS_FINISHED_SZ\000"
 12033      46494E49 
 12033      53484544 
 12033      5F535A00 
 12034              	.LASF480:
 12035 2667 4D41585F 		.ascii	"MAX_HELLO_SZ\000"
 12035      48454C4C 
 12035      4F5F535A 
 12035      00
 12036              	.LASF571:
 12037 2674 73686132 		.ascii	"sha256_mac\000"
 12037      35365F6D 
 12037      616300
 12038              	.LASF341:
 12039 267f 4D41585F 		.ascii	"MAX_DIGEST_SIZE\000"
 12039      44494745 
 12039      53545F53 
 12039      495A4500 
 12040              	.LASF94:
 12041 268f 63614361 		.ascii	"caCacheCallback\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 332


 12041      63686543 
 12041      616C6C62 
 12041      61636B00 
 12042              	.LASF403:
 12043 269f 434F4F4B 		.ascii	"COOKIE_SECRET_SZ\000"
 12043      49455F53 
 12043      45435245 
 12043      545F535A 
 12043      00
 12044              	.LASF236:
 12045 26b0 44594E41 		.ascii	"DYNAMIC_TYPE_DTLS_MSG\000"
 12045      4D49435F 
 12045      54595045 
 12045      5F44544C 
 12045      535F4D53 
 12046              	.LASF519:
 12047 26c6 68617368 		.ascii	"hashAlgo\000"
 12047      416C676F 
 12047      00
 12048              	.LASF584:
 12049 26cf 636C6561 		.ascii	"clearOutputBuffer\000"
 12049      724F7574 
 12049      70757442 
 12049      75666665 
 12049      7200
 12050              	.LASF815:
 12051 26e1 4D616B65 		.ascii	"MakeTLSv1_2\000"
 12051      544C5376 
 12051      315F3200 
 12052              	.LASF213:
 12053 26ed 44594E41 		.ascii	"DYNAMIC_TYPE_DOMAIN\000"
 12053      4D49435F 
 12053      54595045 
 12053      5F444F4D 
 12053      41494E00 
 12054              	.LASF601:
 12055 2701 68617665 		.ascii	"haveQSH\000"
 12055      51534800 
 12056              	.LASF757:
 12057 2709 43455254 		.ascii	"CERTPOLICIES_E\000"
 12057      504F4C49 
 12057      43494553 
 12057      5F4500
 12058              	.LASF424:
 12059 2718 48454C4C 		.ascii	"HELLO_EXT_SIGALGO_SZ\000"
 12059      4F5F4558 
 12059      545F5349 
 12059      47414C47 
 12059      4F5F535A 
 12060              	.LASF467:
 12061 272d 43414D45 		.ascii	"CAMELLIA_256_KEY_SIZE\000"
 12061      4C4C4941 
 12061      5F323536 
 12061      5F4B4559 
 12061      5F53495A 
 12062              	.LASF475:
 12063 2743 52414242 		.ascii	"RABBIT_KEY_SIZE\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 333


 12063      49545F4B 
 12063      45595F53 
 12063      495A4500 
 12064              	.LASF313:
 12065 2753 4D41585F 		.ascii	"MAX_OCSP_EXT_SZ\000"
 12065      4F435350 
 12065      5F455854 
 12065      5F535A00 
 12066              	.LASF504:
 12067 2763 6D616A6F 		.ascii	"major\000"
 12067      7200
 12068              	.LASF803:
 12069 2769 696E6E65 		.ascii	"inner\000"
 12069      7200
 12070              	.LASF329:
 12071 276f 7065726D 		.ascii	"permittedNames\000"
 12071      69747465 
 12071      644E616D 
 12071      657300
 12072              	.LASF719:
 12073 277e 41534E5F 		.ascii	"ASN_NO_SIGNER_E\000"
 12073      4E4F5F53 
 12073      49474E45 
 12073      525F4500 
 12074              	.LASF188:
 12075 278e 776F7264 		.ascii	"word16\000"
 12075      313600
 12076              	.LASF8:
 12077 2795 6873446F 		.ascii	"hsDoneCb\000"
 12077      6E654362 
 12077      00
 12078              	.LASF793:
 12079 279e 44657269 		.ascii	"DeriveTlsKeys\000"
 12079      7665546C 
 12079      734B6579 
 12079      7300
 12080              	.LASF555:
 12081 27ac 6B65795F 		.ascii	"key_size\000"
 12081      73697A65 
 12081      00
 12082              	.LASF115:
 12083 27b5 6C617374 		.ascii	"last_rx\000"
 12083      5F727800 
 12084              	.LASF118:
 12085 27bd 73746F72 		.ascii	"store\000"
 12085      6500
 12086              	.LASF158:
 12087 27c3 53534C5F 		.ascii	"SSL_ERROR_SYSCALL\000"
 12087      4552524F 
 12087      525F5359 
 12087      5343414C 
 12087      4C00
 12088              	.LASF576:
 12089 27d5 43697068 		.ascii	"Ciphers\000"
 12089      65727300 
 12090              	.LASF777:
 12091 27dd 6469674C 		.ascii	"digLen\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 334


 12091      656E00
 12092              	.LASF785:
 12093 27e4 68616E64 		.ascii	"handshake_hash\000"
 12093      7368616B 
 12093      655F6861 
 12093      736800
 12094              	.LASF649:
 12095 27f3 68617368 		.ascii	"hashSha256\000"
 12095      53686132 
 12095      353600
 12096              	.LASF363:
 12097 27fe 53534C76 		.ascii	"SSLv3_MINOR\000"
 12097      335F4D49 
 12097      4E4F5200 
 12098              	.LASF125:
 12099 280a 56657269 		.ascii	"VerifyCallback\000"
 12099      66794361 
 12099      6C6C6261 
 12099      636B00
 12100              	.LASF569:
 12101 2819 7368615F 		.ascii	"sha_mac\000"
 12101      6D616300 
 12102              	.LASF219:
 12103 2821 44594E41 		.ascii	"DYNAMIC_TYPE_CRL\000"
 12103      4D49435F 
 12103      54595045 
 12103      5F43524C 
 12103      00
 12104              	.LASF78:
 12105 2832 7075624B 		.ascii	"pubKeyOID\000"
 12105      65794F49 
 12105      4400
 12106              	.LASF830:
 12107 283c 433A5C55 		.ascii	"C:\\Users\\ddemidov\\Documents\\PSoC Creator\\BLE_F"
 12107      73657273 
 12107      5C646465 
 12107      6D69646F 
 12107      765C446F 
 12108 286a 696E644D 		.ascii	"indMe01\\SenseAbility.cydsn\000"
 12108      6530315C 
 12108      53656E73 
 12108      65416269 
 12108      6C697479 
 12109              	.LASF673:
 12110 2885 5253415F 		.ascii	"RSA_BUFFER_E\000"
 12110      42554646 
 12110      45525F45 
 12110      00
 12111              	.LASF197:
 12112 2892 6C6F6E67 		.ascii	"long long int\000"
 12112      206C6F6E 
 12112      6720696E 
 12112      7400
 12113              	.LASF662:
 12114 28a0 4D505F54 		.ascii	"MP_TO_E\000"
 12114      4F5F4500 
 12115              	.LASF534:
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 335


 12116 28a8 746F7461 		.ascii	"totalCerts\000"
 12116      6C436572 
 12116      747300
 12117              	.LASF590:
 12118 28b3 77654F77 		.ascii	"weOwnDH\000"
 12118      6E444800 
 12119              	.LASF357:
 12120 28bb 53454E44 		.ascii	"SEND_CERT\000"
 12120      5F434552 
 12120      5400
 12121              	.LASF461:
 12122 28c5 43484143 		.ascii	"CHACHA20_OLD_OFFSET\000"
 12122      48413230 
 12122      5F4F4C44 
 12122      5F4F4646 
 12122      53455400 
 12123              	.LASF377:
 12124 28d9 4D41585F 		.ascii	"MAX_MSG_EXTRA\000"
 12124      4D53475F 
 12124      45585452 
 12124      4100
 12125              	.LASF220:
 12126 28e7 44594E41 		.ascii	"DYNAMIC_TYPE_REVOKED\000"
 12126      4D49435F 
 12126      54595045 
 12126      5F524556 
 12126      4F4B4544 
 12127              	.LASF558:
 12128 28fc 61656164 		.ascii	"aead_mac_size\000"
 12128      5F6D6163 
 12128      5F73697A 
 12128      6500
 12129              	.LASF228:
 12130 290a 44594E41 		.ascii	"DYNAMIC_TYPE_CIPHER\000"
 12130      4D49435F 
 12130      54595045 
 12130      5F434950 
 12130      48455200 
 12131              	.LASF190:
 12132 291e 776F7264 		.ascii	"word32\000"
 12132      333200
 12133              	.LASF705:
 12134 2925 4543435F 		.ascii	"ECC_CURVE_OID_E\000"
 12134      43555256 
 12134      455F4F49 
 12134      445F4500 
 12135              	.LASF556:
 12136 2935 69765F73 		.ascii	"iv_size\000"
 12136      697A6500 
 12137              	.LASF58:
 12138 293d 68617665 		.ascii	"haveNTRU\000"
 12138      4E545255 
 12138      00
 12139              	.LASF510:
 12140 2946 62756666 		.ascii	"bufferSize\000"
 12140      65725369 
 12140      7A6500
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 336


 12141              	.LASF65:
 12142 2951 4342494F 		.ascii	"CBIORecv\000"
 12142      52656376 
 12142      00
 12143              	.LASF527:
 12144 295a 6F637370 		.ascii	"ocspLock\000"
 12144      4C6F636B 
 12144      00
 12145              	.LASF116:
 12146 2963 6C617374 		.ascii	"last_tx\000"
 12146      5F747800 
 12147              	.LASF269:
 12148 296b 5348415F 		.ascii	"SHA_BLOCK_SIZE\000"
 12148      424C4F43 
 12148      4B5F5349 
 12148      5A4500
 12149              	.LASF460:
 12150 297a 43484143 		.ascii	"CHACHA20_NONCE_SZ\000"
 12150      48413230 
 12150      5F4E4F4E 
 12150      43455F53 
 12150      5A00
 12151              	.LASF770:
 12152 298c 74696D65 		.ascii	"times\000"
 12152      7300
 12153              	.LASF119:
 12154 2992 63757272 		.ascii	"current_cert\000"
 12154      656E745F 
 12154      63657274 
 12154      00
 12155              	.LASF373:
 12156 299f 454E4352 		.ascii	"ENCRYPT_LEN\000"
 12156      5950545F 
 12156      4C454E00 
 12157              	.LASF97:
 12158 29ab 6F637370 		.ascii	"ocspRespFreeCb\000"
 12158      52657370 
 12158      46726565 
 12158      436200
 12159              	.LASF280:
 12160 29ba 4D41585F 		.ascii	"MAX_KEY_SIZE\000"
 12160      4B45595F 
 12160      53495A45 
 12160      00
 12161              	.LASF196:
 12162 29c7 6C6F6E67 		.ascii	"long unsigned int\000"
 12162      20756E73 
 12162      69676E65 
 12162      6420696E 
 12162      7400
 12163              	.LASF474:
 12164 29d9 48435F31 		.ascii	"HC_128_IV_SIZE\000"
 12164      32385F49 
 12164      565F5349 
 12164      5A4500
 12165              	.LASF331:
 12166 29e8 7375626A 		.ascii	"subjectNameHash\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 337


 12166      6563744E 
 12166      616D6548 
 12166      61736800 
 12167              	.LASF642:
 12168 29f8 676F745F 		.ascii	"got_certificate_verify\000"
 12168      63657274 
 12168      69666963 
 12168      6174655F 
 12168      76657269 
 12169              	.LASF592:
 12170 2a0f 72657375 		.ascii	"resuming\000"
 12170      6D696E67 
 12170      00
 12171              	.LASF215:
 12172 2a18 44594E41 		.ascii	"DYNAMIC_TYPE_CTX\000"
 12172      4D49435F 
 12172      54595045 
 12172      5F435458 
 12172      00
 12173              	.LASF366:
 12174 2a29 544C5376 		.ascii	"TLSv1_2_MINOR\000"
 12174      315F325F 
 12174      4D494E4F 
 12174      5200
 12175              	.LASF130:
 12176 2a37 53534C5F 		.ascii	"SSL_ALPN_NOT_FOUND\000"
 12176      414C504E 
 12176      5F4E4F54 
 12176      5F464F55 
 12176      4E4400
 12177              	.LASF281:
 12178 2a4a 504B4353 		.ascii	"PKCS5\000"
 12178      3500
 12179              	.LASF699:
 12180 2a50 41534E5F 		.ascii	"ASN_SIG_KEY_E\000"
 12180      5349475F 
 12180      4B45595F 
 12180      4500
 12181              	.LASF596:
 12182 2a5e 636F6E6E 		.ascii	"connReset\000"
 12182      52657365 
 12182      7400
 12183              	.LASF617:
 12184 2a68 636F6E6E 		.ascii	"connectState\000"
 12184      65637453 
 12184      74617465 
 12184      00
 12185              	.LASF609:
 12186 2a75 73617665 		.ascii	"saveArrays\000"
 12186      41727261 
 12186      797300
 12187              	.LASF413:
 12188 2a80 43555256 		.ascii	"CURVE_LEN\000"
 12188      455F4C45 
 12188      4E00
 12189              	.LASF142:
 12190 2a8a 53534C5F 		.ascii	"SSL_FILETYPE_RAW\000"
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 338


 12190      46494C45 
 12190      54595045 
 12190      5F524157 
 12190      00
 12191              	.LASF441:
 12192 2a9b 53455353 		.ascii	"SESSION_FLUSH_COUNT\000"
 12192      494F4E5F 
 12192      464C5553 
 12192      485F434F 
 12192      554E5400 
 12193              	.LASF110:
 12194 2aaf 63616368 		.ascii	"cache\000"
 12194      6500
 12195              	.LASF600:
 12196 2ab5 7573696E 		.ascii	"usingCompression\000"
 12196      67436F6D 
 12196      70726573 
 12196      73696F6E 
 12196      00
 12197              	.LASF25:
 12198 2ac6 76657273 		.ascii	"version\000"
 12198      696F6E00 
 12199              	.LASF10:
 12200 2ace 63697068 		.ascii	"cipher\000"
 12200      657200
 12201              	.LASF701:
 12202 2ad5 41534E5F 		.ascii	"ASN_NTRU_KEY_E\000"
 12202      4E545255 
 12202      5F4B4559 
 12202      5F4500
 12203              	.LASF42:
 12204 2ae4 6D657468 		.ascii	"method\000"
 12204      6F6400
 12205              	.LASF178:
 12206 2aeb 756E7369 		.ascii	"unsigned int\000"
 12206      676E6564 
 12206      20696E74 
 12206      00
 12207              	.LASF55:
 12208 2af8 68617665 		.ascii	"haveRSA\000"
 12208      52534100 
 12209              	.LASF146:
 12210 2b00 53534C5F 		.ascii	"SSL_VERIFY_CLIENT_ONCE\000"
 12210      56455249 
 12210      46595F43 
 12210      4C49454E 
 12210      545F4F4E 
 12211              	.LASF484:
 12212 2b17 44544C53 		.ascii	"DTLS_TIMEOUT_INIT\000"
 12212      5F54494D 
 12212      454F5554 
 12212      5F494E49 
 12212      5400
 12213              	.LASF299:
 12214 2b29 4D41585F 		.ascii	"MAX_OCTET_STR_SZ\000"
 12214      4F435445 
 12214      545F5354 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 339


 12214      525F535A 
 12214      00
 12215              	.LASF619:
 12216 2b3a 41727261 		.ascii	"Arrays\000"
 12216      797300
 12217              	.LASF655:
 12218 2b41 57494E43 		.ascii	"WINCRYPT_E\000"
 12218      52595054 
 12218      5F4500
 12219              	.LASF724:
 12220 2b4c 4241445F 		.ascii	"BAD_PADDING_E\000"
 12220      50414444 
 12220      494E475F 
 12220      4500
 12221              	.LASF127:
 12222 2b5a 53534C5F 		.ascii	"SSL_FAILURE\000"
 12222      4641494C 
 12222      55524500 
 12223              	.LASF35:
 12224 2b66 6D617374 		.ascii	"masterSecret\000"
 12224      65725365 
 12224      63726574 
 12224      00
 12225              	.LASF39:
 12226 2b73 73696465 		.ascii	"side\000"
 12226      00
 12227              	.LASF16:
 12228 2b78 616C6572 		.ascii	"alert_history\000"
 12228      745F6869 
 12228      73746F72 
 12228      7900
 12229              	.LASF194:
 12230 2b86 73686F72 		.ascii	"short int\000"
 12230      7420696E 
 12230      7400
 12231              	.LASF254:
 12232 2b90 53484132 		.ascii	"SHA256\000"
 12232      353600
 12233              	.LASF611:
 12234 2b97 63697068 		.ascii	"cipherSuite0\000"
 12234      65725375 
 12234      69746530 
 12234      00
 12235              	.LASF305:
 12236 2ba4 4D41585F 		.ascii	"MAX_NTRU_KEY_SZ\000"
 12236      4E545255 
 12236      5F4B4559 
 12236      5F535A00 
 12237              	.LASF147:
 12238 2bb4 53534C5F 		.ascii	"SSL_VERIFY_FAIL_EXCEPT_PSK\000"
 12238      56455249 
 12238      46595F46 
 12238      41494C5F 
 12238      45584345 
 12239              	.LASF535:
 12240 2bcf 43524C5F 		.ascii	"CRL_Monitor\000"
 12240      4D6F6E69 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 340


 12240      746F7200 
 12241              	.LASF663:
 12242 2bdb 4D505F53 		.ascii	"MP_SUB_E\000"
 12242      55425F45 
 12242      00
 12243              	.LASF144:
 12244 2be4 53534C5F 		.ascii	"SSL_VERIFY_PEER\000"
 12244      56455249 
 12244      46595F50 
 12244      45455200 
 12245              	.LASF277:
 12246 2bf4 41534E5F 		.ascii	"ASN_NAME_MAX\000"
 12246      4E414D45 
 12246      5F4D4158 
 12246      00
 12247              	.LASF746:
 12248 2c01 4543435F 		.ascii	"ECC_INF_E\000"
 12248      494E465F 
 12248      4500
 12249              	.LASF435:
 12250 2c0b 4D415354 		.ascii	"MASTER_LABEL_SZ\000"
 12250      45525F4C 
 12250      4142454C 
 12250      5F535A00 
 12251              	.LASF1:
 12252 2c1b 61727261 		.ascii	"arrays\000"
 12252      797300
 12253              	.LASF222:
 12254 2c22 44594E41 		.ascii	"DYNAMIC_TYPE_CERT_MANAGER\000"
 12254      4D49435F 
 12254      54595045 
 12254      5F434552 
 12254      545F4D41 
 12255              	.LASF674:
 12256 2c3c 42554646 		.ascii	"BUFFER_E\000"
 12256      45525F45 
 12256      00
 12257              	.LASF186:
 12258 2c45 776F6C66 		.ascii	"wolfSSL_Mutex\000"
 12258      53534C5F 
 12258      4D757465 
 12258      7800
 12259              	.LASF29:
 12260 2c53 6F707469 		.ascii	"options\000"
 12260      6F6E7300 
 12261              	.LASF574:
 12262 2c5b 726D645F 		.ascii	"rmd_mac\000"
 12262      6D616300 
 12263              	.LASF301:
 12264 2c63 4D41585F 		.ascii	"MAX_PRSTR_SZ\000"
 12264      50525354 
 12264      525F535A 
 12264      00
 12265              	.LASF453:
 12266 2c70 41454144 		.ascii	"AEAD_VMIN_OFFSET\000"
 12266      5F564D49 
 12266      4E5F4F46 
ARM GAS  C:\Users\ddemidov\AppData\Local\Temp\cc8oUhi9.s 			page 341


 12266      46534554 
 12266      00
 12267              	.LASF376:
 12268 2c81 4D41585F 		.ascii	"MAX_RECORD_SIZE\000"
 12268      5245434F 
 12268      52445F53 
 12268      495A4500 
 12269              	.LASF46:
 12270 2c91 63657274 		.ascii	"certChain\000"
 12270      43686169 
 12270      6E00
 12271              	.LASF750:
 12272 2c9b 5352505F 		.ascii	"SRP_BAD_KEY_E\000"
 12272      4241445F 
 12272      4B45595F 
 12272      4500
 12273              	.LASF415:
 12274 2ca9 48414E44 		.ascii	"HANDSHAKE_HEADER_SZ\000"
 12274      5348414B 
 12274      455F4845 
 12274      41444552 
 12274      5F535A00 
 12275              	.LASF233:
 12276 2cbd 44594E41 		.ascii	"DYNAMIC_TYPE_LIBZ\000"
 12276      4D49435F 
 12276      54595045 
 12276      5F4C4942 
 12276      5A00
 12277              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
